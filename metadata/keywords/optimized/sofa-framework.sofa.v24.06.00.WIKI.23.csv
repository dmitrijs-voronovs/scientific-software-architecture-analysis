quality_attribute,sentence,source,author,repo,version,id,keyword,matched_word,match_idx,filename,wiki,url,total_similar,target_keywords,target_matched_words
Testability,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::ExceptionMessageHandler Member List . This is the complete list of members for sofa::helper::logging::ExceptionMessageHandler, including all inherited members. process(Message &m) overridesofa::helper::logging::ExceptionMessageHandlervirtual; ~MessageHandler()sofa::helper::logging::MessageHandlerinlinevirtual. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_exception_message_handler-members.html:114,log,logging,114,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_exception_message_handler-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_exception_message_handler-members.html,4,['log'],['logging']
Testability,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::ExceptionMessageHandler::ErrorMessageException Member List . This is the complete list of members for sofa::helper::logging::ExceptionMessageHandler::ErrorMessageException, including all inherited members. ErrorMessageException()sofa::helper::logging::ExceptionMessageHandler::ErrorMessageExceptioninline; what() constsofa::helper::logging::ExceptionMessageHandler::ErrorMessageExceptioninlinevirtual. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_exception_message_handler_1_1_error_message_exception-members.html:114,log,logging,114,api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_exception_message_handler_1_1_error_message_exception-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_exception_message_handler_1_1_error_message_exception-members.html,4,['log'],['logging']
Testability,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::FileInfo Member List . This is the complete list of members for sofa::helper::logging::FileInfo, including all inherited members. FileInfo(const char *f, int l)sofa::helper::logging::FileInfoinline; FileInfo()sofa::helper::logging::FileInfoinlineprotected; filenamesofa::helper::logging::FileInfo; linesofa::helper::logging::FileInfo; SPtr typedefsofa::helper::logging::FileInfo. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info-members.html:114,log,logging,114,api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info-members.html,7,['log'],['logging']
Testability,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::FileInfoOwningFilename Member List . This is the complete list of members for sofa::helper::logging::FileInfoOwningFilename, including all inherited members. FileInfo(const char *f, int l)sofa::helper::logging::FileInfoinline; FileInfo()sofa::helper::logging::FileInfoinlineprotected; FileInfoOwningFilename(const char *f, int l)sofa::helper::logging::FileInfoOwningFilenameinline; FileInfoOwningFilename(const std::string &f, int l)sofa::helper::logging::FileInfoOwningFilenameinline; filenamesofa::helper::logging::FileInfo; linesofa::helper::logging::FileInfo; SPtr typedefsofa::helper::logging::FileInfo; ~FileInfoOwningFilename()sofa::helper::logging::FileInfoOwningFilenameinline. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info_owning_filename-members.html:114,log,logging,114,api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info_owning_filename-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info_owning_filename-members.html,10,['log'],['logging']
Testability,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::FileMessageHandler Member List . This is the complete list of members for sofa::helper::logging::FileMessageHandler, including all inherited members. FileMessageHandler(const char *filename, MessageFormatter *formatter=nullptr)sofa::helper::logging::FileMessageHandler; isValid()sofa::helper::logging::FileMessageHandler; process(Message &m) overridesofa::helper::logging::FileMessageHandlervirtual; ~FileMessageHandler() overridesofa::helper::logging::FileMessageHandler; ~MessageHandler()sofa::helper::logging::MessageHandlerinlinevirtual. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_file_message_handler-members.html:114,log,logging,114,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_file_message_handler-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_file_message_handler-members.html,7,['log'],['logging']
Testability,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::MainConsoleMessageHandler Member List . This is the complete list of members for sofa::helper::logging::MainConsoleMessageHandler, including all inherited members. getInstance()sofa::helper::logging::MainConsoleMessageHandlerstatic. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_main_console_message_handler-members.html:114,log,logging,114,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_main_console_message_handler-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_main_console_message_handler-members.html,3,['log'],['logging']
Testability,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::MainTracyMessageHandler Member List . This is the complete list of members for sofa::helper::logging::MainTracyMessageHandler, including all inherited members. getInstance()sofa::helper::logging::MainTracyMessageHandlerstatic. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_main_tracy_message_handler-members.html:114,log,logging,114,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_main_tracy_message_handler-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_main_tracy_message_handler-members.html,3,['log'],['logging']
Testability,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::Message Member List . This is the complete list of members for sofa::helper::logging::Message, including all inherited members. Advice enum valuesofa::helper::logging::Message; AnyTypessofa::helper::logging::Messagestatic; CEmpty enum valuesofa::helper::logging::Message; Class enum namesofa::helper::logging::Message; ClassCount enum valuesofa::helper::logging::Message; componentInfo() constsofa::helper::logging::Messageinline; context() constsofa::helper::logging::Messageinline; Deprecated enum valuesofa::helper::logging::Message; Dev enum valuesofa::helper::logging::Message; empty() constsofa::helper::logging::Message; emptyMsgsofa::helper::logging::Messagestatic; Error enum valuesofa::helper::logging::Message; Fatal enum valuesofa::helper::logging::Message; fileInfo() constsofa::helper::logging::Messageinline; Info enum valuesofa::helper::logging::Message; Log enum valuesofa::helper::logging::Message; m_classsofa::helper::logging::Messageprotected; m_componentinfosofa::helper::logging::Messageprotected; m_fileInfosofa::helper::logging::Messageprotected; m_idsofa::helper::logging::Messageprotected; m_streamsofa::helper::logging::Messageprotected; m_typesofa::helper::logging::Messageprotected; message() constsofa::helper::logging::Messageinline; Message()sofa::helper::logging::Messageinline; Message(const Message &msg)sofa::helper::logging::Message; Message(Class mclass, Type type, const ComponentInfo::SPtr &=ComponentInfo::SPtr(), const FileInfo::SPtr &fileInfo=EmptyFileInfo)sofa::helper::logging::Message; messageAsString() constsofa::helper::logging::Messageinline; operator<<(const T &x)sofa::helper::logging::Messageinline; operator<<(const FileInfo::SPtr &fi)sofa::helper::logging::Message; operator=(const Message &msg)sofa::helper::logging::Message; Runtime enum valuesofa::helper::logging::Message; sender() constsofa::helper::logging::Messagei",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_message-members.html:114,log,logging,114,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_message-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_message-members.html,2,['log'],['logging']
Testability,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::MessageDispatcher Member List . This is the complete list of members for sofa::helper::logging::MessageDispatcher, including all inherited members. addHandler(MessageHandler *o)sofa::helper::logging::MessageDispatcherstatic; advice(Message::Class mclass, const ComponentInfo::SPtr &cinfo, const FileInfo::SPtr &fileInfo=EmptyFileInfo)sofa::helper::logging::MessageDispatcherstatic; clearHandlers()sofa::helper::logging::MessageDispatcherstatic; deprecated(Message::Class mclass, const ComponentInfo::SPtr &cinfo, const FileInfo::SPtr &fileInfo=EmptyFileInfo)sofa::helper::logging::MessageDispatcherstatic; error(Message::Class mclass, const ComponentInfo::SPtr &cinfo, const FileInfo::SPtr &fileInfo=EmptyFileInfo)sofa::helper::logging::MessageDispatcherstatic; fatal(Message::Class mclass, const ComponentInfo::SPtr &cinfo, const FileInfo::SPtr &fileInfo=EmptyFileInfo)sofa::helper::logging::MessageDispatcherstatic; getHandlers()sofa::helper::logging::MessageDispatcherstatic; info(Message::Class mclass, const ComponentInfo::SPtr &cinfo, const FileInfo::SPtr &fileInfo=EmptyFileInfo)sofa::helper::logging::MessageDispatcherstatic; log(Message::Class mclass, Message::Type type, const ComponentInfo::SPtr &cinfo, const FileInfo::SPtr &fileInfo=EmptyFileInfo)sofa::helper::logging::MessageDispatcherstatic; null()sofa::helper::logging::MessageDispatcherinlinestatic; process(sofa::helper::logging::Message &m)sofa::helper::logging::MessageDispatcherstatic; rmHandler(MessageHandler *o)sofa::helper::logging::MessageDispatcherstatic; warning(Message::Class mclass, const ComponentInfo::SPtr &cinfo, const FileInfo::SPtr &fileInfo=EmptyFileInfo)sofa::helper::logging::MessageDispatcherstatic. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_message_dispatcher-members.html:114,log,logging,114,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_message_dispatcher-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_message_dispatcher-members.html,17,['log'],"['log', 'logging']"
Testability,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::MessageDispatcher::LoggerStream Member List . This is the complete list of members for sofa::helper::logging::MessageDispatcher::LoggerStream, including all inherited members. getMessage() constsofa::helper::logging::MessageDispatcher::LoggerStreaminline; LoggerStream(const LoggerStream &s)sofa::helper::logging::MessageDispatcher::LoggerStreaminline; LoggerStream(Message::Class mclass, Message::Type type, const ComponentInfo::SPtr &sender, const FileInfo::SPtr &fileInfo)sofa::helper::logging::MessageDispatcher::LoggerStream; operator<<(const T &x)sofa::helper::logging::MessageDispatcher::LoggerStreaminline; ~LoggerStream()sofa::helper::logging::MessageDispatcher::LoggerStream. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_message_dispatcher_1_1_logger_stream-members.html:114,log,logging,114,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_message_dispatcher_1_1_logger_stream-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_message_dispatcher_1_1_logger_stream-members.html,7,['log'],['logging']
Testability,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::MessageDispatcher::NullLoggerStream Member List . This is the complete list of members for sofa::helper::logging::MessageDispatcher::NullLoggerStream, including all inherited members. getInstance()sofa::helper::logging::MessageDispatcher::NullLoggerStreaminlineprotectedstatic; MessageDispatcher classsofa::helper::logging::MessageDispatcher::NullLoggerStreamfriend; operator<<(const T &) constsofa::helper::logging::MessageDispatcher::NullLoggerStreaminline. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_message_dispatcher_1_1_null_logger_stream-members.html:114,log,logging,114,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_message_dispatcher_1_1_null_logger_stream-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_message_dispatcher_1_1_null_logger_stream-members.html,5,['log'],['logging']
Testability,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::MessageDispatcherImpl Member List . This is the complete list of members for sofa::helper::logging::MessageDispatcherImpl, including all inherited members. addHandler(MessageHandler *o)sofa::helper::logging::MessageDispatcherImplinline; clearHandlers()sofa::helper::logging::MessageDispatcherImplinline; getHandlers()sofa::helper::logging::MessageDispatcherImplinline; getMutex()sofa::helper::logging::MessageDispatcherImplinline; m_messageHandlerssofa::helper::logging::MessageDispatcherImpl; m_mutexsofa::helper::logging::MessageDispatcherImpl; process(sofa::helper::logging::Message &m)sofa::helper::logging::MessageDispatcherImplinline; rmHandler(MessageHandler *o)sofa::helper::logging::MessageDispatcherImplinline. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_message_dispatcher_impl-members.html:114,log,logging,114,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_message_dispatcher_impl-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_message_dispatcher_impl-members.html,11,['log'],['logging']
Testability,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::MessageFormatter Member List . This is the complete list of members for sofa::helper::logging::MessageFormatter, including all inherited members. formatMessage(const Message &m, std::ostream &out)=0sofa::helper::logging::MessageFormatterpure virtual; getPrefixText(unsigned int type) constsofa::helper::logging::MessageFormatterprotectedvirtual; MessageFormatter()sofa::helper::logging::MessageFormatterinlineprotected; setColor(std::ostream &stream, unsigned int type) constsofa::helper::logging::MessageFormatterprotectedvirtual. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_message_formatter-members.html:114,log,logging,114,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_message_formatter-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_message_formatter-members.html,6,['log'],['logging']
Testability,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::MessageHandler Member List . This is the complete list of members for sofa::helper::logging::MessageHandler, including all inherited members. process(Message &m)=0sofa::helper::logging::MessageHandlerpure virtual; ~MessageHandler()sofa::helper::logging::MessageHandlerinlinevirtual. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_message_handler-members.html:114,log,logging,114,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_message_handler-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_message_handler-members.html,4,['log'],['logging']
Testability,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::RichConsoleStyleMessageFormatter Member List . This is the complete list of members for sofa::helper::logging::RichConsoleStyleMessageFormatter, including all inherited members. formatMessage(const Message &m, std::ostream &out) overridesofa::helper::logging::RichConsoleStyleMessageFormattervirtual; getInstance()sofa::helper::logging::RichConsoleStyleMessageFormatterinlinestatic; getPrefixText(unsigned int type) constsofa::helper::logging::MessageFormatterprotectedvirtual; MessageFormatter()sofa::helper::logging::MessageFormatterinlineprotected; setColor(std::ostream &stream, unsigned int type) constsofa::helper::logging::MessageFormatterprotectedvirtual. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_rich_console_style_message_formatter-members.html:114,log,logging,114,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_rich_console_style_message_formatter-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_rich_console_style_message_formatter-members.html,7,['log'],['logging']
Testability,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::SilentMessageHandler Member List . This is the complete list of members for sofa::helper::logging::SilentMessageHandler, including all inherited members. process(Message &) overridesofa::helper::logging::SilentMessageHandlervirtual; ~MessageHandler()sofa::helper::logging::MessageHandlerinlinevirtual. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_silent_message_handler-members.html:114,log,logging,114,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_silent_message_handler-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_silent_message_handler-members.html,4,['log'],['logging']
Testability,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::SofaComponentInfo Member List . This is the complete list of members for sofa::helper::logging::SofaComponentInfo, including all inherited members. ComponentInfo()sofa::helper::logging::ComponentInfo; ComponentInfo(const std::string &name)sofa::helper::logging::ComponentInfo; m_componentsofa::helper::logging::SofaComponentInfo; m_namesofa::helper::logging::SofaComponentInfo; m_sendersofa::helper::logging::ComponentInfoprotected; name() constsofa::helper::logging::SofaComponentInfoinline; sender() constsofa::helper::logging::ComponentInfo; SofaComponentInfo(const sofa::core::objectmodel::Base *c)sofa::helper::logging::SofaComponentInfo; SPtr typedefsofa::helper::logging::ComponentInfo; toStream(std::ostream &out) constsofa::helper::logging::SofaComponentInfoinlinevirtual; ~ComponentInfo()sofa::helper::logging::ComponentInfovirtual. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_sofa_component_info-members.html:114,log,logging,114,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_sofa_component_info-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_sofa_component_info-members.html,13,['log'],['logging']
Testability,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::TracyMessageHandler Member List . This is the complete list of members for sofa::helper::logging::TracyMessageHandler, including all inherited members. process(Message &m) overridesofa::helper::logging::TracyMessageHandlervirtual; setMessageFormatter(MessageFormatter *formatter)sofa::helper::logging::TracyMessageHandler; TracyMessageHandler(MessageFormatter *formatter=nullptr)sofa::helper::logging::TracyMessageHandler; ~MessageHandler()sofa::helper::logging::MessageHandlerinlinevirtual. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_tracy_message_handler-members.html:114,log,logging,114,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_tracy_message_handler-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_tracy_message_handler-members.html,6,['log'],['logging']
Testability,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::countingmessagehandler::CountingMessageHandler Member List . This is the complete list of members for sofa::helper::logging::countingmessagehandler::CountingMessageHandler, including all inherited members. CountingMessageHandler()sofa::helper::logging::countingmessagehandler::CountingMessageHandler; getMessageCountFor(const Message::Type &type) constsofa::helper::logging::countingmessagehandler::CountingMessageHandler; process(Message &m) overridesofa::helper::logging::countingmessagehandler::CountingMessageHandlervirtual; reset()sofa::helper::logging::countingmessagehandler::CountingMessageHandler; ~CountingMessageHandler() overridesofa::helper::logging::countingmessagehandler::CountingMessageHandlerinline; ~MessageHandler()sofa::helper::logging::MessageHandlerinlinevirtual. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1countingmessagehandler_1_1_counting_message_handler-members.html:114,log,logging,114,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1countingmessagehandler_1_1_counting_message_handler-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1countingmessagehandler_1_1_counting_message_handler-members.html,8,['log'],['logging']
Testability,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::countingmessagehandler::MainCountingMessageHandler Member List . This is the complete list of members for sofa::helper::logging::countingmessagehandler::MainCountingMessageHandler, including all inherited members. getInstance()sofa::helper::logging::countingmessagehandler::MainCountingMessageHandlerstatic; getMessageCountFor(const Message::Type &type)sofa::helper::logging::countingmessagehandler::MainCountingMessageHandlerstatic; reset()sofa::helper::logging::countingmessagehandler::MainCountingMessageHandlerstatic. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1countingmessagehandler_1_1_main_counting_message_handler-members.html:114,log,logging,114,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1countingmessagehandler_1_1_main_counting_message_handler-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1countingmessagehandler_1_1_main_counting_message_handler-members.html,5,['log'],['logging']
Testability,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::loggingmessagehandler::LogMessage Member List . This is the complete list of members for sofa::helper::logging::loggingmessagehandler::LogMessage, including all inherited members. begin()sofa::helper::logging::loggingmessagehandler::LogMessageinline; end()sofa::helper::logging::loggingmessagehandler::LogMessageinline; LogMessage()sofa::helper::logging::loggingmessagehandler::LogMessageinline; size()sofa::helper::logging::loggingmessagehandler::LogMessageinline; ~LogMessage()sofa::helper::logging::loggingmessagehandler::LogMessageinline. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_log_message-members.html:114,log,logging,114,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_log_message-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_log_message-members.html,14,['log'],"['logging', 'loggingmessagehandler']"
Testability,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler Member List . This is the complete list of members for sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler, including all inherited members. activate()sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler; deactivate()sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler; getMessages() constsofa::helper::logging::loggingmessagehandler::LoggingMessageHandler; LoggingMessageHandler()sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler; process(Message &m) overridesofa::helper::logging::loggingmessagehandler::LoggingMessageHandlervirtual; reset()sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler; ~LoggingMessageHandler() overridesofa::helper::logging::loggingmessagehandler::LoggingMessageHandlerinline; ~MessageHandler()sofa::helper::logging::MessageHandlerinlinevirtual. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler-members.html:114,log,logging,114,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler-members.html,19,['log'],"['logging', 'loggingmessagehandler']"
Testability,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandler Member List . This is the complete list of members for sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandler, including all inherited members. activate()sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandlerstatic; deactivate()sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandlerstatic; getInstance()sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandlerstatic; getMessages()sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandlerstatic. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_main_logging_message_handler-members.html:114,log,logging,114,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_main_logging_message_handler-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_main_logging_message_handler-members.html,12,['log'],"['logging', 'loggingmessagehandler']"
Testability,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::percomponentloggingmessagehandler::MainPerComponentLoggingMessageHandler Member List . This is the complete list of members for sofa::helper::logging::percomponentloggingmessagehandler::MainPerComponentLoggingMessageHandler, including all inherited members. getInstance()sofa::helper::logging::percomponentloggingmessagehandler::MainPerComponentLoggingMessageHandlerstatic. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1percomponentloggingmessagehandler_1_1_main_per_component_logging_message_handler-members.html:114,log,logging,114,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1percomponentloggingmessagehandler_1_1_main_per_component_logging_message_handler-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1percomponentloggingmessagehandler_1_1_main_per_component_logging_message_handler-members.html,3,['log'],['logging']
Testability,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler Member List . This is the complete list of members for sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler, including all inherited members. PerComponentLoggingMessageHandler()sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler; process(Message &m) overridesofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandlervirtual; ~MessageHandler()sofa::helper::logging::MessageHandlerinlinevirtual; ~PerComponentLoggingMessageHandler() overridesofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandlerinline. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1percomponentloggingmessagehandler_1_1_per_component_logging_message_handler-members.html:114,log,logging,114,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1percomponentloggingmessagehandler_1_1_per_component_logging_message_handler-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1percomponentloggingmessagehandler_1_1_per_component_logging_message_handler-members.html,6,['log'],['logging']
Testability,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandler Member List . This is the complete list of members for sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandler, including all inherited members. getInstance()sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandlerstatic; removeAllFilters()sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandlerstatic; setAFilter(FilterFunction, MessageHandler *handler)sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandlerstatic. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_main_routing_message_handler-members.html:114,log,logging,114,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_main_routing_message_handler-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_main_routing_message_handler-members.html,5,['log'],['logging']
Testability,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::routingmessagehandler::RoutingMessageHandler Member List . This is the complete list of members for sofa::helper::logging::routingmessagehandler::RoutingMessageHandler, including all inherited members. process(Message &m) overridesofa::helper::logging::routingmessagehandler::RoutingMessageHandlervirtual; removeAllFilters()sofa::helper::logging::routingmessagehandler::RoutingMessageHandler; RoutingMessageHandler()sofa::helper::logging::routingmessagehandler::RoutingMessageHandler; setAFilter(FilterFunction, MessageHandler *handler)sofa::helper::logging::routingmessagehandler::RoutingMessageHandler; ~MessageHandler()sofa::helper::logging::MessageHandlerinlinevirtual; ~RoutingMessageHandler() overridesofa::helper::logging::routingmessagehandler::RoutingMessageHandlerinline. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler-members.html:114,log,logging,114,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler-members.html,8,['log'],['logging']
Testability,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::linearalgebra::testing::SparseMatrixProductInit< T > Member List . This is the complete list of members for sofa::linearalgebra::testing::SparseMatrixProductInit< T >, including all inherited members. cleanup(T &product)sofa::linearalgebra::testing::SparseMatrixProductInit< T >inlinestatic; init(T &product)sofa::linearalgebra::testing::SparseMatrixProductInit< T >inlinestatic. Generated on Mon Nov 11 2024 03:32:21 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_sparse_matrix_product_init-members.html:121,test,testing,121,api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_sparse_matrix_product_init-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_sparse_matrix_product_init-members.html,4,['test'],['testing']
Testability,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::linearalgebra::testing::TestBaseMatrix< T > Member List . This is the complete list of members for sofa::linearalgebra::testing::TestBaseMatrix< T >, including all inherited members. BaseTest()sofa::testing::BaseTest; checkAddBloc(sofa::linearalgebra::BaseMatrix::Index posRow, sofa::linearalgebra::BaseMatrix::Index posCol)sofa::linearalgebra::testing::TestBaseMatrix< T >inline; checkAddScalar()sofa::linearalgebra::testing::TestBaseMatrix< T >inline; checkResize()sofa::linearalgebra::testing::TestBaseMatrix< T >inline; epsilon()sofa::testing::NumericTest< T::Real >inlinestatic; infinity()sofa::testing::NumericTest< T::Real >inlinestatic; Inherit typedefsofa::linearalgebra::testing::TestBaseMatrix< T >; isSmall(Real r, Real ratio=1.)sofa::testing::NumericTest< T::Real >inlinestatic; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; m_modelMatrixsofa::linearalgebra::testing::TestBaseMatrix< T >protected; m_testedMatrixsofa::linearalgebra::testing::TestBaseMatrix< T >protected; Matrix typedefsofa::linearalgebra::testing::TestBaseMatrix< T >; matrixMaxDiff(const Matrix1 &m1, const Matrix2 &m2)sofa::testing::NumericTest< T::Real >inlinestatic; matrixMaxDiff(const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2)sofa::testing::NumericTest< T::Real >inlinestatic; NbColssofa::linearalgebra::testing::TestBaseMatrix< T >static; NbRowssofa::linearalgebra::testing::TestBaseMatrix< T >static; norm(float a)sofa::testing::NumericTest< T::Real >inlineprotectedstatic; norm(double a)sofa::testing::NumericTest< T::Real >inlineprotectedstatic; norm(T a)sofa::testing::NumericTest< T::Real >inlineprotectedstatic; NumericTest()sofa::testing::NumericTest< T::Real >inline; onSetUp() overridesofa::linearalgebra::testing::TestBaseMatrix< T >inlinevirtual; onTearDown() overridesofa::linearalgebra::testing::TestBaseMatrix< T >inlinevirtual; Real typedefsofa::linearalgebra::t",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1testing_1_1_test_base_matrix-members.html:121,test,testing,121,api/master/sofa/html/classsofa_1_1linearalgebra_1_1testing_1_1_test_base_matrix-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1testing_1_1_test_base_matrix-members.html,9,['test'],['testing']
Testability,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::linearalgebra::testing::TestBaseMatrixTraits< TMatrix, TNbRows, TNbCols, TReal > Member List . This is the complete list of members for sofa::linearalgebra::testing::TestBaseMatrixTraits< TMatrix, TNbRows, TNbCols, TReal >, including all inherited members. Matrix typedefsofa::linearalgebra::testing::TestBaseMatrixTraits< TMatrix, TNbRows, TNbCols, TReal >; NbColssofa::linearalgebra::testing::TestBaseMatrixTraits< TMatrix, TNbRows, TNbCols, TReal >static; NbRowssofa::linearalgebra::testing::TestBaseMatrixTraits< TMatrix, TNbRows, TNbCols, TReal >static; Real typedefsofa::linearalgebra::testing::TestBaseMatrixTraits< TMatrix, TNbRows, TNbCols, TReal >. Generated on Mon Nov 11 2024 03:32:17 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_base_matrix_traits-members.html:121,test,testing,121,api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_base_matrix_traits-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_base_matrix_traits-members.html,6,['test'],['testing']
Testability,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::linearalgebra::testing::TestSparseMatrixProduct< T > Member List . This is the complete list of members for sofa::linearalgebra::testing::TestSparseMatrixProduct< T >, including all inherited members. Base typedefsofa::linearalgebra::testing::TestSparseMatrixProduct< T >; BaseTest()sofa::testing::BaseTest; checkMatrix(typename LHSMatrix::Index nbRowsA, typename LHSMatrix::Index nbColsA, typename RHSMatrix::Index nbColsB, Real sparsity)sofa::linearalgebra::testing::TestSparseMatrixProduct< T >inline; compareEigenSparseMatrix(const Eigen::SparseMatrix< _AScalar, _AOptions, _AStorageIndex > &A, const Eigen::SparseMatrix< _BScalar, _BOptions, _BStorageIndex > &B)sofa::testing::SparseMatrixTest< T::LhsScalar >inlinestatic; compareSparseMatrix(const Eigen::SparseMatrix< _AScalar, _AOptions, _AStorageIndex > &A, const Eigen::SparseMatrix< _BScalar, _BOptions, _BStorageIndex > &B)sofa::linearalgebra::testing::TestSparseMatrixProduct< T >inlinestatic; SparseMatrixTest< T::LhsScalar >::compareSparseMatrix(const Eigen::SparseMatrix< _AScalar, _AOptions, _AStorageIndex > &A, const Eigen::SparseMatrix< _BScalar, _BOptions, _BStorageIndex > &B)sofa::testing::SparseMatrixTest< T::LhsScalar >inlinestatic; copyFromEigen(Eigen::SparseMatrix< _DstScalar, _DstOptions, _DstStorageIndex > &dst, const Eigen::SparseMatrix< _SrcScalar, _SrcOptions, _SrcStorageIndex > &src)sofa::linearalgebra::testing::TestSparseMatrixProduct< T >inlinestatic; copyFromEigen(linearalgebra::BaseMatrix &dst, const Eigen::SparseMatrix< TReal > &src)sofa::linearalgebra::testing::TestSparseMatrixProduct< T >inlinestatic; SparseMatrixTest< T::LhsScalar >::copyFromEigen(Eigen::SparseMatrix< _DstScalar, _DstOptions, _DstStorageIndex > &dst, const Eigen::SparseMatrix< _SrcScalar, _SrcOptions, _SrcStorageIndex > &src)sofa::testing::SparseMatrixTest< T::LhsScalar >inlinestatic; SparseMatrixTest< T::LhsScalar >::copyF",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product-members.html:121,test,testing,121,api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product-members.html,2,['test'],['testing']
Testability,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::testing::BaseSimulationTest Member List . This is the complete list of members for sofa::testing::BaseSimulationTest, including all inherited members. BaseSimulationTest()sofa::testing::BaseSimulationTest; BaseTest()sofa::testing::BaseTest; importPlugin(const std::string &name)sofa::testing::BaseSimulationTest; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; onSetUp()sofa::testing::BaseTestinlinevirtual; onTearDown()sofa::testing::BaseTestinlinevirtual; seedsofa::testing::BaseTeststatic; ~BaseTest() overridesofa::testing::BaseTest. Generated on Mon Nov 11 2024 03:34:35 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1testing_1_1_base_simulation_test-members.html:106,test,testing,106,api/master/sofa/html/classsofa_1_1testing_1_1_base_simulation_test-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1testing_1_1_base_simulation_test-members.html,11,['test'],['testing']
Testability,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::testing::BaseSimulationTest::SceneInstance Member List . This is the complete list of members for sofa::testing::BaseSimulationTest::SceneInstance, including all inherited members. initScene()sofa::testing::BaseSimulationTest::SceneInstance; LoadFromFile(const std::string &filename)sofa::testing::BaseSimulationTest::SceneInstancestatic; loadSceneFile(const std::string &filename)sofa::testing::BaseSimulationTest::SceneInstance; rootsofa::testing::BaseSimulationTest::SceneInstance; SceneInstance(const std::string &rootname=""root"")sofa::testing::BaseSimulationTest::SceneInstance; SceneInstance(const std::string &type, const std::string &memory)sofa::testing::BaseSimulationTest::SceneInstance; simulate(const double timestep)sofa::testing::BaseSimulationTest::SceneInstance; ~SceneInstance()sofa::testing::BaseSimulationTest::SceneInstance. Generated on Mon Nov 11 2024 03:34:35 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1testing_1_1_base_simulation_test_1_1_scene_instance-members.html:106,test,testing,106,api/master/sofa/html/classsofa_1_1testing_1_1_base_simulation_test_1_1_scene_instance-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1testing_1_1_base_simulation_test_1_1_scene_instance-members.html,10,['test'],['testing']
Testability,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::testing::BaseTest Member List . This is the complete list of members for sofa::testing::BaseTest, including all inherited members. BaseTest()sofa::testing::BaseTest; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; onSetUp()sofa::testing::BaseTestinlinevirtual; onTearDown()sofa::testing::BaseTestinlinevirtual; seedsofa::testing::BaseTeststatic; ~BaseTest() overridesofa::testing::BaseTest. Generated on Mon Nov 11 2024 03:34:35 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1testing_1_1_base_test-members.html:106,test,testing,106,api/master/sofa/html/classsofa_1_1testing_1_1_base_test-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1testing_1_1_base_test-members.html,9,['test'],['testing']
Testability,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::testing::ExpectMessage Member List . This is the complete list of members for sofa::testing::ExpectMessage, including all inherited members. ExpectMessage(helper::logging::Message::Type t, const char *filename=""unknown"", int lineno=0)sofa::testing::ExpectMessage; ~ExpectMessage()sofa::testing::ExpectMessagevirtual. Generated on Mon Nov 11 2024 03:35:59 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1testing_1_1_expect_message-members.html:106,test,testing,106,api/master/sofa/html/classsofa_1_1testing_1_1_expect_message-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1testing_1_1_expect_message-members.html,5,"['log', 'test']","['logging', 'testing']"
Testability,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::testing::GtestMessageFrame Member List . This is the complete list of members for sofa::testing::GtestMessageFrame, including all inherited members. finalize()sofa::testing::GtestMessageFrameinlinevirtual; m_filenamesofa::testing::GtestMessageFrame; m_linenosofa::testing::GtestMessageFrame; m_typesofa::testing::GtestMessageFrame; process(Message &)sofa::testing::GtestMessageFrameinlinevirtual; ~GtestMessageFrame()sofa::testing::GtestMessageFrameinlinevirtual. Generated on Mon Nov 11 2024 03:35:59 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1testing_1_1_gtest_message_frame-members.html:106,test,testing,106,api/master/sofa/html/classsofa_1_1testing_1_1_gtest_message_frame-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1testing_1_1_gtest_message_frame-members.html,8,['test'],['testing']
Testability,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::testing::GtestMessageFrameFailure Member List . This is the complete list of members for sofa::testing::GtestMessageFrameFailure, including all inherited members. finalize()sofa::testing::GtestMessageFrameinlinevirtual; GtestMessageFrameFailure(Message::Type type, const char *filename, int lineno)sofa::testing::GtestMessageFrameFailure; m_filenamesofa::testing::GtestMessageFrame; m_linenosofa::testing::GtestMessageFrame; m_typesofa::testing::GtestMessageFrame; process(Message &message) overridesofa::testing::GtestMessageFrameFailurevirtual; ~GtestMessageFrame()sofa::testing::GtestMessageFrameinlinevirtual. Generated on Mon Nov 11 2024 03:35:59 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1testing_1_1_gtest_message_frame_failure-members.html:106,test,testing,106,api/master/sofa/html/classsofa_1_1testing_1_1_gtest_message_frame_failure-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1testing_1_1_gtest_message_frame_failure-members.html,9,['test'],['testing']
Testability,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::testing::GtestMessageFrameFailureWhenMissing Member List . This is the complete list of members for sofa::testing::GtestMessageFrameFailureWhenMissing, including all inherited members. finalize() overridesofa::testing::GtestMessageFrameFailureWhenMissingvirtual; GtestMessageFrameFailureWhenMissing(Message::Type type, const char *filename, int lineno)sofa::testing::GtestMessageFrameFailureWhenMissing; m_filenamesofa::testing::GtestMessageFrame; m_gotMessagesofa::testing::GtestMessageFrameFailureWhenMissing; m_linenosofa::testing::GtestMessageFrame; m_typesofa::testing::GtestMessageFrame; process(Message &message) overridesofa::testing::GtestMessageFrameFailureWhenMissingvirtual; ~GtestMessageFrame()sofa::testing::GtestMessageFrameinlinevirtual. Generated on Mon Nov 11 2024 03:35:59 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1testing_1_1_gtest_message_frame_failure_when_missing-members.html:106,test,testing,106,api/master/sofa/html/classsofa_1_1testing_1_1_gtest_message_frame_failure_when_missing-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1testing_1_1_gtest_message_frame_failure_when_missing-members.html,10,['test'],['testing']
Testability,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::testing::GtestMessageFrameIgnore Member List . This is the complete list of members for sofa::testing::GtestMessageFrameIgnore, including all inherited members. finalize()sofa::testing::GtestMessageFrameinlinevirtual; GtestMessageFrameIgnore(Message::Type type)sofa::testing::GtestMessageFrameIgnore; m_filenamesofa::testing::GtestMessageFrame; m_linenosofa::testing::GtestMessageFrame; m_typesofa::testing::GtestMessageFrame; process(Message &)sofa::testing::GtestMessageFrameinlinevirtual; ~GtestMessageFrame()sofa::testing::GtestMessageFrameinlinevirtual. Generated on Mon Nov 11 2024 03:35:59 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1testing_1_1_gtest_message_frame_ignore-members.html:106,test,testing,106,api/master/sofa/html/classsofa_1_1testing_1_1_gtest_message_frame_ignore-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1testing_1_1_gtest_message_frame_ignore-members.html,9,['test'],['testing']
Testability,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::testing::GtestMessageHandler Member List . This is the complete list of members for sofa::testing::GtestMessageHandler, including all inherited members. GtestMessageHandler(Message::Class mclass)sofa::testing::GtestMessageHandler; popFrame(Message::Type type)sofa::testing::GtestMessageHandler; process(Message &m) overridesofa::testing::GtestMessageHandlervirtual; pushFrame(Message::Type type, GtestMessageFrame *frame)sofa::testing::GtestMessageHandler; ~ GtestMessageHandler() overridesofa::testing::GtestMessageHandler; ~MessageHandler()sofa::helper::logging::MessageHandlerinlinevirtual. Generated on Mon Nov 11 2024 03:35:59 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1testing_1_1_gtest_message_handler-members.html:106,test,testing,106,api/master/sofa/html/classsofa_1_1testing_1_1_gtest_message_handler-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1testing_1_1_gtest_message_handler-members.html,8,"['log', 'test']","['logging', 'testing']"
Testability,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::testing::IgnoreMessage Member List . This is the complete list of members for sofa::testing::IgnoreMessage, including all inherited members. IgnoreMessage(helper::logging::Message::Type t)sofa::testing::IgnoreMessage; ~IgnoreMessage()sofa::testing::IgnoreMessagevirtual. Generated on Mon Nov 11 2024 03:35:59 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1testing_1_1_ignore_message-members.html:106,test,testing,106,api/master/sofa/html/classsofa_1_1testing_1_1_ignore_message-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1testing_1_1_ignore_message-members.html,5,"['log', 'test']","['logging', 'testing']"
Testability,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::testing::LinearCongruentialRandomGenerator Member List . This is the complete list of members for sofa::testing::LinearCongruentialRandomGenerator, including all inherited members. generateInRange(double rmin, double rmax)sofa::testing::LinearCongruentialRandomGenerator; generateInRange(float rmin, float rmax)sofa::testing::LinearCongruentialRandomGenerator; generateInUnitRange()sofa::testing::LinearCongruentialRandomGeneratorinline; generateRandom()sofa::testing::LinearCongruentialRandomGenerator; LinearCongruentialRandomGenerator(unsigned int initialSeed)sofa::testing::LinearCongruentialRandomGeneratorexplicit. Generated on Mon Nov 11 2024 03:34:35 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1testing_1_1_linear_congruential_random_generator-members.html:106,test,testing,106,api/master/sofa/html/classsofa_1_1testing_1_1_linear_congruential_random_generator-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1testing_1_1_linear_congruential_random_generator-members.html,7,['test'],['testing']
Testability,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::testing::MainGtestMessageHandler Member List . This is the complete list of members for sofa::testing::MainGtestMessageHandler, including all inherited members. getInstance()sofa::testing::MainGtestMessageHandlerstatic. Generated on Mon Nov 11 2024 03:35:59 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1testing_1_1_main_gtest_message_handler-members.html:106,test,testing,106,api/master/sofa/html/classsofa_1_1testing_1_1_main_gtest_message_handler-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1testing_1_1_main_gtest_message_handler-members.html,3,['test'],['testing']
Testability,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::testing::MainGtestMessageHandlerPrivate Member List . This is the complete list of members for sofa::testing::MainGtestMessageHandlerPrivate, including all inherited members. getInstance()sofa::testing::MainGtestMessageHandlerPrivatestatic; popFrame(Message::Type type)sofa::testing::MainGtestMessageHandlerPrivatestatic; pushFrame(Message::Type type, GtestMessageFrame *frame)sofa::testing::MainGtestMessageHandlerPrivatestatic. Generated on Mon Nov 11 2024 03:35:59 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1testing_1_1_main_gtest_message_handler_private-members.html:106,test,testing,106,api/master/sofa/html/classsofa_1_1testing_1_1_main_gtest_message_handler_private-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1testing_1_1_main_gtest_message_handler_private-members.html,5,['test'],['testing']
Testability,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::testing::MessageAsTestFailure Member List . This is the complete list of members for sofa::testing::MessageAsTestFailure, including all inherited members. MessageAsTestFailure(helper::logging::Message::Type t, const char *filename=""unknown"", int lineno=0)sofa::testing::MessageAsTestFailure; ~MessageAsTestFailure()sofa::testing::MessageAsTestFailurevirtual. Generated on Mon Nov 11 2024 03:35:59 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1testing_1_1_message_as_test_failure-members.html:106,test,testing,106,api/master/sofa/html/classsofa_1_1testing_1_1_message_as_test_failure-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1testing_1_1_message_as_test_failure-members.html,5,"['log', 'test']","['logging', 'testing']"
Testability,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::testing::NumericTest< _Real > Member List . This is the complete list of members for sofa::testing::NumericTest< _Real >, including all inherited members. BaseTest()sofa::testing::BaseTest; epsilon()sofa::testing::NumericTest< _Real >inlinestatic; infinity()sofa::testing::NumericTest< _Real >inlinestatic; isSmall(Real r, Real ratio=1.)sofa::testing::NumericTest< _Real >inlinestatic; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; matrixMaxDiff(const Matrix1 &m1, const Matrix2 &m2)sofa::testing::NumericTest< _Real >inlinestatic; matrixMaxDiff(const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2)sofa::testing::NumericTest< _Real >inlinestatic; norm(float a)sofa::testing::NumericTest< _Real >inlineprotectedstatic; norm(double a)sofa::testing::NumericTest< _Real >inlineprotectedstatic; norm(T a)sofa::testing::NumericTest< _Real >inlineprotectedstatic; NumericTest()sofa::testing::NumericTest< _Real >inline; onSetUp()sofa::testing::BaseTestinlinevirtual; onTearDown()sofa::testing::BaseTestinlinevirtual; Real typedefsofa::testing::NumericTest< _Real >; seedsofa::testing::BaseTeststatic; vectorMaxAbs(const Container &c)sofa::testing::NumericTest< _Real >inline; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const Vector2 &m2)sofa::testing::NumericTest< _Real >inlinestatic; vectorMaxDiff(const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2)sofa::testing::NumericTest< _Real >inlinestatic; vectorMaxDiff(const Container1 &c1, const Container2 &c2)sofa::testing::NumericTest< _Real >inline; ~BaseTest() overridesofa::testing::BaseTest. Generated on Mon Nov 11 2024 03:34:35 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test-members.html:106,test,testing,106,api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test-members.html,23,['test'],['testing']
Testability,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::testing::SparseMatrixTest< TReal > Member List . This is the complete list of members for sofa::testing::SparseMatrixTest< TReal >, including all inherited members. BaseTest()sofa::testing::BaseTest; compareEigenSparseMatrix(const Eigen::SparseMatrix< _AScalar, _AOptions, _AStorageIndex > &A, const Eigen::SparseMatrix< _BScalar, _BOptions, _BStorageIndex > &B)sofa::testing::SparseMatrixTest< TReal >inlinestatic; compareSparseMatrix(const Eigen::SparseMatrix< _AScalar, _AOptions, _AStorageIndex > &A, const Eigen::SparseMatrix< _BScalar, _BOptions, _BStorageIndex > &B)sofa::testing::SparseMatrixTest< TReal >inlinestatic; copyFromEigen(Eigen::SparseMatrix< _DstScalar, _DstOptions, _DstStorageIndex > &dst, const Eigen::SparseMatrix< _SrcScalar, _SrcOptions, _SrcStorageIndex > &src)sofa::testing::SparseMatrixTest< TReal >inlinestatic; copyFromEigen(linearalgebra::BaseMatrix &dst, const Eigen::SparseMatrix< TReal > &src)sofa::testing::SparseMatrixTest< TReal >inlinestatic; epsilon()sofa::testing::NumericTest< SReal >inlinestatic; generateFromTriplets(Eigen::SparseMatrix< TReal > &eigenMatrix, InputIt first, InputIt last, Eigen::Index nbRows, Eigen::Index nbCols)sofa::testing::SparseMatrixTest< TReal >inlinestatic; generateRandomSparseMatrix(Eigen::SparseMatrix< TReal, EigenSparseMatrixOptions > &eigenMatrix, Eigen::Index nbRows, Eigen::Index nbCols, TReal sparsity)sofa::testing::SparseMatrixTest< TReal >inlinestatic; infinity()sofa::testing::NumericTest< SReal >inlinestatic; isSmall(Real r, Real ratio=1.)sofa::testing::NumericTest< SReal >inlinestatic; m_errorsofa::testing::BaseTest; m_fatalsofa::testing::BaseTest; matrixMaxDiff(const Matrix1 &m1, const Matrix2 &m2)sofa::testing::NumericTest< SReal >inlinestatic; matrixMaxDiff(const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2)sofa::testing::NumericTest< SReal >inlinestatic; norm(float a)sofa::testing::NumericT",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test-members.html:106,test,testing,106,api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test-members.html,11,['test'],['testing']
Testability,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::testing::data_traits< _DataTypes > Member List . This is the complete list of members for sofa::testing::data_traits< _DataTypes >, including all inherited members. Coord typedefsofa::testing::data_traits< _DataTypes >; coord_total_size enum valuesofa::testing::data_traits< _DataTypes >; DataTypes typedefsofa::testing::data_traits< _DataTypes >; Deriv typedefsofa::testing::data_traits< _DataTypes >; deriv_total_size enum valuesofa::testing::data_traits< _DataTypes >; Index typedefsofa::testing::data_traits< _DataTypes >; Real typedefsofa::testing::data_traits< _DataTypes >; spatial_dimensions enum valuesofa::testing::data_traits< _DataTypes >; VecCoord typedefsofa::testing::data_traits< _DataTypes >; VecCoord_to_Vector(VectorOfScalars &vec, const VecCoord &vcoord)sofa::testing::data_traits< _DataTypes >inlinestatic; VecDeriv typedefsofa::testing::data_traits< _DataTypes >; VecDeriv_to_Vector(VectorOfScalars &vec, const VecDeriv vderiv)sofa::testing::data_traits< _DataTypes >inlinestatic. Generated on Mon Nov 11 2024 03:34:59 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1data__traits-members.html:106,test,testing,106,api/master/sofa/html/structsofa_1_1testing_1_1data__traits-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1data__traits-members.html,14,['test'],['testing']
Testability,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::testing::setRotWrapper< DataTypes, 2, false > Member List . This is the complete list of members for sofa::testing::setRotWrapper< DataTypes, 2, false >, including all inherited members. setRot(typename DataTypes::Coord &coord, const sofa::type::Quat< SReal > &rot)sofa::testing::setRotWrapper< DataTypes, 2, false >inlinestatic. Generated on Mon Nov 11 2024 03:35:44 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1set_rot_wrapper_3_01_data_types_00_012_00_01false_01_4-members.html:106,test,testing,106,api/master/sofa/html/structsofa_1_1testing_1_1set_rot_wrapper_3_01_data_types_00_012_00_01false_01_4-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1set_rot_wrapper_3_01_data_types_00_012_00_01false_01_4-members.html,3,['test'],['testing']
Testability,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::testing::setRotWrapper< DataTypes, N, false > Member List . This is the complete list of members for sofa::testing::setRotWrapper< DataTypes, N, false >, including all inherited members. setRot(typename DataTypes::Coord &coord, const sofa::type::Quat< SReal > &rot)sofa::testing::setRotWrapper< DataTypes, N, false >inlinestatic. Generated on Mon Nov 11 2024 03:35:59 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1set_rot_wrapper_3_01_data_types_00_01_n_00_01false_01_4-members.html:106,test,testing,106,api/master/sofa/html/structsofa_1_1testing_1_1set_rot_wrapper_3_01_data_types_00_01_n_00_01false_01_4-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1set_rot_wrapper_3_01_data_types_00_01_n_00_01false_01_4-members.html,3,['test'],['testing']
Testability,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::testing::setRotWrapper< DataTypes, N, isVector > Member List . This is the complete list of members for sofa::testing::setRotWrapper< DataTypes, N, isVector >, including all inherited members. setRot(typename DataTypes::Coord &coord, const sofa::type::Quat< SReal > &rot)sofa::testing::setRotWrapper< DataTypes, N, isVector >static. Generated on Mon Nov 11 2024 03:35:14 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1set_rot_wrapper-members.html:106,test,testing,106,api/master/sofa/html/structsofa_1_1testing_1_1set_rot_wrapper-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1set_rot_wrapper-members.html,3,['test'],['testing']
Testability,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::testing::setRotWrapper< DataTypes, N, true > Member List . This is the complete list of members for sofa::testing::setRotWrapper< DataTypes, N, true >, including all inherited members. setRot(typename DataTypes::Coord &, const sofa::type::Quat< SReal > &)sofa::testing::setRotWrapper< DataTypes, N, true >inlinestatic. Generated on Mon Nov 11 2024 03:35:29 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1set_rot_wrapper_3_01_data_types_00_01_n_00_01true_01_4-members.html:106,test,testing,106,api/master/sofa/html/structsofa_1_1testing_1_1set_rot_wrapper_3_01_data_types_00_01_n_00_01true_01_4-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1set_rot_wrapper_3_01_data_types_00_01_n_00_01true_01_4-members.html,3,['test'],['testing']
Testability,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::type::trait::is_container< T > Member List . This is the complete list of members for sofa::type::trait::is_container< T >, including all inherited members. test(A *pt, A const *cpt=nullptr, decltype(pt->begin()) *=nullptr, decltype(pt->end()) *=nullptr, decltype(cpt->begin()) *=nullptr, decltype(cpt->end()) *=nullptr, typename A::iterator *=nullptr, typename A::const_iterator *=nullptr, typename A::value_type *=nullptr)sofa::type::trait::is_container< T >inlinestatic; test(...)sofa::type::trait::is_container< T >inlinestatic; test_type typedefsofa::type::trait::is_container< T >; valuesofa::type::trait::is_container< T >static. Generated on Mon Nov 11 2024 03:36:34 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1type_1_1trait_1_1is__container-members.html:263,test,test,263,api/master/sofa/html/structsofa_1_1type_1_1trait_1_1is__container-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1type_1_1trait_1_1is__container-members.html,2,['test'],['test']
Testability,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::type::trait::is_vector< T > Member List . This is the complete list of members for sofa::type::trait::is_vector< T >, including all inherited members. test(A *pt, A const *cpt=nullptr, decltype(pt->begin()) *=nullptr, decltype(pt->end()) *=nullptr, decltype(cpt->begin()) *=nullptr, decltype(cpt->end()) *=nullptr, typename std::decay< decltype((*pt)[0])>::type *=nullptr, typename A::iterator *=nullptr, typename A::const_iterator *=nullptr, typename A::value_type *=nullptr)sofa::type::trait::is_vector< T >inlinestatic; test(...)sofa::type::trait::is_vector< T >inlinestatic; test_type typedefsofa::type::trait::is_vector< T >; valuesofa::type::trait::is_vector< T >static. Generated on Mon Nov 11 2024 03:36:34 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1type_1_1trait_1_1is__vector-members.html:257,test,test,257,api/master/sofa/html/structsofa_1_1type_1_1trait_1_1is__vector-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1type_1_1trait_1_1is__vector-members.html,2,['test'],['test']
Testability,"﻿. SOFA API: sofa Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Namespaces |; Classes |; Typedefs |; Functions |; Variables . sofa Namespace Reference . Namespaces;  collision_test;  ;  component;  ;  core;  ;  defaulttype;  ;  framework;  ;  geometry;  ;  gl;  Forward declaration. ;  ;  gui;  ;  helper;  ;  linearalgebra;  ;  mapping_test;  ;  simpleapi;  ;  simulation;  ;  testing;  ;  topology;  ;  type;  for std::pair ;  . Classes; class  TestDataEngine;  ; struct  DataEngine_test;  Helper for writing DataEngine tests. More...;  ; struct  MultiMapping_test;  Base class for the MultiMapping tests, directly adapted from Mapping_test. More...;  ; struct  AffinePatch_sofa_test;  ; struct  CylinderTractionStruct;  Structure which contains the nodes and the pointers useful for the cylindertraction test. More...;  ; struct  LinearElasticity_test;  ; struct  ForceField_test;  Helper for writing ForceField tests. The constructor creates a root node and adds it a State and a ForceField (of the parameter type of this template class). Pointers to node, state and force are available. Deriving the ForceField test from this class makes it easy to write: just call function run_test with positions, velocities and the corresponding expected forces. This function automatically checks not only the forces (function addForce), but also the stiffness (methods addDForce and addKToMatrix), using finite differences. More...;  ; struct  PatchTestStruct;  Structure which contains the nodes and the pointers useful for the patch test. More...;  ; class  TemplateAliasTest;  ; struct  AdvancedTimerTest;  ; struct  DefaultAnimationLoop_test;  . Typedefs; typedef Types< Vec3Types > DataTypes;  ; typedef component::statecontainer::MechanicalObject< defaulttype::Vec3Types > MechanicalObject3;  ; template<typename DataTypes > ; using Coord_t = typename DataTypes::Coord;  ; template<typename DataTypes > ; using Real_t = typename DataTypes::Real;  ; tem",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa.html:427,test,testing,427,api/master/sofa/html/namespacesofa.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa.html,5,['test'],"['test', 'testing', 'tests']"
Testability,﻿. SOFA API: sofa::AdvancedTimerTest Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Protected Member Functions |; List of all members . sofa::AdvancedTimerTest Struct Reference . Inheritance diagram for sofa::AdvancedTimerTest:. [legend]; Detailed Description; Test suite for AdvancedTimer AuthorLionel Untereiner ; Date2017/08/31 . Public Attributes; Node::SPtr root;  ;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  . Protected Member Functions; void onSetUp () override;  ; void initScene ();  . Additional Inherited Members;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  ;  Public Member Functions inherited from sofa::testing::BaseSimulationTest;  BaseSimulationTest ();  ; bool importPlugin (const std::string &name);  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onTearDown ();  . Attribute details. ◆ root. Node::SPtr sofa::AdvancedTimerTest::root. Function details. ◆ initScene(). void sofa::AdvancedTimerTest::initScene ; (; ). inlineprotected . ◆ onSetUp(). void sofa::AdvancedTimerTest::onSetUp ; (; ). inlineoverrideprotectedvirtual . Reimplemented from sofa::testing::BaseTest. sofaAdvancedTimerTest; Generated on Mon Nov 11 2024 02:19:50 for SOFA API by 1.9.1 . ,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_advanced_timer_test.html:478,test,testing,478,api/master/sofa/html/structsofa_1_1_advanced_timer_test.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_advanced_timer_test.html,7,['test'],['testing']
Testability,"﻿. SOFA API: sofa::AffinePatch_sofa_test< _DataTypes > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::AffinePatch_sofa_test< _DataTypes > Struct Template Reference . Inheritance diagram for sofa::AffinePatch_sofa_test< _DataTypes >:. [legend]; Detailed Description; template<typename _DataTypes>; struct sofa::AffinePatch_sofa_test< _DataTypes >; AFfine Patch test. An affine movement (rotation and translation) is applied to the borders of a mesh. Test if the points inside have the same affine movement. . Public Attributes; simulation::Node::SPtr root;  Root of the scene graph. More...;  ; simulation::Simulation * simulation;  Tested simulation. More...;  ; PatchTestStruct< DataTypes > patchStruct;  Structure which contains current node and pointers to the mechanical object and the affine constraint. More...;  ; type::Mat< 3, 3, Real > testedRotation;  Tested Rotation: random rotation matrix. More...;  ; Coord testedTranslation;  Tested Translation: random translation. More...;  ;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  . Public Member Functions; void SetUp () override;  Create the context for the scene. More...;  ; void createScene2DRegularGrid (bool randomRotation=true, bool randomTranslation=true);  Create a scene with a 2D regular grid and an affine constraint. More...;  ; void createScene3DRegularGrid (bool randomRotation=true, bool randomTranslation=true);  Create a scene with a 3D regular grid and an affine constraint. More...;  ; void setRotation (type::Mat< 3, 3, Real > rotationMatrix);  ; void setTranslation (int x, int y, int z);  ; bool compareSimulatedToTheoreticalPositions (double convergenceAccuracy, double diffMaxBetweenSimulatedAndTheoreticalPosition);  After simulation compare the positions of points to the theore",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test.html:490,test,test,490,api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_affine_patch__sofa__test.html,2,['test'],"['test', 'testedRotation']"
Testability,﻿. SOFA API: sofa::CylinderTractionStruct< T > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; List of all members . sofa::CylinderTractionStruct< T > Struct Template Reference . Structure which contains the nodes and the pointers useful for the cylindertraction test. ; More... Inheritance diagram for sofa::CylinderTractionStruct< T >:. [legend]; Detailed Description; template<class T>; struct sofa::CylinderTractionStruct< T >; Structure which contains the nodes and the pointers useful for the cylindertraction test. . Public Attributes; simulation::Node::SPtr root;  ; component::statecontainer::MechanicalObject< T >::SPtr dofs;  ; component::mechanicalload::TrianglePressureForceField< T >::SPtr forceField;  . Attribute details. ◆ dofs. template<class T > . component::statecontainer::MechanicalObject<T>::SPtr sofa::CylinderTractionStruct< T >::dofs. ◆ forceField. template<class T > . component::mechanicalload::TrianglePressureForceField<T>::SPtr sofa::CylinderTractionStruct< T >::forceField. ◆ root. template<class T > . simulation::Node::SPtr sofa::CylinderTractionStruct< T >::root. sofaCylinderTractionStruct; Generated on Mon Nov 11 2024 02:18:25 for SOFA API by 1.9.1 . ,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_cylinder_traction_struct.html:337,test,test,337,api/master/sofa/html/structsofa_1_1_cylinder_traction_struct.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_cylinder_traction_struct.html,2,['test'],['test']
Testability,"﻿. SOFA API: sofa::DataEngine_test< DataEngineType > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::DataEngine_test< DataEngineType > Struct Template Reference . #include <DataEngineTestCreation.h>; Helper for writing DataEngine tests. ; More... Inheritance diagram for sofa::DataEngine_test< DataEngineType >:. [legend]; Detailed Description; template<typename DataEngineType>; struct sofa::DataEngine_test< DataEngineType >; Helper for writing DataEngine tests. ; AuthorMatthieu Nesme, 2015 . Public Attributes; Engine::SPtr m_engine;  the real tested engine More...;  ; DataEngineType::SPtr m_engineInput;  an other identical engine, where only inputs are used (not the engine itself). It is an easy way to create all inputs of the right type, to be able to link with them. More...;  ;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  . Public Member Functions;  DataEngine_test ();  ; virtual void init ();  ; void run_basic_test ();  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  . Additional Inherited Members;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  . Attribute details. ◆ m_engine. template<typename DataEngineType > . Engine::SPtr sofa::DataEngine_test< DataEngineType >::m_engine. the real tested engine . ◆ m_engineInput. template<typename DataEngineType > . DataEngineType::SPtr sofa::DataEngine_test< DataEngineType >::m_engineInput. an other identical engine, where only inputs are used (not the engine itself). It is an easy way to create all inputs of the right type, to be ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_data_engine__test.html:359,test,tests,359,api/master/sofa/html/structsofa_1_1_data_engine__test.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_data_engine__test.html,6,['test'],"['tested', 'testing', 'tests']"
Testability,﻿. SOFA API: sofa::DefaultAnimationLoop_test Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::DefaultAnimationLoop_test Struct Reference . Inheritance diagram for sofa::DefaultAnimationLoop_test:. [legend]. Public Member Functions; void testOneStep ();  ;  Public Member Functions inherited from sofa::testing::BaseSimulationTest;  BaseSimulationTest ();  ; bool importPlugin (const std::string &name);  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  . Additional Inherited Members;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  ;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  . Function details. ◆ testOneStep(). void sofa::DefaultAnimationLoop_test::testOneStep ; (; ). inline . sofaDefaultAnimationLoop_test; Generated on Mon Nov 11 2024 02:19:50 for SOFA API by 1.9.1 . ,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_default_animation_loop__test.html:335,test,testOneStep,335,api/master/sofa/html/structsofa_1_1_default_animation_loop__test.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_default_animation_loop__test.html,9,['test'],"['testOneStep', 'testing']"
Testability,"﻿. SOFA API: sofa::ForceField_test< _ForceFieldType > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. List of all members . sofa::ForceField_test< _ForceFieldType > Struct Template Reference . #include <ForceFieldTestCreation.h>; Helper for writing ForceField tests. The constructor creates a root node and adds it a State and a ForceField (of the parameter type of this template class). Pointers to node, state and force are available. Deriving the ForceField test from this class makes it easy to write: just call function run_test with positions, velocities and the corresponding expected forces. This function automatically checks not only the forces (function addForce), but also the stiffness (methods addDForce and addKToMatrix), using finite differences. ; More... Inheritance diagram for sofa::ForceField_test< _ForceFieldType >:. [legend]; Detailed Description; template<typename _ForceFieldType>; struct sofa::ForceField_test< _ForceFieldType >; Helper for writing ForceField tests. The constructor creates a root node and adds it a State and a ForceField (of the parameter type of this template class). Pointers to node, state and force are available. Deriving the ForceField test from this class makes it easy to write: just call function run_test with positions, velocities and the corresponding expected forces. This function automatically checks not only the forces (function addForce), but also the stiffness (methods addDForce and addKToMatrix), using finite differences. ; AuthorFrançois Faure, 2014 . Public Attributes; Scene elements; { . DOF::SPtr dof;  ; ForceField::SPtr force;  ; simulation::Node::SPtr node;  ; Precision and control parameters; }; { . SReal errorMax;  tolerance in precision test. The actual value is this one times the epsilon of the Real numbers (typically float or double) More...;  ; SReal errorFactorPotentialEnergy;  The test for potential energy is successful if the (infinite norm of the) differen",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test.html:313,test,tests,313,api/master/sofa/html/structsofa_1_1_force_field__test.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test.html,3,['test'],"['test', 'tests']"
Testability,"﻿. SOFA API: sofa::LinearElasticity_test< _DataTypes > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::LinearElasticity_test< _DataTypes > Struct Template Reference . Inheritance diagram for sofa::LinearElasticity_test< _DataTypes >:. [legend]; Detailed Description; template<typename _DataTypes>; struct sofa::LinearElasticity_test< _DataTypes >; Test force fields implementing linear elasticity on tetrahedral mesh. Implement traction applied on the top part of a cylinder and test that the deformation is simply related with the Young Modulus and Poisson Ratio of the isotropc linear elastic material . Public Attributes; simulation::Simulation * simulation;  Simulation. More...;  ; CylinderTractionStruct< DataTypes > tractionStruct;  struct with the pointer of the main components More...;  ; size_t vIndex;  index of the vertex used to compute the compute the deformation More...;  ;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  . Public Member Functions; void SetUp () override;  ; ForceFieldSPtr addTetrahedralLinearElastic (simulation::Node::SPtr root, double youngModulus, double poissonRatio);  ; ForceFieldSPtr addTetrahedralCorotationalFEMLinearElastic (simulation::Node::SPtr root, double youngModulus, double poissonRatio);  ; bool testLinearElasticityInTraction (LinearElasticityFF createForceField);  ; void TearDown () override;  ;  Public Member Functions inherited from sofa::testing::BaseSimulationTest;  BaseSimulationTest ();  ; bool importPlugin (const std::string &name);  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  ;  Public Member Functions inherited f",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_linear_elasticity__test.html:608,test,test,608,api/master/sofa/html/structsofa_1_1_linear_elasticity__test.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_linear_elasticity__test.html,1,['test'],['test']
Testability,"﻿. SOFA API: sofa::MultiMapping_test< _MultiMapping > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::MultiMapping_test< _MultiMapping > Struct Template Reference . #include <MultiMappingTestCreation.h>; Base class for the MultiMapping tests, directly adapted from Mapping_test. ; More... Inheritance diagram for sofa::MultiMapping_test< _MultiMapping >:. [legend]; Detailed Description; template<class _MultiMapping>; struct sofa::MultiMapping_test< _MultiMapping >; Base class for the MultiMapping tests, directly adapted from Mapping_test. ; See alsoMapping_test; AuthorFrançois Faure ; Date2014 . Public Attributes; core::MultiMapping< In, Out > * mapping;  the mapping to be tested More...;  ; type::vector< typename InDOFs::SPtr > inDofs;  mapping input More...;  ; OutDOFs::SPtr outDofs;  mapping output More...;  ; simulation::Node::SPtr root;  Root of the scene graph, created by the constructor an re-used in the tests. More...;  ; simulation::Node::SPtr child;  Child node, created by setupScene. More...;  ; type::vector< simulation::Node::SPtr > parents;  Parent nodes, created by setupScene. More...;  ; simulation::Simulation * simulation;  created by the constructor an re-used in the tests More...;  ; std::pair< Real, Real > deltaRange;  The minimum and maximum magnitudes of the change of each scalar value of the small displacement is deltaRange * numeric_limits<Real>::epsilon. This epsilon is 1.19209e-07 for float and 2.22045e-16 for double. More...;  ; Real errorMax;  The test is successful if the (infinite norm of the) difference is less than maxError * numeric_limits<Real>::epsilon. More...;  ;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  . Public Member Functions;  MultiMapping_test ();  ; void setupScene (int numParents);  ; OutDe",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_multi_mapping__test.html:365,test,tests,365,api/master/sofa/html/structsofa_1_1_multi_mapping__test.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_multi_mapping__test.html,3,['test'],"['tested', 'tests']"
Testability,﻿. SOFA API: sofa::PatchTestStruct< T > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; List of all members . sofa::PatchTestStruct< T > Struct Template Reference . #include <RegularGridNodeCreation.h>; Structure which contains the nodes and the pointers useful for the patch test. ; More... Inheritance diagram for sofa::PatchTestStruct< T >:. [legend]; Detailed Description; template<class T>; struct sofa::PatchTestStruct< T >; Structure which contains the nodes and the pointers useful for the patch test. . Public Attributes; simulation::Node::SPtr SquareNode;  ; component::constraint::projective::AffineMovementProjectiveConstraint< T >::SPtr affineConstraint;  ; component::statecontainer::MechanicalObject< T >::SPtr dofs;  . Attribute details. ◆ affineConstraint. template<class T > . component::constraint::projective::AffineMovementProjectiveConstraint<T>::SPtr sofa::PatchTestStruct< T >::affineConstraint. ◆ dofs. template<class T > . component::statecontainer::MechanicalObject<T>::SPtr sofa::PatchTestStruct< T >::dofs. ◆ SquareNode. template<class T > . simulation::Node::SPtr sofa::PatchTestStruct< T >::SquareNode. sofaPatchTestStruct; Generated on Mon Nov 11 2024 02:19:50 for SOFA API by 1.9.1 . ,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_patch_test_struct.html:350,test,test,350,api/master/sofa/html/structsofa_1_1_patch_test_struct.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_patch_test_struct.html,2,['test'],['test']
Testability,"﻿. SOFA API: sofa::TemplateAliasTest Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Member Functions |; List of all members . sofa::TemplateAliasTest Class Reference . Inheritance diagram for sofa::TemplateAliasTest:. [legend]. Protected Member Functions; bool registerAlias (const std::string &alias, const std::string &target, bool succeed, bool warn);  . Additional Inherited Members;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  ;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  ;  Public Member Functions inherited from sofa::testing::BaseSimulationTest;  BaseSimulationTest ();  ; bool importPlugin (const std::string &name);  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  . Function details. ◆ registerAlias(). bool sofa::TemplateAliasTest::registerAlias ; (; const std::string & ; alias, . const std::string & ; target, . bool ; succeed, . bool ; warn . ). inlineprotected . sofaTemplateAliasTest; Generated on Mon Nov 11 2024 02:19:50 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1_template_alias_test.html:482,test,testing,482,api/master/sofa/html/classsofa_1_1_template_alias_test.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1_template_alias_test.html,6,['test'],['testing']
Testability,﻿. SOFA API: sofa::component::collision::detection::algorithm Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Functions . sofa::component::collision::detection::algorithm Namespace Reference . Classes; class  BruteForceBroadPhase;  Perform an extensive pair-wise collision test based on the bounding volume of collision models. More...;  ; class  BruteForceDetection;  ; class  BVHNarrowPhase;  Narrow phase collision detection based on bounding volume hierarchy. More...;  ; class  CollisionPipeline;  ; class  CollidingPair;  ; class  CollisionPairID;  ; class  CollidingPM;  ; class  DirectSAP;  ; class  DirectSAPNarrowPhase;  ; class  DSAPBox;  ; class  EndPoint;  ; class  EndPointID;  ; struct  CompPEndPoint;  ; class  ISAPBox;  ; class  IncrSAP;  ; class  MirrorIntersector;  ; class  RayTraceDetection;  It is a Ray Trace based collision detection algorithm. More...;  ; class  RayTraceNarrowPhase;  It is a Ray Trace based collision detection algorithm. More...;  . Functions; void registerBruteForceBroadPhase (sofa::core::ObjectFactory *factory);  ; void registerBruteForceDetection (sofa::core::ObjectFactory *factory);  ; void registerBVHNarrowPhase (sofa::core::ObjectFactory *factory);  ; void registerCollisionPipeline (sofa::core::ObjectFactory *factory);  ; void registerDirectSAP (sofa::core::ObjectFactory *factory);  ; void registerDirectSAPNarrowPhase (sofa::core::ObjectFactory *factory);  ; void registerIncrSAP (sofa::core::ObjectFactory *factory);  ; void registerRayTraceDetection (sofa::core::ObjectFactory *factory);  ; void registerRayTraceNarrowPhase (sofa::core::ObjectFactory *factory);  ; SOFA_EXPORT_DYNAMIC_LIBRARY void initExternalModule ();  ; SOFA_EXPORT_DYNAMIC_LIBRARY const char * getModuleName ();  ; SOFA_EXPORT_DYNAMIC_LIBRARY const char * getModuleVersion ();  ; SOFA_EXPORT_DYNAMIC_LIBRARY void registerObjects (sofa::core::ObjectFactory *factory);  ; void init ();  . Function Documentation. ◆,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1component_1_1collision_1_1detection_1_1algorithm.html:331,test,test,331,api/master/sofa/html/namespacesofa_1_1component_1_1collision_1_1detection_1_1algorithm.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1component_1_1collision_1_1detection_1_1algorithm.html,1,['test'],['test']
Testability,"﻿. SOFA API: sofa::component::collision::detection::algorithm::BruteForceBroadPhase Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Protected Attributes |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; List of all members . sofa::component::collision::detection::algorithm::BruteForceBroadPhase Class Reference . #include <BruteForceBroadPhase.h>; Perform an extensive pair-wise collision test based on the bounding volume of collision models. ; More... Inheritance diagram for sofa::component::collision::detection::algorithm::BruteForceBroadPhase:. [legend]; Detailed Description; Perform an extensive pair-wise collision test based on the bounding volume of collision models. ; This component is a broad phase algorithm used during collision detection to limit the number of pairs of objects that need to be checked for intersection. The algorithm output is a list of pairs of objects that can potentially be in intersection. This list is then used as an input for a narrow phase algorithm. In this algorithm, all possible pairs of objects are tested (brute force test). If there are n objects, there will be n^2/2 tests. The tests are based on the bounding volume of the objects, usually an axis-aligned bounding box. . Classes; struct  FirstLastCollisionModel;  . Protected Attributes; collision::geometry::CubeCollisionModel::SPtr boxModel;  ; sofa::type::vector< FirstLastCollisionModel > m_collisionModels;  ;  Protected Attributes inherited from sofa::core::collision::BroadPhaseDetection; sofa::type::vector< CollisionModelPair > cmPairs;  Potentially colliding pairs. More...;  ; std::map< Instance, sofa::type::vector< CollisionModelPair > > storedCmPairs;  ;  Protected Attributes inherited from sofa::core::collision::Detection; Intersection * intersectionMethod;  Current intersection method. More...;  ; std::map< Instance, Intersection * > storedIntersectionMethod;  All intersection m",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html:488,test,test,488,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html,2,['test'],['test']
Testability,"﻿. SOFA API: sofa::component::collision::detection::algorithm::RayTraceDetection Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; List of all members . sofa::component::collision::detection::algorithm::RayTraceDetection Class Referencefinal . #include <RayTraceDetection.h>; It is a Ray Trace based collision detection algorithm. ; More... Inheritance diagram for sofa::component::collision::detection::algorithm::RayTraceDetection:. [legend]; Detailed Description; It is a Ray Trace based collision detection algorithm. ; For each point in one object, we trace a ray following the opposite of the point's normal up to find a triangle in the other object. Both triangles are tested to evaluate if they are in colliding state. It must be used with a TriangleOctreeModel,as an octree is used to traverse the object. . Public Member Functions;  SOFA_CLASS (RayTraceDetection, sofa::core::objectmodel::BaseObject);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insert",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_ray_trace_detection.html:808,test,tested,808,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_ray_trace_detection.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_ray_trace_detection.html,1,['test'],['tested']
Testability,"﻿. SOFA API: sofa::component::collision::detection::algorithm::RayTraceNarrowPhase Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Protected Member Functions |; List of all members . sofa::component::collision::detection::algorithm::RayTraceNarrowPhase Class Reference . #include <RayTraceNarrowPhase.h>; It is a Ray Trace based collision detection algorithm. ; More... Inheritance diagram for sofa::component::collision::detection::algorithm::RayTraceNarrowPhase:. [legend]; Detailed Description; It is a Ray Trace based collision detection algorithm. ; For each point in one object, we trace a ray following the opposite of the point's normal up to find a triangle in the other object. Both triangles are tested to evaluate if they are in colliding state. It must be used with a TriangleOctreeModel,as an octree is used to traverse the object. . Public Member Functions;  SOFA_CLASS (RayTraceNarrowPhase, core::collision::NarrowPhaseDetection);  ; void addCollisionPair (const std::pair< core::CollisionModel *, core::CollisionModel * > &cmPair) override;  Add a new potentially colliding pairs of models. More...;  ; void findPairsVolume (collision::geometry::CubeCollisionModel *cm1, collision::geometry::CubeCollisionModel *cm2);  ;  Public Member Functions inherited from sofa::core::collision::NarrowPhaseDetection;  SOFA_ABSTRACT_CLASS (NarrowPhaseDetection, Detection);  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; virtual void beginNarrowPhase ();  Clear all the potentially colliding pairs detected in the previous simulation step. More...;  ; virtual void addCollisionPairs (const sofa::type::vector< std::pair< core::CollisionModel *, core::CollisionModel * > > &v);  Add a new list of potentially colliding pairs of models. More...;  ; virtual void endNarrowPhase ();  ; size_t getPrimitiveTestCount () const;  ; const De",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_ray_trace_narrow_phase.html:777,test,tested,777,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_ray_trace_narrow_phase.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_ray_trace_narrow_phase.html,1,['test'],['tested']
Testability,"﻿. SOFA API: sofa::component::collision::geometry::TriangleOctreeModel Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::component::collision::geometry::TriangleOctreeModel Class Reference . #include <TriangleOctreeModel.h>. Inheritance diagram for sofa::component::collision::geometry::TriangleOctreeModel:. [legend]. Public Attributes; type::vector< type::Vec3 > pNorms;  the normals for each point More...;  ;  Public Attributes inherited from sofa::component::collision::geometry::TriangleCollisionModel< sofa::defaulttype::Vec3Types >; Data< bool > d_bothSide;  activate collision on both side of the triangle model More...;  ; Data< bool > d_computeNormals;  set to false to disable computation of triangles normal More...;  ; Data< bool > d_useCurvature;  use the curvature of the mesh to avoid some self-intersection test More...;  ; SingleLink< TriangleCollisionModel< DataTypes >, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology container in the component graph. More...;  ;  Public Attributes inherited from sofa::core::CollisionModel; CollisionElementActiver * myCollElemActiver;  CollisionElementActiver that activate or deactivate collision element during execution. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Da",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_triangle_octree_model.html:972,test,test,972,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_triangle_octree_model.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_triangle_octree_model.html,1,['test'],['test']
Testability,﻿. SOFA API: sofa::component::odesolver Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Namespaces |; Functions . sofa::component::odesolver Namespace Reference . Namespaces;  backward;  ;  forward;  ;  testing;  . Functions; SOFA_EXPORT_DYNAMIC_LIBRARY void initExternalModule ();  ; SOFA_EXPORT_DYNAMIC_LIBRARY const char * getModuleName ();  ; SOFA_EXPORT_DYNAMIC_LIBRARY const char * getModuleVersion ();  ; SOFA_EXPORT_DYNAMIC_LIBRARY void registerObjects (sofa::core::ObjectFactory *factory);  ; void init ();  . Function Documentation. ◆ getModuleName(). const char * sofa::component::odesolver::getModuleName ; (; ). ◆ getModuleVersion(). const char * sofa::component::odesolver::getModuleVersion ; (; ). ◆ init(). SOFA_COMPONENT_ODESOLVER_API void sofa::component::odesolver::init ; (; ). ◆ initExternalModule(). void sofa::component::odesolver::initExternalModule ; (; ). ◆ registerObjects(). void sofa::component::odesolver::registerObjects ; (; sofa::core::ObjectFactory * ; factory). sofacomponentodesolver; Generated on Mon Nov 11 2024 02:56:13 for SOFA API by 1.9.1 . ,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1component_1_1odesolver.html:250,test,testing,250,api/master/sofa/html/namespacesofa_1_1component_1_1odesolver.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1component_1_1odesolver.html,1,['test'],['testing']
Testability,"﻿. SOFA API: sofa::component::odesolver::testing Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Functions . sofa::component::odesolver::testing Namespace Reference . Classes; class  GetVectorVisitor;  ; class  GetAssembledSizeVisitor;  ; struct  ODESolverSpringTest;  . Functions; Eigen::VectorXd getVector (simulation::Node::SPtr root, core::ConstVecId id, bool indep=true);  ; simulation::Node::SPtr createMassSpringSystem (simulation::Node::SPtr root, const std::string &stiffness, const std::string &mass, const std::string &restLength, const std::string &xFixedPoint, const std::string &vFixedPoint, const std::string &xMass, const std::string &vMass);  Create a mass spring system. More...;  ; template<typename DataTypes > ; simulation::Node::SPtr createMassSpringSystem (simulation::Node::SPtr root, double stiffness, double mass, double restLength, typename DataTypes::VecCoord xFixedPoint, typename DataTypes::VecDeriv vFixedPoint, typename DataTypes::VecCoord xMass, typename DataTypes::VecDeriv vMass);  . Function Documentation. ◆ createMassSpringSystem() [1/2]. simulation::Node::SPtr sofa::component::odesolver::testing::createMassSpringSystem ; (; simulation::Node::SPtr ; root, . const std::string & ; stiffness, . const std::string & ; mass, . const std::string & ; restLength, . const std::string & ; xFixedPoint, . const std::string & ; vFixedPoint, . const std::string & ; xMass, . const std::string & ; vMass . ). inline . Create a mass spring system. . ◆ createMassSpringSystem() [2/2]. template<typename DataTypes > . simulation::Node::SPtr sofa::component::odesolver::testing::createMassSpringSystem ; (; simulation::Node::SPtr ; root, . double ; stiffness, . double ; mass, . double ; restLength, . typename DataTypes::VecCoord ; xFixedPoint, . typename DataTypes::VecDeriv ; vFixedPoint, . typename DataTypes::VecCoord ; xMass, . typename DataTypes::VecDeriv ; vMass . ). inline . ◆ getVector(). Eigen::VectorXd sof",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1component_1_1odesolver_1_1testing.html:41,test,testing,41,api/master/sofa/html/namespacesofa_1_1component_1_1odesolver_1_1testing.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1component_1_1odesolver_1_1testing.html,2,['test'],['testing']
Testability,﻿. SOFA API: sofa::component::odesolver::testing::GetAssembledSizeVisitor Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; List of all members . sofa::component::odesolver::testing::GetAssembledSizeVisitor Class Reference . #include <EigenTestUtilities.h>. Inheritance diagram for sofa::component::odesolver::testing::GetAssembledSizeVisitor:. [legend]. Protected Attributes; std::size_t xsize { 0 };  ; std::size_t vsize { 0 };  ; bool independentOnly { false };  ;  Protected Attributes inherited from sofa::simulation::Visitor; const sofa::core::ExecParams * params;  . Public Member Functions;  GetAssembledSizeVisitor (const sofa::core::ExecParams *params=sofa::core::mechanicalparams::castToExecParams(core::mechanicalparams::defaultInstance()));  ;  ~GetAssembledSizeVisitor () override;  ; Result processNodeTopDown (simulation::Node *gnode) override;  Callback method called when descending to a new node. Recursion will stop if this method returns RESULT_PRUNE. More...;  ; const char * getClassName () const override;  ; unsigned positionSize () const;  ; unsigned velocitySize () const;  ; void setIndependentOnly (bool b);  ;  Public Member Functions inherited from sofa::simulation::Visitor;  Visitor (const sofa::core::ExecParams *params);  ; virtual ~Visitor ();  ; const sofa::core::ExecParams * execParams () const;  ; virtual void processNodeBottomUp (simulation::Node *);  Callback method called after child node have been processed and before going back to the parent node. More...;  ; virtual bool childOrderReversed (simulation::Node *);  Return true to reverse the order of traversal of child nodes. More...;  ; virtual bool treeTraversal (TreeTraversalRepetition &repeat);  ; virtual const char * getCategoryName () const;  ; virtual std::string getInfos () const;  ; bool testTags (sofa::core::objectmodel::BaseObject *obj);  ; virtual void execute (sofa::core::objectmodel::BaseCon,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1testing_1_1_get_assembled_size_visitor.html:41,test,testing,41,api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1testing_1_1_get_assembled_size_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1testing_1_1_get_assembled_size_visitor.html,3,['test'],['testing']
Testability,"﻿. SOFA API: sofa::component::odesolver::testing::GetVectorVisitor Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; List of all members . sofa::component::odesolver::testing::GetVectorVisitor Class Reference . #include <EigenTestUtilities.h>. Inheritance diagram for sofa::component::odesolver::testing::GetVectorVisitor:. [legend]. Protected Attributes; linearalgebra::BaseVector * vec;  ; core::ConstVecId src;  ; unsigned offset {0};  ; bool independentOnly {false};  ;  Protected Attributes inherited from sofa::simulation::Visitor; const sofa::core::ExecParams * params;  . Public Member Functions;  GetVectorVisitor (const sofa::core::ExecParams *params, linearalgebra::BaseVector *vec, core::ConstVecId src);  ;  ~GetVectorVisitor () override=default;  ; Result processNodeTopDown (simulation::Node *gnode) override;  Callback method called when descending to a new node. Recursion will stop if this method returns RESULT_PRUNE. More...;  ; const char * getClassName () const override;  ; void setIndependentOnly (bool b);  If true, process the independent nodes only. More...;  ;  Public Member Functions inherited from sofa::simulation::Visitor;  Visitor (const sofa::core::ExecParams *params);  ; virtual ~Visitor ();  ; const sofa::core::ExecParams * execParams () const;  ; virtual void processNodeBottomUp (simulation::Node *);  Callback method called after child node have been processed and before going back to the parent node. More...;  ; virtual bool childOrderReversed (simulation::Node *);  Return true to reverse the order of traversal of child nodes. More...;  ; virtual bool treeTraversal (TreeTraversalRepetition &repeat);  ; virtual const char * getCategoryName () const;  ; virtual std::string getInfos () const;  ; bool testTags (sofa::core::objectmodel::BaseObject *obj);  ; virtual void execute (sofa::core::objectmodel::BaseContext *node, bool precomputedOrder=false);  Alias fo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1testing_1_1_get_vector_visitor.html:41,test,testing,41,api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1testing_1_1_get_vector_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1testing_1_1_get_vector_visitor.html,3,['test'],['testing']
Testability,"﻿. SOFA API: sofa::component::odesolver::testing::ODESolverSpringTest Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::component::odesolver::testing::ODESolverSpringTest Struct Reference . #include <ODESolverSpringTest.h>. Inheritance diagram for sofa::component::odesolver::testing::ODESolverSpringTest:. [legend]. Public Attributes; SceneInstance m_si {};  ;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  . Public Member Functions; void prepareScene (double K, double m, double l0);  ;  Public Member Functions inherited from sofa::testing::BaseSimulationTest;  BaseSimulationTest ();  ; bool importPlugin (const std::string &name);  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  . Additional Inherited Members;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  . Attribute details. ◆ m_si. SceneInstance sofa::component::odesolver::testing::ODESolverSpringTest::m_si {}. Function details. ◆ prepareScene(). void sofa::component::odesolver::testing::ODESolverSpringTest::prepareScene ; (; double ; K, . double ; m, . double ; l0 . ). inline . sofacomponentodesolvertestingODESolverSpringTest; Generated on Mon Nov 11 2024 02:56:38 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1odesolver_1_1testing_1_1_o_d_e_solver_spring_test.html:41,test,testing,41,api/master/sofa/html/structsofa_1_1component_1_1odesolver_1_1testing_1_1_o_d_e_solver_spring_test.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1odesolver_1_1testing_1_1_o_d_e_solver_spring_test.html,11,['test'],['testing']
Testability,﻿. SOFA API: sofa::component::sceneutility Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Namespaces |; Classes |; Functions . sofa::component::sceneutility Namespace Reference . Namespaces;  infocomponent;  ;  makealiascomponent;  ;  makedataaliascomponent;  . Classes; class  BaseAddResourceRepository;  ; class  AddDataRepository;  Add a new path to DataRepository. More...;  ; class  AddPluginRepository;  Add a new path to PluginRepository. More...;  ; class  MessageHandlerComponent;  A sofa component to add a MessageHandler to the main logger. More...;  ; class  FileMessageHandlerComponent;  A sofa component to add a FileMessageHandlerComponent to the main logger. More...;  ; class  PauseAnimation;  ; class  PauseAnimationOnEvent;  . Functions; void registerAddDataRepository (sofa::core::ObjectFactory *factory);  ; void registerAddPluginRepository (sofa::core::ObjectFactory *factory);  ; void registerAPIVersion (sofa::core::ObjectFactory *factory);  ; void registerInfoComponent (sofa::core::ObjectFactory *factory);  ; void registerFileMessageHandlerComponent (sofa::core::ObjectFactory *factory);  ; void registerMakeAliasComponent (sofa::core::ObjectFactory *factory);  ; void registerMakeDataAliasComponent (sofa::core::ObjectFactory *factory);  ; void registerMessageHandlerComponent (sofa::core::ObjectFactory *factory);  ; void registerPauseAnimationOnEvent (sofa::core::ObjectFactory *factory);  ; SOFA_EXPORT_DYNAMIC_LIBRARY void initExternalModule ();  ; SOFA_EXPORT_DYNAMIC_LIBRARY const char * getModuleName ();  ; SOFA_EXPORT_DYNAMIC_LIBRARY const char * getModuleVersion ();  ; SOFA_EXPORT_DYNAMIC_LIBRARY void registerObjects (sofa::core::ObjectFactory *factory);  ; void init ();  . Function Documentation. ◆ getModuleName(). const char * sofa::component::sceneutility::getModuleName ; (; ). ◆ getModuleVersion(). const char * sofa::component::sceneutility::getModuleVersion ; (; ). ◆ init(). SOFA_COMPONENT_SCENEUTILITY_,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1component_1_1sceneutility.html:592,log,logger,592,api/master/sofa/html/namespacesofa_1_1component_1_1sceneutility.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1component_1_1sceneutility.html,2,['log'],['logger']
Testability,"﻿. SOFA API: sofa::component::sceneutility::FileMessageHandlerComponent Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::component::sceneutility::FileMessageHandlerComponent Class Reference . #include <MessageHandlerComponent.h>; A sofa component to add a FileMessageHandlerComponent to the main logger. ; More... Inheritance diagram for sofa::component::sceneutility::FileMessageHandlerComponent:. [legend]; Detailed Description; A sofa component to add a FileMessageHandlerComponent to the main logger. . Public Attributes; Data< std::string > d_filename;  Name of the file into which the message will be saved in. More...;  ; helper::logging::MessageHandler * m_handler { nullptr };  ; bool m_isValid;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (FileMessageHandlerComponent, core::objectmodel::BaseObject);  ;  FileMessageHandlerComponent ();  ;  ~FileMessageHandlerComponent () override;  ; void p",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_file_message_handler_component.html:414,log,logger,414,api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_file_message_handler_component.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_file_message_handler_component.html,3,['log'],"['logger', 'logging']"
Testability,"﻿. SOFA API: sofa::component::sceneutility::MessageHandlerComponent Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::component::sceneutility::MessageHandlerComponent Class Reference . #include <MessageHandlerComponent.h>; A sofa component to add a MessageHandler to the main logger. ; More... Inheritance diagram for sofa::component::sceneutility::MessageHandlerComponent:. [legend]; Detailed Description; A sofa component to add a MessageHandler to the main logger. . Public Attributes; Data< std::string > d_type;  ; bool m_isValid;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (MessageHandlerComponent, core::objectmodel::BaseObject);  ;  MessageHandlerComponent ();  ;  ~MessageHandlerComponent () override;  ; void parse (core::objectmodel::BaseObjectDescription *arg) override;  ; bool isValid ();  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseOb",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_message_handler_component.html:393,log,logger,393,api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_message_handler_component.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_message_handler_component.html,2,['log'],['logger']
Testability,"﻿. SOFA API: sofa::component::setting::StatsSetting Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::component::setting::StatsSetting Class Reference . #include <StatsSetting.h>; Class for the configuration of stats settings. ; More... Inheritance diagram for sofa::component::setting::StatsSetting:. [legend]; Detailed Description; Class for the configuration of stats settings. . Public Attributes; sofa::core::objectmodel::RenamedData< bool > dumpState;  ; sofa::core::objectmodel::RenamedData< bool > logTime;  ; sofa::core::objectmodel::RenamedData< bool > exportState;  ; Data< bool > d_dumpState;  Dump state vectors at each time step of the simulation. More...;  ; Data< bool > d_logTime;  Output in the console an average of the time spent during different stages of the simulation. More...;  ; Data< bool > d_exportState;  Create GNUPLOT files with the positions, velocities and forces of all the simulated objects of the scene. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::strin",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_stats_setting.html:653,log,logTime,653,api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_stats_setting.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_stats_setting.html,1,['log'],['logTime']
Testability,﻿. SOFA API: sofa::component::solidmechanics::fem::hyperelastic::material::StrainInformation< DataTypes > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::component::solidmechanics::fem::hyperelastic::material::StrainInformation< DataTypes > Class Template Reference . #include <HyperelasticMaterial.h>. Inheritance diagram for sofa::component::solidmechanics::fem::hyperelastic::material::StrainInformation< DataTypes >:. [legend]. Public Attributes; Real trC;  Trace of C = I1. More...;  ; Real J;  ; Real lambda;  ; Real trCsquare;  Trace of C^2 : I2 = (trCSquare - trC^2)/2. More...;  ; bool hasBeenInitialized;  boolean indicating whether the invariants have been computed More...;  ; MatrixSym deformationTensor;  right Cauchy-Green deformation tensor C (gradPhi^T gradPhi) More...;  ; EigenMatrix Evect;  ; CoordEigen Evalue;  ; Real logJ;  ; MatrixSym E;  . Public Member Functions;  StrainInformation ();  ; virtual ~StrainInformation ();  . Attribute details. ◆ deformationTensor. template<typename DataTypes > . MatrixSym sofa::component::solidmechanics::fem::hyperelastic::material::StrainInformation< DataTypes >::deformationTensor. right Cauchy-Green deformation tensor C (gradPhi^T gradPhi) . ◆ E. template<typename DataTypes > . MatrixSym sofa::component::solidmechanics::fem::hyperelastic::material::StrainInformation< DataTypes >::E. ◆ Evalue. template<typename DataTypes > . CoordEigen sofa::component::solidmechanics::fem::hyperelastic::material::StrainInformation< DataTypes >::Evalue. ◆ Evect. template<typename DataTypes > . EigenMatrix sofa::component::solidmechanics::fem::hyperelastic::material::StrainInformation< DataTypes >::Evect. ◆ hasBeenInitialized. template<typename DataTypes > . bool sofa::component::solidmechanics::fem::hyperelastic::material::StrainInformation< DataTypes >::hasBeenInitialized. boolean indicating whether the invariant,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_strain_information.html:968,log,logJ,968,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_strain_information.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_strain_information.html,1,['log'],['logJ']
Testability,"﻿. SOFA API: sofa::component::topology::utility::TopologyChecker Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Protected Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::component::topology::utility::TopologyChecker Class Reference . #include <TopologyChecker.h>. Inheritance diagram for sofa::component::topology::utility::TopologyChecker:. [legend]; Detailed Description; The class TopologyChecker represents a SOFA component which can be added in a scene graph to test a given Topology. The topology component to be tested need to be linked using See alsol_topology. If the Data . d_eachStep is set to true, the topology will be tested at each step using the generic method . checkTopology; Otherwise each method can be called manually: @CheckTopology will call the appropriate Check{TopologyType}Topology then call the lower level of CheckTopology.; i.e for a Tetrahedron Topology, CheckTopology with call See alsocheckTetrahedronTopology then . checkTriangleTopology and finally . checkEdgeTopology. At each level the topology is checked through the main element container and also the cross topology containers; Each method return a bool and will display msg_error if problems are detected. . Public Attributes; Data< bool > d_eachStep;  bool to check topology at each step. More...;  ; SingleLink< TopologyChecker, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology container in the component graph. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1utility_1_1_topology_checker.html:583,test,test,583,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1utility_1_1_topology_checker.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1utility_1_1_topology_checker.html,3,['test'],"['test', 'tested']"
Testability,"﻿. SOFA API: sofa::component::visual::Visual3DText Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::component::visual::Visual3DText Class Reference . #include <Visual3DText.h>; Draw camera-oriented (billboard) 3D text. ; More... Inheritance diagram for sofa::component::visual::Visual3DText:. [legend]; Detailed Description; Draw camera-oriented (billboard) 3D text. . Public Attributes; Data< std::string > d_text;  Test to display. More...;  ; Data< type::Vec3f > d_position;  3d position More...;  ; Data< float > d_scale;  text scale More...;  ; Data< sofa::type::RGBAColor > d_color;  text color. (default=[1.0,1.0,1.0,1.0]) More...;  ; Data< bool > d_depthTest;  perform depth test More...;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual3_d_text.html:831,test,test,831,api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual3_d_text.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual3_d_text.html,1,['test'],['test']
Testability,"﻿. SOFA API: sofa::core::VecIdAlignFix Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::VecIdAlignFix Class Reference . #include <VecId.h>. Inheritance diagram for sofa::core::VecIdAlignFix:. [legend]; Detailed Description; This class is only here as fix for a VC2010 compiler otherwise padding TVecId<V_ALL,?> with 4 more bytes than TVecId<?,?>, probably due to some weird rule requiring to have distinct base pointers with multiple inheritance that's imo wrongly applied for base classes without data members, and hopefully should not make anything worse for other compilers. NoteJust in case, we have a static size assertion at the end of the file, so you will know if there is a problem. . sofacoreVecIdAlignFix; Generated on Mon Nov 11 2024 03:14:11 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_vec_id_align_fix.html:672,assert,assertion,672,api/master/sofa/html/classsofa_1_1core_1_1_vec_id_align_fix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_vec_id_align_fix.html,1,['assert'],['assertion']
Testability,"﻿. SOFA API: sofa::core::collision Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes . sofa::core::collision Namespace Reference . Classes; class  BroadPhaseDetection;  given a set of root collision models, computes potentially colliding pairs. More...;  ; class  CollisionAlgorithm;  ; class  CollisionGroupManager;  Given a set of contacts, create integration groups. More...;  ; class  Contact;  contact response component handling the response between a pair of models More...;  ; class  ContactManager;  Given a set of detected contact points, create contact response components. More...;  ; class  Detection;  ; class  DetectionOutput;  Generic description of a contact point, used for most collision models except special cases such as GPU-based collisions. More...;  ; class  DetectionOutputVector;  Abstract description of a set of contact point. More...;  ; class  TDetectionOutputVector;  Generic description of a set of contact point between two specific collision models. More...;  ; class  BaseIntersector;  ; class  ElementIntersector;  ; class  IntersectorMap;  ; class  Intersection;  Given 2 collision elements, test if an intersection is possible (for bounding volumes), or compute intersection points if any. More...;  ; class  MemberElementIntersector;  ; class  BaseIntersectorCreator;  ; class  IntersectorFactory;  ; class  IntersectorCreator;  ; class  NarrowPhaseDetection;  Given a set of potentially colliding pairs of models, compute set of contact points. More...;  ; class  Pipeline;  Pipeline component gather list of collision models and control the sequence of computations. More...;  . sofacorecollision; Generated on Mon Nov 11 2024 03:15:46 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1core_1_1collision.html:1183,test,test,1183,api/master/sofa/html/namespacesofa_1_1core_1_1collision.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1core_1_1collision.html,1,['test'],['test']
Testability,"﻿. SOFA API: sofa::core::collision::Intersection Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Protected Member Functions |; List of all members . sofa::core::collision::Intersection Class Referenceabstract . #include <Intersection.h>; Given 2 collision elements, test if an intersection is possible (for bounding volumes), or compute intersection points if any. ; More... Inheritance diagram for sofa::core::collision::Intersection:. [legend]; Detailed Description; Given 2 collision elements, test if an intersection is possible (for bounding volumes), or compute intersection points if any. . Public Member Functions;  SOFA_ABSTRACT_CLASS (Intersection, objectmodel::BaseObject);  ; virtual ElementIntersector * findIntersector (core::CollisionModel *object1, core::CollisionModel *object2, bool &swapModels)=0;  ; virtual bool isSupported (core::CollisionElementIterator elem1, core::CollisionElementIterator elem2);  ; virtual bool useProximity () const;  returns true if algorithm uses proximity detection More...;  ; virtual bool useContinuous () const;  returns true if algorithm uses continuous detection More...;  ; virtual SReal getAlarmDistance () const;  Return the alarm distance (must return 0 if useProximity() is false) More...;  ; virtual SReal getContactDistance () const;  Return the contact distance (must return 0 if useProximity() is false) More...;  ; virtual void setAlarmDistance (SReal);  Set the alarm distance (must return 0 if useProximity() is false) More...;  ; virtual void setContactDistance (SReal);  Set the contact distance (must return 0 if useProximity() is false) More...;  ; virtual void beginBroadPhase ();  Actions to accomplish when the broadPhase is started. By default do nothing. More...;  ; virtual void endBroadPhase ();  Actions to accomplish when the broadPhase is finished. By default do nothing. More...;  ; virtual void beginNarrowPhase ();  Actions to accomplish when the na",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_intersection.html:336,test,test,336,api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_intersection.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_intersection.html,2,['test'],['test']
Testability,"﻿. SOFA API: sofa::core::collision::IntersectorMap Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::core::collision::IntersectorMap Class Reference . #include <Intersection.h>; Detailed Description; Table storing associations between types of collision models and intersectors implementing intersection tests; This class uses the new ClassInfo metaclass to be able to recognize derived classes. So it is no longer necessary to register all derived collision models (i.e. an intersector registered for RayCollisionModel will also be used for RayPickIntersector). . Protected Attributes; InternalMap intersectorsMap;  ; std::map< helper::TypeInfo, helper::TypeInfo > castMap;  ; std::set< const objectmodel::ClassInfo * > classes;  . Public Member Functions; template<class Model1 , class Model2 , class T > ; void add (T *ptr);  ; template<class Model1 , class Model2 > ; void ignore ();  ;  ~IntersectorMap ();  ; helper::TypeInfo getType (core::CollisionModel *model);  ; ElementIntersector * get (core::CollisionModel *model1, core::CollisionModel *model2, bool &swapModels);  . Protected Member Functions; template<class Model1 , class Model2 > ; void add_impl (ElementIntersector *intersector);  ; void add_impl (const objectmodel::ClassInfo &c1, const objectmodel::ClassInfo &c2, ElementIntersector *intersector);  ; void insert (const helper::TypeInfo &t1, const helper::TypeInfo &t2, ElementIntersector *intersector);  . Attribute details. ◆ castMap. std::map< helper::TypeInfo, helper::TypeInfo > sofa::core::collision::IntersectorMap::castMap. protected . ◆ classes. std::set< const objectmodel::ClassInfo* > sofa::core::collision::IntersectorMap::classes. protected . ◆ intersectorsMap. InternalMap sofa::core::collision::IntersectorMap::intersectorsMap. protected . Constructor details. ◆ ~IntersectorMap(). sofa::core::collision::Intersec",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_intersector_map.html:454,test,tests,454,api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_intersector_map.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_intersector_map.html,1,['test'],['tests']
Testability,"﻿. SOFA API: sofa::helper Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Namespaces |; Classes |; Typedefs |; Enumerations |; Functions |; Variables . sofa::helper Namespace Reference . Namespaces;  advancedtimer;  ;  console;  ;  io;  This allow MeshTrian to interact with the messaging system. ;  ;  lifecycle;  ;  logging;  This allow Base object to interact with the messaging system. ;  ;  messaging;  ;  polygon_cube_intersection;  ;  system;  ;  visual;  . Classes; class  ReadAccessor< core::objectmodel::Data< T > >;  ; class  WriteAccessor< core::objectmodel::Data< T > >;  ; class  WriteOnlyAccessor< core::objectmodel::Data< T > >;  The WriteOnlyAccessor provides an access to the Data without triggering an engine update. This should be the preferred writeAccessor for most of the cases as it avoids unnecessary Data updates. More...;  ; class  ReadAccessor;  ; class  ReadAccessor< VectorLikeType, std::enable_if_t< sofa::type::trait::is_vector< VectorLikeType >::value > >;  ; class  ReadAccessorVector;  ; class  WriteAccessor;  ; class  WriteAccessor< VectorLikeType, std::enable_if_t< sofa::type::trait::is_vector< VectorLikeType >::value > >;  ; class  WriteAccessorVector;  WriteAccessor implementation class for vector types. More...;  ; class  WriteOnlyAccessor;  ; class  WriteOnlyAccessor< VectorLikeType, std::enable_if_t< sofa::type::trait::is_vector< VectorLikeType >::value > >;  ; class  TimerData;  ; class  Record;  ; class  StepData;  ; class  AdvancedTimer;  ; class  BackTrace;  ; class  ColorMap;  ; class  Decompose;  ; class  NoArgument;  Allow us to use BaseCreator and Factory without using any Arguments. More...;  ; class  BaseCreator;  ; class  Factory;  ; class  Creator;  ; class  CreatorFn;  ; class  BasicDispatcher;  ; class  FnDispatcher;  ; class  SingletonFnDispatcher;  ; struct  GenerateRigidInfo;  storing rigid infos needed for RigidMass More...;  ; struct  IndexOpenMP;  ; struct  CleanupCheck;  ; ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper.html:365,log,logging,365,api/master/sofa/html/namespacesofa_1_1helper.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper.html,1,['log'],['logging']
Testability,"﻿. SOFA API: sofa::helper::IsEqual< is_integer > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::helper::IsEqual< is_integer > Struct Template Reference . #include <rmath.h>. Static Public Member Functions; template<typename T > ; static bool test (T x, T y, T threshold);  . Function details. ◆ test(). template<bool is_integer = false> . template<typename T > . static bool sofa::helper::IsEqual< is_integer >::test ; (; T ; x, . T ; y, . T ; threshold . ). inlinestatic . sofahelperIsEqual; Generated on Mon Nov 11 2024 03:31:02 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1_is_equal.html:358,test,test,358,api/master/sofa/html/structsofa_1_1helper_1_1_is_equal.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1_is_equal.html,3,['test'],['test']
Testability,"﻿. SOFA API: sofa::helper::IsEqual< true > Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::helper::IsEqual< true > Struct Reference . #include <rmath.h>. Static Public Member Functions; template<typename T > ; static bool test (T x, T y, T);  . Function details. ◆ test(). template<typename T > . static bool sofa::helper::IsEqual< true >::test ; (; T ; x, . T ; y, . T ;  . ). inlinestatic . sofahelperIsEqual< true >; Generated on Mon Nov 11 2024 03:31:02 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1_is_equal_3_01true_01_4.html:328,test,test,328,api/master/sofa/html/structsofa_1_1helper_1_1_is_equal_3_01true_01_4.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1_is_equal_3_01true_01_4.html,3,['test'],['test']
Testability,"﻿. SOFA API: sofa::helper::IsNull< is_integer > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::helper::IsNull< is_integer > Struct Template Reference . #include <rmath.h>. Static Public Member Functions; template<typename T > ; static bool test (T x, T threshold);  . Function details. ◆ test(). template<bool is_integer = false> . template<typename T > . static bool sofa::helper::IsNull< is_integer >::test ; (; T ; x, . T ; threshold . ). inlinestatic . sofahelperIsNull; Generated on Mon Nov 11 2024 03:31:02 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1_is_null.html:356,test,test,356,api/master/sofa/html/structsofa_1_1helper_1_1_is_null.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1_is_null.html,3,['test'],['test']
Testability,"﻿. SOFA API: sofa::helper::IsNull< true > Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::helper::IsNull< true > Struct Reference . #include <rmath.h>. Static Public Member Functions; template<typename T > ; static bool test (T x, T);  . Function details. ◆ test(). template<typename T > . static bool sofa::helper::IsNull< true >::test ; (; T ; x, . T ;  . ). inlinestatic . sofahelperIsNull< true >; Generated on Mon Nov 11 2024 03:31:02 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1_is_null_3_01true_01_4.html:326,test,test,326,api/master/sofa/html/structsofa_1_1helper_1_1_is_null_3_01true_01_4.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1_is_null_3_01true_01_4.html,3,['test'],['test']
Testability,"﻿. SOFA API: sofa::helper::TagFactory Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Static Public Member Functions |; List of all members . sofa::helper::TagFactory Class Reference . #include <TagFactory.h>; Detailed Description; The TagFactory class manages the tags list shared by all the components and visitors. It allows to define subsets to process by specific visitors The user only gives strings to define the subsets, and an id is given back and is used to do the tests of belonging The id is the index of the string in the ""m_tagsList"" vector . Public Member Functions;  TagFactory ()=delete;  . Static Public Member Functions; static std::size_t getID (const std::string &name);  ; static std::string getName (std::size_t id);  . Constructor details. ◆ TagFactory(). sofa::helper::TagFactory::TagFactory ; (; ). delete . Function details. ◆ getID(). std::size_t sofa::helper::TagFactory::getID ; (; const std::string & ; name). static . Returns: the Id corresponding to the name of the tag given in parameter If the name isn't found in the list, it is added to it and return the new id. . ◆ getName(). std::string sofa::helper::TagFactory::getName ; (; std::size_t ; id). static . Returnsthe name corresponding to the id in parameter . sofahelperTagFactory; Generated on Mon Nov 11 2024 03:31:02 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_tag_factory.html:545,test,tests,545,api/master/sofa/html/classsofa_1_1helper_1_1_tag_factory.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_tag_factory.html,1,['test'],['tests']
Testability,"﻿. SOFA API: sofa::helper::logging Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Namespaces |; Classes |; Typedefs |; Functions . sofa::helper::logging Namespace Reference . This allow Base object to interact with the messaging system. ; More... Namespaces;  countingmessagehandler;  ;  loggingmessagehandler;  ;  percomponentloggingmessagehandler;  ;  routingmessagehandler;  . Classes; class  RichConsoleStyleMessageFormatter;  The RichConsoleStyleMessageFormatter class. More...;  ; class  SofaComponentInfo;  ; class  ClangMessageHandler;  ; class  ClangStyleMessageFormatter;  ; struct  ComponentInfo;  ; class  ConsoleMessageHandler;  ; class  MainConsoleMessageHandler;  The MainConsoleMessageHandler class contains a singleton to ConsoleMessageHandler and offer static version of ConsoleMessageHandler API. More...;  ; class  DefaultStyleMessageFormatter;  ; class  ExceptionMessageHandler;  ; struct  FileInfo;  ; struct  FileInfoOwningFilename;  To keep a trace (file,line) from where the message have been created. More...;  ; class  FileMessageHandler;  ; class  Message;  ; class  MessageDispatcherImpl;  ; class  MessageDispatcher;  ; class  MessageFormatter;  ; class  MessageHandler;  ; class  SilentMessageHandler;  This class is a MessageHandler that simply do nothing with the message. More...;  ; class  TracyMessageHandler;  Send the message to the Tracy profiler. More...;  ; class  MainTracyMessageHandler;  The MainTracyMessageHandler class contains a singleton to TracyMessageHandler and offer static version of TracyMessageHandler API. More...;  . Typedefs; typedef boost::tokenizer< boost::char_separator< char > > tokenizer;  . Functions; void simpleFormat (size_t jsize, const std::string &text, size_t line_length, std::ostream &wrapped);  simpleFormat a text containing our markdown 'tags' More...;  ; bool notMuted (const sofa::core::objectmodel::Base *t);  ; bool notMuted (sofa::core::objectmodel::Base *t);  ; Compone",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper_1_1logging.html:27,log,logging,27,api/master/sofa/html/namespacesofa_1_1helper_1_1logging.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper_1_1logging.html,3,['log'],"['logging', 'loggingmessagehandler']"
Testability,﻿. SOFA API: sofa::helper::logging::ClangMessageHandler Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::ClangMessageHandler Class Reference . #include <ClangMessageHandler.h>. Inheritance diagram for sofa::helper::logging::ClangMessageHandler:. [legend]. Public Member Functions; void process (Message &m) override;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Function details. ◆ process(). void sofa::helper::logging::ClangMessageHandler::process ; (; Message & ; m). overridevirtual . Implements sofa::helper::logging::MessageHandler. sofahelperloggingClangMessageHandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_clang_message_handler.html:27,log,logging,27,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_clang_message_handler.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_clang_message_handler.html,6,['log'],['logging']
Testability,"﻿. SOFA API: sofa::helper::logging::ClangStyleMessageFormatter Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; List of all members . sofa::helper::logging::ClangStyleMessageFormatter Class Reference . #include <ClangStyleMessageFormatter.h>. Inheritance diagram for sofa::helper::logging::ClangStyleMessageFormatter:. [legend]. Public Member Functions; void formatMessage (const Message &m, std::ostream &out) override;  . Static Public Member Functions; static ClangStyleMessageFormatter & getInstance ();  . Protected Member Functions; std::string getPrefixText (unsigned int type) const override;  ;  Protected Member Functions inherited from sofa::helper::logging::MessageFormatter;  MessageFormatter ();  ; virtual std::ostream & setColor (std::ostream &stream, unsigned int type) const;  . Function details. ◆ formatMessage(). void sofa::helper::logging::ClangStyleMessageFormatter::formatMessage ; (; const Message & ; m, . std::ostream & ; out . ). overridevirtual . Implements sofa::helper::logging::MessageFormatter. ◆ getInstance(). static ClangStyleMessageFormatter& sofa::helper::logging::ClangStyleMessageFormatter::getInstance ; (; ). inlinestatic . ◆ getPrefixText(). std::string sofa::helper::logging::ClangStyleMessageFormatter::getPrefixText ; (; unsigned int ; type); const. overrideprotectedvirtual . Reimplemented from sofa::helper::logging::MessageFormatter. sofahelperloggingClangStyleMessageFormatter; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_clang_style_message_formatter.html:27,log,logging,27,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_clang_style_message_formatter.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_clang_style_message_formatter.html,9,['log'],['logging']
Testability,"﻿. SOFA API: sofa::helper::logging::ComponentInfo Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Friends |; List of all members . sofa::helper::logging::ComponentInfo Struct Reference . #include <ComponentInfo.h>. Inheritance diagram for sofa::helper::logging::ComponentInfo:. [legend]; Detailed Description; The base class to keep track of information associated with a message. A component info object have a sender method to return the name string identifying the sender of a message. . Protected Attributes; std::string m_sender;  . Public Member Functions;  ComponentInfo ();  ;  ComponentInfo (const std::string &name);  ; virtual ~ComponentInfo ();  ; const std::string & sender () const;  Returns a string identifying the sender of a message. More...;  ; virtual std::ostream & toStream (std::ostream &out) const;  . Friends; std::ostream & operator<< (std::ostream &out, const ComponentInfo &nfo);  ; std::ostream & operator<< (std::ostream &out, const ComponentInfo *nfo);  . Attribute details. ◆ m_sender. std::string sofa::helper::logging::ComponentInfo::m_sender. protected . Constructor details. ◆ ComponentInfo() [1/2]. sofa::helper::logging::ComponentInfo::ComponentInfo ; (; ). ◆ ComponentInfo() [2/2]. sofa::helper::logging::ComponentInfo::ComponentInfo ; (; const std::string & ; name). ◆ ~ComponentInfo(). sofa::helper::logging::ComponentInfo::~ComponentInfo ; (; ). virtual . Function details. ◆ sender(). const std::string & sofa::helper::logging::ComponentInfo::sender ; (; ); const. Returns a string identifying the sender of a message. . ◆ toStream(). std::ostream & sofa::helper::logging::ComponentInfo::toStream ; (; std::ostream & ; out); const. virtual . Write a textual version of the content of the ComponentInfo. You should override this function when inheriting from the ComponentInfo base class. ; Reimplemented in sofa::helper::logging::SofaComponentInfo. Related detail",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_component_info.html:27,log,logging,27,api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_component_info.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_component_info.html,3,['log'],['logging']
Testability,"﻿. SOFA API: sofa::helper::logging::ConsoleMessageHandler Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::ConsoleMessageHandler Class Reference . #include <ConsoleMessageHandler.h>. Inheritance diagram for sofa::helper::logging::ConsoleMessageHandler:. [legend]; Detailed Description; Print the message on the console using a specified formatter. The Message::Error, Message::Fatal are going to std:cerr while the others are going to std::cout. . Public Member Functions;  ConsoleMessageHandler (MessageFormatter *formatter=nullptr);  ; void process (Message &m) override;  ; void setMessageFormatter (MessageFormatter *formatter);  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ ConsoleMessageHandler(). sofa::helper::logging::ConsoleMessageHandler::ConsoleMessageHandler ; (; MessageFormatter * ; formatter = nullptr). Create a new ConsoleMessageHandler. By default the handler is using the DefaultStyleMessageFormatter object to format the message. . Function details. ◆ process(). void sofa::helper::logging::ConsoleMessageHandler::process ; (; Message & ; m). overridevirtual . Implements sofa::helper::logging::MessageHandler. ◆ setMessageFormatter(). void sofa::helper::logging::ConsoleMessageHandler::setMessageFormatter ; (; MessageFormatter * ; formatter). sofahelperloggingConsoleMessageHandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_console_message_handler.html:27,log,logging,27,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_console_message_handler.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_console_message_handler.html,8,['log'],['logging']
Testability,"﻿. SOFA API: sofa::helper::logging::DefaultStyleMessageFormatter Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Static Public Member Functions |; List of all members . sofa::helper::logging::DefaultStyleMessageFormatter Class Reference . #include <DefaultStyleMessageFormatter.h>. Inheritance diagram for sofa::helper::logging::DefaultStyleMessageFormatter:. [legend]; Detailed Description; Format the message using a very simple sofa style. For more advanced formatting style have a look at RichStyleMessageFormatter. Example: [ERROR] ClassName(instanceName): this is a message printed somewhere. . Public Member Functions; void formatMessage (const Message &m, std::ostream &out) override;  . Static Public Member Functions; static MessageFormatter & getInstance ();  . Additional Inherited Members;  Protected Member Functions inherited from sofa::helper::logging::MessageFormatter;  MessageFormatter ();  ; virtual std::string getPrefixText (unsigned int type) const;  ; virtual std::ostream & setColor (std::ostream &stream, unsigned int type) const;  . Function details. ◆ formatMessage(). void sofa::helper::logging::DefaultStyleMessageFormatter::formatMessage ; (; const Message & ; m, . std::ostream & ; out . ). overridevirtual . Implements sofa::helper::logging::MessageFormatter. ◆ getInstance(). static MessageFormatter& sofa::helper::logging::DefaultStyleMessageFormatter::getInstance ; (; ). inlinestatic . sofahelperloggingDefaultStyleMessageFormatter; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_default_style_message_formatter.html:27,log,logging,27,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_default_style_message_formatter.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_default_style_message_formatter.html,7,['log'],['logging']
Testability,﻿. SOFA API: sofa::helper::logging::ExceptionMessageHandler Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Public Member Functions |; List of all members . sofa::helper::logging::ExceptionMessageHandler Class Reference . #include <ExceptionMessageHandler.h>. Inheritance diagram for sofa::helper::logging::ExceptionMessageHandler:. [legend]; Detailed Description; Raise an exception each time a error message is processed. Useful for automatic examples that only detects crashes! . Classes; struct  ErrorMessageException;  the exception raised by an error Message More...;  . Public Member Functions; void process (Message &m) override;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Function details. ◆ process(). void sofa::helper::logging::ExceptionMessageHandler::process ; (; Message & ; m). overridevirtual . Implements sofa::helper::logging::MessageHandler. sofahelperloggingExceptionMessageHandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_exception_message_handler.html:27,log,logging,27,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_exception_message_handler.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_exception_message_handler.html,6,['log'],['logging']
Testability,﻿. SOFA API: sofa::helper::logging::ExceptionMessageHandler::ErrorMessageException Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::ExceptionMessageHandler::ErrorMessageException Struct Reference . #include <ExceptionMessageHandler.h>; the exception raised by an error Message; More... Inheritance diagram for sofa::helper::logging::ExceptionMessageHandler::ErrorMessageException:. [legend]; Detailed Description; the exception raised by an error Message . Public Member Functions;  ErrorMessageException ();  ; virtual const char * what () const throw ();  . Constructor details. ◆ ErrorMessageException(). sofa::helper::logging::ExceptionMessageHandler::ErrorMessageException::ErrorMessageException ; (; ). inline . Function details. ◆ what(). virtual const char* sofa::helper::logging::ExceptionMessageHandler::ErrorMessageException::what ; (; ); const. throw (. ). inlinevirtual . sofahelperloggingExceptionMessageHandlerErrorMessageException; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_exception_message_handler_1_1_error_message_exception.html:27,log,logging,27,api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_exception_message_handler_1_1_error_message_exception.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_exception_message_handler_1_1_error_message_exception.html,5,['log'],['logging']
Testability,"﻿. SOFA API: sofa::helper::logging::FileInfo Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::helper::logging::FileInfo Struct Reference . #include <FileInfo.h>. Inheritance diagram for sofa::helper::logging::FileInfo:. [legend]; Detailed Description; To keep a trace (file,line) from where the message have been created The filename must be a valid pointer throughoug the message processing If this cannot be guaranteed then use the FileInfoOwningFilename class instead. . Public Attributes; const char * filename {nullptr};  ; int line {0};  . Public Member Functions;  FileInfo (const char *f, int l);  . Protected Member Functions;  FileInfo ();  . Attribute details. ◆ filename. const char* sofa::helper::logging::FileInfo::filename {nullptr}. ◆ line. int sofa::helper::logging::FileInfo::line {0}. Constructor details. ◆ FileInfo() [1/2]. sofa::helper::logging::FileInfo::FileInfo ; (; const char * ; f, . int ; l . ). inline . ◆ FileInfo() [2/2]. sofa::helper::logging::FileInfo::FileInfo ; (; ). inlineprotected . sofahelperloggingFileInfo; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info.html:27,log,logging,27,api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info.html,7,['log'],['logging']
Testability,"﻿. SOFA API: sofa::helper::logging::FileInfoOwningFilename Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::FileInfoOwningFilename Struct Reference . #include <FileInfo.h>; To keep a trace (file,line) from where the message have been created. ; More... Inheritance diagram for sofa::helper::logging::FileInfoOwningFilename:. [legend]; Detailed Description; To keep a trace (file,line) from where the message have been created. . Public Member Functions;  FileInfoOwningFilename (const char *f, int l);  ;  FileInfoOwningFilename (const std::string &f, int l);  ;  ~FileInfoOwningFilename ();  ;  Public Member Functions inherited from sofa::helper::logging::FileInfo;  FileInfo (const char *f, int l);  . Additional Inherited Members;  Public Attributes inherited from sofa::helper::logging::FileInfo; const char * filename {nullptr};  ; int line {0};  ;  Protected Member Functions inherited from sofa::helper::logging::FileInfo;  FileInfo ();  . Constructor details. ◆ FileInfoOwningFilename() [1/2]. sofa::helper::logging::FileInfoOwningFilename::FileInfoOwningFilename ; (; const char * ; f, . int ; l . ). inline . ◆ FileInfoOwningFilename() [2/2]. sofa::helper::logging::FileInfoOwningFilename::FileInfoOwningFilename ; (; const std::string & ; f, . int ; l . ). inline . ◆ ~FileInfoOwningFilename(). sofa::helper::logging::FileInfoOwningFilename::~FileInfoOwningFilename ; (; ). inline . sofahelperloggingFileInfoOwningFilename; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info_owning_filename.html:27,log,logging,27,api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info_owning_filename.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info_owning_filename.html,9,['log'],['logging']
Testability,"﻿. SOFA API: sofa::helper::logging::FileMessageHandler Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::FileMessageHandler Class Reference . #include <FileMessageHandler.h>. Inheritance diagram for sofa::helper::logging::FileMessageHandler:. [legend]; Detailed Description; A message handle that saves the content message passing by in a file. The formatting can be customize by passing a different MessageFormatter in the constructor. Example of use: MessageDispatcher::addHandler(new FileMessageHandler(""myfile.log"")); . Public Member Functions;  FileMessageHandler (const char *filename, MessageFormatter *formatter=nullptr);  ;  ~FileMessageHandler () override;  ; void process (Message &m) override;  ; bool isValid ();  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ FileMessageHandler(). sofa::helper::logging::FileMessageHandler::FileMessageHandler ; (; const char * ; filename, . MessageFormatter * ; formatter = nullptr . ). ◆ ~FileMessageHandler(). sofa::helper::logging::FileMessageHandler::~FileMessageHandler ; (; ). override . Function details. ◆ isValid(). bool sofa::helper::logging::FileMessageHandler::isValid ; (; ). ◆ process(). void sofa::helper::logging::FileMessageHandler::process ; (; Message & ; m). overridevirtual . Implements sofa::helper::logging::MessageHandler. sofahelperloggingFileMessageHandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_file_message_handler.html:27,log,logging,27,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_file_message_handler.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_file_message_handler.html,10,['log'],"['log', 'logging']"
Testability,﻿. SOFA API: sofa::helper::logging::MainConsoleMessageHandler Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::helper::logging::MainConsoleMessageHandler Class Reference . #include <ConsoleMessageHandler.h>; The MainConsoleMessageHandler class contains a singleton to ConsoleMessageHandler and offer static version of ConsoleMessageHandler API. ; More...; Detailed Description; The MainConsoleMessageHandler class contains a singleton to ConsoleMessageHandler and offer static version of ConsoleMessageHandler API. ; See alsoConsoleMessageHandler . Static Public Member Functions; static ConsoleMessageHandler & getInstance ();  . Function details. ◆ getInstance(). ConsoleMessageHandler & sofa::helper::logging::MainConsoleMessageHandler::getInstance ; (; ). static . sofahelperloggingMainConsoleMessageHandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_main_console_message_handler.html:27,log,logging,27,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_main_console_message_handler.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_main_console_message_handler.html,3,['log'],['logging']
Testability,﻿. SOFA API: sofa::helper::logging::MainTracyMessageHandler Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::helper::logging::MainTracyMessageHandler Class Reference . #include <TracyMessageHandler.h>; The MainTracyMessageHandler class contains a singleton to TracyMessageHandler and offer static version of TracyMessageHandler API. ; More...; Detailed Description; The MainTracyMessageHandler class contains a singleton to TracyMessageHandler and offer static version of TracyMessageHandler API. ; See alsoTracyMessageHandler . Static Public Member Functions; static TracyMessageHandler & getInstance ();  . Function details. ◆ getInstance(). TracyMessageHandler & sofa::helper::logging::MainTracyMessageHandler::getInstance ; (; ). static . sofahelperloggingMainTracyMessageHandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_main_tracy_message_handler.html:27,log,logging,27,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_main_tracy_message_handler.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_main_tracy_message_handler.html,3,['log'],['logging']
Testability,"﻿. SOFA API: sofa::helper::logging::Message Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Attributes |; Protected Attributes |; Public Member Functions |; List of all members . sofa::helper::logging::Message Class Reference . #include <Message.h>; Detailed Description; A message is the core object of the msg_* API. A message contains a textual description provided by the user as well as the location in source file (or in a separated file) from where the message have been emitted. A message also contains a ComponentInfo which can be used to provide additional details about the emitter's context. . Static Public Attributes; static TypeSet AnyTypes;  ; static Message emptyMsg;  . Protected Attributes; ComponentInfo::SPtr m_componentinfo;  ; FileInfo::SPtr m_fileInfo;  a trace (name, path) from whom has emitted this message. More...;  ; std::stringstream m_stream;  the actual message More...;  ; Class m_class;  who is the attender of the message (developers or users)? More...;  ; Type m_type;  the message level More...;  ; int m_id;  should it be stored here or in the handler that needs it? More...;  . Public Member Functions;  Message ();  ;  Message (const Message &msg);  ;  Message (Class mclass, Type type, const ComponentInfo::SPtr &=ComponentInfo::SPtr(), const FileInfo::SPtr &fileInfo=EmptyFileInfo);  ; Message & operator= (const Message &msg);  ; const FileInfo::SPtr & fileInfo () const;  ; const ComponentInfo::SPtr & componentInfo () const;  ; const std::stringstream & message () const;  ; Class context () const;  ; Type type () const;  ; const std::string & sender () const;  ; const std::string messageAsString () const;  ; bool empty () const;  ; template<class T > ; Message & operator<< (const T &x);  ; template<> ; SOFA_HELPER_API Message & operator<< (const FileInfo::SPtr &fi);  . Attribute details. ◆ AnyTypes. Message::TypeSet sofa::helper::logging::Message::AnyTypes. static . Initial value:= {Type::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_message.html:27,log,logging,27,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_message.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_message.html,2,['log'],['logging']
Testability,"﻿. SOFA API: sofa::helper::logging::MessageDispatcher Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Static Public Member Functions |; List of all members . sofa::helper::logging::MessageDispatcher Class Reference . #include <MessageDispatcher.h>; Detailed Description; static interface to manage the list of MessageHandlers that process the Messages . Classes; class  LoggerStream;  ; class  NullLoggerStream;  . Static Public Member Functions; static int addHandler (MessageHandler *o);  to add a MessageHandler More...;  ; static int rmHandler (MessageHandler *o);  to remove a MessageHandler More...;  ; static void clearHandlers ();  to remove every MessageHandlers More...;  ; static std::vector< MessageHandler * > & getHandlers ();  the list of MessageHandlers More...;  ; static LoggerStream info (Message::Class mclass, const ComponentInfo::SPtr &cinfo, const FileInfo::SPtr &fileInfo=EmptyFileInfo);  ; static LoggerStream deprecated (Message::Class mclass, const ComponentInfo::SPtr &cinfo, const FileInfo::SPtr &fileInfo=EmptyFileInfo);  ; static LoggerStream warning (Message::Class mclass, const ComponentInfo::SPtr &cinfo, const FileInfo::SPtr &fileInfo=EmptyFileInfo);  ; static LoggerStream error (Message::Class mclass, const ComponentInfo::SPtr &cinfo, const FileInfo::SPtr &fileInfo=EmptyFileInfo);  ; static LoggerStream fatal (Message::Class mclass, const ComponentInfo::SPtr &cinfo, const FileInfo::SPtr &fileInfo=EmptyFileInfo);  ; static LoggerStream advice (Message::Class mclass, const ComponentInfo::SPtr &cinfo, const FileInfo::SPtr &fileInfo=EmptyFileInfo);  ; static const NullLoggerStream & null ();  ; static MessageDispatcher::LoggerStream log (Message::Class mclass, Message::Type type, const ComponentInfo::SPtr &cinfo, const FileInfo::SPtr &fileInfo=EmptyFileInfo);  ; static void process (sofa::helper::logging::Message &m);  . Function details. ◆ addHandler(). int sofa::helper::logging::MessageDispatcher:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_message_dispatcher.html:27,log,logging,27,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_message_dispatcher.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_message_dispatcher.html,2,['log'],['logging']
Testability,"﻿. SOFA API: sofa::helper::logging::MessageDispatcher::LoggerStream Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::MessageDispatcher::LoggerStream Class Reference . #include <MessageDispatcher.h>; Detailed Description; a utility interface to automatically process a Message at the end of scope of the LoggerStream variable (processed by all the handlers of the MessageDispatcher) . Public Member Functions;  LoggerStream (const LoggerStream &s);  ;  LoggerStream (Message::Class mclass, Message::Type type, const ComponentInfo::SPtr &sender, const FileInfo::SPtr &fileInfo);  ;  ~LoggerStream ();  ; template<class T > ; LoggerStream & operator<< (const T &x);  ; Message getMessage () const;  . Constructor details. ◆ LoggerStream() [1/2]. sofa::helper::logging::MessageDispatcher::LoggerStream::LoggerStream ; (; const LoggerStream & ; s). inline . ◆ LoggerStream() [2/2]. sofa::helper::logging::MessageDispatcher::LoggerStream::LoggerStream ; (; Message::Class ; mclass, . Message::Type ; type, . const ComponentInfo::SPtr & ; sender, . const FileInfo::SPtr & ; fileInfo . ). ◆ ~LoggerStream(). sofa::helper::logging::MessageDispatcher::LoggerStream::~LoggerStream ; (; ). Function details. ◆ getMessage(). Message sofa::helper::logging::MessageDispatcher::LoggerStream::getMessage ; (; ); const. inline . ◆ operator<<(). template<class T > . LoggerStream& sofa::helper::logging::MessageDispatcher::LoggerStream::operator<< ; (; const T & ; x). inline . sofahelperloggingMessageDispatcherLoggerStream; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_message_dispatcher_1_1_logger_stream.html:27,log,logging,27,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_message_dispatcher_1_1_logger_stream.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_message_dispatcher_1_1_logger_stream.html,7,['log'],['logging']
Testability,﻿. SOFA API: sofa::helper::logging::MessageDispatcher::NullLoggerStream Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Static Protected Member Functions |; Friends |; List of all members . sofa::helper::logging::MessageDispatcher::NullLoggerStream Class Reference . #include <MessageDispatcher.h>. Public Member Functions; template<typename T > ; const NullLoggerStream & operator<< (const T &) const;  . Static Protected Member Functions; static const NullLoggerStream & getInstance ();  . Friends; class MessageDispatcher;  . Function details. ◆ getInstance(). static const NullLoggerStream& sofa::helper::logging::MessageDispatcher::NullLoggerStream::getInstance ; (; ). inlinestaticprotected . ◆ operator<<(). template<typename T > . const NullLoggerStream& sofa::helper::logging::MessageDispatcher::NullLoggerStream::operator<< ; (; const T & ; ); const. inline . Related details. ◆ MessageDispatcher. friend class MessageDispatcher. friend . sofahelperloggingMessageDispatcherNullLoggerStream; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_message_dispatcher_1_1_null_logger_stream.html:27,log,logging,27,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_message_dispatcher_1_1_null_logger_stream.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_message_dispatcher_1_1_null_logger_stream.html,4,['log'],['logging']
Testability,﻿. SOFA API: sofa::helper::logging::MessageDispatcherImpl Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::helper::logging::MessageDispatcherImpl Class Reference . Public Attributes; mutex m_mutex;  ; std::vector< MessageHandler * > m_messageHandlers = getDefaultMessageHandlers();  . Public Member Functions; mutex & getMutex ();  ; std::vector< MessageHandler * > & getHandlers ();  ; int addHandler (MessageHandler *o);  ; int rmHandler (MessageHandler *o);  ; void clearHandlers ();  ; void process (sofa::helper::logging::Message &m);  . Attribute details. ◆ m_messageHandlers. std::vector<MessageHandler*> sofa::helper::logging::MessageDispatcherImpl::m_messageHandlers = getDefaultMessageHandlers(). ◆ m_mutex. mutex sofa::helper::logging::MessageDispatcherImpl::m_mutex. Function details. ◆ addHandler(). int sofa::helper::logging::MessageDispatcherImpl::addHandler ; (; MessageHandler * ; o). inline . ◆ clearHandlers(). void sofa::helper::logging::MessageDispatcherImpl::clearHandlers ; (; ). inline . ◆ getHandlers(). std::vector<MessageHandler*>& sofa::helper::logging::MessageDispatcherImpl::getHandlers ; (; ). inline . ◆ getMutex(). mutex& sofa::helper::logging::MessageDispatcherImpl::getMutex ; (; ). inline . ◆ process(). void sofa::helper::logging::MessageDispatcherImpl::process ; (; sofa::helper::logging::Message & ; m). inline . ◆ rmHandler(). int sofa::helper::logging::MessageDispatcherImpl::rmHandler ; (; MessageHandler * ; o). inline . sofahelperloggingMessageDispatcherImpl; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_message_dispatcher_impl.html:27,log,logging,27,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_message_dispatcher_impl.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_message_dispatcher_impl.html,12,['log'],['logging']
Testability,"﻿. SOFA API: sofa::helper::logging::MessageFormatter Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Protected Member Functions |; List of all members . sofa::helper::logging::MessageFormatter Class Referenceabstract . #include <MessageFormatter.h>. Inheritance diagram for sofa::helper::logging::MessageFormatter:. [legend]. Public Member Functions; virtual void formatMessage (const Message &m, std::ostream &out)=0;  . Protected Member Functions;  MessageFormatter ();  ; virtual std::string getPrefixText (unsigned int type) const;  ; virtual std::ostream & setColor (std::ostream &stream, unsigned int type) const;  . Constructor details. ◆ MessageFormatter(). sofa::helper::logging::MessageFormatter::MessageFormatter ; (; ). inlineprotected . Function details. ◆ formatMessage(). virtual void sofa::helper::logging::MessageFormatter::formatMessage ; (; const Message & ; m, . std::ostream & ; out . ). pure virtual . Implemented in sofa::helper::logging::DefaultStyleMessageFormatter, sofa::helper::logging::ClangStyleMessageFormatter, and sofa::helper::logging::RichConsoleStyleMessageFormatter. ◆ getPrefixText(). std::string sofa::helper::logging::MessageFormatter::getPrefixText ; (; unsigned int ; type); const. protectedvirtual . Reimplemented in sofa::helper::logging::ClangStyleMessageFormatter. ◆ setColor(). std::ostream & sofa::helper::logging::MessageFormatter::setColor ; (; std::ostream & ; stream, . unsigned int ; type . ); const. protectedvirtual . sofahelperloggingMessageFormatter; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_message_formatter.html:27,log,logging,27,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_message_formatter.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_message_formatter.html,11,['log'],['logging']
Testability,"﻿. SOFA API: sofa::helper::logging::MessageHandler Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::MessageHandler Class Referenceabstract . #include <MessageHandler.h>. Inheritance diagram for sofa::helper::logging::MessageHandler:. [legend]. Public Member Functions; virtual ~MessageHandler ();  ; virtual void process (Message &m)=0;  . Constructor details. ◆ ~MessageHandler(). virtual sofa::helper::logging::MessageHandler::~MessageHandler ; (; ). inlinevirtual . Function details. ◆ process(). virtual void sofa::helper::logging::MessageHandler::process ; (; Message & ; m). pure virtual . Implemented in sofa::testing::GtestMessageHandler, sofa::helper::logging::TracyMessageHandler, sofa::helper::logging::routingmessagehandler::RoutingMessageHandler, sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler, sofa::helper::logging::FileMessageHandler, sofa::helper::logging::ExceptionMessageHandler, sofa::helper::logging::countingmessagehandler::CountingMessageHandler, sofa::helper::logging::ConsoleMessageHandler, sofa::helper::logging::ClangMessageHandler, sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler, and sofa::helper::logging::SilentMessageHandler. sofahelperloggingMessageHandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_message_handler.html:27,log,logging,27,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_message_handler.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_message_handler.html,17,"['log', 'test']","['logging', 'loggingmessagehandler', 'testing']"
Testability,"﻿. SOFA API: sofa::helper::logging::RichConsoleStyleMessageFormatter Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Static Public Member Functions |; List of all members . sofa::helper::logging::RichConsoleStyleMessageFormatter Class Reference . #include <RichConsoleStyleMessageFormatter.h>; The RichConsoleStyleMessageFormatter class. ; More... Inheritance diagram for sofa::helper::logging::RichConsoleStyleMessageFormatter:. [legend]; Detailed Description; The RichConsoleStyleMessageFormatter class. ; The class implement a message formatter dedicated to console pretty printing on a console Among other thing it feature formatting using a markdown like syntax:; color rendering, 'italics' or italics; alignment and wrapping for long message that are then much easier to read.; automatic reading of the console number of column for prettier display. . Public Member Functions; void formatMessage (const Message &m, std::ostream &out) override;  . Static Public Member Functions; static RichConsoleStyleMessageFormatter & getInstance ();  . Additional Inherited Members;  Protected Member Functions inherited from sofa::helper::logging::MessageFormatter;  MessageFormatter ();  ; virtual std::string getPrefixText (unsigned int type) const;  ; virtual std::ostream & setColor (std::ostream &stream, unsigned int type) const;  . Function details. ◆ formatMessage(). void sofa::helper::logging::RichConsoleStyleMessageFormatter::formatMessage ; (; const Message & ; m, . std::ostream & ; out . ). overridevirtual . Implements sofa::helper::logging::MessageFormatter. ◆ getInstance(). static RichConsoleStyleMessageFormatter& sofa::helper::logging::RichConsoleStyleMessageFormatter::getInstance ; (; ). inlinestatic . sofahelperloggingRichConsoleStyleMessageFormatter; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_rich_console_style_message_formatter.html:27,log,logging,27,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_rich_console_style_message_formatter.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_rich_console_style_message_formatter.html,7,['log'],['logging']
Testability,﻿. SOFA API: sofa::helper::logging::SilentMessageHandler Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::SilentMessageHandler Class Reference . #include <SilentMessageHandler.h>; This class is a MessageHandler that simply do nothing with the message. ; More... Inheritance diagram for sofa::helper::logging::SilentMessageHandler:. [legend]; Detailed Description; This class is a MessageHandler that simply do nothing with the message. . Public Member Functions; void process (Message &) override;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Function details. ◆ process(). void sofa::helper::logging::SilentMessageHandler::process ; (; Message & ; ). overridevirtual . Implements sofa::helper::logging::MessageHandler. sofahelperloggingSilentMessageHandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_silent_message_handler.html:27,log,logging,27,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_silent_message_handler.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_silent_message_handler.html,6,['log'],['logging']
Testability,﻿. SOFA API: sofa::helper::logging::SofaComponentInfo Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::helper::logging::SofaComponentInfo Class Reference . #include <Base.h>. Inheritance diagram for sofa::helper::logging::SofaComponentInfo:. [legend]. Public Attributes; const sofa::core::objectmodel::Base * m_component;  ; std::string m_name;  . Public Member Functions;  SofaComponentInfo (const sofa::core::objectmodel::Base *c);  ; const std::string & name () const;  ; std::ostream & toStream (std::ostream &out) const;  ;  Public Member Functions inherited from sofa::helper::logging::ComponentInfo;  ComponentInfo ();  ;  ComponentInfo (const std::string &name);  ; virtual ~ComponentInfo ();  ; const std::string & sender () const;  Returns a string identifying the sender of a message. More...;  . Additional Inherited Members;  Protected Attributes inherited from sofa::helper::logging::ComponentInfo; std::string m_sender;  . Attribute details. ◆ m_component. const sofa::core::objectmodel::Base* sofa::helper::logging::SofaComponentInfo::m_component. ◆ m_name. std::string sofa::helper::logging::SofaComponentInfo::m_name. Constructor details. ◆ SofaComponentInfo(). sofa::helper::logging::SofaComponentInfo::SofaComponentInfo ; (; const sofa::core::objectmodel::Base * ; c). Function details. ◆ name(). const std::string& sofa::helper::logging::SofaComponentInfo::name ; (; ); const. inline . ◆ toStream(). std::ostream& sofa::helper::logging::SofaComponentInfo::toStream ; (; std::ostream & ; out); const. inlinevirtual . Write a textual version of the content of the ComponentInfo. You should override this function when inheriting from the ComponentInfo base class. ; Reimplemented from sofa::helper::logging::ComponentInfo. sofahelperloggingSofaComponentInfo; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_sofa_component_info.html:27,log,logging,27,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_sofa_component_info.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_sofa_component_info.html,11,['log'],['logging']
Testability,﻿. SOFA API: sofa::helper::logging::TracyMessageHandler Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::TracyMessageHandler Class Reference . #include <TracyMessageHandler.h>; Send the message to the Tracy profiler. ; More... Inheritance diagram for sofa::helper::logging::TracyMessageHandler:. [legend]; Detailed Description; Send the message to the Tracy profiler. . Public Member Functions;  TracyMessageHandler (MessageFormatter *formatter=nullptr);  ; void process (Message &m) override;  ; void setMessageFormatter (MessageFormatter *formatter);  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ TracyMessageHandler(). sofa::helper::logging::TracyMessageHandler::TracyMessageHandler ; (; MessageFormatter * ; formatter = nullptr). Create a new ConsoleMessageHandler. By default the handler is using the DefaultStyleMessageFormatter object to format the message. . Function details. ◆ process(). void sofa::helper::logging::TracyMessageHandler::process ; (; Message & ; m). overridevirtual . Implements sofa::helper::logging::MessageHandler. ◆ setMessageFormatter(). void sofa::helper::logging::TracyMessageHandler::setMessageFormatter ; (; MessageFormatter * ; formatter). sofahelperloggingTracyMessageHandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_tracy_message_handler.html:27,log,logging,27,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_tracy_message_handler.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_tracy_message_handler.html,8,['log'],['logging']
Testability,﻿. SOFA API: sofa::helper::logging::countingmessagehandler Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes . sofa::helper::logging::countingmessagehandler Namespace Reference . Classes; class  CountingMessageHandler;  The CountingMessageHandler class count the messages by types. More...;  ; class  MainCountingMessageHandler;  The MainCountingMessageHandler class contains a singleton to CountingMessageHandler and offer static version of CountingMessageHandler API. More...;  . Detailed Description; I use a per-file namespace so that I can employ the 'using' keywords without fearing it will leak names into the global namespace. When closing this namespace selected objects from this per-file namespace are then imported into their parent namespace for ease of use. . sofahelperloggingcountingmessagehandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper_1_1logging_1_1countingmessagehandler.html:27,log,logging,27,api/master/sofa/html/namespacesofa_1_1helper_1_1logging_1_1countingmessagehandler.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper_1_1logging_1_1countingmessagehandler.html,2,['log'],['logging']
Testability,﻿. SOFA API: sofa::helper::logging::countingmessagehandler::CountingMessageHandler Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::countingmessagehandler::CountingMessageHandler Class Reference . #include <CountingMessageHandler.h>; The CountingMessageHandler class count the messages by types. ; More... Inheritance diagram for sofa::helper::logging::countingmessagehandler::CountingMessageHandler:. [legend]; Detailed Description; The CountingMessageHandler class count the messages by types. ; This class is a MessageHandler that can be added to in a MessageDispatcher. Once set the class will start counting the messages passing through the MessageDispatcher according to their each Message::Type.; It is possible to query the number of a specific Message::Type using the getMessageCountFor function.; User interested in having a singleton of this class should have a look at See alsoMainCountingMessageHandler. . Public Member Functions;  CountingMessageHandler ();  ;  ~CountingMessageHandler () override;  ; void reset ();  ; int getMessageCountFor (const Message::Type &type) const;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ CountingMessageHandler(). sofa::helper::logging::countingmessagehandler::CountingMessageHandler::CountingMessageHandler ; (; ). ◆ ~CountingMessageHandler(). sofa::helper::logging::countingmessagehandler::CountingMessageHandler::~CountingMessageHandler ; (; ). inlineoverride . Function details. ◆ getMessageCountFor(). int sofa::helper::logging::countingmessagehandler::CountingMessageHandler::getMessageCountFor ; (; const Message::Type & ; type); const. ◆ process(). void sofa::helper::logging::countingmessagehandler::CountingMessageHandler::process ; (; Message & ; m). overr,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1countingmessagehandler_1_1_counting_message_handler.html:27,log,logging,27,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1countingmessagehandler_1_1_counting_message_handler.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1countingmessagehandler_1_1_counting_message_handler.html,3,['log'],['logging']
Testability,﻿. SOFA API: sofa::helper::logging::countingmessagehandler::MainCountingMessageHandler Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::helper::logging::countingmessagehandler::MainCountingMessageHandler Class Reference . #include <CountingMessageHandler.h>; The MainCountingMessageHandler class contains a singleton to CountingMessageHandler and offer static version of CountingMessageHandler API. ; More...; Detailed Description; The MainCountingMessageHandler class contains a singleton to CountingMessageHandler and offer static version of CountingMessageHandler API. ; See alsoCountingMessageHandler . Static Public Member Functions; static CountingMessageHandler & getInstance ();  ; static void reset ();  ; static int getMessageCountFor (const Message::Type &type);  . Function details. ◆ getInstance(). sofa::helper::logging::CountingMessageHandler & sofa::helper::logging::countingmessagehandler::MainCountingMessageHandler::getInstance ; (; ). static . ◆ getMessageCountFor(). int sofa::helper::logging::countingmessagehandler::MainCountingMessageHandler::getMessageCountFor ; (; const Message::Type & ; type). static . ◆ reset(). void sofa::helper::logging::countingmessagehandler::MainCountingMessageHandler::reset ; (; void ; ). static . sofahelperloggingcountingmessagehandlerMainCountingMessageHandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1countingmessagehandler_1_1_main_counting_message_handler.html:27,log,logging,27,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1countingmessagehandler_1_1_main_counting_message_handler.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1countingmessagehandler_1_1_main_counting_message_handler.html,6,['log'],['logging']
Testability,﻿. SOFA API: sofa::helper::logging::loggingmessagehandler Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes . sofa::helper::logging::loggingmessagehandler Namespace Reference . Classes; class  LoggingMessageHandler;  The LoggingMessageHandler class saves a copy of the messages in a buffer. More...;  ; class  MainLoggingMessageHandler;  The MainLoggingMessageHandler class contains a singleton to CountingMessageHandler and offer static version of CountingMessageHandler API. More...;  ; class  LogMessage;  . Detailed Description; I use a per-file namespace so that I can employ the 'using' keywords without fearing it will leak names into the global namespace. When closing this namespace selected objects from this per-file namespace are then imported into their parent namespace for ease of use. . sofahelperloggingloggingmessagehandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper_1_1logging_1_1loggingmessagehandler.html:27,log,logging,27,api/master/sofa/html/namespacesofa_1_1helper_1_1logging_1_1loggingmessagehandler.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper_1_1logging_1_1loggingmessagehandler.html,4,['log'],"['logging', 'loggingmessagehandler']"
Testability,﻿. SOFA API: sofa::helper::logging::loggingmessagehandler::LogMessage Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::loggingmessagehandler::LogMessage Class Reference . #include <LoggingMessageHandler.h>. Public Member Functions;  LogMessage ();  ;  ~LogMessage ();  ; std::vector< Message >::const_iterator begin ();  ; std::vector< Message >::const_iterator end ();  ; size_t size ();  . Constructor details. ◆ LogMessage(). sofa::helper::logging::loggingmessagehandler::LogMessage::LogMessage ; (; ). inline . ◆ ~LogMessage(). sofa::helper::logging::loggingmessagehandler::LogMessage::~LogMessage ; (; ). inline . Function details. ◆ begin(). std::vector<Message>::const_iterator sofa::helper::logging::loggingmessagehandler::LogMessage::begin ; (; ). inline . ◆ end(). std::vector<Message>::const_iterator sofa::helper::logging::loggingmessagehandler::LogMessage::end ; (; ). inline . ◆ size(). size_t sofa::helper::logging::loggingmessagehandler::LogMessage::size ; (; ). inline . sofahelperloggingloggingmessagehandlerLogMessage; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_log_message.html:27,log,logging,27,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_log_message.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_log_message.html,14,['log'],"['logging', 'loggingmessagehandler']"
Testability,﻿. SOFA API: sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler Class Reference . #include <LoggingMessageHandler.h>; The LoggingMessageHandler class saves a copy of the messages in a buffer. ; More... Inheritance diagram for sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler:. [legend]; Detailed Description; The LoggingMessageHandler class saves a copy of the messages in a buffer. ; This class is a MessageHandler that can be added to in a MessageDispatcher. Once set the class can start copying the messages passing through the MessageDispatcher in a buffer.; Dedicated function allows to activate/deactivate the saving of the messages as well as to clear the content of the buffer. The class keeps tracks of its number of activation/deactivation. Message logging is activated as long as there is not a paired number of activation/deactivation.; User interested in having a singleton of this class should have a look at See alsoMainLoggingMessageHandler.; You can also see the See alsoLogMessage for example of use . Public Member Functions;  LoggingMessageHandler ();  ;  ~LoggingMessageHandler () override;  ; void reset ();  ; size_t activate ();  ; size_t deactivate ();  ; const vector< Message > & getMessages () const;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ LoggingMessageHandler(). sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::LoggingMessageHandler ; (; ). ◆ ~LoggingMessageHandler(). sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::~LoggingMessageHandler ; (; ). inlineoverride . Function details. ◆ activate(). size_t sofa,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html:27,log,logging,27,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html,6,['log'],"['logging', 'loggingmessagehandler']"
Testability,﻿. SOFA API: sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandler Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandler Class Reference . #include <LoggingMessageHandler.h>; The MainLoggingMessageHandler class contains a singleton to CountingMessageHandler and offer static version of CountingMessageHandler API. ; More...; Detailed Description; The MainLoggingMessageHandler class contains a singleton to CountingMessageHandler and offer static version of CountingMessageHandler API. ; See alsoLoggingMessageHandler . Static Public Member Functions; static LoggingMessageHandler & getInstance ();  ; static size_t activate ();  ; static size_t deactivate ();  ; static const vector< Message > & getMessages ();  . Function details. ◆ activate(). size_t sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandler::activate ; (; ). static . ◆ deactivate(). size_t sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandler::deactivate ; (; ). static . ◆ getInstance(). LoggingMessageHandler & sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandler::getInstance ; (; ). static . ◆ getMessages(). const vector< Message > & sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandler::getMessages ; (; ). static . sofahelperloggingloggingmessagehandlerMainLoggingMessageHandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_main_logging_message_handler.html:27,log,logging,27,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_main_logging_message_handler.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_main_logging_message_handler.html,12,['log'],"['logging', 'loggingmessagehandler']"
Testability,﻿. SOFA API: sofa::helper::logging::percomponentloggingmessagehandler Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes . sofa::helper::logging::percomponentloggingmessagehandler Namespace Reference . Classes; class  PerComponentLoggingMessageHandler;  The RoutingMessageHandler class saves a copy of the messages in a buffer. More...;  ; class  MainPerComponentLoggingMessageHandler;  The MainPerComponentLoggingMessageHandler class contains a singleton to PerComponentLoggingMessageHandler and offer static version of PerComponentLoggingMessageHandler API. More...;  . Detailed Description; I use a per-file namespace so that I can employ the 'using' keywords without fearing it will leak names into the global namespace. When closing this namespace selected objects from this per-file namespace are then imported into their parent namespace for ease of use. . sofahelperloggingpercomponentloggingmessagehandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper_1_1logging_1_1percomponentloggingmessagehandler.html:27,log,logging,27,api/master/sofa/html/namespacesofa_1_1helper_1_1logging_1_1percomponentloggingmessagehandler.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper_1_1logging_1_1percomponentloggingmessagehandler.html,2,['log'],['logging']
Testability,﻿. SOFA API: sofa::helper::logging::percomponentloggingmessagehandler::MainPerComponentLoggingMessageHandler Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::helper::logging::percomponentloggingmessagehandler::MainPerComponentLoggingMessageHandler Class Reference . #include <PerComponentLoggingMessageHandler.h>; The MainPerComponentLoggingMessageHandler class contains a singleton to PerComponentLoggingMessageHandler and offer static version of PerComponentLoggingMessageHandler API. ; More...; Detailed Description; The MainPerComponentLoggingMessageHandler class contains a singleton to PerComponentLoggingMessageHandler and offer static version of PerComponentLoggingMessageHandler API. ; See alsoPerComponentLoggingMessageHandler . Static Public Member Functions; static PerComponentLoggingMessageHandler & getInstance ();  . Function details. ◆ getInstance(). PerComponentLoggingMessageHandler & sofa::helper::logging::percomponentloggingmessagehandler::MainPerComponentLoggingMessageHandler::getInstance ; (; ). static . sofahelperloggingpercomponentloggingmessagehandlerMainPerComponentLoggingMessageHandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1percomponentloggingmessagehandler_1_1_main_per_component_logging_message_handler.html:27,log,logging,27,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1percomponentloggingmessagehandler_1_1_main_per_component_logging_message_handler.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1percomponentloggingmessagehandler_1_1_main_per_component_logging_message_handler.html,3,['log'],['logging']
Testability,﻿. SOFA API: sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler Class Reference . #include <PerComponentLoggingMessageHandler.h>; The RoutingMessageHandler class saves a copy of the messages in a buffer. ; More... Inheritance diagram for sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler:. [legend]; Detailed Description; The RoutingMessageHandler class saves a copy of the messages in a buffer. ; This class is a MessageHandler that can be added to in a MessageDispatcher. Once set the class can start copying the messages passing through the MessageDispatcher in a buffer.; User interested in having a singleton of this class should have a look at See alsoMainRoutingMessageHandler. . Public Member Functions;  PerComponentLoggingMessageHandler ();  ;  ~PerComponentLoggingMessageHandler () override;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ PerComponentLoggingMessageHandler(). sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler::PerComponentLoggingMessageHandler ; (; ). ◆ ~PerComponentLoggingMessageHandler(). sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler::~PerComponentLoggingMessageHandler ; (; ). inlineoverride . Function details. ◆ process(). void sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler::process ; (; Message & ; m). overridevirtual . Inherited from MessageHandler. ; Implements sofa::helper::logging::MessageHandler. sofahelperloggingpercomponentloggingmessage,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1percomponentloggingmessagehandler_1_1_per_component_logging_message_handler.html:27,log,logging,27,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1percomponentloggingmessagehandler_1_1_per_component_logging_message_handler.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1percomponentloggingmessagehandler_1_1_per_component_logging_message_handler.html,3,['log'],['logging']
Testability,﻿. SOFA API: sofa::helper::logging::routingmessagehandler Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Typedefs . sofa::helper::logging::routingmessagehandler Namespace Reference . Classes; class  RoutingMessageHandler;  The RoutingMessageHandler class saves a copy of the messages in a buffer. More...;  ; class  MainRoutingMessageHandler;  The MainRoutingMessageHandler class contains a singleton to RoutingMessageHandler and offer static version of RoutingMessageHandler API. More...;  . Typedefs; typedef bool(* FilterFunction) (Message &);  . Detailed Description; I use a per-file namespace so that I can employ the 'using' keywords without fearing it will leak names into the global namespace. When closing this namespace selected objects from this per-file namespace are then imported into their parent namespace for ease of use. ; Typedef Documentation. ◆ FilterFunction. typedef bool(* sofa::helper::logging::routingmessagehandler::FilterFunction) (Message &). sofahelperloggingroutingmessagehandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper_1_1logging_1_1routingmessagehandler.html:27,log,logging,27,api/master/sofa/html/namespacesofa_1_1helper_1_1logging_1_1routingmessagehandler.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper_1_1logging_1_1routingmessagehandler.html,3,['log'],['logging']
Testability,"﻿. SOFA API: sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandler Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandler Class Reference . #include <RoutingMessageHandler.h>; The MainRoutingMessageHandler class contains a singleton to RoutingMessageHandler and offer static version of RoutingMessageHandler API. ; More...; Detailed Description; The MainRoutingMessageHandler class contains a singleton to RoutingMessageHandler and offer static version of RoutingMessageHandler API. ; See alsoRoutingMessageHandler . Static Public Member Functions; static RoutingMessageHandler & getInstance ();  ; static void setAFilter (FilterFunction, MessageHandler *handler);  All the message of the given class will be routed to this handler. More...;  ; static void removeAllFilters ();  . Function details. ◆ getInstance(). RoutingMessageHandler & sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandler::getInstance ; (; ). static . ◆ removeAllFilters(). void sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandler::removeAllFilters ; (; ). static . ◆ setAFilter(). void sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandler::setAFilter ; (; FilterFunction ; filter, . MessageHandler * ; handler . ). static . All the message of the given class will be routed to this handler. . sofahelperloggingroutingmessagehandlerMainRoutingMessageHandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_main_routing_message_handler.html:27,log,logging,27,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_main_routing_message_handler.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_main_routing_message_handler.html,5,['log'],['logging']
Testability,"﻿. SOFA API: sofa::helper::logging::routingmessagehandler::RoutingMessageHandler Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::routingmessagehandler::RoutingMessageHandler Class Reference . #include <RoutingMessageHandler.h>; The RoutingMessageHandler class saves a copy of the messages in a buffer. ; More... Inheritance diagram for sofa::helper::logging::routingmessagehandler::RoutingMessageHandler:. [legend]; Detailed Description; The RoutingMessageHandler class saves a copy of the messages in a buffer. ; This class is a MessageHandler to implement complex routing rules.; User interested in having a singleton of this class should have a look at See alsoMainRoutingMessageHandler. . Public Member Functions;  RoutingMessageHandler ();  ;  ~RoutingMessageHandler () override;  ; void setAFilter (FilterFunction, MessageHandler *handler);  All the message of the given class will be routed to this handler. More...;  ; void removeAllFilters ();  Remove all the filter but don't delete the associated memory. More...;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ RoutingMessageHandler(). sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::RoutingMessageHandler ; (; ). ◆ ~RoutingMessageHandler(). sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::~RoutingMessageHandler ; (; ). inlineoverride . Function details. ◆ process(). void sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::process ; (; Message & ; m). overridevirtual . Inherited from MessageHandler. ; Implements sofa::helper::logging::MessageHandler. ◆ removeAllFilters(). void sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::removeAllFilters ; (; ). Remove all the filte",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler.html:27,log,logging,27,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler.html,3,['log'],['logging']
Testability,"﻿. SOFA API: sofa::linearalgebra Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Namespaces |; Classes |; Typedefs |; Enumerations |; Functions |; Variables . sofa::linearalgebra Namespace Reference . Namespaces;  sparsematrixproduct;  ;  testing;  . Classes; class  matrix_bloc_traits< defaulttype::RigidDeriv< N, T >, IndexType >;  ; struct  BaseMatrixLinearOpMV_BlockDiagonal;  ; struct  BaseMatrixLinearOpMV_BlockDiagonal< Real, 1, 1, add, transpose, M, V1, V2 >;  ; struct  BaseMatrixLinearOpMV_BlockSparse;  ; class  BaseMatrixLinearOpMV;  ; class  BaseMatrixLinearOpMulV;  ; class  BaseMatrixLinearOpPMulV;  ; class  BaseMatrixLinearOpMulTV;  ; class  BaseMatrixLinearOpPMulTV;  ; struct  BaseMatrixLinearOpAM_BlockSparse;  ; struct  BaseMatrixLinearOpAMS_BlockSparse;  ; struct  BaseMatrixLinearOpAM1_BlockSparse;  ; class  BaseMatrixLinearOpAM;  ; class  BaseMatrixLinearOpAddM;  ; class  BaseMatrixLinearOpAddMT;  ; class  BaseMatrix;  ; class  BaseVector;  ; class  BlockDiagonalMatrix;  Simple full matrix container. More...;  ; class  BlockFullMatrix;  Simple block full matrix container (used for InvMatrixType) More...;  ; class  BlockVector;  ; class  BTDMatrix;  Simple BTD matrix container. More...;  ; class  CRSConstraintPolicy;  ; class  CompressedRowSparseMatrixConstraint;  ; struct  CompressedRowSparseMatrixToEigenSparse;  ; struct  CompressedRowSparseMatrixToEigenSparseVec;  ; struct  CompressedRowSparseMatrixToEigenSparse< sofa::type::Vec< N, Real > >;  ; struct  EigenSparseToCompressedRowSparseMatrix;  ; struct  EigenSparseToCompressedRowSparseMatrixVec;  ; class  EigenSparseToCompressedRowSparseMatrix< sofa::type::Vec< N, Real > >;  ; class  EigenSparseToCompressedRowSparseMatrix< sofa::defaulttype::RigidDeriv< N, Real > >;  ; struct  CRSBlockTraits;  Traits class which defines the containers to use for a given type of block. More...;  ; struct  CRSDefaultPolicy;  ; class  CompressedRowSparseMatrixGeneric;  ; clas",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1linearalgebra.html:286,test,testing,286,api/master/sofa/html/namespacesofa_1_1linearalgebra.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1linearalgebra.html,1,['test'],['testing']
Testability,"﻿. SOFA API: sofa::linearalgebra::testing Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Functions . sofa::linearalgebra::testing Namespace Reference . Classes; struct  TestBaseMatrixTraits;  ; class  TestBaseMatrix;  Type-parameterized tests for classes derived from BaseMatrix. More...;  ; struct  SparseMatrixProductInit;  ; struct  TestSparseMatrixProduct;  . Functions;  TYPED_TEST_SUITE_P (TestBaseMatrix);  ;  TYPED_TEST_P (TestBaseMatrix, resize);  ;  TYPED_TEST_P (TestBaseMatrix, addScalar);  ;  TYPED_TEST_P (TestBaseMatrix, addBloc);  ;  REGISTER_TYPED_TEST_SUITE_P (TestBaseMatrix, resize, addScalar, addBloc);  ;  TYPED_TEST_SUITE_P (TestSparseMatrixProduct);  ;  TYPED_TEST_P (TestSparseMatrixProduct, squareMatrix);  ;  TYPED_TEST_P (TestSparseMatrixProduct, rectangularMatrix);  ;  REGISTER_TYPED_TEST_SUITE_P (TestSparseMatrixProduct, squareMatrix, rectangularMatrix);  . Function Documentation. ◆ REGISTER_TYPED_TEST_SUITE_P() [1/2]. sofa::linearalgebra::testing::REGISTER_TYPED_TEST_SUITE_P ; (; TestBaseMatrix ; , . resize ; , . addScalar ; , . addBloc ;  . ). ◆ REGISTER_TYPED_TEST_SUITE_P() [2/2]. sofa::linearalgebra::testing::REGISTER_TYPED_TEST_SUITE_P ; (; TestSparseMatrixProduct ; , . squareMatrix ; , . rectangularMatrix ;  . ). ◆ TYPED_TEST_P() [1/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestBaseMatrix ; , . addBloc ;  . ). ◆ TYPED_TEST_P() [2/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestBaseMatrix ; , . addScalar ;  . ). ◆ TYPED_TEST_P() [3/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestBaseMatrix ; , . resize ;  . ). ◆ TYPED_TEST_P() [4/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestSparseMatrixProduct ; , . rectangularMatrix ;  . ). ◆ TYPED_TEST_P() [5/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestSparseMatrixProduct ; , . squareMatrix ;  . ). ◆ TYPED_TEST_SUITE_P() [1/2]. sofa::linearalgebra::testing::TYPED_TEST_SUITE_P ; (; TestBaseMatrix ; ). ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1linearalgebra_1_1testing.html:34,test,testing,34,api/master/sofa/html/namespacesofa_1_1linearalgebra_1_1testing.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1linearalgebra_1_1testing.html,3,['test'],"['testing', 'tests']"
Testability,﻿. SOFA API: sofa::linearalgebra::testing::SparseMatrixProductInit< T > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::linearalgebra::testing::SparseMatrixProductInit< T > Struct Template Reference . #include <SparseMatrixProduct_test.h>. Static Public Member Functions; static void init (T &product);  ; static void cleanup (T &product);  . Function details. ◆ cleanup(). template<class T > . static void sofa::linearalgebra::testing::SparseMatrixProductInit< T >::cleanup ; (; T & ; product). inlinestatic . ◆ init(). template<class T > . static void sofa::linearalgebra::testing::SparseMatrixProductInit< T >::init ; (; T & ; product). inlinestatic . sofalinearalgebratestingSparseMatrixProductInit; Generated on Mon Nov 11 2024 03:32:21 for SOFA API by 1.9.1 . ,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_sparse_matrix_product_init.html:34,test,testing,34,api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_sparse_matrix_product_init.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_sparse_matrix_product_init.html,4,['test'],['testing']
Testability,"﻿. SOFA API: sofa::linearalgebra::testing::TestBaseMatrix< T > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Attributes |; Protected Attributes |; Public Member Functions |; List of all members . sofa::linearalgebra::testing::TestBaseMatrix< T > Class Template Reference . #include <BaseMatrix_test.h>; Type-parameterized tests for classes derived from BaseMatrix. ; More... Inheritance diagram for sofa::linearalgebra::testing::TestBaseMatrix< T >:. [legend]; Detailed Description; template<class T>; class sofa::linearalgebra::testing::TestBaseMatrix< T >; Type-parameterized tests for classes derived from BaseMatrix. . Static Public Attributes; static constexpr sofa::Index NbRows = T::NbRows;  ; static constexpr sofa::Index NbCols = T::NbCols;  ;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  . Protected Attributes; sofa::type::Mat< NbRows, NbCols, Real > m_modelMatrix;  ; std::unique_ptr< sofa::linearalgebra::BaseMatrix > m_testedMatrix {nullptr};  . Public Member Functions; void onSetUp () override;  ; void onTearDown () override;  ; void checkResize ();  ; void checkAddScalar ();  ; void checkAddBloc (sofa::linearalgebra::BaseMatrix::Index posRow, sofa::linearalgebra::BaseMatrix::Index posCol);  ;  Public Member Functions inherited from sofa::testing::NumericTest< T::Real >;  NumericTest ();  ; Real vectorMaxDiff (const Container1 &c1, const Container2 &c2);  Return the maximum difference between two containers. Issues a failure if sizes are different. More...;  ; Real vectorMaxAbs (const Container &c);  Return the maximum absolute value of a container. More...;  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  . Additional Inherited Members;  Public Attributes inherited from sofa::testing::BaseTe",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1testing_1_1_test_base_matrix.html:34,test,testing,34,api/master/sofa/html/classsofa_1_1linearalgebra_1_1testing_1_1_test_base_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1testing_1_1_test_base_matrix.html,7,['test'],"['testing', 'tests']"
Testability,"﻿. SOFA API: sofa::linearalgebra::testing::TestBaseMatrixTraits< TMatrix, TNbRows, TNbCols, TReal > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Attributes |; List of all members . sofa::linearalgebra::testing::TestBaseMatrixTraits< TMatrix, TNbRows, TNbCols, TReal > Struct Template Reference . #include <BaseMatrix_test.h>. Static Public Attributes; static constexpr sofa::Index NbRows = TNbRows;  ; static constexpr sofa::Index NbCols = TNbCols;  . Attribute details. ◆ NbCols. template<class TMatrix , sofa::Index TNbRows, sofa::Index TNbCols, class TReal > . constexpr sofa::Index sofa::linearalgebra::testing::TestBaseMatrixTraits< TMatrix, TNbRows, TNbCols, TReal >::NbCols = TNbCols. staticconstexpr . ◆ NbRows. template<class TMatrix , sofa::Index TNbRows, sofa::Index TNbCols, class TReal > . constexpr sofa::Index sofa::linearalgebra::testing::TestBaseMatrixTraits< TMatrix, TNbRows, TNbCols, TReal >::NbRows = TNbRows. staticconstexpr . sofalinearalgebratestingTestBaseMatrixTraits; Generated on Mon Nov 11 2024 03:32:17 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_base_matrix_traits.html:34,test,testing,34,api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_base_matrix_traits.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_base_matrix_traits.html,4,['test'],['testing']
Testability,"﻿. SOFA API: sofa::linearalgebra::testing::TestSparseMatrixProduct< T > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Static Public Member Functions |; List of all members . sofa::linearalgebra::testing::TestSparseMatrixProduct< T > Struct Template Reference . #include <SparseMatrixProduct_test.h>. Inheritance diagram for sofa::linearalgebra::testing::TestSparseMatrixProduct< T >:. [legend]; Detailed Description; template<class T>; struct sofa::linearalgebra::testing::TestSparseMatrixProduct< T >; Test the class SparseMatrixProduct The class is designed to use the templates defined in TestSparseMatrixProductTraits The type of matrix can be any of the types supported by SparseMatrixProduct. . Public Member Functions; bool checkMatrix (typename LHSMatrix::Index nbRowsA, typename LHSMatrix::Index nbColsA, typename RHSMatrix::Index nbColsB, Real sparsity);  ;  Public Member Functions inherited from sofa::testing::NumericTest< _Real >;  NumericTest ();  ; template<class Container1 , class Container2 > ; Real vectorMaxDiff (const Container1 &c1, const Container2 &c2);  Return the maximum difference between two containers. Issues a failure if sizes are different. More...;  ; template<class Container > ; Real vectorMaxAbs (const Container &c);  Return the maximum absolute value of a container. More...;  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  . Static Public Member Functions; template<int EigenSparseMatrixOptions> ; static void generateRandomSparseMatrix (Eigen::SparseMatrix< TReal, EigenSparseMatrixOptions > &eigenMatrix, Eigen::Index nbRows, Eigen::Index nbCols, TReal sparsity);  ; template<typename _DstScalar , int _DstOptions, typename _DstStorageIndex , typename _SrcScalar , int _SrcOptions, typename _SrcS",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product.html:34,test,testing,34,api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product.html,5,['test'],['testing']
Testability,"﻿. SOFA API: sofa::mapping_test Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes . sofa::mapping_test Namespace Reference . Classes; struct  Mapping_test;  Base class for the Mapping tests, with helpers to automatically test applyJ, applyJT, applyDJT and getJs using finite differences. More...;  . sofamapping_test; Generated on Mon Nov 11 2024 03:32:22 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1mapping__test.html:237,test,tests,237,api/master/sofa/html/namespacesofa_1_1mapping__test.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1mapping__test.html,2,['test'],"['test', 'tests']"
Testability,"﻿. SOFA API: sofa::mapping_test::Mapping_test< _Mapping > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Static Public Attributes |; Public Member Functions |; Static Protected Member Functions |; List of all members . sofa::mapping_test::Mapping_test< _Mapping > Struct Template Reference . #include <MappingTestCreation.h>; Base class for the Mapping tests, with helpers to automatically test applyJ, applyJT, applyDJT and getJs using finite differences. ; More... Inheritance diagram for sofa::mapping_test::Mapping_test< _Mapping >:. [legend]; Detailed Description; template<class _Mapping>; struct sofa::mapping_test::Mapping_test< _Mapping >; Base class for the Mapping tests, with helpers to automatically test applyJ, applyJT, applyDJT and getJs using finite differences. ; Specific test cases can be created using a derived class instantiated on the mapping class to test, and calling function runTest( const InVecCoord& parentInit, const OutVecCoord& childInit, const InVecCoord parentNew, const OutVecCoord expectedChildNew);; This function compares the actual output positions with the expected ones, then automatically tests the methods related to the Jacobian using finite differences.; A small change of the input positions dxIn is randomly chosen and added to the current position. The same is set as velocity.; mapping->apply is called, and the difference dXout between the new output positions and the previous positions is computed; to validate mapping->applyJ, dXin is converted to input velocity vIn and mapping->applyJ is called. dXout and the output velocity vOut must be the same (up to linear approximations errors, thus we apply a very small change of position).; to validate mapping->getJs, we use it to get the Jacobian, then we check that J.vIn = vOut; to validate mapping->applyJT, we apply it after setting the child force fc=vOut, then we check that parent force fp = J^T.fc; to validate mappin",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html:428,test,tests,428,api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html,4,['test'],"['test', 'tests']"
Testability,"﻿. SOFA API: sofa::testing Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Functions |; Variables . sofa::testing Namespace Reference . Classes; struct  SparseMatrixTest;  ; class  BaseSimulationTest;  ; class  BaseTest;  Base class for Sofa test fixtures. More...;  ; struct  CleanupCheck;  ; class  LinearCongruentialRandomGenerator;  A simple deterministic and portable random number generator. More...;  ; struct  NumericTest;  Helper functions to compare scalars, vectors, matrices, etc. More...;  ; struct  data_traits;  ; struct  setRotWrapper;  ; struct  setRotWrapper< DataTypes, N, true >;  ; struct  setRotWrapper< DataTypes, 2, false >;  ; struct  setRotWrapper< DataTypes, N, false >;  ; class  GtestMessageFrame;  ; class  GtestMessageFrameFailure;  ; class  GtestMessageFrameFailureWhenMissing;  ; class  GtestMessageFrameIgnore;  ; class  GtestMessageHandler;  ; class  MainGtestMessageHandlerPrivate;  ; class  MessageAsTestFailure;  ; class  ExpectMessage;  ; class  IgnoreMessage;  ; class  MainGtestMessageHandler;  . Functions; void initializeOnce ();  ; SOFA_TESTING_API void init ();  Initialize the Sofa.Testing library, as well as its dependencies. More...;  ; SOFA_TESTING_API bool isInitialized ();  Return true if and only if theSofa.Testing library has been initialized. More...;  ; SOFA_TESTING_API void cleanup ();  Clean up the resources used by the Sofa.Testing library, as well as its dependencies: SofaDefaultType, SofaHelper. More...;  ; SOFA_TESTING_API bool isCleanedUp ();  Return true if and only if the Sofa.Testing library has been cleaned up. More...;  ; template<class Vector , class ReadData > ; void copyFromData (Vector &v, const ReadData &d);  Resize the Vector and copy it from the Data. More...;  ; template<class WriteData , class Vector > ; void copyToData (WriteData &d, const Vector &v);  Copy the Vector to the Data. They must have the same size. More...;  ; template<class DataTypes > ; ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1testing.html:19,test,testing,19,api/master/sofa/html/namespacesofa_1_1testing.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1testing.html,3,['test'],"['test', 'testing']"
Testability,﻿. SOFA API: sofa::testing::BaseSimulationTest Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Public Member Functions |; List of all members . sofa::testing::BaseSimulationTest Class Reference . #include <BaseSimulationTest.h>. Inheritance diagram for sofa::testing::BaseSimulationTest:. [legend]. Classes; class  SceneInstance;  . Public Member Functions;  BaseSimulationTest ();  ; bool importPlugin (const std::string &name);  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  . Additional Inherited Members;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  ;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  . Constructor details. ◆ BaseSimulationTest(). sofa::testing::BaseSimulationTest::BaseSimulationTest ; (; ). Function details. ◆ importPlugin(). bool sofa::testing::BaseSimulationTest::importPlugin ; (; const std::string & ; name). sofatestingBaseSimulationTest; Generated on Mon Nov 11 2024 03:34:35 for SOFA API by 1.9.1 . ,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1testing_1_1_base_simulation_test.html:19,test,testing,19,api/master/sofa/html/classsofa_1_1testing_1_1_base_simulation_test.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1testing_1_1_base_simulation_test.html,10,['test'],['testing']
Testability,"﻿. SOFA API: sofa::testing::BaseSimulationTest::SceneInstance Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; Static Public Member Functions |; List of all members . sofa::testing::BaseSimulationTest::SceneInstance Class Reference . #include <BaseSimulationTest.h>. Public Attributes; Node::SPtr root;  . Public Member Functions;  SceneInstance (const std::string &rootname=""root"");  ;  SceneInstance (const std::string &type, const std::string &memory);  ;  ~SceneInstance ();  ; void initScene ();  ; void simulate (const double timestep);  ; void loadSceneFile (const std::string &filename);  . Static Public Member Functions; static SceneInstance LoadFromFile (const std::string &filename);  Create a new scene instance from the content of the filename using the factory. More...;  . Attribute details. ◆ root. Node::SPtr sofa::testing::BaseSimulationTest::SceneInstance::root. Constructor details. ◆ SceneInstance() [1/2]. sofa::testing::BaseSimulationTest::SceneInstance::SceneInstance ; (; const std::string & ; rootname = ""root""). ◆ SceneInstance() [2/2]. sofa::testing::BaseSimulationTest::SceneInstance::SceneInstance ; (; const std::string & ; type, . const std::string & ; memory . ). ◆ ~SceneInstance(). sofa::testing::BaseSimulationTest::SceneInstance::~SceneInstance ; (; ). Function details. ◆ initScene(). void sofa::testing::BaseSimulationTest::SceneInstance::initScene ; (; ). ◆ LoadFromFile(). BaseSimulationTest::SceneInstance sofa::testing::BaseSimulationTest::SceneInstance::LoadFromFile ; (; const std::string & ; filename). static . Create a new scene instance from the content of the filename using the factory. . ◆ loadSceneFile(). void sofa::testing::BaseSimulationTest::SceneInstance::loadSceneFile ; (; const std::string & ; filename). ◆ simulate(). void sofa::testing::BaseSimulationTest::SceneInstance::simulate ; (; const double ; timestep). sofatestingBaseSimulationTestSceneI",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1testing_1_1_base_simulation_test_1_1_scene_instance.html:19,test,testing,19,api/master/sofa/html/classsofa_1_1testing_1_1_base_simulation_test_1_1_scene_instance.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1testing_1_1_base_simulation_test_1_1_scene_instance.html,3,['test'],['testing']
Testability,"﻿. SOFA API: sofa::testing::BaseTest Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Static Public Attributes |; Public Member Functions |; List of all members . sofa::testing::BaseTest Class Reference . #include <BaseTest.h>; Base class for Sofa test fixtures. ; More... Inheritance diagram for sofa::testing::BaseTest:. [legend]; Detailed Description; Base class for Sofa test fixtures. . Public Attributes; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  . Static Public Attributes; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  . Public Member Functions;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  . Attribute details. ◆ m_error. sofa::testing::MessageAsTestFailure sofa::testing::BaseTest::m_error. ◆ m_fatal. sofa::testing::MessageAsTestFailure sofa::testing::BaseTest::m_fatal. To prevent that you simply need to add the line EXPECT_MSG_EMIT(Error); Where you want to allow a message. . ◆ seed. int sofa::testing::BaseTest::seed = (unsigned int)time(nullptr). static . Seed value. . Constructor details. ◆ BaseTest(). sofa::testing::BaseTest::BaseTest ; (; ). Initialize Sofa and the random number generator. . ◆ ~BaseTest(). sofa::testing::BaseTest::~BaseTest ; (; ). override . Function details. ◆ onSetUp(). virtual void sofa::testing::BaseTest::onSetUp ; (; ). inlinevirtual . Reimplemented in sofa::linearalgebra::testing::TestBaseMatrix< T >, and sofa::AdvancedTimerTest. ◆ onTearDown(). virtual void sofa::testing::BaseTest::onTearDown ; (; ). inlinevirtual . Reimplemented in sofa::linearalgebra::testing::TestBaseMatrix< T >. sofatestingBaseTest; Generated on Mon Nov 11 2024 03:34:35 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1testing_1_1_base_test.html:19,test,testing,19,api/master/sofa/html/classsofa_1_1testing_1_1_base_test.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1testing_1_1_base_test.html,18,['test'],"['test', 'testing']"
Testability,"﻿. SOFA API: sofa::testing::ExpectMessage Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::testing::ExpectMessage Class Reference . #include <TestMessageHandler.h>; Detailed Description; Rise a gtest failure during the object destruction when the expected message have not been received. Better use the macro: EXPECT_MSG_EMIT(Error) as a more 'good looking' version of; sofa::helper::logging::ExpectMessage failure(sofa::helper::logging::Message::Error, FILE, LINE); . Public Member Functions;  ExpectMessage (helper::logging::Message::Type t, const char *filename=""unknown"", int lineno=0);  ; virtual ~ExpectMessage ();  . Constructor details. ◆ ExpectMessage(). sofa::testing::ExpectMessage::ExpectMessage ; (; helper::logging::Message::Type ; t, . const char * ; filename = ""unknown"", . int ; lineno = 0 . ). ◆ ~ExpectMessage(). sofa::testing::ExpectMessage::~ExpectMessage ; (; ). virtual . sofatestingExpectMessage; Generated on Mon Nov 11 2024 03:35:59 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1testing_1_1_expect_message.html:19,test,testing,19,api/master/sofa/html/classsofa_1_1testing_1_1_expect_message.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1testing_1_1_expect_message.html,8,"['log', 'test']","['logging', 'testing']"
Testability,"﻿. SOFA API: sofa::testing::GtestMessageFrame Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::testing::GtestMessageFrame Class Reference . Inheritance diagram for sofa::testing::GtestMessageFrame:. [legend]; Detailed Description; PRIVATE DECLARATION ///////////////////////////////////////////////// Here are declared the classes that are only used for internal use. In case someone want to use them it is easy to move that in .h file. Until that happens, keeps these here to hide the implementation details from the users of the .h And accelerate compilation of Sofa :) . Public Attributes; Message::Type m_type;  ; const char * m_filename;  ; int m_lineno;  . Public Member Functions; virtual ~GtestMessageFrame ();  ; virtual void process (Message &);  ; virtual void finalize ();  . Attribute details. ◆ m_filename. const char* sofa::testing::GtestMessageFrame::m_filename. ◆ m_lineno. int sofa::testing::GtestMessageFrame::m_lineno. ◆ m_type. Message::Type sofa::testing::GtestMessageFrame::m_type. Constructor details. ◆ ~GtestMessageFrame(). virtual sofa::testing::GtestMessageFrame::~GtestMessageFrame ; (; ). inlinevirtual . Function details. ◆ finalize(). virtual void sofa::testing::GtestMessageFrame::finalize ; (; ). inlinevirtual . Reimplemented in sofa::testing::GtestMessageFrameFailureWhenMissing. ◆ process(). virtual void sofa::testing::GtestMessageFrame::process ; (; Message & ; ). inlinevirtual . Reimplemented in sofa::testing::GtestMessageFrameFailureWhenMissing, and sofa::testing::GtestMessageFrameFailure. sofatestingGtestMessageFrame; Generated on Mon Nov 11 2024 03:35:59 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1testing_1_1_gtest_message_frame.html:19,test,testing,19,api/master/sofa/html/classsofa_1_1testing_1_1_gtest_message_frame.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1testing_1_1_gtest_message_frame.html,12,['test'],['testing']
Testability,"﻿. SOFA API: sofa::testing::GtestMessageFrameFailure Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::testing::GtestMessageFrameFailure Class Reference . Inheritance diagram for sofa::testing::GtestMessageFrameFailure:. [legend]. Public Member Functions;  GtestMessageFrameFailure (Message::Type type, const char *filename, int lineno);  ; void process (Message &message) override;  ;  Public Member Functions inherited from sofa::testing::GtestMessageFrame; virtual ~GtestMessageFrame ();  ; virtual void finalize ();  . Additional Inherited Members;  Public Attributes inherited from sofa::testing::GtestMessageFrame; Message::Type m_type;  ; const char * m_filename;  ; int m_lineno;  . Constructor details. ◆ GtestMessageFrameFailure(). sofa::testing::GtestMessageFrameFailure::GtestMessageFrameFailure ; (; Message::Type ; type, . const char * ; filename, . int ; lineno . ). DEFINITION OF PRIVATE CLASSES ////////////////////////////////// . Function details. ◆ process(). void sofa::testing::GtestMessageFrameFailure::process ; (; Message & ; message). overridevirtual . Reimplemented from sofa::testing::GtestMessageFrame. sofatestingGtestMessageFrameFailure; Generated on Mon Nov 11 2024 03:35:59 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1testing_1_1_gtest_message_frame_failure.html:19,test,testing,19,api/master/sofa/html/classsofa_1_1testing_1_1_gtest_message_frame_failure.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1testing_1_1_gtest_message_frame_failure.html,8,['test'],['testing']
Testability,"﻿. SOFA API: sofa::testing::GtestMessageFrameFailureWhenMissing Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::testing::GtestMessageFrameFailureWhenMissing Class Reference . Inheritance diagram for sofa::testing::GtestMessageFrameFailureWhenMissing:. [legend]. Public Attributes; bool m_gotMessage {false};  ;  Public Attributes inherited from sofa::testing::GtestMessageFrame; Message::Type m_type;  ; const char * m_filename;  ; int m_lineno;  . Public Member Functions;  GtestMessageFrameFailureWhenMissing (Message::Type type, const char *filename, int lineno);  ; void process (Message &message) override;  ; void finalize () override;  ;  Public Member Functions inherited from sofa::testing::GtestMessageFrame; virtual ~GtestMessageFrame ();  . Attribute details. ◆ m_gotMessage. bool sofa::testing::GtestMessageFrameFailureWhenMissing::m_gotMessage {false}. Constructor details. ◆ GtestMessageFrameFailureWhenMissing(). sofa::testing::GtestMessageFrameFailureWhenMissing::GtestMessageFrameFailureWhenMissing ; (; Message::Type ; type, . const char * ; filename, . int ; lineno . ). Function details. ◆ finalize(). void sofa::testing::GtestMessageFrameFailureWhenMissing::finalize ; (; ). overridevirtual . Reimplemented from sofa::testing::GtestMessageFrame. ◆ process(). void sofa::testing::GtestMessageFrameFailureWhenMissing::process ; (; Message & ; message). overridevirtual . Reimplemented from sofa::testing::GtestMessageFrame. sofatestingGtestMessageFrameFailureWhenMissing; Generated on Mon Nov 11 2024 03:35:59 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1testing_1_1_gtest_message_frame_failure_when_missing.html:19,test,testing,19,api/master/sofa/html/classsofa_1_1testing_1_1_gtest_message_frame_failure_when_missing.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1testing_1_1_gtest_message_frame_failure_when_missing.html,11,['test'],['testing']
Testability,﻿. SOFA API: sofa::testing::GtestMessageFrameIgnore Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::testing::GtestMessageFrameIgnore Class Reference . Inheritance diagram for sofa::testing::GtestMessageFrameIgnore:. [legend]. Public Member Functions;  GtestMessageFrameIgnore (Message::Type type);  ;  Public Member Functions inherited from sofa::testing::GtestMessageFrame; virtual ~GtestMessageFrame ();  ; virtual void process (Message &);  ; virtual void finalize ();  . Additional Inherited Members;  Public Attributes inherited from sofa::testing::GtestMessageFrame; Message::Type m_type;  ; const char * m_filename;  ; int m_lineno;  . Constructor details. ◆ GtestMessageFrameIgnore(). sofa::testing::GtestMessageFrameIgnore::GtestMessageFrameIgnore ; (; Message::Type ; type). sofatestingGtestMessageFrameIgnore; Generated on Mon Nov 11 2024 03:35:59 for SOFA API by 1.9.1 . ,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1testing_1_1_gtest_message_frame_ignore.html:19,test,testing,19,api/master/sofa/html/classsofa_1_1testing_1_1_gtest_message_frame_ignore.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1testing_1_1_gtest_message_frame_ignore.html,6,['test'],['testing']
Testability,"﻿. SOFA API: sofa::testing::GtestMessageHandler Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::testing::GtestMessageHandler Class Reference . Inheritance diagram for sofa::testing::GtestMessageHandler:. [legend]. Public Member Functions;  GtestMessageHandler (Message::Class mclass);  ;  ~ GtestMessageHandler () override;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ; void pushFrame (Message::Type type, GtestMessageFrame *frame);  ; void popFrame (Message::Type type);  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ GtestMessageHandler(). sofa::testing::GtestMessageHandler::GtestMessageHandler ; (; Message::Class ; mclass). ◆ ~ GtestMessageHandler(). sofa::testing::GtestMessageHandler::~ GtestMessageHandler ; (; ). override . Function details. ◆ popFrame(). void sofa::testing::GtestMessageHandler::popFrame ; (; Message::Type ; type). ◆ process(). void sofa::testing::GtestMessageHandler::process ; (; Message & ; m). overridevirtual . Inherited from MessageHandler. ; Implements sofa::helper::logging::MessageHandler. ◆ pushFrame(). void sofa::testing::GtestMessageHandler::pushFrame ; (; Message::Type ; type, . GtestMessageFrame * ; frame . ). sofatestingGtestMessageHandler; Generated on Mon Nov 11 2024 03:35:59 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1testing_1_1_gtest_message_handler.html:19,test,testing,19,api/master/sofa/html/classsofa_1_1testing_1_1_gtest_message_handler.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1testing_1_1_gtest_message_handler.html,10,"['log', 'test']","['logging', 'testing']"
Testability,﻿. SOFA API: sofa::testing::IgnoreMessage Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::testing::IgnoreMessage Class Reference . #include <TestMessageHandler.h>; Detailed Description; Locally hide the fact that a message is expected. Better use the macro: IGNORE_MSG(Error) as a more 'good looking' version of; sofa::helper::logging::IgnoreMessage ignore(sofa::helper::logging::Message::Error); . Public Member Functions;  IgnoreMessage (helper::logging::Message::Type t);  ; virtual ~IgnoreMessage ();  . Constructor details. ◆ IgnoreMessage(). sofa::testing::IgnoreMessage::IgnoreMessage ; (; helper::logging::Message::Type ; t). ◆ ~IgnoreMessage(). sofa::testing::IgnoreMessage::~IgnoreMessage ; (; ). virtual . sofatestingIgnoreMessage; Generated on Mon Nov 11 2024 03:35:59 for SOFA API by 1.9.1 . ,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1testing_1_1_ignore_message.html:19,test,testing,19,api/master/sofa/html/classsofa_1_1testing_1_1_ignore_message.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1testing_1_1_ignore_message.html,8,"['log', 'test']","['logging', 'testing']"
Testability,"﻿. SOFA API: sofa::testing::LinearCongruentialRandomGenerator Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::testing::LinearCongruentialRandomGenerator Class Reference . #include <LinearCongruentialRandomGenerator.h>; A simple deterministic and portable random number generator. ; More...; Detailed Description; A simple deterministic and portable random number generator. ; This class implements a Linear Congruential Generator (LCG) algorithm to generate pseudo-random numbers. It is designed to provide deterministic and portable random number generation, making it well-suited for testing purposes. . Public Member Functions;  LinearCongruentialRandomGenerator (unsigned int initialSeed);  ; unsigned int generateRandom ();  Generates the next pseudo-random number. More...;  ; template<class Scalar > ; Scalar generateInUnitRange ();  Generates a pseudo-random value within the unit interval [0, 1]. More...;  ; double generateInRange (double rmin, double rmax);  Generates a pseudo-random double value within a specified range. More...;  ; float generateInRange (float rmin, float rmax);  Generates a pseudo-random float value within a specified range. More...;  . Constructor details. ◆ LinearCongruentialRandomGenerator(). sofa::testing::LinearCongruentialRandomGenerator::LinearCongruentialRandomGenerator ; (; unsigned int ; initialSeed). explicit . Function details. ◆ generateInRange() [1/2]. double sofa::testing::LinearCongruentialRandomGenerator::generateInRange ; (; double ; rmin, . double ; rmax . ). Generates a pseudo-random double value within a specified range. ; This function generates a pseudo-random double value between the provided minimum (rmin) and maximum (rmax) values.; Parameters. rminThe minimum value of the desired range (inclusive). ; rmaxThe maximum value of the desired range (inclusive). . ReturnsA pseudo-random double value in the specified range [rmin, rmax]",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1testing_1_1_linear_congruential_random_generator.html:19,test,testing,19,api/master/sofa/html/classsofa_1_1testing_1_1_linear_congruential_random_generator.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1testing_1_1_linear_congruential_random_generator.html,3,['test'],['testing']
Testability,"﻿. SOFA API: sofa::testing::MainGtestMessageHandler Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::testing::MainGtestMessageHandler Class Reference . #include <TestMessageHandler.h>; Detailed Description; Inherited from MessageHandler, this handler must be installed to have the testing subsystem working. By default it is added in Sofa_test but if you are not inheriting from Sofa_test you have to install it manually. . Static Public Member Functions; static helper::logging::MessageHandler * getInstance ();  . Function details. ◆ getInstance(). MessageHandler * sofa::testing::MainGtestMessageHandler::getInstance ; (; ). static . sofatestingMainGtestMessageHandler; Generated on Mon Nov 11 2024 03:35:59 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1testing_1_1_main_gtest_message_handler.html:19,test,testing,19,api/master/sofa/html/classsofa_1_1testing_1_1_main_gtest_message_handler.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1testing_1_1_main_gtest_message_handler.html,5,"['log', 'test']","['logging', 'testing']"
Testability,"﻿. SOFA API: sofa::testing::MainGtestMessageHandlerPrivate Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::testing::MainGtestMessageHandlerPrivate Class Reference . Static Public Member Functions; static GtestMessageHandler & getInstance ();  ; static void pushFrame (Message::Type type, GtestMessageFrame *frame);  ; static void popFrame (Message::Type type);  . Function details. ◆ getInstance(). GtestMessageHandler & sofa::testing::MainGtestMessageHandlerPrivate::getInstance ; (; ). static . ◆ popFrame(). void sofa::testing::MainGtestMessageHandlerPrivate::popFrame ; (; Message::Type ; type). static . ◆ pushFrame(). void sofa::testing::MainGtestMessageHandlerPrivate::pushFrame ; (; Message::Type ; type, . GtestMessageFrame * ; frame . ). static . sofatestingMainGtestMessageHandlerPrivate; Generated on Mon Nov 11 2024 03:35:59 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1testing_1_1_main_gtest_message_handler_private.html:19,test,testing,19,api/master/sofa/html/classsofa_1_1testing_1_1_main_gtest_message_handler_private.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1testing_1_1_main_gtest_message_handler_private.html,5,['test'],['testing']
Testability,"﻿. SOFA API: sofa::testing::MessageAsTestFailure Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::testing::MessageAsTestFailure Class Reference . #include <TestMessageHandler.h>; Detailed Description; Rise a gtest failure when a message of type Message:type is emitted. Better use the macro: EXPECT_MSG_NOEMIT(Error) as a more 'good looking' version of; sofa::helper::logging::MessageAsTestFailure failure(sofa::helper::logging::Message::Error, FILE, LINE); . Public Member Functions;  MessageAsTestFailure (helper::logging::Message::Type t, const char *filename=""unknown"", int lineno=0);  ; virtual ~MessageAsTestFailure ();  . Constructor details. ◆ MessageAsTestFailure(). sofa::testing::MessageAsTestFailure::MessageAsTestFailure ; (; helper::logging::Message::Type ; t, . const char * ; filename = ""unknown"", . int ; lineno = 0 . ). DEFINITION OF PUBLIC CLASSES /////////////////////////////////// . ◆ ~MessageAsTestFailure(). sofa::testing::MessageAsTestFailure::~MessageAsTestFailure ; (; ). virtual . sofatestingMessageAsTestFailure; Generated on Mon Nov 11 2024 03:35:59 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1testing_1_1_message_as_test_failure.html:19,test,testing,19,api/master/sofa/html/classsofa_1_1testing_1_1_message_as_test_failure.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1testing_1_1_message_as_test_failure.html,8,"['log', 'test']","['logging', 'testing']"
Testability,"﻿. SOFA API: sofa::testing::NumericTest< _Real > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Static Protected Member Functions |; List of all members . sofa::testing::NumericTest< _Real > Struct Template Reference . #include <NumericTest.h>; Helper functions to compare scalars, vectors, matrices, etc. ; More... Inheritance diagram for sofa::testing::NumericTest< _Real >:. [legend]; Detailed Description; template<typename _Real = SReal>; struct sofa::testing::NumericTest< _Real >; Helper functions to compare scalars, vectors, matrices, etc. . Public Member Functions;  NumericTest ();  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  . Static Public Member Functions; Matrices; Functions to compare matrices . template<typename Matrix1 , typename Matrix2 > ; static Real matrixMaxDiff (const Matrix1 &m1, const Matrix2 &m2);  return the maximum difference between corresponding entries, or the infinity if the matrices have different sizes More...;  ; template<Size M, Size N, typename Real , typename Matrix2 > ; static Real matrixMaxDiff (const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2);  Return the maximum difference between corresponding entries, or the infinity if the matrices have different sizes. More...;  . Static Protected Member Functions; static float norm (float a);  ; static double norm (double a);  ; template<typename T > ; static Real norm (T a);  . Scalars; Type and functions to manipulate real numbers. . typedef _Real Real;  Scalar type. More...;  ; static Real epsilon ();  the smallest real number More...;  ; static Real infinity ();  Infinity. More...;  ; static bool isSmall (Real r, Real ratio=1.);  true if the magnitude of r is less than ratio*epsilon More...;  . Vectors; Functions to com",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test.html:19,test,testing,19,api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test.html,5,['test'],['testing']
Testability,"﻿. SOFA API: sofa::testing::SparseMatrixTest< TReal > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::testing::SparseMatrixTest< TReal > Struct Template Reference . #include <SparseMatrixTest.h>. Inheritance diagram for sofa::testing::SparseMatrixTest< TReal >:. [legend]. Static Public Member Functions; template<int EigenSparseMatrixOptions> ; static void generateRandomSparseMatrix (Eigen::SparseMatrix< TReal, EigenSparseMatrixOptions > &eigenMatrix, Eigen::Index nbRows, Eigen::Index nbCols, TReal sparsity);  ; template<class InputIt > ; static void generateFromTriplets (Eigen::SparseMatrix< TReal > &eigenMatrix, InputIt first, InputIt last, Eigen::Index nbRows, Eigen::Index nbCols);  ; template<typename _DstScalar , int _DstOptions, typename _DstStorageIndex , typename _SrcScalar , int _SrcOptions, typename _SrcStorageIndex > ; static void copyFromEigen (Eigen::SparseMatrix< _DstScalar, _DstOptions, _DstStorageIndex > &dst, const Eigen::SparseMatrix< _SrcScalar, _SrcOptions, _SrcStorageIndex > &src);  ; static void copyFromEigen (linearalgebra::BaseMatrix &dst, const Eigen::SparseMatrix< TReal > &src);  ; template<typename _AScalar , int _AOptions, typename _AStorageIndex , typename _BScalar , int _BOptions, typename _BStorageIndex > ; static bool compareSparseMatrix (const Eigen::SparseMatrix< _AScalar, _AOptions, _AStorageIndex > &A, const Eigen::SparseMatrix< _BScalar, _BOptions, _BStorageIndex > &B);  ; template<typename _AScalar , int _AOptions, typename _AStorageIndex , typename _BScalar , int _BOptions, typename _BStorageIndex > ; static bool compareEigenSparseMatrix (const Eigen::SparseMatrix< _AScalar, _AOptions, _AStorageIndex > &A, const Eigen::SparseMatrix< _BScalar, _BOptions, _BStorageIndex > &B);  ;  Static Public Member Functions inherited from sofa::testing::NumericTest< SReal >; static Real matrixMaxDiff (const Matrix1 &m1, const Matri",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test.html:19,test,testing,19,api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test.html,3,['test'],['testing']
Testability,"﻿. SOFA API: sofa::testing::data_traits< _DataTypes > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::testing::data_traits< _DataTypes > Struct Template Reference . #include <NumericTest.h>; Detailed Description; template<class _DataTypes>; struct sofa::testing::data_traits< _DataTypes >; Helpers for DataTypes. Includes copies to and from vectors of scalars. . Static Public Member Functions; template<class VectorOfScalars > ; static void VecCoord_to_Vector (VectorOfScalars &vec, const VecCoord &vcoord);  Resize a vector of scalars, and copies a VecCoord in it. More...;  ; template<class VectorOfScalars > ; static void VecDeriv_to_Vector (VectorOfScalars &vec, const VecDeriv vderiv);  Resize a vector of scalars, and copies a VecDeriv in it. More...;  . Function details. ◆ VecCoord_to_Vector(). template<class _DataTypes > . template<class VectorOfScalars > . static void sofa::testing::data_traits< _DataTypes >::VecCoord_to_Vector ; (; VectorOfScalars & ; vec, . const VecCoord & ; vcoord . ). inlinestatic . Resize a vector of scalars, and copies a VecCoord in it. . ◆ VecDeriv_to_Vector(). template<class _DataTypes > . template<class VectorOfScalars > . static void sofa::testing::data_traits< _DataTypes >::VecDeriv_to_Vector ; (; VectorOfScalars & ; vec, . const VecDeriv ; vderiv . ). inlinestatic . Resize a vector of scalars, and copies a VecDeriv in it. . Enum details. ◆ anonymous enum. template<class _DataTypes > . anonymous enum. Enumeratorspatial_dimensions . ◆ anonymous enum. template<class _DataTypes > . anonymous enum. Enumeratorcoord_total_size . ◆ anonymous enum. template<class _DataTypes > . anonymous enum. Enumeratorderiv_total_size . sofatestingdata_traits; Generated on Mon Nov 11 2024 03:34:59 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1data__traits.html:19,test,testing,19,api/master/sofa/html/structsofa_1_1testing_1_1data__traits.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1data__traits.html,5,['test'],['testing']
Testability,"﻿. SOFA API: sofa::testing::setRotWrapper< DataTypes, 2, false > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::testing::setRotWrapper< DataTypes, 2, false > Struct Template Reference . #include <NumericTest.h>. Static Public Member Functions; static void setRot (typename DataTypes::Coord &coord, const sofa::type::Quat< SReal > &rot);  . Function details. ◆ setRot(). template<class DataTypes > . static void sofa::testing::setRotWrapper< DataTypes, 2, false >::setRot ; (; typename DataTypes::Coord & ; coord, . const sofa::type::Quat< SReal > & ; rot . ). inlinestatic . sofatestingsetRotWrapper< DataTypes, 2, false >; Generated on Mon Nov 11 2024 03:35:44 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1set_rot_wrapper_3_01_data_types_00_012_00_01false_01_4.html:19,test,testing,19,api/master/sofa/html/structsofa_1_1testing_1_1set_rot_wrapper_3_01_data_types_00_012_00_01false_01_4.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1set_rot_wrapper_3_01_data_types_00_012_00_01false_01_4.html,3,['test'],['testing']
Testability,"﻿. SOFA API: sofa::testing::setRotWrapper< DataTypes, N, false > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::testing::setRotWrapper< DataTypes, N, false > Struct Template Reference . #include <NumericTest.h>. Static Public Member Functions; static void setRot (typename DataTypes::Coord &coord, const sofa::type::Quat< SReal > &rot);  . Function details. ◆ setRot(). template<class DataTypes , sofa::Size N> . static void sofa::testing::setRotWrapper< DataTypes, N, false >::setRot ; (; typename DataTypes::Coord & ; coord, . const sofa::type::Quat< SReal > & ; rot . ). inlinestatic . sofatestingsetRotWrapper< DataTypes, N, false >; Generated on Mon Nov 11 2024 03:35:59 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1set_rot_wrapper_3_01_data_types_00_01_n_00_01false_01_4.html:19,test,testing,19,api/master/sofa/html/structsofa_1_1testing_1_1set_rot_wrapper_3_01_data_types_00_01_n_00_01false_01_4.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1set_rot_wrapper_3_01_data_types_00_01_n_00_01false_01_4.html,3,['test'],['testing']
Testability,"﻿. SOFA API: sofa::testing::setRotWrapper< DataTypes, N, isVector > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::testing::setRotWrapper< DataTypes, N, isVector > Struct Template Reference . #include <NumericTest.h>. Static Public Member Functions; static void setRot (typename DataTypes::Coord &coord, const sofa::type::Quat< SReal > &rot);  . Function details. ◆ setRot(). template<class DataTypes , sofa::Size N, bool isVector> . static void sofa::testing::setRotWrapper< DataTypes, N, isVector >::setRot ; (; typename DataTypes::Coord & ; coord, . const sofa::type::Quat< SReal > & ; rot . ). static . sofatestingsetRotWrapper; Generated on Mon Nov 11 2024 03:35:14 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1set_rot_wrapper.html:19,test,testing,19,api/master/sofa/html/structsofa_1_1testing_1_1set_rot_wrapper.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1set_rot_wrapper.html,3,['test'],['testing']
Testability,"﻿. SOFA API: sofa::testing::setRotWrapper< DataTypes, N, true > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::testing::setRotWrapper< DataTypes, N, true > Struct Template Reference . #include <NumericTest.h>. Static Public Member Functions; static void setRot (typename DataTypes::Coord &, const sofa::type::Quat< SReal > &);  . Function details. ◆ setRot(). template<class DataTypes , sofa::Size N> . static void sofa::testing::setRotWrapper< DataTypes, N, true >::setRot ; (; typename DataTypes::Coord & ; , . const sofa::type::Quat< SReal > & ;  . ). inlinestatic . sofatestingsetRotWrapper< DataTypes, N, true >; Generated on Mon Nov 11 2024 03:35:29 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1set_rot_wrapper_3_01_data_types_00_01_n_00_01true_01_4.html:19,test,testing,19,api/master/sofa/html/structsofa_1_1testing_1_1set_rot_wrapper_3_01_data_types_00_01_n_00_01true_01_4.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1set_rot_wrapper_3_01_data_types_00_01_n_00_01true_01_4.html,3,['test'],['testing']
Testability,"﻿. SOFA API: sofa::type::trait::is_container< T > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Attributes |; Static Public Member Functions |; List of all members . sofa::type::trait::is_container< T > Struct Template Reference . #include <is_container.h>; Detect if a type T has iterator/const iterator function. ; More...; Detailed Description; template<typename T>; struct sofa::type::trait::is_container< T >; Detect if a type T has iterator/const iterator function. . Static Public Attributes; static const bool value = test<test_type>(nullptr);  . Static Public Member Functions; template<typename A > ; static constexpr bool test (A *pt, A const *cpt=nullptr, decltype(pt->begin()) *=nullptr, decltype(pt->end()) *=nullptr, decltype(cpt->begin()) *=nullptr, decltype(cpt->end()) *=nullptr, typename A::iterator *=nullptr, typename A::const_iterator *=nullptr, typename A::value_type *=nullptr);  ; template<typename A > ; static constexpr bool test (...);  . Attribute details. ◆ value. template<typename T > . const bool sofa::type::trait::is_container< T >::value = test<test_type>(nullptr). static . Function details. ◆ test() [1/2]. template<typename T > . template<typename A > . static constexpr bool sofa::type::trait::is_container< T >::test ; (;  ; ...). inlinestaticconstexpr . ◆ test() [2/2]. template<typename T > . template<typename A > . static constexpr bool sofa::type::trait::is_container< T >::test ; (; A * ; pt, . A const * ; cpt = nullptr, . decltype(pt->begin()) * ; = nullptr, . decltype(pt->end()) * ; = nullptr, . decltype(cpt->begin()) * ; = nullptr, . decltype(cpt->end()) * ; = nullptr, . typename A::iterator * ; = nullptr, . typename A::const_iterator * ; = nullptr, . typename A::value_type * ; = nullptr . ). inlinestaticconstexpr . sofatypetraitis_container; Generated on Mon Nov 11 2024 03:36:34 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1type_1_1trait_1_1is__container.html:595,test,test,595,api/master/sofa/html/structsofa_1_1type_1_1trait_1_1is__container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1type_1_1trait_1_1is__container.html,8,['test'],['test']
Testability,"﻿. SOFA API: sofa::type::trait::is_vector< T > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Attributes |; Static Public Member Functions |; List of all members . sofa::type::trait::is_vector< T > Struct Template Reference . #include <is_vector.h>; Detect if a type T has iterator/const iterator function and operator[](size_t) ; More...; Detailed Description; template<typename T>; struct sofa::type::trait::is_vector< T >; Detect if a type T has iterator/const iterator function and operator[](size_t) . Static Public Attributes; static const bool value = test<test_type>(nullptr);  . Static Public Member Functions; template<typename A > ; static constexpr bool test (A *pt, A const *cpt=nullptr, decltype(pt->begin()) *=nullptr, decltype(pt->end()) *=nullptr, decltype(cpt->begin()) *=nullptr, decltype(cpt->end()) *=nullptr, typename std::decay< decltype((*pt)[0])>::type *=nullptr, typename A::iterator *=nullptr, typename A::const_iterator *=nullptr, typename A::value_type *=nullptr);  ; template<typename A > ; static constexpr bool test (...);  . Attribute details. ◆ value. template<typename T > . const bool sofa::type::trait::is_vector< T >::value = test<test_type>(nullptr). static . Function details. ◆ test() [1/2]. template<typename T > . template<typename A > . static constexpr bool sofa::type::trait::is_vector< T >::test ; (;  ; ...). inlinestaticconstexpr . ◆ test() [2/2]. template<typename T > . template<typename A > . static constexpr bool sofa::type::trait::is_vector< T >::test ; (; A * ; pt, . A const * ; cpt = nullptr, . decltype(pt->begin()) * ; = nullptr, . decltype(pt->end()) * ; = nullptr, . decltype(cpt->begin()) * ; = nullptr, . decltype(cpt->end()) * ; = nullptr, . typename std::decay< decltype((*pt)[0])>::type * ; = nullptr, . typename A::iterator * ; = nullptr, . typename A::const_iterator * ; = nullptr, . typename A::value_type * ; = nullptr . ). inlinestaticconstexpr . sofatypetraiti",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1type_1_1trait_1_1is__vector.html:627,test,test,627,api/master/sofa/html/structsofa_1_1type_1_1trait_1_1is__vector.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1type_1_1trait_1_1is__vector.html,3,['test'],['test']
Testability,﻿. SOFA. about; . /features; ; SOFA – Features. /jobs; . /developer-of-3d-anatomical-applications; ; SOFA – Developer of 3D anatomical applications. /engineer-position-physics-based-simulation-for-robot-understanding; ; SOFA – Engineer position: physics-based simulation for robot understanding. /software-engineer-for-the-development-of-rf-ablation-simulator-of-cardiac-arrhythmia; ; SOFA – Software engineer for simulation of cardiac arrhythmia ablation. SOFA – Jobs. /news; . /1000-tests-in-sofa; ; SOFA – 1000 tests in SOFA!. /10-year-birthday; ; SOFA – 10 year birthday !. /2017-publications; ; SOFA – 2017 Publications !. /2018-highlights; ; SOFA – 2018 Highlights. /2nd-sofa-scientific-and-technical-committee; ; SOFA – 2nd SOFA Scientific and Technical Committee. /2-students-accepted-for-the-gsoc-with-sofa; ; SOFA – 2 students accepted for the GSoC. /4-sofa-papers-iros-2016; ; SOFA – 4 SOFA papers @ IROS 2016. /4th-meeting-simforhealth-in-paris; ; SOFA – 4th meeting SimForHealth in Paris. /5th-french-symposium-in-healthcare-simulation; ; SOFA – Participation at 5th French Symposium in Healthcare Simulation. /7-latest-papers-based-on-sofa; ; SOFA – 7 latest papers based on SOFA. /accepted-journal-at-tbme; ; SOFA – Accepted journal at TBME!. /already-experienced-sofa-give-us-some-feedback; ; SOFA – Already experienced SOFA? Give us some feedback!. /article-about-sofa-on-medtech; ; SOFA – Article about SOFA on MedTech. /article-in-science-vie-about-anatoscope; ; SOFA – Article in Science & Vie about Anatoscope. /asan-medical-center-joins-the-sofa-consortium; ; SOFA – Asan Medical Center joins the SOFA Consortium. /attend-the-sofa-week-2018; ; SOFA – Attend the SOFA week 2018. /author; . /guillaumeparan; . /feed; ; Guillaume – SOFA. SOFA – Guillaume. /hugo; . /feed; ; Hugo – SOFA. /page; . /10; ; SOFA – Hugo. /11; ; SOFA – Hugo. /12; ; SOFA – Hugo. /13; ; SOFA – Hugo. /14; ; SOFA – Hugo. /2; ; SOFA – Hugo. /3; ; SOFA – Hugo. /4; ; SOFA – Hugo. /5; ; SOFA – Hugo. /6; ; SOFA,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:485,test,tests-in-sofa,485,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,2,['test'],"['tests', 'tests-in-sofa']"
Usability," #include <matrix_bloc_traits.h>. Static Public Member Functions; static Real & v (Block &b, IndexType, IndexType);  ; static const Real & v (const Block &b, IndexType, IndexType);  ; static void vset (Block &b, int, int, Real val);  ; static void vadd (Block &b, int, int, Real val);  ; static void clear (Block &b);  ; static bool empty (const Block &b);  ; static void invert (Block &result, const Block &b);  ; static void split_row_index (IndexType &index, IndexType &modulo);  ; static void split_col_index (IndexType &index, IndexType &modulo);  ; template<class TSubBlock , std::enable_if_t< std::is_scalar_v< TSubBlock >, bool > = true> ; static void subBlock (const Block &b, IndexType row, IndexType col, TSubBlock &subBlock);  ; static const std::string Name ();  ; static sofa::linearalgebra::BaseMatrix::ElementType getElementType ();  ; static IndexType getElementSize ();  . Function details. ◆ clear(). template<typename IndexType > . static void sofa::linearalgebra::matrix_bloc_traits< float, IndexType >::clear ; (; Block & ; b). inlinestatic . ◆ empty(). template<typename IndexType > . static bool sofa::linearalgebra::matrix_bloc_traits< float, IndexType >::empty ; (; const Block & ; b). inlinestatic . ◆ getElementSize(). template<typename IndexType > . static IndexType sofa::linearalgebra::matrix_bloc_traits< float, IndexType >::getElementSize ; (; ). inlinestatic . ◆ getElementType(). template<typename IndexType > . static sofa::linearalgebra::BaseMatrix::ElementType sofa::linearalgebra::matrix_bloc_traits< float, IndexType >::getElementType ; (; ). inlinestatic . ◆ invert(). template<typename IndexType > . static void sofa::linearalgebra::matrix_bloc_traits< float, IndexType >::invert ; (; Block & ; result, . const Block & ; b . ). inlinestatic . ◆ Name(). template<typename IndexType > . static const std::string sofa::linearalgebra::matrix_bloc_traits< float, IndexType >::Name ; (; ). inlinestatic . ◆ split_col_index(). template<typename IndexType > . static",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1matrix__bloc__traits_3_01float_00_01_index_type_01_4.html:1340,clear,clear,1340,api/master/sofa/html/classsofa_1_1linearalgebra_1_1matrix__bloc__traits_3_01float_00_01_index_type_01_4.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1matrix__bloc__traits_3_01float_00_01_index_type_01_4.html,1,['clear'],['clear']
Usability," &blockA, const TBlock &blockB)sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >inlinestatic; BlockTranspose typedefsofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >; btempsofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >; category enum valuesofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >; check_matrix()sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >inline; check_matrix(Index nzmax, Index m, Index n, Index *a_p, Index *a_i, Block *a_x)sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >inlinestatic; clear()sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >inline; ClearByZerossofa::linearalgebra::CRSDefaultPolicystatic; clearColBlock(Index j)sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >inline; clearRowBlock(Index i)sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >inline; clearRowColBlock(Index i)sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >inline; colBSize() constsofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >inline; colsIndexsofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >; colsValuesofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >; compress()sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >inline; compressBtemp()sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >inlineprotected; compressCSR()sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >inlineprotected; CompressedRowSparseMatrixGeneric()sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >inline; CompressedRowSparseMatrixGeneric(Index nbBlockRow, Index nbBlockCol)sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >inline; CompressZerossofa::linearalgebra::CRSDefaultPolicystatic; countEmptyBlocks() constso",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_generic-members.html:4224,clear,clearRowColBlock,4224,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_generic-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_generic-members.html,1,['clear'],['clearRowColBlock']
Usability," &vec);  Output stream. More...;  ; std::istream & operator>> (std::istream &in, vector_device< T, MemoryManager, DataTypeInfoManager > &vec);  Input stream. More...;  . Attribute details. ◆ allocSize. template<class T , class MemoryManager , class DataTypeInfoManager > . Size sofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >::allocSize. protected . Allocated size on host. . ◆ bufferIsRegistered. template<class T , class MemoryManager , class DataTypeInfoManager > . bool sofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >::bufferIsRegistered. mutableprotected . True if the buffer is registered with CUDA. . ◆ bufferObject. template<class T , class MemoryManager , class DataTypeInfoManager > . buffer_id_type sofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >::bufferObject. protected . Optional associated buffer ID. . ◆ clearSize. template<class T , class MemoryManager , class DataTypeInfoManager > . Size sofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >::clearSize. mutableprotected . when initializing missing device data, up to where entries should be set to zero ? . ◆ cptid. template<class T , class MemoryManager , class DataTypeInfoManager > . int sofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >::cptid = 0. inlinestaticprotected . ◆ deviceAllocSize. template<class T , class MemoryManager , class DataTypeInfoManager > . Size sofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >::deviceAllocSize[MemoryManager::MAX_DEVICES]. mutableprotected . Allocated size on each device. . ◆ deviceIsValid. template<class T , class MemoryManager , class DataTypeInfoManager > . int sofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >::deviceIsValid. mutableprotected . True if the data on the GPU is currently valid (up to the given deviceVectorSize of each device, i.e. additional space may need to be allocated and/or initialized) . ◆ devicePointer. template<class T , class Memo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1vector__device.html:5359,clear,clearSize,5359,api/master/sofa/html/classsofa_1_1type_1_1vector__device.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1vector__device.html,1,['clear'],['clearSize']
Usability," () const;  ; Line & operator[] (Index i);  ; const Line & operator[] (Index i) const;  ; void resize (Index nbRow, Index nbCol) override;  Resize the matrix and reset all values to 0. More...;  ; Index rowSize (void) const override;  Number of rows. More...;  ; Index colSize (void) const override;  Number of columns. More...;  ; SReal element (Index i, Index j) const override;  Read the value of the element at row i, column j (using 0-based indices) More...;  ; void set (Index i, Index j, double v) override;  Write the value of the element at row i, column j (using 0-based indices) More...;  ; void add (Index i, Index j, double v) override;  Add v to the existing value of the element at row i, column j (using 0-based indices) More...;  ; void clear (Index i, Index j) override;  ; void clearRow (Index i) override;  Reset all the values in row i to 0. More...;  ; void clearCol (Index j) override;  Reset the all values in column j to 0. More...;  ; void clearRowCol (Index i) override;  Reset the value of both row and column i to 0. More...;  ; void clear () override;  Reset all values to 0. More...;  ; template<class Real2 > ; void mul (FullVector< Real2 > &res, const FullVector< Real2 > &v) const;  ; template<class Real2 > ; void addMulTranspose (FullVector< Real2 > &res, const FullVector< Real2 > &v) const;  ; template<class Real2 > ; void mul (FullVector< Real2 > &res, const linearalgebra::BaseVector *v) const;  ; template<class Real2 > ; void addMulTranspose (FullVector< Real2 > &res, const linearalgebra::BaseVector *v) const;  ; template<class Real2 > ; void mul (linearalgebra::BaseVector *res, const FullVector< Real2 > &v) const;  ; template<class Real2 > ; void addMulTranspose (linearalgebra::BaseVector *res, const FullVector< Real2 > &v) const;  ; void mul (linearalgebra::BaseVector *res, const linearalgebra::BaseVector *v) const;  ; void addMulTranspose (linearalgebra::BaseVector *res, const linearalgebra::BaseVector *v) const;  ; template<class Real2 > ; Full",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_sparse_matrix.html:1943,clear,clearRowCol,1943,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_sparse_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_sparse_matrix.html,1,['clear'],['clearRowCol']
Usability," () const;  ; Real * operator[] (Index i);  ; const Real * operator[] (Index i) const;  ; void resize (Index nbRow, Index nbCol) override;  Resize the matrix and reset all values to 0. More...;  ; Index rowSize (void) const override;  Number of rows. More...;  ; Index colSize (void) const override;  Number of columns. More...;  ; SReal element (Index i, Index j) const override;  Read the value of the element at row i, column j (using 0-based indices) More...;  ; void set (Index i, Index j, double v) override;  Write the value of the element at row i, column j (using 0-based indices) More...;  ; void add (Index i, Index j, double v) override;  Add v to the existing value of the element at row i, column j (using 0-based indices) More...;  ; void clear (Index i, Index j) override;  ; void clearRow (Index i) override;  Reset all the values in row i to 0. More...;  ; void clearCol (Index j) override;  Reset the all values in column j to 0. More...;  ; void clearRowCol (Index i) override;  Reset the value of both row and column i to 0. More...;  ; void clear () override;  Reset all values to 0. More...;  ; FullVector< Real > operator* (const FullVector< Real > &v) const;  ; void mul (FullVector< Real > &res, const FullVector< Real > &b) const;  ; void mulT (FullVector< Real > &res, const FullVector< Real > &b) const;  ; FullMatrix< Real > operator* (const FullMatrix< Real > &m) const;  ; void mul (FullMatrix< Real > &res, const FullMatrix< Real > &m) const;  ; void mulT (FullMatrix< Real > &res, const FullMatrix< Real > &m) const;  ; const char * Name ();  ; const char * Name ();  ; const char * Name ();  ; const char * Name ();  ; virtual void add (Index row, Index col, double v)=0;  Add v to the existing value of the element at row i, column j (using 0-based indices) More...;  ; virtual void add (Index row, Index col, const type::Mat3x3d &_M);  Adding values from a 3x3d matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Ind",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_full_matrix.html:2111,clear,clearRowCol,2111,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_full_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_full_matrix.html,1,['clear'],['clearRowCol']
Usability," (; VecDeriv & ; df1, . const VecDeriv & ; dx1, . VecDeriv & ; df2, . const VecDeriv & ; dx2, . int ; i, . const Spring & ; spring . ). protected . Apply the stiffness, i.e. accumulate df given dx. . ◆ addSpringForce(). template<class DataTypes > . void sofa::component::solidmechanics::spring::FrameSpringForceField< DataTypes >::addSpringForce ; (; SReal & ; potentialEnergy, . VecDeriv & ; f1, . const VecCoord & ; p1, . const VecDeriv & ; v1, . VecDeriv & ; f2, . const VecCoord & ; p2, . const VecDeriv & ; v2, . int ; i, . const Spring & ; spring . ). protected . Accumulate the spring force and compute and store its stiffness. . ◆ buildDampingMatrix(). template<class DataTypes > . void sofa::component::solidmechanics::spring::FrameSpringForceField< DataTypes >::buildDampingMatrix ; (; core::behavior::DampingMatrix * ; ). finalvirtual . Reimplemented from sofa::core::behavior::BaseForceField. ◆ clear(). template<class DataTypes > . void sofa::component::solidmechanics::spring::FrameSpringForceField< DataTypes >::clear ; (; int ; reserve = 0). ◆ draw(). template<class DataTypes > . void sofa::component::solidmechanics::spring::FrameSpringForceField< DataTypes >::draw ; (; const core::visual::VisualParams * ; ). overridevirtual . Render internal data of this object, for debugging purposes. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ getObject1(). template<class DataTypes > . core::behavior::MechanicalState<DataTypes>* sofa::component::solidmechanics::spring::FrameSpringForceField< DataTypes >::getObject1 ; (; ). inline . ◆ getObject2(). template<class DataTypes > . core::behavior::MechanicalState<DataTypes>* sofa::component::solidmechanics::spring::FrameSpringForceField< DataTypes >::getObject2 ; (; ). inline . ◆ getPotentialEnergy(). template<class DataTypes > . SReal sofa::component::solidmechanics::spring::FrameSpringForceField< DataTypes >::getPotentialEnergy ; (; const core::MechanicalParams * ; mparams, . const DataVecCoord & ; x1, . const DataVecC",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_frame_spring_force_field.html:27850,clear,clear,27850,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_frame_spring_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_frame_spring_force_field.html,1,['clear'],['clear']
Usability," (ActiveFlags & FLAG_MULTILINK) != 0;  ; static constexpr bool StorePath = (ActiveFlags & FLAG_STOREPATH) != 0;  . Protected Attributes; OwnerType * m_owner {nullptr};  ; Container m_value;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseLink; unsigned int m_flags;  ; std::string m_name;  ; std::string m_help;  ; int m_counter;  Number of changes since creation. More...;  . Public Member Functions;  TLink ();  ;  TLink (const InitLink< OwnerType > &init);  ;  ~TLink () override;  ; size_t size () const;  ; bool empty () const;  ; const Container & getValue () const;  ; const_iterator begin () const;  ; const_iterator end () const;  ; const_reverse_iterator rbegin () const;  ; const_reverse_iterator rend () const;  ; void clear ();  ; bool addBegin (DestPtr v);  ; bool add (DestPtr v);  ; bool add (DestPtr v, const std::string &path);  ; bool addPath (const std::string &path);  ; bool remove (DestPtr v);  ; bool removeAt (std::size_t index);  ; bool removePath (const std::string &path);  ; const BaseClass * getDestClass () const override;  ; const BaseClass * getOwnerClass () const override;  ; size_t getSize () const override;  ; sofa::core::objectmodel::Base * getOwnerBase () const override;  ; void setOwner (OwnerType *owner);  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseLink;  BaseLink (LinkFlags flags);  ;  BaseLink (const BaseInitLink &init, LinkFlags flags);  ; virtual ~BaseLink ();  ; const std::string & getName () const;  ; void setName (const std::string &name);  ; const std::string & getHelp () const;  Get help message. More...;  ; void setHelp (const std::string &val);  Set help message. More...;  ; void setFlag (LinkFlagsEnum flag, bool b);  Set one of the flags. More...;  ; bool getFlag (LinkFlagsEnum flag) const;  Get one flag. More...;  ; bool isMultiLink () const;  ; bool isStrongLink () const;  ; bool isDoubleLink () const;  ; bool isDuplicate () const;  ; bool storePath () const;  ; void setPersistent",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_t_link.html:1827,clear,clear,1827,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_t_link.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_t_link.html,1,['clear'],['clear']
Usability," (std::istream &in);  ; SOFA_TYPE_API std::istream & read (std::istream &in);  ; SOFA_TYPE_API std::istream & read (std::istream &in);  ; SOFA_TYPE_API std::istream & read (std::istream &in);  Specialization for reading vectors of int and unsigned int using ""A-B"" notation for all integers between A and B. More...;  ; SOFA_TYPE_API std::istream & read (std::istream &in);  ; SOFA_TYPE_API std::istream & read (std::istream &in);  ; void fill (const DetectionOutput &value);  Sets every element to 'value'. More...;  ; void fastResize (Size n);  . Additional Inherited Members;  Protected Member Functions inherited from sofa::core::collision::DetectionOutputVector; virtual ~DetectionOutputVector ();  . Constructor details. ◆ ~TDetectionOutputVector(). template<class CM1 , class CM2 > . sofa::core::collision::TDetectionOutputVector< CM1, CM2 >::~TDetectionOutputVector ; (; ). inlineoverride . Function details. ◆ clear(). template<class CM1 , class CM2 > . void sofa::core::collision::TDetectionOutputVector< CM1, CM2 >::clear ; (; ). inlineoverridevirtual . Clear the content of this vector. ; Implements sofa::core::collision::DetectionOutputVector. ◆ getFirstPosition(). template<class CM1 , class CM2 > . virtual type::Vec3 sofa::core::collision::TDetectionOutputVector< CM1, CM2 >::getFirstPosition ; (; unsigned ; idx). inlineoverridevirtual . Const iterator to iterate the detection pairs. ; Implements sofa::core::collision::DetectionOutputVector. ◆ getSecondPosition(). template<class CM1 , class CM2 > . virtual type::Vec3 sofa::core::collision::TDetectionOutputVector< CM1, CM2 >::getSecondPosition ; (; unsigned ; idx). inlineoverridevirtual . Const iterator end to iterate the detection pairs. ; Implements sofa::core::collision::DetectionOutputVector. ◆ size(). template<class CM1 , class CM2 > . unsigned int sofa::core::collision::TDetectionOutputVector< CM1, CM2 >::size ; (; ); const. inlineoverridevirtual . Current size (number of detected contacts) ; Implements sofa::core::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_t_detection_output_vector.html:3955,clear,clear,3955,api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_t_detection_output_vector.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_t_detection_output_vector.html,1,['clear'],['clear']
Usability," ). override . ◆ buildGeometricStiffnessMatrix(). template<class TIn , class TOut > . void sofa::component::mapping::nonlinear::DistanceFromTargetMapping< TIn, TOut >::buildGeometricStiffnessMatrix ; (; sofa::core::GeometricStiffnessMatrix * ; matrices). overridevirtual . Assembles the geometric stiffness matrix of the mapping in the provided matrix object. ; The geometric stiffness is defined as dJ^T/dx * outForce, where outForce is the forces applying on the output of the mapping, J is the jacobian matrix of the mapping and x is the position of the input of the mapping.; Inside the method, outForce is retrieved, while dJ^T/dx and its product with outForce must be computed.; Note that dJ^T/dx is null for linear mappings, meaning that the method can remain empty.; The geometric stiffness is a term that must be added into the global mechanical matrix.; Parameters. matricesThe matrix to fill in with the geometric stiffness of the mapping . Reimplemented from sofa::core::BaseMapping. ◆ clear(). template<class TIn , class TOut > . void sofa::component::mapping::nonlinear::DistanceFromTargetMapping< TIn, TOut >::clear. Remove all targets. . ◆ computeCoordPositionDifference(). template<class TIn , class TOut > . void sofa::component::mapping::nonlinear::DistanceFromTargetMapping< TIn, TOut >::computeCoordPositionDifference ; (; Direction & ; r, . const InCoord & ; a, . const InCoord & ; b . ). protected . r=b-a only for position (eventual rotation, affine transform... remains null) . ◆ createTarget(). template<class TIn , class TOut > . void sofa::component::mapping::nonlinear::DistanceFromTargetMapping< TIn, TOut >::createTarget ; (; unsigned ; index, . const InCoord & ; position, . Real ; distance . ). Add a target with a desired distance. . ◆ doUpdateK(). template<class TIn , class TOut > . void sofa::component::mapping::nonlinear::DistanceFromTargetMapping< TIn, TOut >::doUpdateK ; (; const core::MechanicalParams * ; mparams, . const Data< VecDeriv_t< Out > > & ; child",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_distance_from_target_mapping.html:28055,clear,clear,28055,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_distance_from_target_mapping.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_distance_from_target_mapping.html,1,['clear'],['clear']
Usability," *cParams)sofa::component::constraint::lagrangian::solver::GenericConstraintSolverprotected; buildSystem_matrixFree(unsigned int numConstraints)sofa::component::constraint::lagrangian::solver::GenericConstraintSolverprotected; buildSystemTask(const ConstraintParams *, MultiVecId res1, MultiVecId res2)sofa::core::behavior::ConstraintSolverprotected; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup() overridesofa::component::constraint::lagrangian::solver::GenericConstraintSolvervirtual; clearConstraintCorrections()sofa::component::constraint::lagrangian::solver::ConstraintSolverImplprotected; clearConstraintProblemLocks()sofa::component::constraint::lagrangian::solver::GenericConstraintSolverprotected; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeGraphssofa::component::constraint::lagrangian::solver::GenericConstraintSolver; computeResidual(const core::ExecParams *) overridesofa::component::constraint::lagrangian::solver::GenericConstraintSolvervirtual; ConstraintSolver()sofa::core::behavior::ConstraintSolverprotected; ConstraintSolverImpl()sofa::component::constraint::lagrangian::solver::ConstraintSolverImpl; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; CP_BUFFER_SIZEsofa::component::constraint::lagrangian::solver::GenericConstraintSolverprotectedstatic; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; current_cpsofa",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_generic_constraint_solver-members.html:3723,clear,clearConstraintProblemLocks,3723,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_generic_constraint_solver-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_generic_constraint_solver-members.html,1,['clear'],['clearConstraintProblemLocks']
Usability," * ptr () const;  ; Real * operator[] (Index i);  ; const Real * operator[] (Index i) const;  ; void resize (Index nbRow, Index) override;  Resize the matrix and reset all values to 0. More...;  ; Index rowSize (void) const override;  Number of rows. More...;  ; Index colSize (void) const override;  Number of columns. More...;  ; SReal element (Index i, Index j) const override;  Read the value of the element at row i, column j (using 0-based indices) More...;  ; void set (Index i, Index j, double v) override;  Write the value of the element at row i, column j (using 0-based indices) More...;  ; void add (Index i, Index j, double v) override;  Add v to the existing value of the element at row i, column j (using 0-based indices) More...;  ; void clear (Index i, Index j) override;  ; void clearRow (Index i) override;  Reset all the values in row i to 0. More...;  ; void clearCol (Index j) override;  Reset the all values in column j to 0. More...;  ; void clearRowCol (Index i) override;  Reset the value of both row and column i to 0. More...;  ; void clear () override;  Reset all values to 0. More...;  ; void resize (Index nbRow);  ; Index size () const;  ; void swap (DiagonalMatrix< T > &v);  ; SReal element (Index i) const;  ; void set (Index i, double v);  ; void add (Index i, double v);  ; void clear (Index i);  ; template<class Real2 > ; FullVector< Real2 > operator* (const FullVector< Real2 > &v) const;  ; void invert ();  ; template<class Real2 > ; void mult (FullVector< Real2 > &z, const FullVector< Real2 > &v) const;  ; template<class M2 > ; bool hasRef (const M2 *m) const;  ; std::string expr () const;  ; bool valid () const;  ; template<class Dest > ; void addTo (Dest *dest) const;  ; template<class Real2 > ; void operator= (const DiagonalMatrix< Real2 > &m);  ; template<class Real2 > ; void operator+= (const DiagonalMatrix< Real2 > &m);  ; template<class Real2 > ; void operator-= (const DiagonalMatrix< Real2 > &m);  ; template<class Expr2 > ; void operator= (",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_diagonal_matrix.html:1847,clear,clearRowCol,1847,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_diagonal_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_diagonal_matrix.html,1,['clear'],['clearRowCol']
Usability, - Topic: Metal Forging Simulation. /missing-attribute-getobject; ; SOFA - Topic: Missing attribute: getObject. /missing-lib-files; ; SOFA - Topic: [SOLVED] Missing lib files. /missing-libraries-stlib-and-libsofapython; . /embed; ; SOFA - Topic: Missing libraries: STLIB and libSofaPython. /page; . /2; ; SOFA - Topic: Missing libraries: STLIB and libSofaPython. SOFA - Topic: Missing libraries: STLIB and libSofaPython. /missing-pybind11config-cmake; ; SOFA - Topic: Missing pybind11Config.cmake. /missing-sosfsphfluid-dll; ; SOFA - Topic: [SOLVED] Missing SosfSphFluid dll. /model-collapse-with-force-of-gravity; ; SOFA - Topic: Model collapse with force of gravity. /modeler-exe-error; ; SOFA - Topic: Modeler.exe error. /modeler-in-sofa; ; SOFA - Topic: Modeler in SOFA. /modeler-in-sofa-binaries-18-06; . /feed; ; [SOLVED] Modeler in SOFA Binaries 18.06 – SOFA. SOFA - Topic: [SOLVED] Modeler in SOFA Binaries 18.06. /modeler-in-v18-06; ; SOFA - Topic: [SOLVED] Modeler in v18.06. /modeling-a-simple-grasper; . /feed; ; [SOLVED] Modeling a simple grasper – SOFA. /page; . /3; ; SOFA - Topic: [SOLVED] Modeling a simple grasper. SOFA - Topic: [SOLVED] Modeling a simple grasper. /modeling-hyper-elastic-material; ; SOFA - Topic: Modeling Hyper-elastic Material. /modeling-suction-force; . /feed; ; [SOLVED] Modeling suction force – SOFA. /page; . /13; ; SOFA - Topic: [SOLVED] Modeling suction force. /4; ; SOFA - Topic: [SOLVED] Modeling suction force. SOFA - Topic: [SOLVED] Modeling suction force. /modelling-flexible-inelastic-materials; ; SOFA - Topic: Modelling flexible inelastic materials. /modelling-skin-attached-to-tissue; ; SOFA - Topic: Modelling skin attached to tissue. /modelling-superelastic-material-nitinol; ; SOFA - Topic: Modelling SuperElastic Material (Nitinol). /modelling-tissue-deformation-in-needle-insertion-case; ; SOFA - Topic: [SOLVED] Modelling tissue deformation in needle insertion case. /model-not-visible-in-runsofa; . /feed; ; [SOLVED] model not visible in ru,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:348968,simpl,simple-grasper,348968,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['simpl'],['simple-grasper']
Usability, . /feed; . 	Comments on: SOFA gets a brand-new design !	. SOFA – SOFA gets a brand-new design !. /sofa-in-robotics-2021-6-new-papers; ; SOFA – SOFA in Robotics 2021: 6 new papers. /sofa-in-the-jfr-2015; ; SOFA – SOFA in the JFR 2015. /sofa-is-on-twitter; ; SOFA – SOFA is on twitter !. /sofa-partner-of-medfit-2019; ; SOFA – SOFA partner of MedFIT 2019. /sofa-presented-at-medteq-2018-in-montreal; ; SOFA – SOFA presented at MedTeq 2018 in Montreal. /sofa-presented-in-webinar-radiologie-numerique-french; ; SOFA – SOFA presented in webinar “Radiologie Numérique” [French]. /sofa-soon-on-github; ; SOFA – SOFA soon on GitHub. /sofa-stc5-coming-soon; ; SOFA – SOFA STC#5 in Strasbourg. /sofa-technical-committee-3-upcoming-raise-your-expectations; ; SOFA – SOFA Technical Committee #3 upcoming: raise your expectations!. /sofa-technologies-exhibited-amd-learning-day-in-paris; ; SOFA – SOFA technologies exhibited @ AMD Learning Day in Paris. /sofa-training-discover-and-learn-sofa-at-ismar2017; ; SOFA – SOFA training: discover and learn SOFA at ISMAR 2017. /sofa-v16-12-has-been-released; ; SOFA – SOFA v16.12 has been released!. /sofa-v17-06-has-been-released; ; SOFA – SOFA v17.06 has been released!. /sofa-v17-12-has-been-released; ; SOFA – SOFA v17.12 has been released!. /sofa-v18-06-has-been-released; ; SOFA – SOFA v18.06 has been released!. /sofa-v18-12-has-been-released; ; SOFA – SOFA v18.12 has been released!. /sofa-v19-06-has-been-released; ; SOFA – SOFA v19.06 has been released!. /sofa-v19-12-has-been-released; ; SOFA – SOFA v19.12 has been released!. /sofa-v20-06-has-been-released; ; SOFA – SOFA v20.06 has been released!. /sofa-v20-12-has-been-released; ; SOFA – SOFA v20.12 has been released!. /sofa-v21-06-has-been-released; ; SOFA – SOFA v21.06 has been released!. /sofa-v21-12-has-been-released; ; SOFA – SOFA v21.12 has been released!. /sofa-v22-06-has-been-released; ; SOFA – SOFA v22.06 has been released!. /sofa-v22-12-has-been-released; ; SOFA – SOFA v22.12 has been rel,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:8556,learn,learn-sofa-at-,8556,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,2,['learn'],"['learn', 'learn-sofa-at-']"
Usability, . /feed; ; fix – SOFA. SOFA - Topic Tag: fix. /fixedconstraint; . /feed; ; FixedConstraint – SOFA. SOFA - Topic Tag: FixedConstraint. /fixed-constraint; . /feed; ; fixed constraint – SOFA. SOFA - Topic Tag: fixed constraint. /fixedconstraint-genericconstraintsolver; . /feed; ; fixedconstraint GenericConstraintSolver – SOFA. SOFA - Topic Tag: fixedconstraint GenericConstraintSolver. /fixedtranslationconstraint; . /feed; ; FixedTranslationConstraint – SOFA. SOFA - Topic Tag: FixedTranslationConstraint. /flexible; . /feed; ; Flexible – SOFA. SOFA - Topic Tag: Flexible. /flexible-manipulator; . /feed; ; flexible manipulator – SOFA. SOFA - Topic Tag: flexible manipulator. /fluid; . /feed; ; Fluid – SOFA. SOFA - Topic Tag: Fluid. /fluid-simulation; . /feed; ; fluid simulation – SOFA. SOFA - Topic Tag: fluid simulation. /force; . /feed; ; force – SOFA. SOFA - Topic Tag: force. /forcefeedback; . /feed; ; ForceFeedback – SOFA. SOFA - Topic Tag: ForceFeedback. /force-feedback; . /feed; ; force feedback – SOFA. SOFA - Topic Tag: force feedback. /forcefield; . /feed; ; Forcefield – SOFA. SOFA - Topic Tag: Forcefield. /force-field; . /feed; ; force field – SOFA. SOFA - Topic Tag: force field. /forcefields; . /feed; ; Forcefields – SOFA. SOFA - Topic Tag: Forcefields. /forcefiled; . /feed; ; forcefiled – SOFA. SOFA - Topic Tag: forcefiled. /forces; . /feed; ; forces – SOFA. SOFA - Topic Tag: forces. /forum; . /feed; ; forum – SOFA. SOFA - Topic Tag: forum. /frame-plugin; . /feed; ; Frame plugin – SOFA. SOFA - Topic Tag: Frame plugin. /freemotionanimationloop; . /feed; ; FreeMotionAnimationLoop – SOFA. SOFA - Topic Tag: FreeMotionAnimationLoop. /friction; . /feed; ; friction – SOFA. SOFA - Topic Tag: friction. /gamepad; . /feed; ; Gamepad – SOFA. SOFA - Topic Tag: Gamepad. /gcc; . /feed; ; GCC – SOFA. /page; . /2; ; SOFA - Topic Tag: GCC. /3; ; SOFA - Topic Tag: GCC. /4; ; SOFA - Topic Tag: GCC. /5; ; SOFA - Topic Tag: GCC. /6; ; SOFA - Topic Tag: GCC. SOFA - Topic Tag: GCC. /gcc,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:444418,feedback,feedback,444418,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['feedback'],['feedback']
Usability," . Project the global Mechanical Vector to constrained space using offset parameter. ; Reimplemented from sofa::core::behavior::BaseProjectiveConstraintSet. ◆ applyConstraint() [3/3]. template<class DataTypes > . void sofa::component::constraint::projective::PartialLinearMovementProjectiveConstraint< DataTypes >::applyConstraint ; (; sofa::core::behavior::ZeroDirichletCondition * ; zeroDirichletCondition). overridevirtual . Project the global matrix to constrained space by using the ZeroDirichletCondition interface It allows to define what rows and columns to discard for the projection. ; Reimplemented from sofa::core::behavior::BaseProjectiveConstraintSet. ◆ clearIndices(). template<class DataTypes > . void sofa::component::constraint::projective::PartialLinearMovementProjectiveConstraint< DataTypes >::clearIndices. methods to add/remove some indices, keyTimes, keyMovement . ◆ clearKeyMovements(). template<class DataTypes > . void sofa::component::constraint::projective::PartialLinearMovementProjectiveConstraint< DataTypes >::clearKeyMovements. ◆ draw(). template<class DataTypes > . void sofa::component::constraint::projective::PartialLinearMovementProjectiveConstraint< DataTypes >::draw ; (; const core::visual::VisualParams * ; ). overridevirtual . Render internal data of this object, for debugging purposes. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ init(). template<class DataTypes > . void sofa::component::constraint::projective::PartialLinearMovementProjectiveConstraint< DataTypes >::init ; (; void ; ). overridevirtual . – Constraint interface ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ interpolatePosition() [1/4]. template<class TDataTypes > . template<class MyCoord > . void sofa::component::constraint::projective::PartialLinearMovementProjectiveConstraint< TDataTypes >::interpolatePosition ; (; Real ; cT, . typename std::enable_if< std::is_same< MyCoord, defaulttype::RigidCoord< 3, Real > >::value, VecCoord >::type & ; x . ). ◆",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_partial_linear_movement_projective_constraint.html:34129,clear,clearKeyMovements,34129,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_partial_linear_movement_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_partial_linear_movement_projective_constraint.html,1,['clear'],['clearKeyMovements']
Usability," . Solve Ax=b, where A is this matrix. WARNING: ldltDecompose() must be called first. x and b can be the same vector. . ◆ clear(). template<class TReal > . void sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::clear ; (; ). inlineoverridevirtual . Set all values to 0, by resizing to the same size. ; Implements sofa::linearalgebra::BaseMatrix. ◆ clearCol(). template<class TReal > . void sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::clearCol ; (; Index ; col). inlineoverridevirtual . Clears the all the entries of column imin to column imax-1. Not efficient ! ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearCols(). template<class TReal > . void sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::clearCols ; (; Index ; imin, . Index ; imax . ). inlineoverridevirtual . Set all the entries of column i and of row i to 0. Not efficient ! ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRow(). template<class TReal > . void sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::clearRow ; (; Index ; i). inlineoverridevirtual . Set all the entries of a row to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRowCol(). template<class TReal > . void sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::clearRowCol ; (; Index ; i). inlineoverridevirtual . Clears all the entries of rows imin to imax-1 and columns imin to imax-1. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRows(). template<class TReal > . void sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::clearRows ; (; Index ; imin, . Index ; imax . ). inlineoverridevirtual . Set all the entries of rows imin to imax-1 to 0. ; Set all the entries of a column to 0. Not efficient ! ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRowsCols(). template<class TReal > . void sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::clearRowsCols ; (; Index ; imin, . Index ; imax . ). inlineoverridevirtual . Clears all the values in rows imin to imax-1 and colum",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_base_sparse_matrix.html:20296,clear,clearRow,20296,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_base_sparse_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_base_sparse_matrix.html,1,['clear'],['clearRow']
Usability, /how-to-build-sofa-without-opengl-support; ; SOFA - Topic: [SOLVED] How to build SOFA without OpenGL support. /how-to-carving-by-phantom-device; ; SOFA - Topic: [SOLVED] HOW TO carving by phantom device ?. /how-to-change-the-texture-of-oglmodel-at-runtime; ; SOFA - Topic: [SOLVED] How to change the texture of OglModel at runtime?. /how-to-close-the-runsofa-window-reinitialize-it-in-python; ; SOFA - Topic: [SOLVED] How to close the runSofa window/reinitialize it in python?. /how-to-completely-prevent-penetration-when-collision-occurs; ; SOFA - Topic: How to completely prevent penetration when collision occurs?. /how-to-connect-two-rigid-parts-while-one-would-separate-from-the-other-halfway; ; SOFA - Topic: How to connect two rigid parts while one would separate from the other halfway?. /how-to-constraint-objects-inside-a-closed-mesh-without-using-collision-models; ; SOFA - Topic: How to constraint objects inside a closed mesh without using collision models?. /how-to-construct-a-grasper-scenewith-force-feedback; . /page; . /15; ; SOFA - Topic: [SOLVED] How to construct a grasper scene(with force feedback) ?. /4; ; SOFA - Topic: [SOLVED] How to construct a grasper scene(with force feedback) ?. SOFA - Topic: [SOLVED] How to construct a grasper scene(with force feedback) ?. /how-to-control-cable-length-in-cable-driven-manipulator; ; SOFA - Topic: How to control cable length in cable-driven manipulator. /how-to-convert-arbitrary-triangular-surface-mesh-to-tetrahedron-mesh; ; SOFA - Topic: [SOLVED] How to convert arbitrary triangular surface mesh to tetrahedron mesh?. /how-to-convert-obj-to-msh-format-file; . /feed; ; [SOLVED] How to convert obj to msh format file? – SOFA. SOFA - Topic: [SOLVED] How to convert obj to msh format file?. /how-to-create-a-coaxial-contraints-between-part-a-and-b; . /feed; ; [SOLVED] How to create a coaxial contraints between part A and B – SOFA. /page; . /15; ; SOFA - Topic: [SOLVED] How to create a coaxial contraints between part A and B. /5;,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:318071,feedback,feedback,318071,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['feedback'],['feedback']
Usability," 0, . PersistentID ; localid = 0 . ). ◆ buildConstraintMatrix(). template<class DataTypes > . void sofa::component::constraint::lagrangian::model::UnilateralLagrangianConstraint< DataTypes >::buildConstraintMatrix ; (; const core::ConstraintParams * ; cParams, . DataMatrixDeriv & ; c1, . DataMatrixDeriv & ; c2, . unsigned int & ; cIndex, . const DataVecCoord & ; x1, . const DataVecCoord & ; x2 . ). overridevirtual . Construct the Jacobian Matrix; Parameters. c1and c2 are the results constraint sparse matrix ; cIndexis the index of the next constraint equation: when building the constraint matrix, you have to use this index, and then update it ; x1and x2 are the position vectors used for constraint equation computation ; cParamsdefines the state vectors to use for positions and velocities. Also defines the order of the constraint (POS, VEL, ACC). This is the method that should be implemented by the component ; Implements sofa::core::behavior::PairInteractionConstraint< DataTypes >. ◆ clear(). template<class DataTypes > . void sofa::component::constraint::lagrangian::model::UnilateralLagrangianConstraint< DataTypes >::clear ; (; int ; reserve = 0). ◆ draw(). template<class DataTypes > . void sofa::component::constraint::lagrangian::model::UnilateralLagrangianConstraint< DataTypes >::draw ; (; const core::visual::VisualParams * ; ). overridevirtual . Render internal data of this object, for debugging purposes. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ getConstraintInfo(). template<class DataTypes > . void sofa::component::constraint::lagrangian::model::UnilateralLagrangianConstraint< DataTypes >::getConstraintInfo ; (; const core::ConstraintParams * ; cParams, . VecConstraintBlockInfo & ; blocks, . VecPersistentID & ; ids, . VecConstCoord & ; positions, . VecConstDeriv & ; directions, . VecConstArea & ; areas . ). overridevirtual . Get information for each constraint: pointer to parent BaseConstraint, unique persistent ID, 3D position Parameters. cPara",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_unilateral_lagrangian_constraint.html:25989,clear,clear,25989,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_unilateral_lagrangian_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_unilateral_lagrangian_constraint.html,1,['clear'],['clear']
Usability," ; (; const Index ; triangleIndex, . const SReal * ; baryCoords . ). override . ◆ apply(). template<class In , class Out > . void sofa::component::mapping::linear::BarycentricMapperMeshTopology< In, Out >::apply ; (; typename Out::VecCoord & ; out, . const typename In::VecCoord & ; in . ). override . ◆ applyJ(). template<class In , class Out > . void sofa::component::mapping::linear::BarycentricMapperMeshTopology< In, Out >::applyJ ; (; typename Out::VecDeriv & ; out, . const typename In::VecDeriv & ; in . ). override . ◆ applyJT() [1/2]. template<class In , class Out > . void sofa::component::mapping::linear::BarycentricMapperMeshTopology< In, Out >::applyJT ; (; typename In::MatrixDeriv & ; out, . const typename Out::MatrixDeriv & ; in . ). override . ◆ applyJT() [2/2]. template<class In , class Out > . void sofa::component::mapping::linear::BarycentricMapperMeshTopology< In, Out >::applyJT ; (; typename In::VecDeriv & ; out, . const typename Out::VecDeriv & ; in . ). override . ◆ clear(). template<class In , class Out > . void sofa::component::mapping::linear::BarycentricMapperMeshTopology< In, Out >::clear ; (; std::size_t ; reserve = 0). override . ◆ createPointInLine(). template<class In , class Out > . BarycentricMapperMeshTopology< In, Out >::Index sofa::component::mapping::linear::BarycentricMapperMeshTopology< In, Out >::createPointInLine ; (; const typename Out::Coord & ; p, . Index ; lineIndex, . const typename In::VecCoord * ; points . ). override . ◆ createPointInQuad(). template<class In , class Out > . BarycentricMapperMeshTopology< In, Out >::Index sofa::component::mapping::linear::BarycentricMapperMeshTopology< In, Out >::createPointInQuad ; (; const typename Out::Coord & ; p, . Index ; quadIndex, . const typename In::VecCoord * ; points . ). override . ◆ createPointInTriangle(). template<class In , class Out > . BarycentricMapperMeshTopology< In, Out >::Index sofa::component::mapping::linear::BarycentricMapperMeshTopology< In, Out >::createPointInT",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_barycentric_mapper_mesh_topology.html:6973,clear,clear,6973,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_barycentric_mapper_mesh_topology.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_barycentric_mapper_mesh_topology.html,1,['clear'],['clear']
Usability, ; [SOLVED] Open .OBJ or .STL files – SOFA. SOFA - Topic: [SOLVED] Open .OBJ or .STL files. /open-position-for-an-engineer-in-computer-science; . /page; . /4; ; SOFA - Topic: Open position for an Engineer in Computer Science. SOFA - Topic: Open position for an Engineer in Computer Science. /optimization-integrator; . /feed; ; [SOLVED] Optimization integrator – SOFA. SOFA - Topic: [SOLVED] Optimization integrator. /order-independent-transparency; ; SOFA - Topic: [SOLVED] Order Independent Transparency. /orientantion-in-end-effector; ; SOFA - Topic: Orientantion in End-Effector. /oriented-sliding-constraint-actuator; ; SOFA - Topic: Oriented Sliding Constraint/Actuator. /parameter-value-update; . /embed; ; SOFA - Topic: Parameter value update. SOFA - Topic: Parameter value update. /paraview-and-sofa-working-together; ; SOFA - Topic: Paraview and SOFA working together. /parse-error; ; SOFA - Topic: Parse error. /particlemask-in-sofa; ; SOFA - Topic: [SOLVED] ParticleMask in SOFA. /pauseanimation; . /feed; ; [SOLVED] PauseAnimation – SOFA. /page; . /15; ; SOFA - Topic: [SOLVED] PauseAnimation. /4; ; SOFA - Topic: [SOLVED] PauseAnimation. SOFA - Topic: [SOLVED] PauseAnimation. /penetration-depth; ; SOFA - Topic: Penetration depth?. /performance-issues-with-haptics-and-deformable-objects; . /feed; ; [SOLVED] Performance issues with haptics and deformable objects – SOFA. /page; . /10; ; SOFA - Topic: [SOLVED] Performance issues with haptics and deformable objects. /3; ; SOFA - Topic: [SOLVED] Performance issues with haptics and deformable objects. /8; ; SOFA - Topic: [SOLVED] Performance issues with haptics and deformable objects. /9; ; SOFA - Topic: [SOLVED] Performance issues with haptics and deformable objects. SOFA - Topic: [SOLVED] Performance issues with haptics and deformable objects. /permission-denied-in-video-recording; ; SOFA - Topic: Permission denied in Video recording. /persistent-contact-plugin-compile-fail; . /feed; ; [SOLVED] Persistent Contact Plugin Compi,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:360384,pause,pauseanimation,360384,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['pause'],['pauseanimation']
Usability," = CRSMechanicalPolicy> . void sofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >::clear ; (; Index ; i, . Index ; j . ). inlineoverride . clear scalar at element i, j of matrix . ◆ clearCol(). template<typename TBlock , typename TPolicy = CRSMechanicalPolicy> . void sofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >::clearCol ; (; Index ; j). inlineoverride . Clear col scalar method. Clear this col in all row of matrix. ; Parameters. j: Col index considering size of matrix in scalar. . WarningIf you want to clear all value of a block, it is better to call clearColBlock . ◆ clearRow(). template<typename TBlock , typename TPolicy = CRSMechanicalPolicy> . void sofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >::clearRow ; (; Index ; i). inlineoverride . Clear row scalar method. Clear all col of this line. ; Parameters. i: Line index considering size of matrix in scalar. . WarningIf you want to clear all value of a block, it is better to call clearRowBlock . ◆ clearRowCol(). template<typename TBlock , typename TPolicy = CRSMechanicalPolicy> . void sofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >::clearRowCol ; (; Index ; i). inlineoverride . Clear both row i and column i in a square matrix. ; Parameters. i: Row and Col index considering size of matrix in scalar. . ◆ colSize(). template<typename TBlock , typename TPolicy = CRSMechanicalPolicy> . Index sofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >::colSize ; (; ); const. inlineoverridevirtual . Number of columns. ; Implements sofa::linearalgebra::BaseMatrix. ◆ compress(). template<typename TBlock , typename TPolicy = CRSMechanicalPolicy> . void sofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >::compress ; (; ). inlineoverridevirtual . Make the final data setup after adding entries. For most concrete types, this method does nothing. ; Reimplemented from sofa::linearal",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical.html:49486,clear,clear,49486,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical.html,2,['clear'],"['clear', 'clearRowBlock']"
Usability," > . template<typename real2 > . constexpr sofa::type::Vec< N, ValueType >::Vec ; (; const real2 * ; p). inlineexplicitconstexprnoexcept . Constructor from an array of values. . Function details. ◆ assign(). template<sofa::Size N, typename ValueType > . constexpr void sofa::type::Vec< N, ValueType >::assign ; (; const ValueType & ; value). inlineconstexprnoexcept . ◆ back() [1/2]. template<sofa::Size N, typename ValueType > . constexpr reference sofa::type::Vec< N, ValueType >::back ; (; ). inlineconstexpr . ◆ back() [2/2]. template<sofa::Size N, typename ValueType > . constexpr const_reference sofa::type::Vec< N, ValueType >::back ; (; ); const. inlineconstexpr . ◆ begin() [1/2]. template<sofa::Size N, typename ValueType > . constexpr const_iterator sofa::type::Vec< N, ValueType >::begin ; (; ); const. inlineconstexprnoexcept . ◆ begin() [2/2]. template<sofa::Size N, typename ValueType > . constexpr iterator sofa::type::Vec< N, ValueType >::begin ; (; ). inlineconstexprnoexcept . ◆ clear(). template<sofa::Size N, typename ValueType > . constexpr void sofa::type::Vec< N, ValueType >::clear ; (; ). inlineconstexprnoexcept . Sets every element to 0. . ◆ cross(). template<sofa::Size N, typename ValueType > . template<typename R , Size NN = N, typename std::enable_if<(NN==3), int >::type = 0> . constexpr Vec sofa::type::Vec< N, ValueType >::cross ; (; const Vec< 3, R > & ; b); const. inlineconstexprnoexcept . ◆ data(). template<sofa::Size N, typename ValueType > . constexpr const ValueType* sofa::type::Vec< N, ValueType >::data ; (; ); const. inlineconstexprnoexcept . ◆ divscalar() [1/2]. template<sofa::Size N, typename ValueType > . template<class real2 , std::enable_if_t< std::is_convertible_v< real2, ValueType >, bool > = true> . constexpr Vec<N,ValueType> sofa::type::Vec< N, ValueType >::divscalar ; (; const real2 ; f); const. inlineconstexprnoexcept . ◆ divscalar() [2/2]. template<sofa::Size N, typename ValueType > . constexpr Vec<N,ValueType> sofa::type::Vec< N, Va",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_vec.html:15078,clear,clear,15078,api/master/sofa/html/classsofa_1_1type_1_1_vec.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_vec.html,1,['clear'],['clear']
Usability," ActivateNode()sofa::gui::qt::QSofaListViewprotectedslot; addInPropertyWidget(QTreeWidgetItem *item, bool clear)sofa::gui::qt::QSofaListView; AddObjectDialog_sofa::gui::qt::QSofaListViewprotected; attribute_sofa::gui::qt::QSofaListViewprotected; Clear(sofa::simulation::Node *rootNode)sofa::gui::qt::QSofaListView; Close()sofa::gui::qt::QSofaListViewsignal; CloseAllDialogs()sofa::gui::qt::QSofaListViewslot; collapseNode()sofa::gui::qt::QSofaListViewprotectedslot; collapseNode(QTreeWidgetItem *item)sofa::gui::qt::QSofaListViewprotected; collectNodesToChange(core::objectmodel::BaseNode *node)sofa::gui::qt::QSofaListViewprotected; contextMenuEvent(QContextMenuEvent *event) overridesofa::gui::qt::QSofaListView; copyFilePathToClipBoard()sofa::gui::qt::QSofaListViewprotectedslot; dataModified(QString)sofa::gui::qt::QSofaListViewsignal; DeactivateNode()sofa::gui::qt::QSofaListViewprotectedslot; dirtynessChanged(bool isDirty)sofa::gui::qt::SofaSceneGraphWidgetsignal; expandNode()sofa::gui::qt::QSofaListViewprotectedslot; expandNode(QTreeWidgetItem *item)sofa::gui::qt::QSofaListViewprotected; expandPath(const std::string &path)sofa::gui::qt::QSofaListViewprotected; expandPathFrom(const std::vector< std::string > &pathes)sofa::gui::qt::QSofaListView; ExpandRootNodeOnly()sofa::gui::qt::QSofaListViewslot; Export()sofa::gui::qt::QSofaListViewslot; exportOBJ()sofa::gui::qt::QSofaListViewprotectedslot; focusChanged(sofa::core::objectmodel::BaseObject *)sofa::gui::qt::QSofaListViewsignal; focusChanged(sofa::core::objectmodel::BaseNode *)sofa::gui::qt::QSofaListViewsignal; focusNode()sofa::gui::qt::QSofaListViewprotectedslot; focusObject()sofa::gui::qt::QSofaListViewprotectedslot; getAttribute() constsofa::gui::qt::QSofaListViewinline; getExpan",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_sofa_list_view-members.html:352,clear,clear,352,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_sofa_list_view-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_sofa_list_view-members.html,1,['clear'],['clear']
Usability," ActiveFlagssofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags >static; add(DestPtr v)sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags >inline; add(DestPtr v, const std::string &path)sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags >inline; sofa::core::objectmodel::BaseLink::add(Base *baseptr, const std::string &path)sofa::core::objectmodel::BaseLinkinline; addBegin(DestPtr v)sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags >inline; added(DestPtr ptr, std::size_t index)=0sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags >protectedpure virtual; addPath(const std::string &path)sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags >inline; BaseLink(LinkFlags flags)sofa::core::objectmodel::BaseLink; BaseLink(const BaseInitLink &init, LinkFlags flags)sofa::core::objectmodel::BaseLink; begin() constsofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags >inline; clear()sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags >inline; const_iterator typedefsofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags >; const_reverse_iterator typedefsofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags >; Container typedefsofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags >; CreateString(const std::string &path, const std::string &data="""")sofa::core::objectmodel::BaseLinkstatic; CreateString(Base *object, Base *from)sofa::core::objectmodel::BaseLinkstatic; CreateString(BaseData *data, Base *from)sofa::core::objectmodel::BaseLinkstatic; CreateString(Base *object, BaseData *data, Base *from)sofa::core::objectmodel::BaseLinkstatic; CreateStringData(BaseData *data)sofa:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_t_link-members.html:1261,clear,clear,1261,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_t_link-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_t_link-members.html,1,['clear'],['clear']
Usability," Alloc typedefsofa::type::vector< DetectionOutput >; clear() overridesofa::core::collision::TDetectionOutputVector< CM1, CM2 >inlinevirtual; const_reference typedefsofa::type::vector< DetectionOutput >; empty() constsofa::core::collision::DetectionOutputVectorinline; fastResize(Size n)sofa::type::vector< DetectionOutput >inline; fill(const DetectionOutput &value)sofa::type::vector< DetectionOutput >inline; getFirstPosition(unsigned idx) overridesofa::core::collision::TDetectionOutputVector< CM1, CM2 >inlinevirtual; getSecondPosition(unsigned idx) overridesofa::core::collision::TDetectionOutputVector< CM1, CM2 >inlinevirtual; memory_manager typedefsofa::type::vector< DetectionOutput >; operator=(const std::vector< DetectionOutput, Alloc > &x)sofa::type::vector< DetectionOutput >inline; operator=(std::vector< DetectionOutput, Alloc > &&v)sofa::type::vector< DetectionOutput >inline; operator[](Size n)sofa::type::vector< DetectionOutput >inline; operator[](Size n) constsofa::type::vector< DetectionOutput >inline; read(std::istream &in)sofa::type::vector< DetectionOutput >inline; read(std::istream &in)sofa::type::vector< DetectionOutput >; read(std::istream &in)sofa::type::vector< DetectionOutput >; read(std::istream &in)sofa::type::vector< DetectionOutput >; read(std::istream &in)sofa::type::vector< DetectionOutput >; read(std::istream &in)sofa::type::vector< DetectionOutput >; read(std::istream &in)sofa::type::vector< DetectionOutput >; rebind_to typedefsofa::type::vector< DetectionOutput >; reference typedefsofa::type::vector< DetectionOutput >; release()sofa::core::collision::DetectionOutputVectorinlinevirtual; Size typedefsofa::type::vector< DetectionOutput >; size() c",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_t_detection_output_vector-members.html:357,clear,clear,357,api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_t_detection_output_vector-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_t_detection_output_vector-members.html,1,['clear'],['clear']
Usability," ArrayType typedefsofa::type::Vec< N, T >; assign(const T &value) noexceptsofa::type::Vec< N, T >inline; back()sofa::type::Vec< N, T >inline; back() constsofa::type::Vec< N, T >inline; begin() noexceptsofa::type::Vec< N, T >inline; begin() const noexceptsofa::type::Vec< N, T >inline; clear() noexceptsofa::type::Vec< N, T >inline; const_iterator typedefsofa::type::Vec< N, T >; const_reference typedefsofa::type::Vec< N, T >; cross(const Vec< 3, R > &b) const noexceptsofa::type::Vec< N, T >inline; data() const noexceptsofa::type::Vec< N, T >inline; difference_type typedefsofa::type::Vec< N, T >; divscalar(const T f) const noexceptsofa::type::Vec< N, T >inline; divscalar(const real2 f) const noexceptsofa::type::Vec< N, T >inline; elemssofa::type::Vec< N, T >; end() noexceptsofa::type::Vec< N, T >inline; end() const noexceptsofa::type::Vec< N, T >inline; eqdivscalar(const T f) noexceptsofa::type::Vec< N, T >inline; eqdivscalar(const real2 f) noexceptsofa::type::Vec< N, T >inline; eqmulscalar(const T f) noexceptsofa::type::Vec< N, T >inline; eqmulscalar(const real2 f) noexceptsofa::type::Vec< N, T >inline; fill(T r) noexceptsofa::type::Vec< N, T >inline; front()sofa::type::Vec< N, T >inline; front() constsofa::type::Vec< N, T >inline; getsub(const Size i, Vec< N2, T > &m) const noexceptsofa::type::Vec< N, T >inline; getsub(const Size i, T &m) const noexceptsofa::type::Vec< N, T >inline; isNormalized(T threshold=std::numeric_limits< T >::epsilon() *(T) 10) constsofa::type::Vec< N, T >inline; iterator typedefsofa::type::Vec< N, T >; linearDivision(const Vec< N, real2 > &v) const noexceptsofa::type::Vec< N, T >inline; linearProduct(const Vec< N, real2 > &v) const noexceptsofa::type::Vec< N, T >inl",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_vector_1_1_block-members.html:569,clear,clear,569,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_vector_1_1_block-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_vector_1_1_block-members.html,1,['clear'],['clear']
Usability," ArrayType typedefsofa::type::Vec< N, ValueType >; assign(const ValueType &value) noexceptsofa::type::Vec< N, ValueType >inline; back()sofa::type::Vec< N, ValueType >inline; back() constsofa::type::Vec< N, ValueType >inline; begin() noexceptsofa::type::Vec< N, ValueType >inline; begin() const noexceptsofa::type::Vec< N, ValueType >inline; clear() noexceptsofa::type::Vec< N, ValueType >inline; const_iterator typedefsofa::type::Vec< N, ValueType >; const_reference typedefsofa::type::Vec< N, ValueType >; cross(const Vec< 3, R > &b) const noexceptsofa::type::Vec< N, ValueType >inline; data() const noexceptsofa::type::Vec< N, ValueType >inline; difference_type typedefsofa::type::Vec< N, ValueType >; divscalar(const ValueType f) const noexceptsofa::type::Vec< N, ValueType >inline; divscalar(const real2 f) const noexceptsofa::type::Vec< N, ValueType >inline; elemssofa::type::Vec< N, ValueType >; end() noexceptsofa::type::Vec< N, ValueType >inline; end() const noexceptsofa::type::Vec< N, ValueType >inline; eqdivscalar(const ValueType f) noexceptsofa::type::Vec< N, ValueType >inline; eqdivscalar(const real2 f) noexceptsofa::type::Vec< N, ValueType >inline; eqmulscalar(const ValueType f) noexceptsofa::type::Vec< N, ValueType >inline; eqmulscalar(const real2 f) noexceptsofa::type::Vec< N, ValueType >inline; fill(ValueType r) noexceptsofa::type::Vec< N, ValueType >inline; front()sofa::type::Vec< N, ValueType >inline; front() constsofa::type::Vec< N, ValueType >inline; getsub(const Size i, Vec< N2, ValueType > &m) const noexceptsofa::type::Vec< N, ValueType >inline; getsub(const Size i, ValueType &m) const noexceptsofa::type::Vec< N, ValueType >inline; isNormalized(ValueType threshold=std::numeric_limits< ValueType >::epsilon() *(Va",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_vec-members.html:593,clear,clear,593,api/master/sofa/html/classsofa_1_1type_1_1_vec-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_vec-members.html,1,['clear'],['clear']
Usability," ArrayType typedefsofa::type::Vec< N, ValueType >; assign(const ValueType &value) noexceptsofa::type::Vec< N, ValueType >inline; back()sofa::type::Vec< N, ValueType >inline; back() constsofa::type::Vec< N, ValueType >inline; begin() noexceptsofa::type::Vec< N, ValueType >inline; begin() const noexceptsofa::type::Vec< N, ValueType >inline; clear()sofa::type::MatSym< D, real >inline; const_iterator typedefsofa::type::Vec< N, ValueType >; const_reference typedefsofa::type::Vec< N, ValueType >; Coord typedefsofa::type::MatSym< D, real >; cross(const Vec< 3, R > &b) const noexceptsofa::type::Vec< N, ValueType >inline; data() const noexceptsofa::type::Vec< N, ValueType >inline; difference_type typedefsofa::type::Vec< N, ValueType >; divscalar(const ValueType f) const noexceptsofa::type::Vec< N, ValueType >inline; divscalar(const real2 f) const noexceptsofa::type::Vec< N, ValueType >inline; elemssofa::type::Vec< N, ValueType >; end() noexceptsofa::type::Vec< N, ValueType >inline; end() const noexceptsofa::type::Vec< N, ValueType >inline; eqdivscalar(const ValueType f) noexceptsofa::type::Vec< N, ValueType >inline; eqdivscalar(const real2 f) noexceptsofa::type::Vec< N, ValueType >inline; eqmulscalar(const ValueType f) noexceptsofa::type::Vec< N, ValueType >inline; eqmulscalar(const real2 f) noexceptsofa::type::Vec< N, ValueType >inline; fill(real r)sofa::type::MatSym< D, real >inline; VecNoInit< D *(D+1)/2, SReal >::fill(ValueType r) noexceptsofa::type::Vec< N, ValueType >inline; front()sofa::type::Vec< N, ValueType >inline; front() constsofa::type::Vec< N, ValueType >inline; getsub(const Size i, Vec< N2, ValueType > &m) const noexceptsofa::type::Vec< N, ValueType >inline; getsub(const Size i, ValueType &m) const noexceptsofa::type",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_mat_sym-members.html:589,clear,clear,589,api/master/sofa/html/classsofa_1_1type_1_1_mat_sym-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_mat_sym-members.html,1,['clear'],['clear']
Usability," ArrayType typedefsofa::type::Vec< N, real >; assign(const real &value) noexceptsofa::type::Vec< N, real >inline; back()sofa::type::Vec< N, real >inline; back() constsofa::type::Vec< N, real >inline; begin() noexceptsofa::type::Vec< N, real >inline; begin() const noexceptsofa::type::Vec< N, real >inline; clear() noexceptsofa::type::Vec< N, real >inline; const_iterator typedefsofa::type::Vec< N, real >; const_reference typedefsofa::type::Vec< N, real >; cross(const Vec< 3, R > &b) const noexceptsofa::type::Vec< N, real >inline; data() const noexceptsofa::type::Vec< N, real >inline; difference_type typedefsofa::type::Vec< N, real >; divscalar(const real f) const noexceptsofa::type::Vec< N, real >inline; divscalar(const real2 f) const noexceptsofa::type::Vec< N, real >inline; elemssofa::type::Vec< N, real >; end() noexceptsofa::type::Vec< N, real >inline; end() const noexceptsofa::type::Vec< N, real >inline; eqdivscalar(const real f) noexceptsofa::type::Vec< N, real >inline; eqdivscalar(const real2 f) noexceptsofa::type::Vec< N, real >inline; eqmulscalar(const real f) noexceptsofa::type::Vec< N, real >inline; eqmulscalar(const real2 f) noexceptsofa::type::Vec< N, real >inline; fill(real r) noexceptsofa::type::Vec< N, real >inline; front()sofa::type::Vec< N, real >inline; front() constsofa::type::Vec< N, real >inline; getsub(const Size i, Vec< N2, real > &m) const noexceptsofa::type::Vec< N, real >inline; getsub(const Size i, real &m) const noexceptsofa::type::Vec< N, real >inline; isNormalized(real threshold=std::numeric_limits< real >::epsilon() *(real) 10) constsofa::type::Vec< N, real >inline; iterator typedefsofa::type::Vec< N, real >; linearDivision(const Vec< N, real2 > &v) const noexceptsofa::type::Vec< N, real >i",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_vec_no_init-members.html:560,clear,clear,560,api/master/sofa/html/classsofa_1_1type_1_1_vec_no_init-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_vec_no_init-members.html,1,['clear'],['clear']
Usability," AttachBodyPerformer(BaseMouseInteractor *i)sofa::gui::component::performer::AttachBodyPerformer< DataTypes >; BaseAttachBodyPerformer(BaseMouseInteractor *i)sofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >explicit; clear()sofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >virtual; configure(sofa::component::setting::MouseButtonSetting *setting) overridesofa::gui::component::performer::AttachBodyPerformer< DataTypes >inlinevirtual; create(RealObject *, BaseMouseInteractor *interactor)sofa::gui::component::performer::TInteractionPerformer< DataTypes >inlinestatic; draw(const core::visual::VisualParams *vparams)sofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >virtual; execute()sofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >virtual; getInteractionObject()sofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >; handleEvent(core::objectmodel::Event *)sofa::gui::component::performer::InteractionPerformerinlinevirtual; InteractionPerformer(BaseMouseInteractor *i)sofa::gui::component::performer::InteractionPerformerinline; InteractionPerformerFactory typedefsofa::gui::component::performer::InteractionPerformer; m_flagssofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >protected; m_freezePerformersofa::gui::component::performer::InteractionPerformer; m_interactionObjectsofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >protected; m_interactorsofa::gui::component::performer::InteractionPerformer; m_mappersofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >protected; m_sizesofa::gui::component::performer::AttachBodyPer",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_attach_body_performer-members.html:557,clear,clear,557,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_attach_body_performer-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_attach_body_performer-members.html,1,['clear'],['clear']
Usability," BGR enum valuesofa::helper::io::Image; BGRA enum valuesofa::helper::io::Image; ChannelFormat enum namesofa::helper::io::Image; clear()sofa::helper::io::Image; COUNT_OF_CHANNEL_FORMATS enum valuesofa::helper::io::Image; COUNT_OF_DATA_TYPES enum valuesofa::helper::io::Image; COUNT_OF_TEXTURE_TYPES enum valuesofa::helper::io::Image; Create(std::string filename)sofa::helper::io::Imagestatic; create(Object *, std::string arg="""")sofa::helper::io::Imageinlinestatic; DataType enum namesofa::helper::io::Image; FactoryImage typedefsofa::helper::io::Image; FLOAT enum valuesofa::helper::io::Image; get3DSliceMipmapPixels(unsigned slice, unsigned mipmap)sofa::helper::io::Image; getBytesPerBlock() constsofa::helper::io::Image; getBytesPerChannel() constsofa::helper::io::Image; getBytesPerPixel() constsofa::helper::io::Image; getChannelCount() constsofa::helper::io::Image; getChannelFormat() constsofa::helper::io::Image; getCubeMipmapPixels(unsigned cubeside, unsigned mipmap)sofa::helper::io::Image; getDataType() constsofa::helper::io::Image; getDepth(unsigned mipmap=0) constsofa::helper::io::Image; getHeight(unsigned mipmap=0) constsofa::helper::io::Image; getImageSize() constsofa::helper::io::Image; getLineSize(unsigned mipmap=0) constsofa::helper::io::Image; getMipmapCount() constsofa::helper::io::Image; getMipmapPixels(unsigned mipmap)sofa::helper::io::Image; getMipmapRangeSize(unsigned firstMipmap, unsigned mipmaps) constsofa::helper::io::Image; getMipmapSize(unsigned mipmap) constsofa::helper::io::Image; getPixelCount() constsofa::helper::io::Image; getPixels()sofa::helper::io::Image; getTextureType() constsofa::helper::io::Image; getWidth(unsigned mipmap=0) constsofa::helper::io::Image; HALF enum valuesofa::helper::io::Image; Image()sofa",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_image_d_d_s-members.html:370,clear,clear,370,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_image_d_d_s-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_image_d_d_s-members.html,1,['clear'],['clear']
Usability," BGR enum valuesofa::helper::io::Image; BGRA enum valuesofa::helper::io::Image; ChannelFormat enum namesofa::helper::io::Image; clear()sofa::helper::io::Image; COUNT_OF_CHANNEL_FORMATS enum valuesofa::helper::io::Image; COUNT_OF_DATA_TYPES enum valuesofa::helper::io::Image; COUNT_OF_TEXTURE_TYPES enum valuesofa::helper::io::Image; create(Object *, std::string arg="""")sofa::helper::io::Imageinlinestatic; Create(std::string filename)sofa::helper::io::Imagestatic; DataType enum namesofa::helper::io::Image; FactoryImage typedefsofa::helper::io::Image; FLOAT enum valuesofa::helper::io::Image; get3DSliceMipmapPixels(unsigned slice, unsigned mipmap)sofa::helper::io::Image; getBytesPerBlock() constsofa::helper::io::Image; getBytesPerChannel() constsofa::helper::io::Image; getBytesPerPixel() constsofa::helper::io::Image; getChannelCount() constsofa::helper::io::Image; getChannelFormat() constsofa::helper::io::Image; getCubeMipmapPixels(unsigned cubeside, unsigned mipmap)sofa::helper::io::Image; getDataType() constsofa::helper::io::Image; getDepth(unsigned mipmap=0) constsofa::helper::io::Image; getHeader()sofa::helper::io::ImageRAWinline; getHeader() constsofa::helper::io::ImageRAWinline; getHeaderSize() constsofa::helper::io::ImageRAWinline; getHeight(unsigned mipmap=0) constsofa::helper::io::Image; getImageSize() constsofa::helper::io::Image; getLineSize(unsigned mipmap=0) constsofa::helper::io::Image; getMipmapCount() constsofa::helper::io::Image; getMipmapPixels(unsigned mipmap)sofa::helper::io::Image; getMipmapRangeSize(unsigned firstMipmap, unsigned mipmaps) constsofa::helper::io::Image; getMipmapSize(unsigned mipmap) constsofa::helper::io::Image; getPixelCount() constsofa::helper::io::Image; getPixels()sofa::helper::io::Image; getTe",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_image_r_a_w-members.html:370,clear,clear,370,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_image_r_a_w-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_image_r_a_w-members.html,1,['clear'],['clear']
Usability," BGR enum valuesofa::helper::io::Image; BGRA enum valuesofa::helper::io::Image; ChannelFormat enum namesofa::helper::io::Image; clear()sofa::helper::io::Image; COUNT_OF_CHANNEL_FORMATS enum valuesofa::helper::io::Image; COUNT_OF_DATA_TYPES enum valuesofa::helper::io::Image; COUNT_OF_TEXTURE_TYPES enum valuesofa::helper::io::Image; create(Object *, std::string arg="""")sofa::helper::io::Imageinlinestatic; Create(std::string filename)sofa::helper::io::Imagestatic; DataType enum namesofa::helper::io::Image; FactoryImage typedefsofa::helper::io::Image; FLOAT enum valuesofa::helper::io::Image; get3DSliceMipmapPixels(unsigned slice, unsigned mipmap)sofa::helper::io::Image; getBytesPerBlock() constsofa::helper::io::Image; getBytesPerChannel() constsofa::helper::io::Image; getBytesPerPixel() constsofa::helper::io::Image; getChannelCount() constsofa::helper::io::Image; getChannelFormat() constsofa::helper::io::Image; getCubeMipmapPixels(unsigned cubeside, unsigned mipmap)sofa::helper::io::Image; getDataType() constsofa::helper::io::Image; getDepth(unsigned mipmap=0) constsofa::helper::io::Image; getHeight(unsigned mipmap=0) constsofa::helper::io::Image; getImageSize() constsofa::helper::io::Image; getLineSize(unsigned mipmap=0) constsofa::helper::io::Image; getMipmapCount() constsofa::helper::io::Image; getMipmapPixels(unsigned mipmap)sofa::helper::io::Image; getMipmapRangeSize(unsigned firstMipmap, unsigned mipmaps) constsofa::helper::io::Image; getMipmapSize(unsigned mipmap) constsofa::helper::io::Image; getPixelCount() constsofa::helper::io::Image; getPixels()sofa::helper::io::Image; getTextureType() constsofa::helper::io::Image; getWidth(unsigned mipmap=0) constsofa::helper::io::Image; HALF enum valuesofa::helper::io::Image; Image()sofa",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_s_t_b_image-members.html:370,clear,clear,370,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_s_t_b_image-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_s_t_b_image-members.html,1,['clear'],['clear']
Usability," BGR enum valuesofa::helper::io::Image; BGRA enum valuesofa::helper::io::Image; ChannelFormat enum namesofa::helper::io::Image; clear()sofa::helper::io::Image; COUNT_OF_CHANNEL_FORMATS enum valuesofa::helper::io::Image; COUNT_OF_DATA_TYPES enum valuesofa::helper::io::Image; COUNT_OF_TEXTURE_TYPES enum valuesofa::helper::io::Image; create(Object *, std::string arg="""")sofa::helper::io::Imageinlinestatic; Create(std::string filename)sofa::helper::io::Imagestatic; DataType enum namesofa::helper::io::Image; FactoryImage typedefsofa::helper::io::Image; FLOAT enum valuesofa::helper::io::Image; get3DSliceMipmapPixels(unsigned slice, unsigned mipmap)sofa::helper::io::Image; getBytesPerBlock() constsofa::helper::io::Image; getBytesPerChannel() constsofa::helper::io::Image; getBytesPerPixel() constsofa::helper::io::Image; getChannelCount() constsofa::helper::io::Image; getChannelFormat() constsofa::helper::io::Image; getCubeMipmapPixels(unsigned cubeside, unsigned mipmap)sofa::helper::io::Image; getDataType() constsofa::helper::io::Image; getDepth(unsigned mipmap=0) constsofa::helper::io::Image; getHeight(unsigned mipmap=0) constsofa::helper::io::Image; getImageSize() constsofa::helper::io::Image; getLineSize(unsigned mipmap=0) constsofa::helper::io::Image; getMipmapCount() constsofa::helper::io::Image; getMipmapPixels(unsigned mipmap)sofa::helper::io::Image; getMipmapRangeSize(unsigned firstMipmap, unsigned mipmaps) constsofa::helper::io::Image; getMipmapSize(unsigned mipmap) constsofa::helper::io::Image; getPixelCount() constsofa::helper::io::Image; getPixels()sofa::helper::io::Image; getTextureType() constsofa::helper::io::Image; getWidth(unsigned mipmap=0) constsofa::helper::io::Image; HALF enum valuesofa::helper::io::Image; Image()sofa::help",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_image-members.html:364,clear,clear,364,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_image-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_image-members.html,1,['clear'],['clear']
Usability," BaseAttachBodyPerformer(BaseMouseInteractor *i)sofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >explicit; clear()sofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >virtual; configure(sofa::component::setting::MouseButtonSetting *)sofa::gui::component::performer::InteractionPerformerinlinevirtual; ConstraintAttachBodyPerformer(BaseMouseInteractor *i)sofa::gui::component::performer::ConstraintAttachBodyPerformer< DataTypes >; create(RealObject *, BaseMouseInteractor *interactor)sofa::gui::component::performer::TInteractionPerformer< DataTypes >inlinestatic; draw(const core::visual::VisualParams *vparams)sofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >virtual; execute()sofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >virtual; getInteractionObject()sofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >; handleEvent(core::objectmodel::Event *)sofa::gui::component::performer::InteractionPerformerinlinevirtual; InteractionPerformer(BaseMouseInteractor *i)sofa::gui::component::performer::InteractionPerformerinline; InteractionPerformerFactory typedefsofa::gui::component::performer::InteractionPerformer; m_flagssofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >protected; m_freezePerformersofa::gui::component::performer::InteractionPerformer; m_interactionObjectsofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >protected; m_interactorsofa::gui::component::performer::InteractionPerformer; m_mappersofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >protected; m_mstate1sofa::gui::component::performer",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_constraint_attach_body_performer-members.html:467,clear,clear,467,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_constraint_attach_body_performer-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_constraint_attach_body_performer-members.html,1,['clear'],['clear']
Usability, Checks if the topology has only one connected component. ; Get information about connexity of the mesh; Returnstrue if only one connected component; Get information about connexity of the mesh ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer. ◆ checkTopology(). bool sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::checkTopology ; (; ); const. overridevirtual . Checks if the topology is coherent. ; Check if the shell arrays are coherent See alsom_tetrahedron . m_edgesInTetrahedron . m_trianglesInTetrahedron . m_tetrahedraAroundVertex . m_tetrahedraAroundEdge . m_tetrahedraAroundTriangle ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer. ◆ cleanTetrahedronTopologyFromDirty(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::cleanTetrahedronTopologyFromDirty ; (; ). protected . ◆ clear(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::clear ; (; ). overridevirtual . Procedural creation methods ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer. ◆ clearEdgesInTetrahedron(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::clearEdgesInTetrahedron ; (; ). protected . ◆ clearTetrahedra(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::clearTetrahedra ; (; ). protected . ◆ clearTetrahedraAroundEdge(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::clearTetrahedraAroundEdge ; (; ). protected . ◆ clearTetrahedraAroundTriangle(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::clearTetrahedraAroundTriangle ; (; ). protected . ◆ clearTetrahedraAroundVertex(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::clearTetrahedraAroundVertex ; (; ). protected . ◆ clearTrian,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container.html:50369,clear,clear,50369,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container.html,1,['clear'],['clear']
Usability," DataTypes::Real >, sofa::linearalgebra::DiagonalMatrix< T >, sofa::linearalgebra::DiagonalMatrix< R1 >, sofa::linearalgebra::DiagonalMatrix< R2 >, sofa::linearalgebra::CompressedRowSparseMatrixMechanical< sofa::type::Mat< NL, NC, MReal > >, sofa::linearalgebra::CompressedRowSparseMatrixMechanical< MReal >, sofa::linearalgebra::CompressedRowSparseMatrixMechanical< Real >, sofa::linearalgebra::BTDMatrix< N, T >, sofa::linearalgebra::BlockFullMatrix< N, T >, sofa::linearalgebra::BlockDiagonalMatrix< LC, T >, and sofa::core::behavior::ApplyConstraintCompat. ◆ clearRows(). virtual void sofa::linearalgebra::BaseMatrix::clearRows ; (; Index ; imin, . Index ; imax . ). inlinevirtual . Clears the value of rows imin to imax-1. ; Reimplemented in sofa::linearalgebra::EigenBaseSparseMatrix< TReal >, sofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >, and sofa::linearalgebra::EigenBaseSparseMatrix< typename DataTypes::Real >. ◆ clearRowsCols(). virtual void sofa::linearalgebra::BaseMatrix::clearRowsCols ; (; Index ; imin, . Index ; imax . ). inlinevirtual . Clears all the values in rows imin to imax-1 and columns imin to imax-1. ; Reimplemented in sofa::linearalgebra::EigenBaseSparseMatrix< TReal >, sofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >, and sofa::linearalgebra::EigenBaseSparseMatrix< typename DataTypes::Real >. ◆ cols(). Index sofa::linearalgebra::BaseMatrix::cols ; (; void ; ); const. inline . Number of columns (Eigen-compatible API) . ◆ colSize(). virtual Index sofa::linearalgebra::BaseMatrix::colSize ; (; void ; ); const. pure virtual . Number of columns. ; Implemented in sofa::linearalgebra::SparseMatrix< T >, sofa::linearalgebra::SparseMatrix< SReal >, sofa::linearalgebra::SparseMatrix< Real >, sofa::linearalgebra::RotationMatrix< TReal >, sofa::linearalgebra::FullMatrix< T >, sofa::linearalgebra::FullMatrix< typename Vector::Real >, sofa::linearalgebra::FullMatrix< Real >, sofa::linearalgebra::EigenBaseSparseMatrix< TReal >, sofa::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_matrix.html:39813,clear,clearRowsCols,39813,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_matrix.html,1,['clear'],['clearRowsCols']
Usability," DataVecCoord &x) overridesofa::component::constraint::lagrangian::model::FixedLagrangianConstraint< DataTypes >virtual; sofa::core::behavior::Constraint::buildConstraintMatrix(const ConstraintParams *cParams, MultiMatrixDerivId cId, unsigned int &cIndex) overridesofa::core::behavior::Constraint< DataTypes >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::Constraint< DataTypes >inlinestatic; sofa::core::behavior::BaseConstraint::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; sofa::computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; sofa::core::behavior::SingleStateAccessor::computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; ConstArea typedefsofa::core::behavior::BaseConstraint; ConstCoord typedefsofa::core::behavior::BaseConstraint; ConstDeriv typedefsofa::core::behavior::BaseConstraint; Constraint(MechanicalState< DataTypes > *mm=nullptr)sofa::core::behavior::Constraint< DataTypes >protected; Coord typedefsofa::component::constraint::lagrangian::model::FixedLagrangianConstraint< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_con",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_fixed_lagrangian_constraint-members.html:2744,clear,clearLoggedMessages,2744,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_fixed_lagrangian_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_fixed_lagrangian_constraint-members.html,1,['clear'],['clearLoggedMessages']
Usability," Functions;  SOFA_CLASS (VisualManager, VisualModel);  ; virtual void preDrawScene (VisualParams *);  Called before rendering the scene. More...;  ; virtual void postDrawScene (VisualParams *);  Called after rendering the scene. More...;  ; virtual bool drawScene (VisualParams *);  Called instead of rendering the scene. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virt",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_manager.html:1363,clear,clearVisual,1363,api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_manager.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_manager.html,2,['clear'],"['clear', 'clearVisual']"
Usability," Index j, T *buffer) constsofa::linearalgebra::BaseMatrixinline; blocGet(Index i, Index j) constsofa::linearalgebra::BaseMatrixinlinevirtual; blocGetW(Index i, Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; BlockType typedefsofa::linearalgebra::BTDMatrix< N, T >; blocSet(Index i, Index j, const T *buffer)sofa::linearalgebra::BaseMatrixinline; bRowBegin(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowEnd(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowRange(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsBegin() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsEnd() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowSize() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsRange() constsofa::linearalgebra::BaseMatrixinlinevirtual; BSIZE enum valuesofa::linearalgebra::BTDMatrix< N, T >; BTDMatrix()sofa::linearalgebra::BTDMatrix< N, T >; BTDMatrix(Index nbRow, Index nbCol)sofa::linearalgebra::BTDMatrix< N, T >; clear(Index i, Index j) overridesofa::linearalgebra::BTDMatrix< N, T >virtual; clear() overridesofa::linearalgebra::BTDMatrix< N, T >virtual; clearCol(Index j) overridesofa::linearalgebra::BTDMatrix< N, T >virtual; clearCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRow(Index i) overridesofa::linearalgebra::BTDMatrix< N, T >virtual; clearRowCol(Index i) overridesofa::linearalgebra::BTDMatrix< N, T >virtual; clearRows(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowsCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; cols(void) constsofa::linearalgebra::BaseMatrixinline; colSize(void) const overridesofa::linearalgebra::BTDMatrix< N, T >virtual; compress()sofa::linearalgebra::BaseMatrixvirtual; createBlockAccessor(Index row, Index col, void *internalPtr=nullptr)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockAccessor(Index row, Index col, Index internalData)sofa::linearalgebra::BaseMatrixinlineprot",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_b_t_d_matrix-members.html:5634,clear,clear,5634,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_b_t_d_matrix-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_b_t_d_matrix-members.html,1,['clear'],['clear']
Usability," IndexType > Class Template Reference . #include <matrix_bloc_traits.h>. Static Public Member Functions; static Real & v (Block &b, IndexType, IndexType);  ; static void vset (Block &b, int, int, Real val);  ; static void vadd (Block &b, int, int, Real val);  ; static const Real & v (const Block &b, IndexType, IndexType);  ; static void clear (Block &b);  ; static bool empty (const Block &b);  ; static void invert (Block &result, const Block &b);  ; template<class TSubBlock , std::enable_if_t< std::is_scalar_v< TSubBlock >, bool > = true> ; static void subBlock (const Block &b, IndexType row, IndexType col, TSubBlock &subBlock);  ; static void split_row_index (IndexType &index, IndexType &modulo);  ; static void split_col_index (IndexType &index, IndexType &modulo);  ; static sofa::linearalgebra::BaseMatrix::ElementType getElementType ();  ; static const std::string Name ();  . Function details. ◆ clear(). template<typename IndexType > . static void sofa::linearalgebra::matrix_bloc_traits< double, IndexType >::clear ; (; Block & ; b). inlinestatic . ◆ empty(). template<typename IndexType > . static bool sofa::linearalgebra::matrix_bloc_traits< double, IndexType >::empty ; (; const Block & ; b). inlinestatic . ◆ getElementType(). template<typename IndexType > . static sofa::linearalgebra::BaseMatrix::ElementType sofa::linearalgebra::matrix_bloc_traits< double, IndexType >::getElementType ; (; ). inlinestatic . ◆ invert(). template<typename IndexType > . static void sofa::linearalgebra::matrix_bloc_traits< double, IndexType >::invert ; (; Block & ; result, . const Block & ; b . ). inlinestatic . ◆ Name(). template<typename IndexType > . static const std::string sofa::linearalgebra::matrix_bloc_traits< double, IndexType >::Name ; (; ). inlinestatic . ◆ split_col_index(). template<typename IndexType > . static void sofa::linearalgebra::matrix_bloc_traits< double, IndexType >::split_col_index ; (; IndexType & ; index, . IndexType & ; modulo . ). inlinestatic . ◆ split_row",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1matrix__bloc__traits_3_01double_00_01_index_type_01_4.html:1304,clear,clear,1304,api/master/sofa/html/classsofa_1_1linearalgebra_1_1matrix__bloc__traits_3_01double_00_01_index_type_01_4.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1matrix__bloc__traits_3_01double_00_01_index_type_01_4.html,1,['clear'],['clear']
Usability," Member Functions |; List of all members . sofa::core::objectmodel::Data< T > Class Template Reference . #include <Data.h>; Container that holds a variable for a component. ; More... Inheritance diagram for sofa::core::objectmodel::Data< T >:. [legend]; Detailed Description; template<class T = void*>; class sofa::core::objectmodel::Data< T >; Container that holds a variable for a component. ; This is a fundamental class template in Sofa. Data are used to encapsulated member variables of Sofa components (i.e. classes that somehow inherit from Base) in order to access them dynamically and generically: briefly, Data can be retrieved at run-time by their name, and they can be assigned a value from a string, or be printed as a string.; More concretely, from the perspective of XML scene files, each Data declared in a component corresponds to an attribute of this component.; Example ; If a component Foo has a boolean parameter bar, it does not simply declares it as bool m_bar, but rather like this:; Data<bool> d_bar;; sofa::core::objectmodel::Data< bool >template class SOFA_CORE_API Data< bool >Definition: Data.cpp:59; Then, this Data must be initialized to provide its name and default value. This is typically done in the initialization list of each constructor of the component, using the helper function Base::initData():; Foo::Foo(): d_bar(initData(&d_bar, true, ""bar"", ""Here is a little description of this Data."")) {; // ...; }; And this Data can be assigned a value in XML scene files like so: <Foo bar=""false""/>; . Classes; class  InitData;  This internal class is used by the initData() methods to store initialization parameters of a Data. More...;  . Public Attributes; int m_counter;  Number of changes since creation. More...;  ; bool m_isSet;  True if this Data is set, i.e. its value is different from the default value. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseData; std::string help {""""};  Help message. More...;  ; std::string ownerClass",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_data.html:1225,simpl,simply,1225,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_data.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_data.html,1,['simpl'],['simply']
Usability," More...;  ; Index cube (int x, int y, int z) const;  Get Cube index, similar to. More...;  ; Grid_dimension getDimensions () const;  Get the actual dimension of this grid using Enum. More...;  ;  Public Member Functions inherited from sofa::component::topology::container::constant::MeshTopology;  SOFA_CLASS (MeshTopology, core::topology::BaseMeshTopology);  ; Size getNbPoints () const override;  ; void setNbPoints (Size n) override;  ; const SeqEdges & getEdges () override;  ; const SeqTriangles & getTriangles () override;  ; const SeqQuads & getQuads () override;  ; const SeqTetrahedra & getTetrahedra () override;  ; const SeqHexahedra & getHexahedra () override;  ; Size getNbEdges () override;  ; Size getNbTriangles () override;  ; Size getNbQuads () override;  ; Size getNbTetrahedra () override;  ; const Edge getEdge (EdgeID i) override;  ; const Triangle getTriangle (TriangleID i) override;  ; const Quad getQuad (QuadID i) override;  ; const Tetra getTetrahedron (TetraID i) override;  ; const Hexa getHexahedron (HexaID i) override;  ; virtual const SeqUV & getUVs ();  ; virtual Size getNbUVs ();  ; virtual const UV getUV (UVID i);  ; void addUV (SReal u, SReal v);  ; SReal getPosX (Index i) const;  ; SReal getPosY (Index i) const;  ; SReal getPosZ (Index i) const;  ; void clear () override;  ; void addPoint (SReal px, SReal py, SReal pz) override;  ; void addEdge (Index a, Index b) override;  ; void addTriangle (Index a, Index b, Index c) override;  ; void addQuad (Index a, Index b, Index c, Index d) override;  ; void addTetra (Index a, Index b, Index c, Index d) override;  ; void addHexa (Index a, Index b, Index c, Index d, Index e, Index f, Index g, Index h) override;  ; int getRevision () const override;  get the current revision of this mesh (use to detect changes) More...;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; virtual bool hasVolume ();  ; virtual bool has",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_cylinder_grid_topology.html:8442,clear,clear,8442,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_cylinder_grid_topology.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_cylinder_grid_topology.html,4,['clear'],['clear']
Usability," Node::SPtr sofa::simpleapi::createChild ; (; Node::SPtr ; node, . BaseObjectDescription & ; desc . ). ◆ createChild() [2/4]. Node::SPtr sofa::simpleapi::createChild ; (; Node::SPtr ; node, . const std::string & ; name, . const std::map< std::string, std::string > & ; params . ). ◆ createChild() [3/4]. NodeSPtr SOFA_SIMPLEAPI_API sofa::simpleapi::createChild ; (; NodeSPtr ; node, . BaseObjectDescription & ; desc . ). create a child to the provided node. The parameter ""params"" is for passing specific data argument to the created object (including the node name). . ◆ createChild() [4/4]. NodeSPtr SOFA_SIMPLEAPI_API sofa::simpleapi::createChild ; (; NodeSPtr ; node, . const std::string & ; name, . const std::map< std::string, std::string > & ; params = std::map< std::string, std::string >{} . ). create a child to the provided nodeof given name. The parameter ""params"" is for passing specific data argument to the created object. . ◆ createNode(). NodeSPtr SOFA_SIMPLEAPI_API sofa::simpleapi::createNode ; (; const std::string & ; name). create a child to the provided node. The parameter ""params"" is for passing specific data argument to the created object (including the node name). . ◆ createObject() [1/4]. BaseObject::SPtr sofa::simpleapi::createObject ; (; Node::SPtr ; parent, . BaseObjectDescription & ; desc . ). ◆ createObject() [2/4]. BaseObject::SPtr sofa::simpleapi::createObject ; (; Node::SPtr ; parent, . const std::string & ; type, . const std::map< std::string, std::string > & ; params . ). ◆ createObject() [3/4]. sofa::core::sptr<BaseObject> SOFA_SIMPLEAPI_API sofa::simpleapi::createObject ; (; NodeSPtr ; node, . BaseObjectDescription & ; params . ). Create a sofa object in the provided node. The parameter ""params"" is for passing specific data argument to the created object including the object's type. . ◆ createObject() [4/4]. sofa::core::sptr<BaseObject> SOFA_SIMPLEAPI_API sofa::simpleapi::createObject ; (; NodeSPtr ; node, . const std::string & ; type, . const",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simpleapi.html:4270,simpl,simpleapi,4270,api/master/sofa/html/namespacesofa_1_1simpleapi.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simpleapi.html,1,['simpl'],['simpleapi']
Usability," NodeSPtr SOFA_SIMPLEAPI_API sofa::simpleapi::createChild ; (; NodeSPtr ; node, . const std::string & ; name, . const std::map< std::string, std::string > & ; params = std::map< std::string, std::string >{} . ). create a child to the provided nodeof given name. The parameter ""params"" is for passing specific data argument to the created object. . ◆ createNode(). NodeSPtr SOFA_SIMPLEAPI_API sofa::simpleapi::createNode ; (; const std::string & ; name). create a child to the provided node. The parameter ""params"" is for passing specific data argument to the created object (including the node name). . ◆ createObject() [1/4]. BaseObject::SPtr sofa::simpleapi::createObject ; (; Node::SPtr ; parent, . BaseObjectDescription & ; desc . ). ◆ createObject() [2/4]. BaseObject::SPtr sofa::simpleapi::createObject ; (; Node::SPtr ; parent, . const std::string & ; type, . const std::map< std::string, std::string > & ; params . ). ◆ createObject() [3/4]. sofa::core::sptr<BaseObject> SOFA_SIMPLEAPI_API sofa::simpleapi::createObject ; (; NodeSPtr ; node, . BaseObjectDescription & ; params . ). Create a sofa object in the provided node. The parameter ""params"" is for passing specific data argument to the created object including the object's type. . ◆ createObject() [4/4]. sofa::core::sptr<BaseObject> SOFA_SIMPLEAPI_API sofa::simpleapi::createObject ; (; NodeSPtr ; node, . const std::string & ; type, . const std::map< std::string, std::string > & ; params = std::map< std::string, std::string >{} . ). create a sofa object in the provided node of the given type. The parameter ""params"" is for passing specific data argument to the created object. . ◆ createRootNode() [1/2]. NodeSPtr SOFA_SIMPLEAPI_API sofa::simpleapi::createRootNode ; (; Simulation * ; s, . const std::string & ; name, . const std::map< std::string, std::string > & ; params . ). ◆ createRootNode() [2/2]. NodeSPtr SOFA_SIMPLEAPI_API sofa::simpleapi::createRootNode ; (; Simulation::SPtr ; s, . const std::string & ; name, . const",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simpleapi.html:4876,simpl,simpleapi,4876,api/master/sofa/html/namespacesofa_1_1simpleapi.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simpleapi.html,1,['simpl'],['simpleapi']
Usability," Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; List of all members . sofa::component::animationloop::ConstraintProblem Class Reference . #include <ConstraintAnimationLoop.h>. Protected Attributes; sofa::linearalgebra::LPtrFullMatrix< SReal > _W;  ; sofa::linearalgebra::FullVector< SReal > _dFree;  ; sofa::linearalgebra::FullVector< SReal > _force;  ; sofa::linearalgebra::FullVector< SReal > _d;  ; sofa::linearalgebra::FullVector< SReal > _df;  ; std::vector< core::behavior::ConstraintResolution * > _constraintsResolutions;  ; SReal _tol;  ; int _dim;  ; sofa::helper::system::thread::CTime * _timer;  . Public Member Functions;  ConstraintProblem (bool printLog=false);  ; virtual ~ConstraintProblem ();  ; virtual void clear (int dim, const SReal &tol);  ; int getSize (void);  ; sofa::linearalgebra::LPtrFullMatrix< SReal > * getW (void);  ; sofa::linearalgebra::FullVector< SReal > * getDfree (void);  ; sofa::linearalgebra::FullVector< SReal > * getD (void);  ; sofa::linearalgebra::FullVector< SReal > * getF (void);  ; sofa::linearalgebra::FullVector< SReal > * getdF (void);  ; std::vector< core::behavior::ConstraintResolution * > & getConstraintResolutions (void);  ; SReal * getTolerance (void);  ; void gaussSeidelConstraintTimed (SReal &timeout, int numItMax);  . Attribute details. ◆ _constraintsResolutions. std::vector<core::behavior::ConstraintResolution*> sofa::component::animationloop::ConstraintProblem::_constraintsResolutions. protected . ◆ _d. sofa::linearalgebra::FullVector<SReal> sofa::component::animationloop::ConstraintProblem::_d. protected . ◆ _df. sofa::linearalgebra::FullVector<SReal> sofa::component::animationloop::ConstraintProblem::_df. protected . ◆ _dFree. sofa::linearalgebra::FullVector<SReal> sofa::component::animationloop::ConstraintProblem::_dFree. protected . ◆ _dim. int sofa::component::animationloop::ConstraintProblem::_dim. protected . ◆ _force. sofa::linearalgebra::FullVector<SReal> so",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_problem.html:884,clear,clear,884,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_problem.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_problem.html,1,['clear'],['clear']
Usability," Public Member Functions |; Protected Member Functions |; List of all members . sofa::component::io::mesh::OffSequenceLoader Class Reference . #include <OffSequenceLoader.h>. Inheritance diagram for sofa::component::io::mesh::OffSequenceLoader:. [legend]; Detailed Description; This class load a sequence of .off mesh files, ordered by index in their name . Public Member Functions;  SOFA_CLASS (OffSequenceLoader, MeshOffLoader);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reset () override;  Reset to initial state. More...;  ; void handleEvent (sofa::core::objectmodel::Event *event) override;  Handle an event. More...;  ; virtual bool load (const char *filename);  ; void clear ();  ;  Public Member Functions inherited from sofa::component::io::mesh::MeshOffLoader;  SOFA_CLASS (MeshOffLoader, sofa::core::loader::MeshLoader);  ; bool doLoad () override;  ;  Public Member Functions inherited from sofa::core::loader::MeshLoader;  SOFA_ABSTRACT_CLASS (MeshLoader, BaseLoader);  ; bool canLoad () override;  ; void parse (sofa::core::objectmodel::BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; virtual bool load () final;  ; virtual void applyTransformation (sofa::type::Matrix4 const &T);  Apply Homogeneous transformation to the positions. More...;  ; virtual void updateMesh ();  ; virtual void updateElements ();  ; virtual void updatePoints ();  ; virtual void updateNormals ();  ; void setTranslation (SReal dx, SReal dy, SReal dz);  ; void setRotation (SReal rx, SReal ry, SReal rz);  ; void setScale (SReal sx, SReal sy, SReal sz);  ; void setTransf",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_off_sequence_loader.html:918,clear,clear,918,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_off_sequence_loader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_off_sequence_loader.html,1,['clear'],['clear']
Usability," Public Member Functions;  DrawTool ();  ; virtual ~DrawTool ();  ; virtual void init ()=0;  ; virtual void enableBlending ()=0;  ; virtual void disableBlending ()=0;  ; virtual void enableLighting ()=0;  ; virtual void disableLighting ()=0;  ; virtual void enableDepthTest ()=0;  ; virtual void disableDepthTest ()=0;  ; virtual void clear ();  ;  StateLifeCycle ()=delete;  ;  StateLifeCycle (const StateLifeCycle &)=delete;  ;  StateLifeCycle (DrawTool *drawTool);  ;  ~StateLifeCycle ();  ; Primitive rendering methods; virtual void drawPoints (const std::vector< Vec3 > &points, float size, const RGBAColor &color)=0;  ; virtual void drawPoints (const std::vector< Vec3 > &points, float size, const std::vector< RGBAColor > &color)=0;  ; virtual void drawLine (const Vec3 &p1, const Vec3 &p2, const RGBAColor &color)=0;  ; virtual void drawInfiniteLine (const Vec3 &point, const Vec3 &direction, const RGBAColor &color)=0;  ; virtual void drawLines (const std::vector< Vec3 > &points, float size, const RGBAColor &color)=0;  ; virtual void drawLines (const std::vector< Vec3 > &points, float size, const std::vector< RGBAColor > &colors)=0;  ; virtual void drawLines (const std::vector< Vec3 > &points, const std::vector< Vec2i ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1visual_1_1_draw_tool.html:1103,clear,clear,1103,api/master/sofa/html/classsofa_1_1helper_1_1visual_1_1_draw_tool.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1visual_1_1_draw_tool.html,1,['clear'],['clear']
Usability," Public Member Functions;  DualQuatCoord3 (const Quat &Dual, const Quat &orient);  ; template<typename real2 > ;  DualQuatCoord3 (const DualQuatCoord3< real2 > &c);  ;  DualQuatCoord3 (const Pos &p, const sofa::type::Quat< real > &q);  ;  DualQuatCoord3 ();  ; void clear ();  ;  ~DualQuatCoord3 ();  ; real * ptr ();  ; const real * ptr () const;  ; void setTranslation (const Vec3 &p);  ; Vec3 getTranslation ();  ; Quat & getDual ();  ; Quat & getOrientation ();  ; const Quat & getDual () const;  ; const Quat & getOrientation () const;  ; real norm2 () const;  ; real norm () const;  ; void normalize ();  ; void invert ();  ; template<typename real2 > ; void toMatrix (type::Mat< 3, 4, real2 > &m) const;  ; template<typename real2 > ; void toRotationMatrix (type::Mat< 3, 3, real2 > &m) const;  ; Vec3 rotate (const Vec3 &v) const;  ; Vec3 inverseRotate (const Vec3 &v) const;  ; DualQuatCoord3< real > inverse ();  ; DualQuatCoord3< real > multRight (const DualQuatCoord3< real > &c) const;  ; DualQuatCoord3< real > multLeft (const DualQuatCoord3< real > &c);  ; Vec3 pointToParent (const Vec3 &p);  ; Vec3 pointToChild (const Vec3 &v);  ; Vec3 vectorToChild (const Vec3 &v);  ; template<typename real2 > ; void operator= (const DualQuatCoord3< real2 > &c);  ; void operator= (const Vec3 &p);  ; void operator+= (const DualQuatCoord3< real > &a);  ; template<typename real2 > ; void operator*= (real2 a);  ; template<typename real2 > ; void operator/= (real2 a);  ; template<typename real2 > ; DualQuatCoord3< real > operator* (real2 a) const;  ; real operator* (const DualQuatCoord3< real > &a) const;  ; DualQuatCoord3< real > operator+ (const type::Vec< 6, real >",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_dual_quat_coord3.html:592,clear,clear,592,api/master/sofa/html/classsofa_1_1type_1_1_dual_quat_coord3.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_dual_quat_coord3.html,1,['clear'],['clear']
Usability," Public Member Functions;  SOFA_CLASS2 (ConstantLocalMappedMatrix, SOFA_TEMPLATE2(ConstantLocalMatrix, linearalgebra::CompressedRowSparseMatrix< TBlockType >, c), SOFA_TEMPLATE2(AssemblingMappedMatrixAccumulator, c, TBlockType));  ;  Public Member Functions inherited from sofa::component::linearsystem::ConstantLocalMatrix< linearalgebra::CompressedRowSparseMatrix< TBlockType >, c >;  SOFA_CLASS (ConstantLocalMatrix, SOFA_TEMPLATE2(AssemblingMatrixAccumulator, c, sofa::core::matrixaccumulator::NoIndexVerification));  ;  Public Member Functions inherited from sofa::component::linearsystem::AssemblingMatrixAccumulator< c, sofa::core::matrixaccumulator::NoIndexVerification >;  SOFA_CLASS (AssemblingMatrixAccumulator, SOFA_TEMPLATE2(sofa::core::MatrixAccumulatorIndexChecker, BaseAssemblingMatrixAccumulator< c >, sofa::core::matrixaccumulator::NoIndexVerification));  ; void clear () override;  ;  Public Member Functions inherited from sofa::core::MatrixAccumulatorIndexChecker< BaseAssemblingMatrixAccumulator< c >, sofa::core::matrixaccumulator::NoIndexVerification >;  SOFA_CLASS (MatrixAccumulatorIndexChecker, BaseAssemblingMatrixAccumulator< c >);  ; void setIndexCheckerStrategy (std::shared_ptr< matrixaccumulator::IndexVerificationStrategy > strategy) override;  ; void add (const sofa::SignedIndex row, const sofa::SignedIndex col, const float value) override final;  ; void add (const sofa::SignedIndex row, const sofa::SignedIndex col, double value) override final; ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_constant_local_mapped_matrix.html:1397,clear,clear,1397,api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_constant_local_mapped_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_constant_local_mapped_matrix.html,1,['clear'],['clear']
Usability," RHS of the linear system. More...;  ; virtual TVector * getSolutionVector () const;  Return the solution of the linear system. More...;  ; linearalgebra::BaseMatrix * getSystemBaseMatrix () const override;  Returns the system matrix as a linearalgebra::BaseMatrix*. More...;  ; virtual void resizeSystem (sofa::Size n);  Set the size of the matrix to n x n, and the size of RHS and solution to n. More...;  ; virtual void clearSystem ();  ; virtual void setRHS (core::MultiVecDerivId v);  ; virtual void setSystemSolution (core::MultiVecDerivId v);  ; virtual void dispatchSystemSolution (core::MultiVecDerivId v);  ; virtual void dispatchSystemRHS (core::MultiVecDerivId v);  ; core::objectmodel::BaseContext * getSolveContext ();  ; SOFA_COMPONENT_LINEARSOLVER_ITERATIVE_API void setRHS (core::MultiVecDerivId v);  ; SOFA_COMPONENT_LINEARSOLVER_ITERATIVE_API void setSystemSolution (core::MultiVecDerivId v);  ; SOFA_COMPONENT_LINEARSOLVER_ITERATIVE_API void dispatchSystemSolution (core::MultiVecDerivId v);  ; SOFA_COMPONENT_LINEARSOLVER_ITERATIVE_API void dispatchSystemRHS (core::MultiVecDerivId v);  ; void setRHS (core::MultiVecDerivId v);  ; void setSystemSolution (core::MultiVecDerivId v);  ; void dispatchSystemSolution (core::MultiVecDerivId v);  ; void dispatchSystemRHS (core::MultiVecDerivId v);  ;  Public Member Functions inherited from sofa::core::behavior::BaseMatrixLinearSystem;  SOFA_ABSTRACT_CLASS (BaseMatrixLinearSystem, core::objectmodel::BaseObject);  ; void buildSystemMatrix (const core::MechanicalParams *mparams);  Construct and assemble the linear system matrix. More...;  ; sofa::type::Vec2u getMatrixSize () const;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, st",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1preconditioner_1_1_precomputed_matrix_system.html:1527,clear,clearSystem,1527,api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1preconditioner_1_1_precomputed_matrix_system.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1preconditioner_1_1_precomputed_matrix_system.html,5,['clear'],['clearSystem']
Usability," Range<InputIt>& a); The signature does not need to have const &.; A task scheduler must be provided and correctly initialized. The number of generated ranges depends on the threads available in the task scheduler. . ◆ setSimulation(). void sofa::simulation::setSimulation ; (; Simulation * ; s). delete . Set the (unique) simulation which controls the scene. . Variable Documentation. ◆ DefaultAnimationLoopClass. int sofa::simulation::DefaultAnimationLoopClass. Initial value:= core::RegisterObject(""Simulation loop to use in scene without constraints nor contact.""); .add<DefaultAnimationLoop>(); .addDocumentationURL(std::string(sofa::SOFA_DOCUMENTATION_URL) + std::string(""components/animationloops/defaultanimationloop/"")); .addDescription(R""(; This loop triggers the following steps:; - build and solve all linear systems in the scene : collision and time integration to compute the new values of the dofs; - update the context (dt++); - update the mappings; - update the bounding box (volume covering all objects of the scene))""). ◆ DefaultTaskSchedulerRegistered. const bool sofa::simulation::DefaultTaskSchedulerRegistered. Initial value:= MainTaskSchedulerFactory::registerScheduler(; DefaultTaskScheduler::name(),; &DefaultTaskScheduler::create). ◆ DefaultVisualManagerLoopClass. int sofa::simulation::DefaultVisualManagerLoopClass. Initial value:= core::RegisterObject(""The simplest Visual Loop Manager, created by default when user do not put on scene""); .add< DefaultVisualManagerLoop >(). ◆ loaderPHP. const SceneLoader* sofa::simulation::loaderPHP = SceneLoaderFactory::getInstance()->addEntry(new SceneLoaderPHP()). ◆ loaderXML. const SceneLoader* sofa::simulation::loaderXML = SceneLoaderFactory::getInstance()->addEntry(new SceneLoaderXML()). ◆ RequiredPluginClass. int sofa::simulation::RequiredPluginClass. Initial value:= core::RegisterObject(""Load the required plugins""); .add< RequiredPlugin >(). sofasimulation; Generated on Mon Nov 11 2024 03:33:58 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation.html:10722,simpl,simplest,10722,api/master/sofa/html/namespacesofa_1_1simulation.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation.html,1,['simpl'],['simplest']
Usability," Reimplemented in sofa::component::constraint::lagrangian::solver::GenericConstraintSolver. ◆ lockConstraintProblem(). virtual void sofa::component::constraint::lagrangian::solver::ConstraintSolverImpl::lockConstraintProblem ; (; sofa::core::objectmodel::BaseObject * ; from, . ConstraintProblem * ; p1, . ConstraintProblem * ; p2 = nullptr . ). pure virtual . Do not use the following LCPs until the next call to this function. This is used to prevent concurrent access to the LCP when using a LCPForceFeedback through an haptic thread. ; Implemented in sofa::component::constraint::lagrangian::solver::LCPConstraintSolver, and sofa::component::constraint::lagrangian::solver::GenericConstraintSolver. ◆ postBuildSystem(). void sofa::component::constraint::lagrangian::solver::ConstraintSolverImpl::postBuildSystem ; (; const core::ConstraintParams * ; cParams). overrideprotectedvirtual . Reimplemented from sofa::core::behavior::ConstraintSolver. ◆ postSolveSystem(). void sofa::component::constraint::lagrangian::solver::ConstraintSolverImpl::postSolveSystem ; (; const core::ConstraintParams * ; cParams). overrideprotectedvirtual . Reimplemented from sofa::core::behavior::ConstraintSolver. ◆ removeConstraintCorrection(). void sofa::component::constraint::lagrangian::solver::ConstraintSolverImpl::removeConstraintCorrection ; (; core::behavior::BaseConstraintCorrection * ; s). overridevirtual . Remove reference to ConstraintCorrection; Parameters. cis the ConstraintCorrection . Implements sofa::core::behavior::ConstraintSolver. ◆ resetConstraints(). void sofa::component::constraint::lagrangian::solver::ConstraintSolverImpl::resetConstraints ; (; const core::ConstraintParams * ; cParams). protected . Calls the method resetConstraint on all the mechanical states and BaseConstraintSet In the case of a MechanicalObject, it clears the constraint jacobian matrix . sofacomponentconstraintlagrangiansolverConstraintSolverImpl; Generated on Mon Nov 11 2024 02:36:36 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_constraint_solver_impl.html:20544,clear,clears,20544,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_constraint_solver_impl.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_constraint_solver_impl.html,1,['clear'],['clears']
Usability, SOFA - Topic: Mass-Spring Model. /mass-spring-modelling; ; SOFA - Topic: Mass-Spring Modelling. /materials-with-directionally-asymetric-friction; ; SOFA - Topic: [SOLVED] materials with directionally asymetric friction. /meaning-of-parameters-in-jointspringforcefield; ; SOFA - Topic: Meaning of parameters in JointSpringForceField. /measuring-contact-pressure; ; SOFA - Topic: [SOLVED] Measuring contact pressure. /mechanicalobject-and-articulationcenter-classes; ; SOFA - Topic: [SOLVED] MechanicalObject and ArticulationCenter classes. /mechanicalobject-rotation; ; SOFA - Topic: [SOLVED] MechanicalObject rotation. /memory-leaks; ; SOFA - Topic: Memory Leaks. /memory-leak-when-using-localmindistance; . /feed; ; [SOLVED] Memory leak when using LocalMinDistance – SOFA. SOFA - Topic: [SOLVED] Memory leak when using LocalMinDistance. /memory-problems-in-simple-app-using-sofa-as-lib; . /feed; ; [SOLVED] Memory problems in simple app using Sofa as lib – SOFA. SOFA - Topic: [SOLVED] Memory problems in simple app using Sofa as lib. /mergemeshes-remove-duplicated-vertices; ; SOFA - Topic: [SOLVED] MergeMeshes remove duplicated vertices. /mesh-explodes-when-using-the-surfacepressureconstraint; ; SOFA - Topic: [SOLVED] Mesh explodes when using the surfacepressureconstraint. /mesh-generation-in-sofa; ; SOFA - Topic: Mesh Generation in SOFA. /meshing-a-sphere; ; SOFA - Topic: [SOLVED] Meshing a Sphere. /mesh-object-does-not-visible; ; SOFA - Topic: [SOLVED] Mesh Object does not visible. /mesh-optimizatiation-for-deformable-objects; ; SOFA - Topic: Mesh-optimizatiation for deformable objects. /meshspringforcefield-on-rigid3d; ; SOFA - Topic: MeshSpringForceField on Rigid3d. /meshsteploader-plugin-loading-failed; ; SOFA - Topic: [SOLVED] MeshSTEPLoader plugin loading failed. /metal-forging-simulation; ; SOFA - Topic: Metal Forging Simulation. /missing-attribute-getobject; ; SOFA - Topic: Missing attribute: getObject. /missing-lib-files; ; SOFA - Topic: [SOLVED] Missing lib files. /mi,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:347156,simpl,simple,347156,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['simpl'],['simple']
Usability," SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::linearalgebra::matrix_bloc_traits< sofa::type::Vec< N, T >, IndexType > Class Template Reference . #include <matrix_bloc_traits.h>. Static Public Member Functions; static Real & v (Block &b, int, int col);  ; static const Real & v (const Block &b, int, int col);  ; static void vset (Block &b, int, int col, Real v);  ; static void vadd (Block &b, int, int col, Real v);  ; static void clear (Block &b);  ; static bool empty (const Block &b);  ; static Block transposed (const Block &b);  ; static void transpose (Block &res, const Block &b);  ; template<class TSubBlock , std::enable_if_t< std::is_scalar_v< TSubBlock >, bool > = true> ; static void subBlock (const Block &b, IndexType row, IndexType col, TSubBlock &subBlock);  ; static sofa::linearalgebra::BaseMatrix::ElementType getElementType ();  ; static const std::string Name ();  . Function details. ◆ clear(). template<Size N, class T , typename IndexType > . static void sofa::linearalgebra::matrix_bloc_traits< sofa::type::Vec< N, T >, IndexType >::clear ; (; Block & ; b). inlinestatic . ◆ empty(). template<Size N, class T , typename IndexType > . static bool sofa::linearalgebra::matrix_bloc_traits< sofa::type::Vec< N, T >, IndexType >::empty ; (; const Block & ; b). inlinestatic . ◆ getElementType(). template<Size N, class T , typename IndexType > . static sofa::linearalgebra::BaseMatrix::ElementType sofa::linearalgebra::matrix_bloc_traits< sofa::type::Vec< N, T >, IndexType >::getElementType ; (; ). inlinestatic . ◆ Name(). template<Size N, class T , typename IndexType > . static const std::string sofa::linearalgebra::matrix_bloc_traits< sofa::type::Vec< N, T >, IndexType >::Name ; (; ). inlinestatic . ◆ subBlock(). template<Size N, class T , typename IndexType > . template<class TSubBlock , std::enable_if_t< std::is_scalar_v< TSubBlock >, bool > = true> . static void sofa::linearalg",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1matrix__bloc__traits_3_01sofa_1_1type_1_1_vec_3_01_n_00_01_t_01_4_00_01_index_type_01_4.html:1116,clear,clear,1116,api/master/sofa/html/classsofa_1_1linearalgebra_1_1matrix__bloc__traits_3_01sofa_1_1type_1_1_vec_3_01_n_00_01_t_01_4_00_01_index_type_01_4.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1matrix__bloc__traits_3_01sofa_1_1type_1_1_vec_3_01_n_00_01_t_01_4_00_01_index_type_01_4.html,1,['clear'],['clear']
Usability," SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; beginEdit()sofa::gl::component::shader::OglAttribute< 2, GL_FLOAT, sofa::type::Vec< 2, float > >; bwdDraw(core::visual::VisualParams *) overridesofa::gl::component::shader::OglAttribute< 2, GL_FLOAT, sofa::type::Vec< 2, float > >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; DataType typedefsofa::gl::component::shader::OglAttribute< 2, GL_FLOAT, sofa::type::Vec< 2, float > >; disable()sofa::gl::component::shader::OglAttribute< 2, GL_FLOAT, sofa::type::Vec< 2, float > >; doInitVisual(const core::visual::VisualParams *vparams) overridesofa::gl::component::shader::OglAttribute< 2, GL_FLOAT, sofa::type::Vec< 2, float > >virtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; doUpdateVisual(const core::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float2_attribute-members.html:3394,clear,clearVisual,3394,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float2_attribute-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float2_attribute-members.html,1,['clear'],['clearVisual']
Usability," SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; beginEdit()sofa::gl::component::shader::OglAttribute< 3, GL_FLOAT, sofa::type::Vec< 3, float > >; bwdDraw(core::visual::VisualParams *) overridesofa::gl::component::shader::OglAttribute< 3, GL_FLOAT, sofa::type::Vec< 3, float > >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; DataType typedefsofa::gl::component::shader::OglAttribute< 3, GL_FLOAT, sofa::type::Vec< 3, float > >; disable()sofa::gl::component::shader::OglAttribute< 3, GL_FLOAT, sofa::type::Vec< 3, float > >; doInitVisual(const core::visual::VisualParams *vparams) overridesofa::gl::component::shader::OglAttribute< 3, GL_FLOAT, sofa::type::Vec< 3, float > >virtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; doUpdateVisual(const core::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float3_attribute-members.html:3394,clear,clearVisual,3394,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float3_attribute-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float3_attribute-members.html,1,['clear'],['clearVisual']
Usability," SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; beginEdit()sofa::gl::component::shader::OglAttribute< 4, GL_FLOAT, sofa::type::Vec< 4, float > >; bwdDraw(core::visual::VisualParams *) overridesofa::gl::component::shader::OglAttribute< 4, GL_FLOAT, sofa::type::Vec< 4, float > >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; DataType typedefsofa::gl::component::shader::OglAttribute< 4, GL_FLOAT, sofa::type::Vec< 4, float > >; disable()sofa::gl::component::shader::OglAttribute< 4, GL_FLOAT, sofa::type::Vec< 4, float > >; doInitVisual(const core::visual::VisualParams *vparams) overridesofa::gl::component::shader::OglAttribute< 4, GL_FLOAT, sofa::type::Vec< 4, float > >virtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; doUpdateVisual(const core::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float4_attribute-members.html:3394,clear,clearVisual,3394,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float4_attribute-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float4_attribute-members.html,1,['clear'],['clearVisual']
Usability," State< DataTypes >::baseWrite(VecId v) overridesofa::core::State< DataTypes >virtual; beginIntegration(SReal dt) overridesofa::component::statecontainer::MechanicalObject< DataTypes >virtual; buildIdentityBlocksInJacobian(const sofa::type::vector< unsigned int > &list_n, core::MatrixDerivId &mID) overridesofa::component::statecontainer::MechanicalObject< DataTypes >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; csofa::component::statecontainer::MechanicalObject< DataTypes >; c2sofa::component::statecontainer::MechanicalObject< DataTypes >; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; compareVec(core::ConstVecId v, std::istream &in) overridesofa::component::statecontainer::MechanicalObject< DataTypes >virtual; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::component::statecontainer::MechanicalObject< DataTypes >virtual; MechanicalState< DataTypes >::computeBBox() constsofa::core::State< DataTypes >; computeWeightedValue(const sofa::Index i, const sofa::type::vector< sofa::Index > &ancestors, const sofa::type::vector< double > &coefs)sofa::component::statecontainer::MechanicalObject< DataTypes >; ConstraintBlock typedefsofa::component::statecontainer::MechanicalObject< DataTypes >; constraintBlocks(const std::list< unsigned int > &indices) const overridesofa::component::statecontainer::MechanicalObject< DataTypes >virtual; Coord typedefsofa::component::statecontainer::MechanicalObject< DataTypes >; copyFromBaseVector(core::VecId dest, const linearalgebra::BaseVector *src, unsigned int ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1statecontainer_1_1_mechanical_object-members.html:5630,clear,clearLoggedMessages,5630,api/master/sofa/html/classsofa_1_1component_1_1statecontainer_1_1_mechanical_object-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1statecontainer_1_1_mechanical_object-members.html,1,['clear'],['clearLoggedMessages']
Usability," T *buffer) constsofa::linearalgebra::BaseMatrixinline; blocGet(Index i, Index j) constsofa::linearalgebra::BaseMatrixinlinevirtual; blocGetW(Index i, Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; blocSet(Index i, Index j, const T *buffer)sofa::linearalgebra::BaseMatrixinline; bRowBegin(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowEnd(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowRange(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsBegin() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsEnd() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowSize() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsRange() constsofa::linearalgebra::BaseMatrixinlinevirtual; clear() overridesofa::core::behavior::AddToMatrixCompatMatrix< c >inlinevirtual; sofa::linearalgebra::BaseMatrix::clear(Index i, Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; clearCol(Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; clearCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRow(Index i)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowCol(Index i)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRows(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowsCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; cols(void) constsofa::linearalgebra::BaseMatrixinline; colSize() const overridesofa::core::behavior::AddToMatrixCompatMatrix< c >inlinevirtual; compatibilityMessagesofa::core::behavior::AddToMatrixCompatMatrix< c >static; componentsofa::core::behavior::AddToMatrixCompatMatrix< c >; compress()sofa::linearalgebra::BaseMatrixvirtual; createBlockAccessor(Index row, Index col, void *internalPtr=nullptr)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockAccessor(Index row, Index col, Index internalData)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockConstAccessor(Index row, Index col, void *internalPtr=nullptr) con",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_add_to_matrix_compat_matrix-members.html:5228,clear,clearCols,5228,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_add_to_matrix_compat_matrix-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_add_to_matrix_compat_matrix-members.html,1,['clear'],['clearCols']
Usability," TMatrix , typename TVector > . StoredVectorType sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >::rhs { nullptr }. The right-hand side of the linear system. If the linear system is written as Ax=b, it is b. . ◆ solution. template<typename TMatrix , typename TVector > . StoredVectorType sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >::solution { nullptr }. The solution of the linear system. If the linear system is written as Ax=b, it is x. . Function details. ◆ allocateSystem(). template<typename TMatrix , typename TVector > . void sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >::allocateSystem. ◆ clearSystem() [1/3]. SOFA_COMPONENT_LINEARSOLVER_ITERATIVE_API void sofa::component::linearsystem::LinearSystemData< GraphScatteredMatrix, GraphScatteredVector >::clearSystem ; (; ). ◆ clearSystem() [2/3]. void sofa::component::linearsystem::LinearSystemData< GraphScatteredMatrix, GraphScatteredVector >::clearSystem ; (; ). ◆ clearSystem() [3/3]. template<typename TMatrix , typename TVector > . void sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >::clearSystem. ◆ createSystemMatrix(). template<typename TMatrix , typename TVector > . void sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >::createSystemMatrix. Allocate the object for the global matrix. . ◆ createSystemRHSVector() [1/3]. SOFA_COMPONENT_LINEARSOLVER_ITERATIVE_API void sofa::component::linearsystem::LinearSystemData< GraphScatteredMatrix, GraphScatteredVector >::createSystemRHSVector ; (; ). ◆ createSystemRHSVector() [2/3]. void sofa::component::linearsystem::LinearSystemData< GraphScatteredMatrix, GraphScatteredVector >::createSystemRHSVector ; (; ). ◆ createSystemRHSVector() [3/3]. template<typename TMatrix , typename TVector > . void sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >::createSystemRHSVector. Allocate the object for the RHS. . ◆ createSystemSolutionVector() [1/3]. SOFA_COMPONENT_LINEA",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_linear_system_data.html:3010,clear,clearSystem,3010,api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_linear_system_data.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_linear_system_data.html,1,['clear'],['clearSystem']
Usability," TVector > . StoredMatrixType sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >::matrix { nullptr }. The global matrix of the linear system. If the linear system is written as Ax=b, it is A. . ◆ rhs. template<typename TMatrix , typename TVector > . StoredVectorType sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >::rhs { nullptr }. The right-hand side of the linear system. If the linear system is written as Ax=b, it is b. . ◆ solution. template<typename TMatrix , typename TVector > . StoredVectorType sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >::solution { nullptr }. The solution of the linear system. If the linear system is written as Ax=b, it is x. . Function details. ◆ allocateSystem(). template<typename TMatrix , typename TVector > . void sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >::allocateSystem. ◆ clearSystem() [1/3]. SOFA_COMPONENT_LINEARSOLVER_ITERATIVE_API void sofa::component::linearsystem::LinearSystemData< GraphScatteredMatrix, GraphScatteredVector >::clearSystem ; (; ). ◆ clearSystem() [2/3]. void sofa::component::linearsystem::LinearSystemData< GraphScatteredMatrix, GraphScatteredVector >::clearSystem ; (; ). ◆ clearSystem() [3/3]. template<typename TMatrix , typename TVector > . void sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >::clearSystem. ◆ createSystemMatrix(). template<typename TMatrix , typename TVector > . void sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >::createSystemMatrix. Allocate the object for the global matrix. . ◆ createSystemRHSVector() [1/3]. SOFA_COMPONENT_LINEARSOLVER_ITERATIVE_API void sofa::component::linearsystem::LinearSystemData< GraphScatteredMatrix, GraphScatteredVector >::createSystemRHSVector ; (; ). ◆ createSystemRHSVector() [2/3]. void sofa::component::linearsystem::LinearSystemData< GraphScatteredMatrix, GraphScatteredVector >::createSystemRHSVector ; (; ). ◆ createSystemRHSVector() [3/3]. tem",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_linear_system_data.html:2845,clear,clearSystem,2845,api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_linear_system_data.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_linear_system_data.html,1,['clear'],['clearSystem']
Usability," Vector, NoThreadManager >; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; buildComplianceMatrix(const core::ConstraintParams *cparams, linearalgebra::BaseMatrix *result, SReal fact) overridesofa::component::linearsolver::MatrixLinearSolver< Matrix, Vector, NoThreadManager >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkLinearSystem()sofa::component::linearsolver::MatrixLinearSolver< Matrix, Vector, NoThreadManager >protectedvirtual; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeResidual(const core::ExecParams *params, linearalgebra::BaseVector *f) overridesofa::component::linearsolver::MatrixLinearSolver< Matrix, Vector, NoThreadManager >virtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createDefaultLinearSystem()sofa::component::linearsolver::MatrixLinearSolver< Matrix, Vector, NoThreadManager >protected; createInvertData()sofa::component::linearsolver::MatrixLinearSolver< Matrix, Vector, NoThreadManager >protectedvirtual; createMatrix()sofa::component::linearsolver::MatrixLinearSolver< Matrix, Vector, NoThreadManager >protected; createPersistentVector()sofa::component::linearsolver::MatrixLinearSolver",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1_matrix_linear_solver_3_01_matrix_00_01_vector_00_01_no_thread_manager_01_4-members.html:3381,clear,clearLoggedMessages,3381,api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1_matrix_linear_solver_3_01_matrix_00_01_vector_00_01_no_thread_manager_01_4-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1_matrix_linear_solver_3_01_matrix_00_01_vector_00_01_no_thread_manager_01_4-members.html,1,['clear'],['clearLoggedMessages']
Usability," _dsofa::component::constraint::lagrangian::solver::GenericConstraintProblem; allVerifiedsofa::component::constraint::lagrangian::solver::GenericConstraintProblem; cclist_elemssofa::component::constraint::lagrangian::solver::GenericConstraintProblem; change_sequencesofa::component::constraint::lagrangian::solver::GenericConstraintProblem; clear(int nbConstraints) overridesofa::component::constraint::lagrangian::solver::GenericConstraintProblemvirtual; ConstraintCorrectionIterator typedefsofa::component::constraint::lagrangian::solver::GenericConstraintProblem; ConstraintCorrections typedefsofa::component::constraint::lagrangian::solver::GenericConstraintProblem; ConstraintProblem()sofa::component::constraint::lagrangian::solver::ConstraintProblem; constraints_sequencesofa::component::constraint::lagrangian::solver::GenericConstraintProblem; constraintsResolutionssofa::component::constraint::lagrangian::solver::GenericConstraintProblem; currentErrorsofa::component::constraint::lagrangian::solver::GenericConstraintProblem; currentIterationssofa::component::constraint::lagrangian::solver::GenericConstraintProblem; dFreesofa::component::constraint::lagrangian::solver::ConstraintProblem; dimensionsofa::component::constraint::lagrangian::solver::ConstraintProblemprotected; fsofa::component::constraint::lagrangian::solver::ConstraintProblem; freeConstraintResolutions()sofa::component::constraint::lagrangian::solver::GenericConstraintProblem; gaussSeidel(SReal timeout=0, GenericConstraintSolver *solver=nullptr)sofa::component::constraint::lagrangian::solver::GenericConstraintProblem; gaussSeidel_increment(bool measureError, SReal *dfree, SReal *",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_generic_constraint_problem-members.html:677,clear,clear,677,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_generic_constraint_problem-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_generic_constraint_problem-members.html,1,['clear'],['clear']
Usability," _fbosofa::gui::qt::GLPickHandlerprotected; _fboAllocatedsofa::gui::qt::GLPickHandlerprotected; _fboParamssofa::gui::qt::GLPickHandlerprotected; activateRay(int width, int height, core::objectmodel::BaseNode *root)sofa::gui::common::PickHandler; addCallBack(CallBackPicker *c)sofa::gui::common::PickHandlerinline; allocateSelectionBuffer(int width, int height) overridesofa::gui::qt::GLPickHandlervirtual; callbackssofa::gui::common::PickHandlerprotected; changeOperation(sofa::component::setting::MouseButtonSetting *setting)sofa::gui::common::PickHandler; changeOperation(MOUSE_BUTTON button, const std::string &op)sofa::gui::common::PickHandler; clearCallBacks()sofa::gui::common::PickHandlerinline; deactivateRay()sofa::gui::common::PickHandler; destroySelectionBuffer() overridesofa::gui::qt::GLPickHandlervirtual; findCollision()sofa::gui::common::PickHandlerprotectedvirtual; findCollisionUsingBruteForce(const type::Vec3 &origin, const type::Vec3 &direction, double maxLength, core::objectmodel::BaseNode *root)sofa::gui::common::PickHandlerstatic; findCollisionUsingBruteForce()sofa::gui::common::PickHandlerprotected; findCollisionUsingColourCoding(const type::Vec3 &origin, const type::Vec3 &direction) overridesofa::gui::qt::GLPickHandlervirtual; sofa::gui::common::PickHandler::findCollisionUsingColourCoding()sofa::gui::common::PickHandlerprotected; findCollisionUsingPipeline()sofa::gui::common::PickHandlerprotected; getCallBackPicker()sofa::gui::common::PickHandlerinline; getInteraction()sofa::gui::common::PickHandler; getLastPicked()sofa::gui::common::PickHandlerinline; getOperation(MOUSE_BUTTON button)sofa::gui::common::PickHandlerinline; GLPickHandler(double defaultLength=1000000)sofa::gui::qt::GLPickHandler; handleMouseEvent(MOU",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_g_l_pick_handler-members.html:895,clear,clearCallBacks,895,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_g_l_pick_handler-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_g_l_pick_handler-members.html,1,['clear'],['clearCallBacks']
Usability," a position).; This method must be implemented by the component, and is usually called by the generic ProjectiveConstraintSet::projectPosition() method. ; Implements sofa::core::behavior::ProjectiveConstraintSet< TDataTypes >. ◆ projectResponse(). template<class TDataTypes > . void sofa::component::constraint::projective::OscillatorProjectiveConstraint< TDataTypes >::projectResponse ; (; const core::MechanicalParams * ; mparams, . DataVecDeriv & ; dx . ). overridevirtual . Project dx to constrained space (dx models an acceleration).; This method must be implemented by the component, and is usually called by the generic ProjectiveConstraintSet::projectResponse() method. ; Implements sofa::core::behavior::ProjectiveConstraintSet< TDataTypes >. ◆ projectResponseT(). template<class TDataTypes > . template<class DataDeriv > . void sofa::component::constraint::projective::OscillatorProjectiveConstraint< TDataTypes >::projectResponseT ; (; DataDeriv & ; dx, . const std::function< void(DataDeriv &, const unsigned int)> & ; clear . ). protected . ◆ projectVelocity(). template<class TDataTypes > . void sofa::component::constraint::projective::OscillatorProjectiveConstraint< TDataTypes >::projectVelocity ; (; const core::MechanicalParams * ; mparams, . DataVecDeriv & ; v . ). overridevirtual . Project v to constrained space (v models a velocity).; This method must be implemented by the component, and is usually called by the generic ProjectiveConstraintSet::projectVelocity() method. ; Implements sofa::core::behavior::ProjectiveConstraintSet< TDataTypes >. ◆ SOFA_CLASS(). template<class TDataTypes > . sofa::component::constraint::projective::OscillatorProjectiveConstraint< TDataTypes >::SOFA_CLASS ; (; SOFA_TEMPLATE(OscillatorProjectiveConstraint< TDataTypes >, TDataTypes) ; , . SOFA_TEMPLATE(core::behavior::ProjectiveConstraintSet, TDataTypes) ;  . ). sofacomponentconstraintprojectiveOscillatorProjectiveConstraint; Generated on Mon Nov 11 2024 02:37:57 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_oscillator_projective_constraint.html:22191,clear,clear,22191,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_oscillator_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_oscillator_projective_constraint.html,1,['clear'],['clear']
Usability," accept() overridesofa::gui::qt::ModifyObjectslot; basenodesofa::gui::qt::ModifyObjectprotected; beginDataModification(sofa::core::objectmodel::BaseData *data)sofa::gui::qt::ModifyObjectsignal; beginObjectModification(sofa::core::objectmodel::Base *object)sofa::gui::qt::ModifyObjectsignal; buttonUpdatesofa::gui::qt::ModifyObjectprotected; clearMessages()sofa::gui::qt::ModifyObjectprotectedslot; closeEvent(QCloseEvent *) overridesofa::gui::qt::ModifyObjectinlineslot; closeNow()sofa::gui::qt::ModifyObjectinlineslot; componentDirty(bool)sofa::gui::qt::ModifyObjectsignal; createDialog(core::objectmodel::Base *node)sofa::gui::qt::ModifyObject; createDialog(core::objectmodel::BaseData *data)sofa::gui::qt::ModifyObject; data_sofa::gui::qt::ModifyObjectprotected; dataModified(QString)sofa::gui::qt::ModifyObjectsignal; dialogClosed(void *)sofa::gui::qt::ModifyObjectsignal; dialogFlags_sofa::gui::qt::ModifyObjectprotected; dialogTabsofa::gui::qt::ModifyObjectprotected; endDataModification(sofa::core::objectmodel::BaseData *data)sofa::gui::qt::ModifyObjectsignal; endObjectModification(sofa::core::objectmodel::Base *object)sofa::gui::qt::ModifyObjectsignal; getFlags()sofa::gui::qt::ModifyObjectinline; hideData(core::objectmodel::BaseData *data)sofa::gui::qt::ModifyObject; Id_sofa::gui::qt::ModifyObjectprotected; item_sofa::gui::qt::ModifyObjectprotected; m_numMessagessofa::gui::qt::ModifyObjectprotected; m_tabssofa::gui::qt::ModifyObjectprotected; messageEditsofa::gui::qt::ModifyObjectprotected; messageTabsofa::gui::qt::ModifyObjectprotected; ModifyObject(void *Id, QTreeWidgetItem *item_clicked, QWidget *parent, const ModifyObjectFlags &dialogFlags, const char *name=nullptr, bool modal=false, Qt::WindowFlags f=Qt::WindowType::Widget)sofa::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_modify_object-members.html:585,clear,clearMessages,585,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_modify_object-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_modify_object-members.html,1,['clear'],['clearMessages']
Usability," activateNode(sofa::simulation::Node *, bool)sofa::gui::qt::RealGUIvirtualslot; appendToDataLogFile(QString)sofa::gui::qt::RealGUIprotectedslot; backgroundsofa::gui::qt::RealGUIprotected; backgroundImagesofa::gui::qt::RealGUIprotected; BaseGUI()sofa::gui::common::BaseGUIprotected; canBeDefaultGUI() constsofa::gui::common::BaseGUIinlinevirtual; centerWindow() overridesofa::gui::qt::RealGUIvirtual; changeViewer()sofa::gui::qt::RealGUIprotectedvirtualslot; clear()sofa::gui::qt::RealGUIvirtualslot; closeGUI() overridesofa::gui::qt::RealGUIvirtual; configDirectoryPathsofa::gui::common::BaseGUIprotectedstatic; configureGUI(sofa::simulation::NodeSPtr groot)sofa::gui::common::BaseGUIvirtual; CreateApplication(int _argc=0, char **_argv=nullptr)sofa::gui::qt::RealGUIprotectedstatic; createDisplayFlags(Node::SPtr root)sofa::gui::qt::RealGUIprotected; CreateGUI(const char *name, sofa::simulation::Node::SPtr groot=nullptr, const char *filename=nullptr)sofa::gui::qt::RealGUIstatic; createViewer(const char *_viewerName, bool _updateViewerList=false)sofa::gui::qt::RealGUIvirtual; currentSimulation() overridesofa::gui::qt::RealGUIvirtual; currentTabsofa::gui::qt::RealGUIprotected; currentTabChanged(int index)sofa::gui::qt::RealGUIvirtualslot; displayComputationTime(bool)sofa::gui::qt::RealGUIvirtualslot; displayProflierWindow(bool)sofa::gui::qt::RealGUIvirtualslot; docBrowserVisibilityChanged(bool)sofa::gui::qt::RealGUIprotectedslot; dragEnterEvent(QDragEnterEvent *event) overridesofa::gui::qt::RealGUI; dropEvent(QDropEvent *event) overridesofa::gui::qt::RealGUI; dumpState(bool)sofa::gui::qt::RealGUIvirtualslot; editGnuplotDirectory()sofa::gui::qt::RealGUIvirtualslot; editRecordDirectory()sofa::gui::qt::RealGUIvirtualslot; emitIdle()sofa::gui::qt::RealGU",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i-members.html:692,clear,clear,692,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i-members.html,1,['clear'],['clear']
Usability," activateRay(int width, int height, core::objectmodel::BaseNode *root)sofa::gui::common::PickHandler; addCallBack(CallBackPicker *c)sofa::gui::common::PickHandlerinline; allocateSelectionBuffer(int width, int height)sofa::gui::common::PickHandlervirtual; callbackssofa::gui::common::PickHandlerprotected; changeOperation(sofa::component::setting::MouseButtonSetting *setting)sofa::gui::common::PickHandler; changeOperation(MOUSE_BUTTON button, const std::string &op)sofa::gui::common::PickHandler; clearCallBacks()sofa::gui::common::PickHandlerinline; deactivateRay()sofa::gui::common::PickHandler; destroySelectionBuffer()sofa::gui::common::PickHandlervirtual; findCollision()sofa::gui::common::PickHandlerprotectedvirtual; findCollisionUsingBruteForce(const type::Vec3 &origin, const type::Vec3 &direction, double maxLength, core::objectmodel::BaseNode *root)sofa::gui::common::PickHandlerstatic; findCollisionUsingBruteForce()sofa::gui::common::PickHandlerprotected; findCollisionUsingColourCoding(const type::Vec3 &origin, const type::Vec3 &direction)sofa::gui::common::PickHandlervirtual; findCollisionUsingColourCoding()sofa::gui::common::PickHandlerprotected; findCollisionUsingPipeline()sofa::gui::common::PickHandlerprotected; getCallBackPicker()sofa::gui::common::PickHandlerinline; getInteraction()sofa::gui::common::PickHandler; getLastPicked()sofa::gui::common::PickHandlerinline; getOperation(MOUSE_BUTTON button)sofa::gui::common::PickHandlerinline; handleMouseEvent(MOUSE_STATUS status, MOUSE_BUTTON button)sofa::gui::common::PickHandler; init(core::objectmodel::BaseNode *root)sofa::gui::common::PickHandler; instanceComponentssofa::gui::common::PickHandlerprotected; interactionsofa::gui::common::PickHandlerprotected; interactorInUs",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_pick_handler-members.html:748,clear,clearCallBacks,748,api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_pick_handler-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_pick_handler-members.html,1,['clear'],['clearCallBacks']
Usability," add(Base *baseptr, const std::string &path)sofa::core::objectmodel::BaseLinkinline; BaseLink(LinkFlags flags)sofa::core::objectmodel::BaseLink; BaseLink(const BaseInitLink &init, LinkFlags flags)sofa::core::objectmodel::BaseLink; clear()sofa::core::objectmodel::BaseLinkinline; CreateString(const std::string &path, const std::string &data="""")sofa::core::objectmodel::BaseLinkstatic; CreateString(Base *object, Base *from)sofa::core::objectmodel::BaseLinkstatic; CreateString(BaseData *data, Base *from)sofa::core::objectmodel::BaseLinkstatic; CreateString(Base *object, BaseData *data, Base *from)sofa::core::objectmodel::BaseLinkstatic; CreateStringData(BaseData *data)sofa::core::objectmodel::BaseLinkstatic; CreateStringPath(Base *object, Base *from)sofa::core::objectmodel::BaseLinkstatic; FLAG_DOUBLELINK enum valuesofa::core::objectmodel::BaseLink; FLAG_DUPLICATE enum valuesofa::core::objectmodel::BaseLink; FLAG_MULTILINK enum valuesofa::core::objectmodel::BaseLink; FLAG_NONE enum valuesofa::core::objectmodel::BaseLink; FLAG_STOREPATH enum valuesofa::core::objectmodel::BaseLink; FLAG_STRONGLINK enum valuesofa::core::objectmodel::BaseLink; getCounter() constsofa::core::objectmodel::BaseLinkinline; getDestClass() const =0sofa::core::objectmodel::BaseLinkpure virtual; getFlag(LinkFlagsEnum flag) constsofa::core::objectmodel::BaseLinkinline; getHelp() constsofa::core::objectmodel::BaseLinkinline; getLinkedBase(std::size_t index=0) constsofa::core::objectmodel::BaseLinkinline; getLinkedPath(const std::size_t index=0) constsofa::core::objectmodel::BaseLink; getName() constsofa::core::objectmodel::BaseLinkinline; getOwner() constsofa::core::objectmodel::BaseLinkinline; getOwnerBase() const =0sofa::core::objectmodel::BaseLinkpu",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_link-members.html:487,clear,clear,487,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_link-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_link-members.html,1,['clear'],['clear']
Usability," add(Index i, Index j, const T &v)sofa::linearalgebra::BTDMatrix< N, T >::Blockinline; addTransposed(const Mat< C, L, Real > &m) noexceptsofa::type::Mat< BSIZE, BSIZE, Real >inline; ArrayLineType typedefsofa::type::Mat< BSIZE, BSIZE, Real >; back()sofa::type::Mat< BSIZE, BSIZE, Real >inline; back() constsofa::type::Mat< BSIZE, BSIZE, Real >inline; begin() noexceptsofa::type::Mat< BSIZE, BSIZE, Real >inline; begin() const noexceptsofa::type::Mat< BSIZE, BSIZE, Real >inline; canSelfTranspose(const Mat< S, S, Real > &lhs, const Mat< S, S, Real > &rhs) noexceptsofa::type::Mat< BSIZE, BSIZE, Real >inlinestatic; canSelfTranspose(const Mat< I, J, Real > &, const Mat< J, I, Real > &) noexceptsofa::type::Mat< BSIZE, BSIZE, Real >inlinestatic; clear() noexceptsofa::type::Mat< BSIZE, BSIZE, Real >inline; Col typedefsofa::type::Mat< BSIZE, BSIZE, Real >; col(Size j) const noexceptsofa::type::Mat< BSIZE, BSIZE, Real >inline; const_iterator typedefsofa::type::Mat< BSIZE, BSIZE, Real >; const_reference typedefsofa::type::Mat< BSIZE, BSIZE, Real >; data() const noexceptsofa::type::Mat< BSIZE, BSIZE, Real >inline; difference_type typedefsofa::type::Mat< BSIZE, BSIZE, Real >; element(Index i, Index j) constsofa::linearalgebra::BTDMatrix< N, T >::Blockinline; elemssofa::type::Mat< BSIZE, BSIZE, Real >; end() noexceptsofa::type::Mat< BSIZE, BSIZE, Real >inline; end() const noexceptsofa::type::Mat< BSIZE, BSIZE, Real >inline; fill(Real r) noexceptsofa::type::Mat< BSIZE, BSIZE, Real >inline; front()sofa::type::Mat< BSIZE, BSIZE, Real >inline; front() constsofa::type::Mat< BSIZE, BSIZE, Real >inline; getNbCols() constsofa::type::Mat< BSIZE, BSIZE, Real >inline; getNbLines() constsofa::type::Mat< BSIZE, BSIZE, Real ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_b_t_d_matrix_1_1_block-members.html:1024,clear,clear,1024,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_b_t_d_matrix_1_1_block-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_b_t_d_matrix_1_1_block-members.html,1,['clear'],['clear']
Usability," add(Index i, Index j, const T &v)sofa::linearalgebra::BlockFullMatrix< N, T >::Block; addTransposed(const Mat< C, L, Real > &m) noexceptsofa::type::Mat< BSIZE, BSIZE, Real >inline; ArrayLineType typedefsofa::type::Mat< BSIZE, BSIZE, Real >; back()sofa::type::Mat< BSIZE, BSIZE, Real >inline; back() constsofa::type::Mat< BSIZE, BSIZE, Real >inline; begin() noexceptsofa::type::Mat< BSIZE, BSIZE, Real >inline; begin() const noexceptsofa::type::Mat< BSIZE, BSIZE, Real >inline; canSelfTranspose(const Mat< S, S, Real > &lhs, const Mat< S, S, Real > &rhs) noexceptsofa::type::Mat< BSIZE, BSIZE, Real >inlinestatic; canSelfTranspose(const Mat< I, J, Real > &, const Mat< J, I, Real > &) noexceptsofa::type::Mat< BSIZE, BSIZE, Real >inlinestatic; clear() noexceptsofa::type::Mat< BSIZE, BSIZE, Real >inline; Col typedefsofa::type::Mat< BSIZE, BSIZE, Real >; col(Size j) const noexceptsofa::type::Mat< BSIZE, BSIZE, Real >inline; const_iterator typedefsofa::type::Mat< BSIZE, BSIZE, Real >; const_reference typedefsofa::type::Mat< BSIZE, BSIZE, Real >; data() const noexceptsofa::type::Mat< BSIZE, BSIZE, Real >inline; difference_type typedefsofa::type::Mat< BSIZE, BSIZE, Real >; element(Index i, Index j) constsofa::linearalgebra::BlockFullMatrix< N, T >::Block; elemssofa::type::Mat< BSIZE, BSIZE, Real >; end() noexceptsofa::type::Mat< BSIZE, BSIZE, Real >inline; end() const noexceptsofa::type::Mat< BSIZE, BSIZE, Real >inline; fill(Real r) noexceptsofa::type::Mat< BSIZE, BSIZE, Real >inline; front()sofa::type::Mat< BSIZE, BSIZE, Real >inline; front() constsofa::type::Mat< BSIZE, BSIZE, Real >inline; getNbCols() constsofa::type::Mat< BSIZE, BSIZE, Real >inline; getNbLines() constsofa::type::Mat< BSIZE, ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_full_matrix_1_1_block-members.html:1036,clear,clear,1036,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_full_matrix_1_1_block-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_full_matrix_1_1_block-members.html,1,['clear'],['clear']
Usability," add(Index i, SReal v) overridesofa::linearalgebra::EigenVector< TReal, TBlockSize >inlinevirtual; sofa::linearalgebra::BaseVector::add(Index i0, Index n, const float *src)sofa::linearalgebra::BaseVectorinlinevirtual; sofa::linearalgebra::BaseVector::add(Index i0, Index n, const double *src)sofa::linearalgebra::BaseVectorinlinevirtual; sofa::linearalgebra::BaseVector::add(Index i0, Index n, const int *src)sofa::linearalgebra::BaseVectorinlinevirtual; addDefaultImpl(Index i0, Index n, const T *src)sofa::linearalgebra::BaseVectorinlineprotected; Block typedefsofa::linearalgebra::EigenVector< TReal, TBlockSize >; clear(Index i) overridesofa::linearalgebra::EigenVector< TReal, TBlockSize >inlinevirtual; clear() overridesofa::linearalgebra::EigenVector< TReal, TBlockSize >inlinevirtual; eigenVectorsofa::linearalgebra::EigenVector< TReal, TBlockSize >protected; EigenVector(Index nbRow=0)sofa::linearalgebra::EigenVector< TReal, TBlockSize >inline; element(Index i) const overridesofa::linearalgebra::EigenVector< TReal, TBlockSize >inlinevirtual; ELEMENT_FLOAT enum valuesofa::linearalgebra::BaseVector; ELEMENT_INT enum valuesofa::linearalgebra::BaseVector; ELEMENT_UNKNOWN enum valuesofa::linearalgebra::BaseVector; elements(Index i0, Index n, float *src) constsofa::linearalgebra::BaseVectorinlinevirtual; elements(Index i0, Index n, double *src) constsofa::linearalgebra::BaseVectorinlinevirtual; elements(Index i0, Index n, int *src) constsofa::linearalgebra::BaseVectorinlinevirtual; elementsDefaultImpl(Index i0, Index n, T *buffer) constsofa::linearalgebra::BaseVectorinlineprotected; ElementType enum namesofa::linearalgebra::BaseVector; getElementSize() constsofa::linearalgebra::BaseVect",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_vector-members.html:914,clear,clear,914,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_vector-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_vector-members.html,2,['clear'],['clear']
Usability," add(Index i, SReal v) overridesofa::linearalgebra::FullVector< T >inlinevirtual; sofa::linearalgebra::BaseVector::add(Index i0, Index n, const float *src)sofa::linearalgebra::BaseVectorinlinevirtual; sofa::linearalgebra::BaseVector::add(Index i0, Index n, const double *src)sofa::linearalgebra::BaseVectorinlinevirtual; sofa::linearalgebra::BaseVector::add(Index i0, Index n, const int *src)sofa::linearalgebra::BaseVectorinlinevirtual; addDefaultImpl(Index i0, Index n, const T *src)sofa::linearalgebra::BaseVectorinlineprotected; allocsizesofa::linearalgebra::FullVector< T >protected; begin()sofa::linearalgebra::FullVector< T >inline; begin() constsofa::linearalgebra::FullVector< T >inline; capacity() constsofa::linearalgebra::FullVector< T >inline; checkIndex(Index n) constsofa::linearalgebra::FullVector< T >protected; clear() overridesofa::linearalgebra::FullVector< T >virtual; clear(Index dim) overridesofa::linearalgebra::FullVector< T >virtual; const_iterator typedefsofa::linearalgebra::FullVector< T >; ConstIterator typedefsofa::linearalgebra::FullVector< T >; cursizesofa::linearalgebra::FullVector< T >protected; datasofa::linearalgebra::FullVector< T >protected; dot(const FullVector< Real > &a) constsofa::linearalgebra::FullVector< T >; element(Index i) const overridesofa::linearalgebra::FullVector< T >inlinevirtual; ELEMENT_FLOAT enum valuesofa::linearalgebra::BaseVector; ELEMENT_INT enum valuesofa::linearalgebra::BaseVector; ELEMENT_UNKNOWN enum valuesofa::linearalgebra::BaseVector; elements(Index i0, Index n, float *src) constsofa::linearalgebra::BaseVectorinlinevirtual; elements(Index i0, Index n, double *src) constsofa::linearalgebra::BaseVectorinlinevirtual; elements(Index i0, Index n, int *src) const",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_full_vector-members.html:1091,clear,clear,1091,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_full_vector-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_full_vector-members.html,2,['clear'],['clear']
Usability," add(Index i, SReal v)=0sofa::linearalgebra::BaseVectorpure virtual; add(Index i0, Index n, const float *src)sofa::linearalgebra::BaseVectorinlinevirtual; add(Index i0, Index n, const double *src)sofa::linearalgebra::BaseVectorinlinevirtual; add(Index i0, Index n, const int *src)sofa::linearalgebra::BaseVectorinlinevirtual; addDefaultImpl(Index i0, Index n, const T *src)sofa::linearalgebra::BaseVectorinlineprotected; clear()=0sofa::linearalgebra::BaseVectorpure virtual; clear(Index i)sofa::linearalgebra::BaseVectorinlinevirtual; element(Index i) const =0sofa::linearalgebra::BaseVectorpure virtual; ELEMENT_FLOAT enum valuesofa::linearalgebra::BaseVector; ELEMENT_INT enum valuesofa::linearalgebra::BaseVector; ELEMENT_UNKNOWN enum valuesofa::linearalgebra::BaseVector; elements(Index i0, Index n, float *src) constsofa::linearalgebra::BaseVectorinlinevirtual; elements(Index i0, Index n, double *src) constsofa::linearalgebra::BaseVectorinlinevirtual; elements(Index i0, Index n, int *src) constsofa::linearalgebra::BaseVectorinlinevirtual; elementsDefaultImpl(Index i0, Index n, T *buffer) constsofa::linearalgebra::BaseVectorinlineprotected; ElementType enum namesofa::linearalgebra::BaseVector; getElementSize() constsofa::linearalgebra::BaseVectorinlinevirtual; getElementType() constsofa::linearalgebra::BaseVectorinlinevirtual; Index typedefsofa::linearalgebra::BaseVector; isFull() constsofa::linearalgebra::BaseVectorinlinevirtual; isSparse() constsofa::linearalgebra::BaseVectorinline; operator<<(std::ostream &out, const BaseVector &v)sofa::linearalgebra::BaseVectorfriend; resize(Index dim)=0sofa::linearalgebra::BaseVectorpure virtual; set(Index i, SReal v)=0sofa::linearalgebra::BaseVectorpure virtual; set(Index i0, Index n, con",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_vector-members.html:673,clear,clear,673,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_vector-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_vector-members.html,2,['clear'],['clear']
Usability," add(TDestPtr v)sofa::core::objectmodel::SinglePtr< T, TDestPtr, TPtr >inline; addBegin(TDestPtr v)sofa::core::objectmodel::SinglePtr< T, TDestPtr, TPtr >inline; begin() constsofa::core::objectmodel::SinglePtr< T, TDestPtr, TPtr >inline; cbegin() constsofa::core::objectmodel::SinglePtr< T, TDestPtr, TPtr >inline; cend() constsofa::core::objectmodel::SinglePtr< T, TDestPtr, TPtr >inline; clear()sofa::core::objectmodel::SinglePtr< T, TDestPtr, TPtr >inline; const_iterator typedefsofa::core::objectmodel::SinglePtr< T, TDestPtr, TPtr >; const_reverse_iterator typedefsofa::core::objectmodel::SinglePtr< T, TDestPtr, TPtr >; crbegin() constsofa::core::objectmodel::SinglePtr< T, TDestPtr, TPtr >inline; crend() constsofa::core::objectmodel::SinglePtr< T, TDestPtr, TPtr >inline; elemssofa::core::objectmodel::SinglePtr< T, TDestPtr, TPtr >protected; empty() constsofa::core::objectmodel::SinglePtr< T, TDestPtr, TPtr >inline; end() constsofa::core::objectmodel::SinglePtr< T, TDestPtr, TPtr >inline; get() constsofa::core::objectmodel::SinglePtr< T, TDestPtr, TPtr >inline; get()sofa::core::objectmodel::SinglePtr< T, TDestPtr, TPtr >inline; isEmptysofa::core::objectmodel::SinglePtr< T, TDestPtr, TPtr >protected; operator T*() constsofa::core::objectmodel::SinglePtr< T, TDestPtr, TPtr >inline; operator()(std::size_t i) constsofa::core::objectmodel::SinglePtr< T, TDestPtr, TPtr >inline; operator()(std::size_t i)sofa::core::objectmodel::SinglePtr< T, TDestPtr, TPtr >inline; operator->() constsofa::core::objectmodel::SinglePtr< T, TDestPtr, TPtr >inline; operator[](std::size_t i) constsofa::core::objectmodel::SinglePtr< T, TDestPtr, TPtr >inline; operator[](std::size_t i)sofa::core::objectmod",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_single_ptr-members.html:690,clear,clear,690,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_single_ptr-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_single_ptr-members.html,1,['clear'],['clear']
Usability," addFirstPath(const std::string &path)sofa::helper::system::FileRepository; addLastPath(const std::string &path)sofa::helper::system::FileRepository; cleanPath(const std::string &path)sofa::helper::system::FileRepositorystatic; clear()sofa::helper::system::FileRepository; directAccessProtocolPrefixsofa::helper::system::FileRepositoryprotected; displayPaths() constsofa::helper::system::FileRepositoryinline; entrySeparator()sofa::helper::system::FileRepositoryinlinestatic; fileKeysMap typedefsofa::helper::system::FileRepository; FileRepository()sofa::helper::system::FileRepositoryinline; FileRepository(const char *envVar)sofa::helper::system::FileRepositoryinline; FileRepository(const char *envVar, const char *relativePath)sofa::helper::system::FileRepositoryinline; FileRepository(const char *envVar, const std::vector< std::string > &paths)sofa::helper::system::FileRepositoryinline; FileRepository(const char *envVar, const char *relativePath, const fileKeysMap &iniFilesAndKeys)sofa::helper::system::FileRepositoryinline; FileRepository(const char *envVar, const std::vector< std::string > &paths, const fileKeysMap &iniFilesAndKeys)sofa::helper::system::FileRepository; findFile(std::string &filename, const std::string &basedir="""", std::ostream *errlog=&std::cerr)sofa::helper::system::FileRepository; findFileFromFile(std::string &filename, const std::string &basefile, std::ostream *errlog=&std::cerr)sofa::helper::system::FileRepository; findFileIn(std::string &filename, const std::string &path)sofa::helper::system::FileRepositoryprotectedstatic; getDirectAccessProtocolPrefix() constsofa::helper::system::FileRepositoryinline; getFile(std::string filename, const std::string &basedir="""", std::ostream *errlog=&std::cerr",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1system_1_1_file_repository-members.html:490,clear,clear,490,api/master/sofa/html/classsofa_1_1helper_1_1system_1_1_file_repository-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1system_1_1_file_repository-members.html,1,['clear'],['clear']
Usability," addInput(DDGNode *n)sofa::core::objectmodel::DDGNode; addOutput(DDGNode *n)sofa::core::objectmodel::DDGNode; addPath(const std::string &v, bool clear=false)sofa::core::objectmodel::DataFileNameVector; BaseData(const BaseInitData &init)sofa::core::objectmodel::BaseDataexplicit; BaseData(const std::string &helpMsg, DataFlags flags=FLAG_DEFAULT)sofa::core::objectmodel::BaseData; BaseData(const char *helpMsg, DataFlags flags=FLAG_DEFAULT)sofa::core::objectmodel::BaseData; BaseData(const std::string &helpMsg, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::BaseData; BaseData(const char *helpMsg, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::BaseData; beginEdit()sofa::core::objectmodel::Data< sofa::type::SVector< std::string > >inlinevirtual; beginEditVoidPtr()sofa::core::objectmodel::BaseData; beginWriteOnly()sofa::core::objectmodel::Data< sofa::type::SVector< std::string > >inlinevirtual; canBeLinked() constsofa::core::objectmodel::BaseDatainlinevirtual; cleanDirty()sofa::core::objectmodel::DDGNode; cleanDirtyOutputsOfInputs()sofa::core::objectmodel::DDGNodeprotected; copyValueFrom(const Data< sofa::type::SVector< std::string > > *data)sofa::core::objectmodel::Data< sofa::type::SVector< std::string > >; sofa::core::objectmodel::BaseData::copyValueFrom(const BaseData *data)sofa::core::objectmodel::BaseData; Data(const BaseData::BaseInitData &init)sofa::core::objectmodel::Data< sofa::type::SVector< std::string > >inlineexplicit; Data(const InitData &init)sofa::core::objectmodel::Data< sofa::type::SVector< std::string > >inlineexplicit; Data(const char *helpMsg=nullptr, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Data< sofa::type::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_data_file_name_vector-members.html:421,clear,clear,421,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_data_file_name_vector-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_data_file_name_vector-members.html,1,['clear'],['clear']
Usability," addMappedMechanicalState(const sofa::core::behavior::BaseMechanicalState *mstate) overridesofa::core::behavior::DefaultMultiMatrixAccessorvirtual; addMechanicalMapping(sofa::core::BaseMapping *mapping) overridesofa::core::behavior::CRSMultiMatrixAccessorvirtual; addMechanicalState(const sofa::core::behavior::BaseMechanicalState *mstate) overridesofa::core::behavior::DefaultMultiMatrixAccessorvirtual; clear()sofa::core::behavior::DefaultMultiMatrixAccessorvirtual; computeGlobalMatrix() overridesofa::core::behavior::CRSMultiMatrixAccessorvirtual; createMatrix(const sofa::core::behavior::BaseMechanicalState *mstate1, const sofa::core::behavior::BaseMechanicalState *mstate2)sofa::core::behavior::CRSMultiMatrixAccessorstatic; createMatrix(const sofa::core::behavior::BaseMechanicalState *mstate1, const sofa::core::behavior::BaseMechanicalState *mstate2, bool doPrintInfo)sofa::core::behavior::CRSMultiMatrixAccessorstatic; createMatrixImpl(const sofa::core::behavior::BaseMechanicalState *mstate1, const sofa::core::behavior::BaseMechanicalState *mstate2, bool doPrintInfo)sofa::core::behavior::DefaultMultiMatrixAccessorstatic; CRSMultiMatrixAccessor()sofa::core::behavior::CRSMultiMatrixAccessorinline; DefaultMultiMatrixAccessor()sofa::core::behavior::DefaultMultiMatrixAccessor; diagonalStiffnessBlocsofa::core::behavior::DefaultMultiMatrixAccessormutableprotected; getGlobalDimension() const overridesofa::core::behavior::DefaultMultiMatrixAccessorvirtual; getGlobalOffset(const sofa::core::behavior::BaseMechanicalState *mstate) const overridesofa::core::behavior::DefaultMultiMatrixAccessorvirtual; getMatrix(const sofa::core::behavior::BaseMechanicalState *mstate) const overridesofa::core::behavior::Default",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_c_r_s_multi_matrix_accessor-members.html:683,clear,clear,683,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_c_r_s_multi_matrix_accessor-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_c_r_s_multi_matrix_accessor-members.html,1,['clear'],['clear']
Usability," addMappedMechanicalState(const sofa::core::behavior::BaseMechanicalState *mstate) overridesofa::core::behavior::DefaultMultiMatrixAccessorvirtual; addMechanicalMapping(sofa::core::BaseMapping *mapping) overridesofa::core::behavior::DefaultMultiMatrixAccessorvirtual; addMechanicalState(const sofa::core::behavior::BaseMechanicalState *mstate) overridesofa::core::behavior::DefaultMultiMatrixAccessorvirtual; clear()sofa::core::behavior::DefaultMultiMatrixAccessorvirtual; computeGlobalMatrix()sofa::core::behavior::DefaultMultiMatrixAccessorvirtual; createMatrix(const sofa::core::behavior::BaseMechanicalState *mstate1, const sofa::core::behavior::BaseMechanicalState *mstate2)sofa::core::behavior::DefaultMultiMatrixAccessorstatic; createMatrixImpl(const sofa::core::behavior::BaseMechanicalState *mstate1, const sofa::core::behavior::BaseMechanicalState *mstate2, bool doPrintInfo)sofa::core::behavior::DefaultMultiMatrixAccessorstatic; DefaultMultiMatrixAccessor()sofa::core::behavior::DefaultMultiMatrixAccessor; diagonalStiffnessBlocsofa::core::behavior::DefaultMultiMatrixAccessormutableprotected; getGlobalDimension() const overridesofa::core::behavior::DefaultMultiMatrixAccessorvirtual; getGlobalOffset(const sofa::core::behavior::BaseMechanicalState *mstate) const overridesofa::core::behavior::DefaultMultiMatrixAccessorvirtual; getMatrix(const sofa::core::behavior::BaseMechanicalState *mstate) const overridesofa::core::behavior::DefaultMultiMatrixAccessorvirtual; getMatrix(const sofa::core::behavior::BaseMechanicalState *mstate1, const sofa::core::behavior::BaseMechanicalState *mstate2) const overridesofa::core::behavior::DefaultMultiMatrixAccessorvirtual; globalDimsofa::core::behavior::Default",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_default_multi_matrix_accessor-members.html:695,clear,clear,695,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_default_multi_matrix_accessor-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_default_multi_matrix_accessor-members.html,1,['clear'],['clear']
Usability," addMappedMechanicalState(const sofa::core::behavior::BaseMechanicalState *mstate) overridesofa::core::behavior::DefaultMultiMatrixAccessorvirtual; addMechanicalMapping(sofa::core::BaseMapping *mapping) overridesofa::core::behavior::DefaultMultiMatrixAccessorvirtual; addMechanicalState(const sofa::core::behavior::BaseMechanicalState *mstate) overridesofa::core::behavior::DefaultMultiMatrixAccessorvirtual; clear()sofa::core::behavior::DefaultMultiMatrixAccessorvirtual; computeGlobalMatrix()sofa::core::behavior::DefaultMultiMatrixAccessorvirtual; createMatrix(const sofa::core::behavior::BaseMechanicalState *mstate1, const sofa::core::behavior::BaseMechanicalState *mstate2)sofa::core::behavior::DefaultMultiMatrixAccessorstatic; createMatrixImpl(const sofa::core::behavior::BaseMechanicalState *mstate1, const sofa::core::behavior::BaseMechanicalState *mstate2, bool doPrintInfo)sofa::core::behavior::DefaultMultiMatrixAccessorstatic; DefaultMultiMatrixAccessor()sofa::core::behavior::DefaultMultiMatrixAccessor; diagonalStiffnessBlocsofa::core::behavior::DefaultMultiMatrixAccessormutableprotected; getGlobalDimension() const overridesofa::core::behavior::DefaultMultiMatrixAccessorvirtual; getGlobalOffset(const sofa::core::behavior::BaseMechanicalState *mstate) const overridesofa::core::behavior::DefaultMultiMatrixAccessorvirtual; getMatrix(const sofa::core::behavior::BaseMechanicalState *mstate) const overridesofa::core::behavior::MatrixAccessorCompatinlinevirtual; getMatrix(const sofa::core::behavior::BaseMechanicalState *mstate1, const sofa::core::behavior::BaseMechanicalState *mstate2) const overridesofa::core::behavior::MatrixAccessorCompatinlinevirtual; globalDimsofa::core::behavior::DefaultMultiMatrixA",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_matrix_accessor_compat-members.html:683,clear,clear,683,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_matrix_accessor_compat-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_matrix_accessor_compat-members.html,1,['clear'],['clear']
Usability," addPoint(Index index)sofa::component::mapping::linear::SubsetMapping< TIn, TOut >; apply(const core::MechanicalParams *mparams, OutDataVecCoord &dOut, const InDataVecCoord &dIn) overridesofa::component::mapping::linear::SubsetMapping< TIn, TOut >; applyJ(const core::MechanicalParams *mparams, OutDataVecDeriv &dOut, const InDataVecDeriv &dIn) overridesofa::component::mapping::linear::SubsetMapping< TIn, TOut >; applyJT(const core::MechanicalParams *mparams, InDataVecDeriv &dOut, const OutDataVecDeriv &dIn) overridesofa::component::mapping::linear::SubsetMapping< TIn, TOut >; applyJT(const core::ConstraintParams *, InDataMatrixDeriv &dOut, const OutDataMatrixDeriv &dIn) overridesofa::component::mapping::linear::SubsetMapping< TIn, TOut >; clear(Size reserve)sofa::component::mapping::linear::SubsetMapping< TIn, TOut >; d_firstsofa::component::mapping::linear::SubsetMapping< TIn, TOut >; d_handleTopologyChangesofa::component::mapping::linear::SubsetMapping< TIn, TOut >; d_ignoreNotFoundsofa::component::mapping::linear::SubsetMapping< TIn, TOut >; d_indicessofa::component::mapping::linear::SubsetMapping< TIn, TOut >; d_lastsofa::component::mapping::linear::SubsetMapping< TIn, TOut >; d_radiussofa::component::mapping::linear::SubsetMapping< TIn, TOut >; d_resizeToModelsofa::component::mapping::linear::SubsetMapping< TIn, TOut >; datasofa::component::mapping::linear::SubsetMapping< TIn, TOut >; eigensofa::component::mapping::linear::SubsetMapping< TIn, TOut >protected; eigen_type typedefsofa::component::mapping::linear::SubsetMapping< TIn, TOut >protected; f_firstsofa::component::mapping::linear::SubsetMapping< TIn, TOut >; f_handleTopologyChangesofa::component::mappin",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_subset_mapping-members.html:1058,clear,clear,1058,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_subset_mapping-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_subset_mapping-members.html,1,['clear'],['clear']
Usability," addTransposed(const Mat< C, L, real > &m) noexceptsofa::type::Mat< L, C, real >inline; ArrayLineType typedefsofa::type::Mat< L, C, real >; back()sofa::type::Mat< L, C, real >inline; back() constsofa::type::Mat< L, C, real >inline; begin() noexceptsofa::type::Mat< L, C, real >inline; begin() const noexceptsofa::type::Mat< L, C, real >inline; canSelfTranspose(const Mat< S, S, real > &lhs, const Mat< S, S, real > &rhs) noexceptsofa::type::Mat< L, C, real >inlinestatic; canSelfTranspose(const Mat< I, J, real > &, const Mat< J, I, real > &) noexceptsofa::type::Mat< L, C, real >inlinestatic; clear() noexceptsofa::type::Mat< L, C, real >inline; Col typedefsofa::type::Mat< L, C, real >; col(Size j) const noexceptsofa::type::Mat< L, C, real >inline; const_iterator typedefsofa::type::Mat< L, C, real >; const_reference typedefsofa::type::Mat< L, C, real >; data() const noexceptsofa::type::Mat< L, C, real >inline; difference_type typedefsofa::type::Mat< L, C, real >; elemssofa::type::Mat< L, C, real >; end() noexceptsofa::type::Mat< L, C, real >inline; end() const noexceptsofa::type::Mat< L, C, real >inline; fill(real r) noexceptsofa::type::Mat< L, C, real >inline; front()sofa::type::Mat< L, C, real >inline; front() constsofa::type::Mat< L, C, real >inline; getNbCols() constsofa::type::Mat< L, C, real >inline; getNbLines() constsofa::type::Mat< L, C, real >inline; getsub(Size L0, Size C0, Mat< L2, C2, real > &m) const noexceptsofa::type::Mat< L, C, real >inline; getsub(const Size L0, const Size C0, Vec< C2, real > &m) const noexceptsofa::type::Mat< L, C, real >inline; getsub(Size L0, Size C0, real &m) const noexceptsofa::type::Mat< L, C, real >inline; identity() noexceptsofa::type::Mat< L, C, real >inline; Identity() noexceptsofa::typ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_mat-members.html:842,clear,clear,842,api/master/sofa/html/classsofa_1_1type_1_1_mat-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_mat-members.html,1,['clear'],['clear']
Usability," addTransposed(const Mat< C, L, real > &m) noexceptsofa::type::Mat< L, C, real >inline; ArrayLineType typedefsofa::type::Mat< L, C, real >; back()sofa::type::Mat< L, C, real >inline; back() constsofa::type::Mat< L, C, real >inline; begin() noexceptsofa::type::Mat< L, C, real >inline; begin() const noexceptsofa::type::Mat< L, C, real >inline; canSelfTranspose(const Mat< S, S, real > &lhs, const Mat< S, S, real > &rhs) noexceptsofa::type::Mat< L, C, real >inlinestatic; canSelfTranspose(const Mat< I, J, real > &, const Mat< J, I, real > &) noexceptsofa::type::Mat< L, C, real >inlinestatic; clear() noexceptsofa::type::Mat< L, C, real >inline; col(Size j) const noexceptsofa::type::Mat< L, C, real >inline; Col typedefsofa::type::Mat< L, C, real >; const_iterator typedefsofa::type::Mat< L, C, real >; const_reference typedefsofa::type::Mat< L, C, real >; data() const noexceptsofa::type::Mat< L, C, real >inline; difference_type typedefsofa::type::Mat< L, C, real >; elemssofa::type::Mat< L, C, real >; end() noexceptsofa::type::Mat< L, C, real >inline; end() const noexceptsofa::type::Mat< L, C, real >inline; fill(real r) noexceptsofa::type::Mat< L, C, real >inline; front()sofa::type::Mat< L, C, real >inline; front() constsofa::type::Mat< L, C, real >inline; getNbCols() constsofa::type::Mat< L, C, real >inline; getNbLines() constsofa::type::Mat< L, C, real >inline; getsub(Size L0, Size C0, Mat< L2, C2, real > &m) const noexceptsofa::type::Mat< L, C, real >inline; getsub(const Size L0, const Size C0, Vec< C2, real > &m) const noexceptsofa::type::Mat< L, C, real >inline; getsub(Size L0, Size C0, real &m) const noexceptsofa::type::Mat< L, C, real >inline; identity() noexceptsofa::type::Mat< L, C, real >inline; Identity() noexc",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_mat_no_init-members.html:854,clear,clear,854,api/master/sofa/html/classsofa_1_1type_1_1_mat_no_init-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_mat_no_init-members.html,1,['clear'],['clear']
Usability," all members . sofa::linearalgebra::matrix_bloc_traits< sofa::type::Vec< N, T >, IndexType > Class Template Reference . #include <matrix_bloc_traits.h>. Static Public Member Functions; static Real & v (Block &b, int, int col);  ; static const Real & v (const Block &b, int, int col);  ; static void vset (Block &b, int, int col, Real v);  ; static void vadd (Block &b, int, int col, Real v);  ; static void clear (Block &b);  ; static bool empty (const Block &b);  ; static Block transposed (const Block &b);  ; static void transpose (Block &res, const Block &b);  ; template<class TSubBlock , std::enable_if_t< std::is_scalar_v< TSubBlock >, bool > = true> ; static void subBlock (const Block &b, IndexType row, IndexType col, TSubBlock &subBlock);  ; static sofa::linearalgebra::BaseMatrix::ElementType getElementType ();  ; static const std::string Name ();  . Function details. ◆ clear(). template<Size N, class T , typename IndexType > . static void sofa::linearalgebra::matrix_bloc_traits< sofa::type::Vec< N, T >, IndexType >::clear ; (; Block & ; b). inlinestatic . ◆ empty(). template<Size N, class T , typename IndexType > . static bool sofa::linearalgebra::matrix_bloc_traits< sofa::type::Vec< N, T >, IndexType >::empty ; (; const Block & ; b). inlinestatic . ◆ getElementType(). template<Size N, class T , typename IndexType > . static sofa::linearalgebra::BaseMatrix::ElementType sofa::linearalgebra::matrix_bloc_traits< sofa::type::Vec< N, T >, IndexType >::getElementType ; (; ). inlinestatic . ◆ Name(). template<Size N, class T , typename IndexType > . static const std::string sofa::linearalgebra::matrix_bloc_traits< sofa::type::Vec< N, T >, IndexType >::Name ; (; ). inlinestatic . ◆ subBlock(). template<Size N, class T , typename IndexType > . template<class TSubBlock , std::enable_if_t< std::is_scalar_v< TSubBlock >, bool > = true> . static void sofa::linearalgebra::matrix_bloc_traits< sofa::type::Vec< N, T >, IndexType >::subBlock ; (; const Block & ; b, . IndexType ; ro",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1matrix__bloc__traits_3_01sofa_1_1type_1_1_vec_3_01_n_00_01_t_01_4_00_01_index_type_01_4.html:1266,clear,clear,1266,api/master/sofa/html/classsofa_1_1linearalgebra_1_1matrix__bloc__traits_3_01sofa_1_1type_1_1_vec_3_01_n_00_01_t_01_4_00_01_index_type_01_4.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1matrix__bloc__traits_3_01sofa_1_1type_1_1_vec_3_01_n_00_01_t_01_4_00_01_index_type_01_4.html,1,['clear'],['clear']
Usability," allocateSystem()sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >; clearSystem()sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >; clearSystem()sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >; clearSystem()sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >; createSystemMatrix()sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >; createSystemRHSVector()sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >; createSystemRHSVector()sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >; createSystemRHSVector()sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >; createSystemSolutionVector()sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >; createSystemSolutionVector()sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >; createSystemSolutionVector()sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >; getMatrix() constsofa::component::linearsystem::LinearSystemData< TMatrix, TVector >inline; getRHS() constsofa::component::linearsystem::LinearSystemData< TMatrix, TVector >inline; getSolution() constsofa::component::linearsystem::LinearSystemData< TMatrix, TVector >inline; matrixsofa::component::linearsystem::LinearSystemData< TMatrix, TVector >; MatrixType typedefsofa::component::linearsystem::LinearSystemData< TMatrix, TVector >; resizeSystem(sofa::Size n)sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >; resizeSystem(sofa::Size n)sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >; resizeSystem(sofa::Size n)sofa::component::linearsystem::Linea",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_linear_system_data-members.html:410,clear,clearSystem,410,api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_linear_system_data-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_linear_system_data-members.html,3,['clear'],['clearSystem']
Usability," an input stream More...;  . Attribute details. ◆ spatial_dimensions. template<typename real > . constexpr sofa::Size sofa::defaulttype::RigidCoord< 2, real >::spatial_dimensions = 2. staticconstexpr . Compile-time constant specifying the number of dimensions of space (NOT equivalent to total_size for rigids) . ◆ total_size. template<typename real > . constexpr sofa::Size sofa::defaulttype::RigidCoord< 2, real >::total_size = 3. staticconstexpr . Compile-time constant specifying the number of scalars within this vector (equivalent to the size() method) . Constructor details. ◆ RigidCoord() [1/2]. template<typename real > . constexpr sofa::defaulttype::RigidCoord< 2, real >::RigidCoord ; (; const Vec2 & ; posCenter, . const Real & ; orient . ). inlineconstexpr . ◆ RigidCoord() [2/2]. template<typename real > . constexpr sofa::defaulttype::RigidCoord< 2, real >::RigidCoord ; (; ). inlineconstexpr . Function details. ◆ clear(). template<typename real > . constexpr void sofa::defaulttype::RigidCoord< 2, real >::clear ; (; ). inlineconstexpr . ◆ fromHomogeneous(). template<typename real > . template<typename V > . static constexpr Vec2 sofa::defaulttype::RigidCoord< 2, real >::fromHomogeneous ; (; V ; v). inlinestaticconstexpr . create a 2d vector from a homogeneous vector . ◆ fromMatrix(). template<typename real > . template<class Mat > . void sofa::defaulttype::RigidCoord< 2, real >::fromMatrix ; (; const Mat & ; m). inline . Set from the given matrix. . ◆ getCenter() [1/2]. template<typename real > . constexpr Vec2& sofa::defaulttype::RigidCoord< 2, real >::getCenter ; (; ). inlineconstexpr . ◆ getCenter() [2/2]. template<typename real > . constexpr const Vec2& sofa::defaulttype::RigidCoord< 2, real >::getCenter ; (; ); const. inlineconstexpr . ◆ getOrientation() [1/2]. template<typename real > . constexpr Real& sofa::defaulttype::RigidCoord< 2, real >::getOrientation ; (; ). inlineconstexpr . ◆ getOrientation() [2/2]. template<typename real > . constexpr const Real& s",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1defaulttype_1_1_rigid_coord_3_012_00_01real_01_4.html:6273,clear,clear,6273,api/master/sofa/html/classsofa_1_1defaulttype_1_1_rigid_coord_3_012_00_01real_01_4.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1defaulttype_1_1_rigid_coord_3_012_00_01real_01_4.html,1,['clear'],['clear']
Usability," angularDisplacement(const Quat &a, const Quat &b) -> Vec3sofa::type::Quat< Real >static; axisToQuat(Vec3 a, Real phi) -> Quatsofa::type::Quat< Real >; buildRotationMatrix(Real m[4][4]) constsofa::type::Quat< Real >inline; clear()sofa::type::Quat< Real >inline; createFromRotationVector(const Vec3 &a) -> Quatsofa::type::Quat< Real >static; createFromRotationVector(Real a0, Real a1, Real a2) -> Quatsofa::type::Quat< Real >static; createQuaterFromEuler(const Vec3 &v, EulerOrder order=EulerOrder::ZYX) -> Quatsofa::type::Quat< Real >static; createQuaterFromFrame(const Vec3 &lox, const Vec3 &loy, const Vec3 &loz) -> Quatsofa::type::Quat< Real >static; EulerOrder enum namesofa::type::Quat< Real >; fromEuler(Real alpha, Real beta, Real gamma, EulerOrder order=EulerOrder::ZYX) -> Quatsofa::type::Quat< Real >static; fromFrame(const Vec3 &x, const Vec3 &y, const Vec3 &z)sofa::type::Quat< Real >; fromMatrix(const Mat3x3 &m)sofa::type::Quat< Real >; identity()sofa::type::Quat< Real >inlinestatic; inverse() const -> Quatsofa::type::Quat< Real >; inverseRotate(const Vec3 &v) const -> Vec3sofa::type::Quat< Real >inline; isNormalized()sofa::type::Quat< Real >; normalize()sofa::type::Quat< Real >; operator!=(const Quat &q) constsofa::type::Quat< Real >; operator*(const Quat &q1) const -> Quatsofa::type::Quat< Real >inline; operator*(const Real &r) const -> Quatsofa::type::Quat< Real >inline; operator*=(const Real &r)sofa::type::Quat< Real >inline; operator*=(const Quat &q1)sofa::type::Quat< Real >inline; operator+(const Quat &q1) const -> Quatsofa::type::Quat< Real >; operator+=(const Quat &q2)sofa::type::Quat< Real >; operator/(const Real &r) const -> Quatsofa::type::Quat< Real >inline; operator/=(const Real &r)sofa::type::Quat< Real >inl",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_quat_no_init-members.html:473,clear,clear,473,api/master/sofa/html/classsofa_1_1type_1_1_quat_no_init-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_quat_no_init-members.html,1,['clear'],['clear']
Usability," angularDisplacement(const Quat &a, const Quat &b) -> Vec3sofa::type::Quat< Real >static; axisToQuat(Vec3 a, Real phi) -> Quatsofa::type::Quat< Real >; buildRotationMatrix(Real m[4][4]) constsofa::type::Quat< Real >inline; clear()sofa::type::Quat< Real >inline; createFromRotationVector(const Vec3 &a) -> Quatsofa::type::Quat< Real >static; createFromRotationVector(Real a0, Real a1, Real a2) -> Quatsofa::type::Quat< Real >static; createQuaterFromEuler(const Vec3 &v, EulerOrder order=EulerOrder::ZYX) -> Quatsofa::type::Quat< Real >static; createQuaterFromFrame(const Vec3 &lox, const Vec3 &loy, const Vec3 &loz) -> Quatsofa::type::Quat< Real >static; EulerOrder enum namesofa::type::Quat< Real >; fromEuler(Real alpha, Real beta, Real gamma, EulerOrder order=EulerOrder::ZYX) -> Quatsofa::type::Quat< Real >static; fromFrame(const Vec3 &x, const Vec3 &y, const Vec3 &z)sofa::type::Quat< Real >; fromMatrix(const Mat3x3 &m)sofa::type::Quat< Real >; identity()sofa::type::Quat< Real >inlinestatic; inverse() const -> Quatsofa::type::Quat< Real >; inverseRotate(const Vec3 &v) const -> Vec3sofa::type::Quat< Real >inline; isNormalized()sofa::type::Quat< Real >; normalize()sofa::type::Quat< Real >; operator!=(const Quat &q) constsofa::type::Quat< Real >; operator*(const Quat &q1) const -> Quatsofa::type::Quat< Real >inline; operator*(const Real &r) const -> Quatsofa::type::Quat< Real >inline; operator*=(const Real &r)sofa::type::Quat< Real >inline; operator*=(const Quat &q1)sofa::type::Quat< Real >inline; operator+(const Quat &q1) const -> Quatsofa::type::Quat< Real >; operator+=(const Quat &q2)sofa::type::Quat< Real >; operator/(const Real &r) const -> Quatsofa::type::Quat< Real >inline; operator/=(const Real &r)sofa::type::Quat< Real >inline; operato",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_quat-members.html:461,clear,clear,461,api/master/sofa/html/classsofa_1_1type_1_1_quat-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_quat-members.html,1,['clear'],['clear']
Usability," applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(core::visual::VisualParams *) overridesofa::gl::component::shader::LightManagervirtual; bwdInit() overridesofa::gl::component::shader::LightManagervirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear()sofa::gl::component::shader::LightManager; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_ambientsofa::gl::component::shader::LightManager; d_componentStatesofa::core::objectmodel::Base; d_drawIsEnabledsofa::gl::component::shader::LightManager; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; d_shadowsEnabledsofa::gl::component::shader::LightManager; d_softShadowsEnabledsofa::gl::component::shader::LightManager; doInitVisual(const core::visual::VisualParams *vparams) overridesofa::gl::component::shader::LightManagervirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectpr",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_light_manager-members.html:2509,clear,clearLoggedMessages,2509,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_light_manager-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_light_manager-members.html,1,['clear'],['clearLoggedMessages']
Usability," applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; beginEdit()sofa::gl::component::shader::OglAttribute< size, type, TDataTypes >; bwdDraw(core::visual::VisualParams *) overridesofa::gl::component::shader::OglAttribute< size, type, TDataTypes >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; DataType typedefsofa::gl::component::shader::OglAttribute< size, type, TDataTypes >; disable()sofa::gl::component::shader::OglAttribute< size, type, TDataTypes >; doInitVisual(const core::visual::VisualParams *vparams) overridesofa::gl::component::shader::OglAttribute< size, type, TDataTypes >virtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; doUpdateVisual(const core::visual::VisualParams *vparams) overridesofa::gl::compo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_attribute-members.html:3272,clear,clearVisual,3272,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_attribute-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_attribute-members.html,1,['clear'],['clearVisual']
Usability," bColSize() constsofa::linearalgebra::BaseMatrixinlinevirtual; blocAdd(Index i, Index j, const T *buffer)sofa::linearalgebra::BaseMatrixinline; blocCreate(Index i, Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; blocElements(Index i, Index j, T *buffer) constsofa::linearalgebra::BaseMatrixinline; blocGet(Index i, Index j) constsofa::linearalgebra::BaseMatrixinlinevirtual; blocGetW(Index i, Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; blocSet(Index i, Index j, const T *buffer)sofa::linearalgebra::BaseMatrixinline; bRowBegin(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowEnd(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowRange(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsBegin() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsEnd() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowSize() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsRange() constsofa::linearalgebra::BaseMatrixinlinevirtual; clear() overridesofa::core::behavior::AddToMatrixCompatMatrix< c >inlinevirtual; sofa::linearalgebra::BaseMatrix::clear(Index i, Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; clearCol(Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; clearCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRow(Index i)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowCol(Index i)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRows(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowsCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; cols(void) constsofa::linearalgebra::BaseMatrixinline; colSize() const overridesofa::core::behavior::AddToMatrixCompatMatrix< c >inlinevirtual; compatibilityMessagesofa::core::behavior::AddToMatrixCompatMatrix< c >static; componentsofa::core::behavior::AddToMatrixCompatMatrix< c >; compress()sofa::linearalgebra::BaseMatrixvirtual; createBlockAccessor(Index row, Index col, void *intern",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_add_to_matrix_compat_matrix-members.html:4982,clear,clear,4982,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_add_to_matrix_compat_matrix-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_add_to_matrix_compat_matrix-members.html,1,['clear'],['clear']
Usability," bColSize() constsofa::linearalgebra::BaseMatrixinlinevirtual; blocAdd(Index i, Index j, const T *buffer)sofa::linearalgebra::BaseMatrixinline; blocCreate(Index i, Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; blocElements(Index i, Index j, T *buffer) constsofa::linearalgebra::BaseMatrixinline; blocGet(Index i, Index j) constsofa::linearalgebra::BaseMatrixinlinevirtual; blocGetW(Index i, Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; blocSet(Index i, Index j, const T *buffer)sofa::linearalgebra::BaseMatrixinline; bRowBegin(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowEnd(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowRange(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsBegin() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsEnd() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowSize() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsRange() constsofa::linearalgebra::BaseMatrixinlinevirtual; clear() overridesofa::core::behavior::ApplyConstraintCompatinlinevirtual; sofa::linearalgebra::BaseMatrix::clear(Index i, Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; clearCol(Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; clearCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRow(Index i)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowCol(Index i) overridesofa::core::behavior::ApplyConstraintCompatinlinevirtual; clearRows(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowsCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; cols(void) constsofa::linearalgebra::BaseMatrixinline; colSize() const overridesofa::core::behavior::ApplyConstraintCompatinlinevirtual; componentsofa::core::behavior::ApplyConstraintCompat; compress()sofa::linearalgebra::BaseMatrixvirtual; createBlockAccessor(Index row, Index col, void *internalPtr=nullptr)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockAcces",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_apply_constraint_compat-members.html:4959,clear,clear,4959,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_apply_constraint_compat-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_apply_constraint_compat-members.html,1,['clear'],['clear']
Usability," bColSize() constsofa::linearalgebra::BaseMatrixinlinevirtual; blocAdd(Index i, Index j, const T *buffer)sofa::linearalgebra::BaseMatrixinline; blocCreate(Index i, Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; blocElements(Index i, Index j, T *buffer) constsofa::linearalgebra::BaseMatrixinline; blocGet(Index i, Index j) constsofa::linearalgebra::BaseMatrixinlinevirtual; blocGetW(Index i, Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; blocSet(Index i, Index j, const T *buffer)sofa::linearalgebra::BaseMatrixinline; bRowBegin(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowEnd(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowRange(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsBegin() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsEnd() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowSize() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsRange() constsofa::linearalgebra::BaseMatrixinlinevirtual; clear() overridesofa::linearalgebra::RotationMatrix< TReal >virtual; sofa::linearalgebra::BaseMatrix::clear(Index i, Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; clearCol(Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; clearCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRow(Index i)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowCol(Index i)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRows(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowsCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; cols(void) constsofa::linearalgebra::BaseMatrixinline; colSize(void) const overridesofa::linearalgebra::RotationMatrix< TReal >virtual; compress()sofa::linearalgebra::BaseMatrixvirtual; createBlockAccessor(Index row, Index col, void *internalPtr=nullptr)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockAccessor(Index row, Index col, Index internalData)sofa::linearalgebra::BaseMatrixinlin",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_rotation_matrix-members.html:5635,clear,clear,5635,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_rotation_matrix-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_rotation_matrix-members.html,1,['clear'],['clear']
Usability," bColSize() constsofa::linearalgebra::BaseMatrixinlinevirtual; blocAdd(Index i, Index j, const T *buffer)sofa::linearalgebra::BaseMatrixinline; blocCreate(Index i, Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; blocElements(Index i, Index j, T *buffer) constsofa::linearalgebra::BaseMatrixinline; blocGet(Index i, Index j) constsofa::linearalgebra::BaseMatrixinlinevirtual; blocGetW(Index i, Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; blocSet(Index i, Index j, const T *buffer)sofa::linearalgebra::BaseMatrixinline; bRowBegin(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowEnd(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowRange(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsBegin() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsEnd() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowSize() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsRange() constsofa::linearalgebra::BaseMatrixinlinevirtual; clear()=0sofa::linearalgebra::BaseMatrixpure virtual; clear(Index i, Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; clearCol(Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; clearCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRow(Index i)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowCol(Index i)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRows(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowsCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; cols(void) constsofa::linearalgebra::BaseMatrixinline; colSize(void) const =0sofa::linearalgebra::BaseMatrixpure virtual; compress()sofa::linearalgebra::BaseMatrixvirtual; createBlockAccessor(Index row, Index col, void *internalPtr=nullptr)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockAccessor(Index row, Index col, Index internalData)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockConstAccessor(Index row, Index col, voi",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_matrix-members.html:4717,clear,clear,4717,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_matrix-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_matrix-members.html,1,['clear'],['clear']
Usability," backProjectPoint(const Vec &pointInParent) constsofa::type::Transform< TReal >; backProjectVector(const Vec &vectorInParent) constsofa::type::Transform< TReal >; clear()sofa::type::Transform< TReal >; CreateSpatialVector()sofa::type::Transform< TReal >; DTrans()sofa::type::Transform< TReal >; getAdjointMatrix() constsofa::type::Transform< TReal >; getOrientation() constsofa::type::Transform< TReal >; getOrigin() constsofa::type::Transform< TReal >; getOriginOfParentInChild() constsofa::type::Transform< TReal >; getRotationMatrix() constsofa::type::Transform< TReal >; identity()sofa::type::Transform< TReal >static; inversed() constsofa::type::Transform< TReal >; Mat3x3 typedefsofa::type::Transform< TReal >; Mat6x6 typedefsofa::type::Transform< TReal >; operator*(const Transform &f2) constsofa::type::Transform< TReal >; operator*(const SpatialVector< TReal > &sv) constsofa::type::Transform< TReal >; operator*(Real2 a) constsofa::type::Transform< TReal >inline; operator*=(const Transform &f2)sofa::type::Transform< TReal >; operator*=(Real2 a)sofa::type::Transform< TReal >inline; operator+=(const SpatialVector< TReal > &a)sofa::type::Transform< TReal >; operator+=(const Transform &a)sofa::type::Transform< TReal >; operator/(const SpatialVector< TReal > &sv) constsofa::type::Transform< TReal >; operator<<(std::ostream &out, const Transform &t)sofa::type::Transform< TReal >friend; operator>>(std::istream &in, Transform &t)sofa::type::Transform< TReal >friend; orientation_sofa::type::Transform< TReal >protected; origin_sofa::type::Transform< TReal >protected; printInternal(std::ostream &) constsofa::type::Transform< TReal >; projectPoint(const Vec &pointInChild) constsofa::type::Transform< TReal >; projectVector(const Vec &vect",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_transform-members.html:413,clear,clear,413,api/master/sofa/html/classsofa_1_1type_1_1_transform-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_transform-members.html,1,['clear'],['clear']
Usability," be overload to obtain better performances. ; Adding values from a 3x3f matrix this function may be overload to obtain better performances. . ◆ add() [7/9]. template<typename T > . void sofa::linearalgebra::BaseMatrix::add. Adding values from a 6x6d matrix. This function may be overload to obtain better performances. . ◆ add() [8/9]. template<typename T > . void sofa::linearalgebra::BaseMatrix::add. Adding values from a 6x6f matrix. This function may be overload to obtain better performances. . ◆ add() [9/9]. template<typename T > . virtual void sofa::linearalgebra::BaseMatrix::add. Add v to the existing value of the element at row i, column j (using 0-based indices) . ◆ addEqual(). template<typename T > . template<class M > . void sofa::linearalgebra::DiagonalMatrix< T >::addEqual ; (; const M & ; m). inlineprotected . this += m . ◆ addTo(). template<typename T > . template<class Dest > . void sofa::linearalgebra::DiagonalMatrix< T >::addTo ; (; Dest * ; dest); const. inline . ◆ clear() [1/3]. template<typename T > . void sofa::linearalgebra::DiagonalMatrix< T >::clear ; (; ). inlineoverridevirtual . Reset all values to 0. ; Implements sofa::linearalgebra::BaseMatrix. ◆ clear() [2/3]. template<typename T > . void sofa::linearalgebra::DiagonalMatrix< T >::clear ; (; Index ; i). inline . ◆ clear() [3/3]. template<typename T > . void sofa::linearalgebra::DiagonalMatrix< T >::clear ; (; Index ; i, . Index ; j . ). inlineoverridevirtual . Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearCol(). template<typename T > . void sofa::linearalgebra::DiagonalMatrix< T >::clearCol ; (; Index ; j). inlineoverridevirtual . Reset the all values in column j to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRow(). template<typename T > . void sofa::linearalgebra::DiagonalMatrix< T >::clearRow ; (; Index ; i). inlineoverridevirtual . Reset all the values in row i to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRowCol(). template<typename T ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_diagonal_matrix.html:19541,clear,clear,19541,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_diagonal_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_diagonal_matrix.html,1,['clear'],['clear']
Usability," begin() constsofa::helper::WriteAccessorVectorId< vector_id< T, TIndex, CheckIndices, MemoryManager > >inline; begin()sofa::helper::WriteAccessorVectorId< vector_id< T, TIndex, CheckIndices, MemoryManager > >inline; clear()sofa::helper::WriteAccessorVectorId< vector_id< T, TIndex, CheckIndices, MemoryManager > >inline; const_iterator typedefsofa::helper::WriteAccessorVectorId< vector_id< T, TIndex, CheckIndices, MemoryManager > >; const_reference typedefsofa::helper::WriteAccessorVectorId< vector_id< T, TIndex, CheckIndices, MemoryManager > >; container_type typedefsofa::helper::WriteAccessor< vector_id< T, TIndex, CheckIndices, MemoryManager > >; empty() constsofa::helper::WriteAccessorVectorId< vector_id< T, TIndex, CheckIndices, MemoryManager > >inline; end() constsofa::helper::WriteAccessorVectorId< vector_id< T, TIndex, CheckIndices, MemoryManager > >inline; end()sofa::helper::WriteAccessorVectorId< vector_id< T, TIndex, CheckIndices, MemoryManager > >inline; Index typedefsofa::helper::WriteAccessorVectorId< vector_id< T, TIndex, CheckIndices, MemoryManager > >; Inherit typedefsofa::helper::WriteAccessor< vector_id< T, TIndex, CheckIndices, MemoryManager > >; iterator typedefsofa::helper::WriteAccessorVectorId< vector_id< T, TIndex, CheckIndices, MemoryManager > >; operator()(Index i) constsofa::helper::WriteAccessorVectorId< vector_id< T, TIndex, CheckIndices, MemoryManager > >inline; operator()(Index i)sofa::helper::WriteAccessorVectorId< vector_id< T, TIndex, CheckIndices, MemoryManager > >inline; operator[](Index i) constsofa::helper::WriteAccessorVectorId< vector_id< T, TIndex, CheckIndices, MemoryManager > >",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_write_accessor_3_01vector__id_3_01_t_00_01_t_index_00_01_check_indices_0a4a7b5a5eb0691d99c49ad8c448db38c.html:571,clear,clear,571,api/master/sofa/html/classsofa_1_1helper_1_1_write_accessor_3_01vector__id_3_01_t_00_01_t_index_00_01_check_indices_0a4a7b5a5eb0691d99c49ad8c448db38c.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_write_accessor_3_01vector__id_3_01_t_00_01_t_index_00_01_check_indices_0a4a7b5a5eb0691d99c49ad8c448db38c.html,1,['clear'],['clear']
Usability," begin(IdTimer id)sofa::helper::AdvancedTimerstatic; begin(const char *idStr)sofa::helper::AdvancedTimerstatic; clear()sofa::helper::AdvancedTimerstatic; clearData(IdTimer id)sofa::helper::AdvancedTimerstatic; convertOutputType(std::string type)sofa::helper::AdvancedTimerstatic; end(IdTimer id)sofa::helper::AdvancedTimerstatic; end(IdTimer id, std::ostream &result)sofa::helper::AdvancedTimerstatic; end(IdTimer id, double time, double dt)sofa::helper::AdvancedTimerstatic; end(const char *idStr)sofa::helper::AdvancedTimerstatic; getInterval(IdTimer id)sofa::helper::AdvancedTimerstatic; getOutputType(IdTimer id)sofa::helper::AdvancedTimerstatic; getRecords(IdTimer id)sofa::helper::AdvancedTimerstatic; getStepData(IdTimer id, bool processData=false)sofa::helper::AdvancedTimerstatic; getSteps(IdTimer id, bool processData=false)sofa::helper::AdvancedTimerstatic; getTimeAnalysis(IdTimer id, double time, double dt)sofa::helper::AdvancedTimerstatic; GUI enum valuesofa::helper::AdvancedTimer; IdObj typedefsofa::helper::AdvancedTimer; IdStep typedefsofa::helper::AdvancedTimer; IdTimer typedefsofa::helper::AdvancedTimer; IdVal typedefsofa::helper::AdvancedTimer; isActive()sofa::helper::AdvancedTimerstatic; isEnabled(IdTimer id)sofa::helper::AdvancedTimerstatic; JSON enum valuesofa::helper::AdvancedTimer; LJSON enum valuesofa::helper::AdvancedTimer; outputType enum namesofa::helper::AdvancedTimer; setEnabled(IdTimer id, bool val)sofa::helper::AdvancedTimerstatic; setInterval(IdTimer id, int val)sofa::helper::AdvancedTimerstatic; setOutputType(IdTimer id, const std::string &type)sofa::helper::AdvancedTimerstatic; setSyncCallBack(SyncCallBack cb, void *userData=nullptr)sofa::helper::AdvancedTimerstatic; STDOUT enum valuesofa::helper::Advanced",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_advanced_timer-members.html:356,clear,clear,356,api/master/sofa/html/classsofa_1_1helper_1_1_advanced_timer-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_advanced_timer-members.html,2,['clear'],"['clear', 'clearData']"
Usability," bool create=false);  Write block method. More...;  ; Block * wblock (Index i, Index j, Index &rowId, Index &colId, bool create=false);  Write block method when rowId and colId are known, this is an optimized wblock specification. More...;  ; Block * wbloc (Index i, Index j, bool create=false);  ; const Block & getBlock (Index i, Index j) const;  ; const BlockTranspose getSymBlock (Index i, Index j) const;  ; void setBlock (Index i, Index j, const Block &v);  ; void setBlock (Index i, Index j, Index &rowId, Index &colId, const Block &v);  ; void addBlock (Index i, Index j, const Block &v);  ; void addBlock (Index i, Index j, Index &rowId, Index &colId, const Block &v);  ; Block * getWBlock (Index i, Index j, bool create=false);  ; void clearRowBlock (Index i);  Clear row block method. Clear all col of this line. More...;  ; void clearColBlock (Index j);  Clear col block method. Clear this col in all row of matrix. More...;  ; std::size_t countEmptyBlocks () const;  ; void clearRowColBlock (Index i);  Clear both row i and column i in a square matrix. More...;  ; void clear ();  Completely clear the matrix. More...;  ; bool check_matrix ();  ; std::ostream & write (std::ostream &os) const;  ; std::istream & read (std::istream &is);  ; void add (unsigned int bi, unsigned int bj, const Block &b);  ; void add (unsigned int bi, unsigned int bj, int &rowId, int &colId, const Block &b);  ; void addDBlock (unsigned int bi, unsigned int bj, const DBlock &b);  ; void addDValue (unsigned int bi, unsigned int bj, const Real b);  ; void addDValue (unsigned int bi, unsigned int bj, int &rowId, int &colId, const Real b);  ; void addDiag (unsigned int bi, const Block &b);  ; void addDiag (unsigned int bi, int &rowId, int &colId, const Block &b);  ; void addDiagDBlock (unsigned int bi, const DBlock &b);  ; void addDiagDValue (unsigned int bi, const Real b);  ; void addDiagDValue (unsigned int bi, int &rowId, int &colId, const Real b);  ; void addSym (unsigned int bi, unsigned int bj,",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_constraint.html:6373,clear,clearRowColBlock,6373,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_constraint.html,2,['clear'],['clearRowColBlock']
Usability," bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::core::behavior::SingleStateAccessor< DataTypes >;  SOFA_ABSTRACT_CLASS (SOFA_TEMPLATE(SingleStateAccessor, DataTypes), StateAccessor);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; MechanicalState< DataTypes > * getMState ();  ; const MechanicalState< DataTypes > * getMState () const;  . Protected Member Functions;  FixedTranslationProjectiveConstraint ();  ; virtual ~FixedTranslationProjectiveConstraint ();  ; template<class DataDeriv > ; void projectResponseT (DataDeriv &dx, const std::function< void(DataDeriv &, const unsigned int)> &clear);  ;  Protected Member Functions inherited from sofa::core::behavior::ProjectiveConstraintSet< DataTypes >;  ProjectiveConstraintSet (MechanicalState< DataTypes > *mm=nullptr);  ;  ~ProjectiveConstraintSet () override;  ;  Protected Member Functions inherited from sofa::core::behavior::BaseProjectiveConstraintSet;  BaseProjectiveConstraintSet ();  ;  ~BaseProjectiveConstraintSet () override;  ;  Protected Member Functions inherited from sofa::core::behavior::StateAccessor;  StateAccessor ();  ;  ~StateAccessor () override=default;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data ha",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_translation_projective_constraint.html:16616,clear,clear,16616,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_translation_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_translation_projective_constraint.html,1,['clear'],['clear']
Usability," buildGeometricStiffnessMatrix(sofa::core::GeometricStiffnessMatrix *matrices) overridesofa::component::mapping::nonlinear::SquareMapping< TIn, TOut >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::core::Mapping< TIn, TOut >inlinestatic; sofa::core::BaseMapping::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkLinearSolverSymmetry(const core::MechanicalParams *mparams) constsofa::component::mapping::nonlinear::NonLinearMappingData< HasStabilizedGeometricStiffness >protected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeAccFromMapping(const MechanicalParams *mparams, MultiVecDerivId outAcc, ConstMultiVecDerivId inVel, ConstMultiVecDerivId inAcc) overridesofa::core::Mapping< TIn, TOut >virtual; computeAccFromMapping(const MechanicalParams *, OutDataVecDeriv &, const InDataVecDeriv &, const InDataVecDeriv &)sofa::core::Mapping< TIn, TOut >inlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::core::Mapping< TIn, TOut >inlinestatic; createMappedMatrix(const behavior::BaseMechanicalState *state1, const behavior::BaseMechanicalState *state2, func_createMappedMatrix) overridesofa::core::Mapping< TIn, TOut >virtual; d_componentStatesofa::core::objectmodel:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_square_mapping-members.html:5019,clear,clearLoggedMessages,5019,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_square_mapping-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_square_mapping-members.html,1,['clear'],['clearLoggedMessages']
Usability," buildGeometricStiffnessMatrix(sofa::core::GeometricStiffnessMatrix *matrices) overridesofa::component::mapping::nonlinear::VolumeMapping< TIn, TOut >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::core::Mapping< TIn, TOut >inlinestatic; sofa::core::BaseMapping::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkLinearSolverSymmetry(const core::MechanicalParams *mparams) constsofa::component::mapping::nonlinear::NonLinearMappingData< HasStabilizedGeometricStiffness >protected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeAccFromMapping(const MechanicalParams *mparams, MultiVecDerivId outAcc, ConstMultiVecDerivId inVel, ConstMultiVecDerivId inAcc) overridesofa::core::Mapping< TIn, TOut >virtual; computeAccFromMapping(const MechanicalParams *, OutDataVecDeriv &, const InDataVecDeriv &, const InDataVecDeriv &)sofa::core::Mapping< TIn, TOut >inlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeSecondDerivativeVolume(const sofa::type::fixed_array< sofa::type::Vec3, 4 > &tetrahedronVertices)sofa::component::mapping::nonlinear::VolumeMapping< TIn, TOut >static; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::core::Mapping< TIn, TOut >inlinestatic; createMappedMatrix(const behavior::BaseMechanica",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_volume_mapping-members.html:5013,clear,clearLoggedMessages,5013,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_volume_mapping-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_volume_mapping-members.html,1,['clear'],['clearLoggedMessages']
Usability," bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::component::engine::select::ProximityROI< DataTypes >inlinestatic; sofa::core::DataEngine::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; centerssofa::component::engine::select::ProximityROI< DataTypes >; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanDirty(const core::ExecParams *params=nullptr)sofa::core::DataTrackerDDGNodevirtual; sofa::core::objectmodel::DDGNode::cleanDirty()sofa::core::objectmodel::DDGNode; cleanDirtyOutputsOfInputs()sofa::core::objectmodel::DDGNodeprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; Coord typedefsofa::component::engine::select::ProximityROI< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; CPos typedefsofa::component::engine::select::ProximityROI< DataTypes >; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; DataEngine()sofa::core::DataEngineprotected; DataTrackerDDGNode()sofa::core::DataTrackerDDGNodeinline; DDGLinkContainer typedefsofa::core::objectmodel::DDGNode; DDGLinkIterator typedefsofa::core::objectmodel::DDGNode; DDGNode()sofa::core::objectmodel::DDGNode; delInput(DDGNode *n)sofa::core::objectmodel::DDGNode; delOutput(DDGNode *n)sofa::core::objectmo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_proximity_r_o_i-members.html:3032,clear,clearLoggedMessages,3032,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_proximity_r_o_i-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_proximity_r_o_i-members.html,1,['clear'],['clearLoggedMessages']
Usability," can (must ?) be a value at this place already. Efficient only if the it is at the last place of the compressed matrix. More...;  ; void copy (const EigenBaseSparseMatrix &m, unsigned nbCol, unsigned shift);  ; void resize (Index nbRow, Index nbCol) override;  Resize the matrix without preserving the data (the matrix is set to zero) More...;  ; Index rowSize (void) const override;  number of rows More...;  ; Index colSize (void) const override;  number of columns More...;  ; void reserve (typename CompressedMatrix::Index reserveSize);  ; SReal element (Index i, Index j) const override;  Read the value of the element at row i, column j (using 0-based indices) More...;  ; void compress () override;  Add the values from the scheduled list, and clears the schedule list. More...;  ; Index * getRowBegin ();  ; Index * getColsIndex ();  ; Real * getColsValue ();  ; void clearRow (Index i) override;  Set all the entries of a row to 0. More...;  ; void clearRows (Index imin, Index imax) override;  Set all the entries of rows imin to imax-1 to 0. More...;  ; void clearCol (Index col) override;  Clears the all the entries of column imin to column imax-1. Not efficient ! More...;  ; void clearCols (Index imin, Index imax) override;  Set all the entries of column i and of row i to 0. Not efficient ! More...;  ; void clearRowCol (Index i) override;  Clears all the entries of rows imin to imax-1 and columns imin to imax-1. More...;  ; void clearRowsCols (Index imin, Index imax) override;  Clears all the values in rows imin to imax-1 and columns imin to imax-1. More...;  ; void clear () override;  Set all values to 0, by resizing to the same size. More...;  ; void mult (VectorEigen &result, const VectorEigen &data);  Matrix-vector product. More...;  ; void mult_MT (VectorEigen &result, const VectorEigen &data);  Matrix-vector product openmp multithreaded. More...;  ; template<class V1 , class V2 > ; void multVector (V1 &output, const V2 &input);  Matrix-Vector product (dense vector",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_base_sparse_matrix.html:3624,clear,clearRows,3624,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_base_sparse_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_base_sparse_matrix.html,1,['clear'],['clearRows']
Usability," can (must ?) be a value at this place already. Efficient only if the it is at the last place of the compressed matrix. More...;  ; void copy (const EigenBaseSparseMatrix &m, unsigned nbCol, unsigned shift);  ; void resize (Index nbRow, Index nbCol) override;  Resize the matrix without preserving the data (the matrix is set to zero) More...;  ; Index rowSize (void) const override;  number of rows More...;  ; Index colSize (void) const override;  number of columns More...;  ; void reserve (typename CompressedMatrix::Index reserveSize);  ; SReal element (Index i, Index j) const override;  Read the value of the element at row i, column j (using 0-based indices) More...;  ; void compress () override;  Add the values from the scheduled list, and clears the schedule list. More...;  ; Index * getRowBegin ();  ; Index * getColsIndex ();  ; Real * getColsValue ();  ; void clearRow (Index i) override;  Set all the entries of a row to 0. More...;  ; void clearRows (Index imin, Index imax) override;  Set all the entries of rows imin to imax-1 to 0. More...;  ; void clearCol (Index col) override;  Clears the all the entries of column imin to column imax-1. Not efficient ! More...;  ; void clearCols (Index imin, Index imax) override;  Set all the entries of column i and of row i to 0. Not efficient ! More...;  ; void clearRowCol (Index i) override;  Clears all the entries of rows imin to imax-1 and columns imin to imax-1. More...;  ; void clearRowsCols (Index imin, Index imax) override;  Clears all the values in rows imin to imax-1 and columns imin to imax-1. More...;  ; void clear () override;  Set all values to 0, by resizing to the same size. More...;  ; void mult (VectorEigen &result, const VectorEigen &data);  Matrix-vector product. More...;  ; void mult_MT (VectorEigen &result, const VectorEigen &data);  Matrix-vector product openmp multithreaded. More...;  ; void multVector (V1 &output, const V2 &input);  Matrix-Vector product (dense vector with contiguous memory layout) M",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_sparse_matrix.html:4895,clear,clearRows,4895,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_sparse_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_sparse_matrix.html,1,['clear'],['clearRows']
Usability," centersofa::defaulttype::RigidCoord< 3, real >protected; clear()sofa::defaulttype::RigidCoord< 3, real >inline; Deriv typedefsofa::defaulttype::RigidCoord< 3, real >; fromHomogeneous(V v)sofa::defaulttype::RigidCoord< 3, real >inlinestatic; fromMatrix(const Mat &m)sofa::defaulttype::RigidCoord< 3, real >inline; getCenter()sofa::defaulttype::RigidCoord< 3, real >inline; getCenter() constsofa::defaulttype::RigidCoord< 3, real >inline; getOrientation()sofa::defaulttype::RigidCoord< 3, real >inline; getOrientation() constsofa::defaulttype::RigidCoord< 3, real >inline; HomogeneousMat typedefsofa::defaulttype::RigidCoord< 3, real >; HomogeneousVec typedefsofa::defaulttype::RigidCoord< 3, real >; identity()sofa::defaulttype::RigidCoord< 3, real >inlinestatic; inverseRotate(const Vec3 &v) constsofa::defaulttype::RigidCoord< 3, real >inline; max_size()sofa::defaulttype::RigidCoord< 3, real >inlinestatic; mult(const Vec3 &v) constsofa::defaulttype::RigidCoord< 3, real >inline; mult(const RigidCoord< 3, real > &c) constsofa::defaulttype::RigidCoord< 3, real >inline; multRight(const RigidCoord< 3, real > &c)sofa::defaulttype::RigidCoord< 3, real >inline; norm() constsofa::defaulttype::RigidCoord< 3, real >inline; norm2() constsofa::defaulttype::RigidCoord< 3, real >inline; operator!=(const RigidCoord< 3, real > &b) constsofa::defaulttype::RigidCoord< 3, real >inline; operator*(real2 a) constsofa::defaulttype::RigidCoord< 3, real >inline; operator*(const RigidCoord< 3, real > &a) constsofa::defaulttype::RigidCoord< 3, real >inline; operator*=(real2 a)sofa::defaulttype::RigidCoord< 3, real >inline; operator+(const Deriv &dg) constsofa::defaulttype::RigidCoord< 3, real >inline; operator+(const RigidCoord< 3, real > ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1defaulttype_1_1_rigid_coord_3_013_00_01real_01_4-members.html:328,clear,clear,328,api/master/sofa/html/classsofa_1_1defaulttype_1_1_rigid_coord_3_013_00_01real_01_4-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1defaulttype_1_1_rigid_coord_3_013_00_01real_01_4-members.html,1,['clear'],['clear']
Usability," changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkConnexity() overridesofa::component::topology::container::dynamic::TriangleSetTopologyContainervirtual; checkTopology() const overridesofa::component::topology::container::dynamic::TriangleSetTopologyContainervirtual; cleanEdgeTopologyFromDirty()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; cleanPointTopologyFromDirty()sofa::component::topology::container::dynamic::PointSetTopologyContainerprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanTriangleTopologyFromDirty()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear() overridesofa::component::topology::container::dynamic::TriangleSetTopologyContainervirtual; clearBorderElementLists()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; clearEdges()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearEdgesAroundVertex()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearEdgesInTriangle()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; clearLoggedMessages() constsofa::core::objectmodel::Base; clearTriangles()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; clearTrianglesAroundEdge()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; clearTrianglesAroundVertex()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_container-members.html:4322,clear,clearEdges,4322,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_container-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_container-members.html,1,['clear'],['clearEdges']
Usability," chartsComponentsofa::gui::qt::WindowVisitorprotected; chartsVisitorsofa::gui::qt::WindowVisitorprotected; clearGraph()sofa::gui::qt::WindowVisitorinlineslot; closeEvent(QCloseEvent *)sofa::gui::qt::WindowVisitorinlineslot; collapseNode(QTreeWidgetItem *item)sofa::gui::qt::WindowVisitor; collapseNode()sofa::gui::qt::WindowVisitorslot; COMMENT enum valuesofa::gui::qt::WindowVisitor; COMPONENT enum valuesofa::gui::qt::WindowVisitor; componentsTimesofa::gui::qt::WindowVisitorprotected; componentsTimeMaxsofa::gui::qt::WindowVisitorprotected; componentsTimeTotalsofa::gui::qt::WindowVisitorprotected; componentType enum namesofa::gui::qt::WindowVisitor; controlPanelsofa::gui::qt::WindowVisitorprotected; expandNode(QTreeWidgetItem *item)sofa::gui::qt::WindowVisitor; expandNode()sofa::gui::qt::WindowVisitorslot; focusOn(QString focus)sofa::gui::qt::WindowVisitorslot; getComponentType(std::string name)sofa::gui::qt::WindowVisitorinlinestaticslot; getPixmap(componentType t)sofa::gui::qt::WindowVisitorinlinestaticslot; iconssofa::gui::qt::WindowVisitorprotectedstatic; NODE enum valuesofa::gui::qt::WindowVisitor; OTHER enum valuesofa::gui::qt::WindowVisitor; rightClick(const QPoint &point)sofa::gui::qt::WindowVisitorslot; setCharts(std::vector< dataTime > &latestC, std::vector< dataTime > &maxTC, std::vector< dataTime > &totalC, std::vector< dataTime > &latestV, std::vector< dataTime > &maxTV, std::vector< dataTime > &totalV)sofa::gui::qt::WindowVisitor; setCurrentCharts(int)sofa::gui::qt::WindowVisitorslot; setFocusOn(QTreeWidgetItem *item, QString text)sofa::gui::qt::WindowVisitorprotected; statsWidgetsofa::gui::qt::WindowVisitor; typeOfChartssofa::gui::qt::WindowVisitorprotected; VECTOR enum valuesofa::gui::qt::WindowVisitor; visitorsT",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_window_visitor-members.html:353,clear,clearGraph,353,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_window_visitor-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_window_visitor-members.html,1,['clear'],['clearGraph']
Usability, cleanEdgeTopologyFromDirty()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; cleanHexahedronTopologyFromDirty()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; cleanPointTopologyFromDirty()sofa::component::topology::container::dynamic::PointSetTopologyContainerprotected; cleanQuadTopologyFromDirty()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear() overridesofa::component::topology::container::dynamic::MultilevelHexahedronSetTopologyContainervirtual; clearEdges()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearEdgesAroundVertex()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearEdgesInHexahedron()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearEdgesInQuad()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; clearHexahedra()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearHexahedraAroundEdge()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearHexahedraAroundQuad()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearHexahedraAroundVertex()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearLoggedMessages() constsofa::core::objectmodel::Base; clearQuads()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; clearQuadsAroundEdge()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; clearQuadsAroundVertex()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; clearQuadsInHexahedron()sofa::component::topology::container::dynamic::HexahedronSetTopologyContain,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_multilevel_hexahedron_set_topology_container-members.html:5098,clear,clearEdgesInQuad,5098,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_multilevel_hexahedron_set_topology_container-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_multilevel_hexahedron_set_topology_container-members.html,1,['clear'],['clearEdgesInQuad']
Usability," clear()sofa::defaulttype::RigidCoord< 2, real >inline; fromHomogeneous(V v)sofa::defaulttype::RigidCoord< 2, real >inlinestatic; fromMatrix(const Mat &m)sofa::defaulttype::RigidCoord< 2, real >inline; getCenter()sofa::defaulttype::RigidCoord< 2, real >inline; getCenter() constsofa::defaulttype::RigidCoord< 2, real >inline; getOrientation()sofa::defaulttype::RigidCoord< 2, real >inline; getOrientation() constsofa::defaulttype::RigidCoord< 2, real >inline; HomogeneousMat typedefsofa::defaulttype::RigidCoord< 2, real >; HomogeneousVec typedefsofa::defaulttype::RigidCoord< 2, real >; identity()sofa::defaulttype::RigidCoord< 2, real >inlinestatic; inverseRotate(const Vec2 &v) constsofa::defaulttype::RigidCoord< 2, real >inline; max_size()sofa::defaulttype::RigidCoord< 2, real >inlinestatic; mult(const Vec2 &v) constsofa::defaulttype::RigidCoord< 2, real >inline; mult(const RigidCoord< 2, real > &c) constsofa::defaulttype::RigidCoord< 2, real >inline; multRight(const RigidCoord< 2, real > &c)sofa::defaulttype::RigidCoord< 2, real >inline; norm() constsofa::defaulttype::RigidCoord< 2, real >inline; norm2() constsofa::defaulttype::RigidCoord< 2, real >inline; operator!=(const RigidCoord< 2, real > &b) constsofa::defaulttype::RigidCoord< 2, real >inline; operator*(real2 a) constsofa::defaulttype::RigidCoord< 2, real >inline; operator*(const RigidCoord< 2, real > &a) constsofa::defaulttype::RigidCoord< 2, real >inline; operator*=(real2 a)sofa::defaulttype::RigidCoord< 2, real >inline; operator+(const RigidDeriv< 2, real > &a) constsofa::defaulttype::RigidCoord< 2, real >inline; operator+(const RigidCoord< 2, real > &a) constsofa::defaulttype::RigidCoord< 2, real >inline; operator+=(const RigidDeriv< 2, real > &",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1defaulttype_1_1_rigid_coord_3_012_00_01real_01_4-members.html:271,clear,clear,271,api/master/sofa/html/classsofa_1_1defaulttype_1_1_rigid_coord_3_012_00_01real_01_4-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1defaulttype_1_1_rigid_coord_3_012_00_01real_01_4-members.html,1,['clear'],['clear']
Usability," clear()sofa::defaulttype::RigidDeriv< 2, real >inline; getAngular()sofa::defaulttype::RigidDeriv< 2, real >inline; getAngular() constsofa::defaulttype::RigidDeriv< 2, real >inline; getLinear()sofa::defaulttype::RigidDeriv< 2, real >inline; getLinear() constsofa::defaulttype::RigidDeriv< 2, real >inline; getVAll() constsofa::defaulttype::RigidDeriv< 2, real >inline; getVCenter()sofa::defaulttype::RigidDeriv< 2, real >inline; getVCenter() constsofa::defaulttype::RigidDeriv< 2, real >inline; getVOrientation()sofa::defaulttype::RigidDeriv< 2, real >inline; getVOrientation() constsofa::defaulttype::RigidDeriv< 2, real >inline; norm() constsofa::defaulttype::RigidDeriv< 2, real >inline; operator!=(const RigidDeriv< 2, real > &b) constsofa::defaulttype::RigidDeriv< 2, real >inline; operator*(const RigidDeriv< 2, real > &a) constsofa::defaulttype::RigidDeriv< 2, real >inline; operator*=(real2 a)sofa::defaulttype::RigidDeriv< 2, real >inline; operator+(const RigidDeriv< 2, real > &a) constsofa::defaulttype::RigidDeriv< 2, real >inline; operator+=(const RigidDeriv< 2, real > &a)sofa::defaulttype::RigidDeriv< 2, real >inline; operator-(const RigidDeriv< 2, real > &a) constsofa::defaulttype::RigidDeriv< 2, real >inline; operator-() constsofa::defaulttype::RigidDeriv< 2, real >inline; operator-=(const RigidDeriv< 2, real > &a)sofa::defaulttype::RigidDeriv< 2, real >inline; operator/=(real2 a)sofa::defaulttype::RigidDeriv< 2, real >inline; operator<<(std::ostream &out, const RigidDeriv< 2, real > &v)sofa::defaulttype::RigidDeriv< 2, real >friend; operator=(const RigidDeriv< 2, real2 > &c)sofa::defaulttype::RigidDeriv< 2, real >inline; operator=(const type::Vec< 2, real2 > &v)sofa::defaulttype::RigidDeriv< 2, real >",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1defaulttype_1_1_rigid_deriv_3_012_00_01real_01_4-members.html:271,clear,clear,271,api/master/sofa/html/classsofa_1_1defaulttype_1_1_rigid_deriv_3_012_00_01real_01_4-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1defaulttype_1_1_rigid_deriv_3_012_00_01real_01_4-members.html,1,['clear'],['clear']
Usability," clear()sofa::defaulttype::RigidDeriv< 3, real >inline; getAngular()sofa::defaulttype::RigidDeriv< 3, real >inline; getAngular() constsofa::defaulttype::RigidDeriv< 3, real >inline; getLinear()sofa::defaulttype::RigidDeriv< 3, real >inline; getLinear() constsofa::defaulttype::RigidDeriv< 3, real >inline; getVAll() constsofa::defaulttype::RigidDeriv< 3, real >inline; getVCenter()sofa::defaulttype::RigidDeriv< 3, real >inline; getVCenter() constsofa::defaulttype::RigidDeriv< 3, real >inline; getVOrientation()sofa::defaulttype::RigidDeriv< 3, real >inline; getVOrientation() constsofa::defaulttype::RigidDeriv< 3, real >inline; norm() constsofa::defaulttype::RigidDeriv< 3, real >inline; operator!=(const RigidDeriv< 3, real > &b) constsofa::defaulttype::RigidDeriv< 3, real >inline; operator*(const RigidDeriv< 3, real > &a) constsofa::defaulttype::RigidDeriv< 3, real >inline; operator*=(real2 a)sofa::defaulttype::RigidDeriv< 3, real >inline; operator+(const RigidDeriv< 3, real > &a) constsofa::defaulttype::RigidDeriv< 3, real >inline; operator+=(const RigidDeriv &a)sofa::defaulttype::RigidDeriv< 3, real >inline; operator-() constsofa::defaulttype::RigidDeriv< 3, real >inline; operator-(const RigidDeriv< 3, real > &a) constsofa::defaulttype::RigidDeriv< 3, real >inline; operator-=(const RigidDeriv &a)sofa::defaulttype::RigidDeriv< 3, real >inline; operator/=(real2 a)sofa::defaulttype::RigidDeriv< 3, real >inline; operator<<(std::ostream &out, const RigidDeriv< 3, real > &v)sofa::defaulttype::RigidDeriv< 3, real >friend; operator=(const RigidDeriv< 3, real2 > &c)sofa::defaulttype::RigidDeriv< 3, real >inline; operator=(const type::Vec< 3, real2 > &v)sofa::defaulttype::RigidDeriv< 3, real >inline; operator=(cons",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1defaulttype_1_1_rigid_deriv_3_013_00_01real_01_4-members.html:271,clear,clear,271,api/master/sofa/html/classsofa_1_1defaulttype_1_1_rigid_deriv_3_013_00_01real_01_4-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1defaulttype_1_1_rigid_deriv_3_013_00_01real_01_4-members.html,1,['clear'],['clear']
Usability," clear()sofa::type::DualQuatCoord3< real >inline; DualQuatCoord3(const Quat &Dual, const Quat &orient)sofa::type::DualQuatCoord3< real >inline; DualQuatCoord3(const DualQuatCoord3< real2 > &c)sofa::type::DualQuatCoord3< real >inline; DualQuatCoord3(const Pos &p, const sofa::type::Quat< real > &q)sofa::type::DualQuatCoord3< real >inline; DualQuatCoord3()sofa::type::DualQuatCoord3< real >inline; getDual()sofa::type::DualQuatCoord3< real >inline; getDual() constsofa::type::DualQuatCoord3< real >inline; getOrientation()sofa::type::DualQuatCoord3< real >inline; getOrientation() constsofa::type::DualQuatCoord3< real >inline; getTranslation()sofa::type::DualQuatCoord3< real >inline; identity()sofa::type::DualQuatCoord3< real >inlinestatic; inverse()sofa::type::DualQuatCoord3< real >; inverseRotate(const Vec3 &v) constsofa::type::DualQuatCoord3< real >; invert()sofa::type::DualQuatCoord3< real >; max_size()sofa::type::DualQuatCoord3< real >inlinestatic; multLeft(const DualQuatCoord3< real > &c)sofa::type::DualQuatCoord3< real >; multLeft_getJ(type::Mat< 4, 4, real > &J0, type::Mat< 4, 4, real > &JE)sofa::type::DualQuatCoord3< real >; multRight(const DualQuatCoord3< real > &c) constsofa::type::DualQuatCoord3< real >; multRight_getJ(type::Mat< 4, 4, real > &J0, type::Mat< 4, 4, real > &JE)sofa::type::DualQuatCoord3< real >; norm() constsofa::type::DualQuatCoord3< real >inline; norm2() constsofa::type::DualQuatCoord3< real >; normalize()sofa::type::DualQuatCoord3< real >; normalize_applyJ(const DualQuatCoord3< real > &dq)sofa::type::DualQuatCoord3< real >; normalize_applyJT(const DualQuatCoord3< real > &dqn)sofa::type::DualQuatCoord3< real >; normalize_getdJ(type::Mat< 4, 4, real > &dJ0, type::Mat< 4, 4, real > &dJE, const D",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_dual_quat_coord3-members.html:259,clear,clear,259,api/master/sofa/html/classsofa_1_1type_1_1_dual_quat_coord3-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_dual_quat_coord3-members.html,1,['clear'],['clear']
Usability," const Mat< L2, C2, real > & ; m . ). inlineconstexprnoexcept . ◆ setsub() [2/2]. template<sofa::Size L, sofa::Size C, class real > . template<Size L2> . constexpr void sofa::type::Mat< L, C, real >::setsub ; (; Size ; L0, . Size ; C0, . const Vec< L2, real > & ; v . ). inlineconstexprnoexcept . ◆ size(). template<sofa::Size L, sofa::Size C, class real > . static constexpr sofa::Size sofa::type::Mat< L, C, real >::size ; (; void ; ). inlinestaticconstexpr . ◆ subTransposed(). template<sofa::Size L, sofa::Size C, class real > . constexpr void sofa::type::Mat< L, C, real >::subTransposed ; (; const Mat< C, L, real > & ; m). inlineconstexprnoexcept . Subtraction of the transposed of m. . ◆ symmetrize(). template<sofa::Size L, sofa::Size C, class real > . template<sofa::Size NbLine = L, sofa::Size NbColumn = C, typename = std::enable_if_t<NbLine == NbColumn>> . constexpr void sofa::type::Mat< L, C, real >::symmetrize ; (; ). inlineconstexprnoexcept . for square matrices Warningin-place simple symmetrization this = ( this + this.transposed() ) / 2.0 . ◆ toReal(). template<sofa::Size L, sofa::Size C, class real > . template<sofa::Size NbLine = L, sofa::Size NbColumn = C, typename = std::enable_if_t<NbLine == 1 && NbColumn == 1>> . constexpr real sofa::type::Mat< L, C, real >::toReal ; (; ); const. inlineconstexpr . ◆ transform(). template<sofa::Size L, sofa::Size C, class real > . constexpr Vec<C-1,real> sofa::type::Mat< L, C, real >::transform ; (; const Vec< C-1, real > & ; v); const. inlineconstexprnoexcept . Multiplication operator Matrix * Vector considering the matrix as a transformation. . ◆ transformInvert(). template<sofa::Size L, sofa::Size C, class real > . template<sofa::Size NbLine = L, sofa::Size NbColumn = C, typename = std::enable_if_t<NbLine == NbColumn>> . constexpr bool sofa::type::Mat< L, C, real >::transformInvert ; (; const Mat< L, C, real > & ; m). inlineconstexpr . Invert transformation matrix m. . ◆ transformRotation(). template<sofa::Size L, sofa",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_mat.html:29889,simpl,simple,29889,api/master/sofa/html/classsofa_1_1type_1_1_mat.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_mat.html,1,['simpl'],['simple']
Usability," const. inlinevirtual . Returnsthe number of rows of blocks ; Reimplemented in sofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >, sofa::linearalgebra::CompressedRowSparseMatrixMechanical< sofa::type::Mat< NL, NC, MReal > >, sofa::linearalgebra::CompressedRowSparseMatrixMechanical< MReal >, and sofa::linearalgebra::CompressedRowSparseMatrixMechanical< Real >. ◆ bRowsRange(). virtual std::pair<RowBlockConstIterator, RowBlockConstIterator> sofa::linearalgebra::BaseMatrix::bRowsRange ; (; ); const. inlinevirtual . Get the iterators corresponding to the beginning and end of the given row of blocks. ; Reimplemented in sofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >, sofa::linearalgebra::CompressedRowSparseMatrixMechanical< sofa::type::Mat< NL, NC, MReal > >, sofa::linearalgebra::CompressedRowSparseMatrixMechanical< MReal >, and sofa::linearalgebra::CompressedRowSparseMatrixMechanical< Real >. ◆ clear() [1/2]. virtual void sofa::linearalgebra::BaseMatrix::clear ; (; ). pure virtual . Reset all values to 0. ; Implemented in sofa::linearalgebra::SparseMatrix< T >, sofa::linearalgebra::SparseMatrix< SReal >, sofa::linearalgebra::SparseMatrix< Real >, sofa::linearalgebra::RotationMatrix< TReal >, sofa::linearalgebra::FullMatrix< T >, sofa::linearalgebra::FullMatrix< typename Vector::Real >, sofa::linearalgebra::FullMatrix< Real >, sofa::linearalgebra::EigenBaseSparseMatrix< TReal >, sofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >, sofa::linearalgebra::EigenBaseSparseMatrix< typename DataTypes::Real >, sofa::linearalgebra::DiagonalMatrix< T >, sofa::linearalgebra::DiagonalMatrix< R1 >, sofa::linearalgebra::DiagonalMatrix< R2 >, sofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >, sofa::linearalgebra::CompressedRowSparseMatrixMechanical< sofa::type::Mat< NL, NC, MReal > >, sofa::linearalgebra::CompressedRowSparseMatrixMechanical< MReal >, sofa::linearalgebra::CompressedRowSparseMatrixM",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_matrix.html:33454,clear,clear,33454,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_matrix.html,1,['clear'],['clear']
Usability," const;  ; void resize (Index nbRow, Index nbCol) override;  Resize the matrix and reset all values to 0. More...;  ; Index rowSize (void) const override;  Number of rows. More...;  ; Index colSize (void) const override;  Number of columns. More...;  ; SReal element (Index i, Index j) const override;  Read the value of the element at row i, column j (using 0-based indices) More...;  ; void set (Index i, Index j, double v) override;  Write the value of the element at row i, column j (using 0-based indices) More...;  ; void add (Index i, Index j, double v) override;  Add v to the existing value of the element at row i, column j (using 0-based indices) More...;  ; void clear (Index i, Index j) override;  ; void clearRow (Index i) override;  Reset all the values in row i to 0. More...;  ; void clearCol (Index j) override;  Reset the all values in column j to 0. More...;  ; void clearRowCol (Index i) override;  Reset the value of both row and column i to 0. More...;  ; void clear () override;  Reset all values to 0. More...;  ; FullVector< Real > operator* (const FullVector< Real > &v) const;  ; void mul (FullVector< Real > &res, const FullVector< Real > &b) const;  ; void mulT (FullVector< Real > &res, const FullVector< Real > &b) const;  ; FullMatrix< Real > operator* (const FullMatrix< Real > &m) const;  ; void mul (FullMatrix< Real > &res, const FullMatrix< Real > &m) const;  ; void mulT (FullMatrix< Real > &res, const FullMatrix< Real > &m) const;  ; const char * Name ();  ; const char * Name ();  ; const char * Name ();  ; const char * Name ();  ; virtual void add (Index row, Index col, double v)=0;  Add v to the existing value of the element at row i, column j (using 0-based indices) More...;  ; virtual void add (Index row, Index col, const type::Mat3x3d &_M);  Adding values from a 3x3d matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat3x3f &_M);  Adding values from a 3x3f matrix",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_full_matrix.html:2208,clear,clear,2208,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_full_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_full_matrix.html,1,['clear'],['clear']
Usability," const;  ; void resize (Index nbRow, Index nbCol) override;  Resize the matrix and reset all values to 0. More...;  ; Index rowSize (void) const override;  Number of rows. More...;  ; Index colSize (void) const override;  Number of columns. More...;  ; SReal element (Index i, Index j) const override;  Read the value of the element at row i, column j (using 0-based indices) More...;  ; void set (Index i, Index j, double v) override;  Write the value of the element at row i, column j (using 0-based indices) More...;  ; void add (Index i, Index j, double v) override;  Add v to the existing value of the element at row i, column j (using 0-based indices) More...;  ; void clear (Index i, Index j) override;  ; void clearRow (Index i) override;  Reset all the values in row i to 0. More...;  ; void clearCol (Index j) override;  Reset the all values in column j to 0. More...;  ; void clearRowCol (Index i) override;  Reset the value of both row and column i to 0. More...;  ; void clear () override;  Reset all values to 0. More...;  ; template<class Real2 > ; void mul (FullVector< Real2 > &res, const FullVector< Real2 > &v) const;  ; template<class Real2 > ; void addMulTranspose (FullVector< Real2 > &res, const FullVector< Real2 > &v) const;  ; template<class Real2 > ; void mul (FullVector< Real2 > &res, const linearalgebra::BaseVector *v) const;  ; template<class Real2 > ; void addMulTranspose (FullVector< Real2 > &res, const linearalgebra::BaseVector *v) const;  ; template<class Real2 > ; void mul (linearalgebra::BaseVector *res, const FullVector< Real2 > &v) const;  ; template<class Real2 > ; void addMulTranspose (linearalgebra::BaseVector *res, const FullVector< Real2 > &v) const;  ; void mul (linearalgebra::BaseVector *res, const linearalgebra::BaseVector *v) const;  ; void addMulTranspose (linearalgebra::BaseVector *res, const linearalgebra::BaseVector *v) const;  ; template<class Real2 > ; FullVector< Real2 > operator* (const FullVector< Real2 > &v) const;  ; MatrixExpr<",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_sparse_matrix.html:2040,clear,clear,2040,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_sparse_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_sparse_matrix.html,1,['clear'],['clear']
Usability," core::ConstraintParams * ; cparams). protected . Reset and build the constraint matrix, including the projection from the mapped DoFs ReturnsThe number of constraints, i.e. the size of the constraint matrix . ◆ buildLocalConstraintMatrix(). void sofa::component::constraint::lagrangian::solver::ConstraintSolverImpl::buildLocalConstraintMatrix ; (; const core::ConstraintParams * ; cparams, . unsigned int & ; constraintId . ). protected . Call the method buildConstraintMatrix on all the BaseConstraintSet. . ◆ cleanup(). void sofa::component::constraint::lagrangian::solver::ConstraintSolverImpl::cleanup ; (; ). overridevirtual . Called just before deleting this object Any object in the tree below this object that are to be removed will be removed only after this call, so any references this object holds should still be valid. ; Reimplemented from sofa::core::objectmodel::BaseObject.; Reimplemented in sofa::component::constraint::lagrangian::solver::GenericConstraintSolver. ◆ clearConstraintCorrections(). void sofa::component::constraint::lagrangian::solver::ConstraintSolverImpl::clearConstraintCorrections ; (; ). protected . ◆ getConstraintProblem(). virtual ConstraintProblem* sofa::component::constraint::lagrangian::solver::ConstraintSolverImpl::getConstraintProblem ; (; ). pure virtual . Implemented in sofa::component::constraint::lagrangian::solver::LCPConstraintSolver, and sofa::component::constraint::lagrangian::solver::GenericConstraintSolver. ◆ getConstraintViolation(). void sofa::component::constraint::lagrangian::solver::ConstraintSolverImpl::getConstraintViolation ; (; const core::ConstraintParams * ; cparams, . sofa::linearalgebra::BaseVector * ; v . ). protected . ◆ init(). void sofa::component::constraint::lagrangian::solver::ConstraintSolverImpl::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject.; Reimplemented in sofa::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_constraint_solver_impl.html:17718,clear,clearConstraintCorrections,17718,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_constraint_solver_impl.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_constraint_solver_impl.html,1,['clear'],['clearConstraintCorrections']
Usability," creation and modification, during top-down traversal. More...;  ; void initFromTopology ();  ; void initPositionFromVertices ();  ; void initFromFileMesh ();  ; void exportOBJ (std::string name, std::ostream *out, std::ostream *mtl, sofa::Index &vindex, sofa::Index &nindex, sofa::Index &tindex, int &count) override;  ; bool insertInNode (core::objectmodel::BaseNode *node) override;  ; bool removeInNode (core::objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; void setSrc (const std::string &v, std::v",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_model_impl.html:11523,clear,clearVisual,11523,api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_model_impl.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_model_impl.html,2,['clear'],"['clear', 'clearVisual']"
Usability," framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::io::ImageDDS Class Reference . #include <ImageDDS.h>. Inheritance diagram for sofa::helper::io::ImageDDS:. [legend]. Public Member Functions;  ImageDDS ();  ;  ImageDDS (const std::string &filename);  ; bool load (std::string filename) override;  ; bool save (std::string filename, int compression_level=-1) override;  ;  Public Member Functions inherited from sofa::helper::io::Image;  Image ();  ; virtual ~Image ();  ;  Image (const Image &rhs);  ; Image & operator= (const Image &rhs);  ; unsigned getWidth (unsigned mipmap=0) const;  ; unsigned getHeight (unsigned mipmap=0) const;  ; unsigned getDepth (unsigned mipmap=0) const;  ; unsigned getBytesPerPixel () const;  ; unsigned getBytesPerBlock () const;  ; unsigned getBytesPerChannel () const;  ; unsigned getChannelCount () const;  ; unsigned getMipmapCount () const;  ; unsigned getPixelCount () const;  ; unsigned getLineSize (unsigned mipmap=0) const;  ; unsigned getMipmapSize (unsigned mipmap) const;  ; unsigned getMipmapRangeSize (unsigned firstMipmap, unsigned mipmaps) const;  ; unsigned getImageSize () const;  ; DataType getDataType () const;  ; ChannelFormat getChannelFormat () const;  ; TextureType getTextureType () const;  ; unsigned char * getPixels ();  ; unsigned char * getMipmapPixels (unsigned mipmap);  ; unsigned char * getCubeMipmapPixels (unsigned cubeside, unsigned mipmap);  ; unsigned char * get3DSliceMipmapPixels (unsigned slice, unsigned mipmap);  ; void clear ();  ; void init (unsigned width, unsigned height, unsigned depth, unsigned mipmaps, DataType dataType, ChannelFormat channelFormat);  ; void init (unsigned width, unsigned height, unsigned bpp);  ; bool isLoaded () const;  . Additional Inherited Members;  Static Public Attributes inherited from sofa::helper::io::Image; static const char * strFromDataType [COUNT_OF_DATA_TYPES+1];  ; static const char * strFromChannelFormat [COUNT_OF_CHANNEL",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_image_d_d_s.html:1642,clear,clear,1642,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_image_d_d_s.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_image_d_d_s.html,1,['clear'],['clear']
Usability," i, Index j, T *buffer) constsofa::linearalgebra::BaseMatrixinline; blocGet(Index i, Index j) constsofa::linearalgebra::BaseMatrixinlinevirtual; blocGetW(Index i, Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; blocSet(Index i, Index j, const T *buffer)sofa::linearalgebra::BaseMatrixinline; bRowBegin(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowEnd(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowRange(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsBegin() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsEnd() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowSize() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsRange() constsofa::linearalgebra::BaseMatrixinlinevirtual; clear() overridesofa::linearalgebra::RotationMatrix< TReal >virtual; sofa::linearalgebra::BaseMatrix::clear(Index i, Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; clearCol(Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; clearCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRow(Index i)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowCol(Index i)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRows(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowsCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; cols(void) constsofa::linearalgebra::BaseMatrixinline; colSize(void) const overridesofa::linearalgebra::RotationMatrix< TReal >virtual; compress()sofa::linearalgebra::BaseMatrixvirtual; createBlockAccessor(Index row, Index col, void *internalPtr=nullptr)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockAccessor(Index row, Index col, Index internalData)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockConstAccessor(Index row, Index col, void *internalPtr=nullptr) constsofa::linearalgebra::BaseMatrixinlineprotected; createBlockConstAccessor(Index row, Index col, Index internalData) constsofa::linearalgebra::Base",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_rotation_matrix-members.html:5869,clear,clearCols,5869,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_rotation_matrix-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_rotation_matrix-members.html,1,['clear'],['clearCols']
Usability," ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowRange(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsBegin() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsEnd() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowSize() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsRange() constsofa::linearalgebra::BaseMatrixinlinevirtual; BSIZE enum valuesofa::linearalgebra::BlockFullMatrix< N, T >; clear(Index i, Index j) overridesofa::linearalgebra::BlockFullMatrix< N, T >virtual; clear() overridesofa::linearalgebra::BlockFullMatrix< N, T >virtual; clearCol(Index j) overridesofa::linearalgebra::BlockFullMatrix< N, T >virtual; clearCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRow(Index i) overridesofa::linearalgebra::BlockFullMatrix< N, T >virtual; clearRowCol(Index i) overridesofa::linearalgebra::BlockFullMatrix< N, T >virtual; clearRows(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowsCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; cols(void) constsofa::linearalgebra::BaseMatrixinline; colSize(void) const overridesofa::linearalgebra::BlockFullMatrix< N, T >virtual; compress()sofa::linearalgebra::BaseMatrixvirtual; createBlockAccessor(Index row, Index col, void *internalPtr=nullptr)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockAccessor(Index row, Index col, Index internalData)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockConstAccessor(Index row, Index col, void *internalPtr=nullptr) constsofa::linearalgebra::BaseMatrixinlineprotected; createBlockConstAccessor(Index row, Index col, Index internalData) constsofa::linearalgebra::BaseMatrixinlineprotected; createColBlockConstIterator(Index row, void *internalPtr) constsofa::linearalgebra::BaseMatrixinlineprotected; createColBlockConstIterator(Index row, Index internalData) constsofa::linearalgebra::BaseMatrixinlineprotected; createRowBlockConstIterator(void *internalP",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_full_matrix-members.html:6100,clear,clearRowsCols,6100,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_full_matrix-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_full_matrix-members.html,1,['clear'],['clearRowsCols']
Usability," ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsBegin() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsEnd() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowSize() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsRange() constsofa::linearalgebra::BaseMatrixinlinevirtual; category enum valuesofa::linearalgebra::DiagonalMatrix< T >; clear(Index i, Index j) overridesofa::linearalgebra::DiagonalMatrix< T >inlinevirtual; clear() overridesofa::linearalgebra::DiagonalMatrix< T >inlinevirtual; clear(Index i)sofa::linearalgebra::DiagonalMatrix< T >inline; clearCol(Index j) overridesofa::linearalgebra::DiagonalMatrix< T >inlinevirtual; clearCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRow(Index i) overridesofa::linearalgebra::DiagonalMatrix< T >inlinevirtual; clearRowCol(Index i) overridesofa::linearalgebra::DiagonalMatrix< T >inlinevirtual; clearRows(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowsCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; cols(void) constsofa::linearalgebra::BaseMatrixinline; colSize(void) const overridesofa::linearalgebra::DiagonalMatrix< T >inlinevirtual; compress()sofa::linearalgebra::BaseMatrixvirtual; createBlockAccessor(Index row, Index col, void *internalPtr=nullptr)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockAccessor(Index row, Index col, Index internalData)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockConstAccessor(Index row, Index col, void *internalPtr=nullptr) constsofa::linearalgebra::BaseMatrixinlineprotected; createBlockConstAccessor(Index row, Index col, Index internalData) constsofa::linearalgebra::BaseMatrixinlineprotected; createColBlockConstIterator(Index row, void *internalPtr) constsofa::linearalgebra::BaseMatrixinlineprotected; createColBlockConstIterator(Index row, Index internalData) constsofa::linearalgebra::BaseMatrixinlineprotected; createRowBlockConstIterator(void *interna",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_diagonal_matrix-members.html:6480,clear,clearRowsCols,6480,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_diagonal_matrix-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_diagonal_matrix-members.html,1,['clear'],['clearRowsCols']
Usability," if relevant. ; But resizing is not always relevant, for example:; nothing happens if FixedSize() is true;; sets can't be resized; they are cleared instead;; nothing happens for vectors containing resizable values (i.e. when BaseType()::FixedSize() is false), because of the ""single index"" abstraction;. Returns true iff the data was resizable ; Implements sofa::defaulttype::AbstractTypeInfo. ◆ setTextValue(). void sofa::defaulttype::NoTypeInfo::setTextValue ; (; void * ; , . Index ; , . const std::string & ;  . ); const. inlineoverridevirtual . Set the value at index of data from a string value. ; Implements sofa::defaulttype::AbstractTypeInfo. ◆ SimpleCopy(). bool sofa::defaulttype::NoTypeInfo::SimpleCopy ; (; ); const. inlineoverridevirtual . True iff copying the data can be done with a memcpy(). ; Implements sofa::defaulttype::AbstractTypeInfo. ◆ SimpleLayout(). bool sofa::defaulttype::NoTypeInfo::SimpleLayout ; (; ); const. inlineoverridevirtual . True iff the layout in memory is simply N values of the same base type. It means that you can use the abstract index system to iterate over the elements of the type. (It doesn't mean that the BaseType is of a fixed size) ; Implements sofa::defaulttype::AbstractTypeInfo. ◆ size() [1/2]. sofa::Size sofa::defaulttype::NoTypeInfo::size ; (; ); const. inlineoverridevirtual . The size of this type, in number of elements. For example, the size of a fixed_array<fixed_array<int, 2>, 3> is 6, and those six elements are conceptually numbered from 0 to 5. This is relevant only if FixedSize() is true. I FixedSize() is false, the return value will be equivalent to the one of byteSize() ; Implements sofa::defaulttype::AbstractTypeInfo. ◆ size() [2/2]. sofa::Size sofa::defaulttype::NoTypeInfo::size ; (; const void * ; ); const. inlineoverridevirtual . The size of data, in number of iterable elements (For containers, that'll be the number of elements in the 1st dimension). For example, with type == ` ; Implements sofa::defaulttype::Abst",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1defaulttype_1_1_no_type_info.html:8731,simpl,simply,8731,api/master/sofa/html/classsofa_1_1defaulttype_1_1_no_type_info.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1defaulttype_1_1_no_type_info.html,1,['simpl'],['simply']
Usability," in ms. More...;  ; SReal m_fpsMaxAxis;  Current Y max value of the graph (max ms encountered x1.1) More...;  ; std::deque< AnimationStepData * > m_profilingData;  Buffer of. More...;  ; QLineSeries * m_series;  Series of step duration in ms to be plot on the graph. size =. More...;  ; QLineSeries * m_selectionSeries;  Series of selection substep duration in ms to be plot on the graph. size =. More...;  ; std::unordered_map< std::string, CheckedSeries > m_checkedSeries;  ; std::string m_selectedStep;  Name of the substep selected in the Tree. More...;  ; std::string m_selectedParentStep;  Name of the parent of the substep selected in the Tree. More...;  . Public Member Functions;  SofaWindowProfiler (QWidget *parent);  ; void activateATimer (bool activate);  method called when window is shown to activate AdvancedTimer recording. More...;  ; void pushStepData ();  main method to iterate on the AdvancedTimer Data and update the info in the widgets More...;  ; void resetGraph ();  Method to clear all Data and reset graph. More...;  . Protected Member Functions; void createChart ();  Method called at creation to init the chart. More...;  ; void createTreeView ();  Method called at creation to init the QTreeWidget. More...;  ; void updateChart ();  Method called at each iteration to update the chart. More...;  ; QTreeWidgetItem * addTreeItem (AnimationSubStepData *subStep);  Method to add new QTreeWidgetItem item inside the QTreeWidget using the data from. More...;  ; QTreeWidgetItem * addTreeItem (const AnimationStepData *step);  . Signals; void closeWindow (bool);  . Public Slots; void closeEvent (QCloseEvent *) override;  ; void updateFromSelectedStep (int step);  Method to update all widgets from select absisse on the graph. More...;  ; void updateSummaryLabels (int step);  Method called when a given. More...;  ; void updateTree (int step);  Method called when a given. More...;  ; void onStepSelected (QTreeWidgetItem *item, int column);  Method called when a QTreeWidg",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_window_profiler.html:3293,clear,clear,3293,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_window_profiler.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_window_profiler.html,1,['clear'],['clear']
Usability," including all inherited members. begin() constsofa::helper::WriteAccessorVectorId< T >inline; begin()sofa::helper::WriteAccessorVectorId< T >inline; clear()sofa::helper::WriteAccessorVectorId< T >inline; const_iterator typedefsofa::helper::WriteAccessorVectorId< T >; const_reference typedefsofa::helper::WriteAccessorVectorId< T >; container_type typedefsofa::helper::WriteAccessorVectorId< T >; empty() constsofa::helper::WriteAccessorVectorId< T >inline; end() constsofa::helper::WriteAccessorVectorId< T >inline; end()sofa::helper::WriteAccessorVectorId< T >inline; Index typedefsofa::helper::WriteAccessorVectorId< T >; iterator typedefsofa::helper::WriteAccessorVectorId< T >; operator()(Index i) constsofa::helper::WriteAccessorVectorId< T >inline; operator()(Index i)sofa::helper::WriteAccessorVectorId< T >inline; operator<<(std::ostream &os, const WriteAccessorVectorId< T > &vec)sofa::helper::WriteAccessorVectorId< T >friend; operator>>(std::istream &in, WriteAccessorVectorId< T > &vec)sofa::helper::WriteAccessorVectorId< T >friend; operator[](Index i) constsofa::helper::WriteAccessorVectorId< T >inline; operator[](Index i)sofa::helper::WriteAccessorVectorId< T >inline; push_back(const_reference v)sofa::helper::WriteAccessorVectorId< T >inline; ref() constsofa::helper::WriteAccessorVectorId< T >inline; reference typedefsofa::helper::WriteAccessorVectorId< T >; reserve(Size s)sofa::helper::WriteAccessorVectorId< T >inline; resize(Size s, bool=true)sofa::helper::WriteAccessorVectorId< T >inline; size() constsofa::helper::WriteAccessorVectorId< T >inline; Size typedefsofa::helper::WriteAccessorVectorId< T >; value_type typedefsofa::helper::WriteAccessorVectorId< T >; vrefsofa::helper::WriteAccessorVectorId< T >protected; wref()sofa::helper::WriteAccessorVectorId< T >inline; WriteAccessorVectorId(container_type &container)sofa::helper::WriteAccessorVectorId< T >inline; ~WriteAccessorVectorId()sofa::helper::WriteAccessorVectorId< T >inline. Generated on Mon Nov 11 2024 03:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_write_accessor_vector_id-members.html:387,clear,clear,387,api/master/sofa/html/classsofa_1_1helper_1_1_write_accessor_vector_id-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_write_accessor_vector_id-members.html,1,['clear'],['clear']
Usability," inherited members. addChild(BaseElement *child)sofa::simulation::xml::BaseElementvirtual; addReplaceAttribute(const std::string &attr, const char *val)sofa::simulation::xml::BaseElementvirtual; AttributeMap typedefsofa::core::objectmodel::BaseObjectDescription; attributessofa::core::objectmodel::BaseObjectDescriptionprotected; BaseElement(const std::string &name, const std::string &type, BaseElement *newParent=nullptr)sofa::simulation::xml::BaseElement; BaseObjectDescription(const char *name=nullptr, const char *type=nullptr)sofa::core::objectmodel::BaseObjectDescription; begin()sofa::simulation::xml::BaseElementinline; begin()sofa::simulation::xml::BaseElementinline; clearErrors()sofa::core::objectmodel::BaseObjectDescriptioninlinevirtual; Create(const std::string &nodeClass, const std::string &name, const std::string &type)sofa::simulation::xml::BaseElementstatic; create(Node *, std::pair< std::string, std::string > arg)sofa::simulation::xml::BaseElementinlinestatic; DataElement(const std::string &name, const std::string &type, BaseElement *parent=nullptr)sofa::simulation::xml::DataElement; Element(const std::string &name, const std::string &type, BaseElement *newParent=nullptr)sofa::simulation::xml::Element< core::objectmodel::BaseObject >; end()sofa::simulation::xml::BaseElementinline; end()sofa::simulation::xml::BaseElementinline; errorssofa::core::objectmodel::BaseObjectDescriptionprotected; Factory typedefsofa::simulation::xml::Element< core::objectmodel::BaseObject >; find(const char *nodeName, bool absolute=false) overridesofa::simulation::xml::BaseElementinlinevirtual; findNode(const char *nodeName, bool absolute=false)sofa::simulation::xml::BaseElementvirtual; findObject(const char *nodeName)sofa::core::objectmodel::BaseObjectDescriptionvirtual; getAttribute(const std::string &attr, const char *defaultVal=nullptr)sofa::core::objectmodel::BaseObjectDescriptionvirtual; getAttributeAsFloat(const std::string &attr, const float defaultVal=0.0)sofa::core::objec",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1xml_1_1_data_element-members.html:917,clear,clearErrors,917,api/master/sofa/html/classsofa_1_1simulation_1_1xml_1_1_data_element-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1xml_1_1_data_element-members.html,1,['clear'],['clearErrors']
Usability," inlineoverridevirtual . Returnsthe number of rows of blocks ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ bRowsRange(). template<typename TBlock , typename TPolicy = CRSMechanicalPolicy> . virtual std::pair<RowBlockConstIterator, RowBlockConstIterator> sofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >::bRowsRange ; (; ); const. inlineoverridevirtual . Get the iterators corresponding to the beginning and end of the given row of blocks. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clear() [1/2]. template<typename TBlock , typename TPolicy = CRSMechanicalPolicy> . void sofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >::clear ; (; ). inlineoverridevirtual . Completely clear the matrix. ; Need implement clear to override BaseMatrix one. ; Implements sofa::linearalgebra::BaseMatrix. ◆ clear() [2/2]. template<typename TBlock , typename TPolicy = CRSMechanicalPolicy> . void sofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >::clear ; (; Index ; i, . Index ; j . ). inlineoverride . clear scalar at element i, j of matrix . ◆ clearCol(). template<typename TBlock , typename TPolicy = CRSMechanicalPolicy> . void sofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >::clearCol ; (; Index ; j). inlineoverride . Clear col scalar method. Clear this col in all row of matrix. ; Parameters. j: Col index considering size of matrix in scalar. . WarningIf you want to clear all value of a block, it is better to call clearColBlock . ◆ clearRow(). template<typename TBlock , typename TPolicy = CRSMechanicalPolicy> . void sofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >::clearRow ; (; Index ; i). inlineoverride . Clear row scalar method. Clear all col of this line. ; Parameters. i: Line index considering size of matrix in scalar. . WarningIf you want to clear all value of a block, it is better to call clearRowBlock . ◆ clearRowCol(). template<typenam",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical.html:48614,clear,clear,48614,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical.html,1,['clear'],['clear']
Usability," is considered as a rotation. ; More... Inheritance diagram for sofa::linearalgebra::RotationMatrix< TReal >:. [legend]; Detailed Description; template<class TReal>; class sofa::linearalgebra::RotationMatrix< TReal >; 3x3 block-diagonal matrix where each block is considered as a rotation. ; Template Parameters. TRealType of scalar. One of the feature of this class is to rotate another matrix: if M is a matrix and R is a rotation matrix, it can compute M * R. . Protected Attributes; type::vector< Real > data;  . Public Member Functions; sofa::SignedIndex rowSize (void) const override;  Number of rows. More...;  ; sofa::SignedIndex colSize (void) const override;  Number of columns. More...;  ; SReal element (Index i, sofa::SignedIndex j) const override;  Read the value of the element at row i, column j (using 0-based indices) More...;  ; void resize (sofa::SignedIndex nbRow, sofa::SignedIndex nbCol) override;  Resize the matrix and reset all values to 0. More...;  ; void clear () override;  Reset all values to 0. More...;  ; virtual void setIdentity ();  ; void set (sofa::SignedIndex i, sofa::SignedIndex j, double v) override;  Write the value of the element at row i, column j (using 0-based indices) More...;  ; void add (sofa::SignedIndex i, sofa::SignedIndex j, double v) override;  Add v to the existing value of the element at row i, column j (using 0-based indices) More...;  ; virtual type::vector< Real > & getVector ();  ; void opMulV (linearalgebra::BaseVector *result, const linearalgebra::BaseVector *v) const override;  Multiply the matrix by vector v and put the result in vector result. More...;  ; void opMulTV (linearalgebra::BaseVector *result, const linearalgebra::BaseVector *v) const override;  Multiply the transposed matrix by vector v and put the result in vector result. More...;  ; void opMulTM (linearalgebra::BaseMatrix *bresult, linearalgebra::BaseMatrix *bm) const override;  multiply the transpose current matrix by m matrix and store the result in m M",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_rotation_matrix.html:1433,clear,clear,1433,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_rotation_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_rotation_matrix.html,1,['clear'],['clear']
Usability," j) constsofa::linearalgebra::BaseMatrixinlinevirtual; blocGetW(Index i, Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; blocSet(Index i, Index j, const T *buffer)sofa::linearalgebra::BaseMatrixinline; bRowBegin(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowEnd(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowRange(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsBegin() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsEnd() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowSize() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsRange() constsofa::linearalgebra::BaseMatrixinlinevirtual; clear() overridesofa::core::behavior::AddToMatrixCompatMatrix< c >inlinevirtual; sofa::linearalgebra::BaseMatrix::clear(Index i, Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; clearCol(Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; clearCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRow(Index i)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowCol(Index i)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRows(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowsCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; cols(void) constsofa::linearalgebra::BaseMatrixinline; colSize() const overridesofa::core::behavior::AddToMatrixCompatMatrix< c >inlinevirtual; compatibilityMessagesofa::core::behavior::AddToMatrixCompatMatrix< c >static; componentsofa::core::behavior::AddToMatrixCompatMatrix< c >; compress()sofa::linearalgebra::BaseMatrixvirtual; createBlockAccessor(Index row, Index col, void *internalPtr=nullptr)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockAccessor(Index row, Index col, Index internalData)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockConstAccessor(Index row, Index col, void *internalPtr=nullptr) constsofa::linearalgebra::BaseMatrixinlineprotected; createBlockConstAccessor(Inde",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_add_to_matrix_compat_matrix-members.html:5307,clear,clearRow,5307,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_add_to_matrix_compat_matrix-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_add_to_matrix_compat_matrix-members.html,1,['clear'],['clearRow']
Usability," link) More...;  ;  Public Member Functions inherited from sofa::component::topology::container::dynamic::PointSetTopologyContainer;  SOFA_CLASS (PointSetTopologyContainer, core::topology::TopologyContainer);  ; void addPoint (SReal px, SReal py, SReal pz) override;  ; Size getNbPoints () const override;  Returns the number of vertices in this topology. More...;  ; void setNbPoints (Size n) override;  Set the number of vertices in this topology. More...;  ; bool hasPos () const override;  check if vertices in this topology have positions. More...;  ; SReal getPX (Index i) const override;  Returns the X coordinate of the ith DOF. More...;  ; SReal getPY (Index i) const override;  Returns the Y coordinate of the ith DOF. More...;  ; SReal getPZ (Index i) const override;  Returns the Z coordinate of the ith DOF. More...;  ; void addPoint ();  add one DOF in this topology (simply increment the number of DOF) More...;  ; void addPoints (const Size nPoints);  add a number of DOFs in this topology (simply increase the number of DOF according to this parameter) More...;  ; void removePoint ();  remove one DOF in this topology (simply decrement the number of DOF) More...;  ; void removePoints (const Size nPoints);  remove a number of DOFs in this topology (simply decrease the number of DOF according to this parameter) More...;  ;  Public Member Functions inherited from sofa::core::topology::TopologyContainer;  SOFA_CLASS2 (TopologyContainer, BaseTopologyObject, BaseMeshTopology);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; const SeqEdges & getEdges () override;  ; const SeqTriangles & getTriangles () override;  ; const SeqQuads & getQuads () override;  ; const SeqTetrahedra & getTetrahedra () override;  ; const SeqHexahedra & getHexahedra () override;  ; int getRevision () const override;  Get the current revision of this mesh. More...;  ; const std::list< const TopologyChange * > & getCha",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_container.html:17710,simpl,simply,17710,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_container.html,6,['simpl'],['simply']
Usability," missing device data, up to where entries should be set to zero ? More...;  ; T * hostPointer;  Pointer to the data on the CPU side. More...;  ; int deviceIsValid;  True if the data on the GPU is currently valid (up to the given deviceVectorSize of each device, i.e. additional space may need to be allocated and/or initialized) More...;  ; bool hostIsValid;  True if the data on the CPU is currently valid. More...;  ; bool bufferIsRegistered;  True if the buffer is registered with CUDA. More...;  ; buffer_id_type bufferObject;  Optional associated buffer ID. More...;  . Static Protected Attributes; static int cptid = 0;  . Public Member Functions;  vector_device ();  ;  vector_device (const Size n);  ;  vector_device (const vector_device< T, MemoryManager, DataTypeInfoManager > &v);  ;  vector_device (const std::initializer_list< T > &t);  ; bool isHostValid () const;  ; bool isDeviceValid (unsigned gpu) const;  ; void clear ();  ; void operator= (const vector_device< T, MemoryManager, DataTypeInfoManager > &v);  ;  ~vector_device ();  ; Size size () const;  ; Size capacity () const;  ; bool empty () const;  ; void reserve (Size s, Size WARP_SIZE=MemoryManager::BSIZE);  ; void fastResize (Size s, Size WARP_SIZE=MemoryManager::BSIZE);  resize the vector without calling constructors or destructors, and without synchronizing the device and host copy More...;  ; void recreate (Size s, Size WARP_SIZE=MemoryManager::BSIZE);  resize the vector discarding any old values, without calling constructors or destructors, and without synchronizing the device and host copy More...;  ; void invalidateDevice ();  ; void invalidateHost ();  ; void memsetDevice (int v=0);  ; void memsetHost (int v=0);  ; void resize (Size s, Size WARP_SIZE=MemoryManager::BSIZE);  ; void swap (vector_device< T, MemoryManager, DataTypeInfoManager > &v);  ; const device_pointer deviceReadAt (int i, int gpu=MemoryManager::getBufferDevice()) const;  ; const device_pointer deviceRead (int gpu=MemoryManager::ge",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1vector__device.html:1847,clear,clear,1847,api/master/sofa/html/classsofa_1_1type_1_1vector__device.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1vector__device.html,1,['clear'],['clear']
Usability, my system python as part of a larger tool chain?. /can-sofa-cut-the-volume-eg-liver; ; SOFA - Topic: Can Sofa cut the volume (eg liver)?. /cant-build-pluginexample; . /feed; ; [SOLVED] Can’t build PluginExample – SOFA. SOFA - Topic: [SOLVED] Can’t build PluginExample. /cant-build-sofa-with-the-stlib-and-soft-robots-plugin; ; SOFA - Topic: Cant build sofa with the STLIB and soft robots plugin. /cant-find-runsofa-in-bin-directory; . /feed; ; [SOLVED] can’t find runsofa in bin directory – SOFA. SOFA - Topic: [SOLVED] can’t find runsofa in bin directory. /cant-find-the-file-sofapython3_d-lib; ; SOFA - Topic: cant find the file SofaPython3_d.lib. /cant-launch-runsofa; . /feed; ; [SOLVED] Can’t launch runSofa – SOFA. SOFA - Topic: [SOLVED] Can’t launch runSofa. /cant-launch-runsofa-exe; ; SOFA - Topic: [SOLVED] can't launch runSofa.exe. /cant-load-my-off-file-using-meshoffloader; ; SOFA - Topic: [SOLVED] Can't load my .off file using MeshOffLoader. /cardiac-guide-wire-modelling; ; SOFA - Topic: [SOLVED] Cardiac Guide-Wire Modelling. /carving-algorithm; ; SOFA - Topic: Carving algorithm ?. /carving-grid-topology; ; SOFA - Topic: Carving Grid topology. /carving-into-model-does-not-work-when-using-another-model; ; SOFA - Topic: Carving into model does not work when using another model. /carvingmanager-omnievent-applications-who-wrote-these-can-we-chat; . /page; . /3; ; SOFA - Topic: CarvingManager & OmniEvent applications: who wrote these? Can we chat?. /4; ; SOFA - Topic: CarvingManager & OmniEvent applications: who wrote these? Can we chat?. /5; ; SOFA - Topic: CarvingManager & OmniEvent applications: who wrote these? Can we chat?. SOFA - Topic: CarvingManager & OmniEvent applications: who wrote these? Can we chat?. /c-code-in-tetrahedralcorotationalfemforcefield-cpp-h-inl; ; SOFA - Topic: [SOLVED] C++ code in TetrahedralCorotationalFEMForceField.cpp/.h/.inl. /cgal-configuration; ; SOFA - Topic: CGAL Configuration. /cgal-plugin-4-7-v21-06; ; SOFA - Topic: [SOLVED] CGAL pl,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:270875,guid,guide-wire-modelling,270875,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['guid'],['guide-wire-modelling']
Usability," n, . const double * ; src . ). inlinevirtual . Add to the values of n double elements, starting at element i0. . ◆ add() [3/4]. virtual void sofa::linearalgebra::BaseVector::add ; (; Index ; i0, . Index ; n, . const float * ; src . ). inlinevirtual . Add to the values of n float elements, starting at element i0. . ◆ add() [4/4]. virtual void sofa::linearalgebra::BaseVector::add ; (; Index ; i0, . Index ; n, . const int * ; src . ). inlinevirtual . Add to the values of n int elements, starting at element i0. . ◆ addDefaultImpl(). template<class T > . void sofa::linearalgebra::BaseVector::addDefaultImpl ; (; Index ; i0, . Index ; n, . const T * ; src . ). inlineprotected . ◆ clear() [1/2]. virtual void sofa::linearalgebra::BaseVector::clear ; (; ). pure virtual . Reset all values to 0. ; Implemented in sofa::linearalgebra::FullVector< T >, sofa::linearalgebra::FullVector< Real >, sofa::linearalgebra::FullVector< SReal >, and sofa::linearalgebra::EigenVector< TReal, TBlockSize >. ◆ clear() [2/2]. virtual void sofa::linearalgebra::BaseVector::clear ; (; Index ; i). inlinevirtual . Reset the value of element i to 0. ; Reimplemented in sofa::linearalgebra::EigenVector< TReal, TBlockSize >, sofa::linearalgebra::FullVector< T >, sofa::linearalgebra::FullVector< Real >, and sofa::linearalgebra::FullVector< SReal >. ◆ element(). virtual SReal sofa::linearalgebra::BaseVector::element ; (; Index ; i); const. pure virtual . Read the value of element i. ; Implemented in sofa::linearalgebra::FullVector< T >, sofa::linearalgebra::FullVector< Real >, sofa::linearalgebra::FullVector< SReal >, and sofa::linearalgebra::EigenVector< TReal, TBlockSize >. ◆ elements() [1/3]. virtual const double* sofa::linearalgebra::BaseVector::elements ; (; Index ; i0, . Index ; n, . double * ; src . ); const. inlinevirtual . Get the values of n elements, starting at element i0, into given double buffer, or return the pointer to the data if the in-memory format is compatible. . ◆ elements() [2/3]. virtu",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_vector.html:5162,clear,clear,5162,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_vector.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_vector.html,1,['clear'],['clear']
Usability," of all members . sofa::linearalgebra::matrix_bloc_traits< T, IndexType > Class Template Reference . #include <matrix_bloc_traits.h>. Static Public Member Functions; static Real & v (Block &b, IndexType row, IndexType col);  ; static const Real & v (const Block &b, IndexType row, IndexType col);  ; static void vset (Block &b, int row, int col, Real val);  ; static void vadd (Block &b, int row, int col, Real val);  ; static void clear (Block &b);  ; static bool empty (const Block &b);  ; static void invert (Block &result, const Block &b);  ; static void split_row_index (IndexType &index, IndexType &modulo);  ; static void split_col_index (IndexType &index, IndexType &modulo);  ; template<class TSubBlock > ; static void subBlock (const Block &b, IndexType row, IndexType col, TSubBlock &subBlock);  ; static sofa::linearalgebra::BaseMatrix::ElementType getElementType ();  . Function details. ◆ clear(). template<class T , typename IndexType > . static void sofa::linearalgebra::matrix_bloc_traits< T, IndexType >::clear ; (; Block & ; b). inlinestatic . ◆ empty(). template<class T , typename IndexType > . static bool sofa::linearalgebra::matrix_bloc_traits< T, IndexType >::empty ; (; const Block & ; b). inlinestatic . ◆ getElementType(). template<class T , typename IndexType > . static sofa::linearalgebra::BaseMatrix::ElementType sofa::linearalgebra::matrix_bloc_traits< T, IndexType >::getElementType ; (; ). inlinestatic . ◆ invert(). template<class T , typename IndexType > . static void sofa::linearalgebra::matrix_bloc_traits< T, IndexType >::invert ; (; Block & ; result, . const Block & ; b . ). inlinestatic . ◆ split_col_index(). template<class T , typename IndexType > . static void sofa::linearalgebra::matrix_bloc_traits< T, IndexType >::split_col_index ; (; IndexType & ; index, . IndexType & ; modulo . ). inlinestatic . ◆ split_row_index(). template<class T , typename IndexType > . static void sofa::linearalgebra::matrix_bloc_traits< T, IndexType >::split_row_index ; ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1matrix__bloc__traits.html:1230,clear,clear,1230,api/master/sofa/html/classsofa_1_1linearalgebra_1_1matrix__bloc__traits.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1matrix__bloc__traits.html,1,['clear'],['clear']
Usability," override;  number of rows More...;  ; Index colSize (void) const override;  number of columns More...;  ; void reserve (typename CompressedMatrix::Index reserveSize);  ; SReal element (Index i, Index j) const override;  Read the value of the element at row i, column j (using 0-based indices) More...;  ; void compress () override;  Add the values from the scheduled list, and clears the schedule list. More...;  ; Index * getRowBegin ();  ; Index * getColsIndex ();  ; Real * getColsValue ();  ; void clearRow (Index i) override;  Set all the entries of a row to 0. More...;  ; void clearRows (Index imin, Index imax) override;  Set all the entries of rows imin to imax-1 to 0. More...;  ; void clearCol (Index col) override;  Clears the all the entries of column imin to column imax-1. Not efficient ! More...;  ; void clearCols (Index imin, Index imax) override;  Set all the entries of column i and of row i to 0. Not efficient ! More...;  ; void clearRowCol (Index i) override;  Clears all the entries of rows imin to imax-1 and columns imin to imax-1. More...;  ; void clearRowsCols (Index imin, Index imax) override;  Clears all the values in rows imin to imax-1 and columns imin to imax-1. More...;  ; void clear () override;  Set all values to 0, by resizing to the same size. More...;  ; void mult (VectorEigen &result, const VectorEigen &data);  Matrix-vector product. More...;  ; void mult_MT (VectorEigen &result, const VectorEigen &data);  Matrix-vector product openmp multithreaded. More...;  ; template<class V1 , class V2 > ; void multVector (V1 &output, const V2 &input);  Matrix-Vector product (dense vector with contiguous memory layout) More...;  ; template<class V > ; V operator* (const V &input);  Matrix-Vector product (dense vector with contiguous memory layout) More...;  ; bool choleskyDecompose ();  Try to compute the LDLT decomposition, and return true if success. The matrix is unchanged. More...;  ; void choleskySolve (VectorEigen &x, const VectorEigen &b) const;  ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_base_sparse_matrix.html:3991,clear,clearRowCol,3991,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_base_sparse_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_base_sparse_matrix.html,1,['clear'],['clearRowCol']
Usability," override;  number of rows More...;  ; Index colSize (void) const override;  number of columns More...;  ; void reserve (typename CompressedMatrix::Index reserveSize);  ; SReal element (Index i, Index j) const override;  Read the value of the element at row i, column j (using 0-based indices) More...;  ; void compress () override;  Add the values from the scheduled list, and clears the schedule list. More...;  ; Index * getRowBegin ();  ; Index * getColsIndex ();  ; Real * getColsValue ();  ; void clearRow (Index i) override;  Set all the entries of a row to 0. More...;  ; void clearRows (Index imin, Index imax) override;  Set all the entries of rows imin to imax-1 to 0. More...;  ; void clearCol (Index col) override;  Clears the all the entries of column imin to column imax-1. Not efficient ! More...;  ; void clearCols (Index imin, Index imax) override;  Set all the entries of column i and of row i to 0. Not efficient ! More...;  ; void clearRowCol (Index i) override;  Clears all the entries of rows imin to imax-1 and columns imin to imax-1. More...;  ; void clearRowsCols (Index imin, Index imax) override;  Clears all the values in rows imin to imax-1 and columns imin to imax-1. More...;  ; void clear () override;  Set all values to 0, by resizing to the same size. More...;  ; void mult (VectorEigen &result, const VectorEigen &data);  Matrix-vector product. More...;  ; void mult_MT (VectorEigen &result, const VectorEigen &data);  Matrix-vector product openmp multithreaded. More...;  ; void multVector (V1 &output, const V2 &input);  Matrix-Vector product (dense vector with contiguous memory layout) More...;  ; V operator* (const V &input);  Matrix-Vector product (dense vector with contiguous memory layout) More...;  ; const char * Name ();  ; const char * Name ();  ; bool choleskyDecompose ();  Try to compute the LDLT decomposition, and return true if success. The matrix is unchanged. More...;  ; void choleskySolve (VectorEigen &x, const VectorEigen &b) const;  Solv",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_sparse_matrix.html:5262,clear,clearRowCol,5262,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_sparse_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_sparse_matrix.html,1,['clear'],['clearRowCol']
Usability, overridevirtual . Checks if the topology has only one connected component. ; Get information about connexity of the mesh; Returnstrue if only one connected component; Get information about connexity of the mesh ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer. ◆ checkTopology(). bool sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer::checkTopology ; (; ); const. overridevirtual . Checks if the topology is coherent. ; Check if the shell arrays are coherent See alsom_hexahedron . m_edgesInHexahedron . m_quadsInHexahedron . m_hexahedraAroundVertex . m_hexahedraAroundEdge . m_hexahedraAroundQuad ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer. ◆ cleanHexahedronTopologyFromDirty(). void sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer::cleanHexahedronTopologyFromDirty ; (; ). protected . ◆ clear(). void sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer::clear ; (; ). overridevirtual . Procedural creation methods ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer.; Reimplemented in sofa::component::topology::container::dynamic::MultilevelHexahedronSetTopologyContainer. ◆ clearEdgesInHexahedron(). void sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer::clearEdgesInHexahedron ; (; ). protected . ◆ clearHexahedra(). void sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer::clearHexahedra ; (; ). protected . ◆ clearHexahedraAroundEdge(). void sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer::clearHexahedraAroundEdge ; (; ). protected . ◆ clearHexahedraAroundQuad(). void sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer::clearHexahedraAroundQuad ; (; ). protected . ◆ clearHexahedraAroundVertex(). void sofa::component::topology::container::dynamic::Hexahed,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_topology_container.html:48879,clear,clear,48879,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_topology_container.html,1,['clear'],['clear']
Usability," parameter. ; Reimplemented from sofa::core::behavior::BaseProjectiveConstraintSet.; Reimplemented in sofa::component::constraint::projective::PartialFixedProjectiveConstraint< DataTypes >. ◆ applyConstraint() [3/3]. template<class DataTypes > . void sofa::component::constraint::projective::FixedProjectiveConstraint< DataTypes >::applyConstraint ; (; sofa::core::behavior::ZeroDirichletCondition * ; zeroDirichletCondition). overridevirtual . Project the global matrix to constrained space by using the ZeroDirichletCondition interface It allows to define what rows and columns to discard for the projection. ; Reimplemented from sofa::core::behavior::BaseProjectiveConstraintSet.; Reimplemented in sofa::component::constraint::projective::PartialFixedProjectiveConstraint< DataTypes >. ◆ checkIndices(). template<class DataTypes > . void sofa::component::constraint::projective::FixedProjectiveConstraint< DataTypes >::checkIndices. protected . Function check values of given indices. . ◆ clearConstraints(). template<class DataTypes > . void sofa::component::constraint::projective::FixedProjectiveConstraint< DataTypes >::clearConstraints. ◆ computeBBox(). template<class DataTypes > . void sofa::component::constraint::projective::FixedProjectiveConstraint< DataTypes >::computeBBox ; (; const core::ExecParams * ; , . bool ;  . ). overridevirtual . Bounding Box computation method. Default to empty method. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ computeBBoxForIndices(). template<class DataTypes > . void sofa::component::constraint::projective::FixedProjectiveConstraint< DataTypes >::computeBBoxForIndices ; (; const type::vector< Index > & ; indices). protected . ◆ draw(). template<class DataTypes > . void sofa::component::constraint::projective::FixedProjectiveConstraint< DataTypes >::draw ; (; const core::visual::VisualParams * ; ). overridevirtual . Render internal data of this object, for debugging purposes. ; Reimplemented from sofa::core::objectmodel::BaseO",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_projective_constraint.html:24365,clear,clearConstraints,24365,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_projective_constraint.html,1,['clear'],['clearConstraints']
Usability," parentForce, core::ConstMultiVecDerivId childForce) override;  Accumulate a change of parent force due to the change of the mapping, for a constant child force. Null for linear mappings. More...;  ; const sofa::linearalgebra::BaseMatrix * getJ () override;  ; virtual const type::vector< sofa::linearalgebra::BaseMatrix * > * getJs () override;  ; void updateK (const core::MechanicalParams *mparams, core::ConstMultiVecDerivId childForceId) override;  ; const linearalgebra::BaseMatrix * getK () override;  ; void buildGeometricStiffnessMatrix (sofa::core::GeometricStiffnessMatrix *matrices) override;  Assembles the geometric stiffness matrix of the mapping in the provided matrix object. More...;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; void clear (sofa::Size reserve=0);  ; void setRepartition (sofa::Size value);  ; void setRepartition (sofa::type::vector< sofa::Size > values);  ; void parse (core::objectmodel::BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; void getGlobalToLocalCoords (OutCoord &result, const InCoord &xfrom, const OutCoord &xto);  ; void updateOmega (typename InDeriv::Rot &omega, const OutDeriv &out, const OutCoord &rotatedpoint);  ; void getGlobalToLocalCoords (OutCoord &result, const InCoord &xFrom, const OutCoord &xTo);  ; void updateOmega (typename InDeriv::Rot &omega, const OutDeriv &out, const OutCoord &rotatedpoint);  ; void updateK (const core::MechanicalParams *, core::ConstMultiVecDerivId);  ; const linearalgebra::BaseMatrix * getK ();  ; void updateK (const core::MechanicalParams *mparams, core::ConstMultiVecDerivId childForceId);  ; const linearalgebra::BaseMatrix * getK ();  ;  Public Member Functions inherited from sofa::core::Mapping< TIn, TOut >;  SOFA_ABSTRACT_CLASS (SOFA_TEMPLATE2(Mapping, TIn, TOut), BaseMapping);  ; virtual void s",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_rigid_mapping.html:7285,clear,clear,7285,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_rigid_mapping.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_rigid_mapping.html,1,['clear'],['clear']
Usability," pitch);  ;  ~FullMatrix () override;  ; Real * ptr ();  ; const Real * ptr () const;  ; LineIterator begin ();  ; LineIterator end ();  ; LineConstIterator begin () const;  ; LineConstIterator end () const;  ; Real * operator[] (Index i);  ; const Real * operator[] (Index i) const;  ; void resize (Index nbRow, Index nbCol) override;  Resize the matrix and reset all values to 0. More...;  ; Index rowSize (void) const override;  Number of rows. More...;  ; Index colSize (void) const override;  Number of columns. More...;  ; SReal element (Index i, Index j) const override;  Read the value of the element at row i, column j (using 0-based indices) More...;  ; void set (Index i, Index j, double v) override;  Write the value of the element at row i, column j (using 0-based indices) More...;  ; void add (Index i, Index j, double v) override;  Add v to the existing value of the element at row i, column j (using 0-based indices) More...;  ; void clear (Index i, Index j) override;  ; void clearRow (Index i) override;  Reset all the values in row i to 0. More...;  ; void clearCol (Index j) override;  Reset the all values in column j to 0. More...;  ; void clearRowCol (Index i) override;  Reset the value of both row and column i to 0. More...;  ; void clear () override;  Reset all values to 0. More...;  ; FullVector< Real > operator* (const FullVector< Real > &v) const;  ; void mul (FullVector< Real > &res, const FullVector< Real > &b) const;  ; void mulT (FullVector< Real > &res, const FullVector< Real > &b) const;  ; FullMatrix< Real > operator* (const FullMatrix< Real > &m) const;  ; void mul (FullMatrix< Real > &res, const FullMatrix< Real > &m) const;  ; void mulT (FullMatrix< Real > &res, const FullMatrix< Real > &m) const;  ; const char * Name ();  ; const char * Name ();  ; const char * Name ();  ; const char * Name ();  ; virtual void add (Index row, Index col, double v)=0;  Add v to the existing value of the element at row i, column j (using 0-based indices) More...; ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_full_matrix.html:1899,clear,clear,1899,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_full_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_full_matrix.html,2,['clear'],"['clear', 'clearRow']"
Usability," position).; This method must be implemented by the component, and is usually called by the generic ProjectiveConstraintSet::projectPosition() method. ; Implements sofa::core::behavior::ProjectiveConstraintSet< DataTypes >. ◆ projectResponse(). template<class DataTypes > . void sofa::component::constraint::projective::HermiteSplineProjectiveConstraint< DataTypes >::projectResponse ; (; const core::MechanicalParams * ; mparams, . DataVecDeriv & ; dx . ). overridevirtual . Project dx to constrained space (dx models an acceleration).; This method must be implemented by the component, and is usually called by the generic ProjectiveConstraintSet::projectResponse() method. ; Implements sofa::core::behavior::ProjectiveConstraintSet< DataTypes >. ◆ projectResponseT(). template<class DataTypes > . template<class DataDeriv > . void sofa::component::constraint::projective::HermiteSplineProjectiveConstraint< DataTypes >::projectResponseT ; (; DataDeriv & ; dx, . const std::function< void(DataDeriv &, const unsigned int)> & ; clear . ). protected . ◆ projectVelocity(). template<class DataTypes > . void sofa::component::constraint::projective::HermiteSplineProjectiveConstraint< DataTypes >::projectVelocity ; (; const core::MechanicalParams * ; mparams, . DataVecDeriv & ; v . ). overridevirtual . Project v to constrained space (v models a velocity).; This method must be implemented by the component, and is usually called by the generic ProjectiveConstraintSet::projectVelocity() method. ; Implements sofa::core::behavior::ProjectiveConstraintSet< DataTypes >. ◆ reinit(). template<class DataTypes > . void sofa::component::constraint::projective::HermiteSplineProjectiveConstraint< DataTypes >::reinit. overridevirtual . Update method called when variables used in precomputation are modified. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ setBeginTime(). template<class DataTypes > . void sofa::component::constraint::projective::HermiteSplineProjectiveConstraint< DataTypes >",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_hermite_spline_projective_constraint.html:29203,clear,clear,29203,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_hermite_spline_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_hermite_spline_projective_constraint.html,1,['clear'],['clear']
Usability," projection of a point from the local frame to the reference frame More...;  ; Frame inversed () const;  Transformation from the reference frame to the local frame. More...;  . Static Public Member Functions; static Frame identity ();  The identity transform. More...;  . Friends; std::ostream & operator<< (std::ostream &out, const Frame &c);  . Constructor details. ◆ Frame() [1/4]. sofa::type::Frame::Frame ; (; const Vec3 & ; origin, . const Mat33 & ; matrix . ). Define the local frame using origin and basis vectors . ◆ Frame() [2/4]. sofa::type::Frame::Frame ; (; const Vec3 & ; origin, . const Quat & ; orientation, . const Vec3 & ; scale = Vec3(1_sreal,1_sreal,1_sreal) . ). Define the local frame using three transforms . ◆ Frame() [3/4]. sofa::type::Frame::Frame ; (; const Vec3 & ; origin). Define the local frame without rotation . ◆ Frame() [4/4]. sofa::type::Frame::Frame ; (; ). Default constructor set the transformation to identity. . Function details. ◆ clear(). void sofa::type::Frame::clear ; (; ). Reset the transformation to identity. . ◆ getBasis() [1/2]. Frame::Mat33 & sofa::type::Frame::getBasis ; (; ). The columns represent the base vectors of the local frame wrt the reference frame. . ◆ getBasis() [2/2]. const Frame::Mat33 & sofa::type::Frame::getBasis ; (; ); const. The columns represent the base vectors of the local frame wrt the reference frame. . ◆ getOrigin() [1/2]. Vec3 & sofa::type::Frame::getOrigin ; (; ). Origin of the local frame in the reference frame,. . ◆ getOrigin() [2/2]. const Vec3 & sofa::type::Frame::getOrigin ; (; ); const. Origin of the local frame in the reference frame,. . ◆ identity(). Frame sofa::type::Frame::identity ; (; ). static . The identity transform. . ◆ inversed(). Frame sofa::type::Frame::inversed ; (; ); const. Transformation from the reference frame to the local frame. ; Compute the transformation from the parent to the child. . ◆ mult(). Frame sofa::type::Frame::mult ; (; const Frame & ; c); const. compute the product",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_frame.html:3959,clear,clear,3959,api/master/sofa/html/classsofa_1_1type_1_1_frame.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_frame.html,1,['clear'],['clear']
Usability," row, Index col, Real value);  ; Real & coeffRef (Index i, Index j);  Return a reference to the given entry in the compressed matrix.There can (must ?) be a value at this place already. Efficient only if the it is at the last place of the compressed matrix. More...;  ; void copy (const EigenBaseSparseMatrix &m, unsigned nbCol, unsigned shift);  ; void resize (Index nbRow, Index nbCol) override;  Resize the matrix without preserving the data (the matrix is set to zero) More...;  ; Index rowSize (void) const override;  number of rows More...;  ; Index colSize (void) const override;  number of columns More...;  ; void reserve (typename CompressedMatrix::Index reserveSize);  ; SReal element (Index i, Index j) const override;  Read the value of the element at row i, column j (using 0-based indices) More...;  ; void compress () override;  Add the values from the scheduled list, and clears the schedule list. More...;  ; Index * getRowBegin ();  ; Index * getColsIndex ();  ; Real * getColsValue ();  ; void clearRow (Index i) override;  Set all the entries of a row to 0. More...;  ; void clearRows (Index imin, Index imax) override;  Set all the entries of rows imin to imax-1 to 0. More...;  ; void clearCol (Index col) override;  Clears the all the entries of column imin to column imax-1. Not efficient ! More...;  ; void clearCols (Index imin, Index imax) override;  Set all the entries of column i and of row i to 0. Not efficient ! More...;  ; void clearRowCol (Index i) override;  Clears all the entries of rows imin to imax-1 and columns imin to imax-1. More...;  ; void clearRowsCols (Index imin, Index imax) override;  Clears all the values in rows imin to imax-1 and columns imin to imax-1. More...;  ; void clear () override;  Set all values to 0, by resizing to the same size. More...;  ; void mult (VectorEigen &result, const VectorEigen &data);  Matrix-vector product. More...;  ; void mult_MT (VectorEigen &result, const VectorEigen &data);  Matrix-vector product openmp multi",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_base_sparse_matrix.html:3542,clear,clearRow,3542,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_base_sparse_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_base_sparse_matrix.html,2,['clear'],['clearRow']
Usability," sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeInstance(Instance inst) overridesofa::core::collision::CollisionGroupManagerinlineprotectedvirtual; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearGroups(objectmodel::BaseContext *scene)=0sofa::core::collision::CollisionGroupManagerpure virtual; clearLoggedMessages() constsofa::core::objectmodel::Base; CollisionAlgorithm()sofa::core::collision::CollisionAlgorithminlineprotected; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createGroups(objectmodel::BaseContext *scene, const sofa::type::vector< Contact::SPtr > &contacts)=0sofa::core::collision::CollisionGroupManagerpure virtual; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::cor",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_collision_group_manager-members.html:2113,clear,clearLoggedMessages,2113,api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_collision_group_manager-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_collision_group_manager-members.html,1,['clear'],['clearLoggedMessages']
Usability," sofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >::bRowsRange ; (; ); const. inlineoverridevirtual . Get the iterators corresponding to the beginning and end of the given row of blocks. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clear() [1/2]. template<typename TBlock , typename TPolicy = CRSMechanicalPolicy> . void sofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >::clear ; (; ). inlineoverridevirtual . Completely clear the matrix. ; Need implement clear to override BaseMatrix one. ; Implements sofa::linearalgebra::BaseMatrix. ◆ clear() [2/2]. template<typename TBlock , typename TPolicy = CRSMechanicalPolicy> . void sofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >::clear ; (; Index ; i, . Index ; j . ). inlineoverride . clear scalar at element i, j of matrix . ◆ clearCol(). template<typename TBlock , typename TPolicy = CRSMechanicalPolicy> . void sofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >::clearCol ; (; Index ; j). inlineoverride . Clear col scalar method. Clear this col in all row of matrix. ; Parameters. j: Col index considering size of matrix in scalar. . WarningIf you want to clear all value of a block, it is better to call clearColBlock . ◆ clearRow(). template<typename TBlock , typename TPolicy = CRSMechanicalPolicy> . void sofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >::clearRow ; (; Index ; i). inlineoverride . Clear row scalar method. Clear all col of this line. ; Parameters. i: Line index considering size of matrix in scalar. . WarningIf you want to clear all value of a block, it is better to call clearRowBlock . ◆ clearRowCol(). template<typename TBlock , typename TPolicy = CRSMechanicalPolicy> . void sofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >::clearRowCol ; (; Index ; i). inlineoverride . Clear both row i and column i in a square matrix. ; Parameters. i: Row and Col ind",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical.html:48876,clear,clearCol,48876,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical.html,1,['clear'],['clearCol']
Usability," sofa::linearalgebra::matrix_bloc_traits< float, IndexType > Class Template Reference . #include <matrix_bloc_traits.h>. Static Public Member Functions; static Real & v (Block &b, IndexType, IndexType);  ; static const Real & v (const Block &b, IndexType, IndexType);  ; static void vset (Block &b, int, int, Real val);  ; static void vadd (Block &b, int, int, Real val);  ; static void clear (Block &b);  ; static bool empty (const Block &b);  ; static void invert (Block &result, const Block &b);  ; static void split_row_index (IndexType &index, IndexType &modulo);  ; static void split_col_index (IndexType &index, IndexType &modulo);  ; template<class TSubBlock , std::enable_if_t< std::is_scalar_v< TSubBlock >, bool > = true> ; static void subBlock (const Block &b, IndexType row, IndexType col, TSubBlock &subBlock);  ; static const std::string Name ();  ; static sofa::linearalgebra::BaseMatrix::ElementType getElementType ();  ; static IndexType getElementSize ();  . Function details. ◆ clear(). template<typename IndexType > . static void sofa::linearalgebra::matrix_bloc_traits< float, IndexType >::clear ; (; Block & ; b). inlinestatic . ◆ empty(). template<typename IndexType > . static bool sofa::linearalgebra::matrix_bloc_traits< float, IndexType >::empty ; (; const Block & ; b). inlinestatic . ◆ getElementSize(). template<typename IndexType > . static IndexType sofa::linearalgebra::matrix_bloc_traits< float, IndexType >::getElementSize ; (; ). inlinestatic . ◆ getElementType(). template<typename IndexType > . static sofa::linearalgebra::BaseMatrix::ElementType sofa::linearalgebra::matrix_bloc_traits< float, IndexType >::getElementType ; (; ). inlinestatic . ◆ invert(). template<typename IndexType > . static void sofa::linearalgebra::matrix_bloc_traits< float, IndexType >::invert ; (; Block & ; result, . const Block & ; b . ). inlinestatic . ◆ Name(). template<typename IndexType > . static const std::string sofa::linearalgebra::matrix_bloc_traits< float, IndexType >::N",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1matrix__bloc__traits_3_01float_00_01_index_type_01_4.html:1226,clear,clear,1226,api/master/sofa/html/classsofa_1_1linearalgebra_1_1matrix__bloc__traits_3_01float_00_01_index_type_01_4.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1matrix__bloc__traits_3_01float_00_01_index_type_01_4.html,1,['clear'],['clear']
Usability," std::ostream & operator<< (std::ostream &out, const MapMapSparseMatrix< T > &sc);  write to an output stream More...;  ; std::istream & operator>> (std::istream &in, MapMapSparseMatrix< T > &sc);  read from an input stream More...;  . Attribute details. ◆ m_data. template<class T > . SparseMatrix sofa::defaulttype::MapMapSparseMatrix< T >::m_data. protected . Data container. . Function details. ◆ addLine(). template<class T > . std::pair< RowIterator, bool > sofa::defaulttype::MapMapSparseMatrix< T >::addLine ; (; KeyType ; lIndex, . RowType ; row . ). inline . ReturnsPair of Iterator on specified row and boolean on true if addition took place ; Parameters. lIndexrow Index ; rowconstraint itself If lindex doesn't exists, creates the row . ◆ begin() [1/2]. template<class T > . RowIterator sofa::defaulttype::MapMapSparseMatrix< T >::begin ; (; ). inline . ◆ begin() [2/2]. template<class T > . RowConstIterator sofa::defaulttype::MapMapSparseMatrix< T >::begin ; (; ); const. inline . ◆ clear(). template<class T > . void sofa::defaulttype::MapMapSparseMatrix< T >::clear ; (; ). inline . Removes every matrix elements. . ◆ empty(). template<class T > . bool sofa::defaulttype::MapMapSparseMatrix< T >::empty ; (; ); const. inline . Returnstrue if the matrix is empty . ◆ end() [1/2]. template<class T > . RowIterator sofa::defaulttype::MapMapSparseMatrix< T >::end ; (; ). inline . ◆ end() [2/2]. template<class T > . RowConstIterator sofa::defaulttype::MapMapSparseMatrix< T >::end ; (; ); const. inline . ◆ multTransposeBaseVector(). template<class T > . template<class VecDeriv > . void sofa::defaulttype::MapMapSparseMatrix< T >::multTransposeBaseVector ; (; VecDeriv & ; res, . const sofa::linearalgebra::BaseVector * ; lambda . ); const. inline . ◆ newLine(). template<class T > . RowIterator sofa::defaulttype::MapMapSparseMatrix< T >::newLine ; (; ). inline . ReturnsIterator on new allocated row Creates a new row in the sparse matrix with the last+1 key index . ◆ readLine(). tem",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1defaulttype_1_1_map_map_sparse_matrix.html:2330,clear,clear,2330,api/master/sofa/html/classsofa_1_1defaulttype_1_1_map_map_sparse_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1defaulttype_1_1_map_map_sparse_matrix.html,1,['clear'],['clear']
Usability," to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat2x2d &_M);  Adding values from a 2x2d matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat2x2f &_M);  Adding values from a 2x2f matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat6x6d &_M);  Adding values from a 6x6d matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat6x6f &_M);  Adding values from a 6x6f matrix. This function may be overload to obtain better performances. More...;  ; virtual void clear (Index i, Index j);  ; virtual void clearRow (Index i);  Reset all the values in row i to 0. More...;  ; virtual void clearRows (Index imin, Index imax);  Clears the value of rows imin to imax-1. More...;  ; virtual void clearCol (Index j);  Reset the all values in column j to 0. More...;  ; virtual void clearCols (Index imin, Index imax);  Clears all the values in columns imin to imax-1. More...;  ; virtual void clearRowCol (Index i);  Reset the value of both row and column i to 0. More...;  ; virtual void clearRowsCols (Index imin, Index imax);  Clears all the values in rows imin to imax-1 and columns imin to imax-1. More...;  ; virtual void compress ();  ; basic linear operations; virtual void opMulV (linearalgebra::BaseVector *result, const linearalgebra::BaseVector *v) const;  Multiply the matrix by vector v and put the result in vector result. More...;  ; virtual void opMulV (float *result, const float *v) const;  Multiply the matrix by float vector v and put the result in vector result. More...;  ; virtual void opMulV (double *result, const double *v) const;  Multiply the matrix by double vector v and put the result in vector result. More...;  ; virtual void opPMulV (linearalgebra::BaseVector *result, const linearal",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_matrix.html:3255,clear,clearCol,3255,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_matrix.html,1,['clear'],['clearCol']
Usability," to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat2x2d &_M);  Adding values from a 2x2d matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat2x2f &_M);  Adding values from a 2x2f matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat6x6d &_M);  Adding values from a 6x6d matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat6x6f &_M);  Adding values from a 6x6f matrix. This function may be overload to obtain better performances. More...;  ; virtual void clear (Index i, Index j);  ; virtual void clearRow (Index i);  Reset all the values in row i to 0. More...;  ; virtual void clearRows (Index imin, Index imax);  Clears the value of rows imin to imax-1. More...;  ; virtual void clearCol (Index j);  Reset the all values in column j to 0. More...;  ; virtual void clearCols (Index imin, Index imax);  Clears all the values in columns imin to imax-1. More...;  ; virtual void clearRowCol (Index i);  Reset the value of both row and column i to 0. More...;  ; virtual void clearRowsCols (Index imin, Index imax);  Clears all the values in rows imin to imax-1 and columns imin to imax-1. More...;  ; virtual void compress ();  ; virtual void opMulV (float *result, const float *v) const;  Multiply the matrix by float vector v and put the result in vector result. More...;  ; virtual void opMulV (double *result, const double *v) const;  Multiply the matrix by double vector v and put the result in vector result. More...;  ; virtual void opPMulV (linearalgebra::BaseVector *result, const linearalgebra::BaseVector *v) const;  Multiply the matrix by vector v and add the result in vector result. More...;  ; virtual void opPMulV (float *result, const float *v) const;  Multiply the matrix by float vecto",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_rotation_matrix.html:5606,clear,clearCol,5606,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_rotation_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_rotation_matrix.html,1,['clear'],['clearCol']
Usability," to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat2x2d &_M);  Adding values from a 2x2d matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat2x2f &_M);  Adding values from a 2x2f matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat6x6d &_M);  Adding values from a 6x6d matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat6x6f &_M);  Adding values from a 6x6f matrix. This function may be overload to obtain better performances. More...;  ; virtual void clear (Index i, Index j);  ; virtual void clearRow (Index i);  Reset all the values in row i to 0. More...;  ; virtual void clearRows (Index imin, Index imax);  Clears the value of rows imin to imax-1. More...;  ; virtual void clearCol (Index j);  Reset the all values in column j to 0. More...;  ; virtual void clearCols (Index imin, Index imax);  Clears all the values in columns imin to imax-1. More...;  ; virtual void clearRowCol (Index i);  Reset the value of both row and column i to 0. More...;  ; virtual void clearRowsCols (Index imin, Index imax);  Clears all the values in rows imin to imax-1 and columns imin to imax-1. More...;  ; virtual void opMulV (linearalgebra::BaseVector *result, const linearalgebra::BaseVector *v) const;  Multiply the matrix by vector v and put the result in vector result. More...;  ; virtual void opMulV (float *result, const float *v) const;  Multiply the matrix by float vector v and put the result in vector result. More...;  ; virtual void opMulV (double *result, const double *v) const;  Multiply the matrix by double vector v and put the result in vector result. More...;  ; virtual void opPMulV (linearalgebra::BaseVector *result, const linearalgebra::BaseVector *v) const;  Multiply the matrix by v",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical.html:15762,clear,clearCol,15762,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical.html,1,['clear'],['clearCol']
Usability," to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat2x2d &_M);  Adding values from a 2x2d matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat2x2f &_M);  Adding values from a 2x2f matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat6x6d &_M);  Adding values from a 6x6d matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat6x6f &_M);  Adding values from a 6x6f matrix. This function may be overload to obtain better performances. More...;  ; virtual void clear (Index i, Index j);  ; virtual void clearRow (Index i);  Reset all the values in row i to 0. More...;  ; virtual void clearRows (Index imin, Index imax);  Clears the value of rows imin to imax-1. More...;  ; virtual void clearCol (Index j);  Reset the all values in column j to 0. More...;  ; virtual void clearCols (Index imin, Index imax);  Clears all the values in columns imin to imax-1. More...;  ; virtual void clearRowsCols (Index imin, Index imax);  Clears all the values in rows imin to imax-1 and columns imin to imax-1. More...;  ; virtual void compress ();  ; virtual void opMulV (linearalgebra::BaseVector *result, const linearalgebra::BaseVector *v) const;  Multiply the matrix by vector v and put the result in vector result. More...;  ; virtual void opMulV (float *result, const float *v) const;  Multiply the matrix by float vector v and put the result in vector result. More...;  ; virtual void opMulV (double *result, const double *v) const;  Multiply the matrix by double vector v and put the result in vector result. More...;  ; virtual void opPMulV (linearalgebra::BaseVector *result, const linearalgebra::BaseVector *v) const;  Multiply the matrix by vector v and add the result in vector result. More...;  ; virtual vo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_apply_constraint_compat.html:3331,clear,clearCol,3331,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_apply_constraint_compat.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_apply_constraint_compat.html,1,['clear'],['clearCol']
Usability," true iff the data was resizable ; Implemented in sofa::defaulttype::DataTypeInfoDynamicWrapper< Info >, sofa::defaulttype::NoTypeInfo, and sofa::defaulttype::NameOnlyTypeInfo. ◆ setTextValue(). virtual void sofa::defaulttype::AbstractTypeInfo::setTextValue ; (; void * ; data, . Index ; index, . const std::string & ; value . ); const. pure virtual . Set the value at index of data from a string value. ; Implemented in sofa::defaulttype::DataTypeInfoDynamicWrapper< Info >, sofa::defaulttype::NoTypeInfo, and sofa::defaulttype::NameOnlyTypeInfo. ◆ SimpleCopy(). virtual bool sofa::defaulttype::AbstractTypeInfo::SimpleCopy ; (; ); const. pure virtual . True iff copying the data can be done with a memcpy(). ; Implemented in sofa::defaulttype::NoTypeInfo, sofa::defaulttype::NameOnlyTypeInfo, and sofa::defaulttype::DataTypeInfoDynamicWrapper< Info >. ◆ SimpleLayout(). virtual bool sofa::defaulttype::AbstractTypeInfo::SimpleLayout ; (; ); const. pure virtual . True iff the layout in memory is simply N values of the same base type. It means that you can use the abstract index system to iterate over the elements of the type. (It doesn't mean that the BaseType is of a fixed size) ; Implemented in sofa::defaulttype::NoTypeInfo, sofa::defaulttype::NameOnlyTypeInfo, and sofa::defaulttype::DataTypeInfoDynamicWrapper< Info >. ◆ size() [1/2]. virtual sofa::Size sofa::defaulttype::AbstractTypeInfo::size ; (; ); const. pure virtual . The size of this type, in number of elements. For example, the size of a fixed_array<fixed_array<int, 2>, 3> is 6, and those six elements are conceptually numbered from 0 to 5. This is relevant only if FixedSize() is true. I FixedSize() is false, the return value will be equivalent to the one of byteSize() ; Implemented in sofa::defaulttype::NoTypeInfo, sofa::defaulttype::NameOnlyTypeInfo, and sofa::defaulttype::DataTypeInfoDynamicWrapper< Info >. ◆ size() [2/2]. virtual sofa::Size sofa::defaulttype::AbstractTypeInfo::size ; (; const void * ; data); const. ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1defaulttype_1_1_abstract_type_info.html:12870,simpl,simply,12870,api/master/sofa/html/classsofa_1_1defaulttype_1_1_abstract_type_info.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1defaulttype_1_1_abstract_type_info.html,1,['simpl'],['simply']
Usability," values in row i to 0. ; Reimplemented in sofa::linearalgebra::SparseMatrix< T >, sofa::linearalgebra::SparseMatrix< SReal >, sofa::linearalgebra::SparseMatrix< Real >, sofa::linearalgebra::FullMatrix< T >, sofa::linearalgebra::FullMatrix< typename Vector::Real >, sofa::linearalgebra::FullMatrix< Real >, sofa::linearalgebra::EigenBaseSparseMatrix< TReal >, sofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >, sofa::linearalgebra::EigenBaseSparseMatrix< typename DataTypes::Real >, sofa::linearalgebra::DiagonalMatrix< T >, sofa::linearalgebra::DiagonalMatrix< R1 >, sofa::linearalgebra::DiagonalMatrix< R2 >, sofa::linearalgebra::CompressedRowSparseMatrixMechanical< sofa::type::Mat< NL, NC, MReal > >, sofa::linearalgebra::CompressedRowSparseMatrixMechanical< MReal >, sofa::linearalgebra::CompressedRowSparseMatrixMechanical< Real >, sofa::linearalgebra::BTDMatrix< N, T >, sofa::linearalgebra::BlockFullMatrix< N, T >, and sofa::linearalgebra::BlockDiagonalMatrix< LC, T >. ◆ clearRowCol(). virtual void sofa::linearalgebra::BaseMatrix::clearRowCol ; (; Index ; i). inlinevirtual . Reset the value of both row and column i to 0. ; Reimplemented in sofa::linearalgebra::SparseMatrix< T >, sofa::linearalgebra::SparseMatrix< SReal >, sofa::linearalgebra::SparseMatrix< Real >, sofa::linearalgebra::FullMatrix< T >, sofa::linearalgebra::FullMatrix< typename Vector::Real >, sofa::linearalgebra::FullMatrix< Real >, sofa::linearalgebra::EigenBaseSparseMatrix< TReal >, sofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >, sofa::linearalgebra::EigenBaseSparseMatrix< typename DataTypes::Real >, sofa::linearalgebra::DiagonalMatrix< T >, sofa::linearalgebra::DiagonalMatrix< R1 >, sofa::linearalgebra::DiagonalMatrix< R2 >, sofa::linearalgebra::CompressedRowSparseMatrixMechanical< sofa::type::Mat< NL, NC, MReal > >, sofa::linearalgebra::CompressedRowSparseMatrixMechanical< MReal >, sofa::linearalgebra::CompressedRowSparseMatrixMechanical< Real >, sofa::linearalgebra::BTD",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_matrix.html:38199,clear,clearRowCol,38199,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_matrix.html,1,['clear'],['clearRowCol']
Usability," virtual void sofa::linearalgebra::BaseMatrix::add. Add v to the existing value of the element at row i, column j (using 0-based indices) . ◆ begin() [1/2]. template<class Real > . FullMatrix< Real >::LineIterator sofa::linearalgebra::FullMatrix< Real >::begin. ◆ begin() [2/2]. template<class Real > . FullMatrix< Real >::LineConstIterator sofa::linearalgebra::FullMatrix< Real >::begin. ◆ clear() [1/2]. template<class Real > . void sofa::linearalgebra::FullMatrix< Real >::clear ; (; ). overridevirtual . Reset all values to 0. ; Implements sofa::linearalgebra::BaseMatrix. ◆ clear() [2/2]. template<class Real > . void sofa::linearalgebra::FullMatrix< Real >::clear ; (; Index ; i, . Index ; j . ). overridevirtual . Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearCol(). template<class Real > . void sofa::linearalgebra::FullMatrix< Real >::clearCol ; (; Index ; j). overridevirtual . Reset the all values in column j to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRow(). template<class Real > . void sofa::linearalgebra::FullMatrix< Real >::clearRow ; (; Index ; i). overridevirtual . Reset all the values in row i to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRowCol(). template<class Real > . void sofa::linearalgebra::FullMatrix< Real >::clearRowCol ; (; Index ; i). overridevirtual . Reset the value of both row and column i to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ colSize(). template<typename T > . Index sofa::linearalgebra::FullMatrix< T >::colSize ; (; void ; ); const. inlineoverridevirtual . Number of columns. ; Implements sofa::linearalgebra::BaseMatrix. ◆ element(). template<class Real > . SReal sofa::linearalgebra::FullMatrix< Real >::element ; (; Index ; i, . Index ; j . ); const. overridevirtual . Read the value of the element at row i, column j (using 0-based indices) ; Implements sofa::linearalgebra::BaseMatrix. ◆ end() [1/2]. template<class Real > . FullMatrix< Real >::LineIterator sofa::linear",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_full_matrix.html:19591,clear,clearRow,19591,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_full_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_full_matrix.html,1,['clear'],['clearRow']
Usability," virtual void postDrawShadow ();  ; virtual GLuint getShadowMapSize ();  ; const GLfloat * getOpenGLProjectionMatrix ();  ; const GLfloat * getOpenGLModelViewMatrix ();  ; virtual const sofa::type::Vec3 getPosition ();  ; virtual unsigned short getShadowTextureUnit ();  ; virtual void setShadowTextureUnit (const unsigned short unit);  ; virtual float getShadowFactor ();  ; virtual float getVSMLightBleeding ();  ; virtual float getVSMMinVariance ();  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virt",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_directional_light.html:5083,clear,clearVisual,5083,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_directional_light.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_directional_light.html,2,['clear'],"['clear', 'clearVisual']"
Usability," void clearCol (Index j) override;  Reset the all values in column j to 0. More...;  ; void clearRowCol (Index i) override;  Reset the value of both row and column i to 0. More...;  ; void clear () override;  Reset all values to 0. More...;  ; void resize (Index nbRow);  ; Index size () const;  ; void swap (DiagonalMatrix< T > &v);  ; SReal element (Index i) const;  ; void set (Index i, double v);  ; void add (Index i, double v);  ; void clear (Index i);  ; template<class Real2 > ; FullVector< Real2 > operator* (const FullVector< Real2 > &v) const;  ; void invert ();  ; template<class Real2 > ; void mult (FullVector< Real2 > &z, const FullVector< Real2 > &v) const;  ; template<class M2 > ; bool hasRef (const M2 *m) const;  ; std::string expr () const;  ; bool valid () const;  ; template<class Dest > ; void addTo (Dest *dest) const;  ; template<class Real2 > ; void operator= (const DiagonalMatrix< Real2 > &m);  ; template<class Real2 > ; void operator+= (const DiagonalMatrix< Real2 > &m);  ; template<class Real2 > ; void operator-= (const DiagonalMatrix< Real2 > &m);  ; template<class Expr2 > ; void operator= (const MatrixExpr< Expr2 > &m);  ; template<class Expr2 > ; void operator+= (const MatrixExpr< Expr2 > &m);  ; template<class Expr2 > ; void operator-= (const MatrixExpr< Expr2 > &m);  ; MatrixExpr< MatrixTranspose< DiagonalMatrix< T > > > t () const;  ; MatrixExpr< MatrixInverse< DiagonalMatrix< T > > > i () const;  ; MatrixExpr< MatrixNegative< DiagonalMatrix< T > > > operator- () const;  ; MatrixExpr< MatrixScale< DiagonalMatrix< T >, double > > operator* (const double &r) const;  ; virtual void add (Index row, Index col, double v)=0;  Add v to the existing value of the element at row i, column j (using 0-based indices) More...;  ; virtual void add (Index row, Index col, const type::Mat3x3d &_M);  Adding values from a 3x3d matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat3x3",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_diagonal_matrix.html:2197,clear,clear,2197,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_diagonal_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_diagonal_matrix.html,1,['clear'],['clear']
Usability,"  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; List of all members . sofa::linearalgebra::FullVector< T > Class Template Reference . #include <FullVector.h>. Inheritance diagram for sofa::linearalgebra::FullVector< T >:. [legend]. Protected Attributes; T * data;  ; Index cursize;  ; Index allocsize;  . Public Member Functions;  FullVector ();  ;  FullVector (const FullVector &vect);  ;  FullVector (Index n);  ;  FullVector (T *ptr, Index n);  ;  FullVector (T *ptr, Index n, Index nmax);  ;  ~FullVector () override;  ; T * ptr ();  ; const T * ptr () const;  ; void setptr (T *p);  ; Index capacity () const;  ; Iterator begin ();  ; Iterator end ();  ; ConstIterator begin () const;  ; ConstIterator end () const;  ; void fastResize (Index dim);  ; void resize (Index dim) override;  Resize the vector, and reset all values to 0. More...;  ; void clear () override;  Reset all values to 0. More...;  ; void swap (FullVector< T > &v);  ; void clear (Index dim) override;  Reset the value of element i to 0. More...;  ; T & operator[] (Index i);  ; const T & operator[] (Index i) const;  ; SReal element (Index i) const override;  Read the value of element i. More...;  ; void set (Index i, SReal v) override;  Write the value of element i. More...;  ; void add (Index i, SReal v) override;  Add v to the existing value of element i. More...;  ; Index size () const override;  Number of elements. More...;  ; FullVector< T > sub (Index i, Index n);  ; template<class TV > ; void getsub (Index i, Index n, TV &v);  ; template<class TV > ; void setsub (Index i, Index n, const TV &v);  ; void operator= (const FullVector< T > &a);  v = a More...;  ; void operator= (const T &a);  ; void operator+= (const FullVector< Real > &a);  v += a More...;  ; void operator-= (const FullVector< Real > &a);  v -= a More...;  ; void eq (const FullVector< Real > &a, Real f);  v =",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_full_vector.html:1071,clear,clear,1071,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_full_vector.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_full_vector.html,1,['clear'],['clear']
Usability,"  ; GLfloat getZNear ();  ; GLfloat getZFar ();  ; virtual void postDrawShadow ();  ; virtual GLuint getShadowMapSize ();  ; const GLfloat * getOpenGLProjectionMatrix ();  ; const GLfloat * getOpenGLModelViewMatrix ();  ; virtual unsigned short getShadowTextureUnit ();  ; virtual void setShadowTextureUnit (const unsigned short unit);  ; virtual float getShadowFactor ();  ; virtual float getVSMLightBleeding ();  ; virtual float getVSMMinVariance ();  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virt",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_spot_light.html:5805,clear,clearVisual,5805,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_spot_light.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_spot_light.html,2,['clear'],"['clear', 'clearVisual']"
Usability,"  ; SReal getPotentialEnergy (const core::MechanicalParams *, const DataVecCoord &data_x1, const DataVecCoord &data_x2) const override;  ; virtual void addKToMatrix (const core::MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix) override;  Compute the system matrix corresponding to . More...;  ; void buildStiffnessMatrix (core::behavior::StiffnessMatrix *matrix) override;  ; void buildDampingMatrix (core::behavior::DampingMatrix *) override;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; void computeBBox (const core::ExecParams *params, bool onlyVisible=false) override;  ; core::behavior::MechanicalState< DataTypes > * getObject1 ();  ; core::behavior::MechanicalState< DataTypes > * getObject2 ();  ; const sofa::type::vector< Spring > & getSprings () const;  ; SReal getArrowSize () const;  ; void setArrowSize (float s);  ; int getDrawMode () const;  ; void setDrawMode (int m);  ; void clear (sofa::Size reserve=0);  ; void removeSpring (sofa::Index idSpring);  ; void addSpring (sofa::Index m1, sofa::Index m2, SReal ks, SReal kd, SReal initlen);  ; void addSpring (const Spring &spring);  ; void initGnuplot (const std::string path) override;  initialization to export kinetic, potential energy and force intensity to gnuplot files format More...;  ; void exportGnuplot (SReal time) override;  export kinetic and potential energy state at ""time"" to a gnuplot file More...;  ;  Public Member Functions inherited from sofa::core::behavior::PairInteractionForceField< DataTypes >;  SOFA_ABSTRACT_CLASS2 (SOFA_TEMPLATE(PairInteractionForceField, DataTypes), BaseInteractionForceField, SOFA_TEMPLATE2(PairStateAccessor, DataTypes, DataTypes));  ; void setPathObject1 (const std::string &path);  Set the Object1 path. More...;  ; void setPathObject2 (const std::string &path);  Set the Object2 path. More...;  ; std::string getPathObject1 () const;  Retrieve the Ob",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_mesh_spring_force_field.html:7455,clear,clear,7455,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_mesh_spring_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_mesh_spring_force_field.html,6,['clear'],['clear']
Usability,"  ; std::istream & read (std::istream &in);  ; SOFA_TYPE_API std::istream & read (std::istream &in);  ; SOFA_TYPE_API std::istream & read (std::istream &in);  ; SOFA_TYPE_API std::istream & read (std::istream &in);  ; SOFA_TYPE_API std::istream & read (std::istream &in);  Specialization for reading vectors of int and unsigned int using ""A-B"" notation for all integers between A and B. More...;  ; SOFA_TYPE_API std::istream & read (std::istream &in);  ; SOFA_TYPE_API std::istream & read (std::istream &in);  ; void fill (const DetectionOutput &value);  Sets every element to 'value'. More...;  ; void fastResize (Size n);  . Additional Inherited Members;  Protected Member Functions inherited from sofa::core::collision::DetectionOutputVector; virtual ~DetectionOutputVector ();  . Constructor details. ◆ ~TDetectionOutputVector(). template<class CM1 , class CM2 > . sofa::core::collision::TDetectionOutputVector< CM1, CM2 >::~TDetectionOutputVector ; (; ). inlineoverride . Function details. ◆ clear(). template<class CM1 , class CM2 > . void sofa::core::collision::TDetectionOutputVector< CM1, CM2 >::clear ; (; ). inlineoverridevirtual . Clear the content of this vector. ; Implements sofa::core::collision::DetectionOutputVector. ◆ getFirstPosition(). template<class CM1 , class CM2 > . virtual type::Vec3 sofa::core::collision::TDetectionOutputVector< CM1, CM2 >::getFirstPosition ; (; unsigned ; idx). inlineoverridevirtual . Const iterator to iterate the detection pairs. ; Implements sofa::core::collision::DetectionOutputVector. ◆ getSecondPosition(). template<class CM1 , class CM2 > . virtual type::Vec3 sofa::core::collision::TDetectionOutputVector< CM1, CM2 >::getSecondPosition ; (; unsigned ; idx). inlineoverridevirtual . Const iterator end to iterate the detection pairs. ; Implements sofa::core::collision::DetectionOutputVector. ◆ size(). template<class CM1 , class CM2 > . unsigned int sofa::core::collision::TDetectionOutputVector< CM1, CM2 >::size ; (; ); const. inlineoverrid",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_t_detection_output_vector.html:3847,clear,clear,3847,api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_t_detection_output_vector.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_t_detection_output_vector.html,1,['clear'],['clear']
Usability,"  ; std::map< const sofa::core::behavior::BaseMechanicalState *, linearalgebra::BaseMatrix * > mappedMatrices;  ; std::map< const sofa::core::behavior::BaseMechanicalState *, MatrixRef > diagonalStiffnessBloc;  ; std::map< std::pair< const sofa::core::behavior::BaseMechanicalState *, const sofa::core::behavior::BaseMechanicalState * >, InteractionMatrixRef > interactionStiffnessBloc;  ; std::vector< sofa::core::BaseMapping * > mappingList;  . Public Member Functions;  DefaultMultiMatrixAccessor ();  ;  ~DefaultMultiMatrixAccessor () override;  ; virtual void clear ();  ; virtual void setGlobalMatrix (linearalgebra::BaseMatrix *matrix);  ; void addMechanicalState (const sofa::core::behavior::BaseMechanicalState *mstate) override;  ; void addMechanicalMapping (sofa::core::BaseMapping *mapping) override;  ; void addMappedMechanicalState (const sofa::core::behavior::BaseMechanicalState *mstate) override;  ; virtual void setupMatrices ();  ; Index getGlobalDimension () const override;  ; int getGlobalOffset (const sofa::core::behavior::BaseMechanicalState *mstate) const override;  ; MatrixRef getMatrix (const sofa::core::behavior::BaseMechanicalState *mstate) const override;  ; InteractionMatrixRef getMatrix (const sofa::core::behavior::BaseMechanicalState *mstate1, const sofa::core::behavior::BaseMechanicalState *mstate2) const override;  ; virtual void computeGlobalMatrix ();  ; void setDoPrintInfo (bool value);  ;  Public Member Functions inherited from sofa::core::behavior::MultiMatrixAccessor; virtual ~MultiMatrixAccessor ();  . Static Public Member Functions; static linearalgebra::BaseMatrix * createMatrix (const sofa::core::behavior::BaseMechanicalState *mstate1, const sofa::core::behavior::BaseMechanicalState *mstate2);  ; static linearalgebra::BaseMatrix * createMatrixImpl (const sofa::core::behavior::BaseMechanicalState *mstate1, const sofa::core::behavior::BaseMechanicalState *mstate2, bool doPrintInfo);  . Attribute details. ◆ diagonalStiffnessBloc. std::map<",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_default_multi_matrix_accessor.html:1243,clear,clear,1243,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_default_multi_matrix_accessor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_default_multi_matrix_accessor.html,1,['clear'],['clear']
Usability,"  ; void clearSystem ();  . Attribute details. ◆ matrix. template<typename TMatrix , typename TVector > . StoredMatrixType sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >::matrix { nullptr }. The global matrix of the linear system. If the linear system is written as Ax=b, it is A. . ◆ rhs. template<typename TMatrix , typename TVector > . StoredVectorType sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >::rhs { nullptr }. The right-hand side of the linear system. If the linear system is written as Ax=b, it is b. . ◆ solution. template<typename TMatrix , typename TVector > . StoredVectorType sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >::solution { nullptr }. The solution of the linear system. If the linear system is written as Ax=b, it is x. . Function details. ◆ allocateSystem(). template<typename TMatrix , typename TVector > . void sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >::allocateSystem. ◆ clearSystem() [1/3]. SOFA_COMPONENT_LINEARSOLVER_ITERATIVE_API void sofa::component::linearsystem::LinearSystemData< GraphScatteredMatrix, GraphScatteredVector >::clearSystem ; (; ). ◆ clearSystem() [2/3]. void sofa::component::linearsystem::LinearSystemData< GraphScatteredMatrix, GraphScatteredVector >::clearSystem ; (; ). ◆ clearSystem() [3/3]. template<typename TMatrix , typename TVector > . void sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >::clearSystem. ◆ createSystemMatrix(). template<typename TMatrix , typename TVector > . void sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >::createSystemMatrix. Allocate the object for the global matrix. . ◆ createSystemRHSVector() [1/3]. SOFA_COMPONENT_LINEARSOLVER_ITERATIVE_API void sofa::component::linearsystem::LinearSystemData< GraphScatteredMatrix, GraphScatteredVector >::createSystemRHSVector ; (; ). ◆ createSystemRHSVector() [2/3]. void sofa::component::linearsystem::LinearSystemData< GraphScatteredMatrix",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_linear_system_data.html:2682,clear,clearSystem,2682,api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_linear_system_data.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_linear_system_data.html,1,['clear'],['clearSystem']
Usability,  ;  operator const_container_type () const;  ; const_container_type * operator-> () const;  ; const_container_type & operator* () const;  ; const container_type & ref () const;  this one duplicate operator* More...;  . Attribute details. ◆ vref. template<class T > . container_type* sofa::helper::WriteAccessorVector< T >::vref. protected . Constructor details. ◆ WriteAccessorVector(). template<class T > . sofa::helper::WriteAccessorVector< T >::WriteAccessorVector ; (; container_type & ; container). inline . Function details. ◆ back() [1/2]. template<class T > . reference sofa::helper::WriteAccessorVector< T >::back ; (; ). inline . ◆ back() [2/2]. template<class T > . const_reference sofa::helper::WriteAccessorVector< T >::back ; (; ); const. inline . ◆ begin() [1/2]. template<class T > . iterator sofa::helper::WriteAccessorVector< T >::begin ; (; ). inline . ◆ begin() [2/2]. template<class T > . const_iterator sofa::helper::WriteAccessorVector< T >::begin ; (; ); const. inline . ◆ clear(). template<class T > . void sofa::helper::WriteAccessorVector< T >::clear ; (; ). inline . ◆ emplace_back(). template<class T > . template<class... Args> . reference sofa::helper::WriteAccessorVector< T >::emplace_back ; (; Args &&... ; args). inline . ◆ empty(). template<class T > . bool sofa::helper::WriteAccessorVector< T >::empty ; (; ); const. inline . ◆ end() [1/2]. template<class T > . iterator sofa::helper::WriteAccessorVector< T >::end ; (; ). inline . ◆ end() [2/2]. template<class T > . const_iterator sofa::helper::WriteAccessorVector< T >::end ; (; ); const. inline . ◆ erase() [1/2]. template<class T > . iterator sofa::helper::WriteAccessorVector< T >::erase ; (; const_iterator ; pos). inline . ◆ erase() [2/2]. template<class T > . iterator sofa::helper::WriteAccessorVector< T >::erase ; (; iterator ; pos). inline . ◆ front() [1/2]. template<class T > . reference sofa::helper::WriteAccessorVector< T >::front ; (; ). inline . ◆ front() [2/2]. template<class T > . const_re,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_write_accessor_vector.html:2541,clear,clear,2541,api/master/sofa/html/classsofa_1_1helper_1_1_write_accessor_vector.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_write_accessor_vector.html,1,['clear'],['clear']
Usability,"  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::core::topology::BaseMeshTopology; sofa::core::objectmodel::DataFileName fileTopology;  . Public Member Functions;  SOFA_CLASS (EdgeSetTopologyContainer, PointSetTopologyContainer);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; sofa::geometry::ElementType getTopologyType () const override;  Returns the type of the topology. More...;  ; bool linkTopologyHandlerToData (core::topology::TopologyHandler *topologyHandler, sofa::geometry::ElementType elementType) override;  ; bool unlinkTopologyHandlerToData (core::topology::TopologyHandler *topologyHandler, sofa::geometry::ElementType elementType) override;  . void clear () override;  ; void addEdge (Index a, Index b) override;  . const SeqEdges & getEdges () override;  Returns the edge array. More...;  ; const Edge getEdge (EdgeID i) override;  Get an Edge from its ID. More...;  ; EdgeID getEdgeIndex (PointID v1, PointID v2) override;  Get the index of the edge joining two vertices. More...;  ; const EdgesAroundVertex & getEdgesAroundVertex (PointID id) override;  Get the indices of the edges around a vertex. More...;  . void initTopology ();  ; bool checkTopology () const override;  Checks if the topology is coherent. More...;  ; Size getNumberOfEdges () const;  Returns the number of edges in this topology. More...;  ; Size getNumberOfElements () const override;  Returns the number of topological element of the current topology. This function avoids to know which topological container is in used. More...;  ; virtual int getNumberConnectedComponents (sofa::type::vector< EdgeID > &components);  Returns the number of connected components from the graph containing all edges and",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_container.html:4813,clear,clear,4813,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_container.html,1,['clear'],['clear']
Usability,"  res = x + v.dt More...;  ; void accFromF (core::MultiVecDerivId a, core::ConstMultiVecDerivId f);  ; void computeEnergy (SReal &kineticEnergy, SReal &potentialEnergy);  Compute Energy. More...;  ; void computeForce (core::MultiVecDerivId result, bool clear=true, bool accumulate=true);  Compute the current force (given the latest propagated position and velocity) More...;  ; void computeDf (core::MultiVecDerivId df, bool clear=true, bool accumulate=true);  Compute the current force delta (given the latest propagated displacement) More...;  ; void computeDfV (core::MultiVecDerivId df, bool clear=true, bool accumulate=true);  Compute the current force delta (given the latest propagated velocity) More...;  ; void addMBKdx (core::MultiVecDerivId df, SReal m, SReal b, SReal k, bool clear=true, bool accumulate=true);  accumulate $ df += (m M + b B + k K) dx $ (given the latest propagated displacement) More...;  ; void addMBKv (core::MultiVecDerivId df, SReal m, SReal b, SReal k, bool clear=true, bool accumulate=true);  accumulate $ df += (m M + b B + k K) velocity $ More...;  ; void addSeparateGravity (SReal dt, core::MultiVecDerivId result=core::VecDerivId::velocity());  Add dt*Gravity to the velocity. More...;  ; void computeContactForce (core::MultiVecDerivId result);  ; void computeContactDf (core::MultiVecDerivId df);  ; void computeAcc (SReal t, core::MultiVecDerivId a, core::MultiVecCoordId x, core::MultiVecDerivId v);  Compute a(x,v) at time t. Parameters x and v not const due to propagation through mappings. More...;  ; void computeForce (SReal t, core::MultiVecDerivId f, core::MultiVecCoordId x, core::MultiVecDerivId v);  Compute f(x,v) at time t. Parameters x and v not const due to propagation through mappings. More...;  ; void computeContactAcc (SReal t, core::MultiVecDerivId a, core::MultiVecCoordId x, core::MultiVecDerivId v);  ; Matrix operations; void getMatrixDimension (sofa::Size *const, sofa::Size *const, sofa::core::behavior::MultiMatrixAccessor *matr",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1common_1_1_mechanical_operations.html:3925,clear,clear,3925,api/master/sofa/html/classsofa_1_1simulation_1_1common_1_1_mechanical_operations.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1common_1_1_mechanical_operations.html,1,['clear'],['clear']
Usability,"""params"" is for passing specific data argument to the created object. More...;  ; NodeSPtr SOFA_SIMPLEAPI_API createChild (NodeSPtr node, const std::string &name, const std::map< std::string, std::string > &params=std::map< std::string, std::string >{});  create a child to the provided nodeof given name. The parameter ""params"" is for passing specific data argument to the created object. More...;  ; NodeSPtr SOFA_SIMPLEAPI_API createChild (NodeSPtr node, BaseObjectDescription &desc);  create a child to the provided node. The parameter ""params"" is for passing specific data argument to the created object (including the node name). More...;  ; void SOFA_SIMPLEAPI_API dumpScene (NodeSPtr root);  ; template<class T > ; std::string str (const T &t);  . Function Documentation. ◆ cleanup(). SOFA_SIMPLEAPI_API void sofa::simpleapi::cleanup ; (; ). Clean up the resources used by the SofaSimulationGraph library, as well as its dependencies. . ◆ createChild() [1/4]. Node::SPtr sofa::simpleapi::createChild ; (; Node::SPtr ; node, . BaseObjectDescription & ; desc . ). ◆ createChild() [2/4]. Node::SPtr sofa::simpleapi::createChild ; (; Node::SPtr ; node, . const std::string & ; name, . const std::map< std::string, std::string > & ; params . ). ◆ createChild() [3/4]. NodeSPtr SOFA_SIMPLEAPI_API sofa::simpleapi::createChild ; (; NodeSPtr ; node, . BaseObjectDescription & ; desc . ). create a child to the provided node. The parameter ""params"" is for passing specific data argument to the created object (including the node name). . ◆ createChild() [4/4]. NodeSPtr SOFA_SIMPLEAPI_API sofa::simpleapi::createChild ; (; NodeSPtr ; node, . const std::string & ; name, . const std::map< std::string, std::string > & ; params = std::map< std::string, std::string >{} . ). create a child to the provided nodeof given name. The parameter ""params"" is for passing specific data argument to the created object. . ◆ createNode(). NodeSPtr SOFA_SIMPLEAPI_API sofa::simpleapi::createNode ; (; const std::strin",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simpleapi.html:3298,simpl,simpleapi,3298,api/master/sofa/html/namespacesofa_1_1simpleapi.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simpleapi.html,1,['simpl'],['simpleapi']
Usability,"& sofa::linearalgebra::BlockDiagonalMatrix< LC, T >::bloc ; (; Index ; i); const. inline . ◆ bloc() [2/2]. template<std::size_t LC, typename T = SReal> . const Block& sofa::linearalgebra::BlockDiagonalMatrix< LC, T >::bloc ; (; Index ; i, . Index ; j . ); const. inline . ◆ clear() [1/2]. template<std::size_t LC, typename T = SReal> . void sofa::linearalgebra::BlockDiagonalMatrix< LC, T >::clear ; (; ). inlineoverridevirtual . Reset all values to 0. ; Implements sofa::linearalgebra::BaseMatrix. ◆ clear() [2/2]. template<std::size_t LC, typename T = SReal> . void sofa::linearalgebra::BlockDiagonalMatrix< LC, T >::clear ; (; Index ; i, . Index ; j . ). inlineoverridevirtual . Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearCol(). template<std::size_t LC, typename T = SReal> . void sofa::linearalgebra::BlockDiagonalMatrix< LC, T >::clearCol ; (; Index ; j). inlineoverridevirtual . Reset the all values in column j to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRow(). template<std::size_t LC, typename T = SReal> . void sofa::linearalgebra::BlockDiagonalMatrix< LC, T >::clearRow ; (; Index ; i). inlineoverridevirtual . Reset all the values in row i to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRowCol(). template<std::size_t LC, typename T = SReal> . void sofa::linearalgebra::BlockDiagonalMatrix< LC, T >::clearRowCol ; (; Index ; i). inlineoverridevirtual . Reset the value of both row and column i to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ colBSize(). template<std::size_t LC, typename T = SReal> . Index sofa::linearalgebra::BlockDiagonalMatrix< LC, T >::colBSize ; (; void ; ); const. inline . ◆ colSize(). template<std::size_t LC, typename T = SReal> . Index sofa::linearalgebra::BlockDiagonalMatrix< LC, T >::colSize ; (; void ; ); const. inlineoverridevirtual . Number of columns. ; Implements sofa::linearalgebra::BaseMatrix. ◆ element(). template<std::size_t LC, typename T = SReal> . SReal sofa::linearalg",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_diagonal_matrix.html:19601,clear,clearRow,19601,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_diagonal_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_diagonal_matrix.html,1,['clear'],['clearRow']
Usability,"& getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions;  GenericConstraintSolver ();  ;  ~GenericConstraintSolver () override;  ; void clearConstraintProblemLocks ();  ;  SOFA_ATTRIBUTE_DISABLED__GENERICCONSTRAINTSOLVER_CONSTRAINTCORRECTIONS () DeprecatedAndRemoved const raintCorrections;  ; void buildSystem_matrixFree (unsigned int numConstraints);  ; void buildSystem_matrixAssembly (const core::ConstraintParams *cParams);  ;  Protected Member Functions inherited from sofa::component::constraint::lagrangian::solver::ConstraintSolverImpl; void postBuildSystem (const core::ConstraintParams *cParams) override;  ; void postSolveSystem (const core::ConstraintParams *cParams) override;  ; void clearConstraintCorrections ();  ; void resetConstraints (const core::ConstraintParams *cParams);  ; void buildLocalConstraintMatrix (const core::ConstraintParams *cparams, unsigned int &constraintId);  Call the method buildConstraintMatrix on all the BaseConstraintSet. More...;  ; void accumulateMatrixDeriv (const core::ConstraintParams *cparams);  ; unsigned int buildConstraintMatrix (const core::ConstraintParams *cparams);  ; void applyProjectiveConstraintOnConstraintMatrix (const core::ConstraintParams *cparams);  ; void getConstraintViolation (const core::ConstraintParams *cparams, sofa::linearalgebra::BaseVector *v);  ;  Protected Member Functions inherited from sofa::core::behavior::ConstraintSolver;  ConstraintSolver ();  ;  ~ConstraintSolver () override;  ; bool prepareStatesTask ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_generic_constraint_solver.html:16630,clear,clearConstraintProblemLocks,16630,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_generic_constraint_solver.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_generic_constraint_solver.html,2,['clear'],"['clearConstraintCorrections', 'clearConstraintProblemLocks']"
Usability,"& operator<< (std::ostream &out, const DualQuatCoord3< real > &v);  ; std::istream & operator>> (std::istream &in, DualQuatCoord3< real > &v);  . Constructor details. ◆ DualQuatCoord3() [1/4]. template<class real > . sofa::type::DualQuatCoord3< real >::DualQuatCoord3 ; (; const Quat & ; Dual, . const Quat & ; orient . ). inline . ◆ DualQuatCoord3() [2/4]. template<class real > . template<typename real2 > . sofa::type::DualQuatCoord3< real >::DualQuatCoord3 ; (; const DualQuatCoord3< real2 > & ; c). inline . ◆ DualQuatCoord3() [3/4]. template<class real > . sofa::type::DualQuatCoord3< real >::DualQuatCoord3 ; (; const Pos & ; p, . const sofa::type::Quat< real > & ; q . ). inline . ◆ DualQuatCoord3() [4/4]. template<class real > . sofa::type::DualQuatCoord3< real >::DualQuatCoord3 ; (; ). inline . ◆ ~DualQuatCoord3(). template<class real > . sofa::type::DualQuatCoord3< real >::~DualQuatCoord3 ; (; ). inline . Function details. ◆ clear(). template<class real > . void sofa::type::DualQuatCoord3< real >::clear ; (; ). inline . ◆ getDual() [1/2]. template<class real > . Quat& sofa::type::DualQuatCoord3< real >::getDual ; (; ). inline . ◆ getDual() [2/2]. template<class real > . const Quat& sofa::type::DualQuatCoord3< real >::getDual ; (; ); const. inline . ◆ getOrientation() [1/2]. template<class real > . Quat& sofa::type::DualQuatCoord3< real >::getOrientation ; (; ). inline . ◆ getOrientation() [2/2]. template<class real > . const Quat& sofa::type::DualQuatCoord3< real >::getOrientation ; (; ); const. inline . ◆ getTranslation(). template<class real > . Vec3 sofa::type::DualQuatCoord3< real >::getTranslation ; (; ). inline . ◆ identity(). template<class real > . static DualQuatCoord3<real> sofa::type::DualQuatCoord3< real >::identity ; (; ). inlinestatic . ◆ inverse(). template<typename real > . DualQuatCoord3< real > sofa::type::DualQuatCoord3< real >::inverse. ◆ inverseRotate(). template<typename real > . type::Vec< 3, real > sofa::type::DualQuatCoord3< real >::inverse",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_dual_quat_coord3.html:4792,clear,clear,4792,api/master/sofa/html/classsofa_1_1type_1_1_dual_quat_coord3.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_dual_quat_coord3.html,1,['clear'],['clear']
Usability,"() (Index i, Index j) const;  Read the value of the element at row i, column j (using 0-based indices). Eigen-compatible API. More...;  ; virtual void add (Index row, Index col, const type::Mat2x2d &_M);  Adding values from a 2x2d matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat2x2f &_M);  Adding values from a 2x2f matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat6x6d &_M);  Adding values from a 6x6d matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat6x6f &_M);  Adding values from a 6x6f matrix. This function may be overload to obtain better performances. More...;  ; virtual void clear (Index i, Index j);  ; virtual void clearRow (Index i);  Reset all the values in row i to 0. More...;  ; virtual void clearRows (Index imin, Index imax);  Clears the value of rows imin to imax-1. More...;  ; virtual void clearCol (Index j);  Reset the all values in column j to 0. More...;  ; virtual void clearCols (Index imin, Index imax);  Clears all the values in columns imin to imax-1. More...;  ; virtual void clearRowCol (Index i);  Reset the value of both row and column i to 0. More...;  ; virtual void clearRowsCols (Index imin, Index imax);  Clears all the values in rows imin to imax-1 and columns imin to imax-1. More...;  ; virtual void compress ();  ; virtual void opMulV (linearalgebra::BaseVector *result, const linearalgebra::BaseVector *v) const;  Multiply the matrix by vector v and put the result in vector result. More...;  ; virtual void opMulV (float *result, const float *v) const;  Multiply the matrix by float vector v and put the result in vector result. More...;  ; virtual void opMulV (double *result, const double *v) const;  Multiply the matrix by double vector v and put the result in vector result. More...;  ; vi",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_add_to_matrix_compat_matrix.html:3614,clear,clearRows,3614,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_add_to_matrix_compat_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_add_to_matrix_compat_matrix.html,1,['clear'],['clearRows']
Usability,"() [2/2]. void sofa::core::loader::MeshLoader::addTetrahedron ; (; type::vector< Tetrahedron > & ; pTetrahedra, . Topology::TetrahedronID ; p0, . Topology::TetrahedronID ; p1, . Topology::TetrahedronID ; p2, . Topology::TetrahedronID ; p3 . ). protected . ◆ addTriangle() [1/2]. void sofa::core::loader::MeshLoader::addTriangle ; (; type::vector< Triangle > & ; pTriangles, . const Triangle & ; p . ). protected . ◆ addTriangle() [2/2]. void sofa::core::loader::MeshLoader::addTriangle ; (; type::vector< Triangle > & ; pTriangles, . Topology::TriangleID ; p0, . Topology::TriangleID ; p1, . Topology::TriangleID ; p2 . ). protected . ◆ applyTransformation(). void sofa::core::loader::MeshLoader::applyTransformation ; (; sofa::type::Matrix4 const & ; T). virtual . Apply Homogeneous transformation to the positions. . ◆ canLoad(). bool sofa::core::loader::MeshLoader::canLoad ; (; ). overridevirtual . Reimplemented from sofa::core::loader::BaseLoader. ◆ clearBuffers(). void sofa::core::loader::MeshLoader::clearBuffers ; (; ). finalprotectedvirtual . ◆ copyMeshToData(). void sofa::core::loader::MeshLoader::copyMeshToData ; (; helper::io::Mesh & ; _mesh). protected . Temporary method that will copy all buffers from a io::Mesh into the corresponding Data. Will be removed as soon as work on unifying meshloader is finished. . ◆ getRotation(). virtual Vec3 sofa::core::loader::MeshLoader::getRotation ; (; ); const. inlinevirtual . ◆ getScale(). virtual Vec3 sofa::core::loader::MeshLoader::getScale ; (; ); const. inlinevirtual . ◆ getTransformation(). virtual sofa::type::Matrix4 sofa::core::loader::MeshLoader::getTransformation ; (; ); const. inlinevirtual . ◆ getTranslation(). virtual Vec3 sofa::core::loader::MeshLoader::getTranslation ; (; ); const. inlinevirtual . ◆ init(). void sofa::core::loader::MeshLoader::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_mesh_loader.html:28562,clear,clearBuffers,28562,api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_mesh_loader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_mesh_loader.html,1,['clear'],['clearBuffers']
Usability,() const overridesofa::component::topology::container::dynamic::TetrahedronSetTopologyContainervirtual; cleanEdgeTopologyFromDirty()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; cleanPointTopologyFromDirty()sofa::component::topology::container::dynamic::PointSetTopologyContainerprotected; cleanTetrahedronTopologyFromDirty()sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainerprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanTriangleTopologyFromDirty()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear() overridesofa::component::topology::container::dynamic::TetrahedronSetTopologyContainervirtual; clearBorderElementLists()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; clearEdges()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearEdgesAroundVertex()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearEdgesInTetrahedron()sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainerprotected; clearEdgesInTriangle()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; clearLoggedMessages() constsofa::core::objectmodel::Base; clearTetrahedra()sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainerprotected; clearTetrahedraAroundEdge()sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainerprotected; clearTetrahedraAroundTriangle()sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainerprotected; clearTetrahedraAroundVertex()sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainerprotected; clearTriangles()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; clearTrianglesAroundEdge()sofa::component::topology::container::,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container-members.html:4756,clear,clearEdgesAroundVertex,4756,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container-members.html,1,['clear'],['clearEdgesAroundVertex']
Usability,"() constsofa::core::topology::BaseMeshTopologyvirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeGridResolutionPostProcess()sofa::component::topology::container::grid::GridTopologyinlineprotectedvirtual; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkConnexity() overridesofa::component::topology::container::constant::MeshTopologyvirtual; checkGridResolution()sofa::component::topology::container::grid::GridTopologyprotected; checkTopology() constsofa::core::topology::BaseMeshTopologyinlinevirtual; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear() overridesofa::component::topology::container::constant::MeshTopologyvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeEdgeList()sofa::component::topology::container::grid::GridTopologyprotectedvirtual; computeHexaList()sofa::component::topology::container::grid::GridTopologyprotectedvirtual; computePointList()sofa::component::topology::container::grid::GridTopologyprotectedvirtual; computeQuadList()sofa::component::topology::container::grid::GridTopologyprotectedvirtual; computeRelativeOrientationInQuad(const PointID ind_p0, const PointID ind_p1, const PointID ind_q)sofa::component::topology::container::constant::MeshTopology; computeRelativeOrientationInTri(const PointID ind_p0, const PointID ind_p1, const PointID ind_t)sofa::component::topology::container::constant::MeshTopology; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *contex",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_cylinder_grid_topology-members.html:3855,clear,clearLoggedMessages,3855,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_cylinder_grid_topology-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_cylinder_grid_topology-members.html,3,['clear'],['clearLoggedMessages']
Usability,"() constsofa::linearalgebra::BaseMatrixinlinevirtual; choleskysofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >protected; choleskyDecompose()sofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >inline; choleskySolve(VectorEigen &x, const VectorEigen &b) constsofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >inline; clear() overridesofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >inlinevirtual; sofa::linearalgebra::BaseMatrix::clear(Index i, Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; clearCol(Index col) overridesofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >inlinevirtual; clearCols(Index imin, Index imax) overridesofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >inlinevirtual; clearRow(Index i) overridesofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >inlinevirtual; clearRowCol(Index i) overridesofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >inlinevirtual; clearRows(Index imin, Index imax) overridesofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >inlinevirtual; clearRowsCols(Index imin, Index imax) overridesofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >inlinevirtual; coeffRef(Index i, Index j)sofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >inline; cols(void) constsofa::linearalgebra::BaseMatrixinline; colSize(void) const overridesofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >inlinevirtual; compress() overridesofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >inlinevirtual; compressedMatrixsofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >; CompressedMatrix typedefsofa::linearalgebra::EigenSparseMatrix< InDataTypes, OutDataTypes >; copy(const EigenBaseSparseMatrix &m, unsigned nbCol, unsigned shift)sofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >inline; copyFrom(const CompressedRowSparseMatrix< type::Mat< Nout, Nin, AnyReal > > &crs)sofa:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_sparse_matrix-members.html:7738,clear,clearRows,7738,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_sparse_matrix-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_sparse_matrix-members.html,1,['clear'],['clearRows']
Usability,"(). void sofa::gui::common::BaseViewer::setBackgroundImage ; (; std::string ; imageFileName = std::string(""textures/SOFA_logo.bmp"")). virtual . Reimplemented in sofa::gui::qt::viewer::SofaViewer. ◆ setCameraMode(). void sofa::gui::common::BaseViewer::setCameraMode ; (; core::visual::VisualParams::CameraType ; mode). virtual . Reimplemented in sofa::gui::qt::viewer::qgl::QtGLViewer. ◆ setFullScreen(). virtual void sofa::gui::common::BaseViewer::setFullScreen ; (; bool ; ). inlinevirtual . ◆ setPrefix(). void sofa::gui::common::BaseViewer::setPrefix ; (; const std::string & ; prefix, . bool ; prependDirectory = true . ). virtual . Reimplemented in sofa::gui::qt::viewer::SofaViewer. ◆ setScene(). void sofa::gui::common::BaseViewer::setScene ; (; sofa::simulation::Node::SPtr ; scene, . const char * ; filename = nullptr, . bool ; = false . ). virtual . ◆ setSceneFileName(). void sofa::gui::common::BaseViewer::setSceneFileName ; (; const std::string & ; f). virtual . ◆ setSizeH(). virtual void sofa::gui::common::BaseViewer::setSizeH ; (; int ; ). pure virtual . ◆ setSizeW(). virtual void sofa::gui::common::BaseViewer::setSizeW ; (; int ; ). pure virtual . ◆ setView(). void sofa::gui::common::BaseViewer::setView ; (; const sofa::type::Vec3 & ; pos, . const sofa::type::Quat< SReal > & ; ori . ). virtual . ◆ unload(). bool sofa::gui::common::BaseViewer::unload ; (; void ; ). virtual . unload the viewer without delete . ◆ viewAll(). virtual void sofa::gui::common::BaseViewer::viewAll ; (; void ; ). pure virtual . Recompute viewer's home position so it encompass the whole scene and apply it. ; Implemented in sofa::gui::qt::viewer::qt::QtViewer, and sofa::gui::qt::viewer::qgl::QtGLViewer. ◆ wait(). void sofa::gui::common::BaseViewer::wait ; (; ). virtual . ask the viewer to resume its activity ; Reimplemented in sofa::gui::qt::viewer::qt::QtViewer, and sofa::gui::qt::viewer::qgl::QtGLViewer. sofaguicommonBaseViewer; Generated on Mon Nov 11 2024 03:19:18 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_base_viewer.html:10950,resume,resume,10950,api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_base_viewer.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_base_viewer.html,1,['resume'],['resume']
Usability,"()sofa::core::objectmodel::BaseObjectprotected; BaseProjectiveConstraintSet()sofa::core::behavior::BaseProjectiveConstraintSetinlineprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ProjectiveConstraintSet< DataTypes >inlinestatic; sofa::core::behavior::BaseProjectiveConstraintSet::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkIndices()sofa::component::constraint::projective::FixedProjectiveConstraint< DataTypes >protected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearConstraints()sofa::component::constraint::projective::FixedProjectiveConstraint< DataTypes >; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible) overridesofa::component::constraint::projective::FixedProjectiveConstraint< DataTypes >virtual; computeBBoxForIndices(const type::vector< Index > &indices)sofa::component::constraint::projective::FixedProjectiveConstraint< DataTypes >protected; Coord typedefsofa::component::constraint::projective::FixedProjectiveConstraint< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_drawSizesofa::component::constraint::projective::FixedProjectiveConstraint< DataTypes >; d_fixAllsofa::component::constraint::projective::FixedProjectiv",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_projective_constraint-members.html:3111,clear,clearConstraints,3111,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_projective_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_projective_constraint-members.html,1,['clear'],['clearConstraints']
Usability,"()sofa::core::objectmodel::BaseObjectprotected; BaseProjectiveConstraintSet()sofa::core::behavior::BaseProjectiveConstraintSetinlineprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ProjectiveConstraintSet< DataTypes >inlinestatic; sofa::core::behavior::BaseProjectiveConstraintSet::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkIndices()sofa::component::constraint::projective::FixedProjectiveConstraint< DataTypes >protected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearConstraints()sofa::component::constraint::projective::FixedProjectiveConstraint< DataTypes >; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible) overridesofa::component::constraint::projective::FixedProjectiveConstraint< DataTypes >virtual; computeBBoxForIndices(const type::vector< Index > &indices)sofa::component::constraint::projective::FixedProjectiveConstraint< DataTypes >protected; Coord typedefsofa::component::constraint::projective::PartialFixedProjectiveConstraint< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_drawSizesofa::component::constraint::projective::FixedProjectiveConstraint< DataTypes >; d_fixAllsofa::component::constraint::projective::FixedPr",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_partial_fixed_projective_constraint-members.html:3148,clear,clearConstraints,3148,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_partial_fixed_projective_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_partial_fixed_projective_constraint-members.html,1,['clear'],['clearConstraints']
Usability,"()sofa::core::objectmodel::BaseObjectprotected; baseRead(ConstVecId v) const overridesofa::core::State< TDataTypes >virtual; BaseState()sofa::core::BaseStateinlineprotected; BaseType typedefsofa::core::objectmodel::Base; baseWrite(VecId v) overridesofa::core::State< TDataTypes >virtual; bboxsofa::component::visual::VisualModelImpl; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; castShadowsofa::component::visual::VisualModelImpl; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *params, bool=false) overridesofa::component::visual::VisualModelImplvirtual; VisualState< defaulttype::Vec3Types >::computeBBox() constsofa::core::State< TDataTypes >; computeBitangent(const Coord &v1, const Coord &v2, const Coord &v3, const TexCoord &t1, const TexCoord &t2, const TexCoord &t3)sofa::component::visual::VisualModelImplstatic; computeMesh()sofa::component::visual::VisualModelImplvirtual; computeNormals()sofa::component::visual::VisualModelImplvirtual; computePositions()sofa::component::visual::VisualModelImplvirtual; computeTangent(const Coord &v1, const Coord &v2, const Coord &v3, const TexCoord &t1, const TexCoord &t2, const TexCoord &t3)sofa::component::visual::VisualModelImplstatic; computeTangents()sofa::component::visual::VisualModelImplvirtual; computeUVSphereProjection()sofa::component::visual::VisualModelImplvirtual; Coord typedefsofa::component::visual::VisualModelImpl; coun",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_model_impl-members.html:3239,clear,clearVisual,3239,api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_model_impl-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_model_impl-members.html,1,['clear'],['clearVisual']
Usability,"(; FullVector< Real2 > & ; res, . const linearalgebra::BaseVector * ; v . ); const. inline . ◆ addMulTranspose() [3/4]. template<typename T > . template<class Real2 > . void sofa::linearalgebra::SparseMatrix< T >::addMulTranspose ; (; linearalgebra::BaseVector * ; res, . const FullVector< Real2 > & ; v . ); const. inline . ◆ addMulTranspose() [4/4]. template<typename T > . void sofa::linearalgebra::SparseMatrix< T >::addMulTranspose ; (; linearalgebra::BaseVector * ; res, . const linearalgebra::BaseVector * ; v . ); const. inline . ◆ addTo(). template<typename T > . template<class Dest > . void sofa::linearalgebra::SparseMatrix< T >::addTo ; (; Dest * ; dest); const. inline . ◆ begin() [1/2]. template<typename T > . LineIterator sofa::linearalgebra::SparseMatrix< T >::begin ; (; ). inline . ◆ begin() [2/2]. template<typename T > . LineConstIterator sofa::linearalgebra::SparseMatrix< T >::begin ; (; ); const. inline . ◆ clear() [1/2]. template<typename T > . void sofa::linearalgebra::SparseMatrix< T >::clear ; (; ). inlineoverridevirtual . Reset all values to 0. ; Implements sofa::linearalgebra::BaseMatrix. ◆ clear() [2/2]. template<typename T > . void sofa::linearalgebra::SparseMatrix< T >::clear ; (; Index ; i, . Index ; j . ). inlineoverridevirtual . Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearCol(). template<typename T > . void sofa::linearalgebra::SparseMatrix< T >::clearCol ; (; Index ; j). inlineoverridevirtual . Reset the all values in column j to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRow(). template<typename T > . void sofa::linearalgebra::SparseMatrix< T >::clearRow ; (; Index ; i). inlineoverridevirtual . Reset all the values in row i to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRowCol(). template<typename T > . void sofa::linearalgebra::SparseMatrix< T >::clearRowCol ; (; Index ; i). inlineoverridevirtual . Reset the value of both row and column i to 0. ; Reimplemented from sofa::linearalgebra:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_sparse_matrix.html:21505,clear,clear,21505,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_sparse_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_sparse_matrix.html,1,['clear'],['clear']
Usability,"(T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::core::behavior::SingleStateAccessor< DataTypes >;  SOFA_ABSTRACT_CLASS (SOFA_TEMPLATE(SingleStateAccessor, DataTypes), StateAccessor);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; MechanicalState< DataTypes > * getMState ();  ; const MechanicalState< DataTypes > * getMState () const;  . Protected Member Functions;  ParabolicProjectiveConstraint (core::behavior::MechanicalState< DataTypes > *mstate=nullptr);  ;  ~ParabolicProjectiveConstraint ();  ; template<class DataDeriv > ; void projectResponseT (DataDeriv &dx, const std::function< void(DataDeriv &, const unsigned int)> &clear);  ;  Protected Member Functions inherited from sofa::core::behavior::ProjectiveConstraintSet< DataTypes >;  ProjectiveConstraintSet (MechanicalState< DataTypes > *mm=nullptr);  ;  ~ProjectiveConstraintSet () override;  ;  Protected Member Functions inherited from sofa::core::behavior::BaseProjectiveConstraintSet;  BaseProjectiveConstraintSet ();  ;  ~BaseProjectiveConstraintSet () override;  ;  Protected Member Functions inherited from sofa::core::behavior::StateAccessor;  StateAccessor ();  ;  ~StateAccessor () override=default;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know i",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_parabolic_projective_constraint.html:15856,clear,clear,15856,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_parabolic_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_parabolic_projective_constraint.html,1,['clear'],['clear']
Usability,"(const core::MechanicalParams *) overridesofa::component::linearsystem::MatrixFreeSystem< TMatrix, TVector >inlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseMatrixLinearSystem()sofa::core::behavior::BaseMatrixLinearSystemprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; buildSystemMatrix(const core::MechanicalParams *mparams)sofa::core::behavior::BaseMatrixLinearSystem; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearSystem()sofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >virtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; copyLocalVectorToGlobalVector(core::MultiVecDerivId v, TVector *globalVector)sofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >protected; copyLocalVectorToGlobalVector(core::MultiVecDerivId v, GraphScatteredVector *globalVector)sofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >protected; copyLocalVectorToGlobalVector(core::MultiVecDerivId v, GraphScatteredVector *globalVector)sofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >protected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_matrix_free_system-members.html:2588,clear,clearSystem,2588,api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_matrix_free_system-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_matrix_free_system-members.html,1,['clear'],['clearSystem']
Usability,") [8/8]. template<std::size_t LC, typename T = SReal> . virtual void sofa::linearalgebra::BaseMatrix::add. Add v to the existing value of the element at row i, column j (using 0-based indices) . ◆ addB() [1/2]. template<std::size_t LC, typename T = SReal> . void sofa::linearalgebra::BlockDiagonalMatrix< LC, T >::addB ; (; Index ; i, . const Block & ; b . ). inline . ◆ addB() [2/2]. template<std::size_t LC, typename T = SReal> . void sofa::linearalgebra::BlockDiagonalMatrix< LC, T >::addB ; (; Index ; i, . Index ; j, . const Block & ; b . ). inline . ◆ bloc() [1/2]. template<std::size_t LC, typename T = SReal> . const Block& sofa::linearalgebra::BlockDiagonalMatrix< LC, T >::bloc ; (; Index ; i); const. inline . ◆ bloc() [2/2]. template<std::size_t LC, typename T = SReal> . const Block& sofa::linearalgebra::BlockDiagonalMatrix< LC, T >::bloc ; (; Index ; i, . Index ; j . ); const. inline . ◆ clear() [1/2]. template<std::size_t LC, typename T = SReal> . void sofa::linearalgebra::BlockDiagonalMatrix< LC, T >::clear ; (; ). inlineoverridevirtual . Reset all values to 0. ; Implements sofa::linearalgebra::BaseMatrix. ◆ clear() [2/2]. template<std::size_t LC, typename T = SReal> . void sofa::linearalgebra::BlockDiagonalMatrix< LC, T >::clear ; (; Index ; i, . Index ; j . ). inlineoverridevirtual . Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearCol(). template<std::size_t LC, typename T = SReal> . void sofa::linearalgebra::BlockDiagonalMatrix< LC, T >::clearCol ; (; Index ; j). inlineoverridevirtual . Reset the all values in column j to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRow(). template<std::size_t LC, typename T = SReal> . void sofa::linearalgebra::BlockDiagonalMatrix< LC, T >::clearRow ; (; Index ; i). inlineoverridevirtual . Reset all the values in row i to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRowCol(). template<std::size_t LC, typename T = SReal> . void sofa::linearalgebra::BlockDiagonalMatrix< LC, T >:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_diagonal_matrix.html:18997,clear,clear,18997,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_diagonal_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_diagonal_matrix.html,1,['clear'],['clear']
Usability,") const overridesofa::component::topology::container::dynamic::QuadSetTopologyContainervirtual; cleanEdgeTopologyFromDirty()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; cleanPointTopologyFromDirty()sofa::component::topology::container::dynamic::PointSetTopologyContainerprotected; cleanQuadTopologyFromDirty()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear() overridesofa::component::topology::container::dynamic::QuadSetTopologyContainervirtual; clearEdges()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearEdgesAroundVertex()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearEdgesInQuad()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; clearLoggedMessages() constsofa::core::objectmodel::Base; clearQuads()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; clearQuadsAroundEdge()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; clearQuadsAroundVertex()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createEdgesAroundVertexArray()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotectedvirtual; createEdgeSetArray() overridesofa::component::topology::container::dynamic::QuadSetTopologyContainerprotectedvirtual; createEdgesInQuadArray()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotectedvirtual; cre",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_container-members.html:4531,clear,clearQuads,4531,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_container-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_container-members.html,1,['clear'],['clearQuads']
Usability,") constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowEnd(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowRange(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsBegin() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsEnd() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowSize() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsRange() constsofa::linearalgebra::BaseMatrixinlinevirtual; BSIZE enum valuesofa::linearalgebra::BTDMatrix< N, T >; BTDMatrix()sofa::linearalgebra::BTDMatrix< N, T >; BTDMatrix(Index nbRow, Index nbCol)sofa::linearalgebra::BTDMatrix< N, T >; clear(Index i, Index j) overridesofa::linearalgebra::BTDMatrix< N, T >virtual; clear() overridesofa::linearalgebra::BTDMatrix< N, T >virtual; clearCol(Index j) overridesofa::linearalgebra::BTDMatrix< N, T >virtual; clearCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRow(Index i) overridesofa::linearalgebra::BTDMatrix< N, T >virtual; clearRowCol(Index i) overridesofa::linearalgebra::BTDMatrix< N, T >virtual; clearRows(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowsCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; cols(void) constsofa::linearalgebra::BaseMatrixinline; colSize(void) const overridesofa::linearalgebra::BTDMatrix< N, T >virtual; compress()sofa::linearalgebra::BaseMatrixvirtual; createBlockAccessor(Index row, Index col, void *internalPtr=nullptr)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockAccessor(Index row, Index col, Index internalData)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockConstAccessor(Index row, Index col, void *internalPtr=nullptr) constsofa::linearalgebra::BaseMatrixinlineprotected; createBlockConstAccessor(Index row, Index col, Index internalData) constsofa::linearalgebra::BaseMatrixinlineprotected; createColBlockConstIterator(Index row, void *internalPtr) constsofa::linearalgebra::BaseMatrixinlineprotected; creat",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_b_t_d_matrix-members.html:6001,clear,clearRowCol,6001,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_b_t_d_matrix-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_b_t_d_matrix-members.html,1,['clear'],['clearRowCol']
Usability,") override;  ; void addPoint (SReal px, SReal py, SReal pz) override;  ; Size getNbPoints () const override;  Returns the number of vertices in this topology. More...;  ; void setNbPoints (Size n) override;  Set the number of vertices in this topology. More...;  ; bool hasPos () const override;  check if vertices in this topology have positions. More...;  ; SReal getPX (Index i) const override;  Returns the X coordinate of the ith DOF. More...;  ; SReal getPY (Index i) const override;  Returns the Y coordinate of the ith DOF. More...;  ; SReal getPZ (Index i) const override;  Returns the Z coordinate of the ith DOF. More...;  ; sofa::geometry::ElementType getTopologyType () const override;  Returns the type of the topology. More...;  ; bool checkTopology () const override;  Checks if the Topology is coherent. More...;  ; void addPoint ();  add one DOF in this topology (simply increment the number of DOF) More...;  ; void addPoints (const Size nPoints);  add a number of DOFs in this topology (simply increase the number of DOF according to this parameter) More...;  ; void removePoint ();  remove one DOF in this topology (simply decrement the number of DOF) More...;  ; void removePoints (const Size nPoints);  remove a number of DOFs in this topology (simply decrease the number of DOF according to this parameter) More...;  ;  Public Member Functions inherited from sofa::core::topology::TopologyContainer;  SOFA_CLASS2 (TopologyContainer, BaseTopologyObject, BaseMeshTopology);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; const SeqEdges & getEdges () override;  ; const SeqTriangles & getTriangles () override;  ; const SeqQuads & getQuads () override;  ; const SeqTetrahedra & getTetrahedra () override;  ; const SeqHexahedra & getHexahedra () override;  ; int getRevision () const override;  Get the current revision of this mesh. More...;  ; const std::list< const TopologyChange * > & getCha",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_container.html:8600,simpl,simply,8600,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_container.html,1,['simpl'],['simply']
Usability,"); const. ◆ bloc() [1/2]. template<std::size_t N, typename T > . BTDMatrix< N, T >::Block & sofa::linearalgebra::BTDMatrix< N, T >::bloc ; (; Index ; bi, . Index ; bj . ). ◆ bloc() [2/2]. template<std::size_t N, typename T > . const BTDMatrix< N, T >::Block & sofa::linearalgebra::BTDMatrix< N, T >::bloc ; (; Index ; bi, . Index ; bj . ); const. ◆ clear() [1/2]. template<std::size_t N, typename T > . void sofa::linearalgebra::BTDMatrix< N, T >::clear ; (; ). overridevirtual . Reset all values to 0. ; Implements sofa::linearalgebra::BaseMatrix. ◆ clear() [2/2]. template<std::size_t N, typename T > . void sofa::linearalgebra::BTDMatrix< N, T >::clear ; (; Index ; i, . Index ; j . ). overridevirtual . Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearCol(). template<std::size_t N, typename T > . void sofa::linearalgebra::BTDMatrix< N, T >::clearCol ; (; Index ; j). overridevirtual . Reset the all values in column j to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRow(). template<std::size_t N, typename T > . void sofa::linearalgebra::BTDMatrix< N, T >::clearRow ; (; Index ; i). overridevirtual . Reset all the values in row i to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRowCol(). template<std::size_t N, typename T > . void sofa::linearalgebra::BTDMatrix< N, T >::clearRowCol ; (; Index ; i). overridevirtual . Reset the value of both row and column i to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ colSize(). template<std::size_t N, typename T > . BTDMatrix< N, T >::Index sofa::linearalgebra::BTDMatrix< N, T >::colSize ; (; void ; ); const. overridevirtual . Number of columns. ; Implements sofa::linearalgebra::BaseMatrix. ◆ element(). template<std::size_t N, typename T > . SReal sofa::linearalgebra::BTDMatrix< N, T >::element ; (; Index ; i, . Index ; j . ); const. overridevirtual . Read the value of the element at row i, column j (using 0-based indices) ; Implements sofa::linearalgebra::BaseMatrix. ◆ getAligned",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_b_t_d_matrix.html:17747,clear,clearRow,17747,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_b_t_d_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_b_t_d_matrix.html,1,['clear'],['clearRow']
Usability,");  . Friends; std::ostream & operator<< (std::ostream &os, const vector_device< T, MemoryManager, DataTypeInfoManager > &vec);  Output stream. More...;  ; std::istream & operator>> (std::istream &in, vector_device< T, MemoryManager, DataTypeInfoManager > &vec);  Input stream. More...;  . Attribute details. ◆ allocSize. template<class T , class MemoryManager , class DataTypeInfoManager > . Size sofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >::allocSize. protected . Allocated size on host. . ◆ bufferIsRegistered. template<class T , class MemoryManager , class DataTypeInfoManager > . bool sofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >::bufferIsRegistered. mutableprotected . True if the buffer is registered with CUDA. . ◆ bufferObject. template<class T , class MemoryManager , class DataTypeInfoManager > . buffer_id_type sofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >::bufferObject. protected . Optional associated buffer ID. . ◆ clearSize. template<class T , class MemoryManager , class DataTypeInfoManager > . Size sofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >::clearSize. mutableprotected . when initializing missing device data, up to where entries should be set to zero ? . ◆ cptid. template<class T , class MemoryManager , class DataTypeInfoManager > . int sofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >::cptid = 0. inlinestaticprotected . ◆ deviceAllocSize. template<class T , class MemoryManager , class DataTypeInfoManager > . Size sofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >::deviceAllocSize[MemoryManager::MAX_DEVICES]. mutableprotected . Allocated size on each device. . ◆ deviceIsValid. template<class T , class MemoryManager , class DataTypeInfoManager > . int sofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >::deviceIsValid. mutableprotected . True if the data on the GPU is currently valid (up to the given deviceVectorSize of each devi",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1vector__device.html:5204,clear,clearSize,5204,api/master/sofa/html/classsofa_1_1type_1_1vector__device.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1vector__device.html,1,['clear'],['clearSize']
Usability,");  ; virtual void addHexa (Index a, Index b, Index c, Index d, Index e, Index f, Index g, Index h);  ; virtual const sofa::type::vector< Index > getConnectedElement (Index elem);  Returns the set of element indices connected to an input one (i.e. which can be reached by topological links) More...;  ;  Public Member Functions inherited from sofa::core::topology::Topology;  SOFA_CLASS (Topology, core::objectmodel::BaseObject);  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  . Protected Member Functions;  EdgeSetTopologyContainer ();  ;  ~EdgeSetTopologyContainer () override;  ; virtual void createEdgeSetArray ();  Creates the EdgeSet array. More...;  ; virtual void createEdgesAroundVertexArray ();  Creates the EdgesAroundVertex array. More...;  ; void clearEdges ();  ; void clearEdgesAroundVertex ();  ; void setEdgeTopologyToDirty ();  ; void cleanEdgeTopologyFromDirty ();  ; const bool & isEdgeTopologyDirty ();  ; virtual EdgesAroundVertex & getEdgesAroundVertexForModification (const PointID i);  Returns a non-const list of Edge indices around the ith DOF for subsequent modification. More...;  ;  Protected Member Functions inherited from sofa::component::topology::container::dynamic::PointSetTopologyContainer;  PointSetTopologyContainer (Size nPoints=0);  ;  ~PointSetTopologyContainer () override=default;  ; void setPointTopologyToDirty ();  ; void cleanPointTopologyFromDirty ();  ; const bool & isPointTopologyDirty () const;  ;  Protected Member Functions inherited from sofa::core::topology::TopologyContainer;  TopologyContainer ();  Constructor. More...;  ;  ~TopologyContainer () override;  Destructor. More...;  ;  Protected Member Functions inherited from sofa::core::topology::BaseTopologyObject;  BaseTopologyObject ();  ;  ~BaseTopologyObject () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtu",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_container.html:28419,clear,clearEdges,28419,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_container.html,2,['clear'],"['clearEdges', 'clearEdgesAroundVertex']"
Usability,");  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; bool hasTriangles () const;  ; bool hasEdgesInTriangle () const;  ; bool hasTrianglesAroundVertex () const;  ; bool hasTrianglesAroundEdge () const;  ; bool hasBorderElementLists () const;  ; void createElementsOnBorder ();  : Create element lists which are on topology border: More...;  ; void reOrientateTriangle (TriangleID id) override;  Will change order of vertices in triangle: t[1] <=> t[2]. More...;  ; sofa::geometry::ElementType getTopologyType () const override;  Returns the type of the topology. More...;  ; bool linkTopologyHandlerToData (core::topology::TopologyHandler *topologyHandler, sofa::geometry::ElementType elementType) override;  ; bool unlinkTopologyHandlerToData (core::topology::TopologyHandler *topologyHandler, sofa::geometry::ElementType elementType) override;  ; void clear () override;  ; void addEdge (Index, Index) override;  ; void addTriangle (Index a, Index b, Index c) override;  ; const SeqTriangles & getTriangles () override;  Returns the quad array. More...;  ; const Triangle getTriangle (TriangleID i) override;  Returns the triangle corresponding to the TriangleID i. More...;  ; TriangleID getTriangleIndex (PointID v1, PointID v2, PointID v3) override;  Returns the index of the triangle given three vertex indices; returns InvalidID if no triangle exists. More...;  ; const EdgesInTriangle & getEdgesInTriangle (TriangleID id) override;  Returns the 3 edges adjacent to a given triangle. More...;  ; const TrianglesAroundVertex & getTrianglesAroundVertex (PointID id) override;  Returns the set of triangles adjacent to a given vertex. More...;  ; const TrianglesAroundEdge & getTrianglesAroundEdge (EdgeID id) override;  Returns the set of triangles adjacent to a given edge. More...;  ; int getVertexInd",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container.html:13812,clear,clear,13812,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container.html,1,['clear'],['clear']
Usability,");  ; void reserve (Size s);  ; Index push_back (const_reference v);  . Friends; std::ostream & operator<< (std::ostream &os, const WriteAccessorVectorId< T > &vec);  ; std::istream & operator>> (std::istream &in, WriteAccessorVectorId< T > &vec);  . Attribute details. ◆ vref. template<class T > . container_type& sofa::helper::WriteAccessorVectorId< T >::vref. protected . Constructor details. ◆ WriteAccessorVectorId(). template<class T > . sofa::helper::WriteAccessorVectorId< T >::WriteAccessorVectorId ; (; container_type & ; container). inline . ◆ ~WriteAccessorVectorId(). template<class T > . sofa::helper::WriteAccessorVectorId< T >::~WriteAccessorVectorId ; (; ). inline . Function details. ◆ begin() [1/2]. template<class T > . iterator sofa::helper::WriteAccessorVectorId< T >::begin ; (; ). inline . ◆ begin() [2/2]. template<class T > . const_iterator sofa::helper::WriteAccessorVectorId< T >::begin ; (; ); const. inline . ◆ clear(). template<class T > . void sofa::helper::WriteAccessorVectorId< T >::clear ; (; ). inline . ◆ empty(). template<class T > . bool sofa::helper::WriteAccessorVectorId< T >::empty ; (; ); const. inline . ◆ end() [1/2]. template<class T > . iterator sofa::helper::WriteAccessorVectorId< T >::end ; (; ). inline . ◆ end() [2/2]. template<class T > . const_iterator sofa::helper::WriteAccessorVectorId< T >::end ; (; ); const. inline . ◆ operator()() [1/2]. template<class T > . reference sofa::helper::WriteAccessorVectorId< T >::operator() ; (; Index ; i). inline . ◆ operator()() [2/2]. template<class T > . const_reference sofa::helper::WriteAccessorVectorId< T >::operator() ; (; Index ; i); const. inline . ◆ operator[]() [1/2]. template<class T > . reference sofa::helper::WriteAccessorVectorId< T >::operator[] ; (; Index ; i). inline . ◆ operator[]() [2/2]. template<class T > . const_reference sofa::helper::WriteAccessorVectorId< T >::operator[] ; (; Index ; i); const. inline . ◆ push_back(). template<class T > . Index sofa::helper::WriteAccesso",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_write_accessor_vector_id.html:2234,clear,clear,2234,api/master/sofa/html/classsofa_1_1helper_1_1_write_accessor_vector_id.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_write_accessor_vector_id.html,1,['clear'],['clear']
Usability,")> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseAnimationLoop()sofa::core::behavior::BaseAnimationLoopprotected; BaseContext typedefsofa::simulation::CollisionAnimationLoop; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseObjectDescription typedefsofa::simulation::CollisionAnimationLoop; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear()sofa::component::animationloop::MultiTagAnimationLoopvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; CollisionAnimationLoop()sofa::simulation::CollisionAnimationLoopprotected; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeCollision(const core::ExecParams *params=core::execparams::defaultInstance())sofa::simulation::CollisionAnimationLoopprotectedvirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_computeBoundingBoxsofa::core::behavior::BaseAnimationLoop; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::ob",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop-members.html:2191,clear,clearLoggedMessages,2191,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop-members.html,1,['clear'],['clearLoggedMessages']
Usability,")sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseTopologyObject()sofa::core::topology::BaseTopologyObjectinlineprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Bas",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_base_topology_object-members.html:1972,clear,clearLoggedMessages,1972,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_base_topology_object-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_base_topology_object-members.html,2,['clear'],['clearLoggedMessages']
Usability,")sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bindInput(core::visual::VisualParams *)sofa::gl::component::shader::VisualManagerSecondaryPass; bwdDraw(core::visual::VisualParams *) overridesofa::gl::component::shader::VisualManagerPassvirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkMultipass(sofa::core::objectmodel::BaseContext *con)sofa::gl::component::shader::VisualManagerPassprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; doInitVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::VisualManagerSecondaryPassvirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *vparams) overridesofa::gl::component::shader::VisualManagerPassvirtual; drawScene(core::visual::VisualParams *vp) overridesofa::gl::component::shader::VisualManagerSecond",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_visual_manager_secondary_pass-members.html:2687,clear,clearLoggedMessages,2687,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_visual_manager_secondary_pass-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_visual_manager_secondary_pass-members.html,1,['clear'],['clearLoggedMessages']
Usability,"* > sofa::gui::qt::ModifyObject::m_tabs. protected . ◆ messageEdit. QTextBrowser* sofa::gui::qt::ModifyObject::messageEdit. protected . ◆ messageTab. QWidget* sofa::gui::qt::ModifyObject::messageTab. protected . Constructor details. ◆ ModifyObject(). sofa::gui::qt::ModifyObject::ModifyObject ; (; void * ; Id, . QTreeWidgetItem * ; item_clicked, . QWidget * ; parent, . const ModifyObjectFlags & ; dialogFlags, . const char * ; name = nullptr, . bool ; modal = false, . Qt::WindowFlags ; f = Qt::WindowType::Widget . ). explicit . ◆ ~ModifyObject(). sofa::gui::qt::ModifyObject::~ModifyObject ; (; ). inlineoverride . Function details. ◆ accept. void sofa::gui::qt::ModifyObject::accept ; (; ). overrideslot . ◆ beginDataModification. void sofa::gui::qt::ModifyObject::beginDataModification ; (; sofa::core::objectmodel::BaseData * ; data). signal . ◆ beginObjectModification. void sofa::gui::qt::ModifyObject::beginObjectModification ; (; sofa::core::objectmodel::Base * ; object). signal . ◆ clearMessages. void sofa::gui::qt::ModifyObject::clearMessages ; (; ). protectedslot . ◆ closeEvent. void sofa::gui::qt::ModifyObject::closeEvent ; (; QCloseEvent * ; ). inlineoverrideslot . ◆ closeNow. void sofa::gui::qt::ModifyObject::closeNow ; (; ). inlineslot . ◆ componentDirty. void sofa::gui::qt::ModifyObject::componentDirty ; (; bool ; ). signal . ◆ createDialog() [1/2]. void sofa::gui::qt::ModifyObject::createDialog ; (; core::objectmodel::Base * ; node). ◆ createDialog() [2/2]. void sofa::gui::qt::ModifyObject::createDialog ; (; core::objectmodel::BaseData * ; data). ◆ dataModified. void sofa::gui::qt::ModifyObject::dataModified ; (; QString ; ). signal . ◆ dialogClosed. void sofa::gui::qt::ModifyObject::dialogClosed ; (; void * ; ). signal . ◆ endDataModification. void sofa::gui::qt::ModifyObject::endDataModification ; (; sofa::core::objectmodel::BaseData * ; data). signal . ◆ endObjectModification. void sofa::gui::qt::ModifyObject::endObjectModification ; (; sofa::core::objectmod",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_modify_object.html:3981,clear,clearMessages,3981,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_modify_object.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_modify_object.html,1,['clear'],['clearMessages']
Usability,"*attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addObject(sptr< BaseObject >, TypeOfInsertion=TypeOfInsertion::AtEnd)sofa::core::objectmodel::BaseContextinlinevirtual; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; animate_sofa::core::objectmodel::Context; Base()sofa::core::objectmodel::Baseprotected; BaseContext()sofa::core::objectmodel::BaseContextprotected; BaseType typedefsofa::core::objectmodel::Base; canChangeSleepingState() const overridesofa::core::objectmodel::Contextvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; Context()sofa::core::objectmodel::Contextprotected; copyContext(const Context &c)sofa::core::objectmodel::Context; copySimulationContext(const Context &c)sofa::core::objectmodel::Context; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; d_canChangeSleepingStatesofa::core::objectmodel::Context; d_componentStatesofa::core::objectmodel::Base; d_isSleepingsofa::core::objectmodel::Context; d_messageLogCountsofa::core::objectmodel::Basemutable; dt_sofa::core::objectmodel::Context; executeVisitor(simulation::Visitor *, bool precomputedOrder=false)sofa::core::objectmodel::BaseContextvirtual; f_bboxsofa::core::objectmodel::Base; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *link)sofa::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_context-members.html:1570,clear,clearLoggedMessages,1570,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_context-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_context-members.html,1,['clear'],['clearLoggedMessages']
Usability,"*src)sofa::linearalgebra::BaseVectorinlinevirtual; sofa::linearalgebra::BaseVector::add(Index i0, Index n, const double *src)sofa::linearalgebra::BaseVectorinlinevirtual; sofa::linearalgebra::BaseVector::add(Index i0, Index n, const int *src)sofa::linearalgebra::BaseVectorinlinevirtual; addDefaultImpl(Index i0, Index n, const T *src)sofa::linearalgebra::BaseVectorinlineprotected; allocsizesofa::linearalgebra::FullVector< T >protected; asub(Index bi, Index) constsofa::linearalgebra::BlockVector< N, T >; asub(Index bi, Index)sofa::linearalgebra::BlockVector< N, T >; begin()sofa::linearalgebra::FullVector< T >inline; begin() constsofa::linearalgebra::FullVector< T >inline; BlockVector()sofa::linearalgebra::BlockVector< N, T >; BlockVector(Index n)sofa::linearalgebra::BlockVector< N, T >explicit; capacity() constsofa::linearalgebra::FullVector< T >inline; checkIndex(Index n) constsofa::linearalgebra::FullVector< T >protected; clear() overridesofa::linearalgebra::FullVector< T >virtual; clear(Index dim) overridesofa::linearalgebra::FullVector< T >virtual; const_iterator typedefsofa::linearalgebra::BlockVector< N, T >; ConstIterator typedefsofa::linearalgebra::FullVector< T >; cursizesofa::linearalgebra::FullVector< T >protected; datasofa::linearalgebra::FullVector< T >protected; dot(const FullVector< Real > &a) constsofa::linearalgebra::FullVector< T >; element(Index i) const overridesofa::linearalgebra::FullVector< T >inlinevirtual; ELEMENT_FLOAT enum valuesofa::linearalgebra::BaseVector; ELEMENT_INT enum valuesofa::linearalgebra::BaseVector; ELEMENT_UNKNOWN enum valuesofa::linearalgebra::BaseVector; elements(Index i0, Index n, float *src) constsofa::linearalgebra::BaseVectorinlinevirtual; elements(Index i0, Index n, double *src) constsofa::linearalgebra::BaseVectorinlinevirtual; elements(Index i0, Index n, int *src) constsofa::linearalgebra::BaseVectorinlinevirtual; elementsDefaultImpl(Index i0, Index n, T *buffer) constsofa::linearalgebra::BaseVectorinlineprotected; E",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_vector-members.html:1417,clear,clear,1417,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_vector-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_vector-members.html,1,['clear'],['clear']
Usability,", CRSConstraintPolicy >; category enum valuesofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSConstraintPolicy >; cbegin() constsofa::linearalgebra::CompressedRowSparseMatrixConstraint< TBlock, TPolicy >inline; cend() constsofa::linearalgebra::CompressedRowSparseMatrixConstraint< TBlock, TPolicy >inline; check_matrix()sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSConstraintPolicy >inline; check_matrix(Index nzmax, Index m, Index n, Index *a_p, Index *a_i, Block *a_x)sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSConstraintPolicy >inlinestatic; clear()sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSConstraintPolicy >inline; ClearByZerossofa::linearalgebra::CRSConstraintPolicystatic; clearColBlock(Index j)sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSConstraintPolicy >inline; clearRowBlock(Index i)sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSConstraintPolicy >inline; clearRowColBlock(Index i)sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSConstraintPolicy >inline; colBSize() constsofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSConstraintPolicy >inline; ColIterator typedefsofa::linearalgebra::CompressedRowSparseMatrixConstraint< TBlock, TPolicy >; colsIndexsofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSConstraintPolicy >; colsValuesofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSConstraintPolicy >; compress()sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSConstraintPolicy >inline; compressBtemp()sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSConstraintPolicy >inlineprotected; compressCSR()sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSConstraintPolicy >inlineprotected; CompressedRowSparseMatrixConstraint()sofa::linearalgebra::CompressedRowSparseMatrixConstraint< TBlock, TPolicy >inline; CompressedRowSparseMatrixConstraint(Index nbRo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_constraint-members.html:4983,clear,clearRowColBlock,4983,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_constraint-members.html,1,['clear'],['clearRowColBlock']
Usability,", Index j) constsofa::linearalgebra::BaseMatrixinlinevirtual; blocGetW(Index i, Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; blocSet(Index i, Index j, const T *buffer)sofa::linearalgebra::BaseMatrixinline; bRowBegin(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowEnd(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowRange(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsBegin() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsEnd() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowSize() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsRange() constsofa::linearalgebra::BaseMatrixinlinevirtual; clear() overridesofa::core::behavior::ApplyConstraintCompatinlinevirtual; sofa::linearalgebra::BaseMatrix::clear(Index i, Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; clearCol(Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; clearCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRow(Index i)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowCol(Index i) overridesofa::core::behavior::ApplyConstraintCompatinlinevirtual; clearRows(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowsCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; cols(void) constsofa::linearalgebra::BaseMatrixinline; colSize() const overridesofa::core::behavior::ApplyConstraintCompatinlinevirtual; componentsofa::core::behavior::ApplyConstraintCompat; compress()sofa::linearalgebra::BaseMatrixvirtual; createBlockAccessor(Index row, Index col, void *internalPtr=nullptr)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockAccessor(Index row, Index col, Index internalData)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockConstAccessor(Index row, Index col, void *internalPtr=nullptr) constsofa::linearalgebra::BaseMatrixinlineprotected; createBlockConstAccessor(Index row, Index col, Index internalData) constsofa::linearalgebra::BaseMat",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_apply_constraint_compat-members.html:5277,clear,clearRow,5277,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_apply_constraint_compat-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_apply_constraint_compat-members.html,1,['clear'],['clearRow']
Usability,", Index, Index);  ; Block & sub (Index i, Index j, Index, Index);  ; template<class B > ; void getSubMatrix (Index i, Index j, Index nrow, Index ncol, B &m);  ; template<class B > ; void getAlignedSubMatrix (Index bi, Index bj, Index nrow, Index ncol, B &m);  ; template<class B > ; void setSubMatrix (Index i, Index j, Index nrow, Index ncol, const B &m);  ; template<class B > ; void setAlignedSubMatrix (Index bi, Index bj, Index nrow, Index ncol, const B &m);  ; void set (Index i, Index j, double v) override;  Write the value of the element at row i, column j (using 0-based indices) More...;  ; void add (Index i, Index j, double v) override;  Add v to the existing value of the element at row i, column j (using 0-based indices) More...;  ; void clear (Index i, Index j) override;  ; void clearRow (Index i) override;  Reset all the values in row i to 0. More...;  ; void clearCol (Index j) override;  Reset the all values in column j to 0. More...;  ; void clearRowCol (Index i) override;  Reset the value of both row and column i to 0. More...;  ; void clear () override;  Reset all values to 0. More...;  ; template<class Real2 > ; FullVector< Real2 > operator* (const FullVector< Real2 > &v) const;  ;  Public Member Functions inherited from sofa::linearalgebra::BaseMatrix;  BaseMatrix ();  ; virtual ~BaseMatrix ();  ; Index rows (void) const;  Number of rows (Eigen-compatible API) More...;  ; Index cols (void) const;  Number of columns (Eigen-compatible API) More...;  ; SReal operator() (Index i, Index j) const;  Read the value of the element at row i, column j (using 0-based indices). Eigen-compatible API. More...;  ; virtual void add (Index row, Index col, const type::Mat3x3d &_M);  Adding values from a 3x3d matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat3x3f &_M);  Adding values from a 3x3f matrix. This function may be overload to obtain better performances. More...;  ; virtual void ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_full_matrix.html:2647,clear,clearRowCol,2647,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_full_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_full_matrix.html,1,['clear'],['clearRowCol']
Usability,", TDestPtr, TPtr >::SinglePtr ; (; ). inline . Function details. ◆ add(). template<class T , class TDestPtr , class TPtr = T*> . void sofa::core::objectmodel::SinglePtr< T, TDestPtr, TPtr >::add ; (; TDestPtr ; v). inline . ◆ addBegin(). template<class T , class TDestPtr , class TPtr = T*> . void sofa::core::objectmodel::SinglePtr< T, TDestPtr, TPtr >::addBegin ; (; TDestPtr ; v). inline . ◆ begin(). template<class T , class TDestPtr , class TPtr = T*> . const_iterator sofa::core::objectmodel::SinglePtr< T, TDestPtr, TPtr >::begin ; (; ); const. inline . ◆ cbegin(). template<class T , class TDestPtr , class TPtr = T*> . const_iterator sofa::core::objectmodel::SinglePtr< T, TDestPtr, TPtr >::cbegin ; (; ); const. inline . ◆ cend(). template<class T , class TDestPtr , class TPtr = T*> . const_iterator sofa::core::objectmodel::SinglePtr< T, TDestPtr, TPtr >::cend ; (; ); const. inline . ◆ clear(). template<class T , class TDestPtr , class TPtr = T*> . void sofa::core::objectmodel::SinglePtr< T, TDestPtr, TPtr >::clear ; (; ). inline . ◆ crbegin(). template<class T , class TDestPtr , class TPtr = T*> . const_reverse_iterator sofa::core::objectmodel::SinglePtr< T, TDestPtr, TPtr >::crbegin ; (; ); const. inline . ◆ crend(). template<class T , class TDestPtr , class TPtr = T*> . const_reverse_iterator sofa::core::objectmodel::SinglePtr< T, TDestPtr, TPtr >::crend ; (; ); const. inline . ◆ empty(). template<class T , class TDestPtr , class TPtr = T*> . bool sofa::core::objectmodel::SinglePtr< T, TDestPtr, TPtr >::empty ; (; ); const. inline . ◆ end(). template<class T , class TDestPtr , class TPtr = T*> . const_iterator sofa::core::objectmodel::SinglePtr< T, TDestPtr, TPtr >::end ; (; ); const. inline . ◆ get() [1/2]. template<class T , class TDestPtr , class TPtr = T*> . TPtr& sofa::core::objectmodel::SinglePtr< T, TDestPtr, TPtr >::get ; (; ). inline . ◆ get() [2/2]. template<class T , class TDestPtr , class TPtr = T*> . const TPtr& sofa::core::objectmodel::SinglePtr< T,",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_single_ptr.html:3091,clear,clear,3091,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_single_ptr.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_single_ptr.html,1,['clear'],['clear']
Usability,", TPolicy >; check_matrix()sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSMechanicalPolicy >inline; check_matrix(Index nzmax, Index m, Index n, Index *a_p, Index *a_i, Block *a_x)sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSMechanicalPolicy >inlinestatic; clear(Index i, Index j) overridesofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >inline; clear() overridesofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >inlinevirtual; sofa::linearalgebra::BaseMatrix::clear(Index i, Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; ClearByZerossofa::linearalgebra::CRSDefaultPolicystatic; clearCol(Index j) overridesofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >inline; sofa::linearalgebra::BaseMatrix::clearCol(Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; clearColBlock(Index j)sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSMechanicalPolicy >inline; clearCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRow(Index i) overridesofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >inline; sofa::linearalgebra::BaseMatrix::clearRow(Index i)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowBlock(Index i)sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSMechanicalPolicy >inline; clearRowCol(Index i) overridesofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >inline; sofa::linearalgebra::BaseMatrix::clearRowCol(Index i)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowColBlock(Index i)sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSMechanicalPolicy >inline; clearRows(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowsCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; colBSize() constsofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSMechanicalPolicy >inline; cols(void",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical-members.html:14687,clear,clearCols,14687,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical-members.html,1,['clear'],['clearCols']
Usability,", class, typename > Struct Template Reference; SOFA API: sofa::type::detect< T, Op, void_t< Op< T > > > Struct Template Reference; SOFA API: sofa::type::qNoInit Struct Reference; SOFA API: sofa::type::trait::is_container< T > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::type::trait::is_specialization_of< T, Template > Struct Template Reference; SOFA API: sofa::type::trait::is_specialization_of< Template< Args... >, Template > Struct Template Reference; SOFA API: sofa::type::trait::is_vector< T > Struct Template Reference; SOFA API: Member List; tabs.css; SOFA API: sofa::gui::qt::ObjectModelPtr Union Reference; SOFA API: Member List. applications; . /plugins; . /4-wheel-summitxl-robot; ; SOFA – 4-Wheel SummitXL Robot. /bayesian-filtering; ; SOFA – Bayesian Filtering. /cardiac-electrophysiology-2; ; SOFA – Cardiac Electrophysiology. /cardiac-mechanics; ; SOFA – Cardiac Mechanics. /cgal-mesh-generation; ; SOFA – CGAL Mesh Generation. /condensed-fem-model-learning; ; SOFA – Condensed FEM Model Learning. /cosserat-beam-cable-needle; ; SOFA – Cosserat Beam: cable & needle. /cuda-gpu-computing; ; SOFA – CUDA GPU Computing. /cutting-mesh-refinement; ; SOFA – Cutting & Mesh Refinement. /deep-learning-framework; ; SOFA – Deep Learning Framework. /design-optimization; ; SOFA – Design Optimization. /endoscopic-robot; ; SOFA – Endoscopic Robot. /export-system-matrices; ; SOFA – Export System Matrices. /follou-avatar-haptics; ; SOFA – Follou Avatar Haptics. /force-dimension-haptics; ; SOFA – Force Dimension Haptics. /geomagic-haptics; ; SOFA – Geomagic Haptics. /google-benchmark-for-sofa; ; SOFA – Google Benchmark for SOFA. /gpu-cholesky-solver; ; SOFA – GPU Cholesky Solver. /heat-transfer-gpu-diffusion-reaction; ; SOFA – Heat Transfer: GPU diffusion reaction. /image-manipulation; ; SOFA – Image Manipulation. /image-registration; ; SOFA – Image Registration. /inverse-model-for-soft-robot-control; ; SOFA – Inverse Model for Soft-Robot Control. /lapgym; ; SOFA ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:244403,learn,learning,244403,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['learn'],['learning']
Usability,", const T *buffer)sofa::linearalgebra::BaseMatrixinline; bRowBegin(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowEnd(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowRange(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsBegin() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsEnd() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowSize() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsRange() constsofa::linearalgebra::BaseMatrixinlinevirtual; BSIZE enum valuesofa::linearalgebra::BTDMatrix< N, T >; BTDMatrix()sofa::linearalgebra::BTDMatrix< N, T >; BTDMatrix(Index nbRow, Index nbCol)sofa::linearalgebra::BTDMatrix< N, T >; clear(Index i, Index j) overridesofa::linearalgebra::BTDMatrix< N, T >virtual; clear() overridesofa::linearalgebra::BTDMatrix< N, T >virtual; clearCol(Index j) overridesofa::linearalgebra::BTDMatrix< N, T >virtual; clearCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRow(Index i) overridesofa::linearalgebra::BTDMatrix< N, T >virtual; clearRowCol(Index i) overridesofa::linearalgebra::BTDMatrix< N, T >virtual; clearRows(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowsCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; cols(void) constsofa::linearalgebra::BaseMatrixinline; colSize(void) const overridesofa::linearalgebra::BTDMatrix< N, T >virtual; compress()sofa::linearalgebra::BaseMatrixvirtual; createBlockAccessor(Index row, Index col, void *internalPtr=nullptr)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockAccessor(Index row, Index col, Index internalData)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockConstAccessor(Index row, Index col, void *internalPtr=nullptr) constsofa::linearalgebra::BaseMatrixinlineprotected; createBlockConstAccessor(Index row, Index col, Index internalData) constsofa::linearalgebra::BaseMatrixinlineprotected; createColBlockConstIterator(Index row, voi",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_b_t_d_matrix-members.html:5928,clear,clearRow,5928,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_b_t_d_matrix-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_b_t_d_matrix-members.html,1,['clear'],['clearRow']
Usability,", const T *buffer)sofa::linearalgebra::BaseMatrixinline; bRowBegin(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowEnd(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowRange(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsBegin() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsEnd() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowSize() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsRange() constsofa::linearalgebra::BaseMatrixinlinevirtual; clear()=0sofa::linearalgebra::BaseMatrixpure virtual; clear(Index i, Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; clearCol(Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; clearCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRow(Index i)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowCol(Index i)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRows(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowsCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; cols(void) constsofa::linearalgebra::BaseMatrixinline; colSize(void) const =0sofa::linearalgebra::BaseMatrixpure virtual; compress()sofa::linearalgebra::BaseMatrixvirtual; createBlockAccessor(Index row, Index col, void *internalPtr=nullptr)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockAccessor(Index row, Index col, Index internalData)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockConstAccessor(Index row, Index col, void *internalPtr=nullptr) constsofa::linearalgebra::BaseMatrixinlineprotected; createBlockConstAccessor(Index row, Index col, Index internalData) constsofa::linearalgebra::BaseMatrixinlineprotected; createColBlockConstIterator(Index row, void *internalPtr) constsofa::linearalgebra::BaseMatrixinlineprotected; createColBlockConstIterator(Index row, Index internalData) constsofa::linearalgebra::BaseMatrixinlineprotected; createRowBlockConstIterator(void *internalPtr) constsofa:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_matrix-members.html:5190,clear,clearRowsCols,5190,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_matrix-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_matrix-members.html,1,['clear'],['clearRowsCols']
Usability,", const type::RGBAColor &c4);  ; virtual void internalDrawQuad (const type::Vec3 &p1, const type::Vec3 &p2, const type::Vec3 &p3, const type::Vec3 &p4, const type::Vec3 &normal1, const type::Vec3 &normal2, const type::Vec3 &normal3, const type::Vec3 &normal4, const type::RGBAColor &c1, const type::RGBAColor &c2, const type::RGBAColor &c3, const type::RGBAColor &c4);  . Attribute details. ◆ m_fakeSphereUtil. gl::BasicShapesGL_FakeSphere<type::Vec3> sofa::gl::DrawToolGL::m_fakeSphereUtil. protected . ◆ m_sphereUtil. gl::BasicShapesGL_Sphere<type::Vec3> sofa::gl::DrawToolGL::m_sphereUtil. protected . ◆ mLightEnabled. bool sofa::gl::DrawToolGL::mLightEnabled. protected . ◆ mPolygonMode. int sofa::gl::DrawToolGL::mPolygonMode. protected . ◆ mWireFrameEnabled. bool sofa::gl::DrawToolGL::mWireFrameEnabled. protected . Constructor details. ◆ DrawToolGL(). sofa::gl::DrawToolGL::DrawToolGL ; (; ). ◆ ~DrawToolGL(). sofa::gl::DrawToolGL::~DrawToolGL ; (; ). overridevirtual . Function details. ◆ clear(). void sofa::gl::DrawToolGL::clear ; (; ). overridevirtual . Reimplemented from sofa::helper::visual::DrawTool. ◆ disableBlending(). void sofa::gl::DrawToolGL::disableBlending ; (; ). overridevirtual . Implements sofa::helper::visual::DrawTool. ◆ disableDepthTest(). void sofa::gl::DrawToolGL::disableDepthTest ; (; ). overridevirtual . Implements sofa::helper::visual::DrawTool. ◆ disableLighting(). void sofa::gl::DrawToolGL::disableLighting ; (; ). overridevirtual . Implements sofa::helper::visual::DrawTool. ◆ disablePolygonOffset(). void sofa::gl::DrawToolGL::disablePolygonOffset ; (; ). overridevirtual . Remove variable depth offset for polygon drawing. ; Implements sofa::helper::visual::DrawTool. ◆ draw3DText(). void sofa::gl::DrawToolGL::draw3DText ; (; const type::Vec3 & ; p, . float ; scale, . const type::RGBAColor & ; color, . const char * ; text . ). overridevirtual . Implements sofa::helper::visual::DrawTool. ◆ draw3DText_Indices(). void sofa::gl::DrawToolGL::draw3DText_Ind",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1_draw_tool_g_l.html:14018,clear,clear,14018,api/master/sofa/html/classsofa_1_1gl_1_1_draw_tool_g_l.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1_draw_tool_g_l.html,1,['clear'],['clear']
Usability,", std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseAnimationLoop()sofa::core::behavior::BaseAnimationLoopprotected; BaseContext typedefsofa::simulation::CollisionAnimationLoop; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseObjectDescription typedefsofa::simulation::CollisionAnimationLoop; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear()sofa::component::animationloop::MultiTagAnimationLoopvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; CollisionAnimationLoop()sofa::simulation::CollisionAnimationLoopprotected; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeCollision(const core::ExecParams *params=core::execparams::defaultInstance())sofa::simulation::CollisionAnimationLoopprotectedvirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_computeBoundingBoxsofa::core::behavior::BaseAnimationLoop; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjecti",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop-members.html:2122,clear,clear,2122,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop-members.html,1,['clear'],['clear']
Usability,", std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::component::playback::WriteStateinlinestatic; sofa::core::objectmodel::BaseObject::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_DOFsVsofa::component::playback::WriteState; d_DOFsXsofa::component::playback::WriteState; d_filenamesofa::component::playback::WriteState; d_keperiodsofa::component::playback::WriteState; d_messageLogCountsofa::core::objectmodel::Basemutable; d_periodsofa::component::playback::WriteState; d_stopAtsofa::component::playback::WriteState; d_timesofa::component::playback::WriteState; d_writeFsofa::component::playback::WriteState; d_writeVsofa::component::playback::WriteState; d_writeXsofa::component::playback::WriteState; d_writeX0sofa::component::playb",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_write_state-members.html:2083,clear,clearLoggedMessages,2083,api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_write_state-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_write_state-members.html,1,['clear'],['clearLoggedMessages']
Usability,", std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyTransformation(sofa::type::Matrix4 const &T)sofa::core::loader::MeshLoadervirtual; Base()sofa::core::objectmodel::Baseprotected; BaseLoader()sofa::core::loader::BaseLoaderprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; canLoad() overridesofa::core::loader::MeshLoadervirtual; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearBuffers() finalsofa::core::loader::MeshLoaderprotectedvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; copyMeshToData(helper::io::Mesh &_mesh)sofa::core::loader::MeshLoaderprotected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_computeMaterialFacessofa::component::io::mesh::MeshOBJLoader; d_createSubelementssofa::core::loader::MeshLoader; d_edgessofa::core::loader::MeshLoader; d_edgesGroupssofa::core::loader::MeshLoader; d_faceListsofa::component::io::mesh::MeshOBJLoader; d_filenamesofa::core::loader::BaseLoader; d_flipNormalssofa::core::loader::MeshLoader; d_handleSeamssofa::component::io::mesh::MeshOBJLoader; d_hexahedras",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_o_b_j_loader-members.html:4838,clear,clearBuffers,4838,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_o_b_j_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_o_b_j_loader-members.html,1,['clear'],['clearBuffers']
Usability,", std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyTransformation(sofa::type::Matrix4 const &T)sofa::core::loader::MeshLoadervirtual; Base()sofa::core::objectmodel::Baseprotected; BaseLoader()sofa::core::loader::BaseLoaderprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; canLoad() overridesofa::core::loader::MeshLoadervirtual; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearBuffers() finalsofa::core::loader::MeshLoaderprotectedvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; copyMeshToData(helper::io::Mesh &_mesh)sofa::core::loader::MeshLoaderprotected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_createSubelementssofa::core::loader::MeshLoader; d_edgessofa::core::loader::MeshLoader; d_edgesGroupssofa::core::loader::MeshLoader; d_edgesOnBordersofa::component::io::mesh::MeshTrianLoader; d_filenamesofa::core::loader::BaseLoader; d_flipNormalssofa::core::loader::MeshLoader; d_hexahedrasofa::core::loader::MeshLoader; d_hexahedraGroupssofa::core::loader::MeshLoader; d_highOrderEdgePositionssofa::co",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_trian_loader-members.html:4738,clear,clearBuffers,4738,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_trian_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_trian_loader-members.html,1,['clear'],['clearBuffers']
Usability,", std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyTransformation(sofa::type::Matrix4 const &T)sofa::core::loader::MeshLoadervirtual; Base()sofa::core::objectmodel::Baseprotected; BaseLoader()sofa::core::loader::BaseLoaderprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; canLoad() overridesofa::core::loader::MeshLoadervirtual; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearBuffers() finalsofa::core::loader::MeshLoaderprotectedvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; copyMeshToData(helper::io::Mesh &_mesh)sofa::core::loader::MeshLoaderprotected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_createSubelementssofa::core::loader::MeshLoader; d_edgessofa::core::loader::MeshLoader; d_edgesGroupssofa::core::loader::MeshLoader; d_filenamesofa::core::loader::BaseLoader; d_flipNormalssofa::core::loader::MeshLoader; d_forceBinarysofa::component::io::mesh::MeshSTLLoader; d_headerSizesofa::component::io::mesh::MeshSTLLoader; d_hexahedrasofa::core::loader::MeshLoader; d_hexahedraGroupssofa::core::lo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_s_t_l_loader-members.html:4841,clear,clearBuffers,4841,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_s_t_l_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_s_t_l_loader-members.html,1,['clear'],['clearBuffers']
Usability,", std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyTransformation(sofa::type::Matrix4 const &T)sofa::core::loader::MeshLoadervirtual; Base()sofa::core::objectmodel::Baseprotected; BaseLoader()sofa::core::loader::BaseLoaderprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; canLoad() overridesofa::core::loader::MeshLoadervirtual; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearBuffers() finalsofa::core::loader::MeshLoaderprotectedvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; copyMeshToData(helper::io::Mesh &_mesh)sofa::core::loader::MeshLoaderprotected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_createSubelementssofa::core::loader::MeshLoader; d_edgessofa::core::loader::MeshLoader; d_edgesGroupssofa::core::loader::MeshLoader; d_filenamesofa::core::loader::BaseLoader; d_flipNormalssofa::core::loader::MeshLoader; d_hexahedrasofa::core::loader::MeshLoader; d_hexahedraGroupssofa::core::loader::MeshLoader; d_highOrderEdgePositionssofa::core::loader::MeshLoader; d_highOrderHexahedronPositionssofa:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_gmsh_loader-members.html:4875,clear,clearBuffers,4875,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_gmsh_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_gmsh_loader-members.html,5,['clear'],['clearBuffers']
Usability,-creator-issues; . /feed; ; qt creator issues – SOFA. SOFA - Topic Tag: qt creator issues. /qtsofa; . /feed; ; qtSofa – SOFA. SOFA - Topic Tag: qtSofa. /raleigh-damping; . /feed; ; raleigh damping – SOFA. SOFA - Topic Tag: raleigh damping. /rayleigh-damping; . /feed; ; Rayleigh damping – SOFA. SOFA - Topic Tag: Rayleigh damping. /reaction-force; . /feed; ; reaction force – SOFA. SOFA - Topic Tag: reaction force. /realistic; . /feed; ; realistic – SOFA. SOFA - Topic Tag: realistic. /realtime; . /feed; ; realtime – SOFA. SOFA - Topic Tag: realtime. /real-time; . /feed; ; real-time – SOFA. SOFA - Topic Tag: real-time. /record; . /feed; ; record – SOFA. SOFA - Topic Tag: record. /recordedcamera; . /feed; ; RecordedCamera – SOFA. SOFA - Topic Tag: RecordedCamera. /recording; . /feed; ; Recording – SOFA. SOFA - Topic Tag: Recording. /refine-coarse; . /feed; ; refine coarse – SOFA. SOFA - Topic Tag: refine coarse. /registry; . /feed; ; Registry – SOFA. SOFA - Topic Tag: Registry. /reinforcement-learning; . /feed; ; Reinforcement learning – SOFA. SOFA - Topic Tag: Reinforcement learning. /release; . /feed; ; Release – SOFA. SOFA - Topic Tag: Release. /removed-object; . /feed; ; removed object – SOFA. SOFA - Topic Tag: removed object. /removetrianglespostprocessing; . /feed; ; removeTrianglesPostProcessing – SOFA. SOFA - Topic Tag: removeTrianglesPostProcessing. /rendering; . /feed; ; rendering – SOFA. SOFA - Topic Tag: rendering. /rep; . /feed; ; Rep – SOFA. SOFA - Topic Tag: Rep. /reset-sofa-using-code; . /feed; ; Reset SOFA using code. – SOFA. SOFA - Topic Tag: Reset SOFA using code. /rigid; . /feed; ; rigid – SOFA. SOFA - Topic Tag: rigid. /rigid-body; . /feed; ; rigid body – SOFA. SOFA - Topic Tag: rigid body. /rigidify; . /feed; ; rigidify – SOFA. SOFA - Topic Tag: rigidify. /rigidmapping-beamfemforcefield-geomagicdevice; . /feed; ; Rigidmapping BeamFEMForceField GeomagicDevice – SOFA. SOFA - Topic Tag: Rigidmapping BeamFEMForceField GeomagicDevice. /rigif; . /feed; ; r,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:467956,learn,learning,467956,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['learn'],['learning']
Usability,"-th row. More...;  ; const VecIndex & getColsIndex () const;  ; const VecBlock & getColsValue () const;  ; void resizeBloc (Index nbBRow, Index nbBCol);  ; void compress ();  ; void swap (Matrix &m);  ; void fullRows ();  Make sure all rows have an entry even if they are empty. More...;  ; void shiftIndices (Index base);  ; const Block & block (Index i, Index j) const;  Get block method. More...;  ; const Block & bloc (Index i, Index j) const;  ; Block * wblock (Index i, Index j, bool create=false);  Write block method. More...;  ; Block * wblock (Index i, Index j, Index &rowId, Index &colId, bool create=false);  Write block method when rowId and colId are known, this is an optimized wblock specification. More...;  ; Block * wbloc (Index i, Index j, bool create=false);  ; const Block & getBlock (Index i, Index j) const;  ; const BlockTranspose getSymBlock (Index i, Index j) const;  ; void setBlock (Index i, Index j, const Block &v);  ; void setBlock (Index i, Index j, Index &rowId, Index &colId, const Block &v);  ; void addBlock (Index i, Index j, const Block &v);  ; void addBlock (Index i, Index j, Index &rowId, Index &colId, const Block &v);  ; Block * getWBlock (Index i, Index j, bool create=false);  ; void clearRowBlock (Index i);  Clear row block method. Clear all col of this line. More...;  ; void clearColBlock (Index j);  Clear col block method. Clear this col in all row of matrix. More...;  ; std::size_t countEmptyBlocks () const;  ; void clearRowColBlock (Index i);  Clear both row i and column i in a square matrix. More...;  ; void clear ();  Completely clear the matrix. More...;  ; bool check_matrix ();  ; std::ostream & write (std::ostream &os) const;  ; std::istream & read (std::istream &is);  ; void add (unsigned int bi, unsigned int bj, const Block &b);  ; void add (unsigned int bi, unsigned int bj, int &rowId, int &colId, const Block &b);  ; void addDBlock (unsigned int bi, unsigned int bj, const DBlock &b);  ; void addDValue (unsigned int bi, unsigned",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical.html:11339,clear,clearRowBlock,11339,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical.html,1,['clear'],['clearRowBlock']
Usability,". . ◆ add() [7/8]. template<typename T > . void sofa::linearalgebra::BaseMatrix::add. Adding values from a 6x6f matrix. This function may be overload to obtain better performances. . ◆ add() [8/8]. template<typename T > . virtual void sofa::linearalgebra::BaseMatrix::add. Add v to the existing value of the element at row i, column j (using 0-based indices) . ◆ begin() [1/2]. template<class Real > . FullMatrix< Real >::LineIterator sofa::linearalgebra::FullMatrix< Real >::begin. ◆ begin() [2/2]. template<class Real > . FullMatrix< Real >::LineConstIterator sofa::linearalgebra::FullMatrix< Real >::begin. ◆ clear() [1/2]. template<class Real > . void sofa::linearalgebra::FullMatrix< Real >::clear ; (; ). overridevirtual . Reset all values to 0. ; Implements sofa::linearalgebra::BaseMatrix. ◆ clear() [2/2]. template<class Real > . void sofa::linearalgebra::FullMatrix< Real >::clear ; (; Index ; i, . Index ; j . ). overridevirtual . Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearCol(). template<class Real > . void sofa::linearalgebra::FullMatrix< Real >::clearCol ; (; Index ; j). overridevirtual . Reset the all values in column j to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRow(). template<class Real > . void sofa::linearalgebra::FullMatrix< Real >::clearRow ; (; Index ; i). overridevirtual . Reset all the values in row i to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRowCol(). template<class Real > . void sofa::linearalgebra::FullMatrix< Real >::clearRowCol ; (; Index ; i). overridevirtual . Reset the value of both row and column i to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ colSize(). template<typename T > . Index sofa::linearalgebra::FullMatrix< T >::colSize ; (; void ; ); const. inlineoverridevirtual . Number of columns. ; Implements sofa::linearalgebra::BaseMatrix. ◆ element(). template<class Real > . SReal sofa::linearalgebra::FullMatrix< Real >::element ; (; Index ; i, . Index ; j . ); const. ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_full_matrix.html:19370,clear,clearCol,19370,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_full_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_full_matrix.html,1,['clear'],['clearCol']
Usability,". Compile-time constant specifying the number of dimensions of space (NOT equivalent to total_size for rigids) . ◆ total_size. template<typename real > . constexpr sofa::Size sofa::defaulttype::RigidCoord< 3, real >::total_size = 7. staticconstexpr . Compile-time constant specifying the number of scalars within this vector (equivalent to the size() method) . Constructor details. ◆ RigidCoord() [1/3]. template<typename real > . constexpr sofa::defaulttype::RigidCoord< 3, real >::RigidCoord ; (; const Vec3 & ; posCenter, . const Quat & ; orient . ). inlineconstexpr . ◆ RigidCoord() [2/3]. template<typename real > . constexpr sofa::defaulttype::RigidCoord< 3, real >::RigidCoord ; (; ). inlineconstexpr . ◆ RigidCoord() [3/3]. template<typename real > . template<typename real2 > . constexpr sofa::defaulttype::RigidCoord< 3, real >::RigidCoord ; (; const RigidCoord< 3, real2 > & ; c). inlineconstexpr . Function details. ◆ clear(). template<typename real > . constexpr void sofa::defaulttype::RigidCoord< 3, real >::clear ; (; ). inlineconstexpr . ◆ fromHomogeneous(). template<typename real > . template<typename V > . static constexpr Vec3 sofa::defaulttype::RigidCoord< 3, real >::fromHomogeneous ; (; V ; v). inlinestaticconstexpr . create a 3d vector from a homogeneous vector . ◆ fromMatrix(). template<typename real > . template<class Mat > . void sofa::defaulttype::RigidCoord< 3, real >::fromMatrix ; (; const Mat & ; m). inline . Set from the given matrix. . ◆ getCenter() [1/2]. template<typename real > . constexpr Vec3& sofa::defaulttype::RigidCoord< 3, real >::getCenter ; (; ). inlineconstexpr . ◆ getCenter() [2/2]. template<typename real > . constexpr const Vec3& sofa::defaulttype::RigidCoord< 3, real >::getCenter ; (; ); const. inlineconstexpr . ◆ getOrientation() [1/2]. template<typename real > . constexpr Quat& sofa::defaulttype::RigidCoord< 3, real >::getOrientation ; (; ). inlineconstexpr . ◆ getOrientation() [2/2]. template<typename real > . constexpr const Quat& s",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1defaulttype_1_1_rigid_coord_3_013_00_01real_01_4.html:7089,clear,clear,7089,api/master/sofa/html/classsofa_1_1defaulttype_1_1_rigid_coord_3_013_00_01real_01_4.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1defaulttype_1_1_rigid_coord_3_013_00_01real_01_4.html,1,['clear'],['clear']
Usability,". MultiVecId ; res1, . MultiVecId ; res2 = MultiVecId::null() . ). overridevirtual . Create the system corresponding to the constraints ; Implements sofa::core::behavior::ConstraintSolver. ◆ buildSystem_matrixAssembly(). void sofa::component::constraint::lagrangian::solver::GenericConstraintSolver::buildSystem_matrixAssembly ; (; const core::ConstraintParams * ; cParams). protected . ◆ buildSystem_matrixFree(). void sofa::component::constraint::lagrangian::solver::GenericConstraintSolver::buildSystem_matrixFree ; (; unsigned int ; numConstraints). protected . ◆ cleanup(). void sofa::component::constraint::lagrangian::solver::GenericConstraintSolver::cleanup ; (; ). overridevirtual . Called just before deleting this object Any object in the tree below this object that are to be removed will be removed only after this call, so any references this object holds should still be valid. ; Reimplemented from sofa::component::constraint::lagrangian::solver::ConstraintSolverImpl. ◆ clearConstraintProblemLocks(). void sofa::component::constraint::lagrangian::solver::GenericConstraintSolver::clearConstraintProblemLocks ; (; ). protected . ◆ computeResidual(). void sofa::component::constraint::lagrangian::solver::GenericConstraintSolver::computeResidual ; (; const core::ExecParams * ; ). overridevirtual . Compute the residual in the newton iterations due to the constraints forces i.e. compute Vecid::force() += J^t lambda the result is accumulated in Vecid::force() ; Reimplemented from sofa::core::behavior::ConstraintSolver. ◆ getConstraintProblem(). ConstraintProblem * sofa::component::constraint::lagrangian::solver::GenericConstraintSolver::getConstraintProblem ; (; ). overridevirtual . Implements sofa::component::constraint::lagrangian::solver::ConstraintSolverImpl. ◆ getDx(). sofa::core::MultiVecDerivId sofa::component::constraint::lagrangian::solver::GenericConstraintSolver::getDx ; (; ); const. overridevirtual . Reimplemented from sofa::core::behavior::ConstraintSolver. ◆ ge",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_generic_constraint_solver.html:29830,clear,clearConstraintProblemLocks,29830,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_generic_constraint_solver.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_generic_constraint_solver.html,1,['clear'],['clearConstraintProblemLocks']
Usability,. Protected Attributes |; Public Member Functions |; Signals |; Public Slots |; List of all members . sofa::gui::qt::QVisitorControlPanel Class Reference . #include <QVisitorControlPanel.h>. Inheritance diagram for sofa::gui::qt::QVisitorControlPanel:. [legend]. Protected Attributes; QLineEdit * textFilter;  ; WDoubleLineEdit * spinIndex;  ; WDoubleLineEdit * spinRange;  . Public Member Functions;  QVisitorControlPanel (QWidget *parent);  ; void changeFirstIndex (int);  ; void changeRange (int);  . Signals; void focusOn (QString);  ; void clearGraph ();  . Public Slots; void activateTraceStateVectors (bool);  ; void changeFirstIndex ();  ; void changeRange ();  ; void filterResults ();  . Attribute details. ◆ spinIndex. WDoubleLineEdit* sofa::gui::qt::QVisitorControlPanel::spinIndex. protected . ◆ spinRange. WDoubleLineEdit* sofa::gui::qt::QVisitorControlPanel::spinRange. protected . ◆ textFilter. QLineEdit* sofa::gui::qt::QVisitorControlPanel::textFilter. protected . Constructor details. ◆ QVisitorControlPanel(). sofa::gui::qt::QVisitorControlPanel::QVisitorControlPanel ; (; QWidget * ; parent). Function details. ◆ activateTraceStateVectors. void sofa::gui::qt::QVisitorControlPanel::activateTraceStateVectors ; (; bool ; active). slot . ◆ changeFirstIndex [1/2]. void sofa::gui::qt::QVisitorControlPanel::changeFirstIndex ; (; ). slot . ◆ changeFirstIndex() [2/2]. void sofa::gui::qt::QVisitorControlPanel::changeFirstIndex ; (; int ; idx). ◆ changeRange [1/2]. void sofa::gui::qt::QVisitorControlPanel::changeRange ; (; ). slot . ◆ changeRange() [2/2]. void sofa::gui::qt::QVisitorControlPanel::changeRange ; (; int ; range). ◆ clearGraph. void sofa::gui::qt::QVisitorControlPanel::clearGraph ; (; ). signal . ◆ filterResults. void sofa::gui::qt::QVisitorControlPanel::filterResults ; (; ). slot . ◆ focusOn. void sofa::gui::qt::QVisitorControlPanel::focusOn ; (; QString ; ). signal . sofaguiqtQVisitorControlPanel; Generated on Mon Nov 11 2024 03:23:43 for SOFA API by 1.9.1 . ,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_visitor_control_panel.html:1787,clear,clearGraph,1787,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_visitor_control_panel.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_visitor_control_panel.html,2,['clear'],['clearGraph']
Usability,". Public Member Functions |; Static Public Member Functions |; List of all members . sofa::helper::io::STBImage Class Reference . #include <STBImage.h>. Inheritance diagram for sofa::helper::io::STBImage:. [legend]. Public Member Functions;  STBImage ()=default;  ;  STBImage (const std::string &filename);  ; bool load (std::string filename) override;  ; bool save (std::string filename, int compression_level=-1) override;  ;  Public Member Functions inherited from sofa::helper::io::Image;  Image ();  ; virtual ~Image ();  ;  Image (const Image &rhs);  ; Image & operator= (const Image &rhs);  ; unsigned getWidth (unsigned mipmap=0) const;  ; unsigned getHeight (unsigned mipmap=0) const;  ; unsigned getDepth (unsigned mipmap=0) const;  ; unsigned getBytesPerPixel () const;  ; unsigned getBytesPerBlock () const;  ; unsigned getBytesPerChannel () const;  ; unsigned getChannelCount () const;  ; unsigned getMipmapCount () const;  ; unsigned getPixelCount () const;  ; unsigned getLineSize (unsigned mipmap=0) const;  ; unsigned getMipmapSize (unsigned mipmap) const;  ; unsigned getMipmapRangeSize (unsigned firstMipmap, unsigned mipmaps) const;  ; unsigned getImageSize () const;  ; DataType getDataType () const;  ; ChannelFormat getChannelFormat () const;  ; TextureType getTextureType () const;  ; unsigned char * getPixels ();  ; unsigned char * getMipmapPixels (unsigned mipmap);  ; unsigned char * getCubeMipmapPixels (unsigned cubeside, unsigned mipmap);  ; unsigned char * get3DSliceMipmapPixels (unsigned slice, unsigned mipmap);  ; void clear ();  ; void init (unsigned width, unsigned height, unsigned depth, unsigned mipmaps, DataType dataType, ChannelFormat channelFormat);  ; void init (unsigned width, unsigned height, unsigned bpp);  ; bool isLoaded () const;  . Static Public Member Functions; static void setSTBCreators ();  ;  Static Public Member Functions inherited from sofa::helper::io::Image; static Image * Create (std::string filename);  ; template<class Object > ; s",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_s_t_b_image.html:1684,clear,clear,1684,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_s_t_b_image.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_s_t_b_image.html,1,['clear'],['clear']
Usability,". add this EigenBaseSparseMatrix to a BaseMatrix at the offset and multiplied by factor . ◆ beginRow(). template<class TReal > . void sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::beginRow ; (; Index ; index). inline . ◆ choleskyDecompose(). template<class TReal > . bool sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::choleskyDecompose ; (; ). inline . Try to compute the LDLT decomposition, and return true if success. The matrix is unchanged. . ◆ choleskySolve(). template<class TReal > . void sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::choleskySolve ; (; VectorEigen & ; x, . const VectorEigen & ; b . ); const. inline . Solve Ax=b, where A is this matrix. WARNING: ldltDecompose() must be called first. x and b can be the same vector. . ◆ clear(). template<class TReal > . void sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::clear ; (; ). inlineoverridevirtual . Set all values to 0, by resizing to the same size. ; Implements sofa::linearalgebra::BaseMatrix. ◆ clearCol(). template<class TReal > . void sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::clearCol ; (; Index ; col). inlineoverridevirtual . Clears the all the entries of column imin to column imax-1. Not efficient ! ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearCols(). template<class TReal > . void sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::clearCols ; (; Index ; imin, . Index ; imax . ). inlineoverridevirtual . Set all the entries of column i and of row i to 0. Not efficient ! ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRow(). template<class TReal > . void sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::clearRow ; (; Index ; i). inlineoverridevirtual . Set all the entries of a row to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRowCol(). template<class TReal > . void sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::clearRowCol ; (; Index ; i). inlineoverridevirtual . Clears all the entries of rows imin to imax-1 ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_base_sparse_matrix.html:19630,clear,clearCol,19630,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_base_sparse_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_base_sparse_matrix.html,1,['clear'],['clearCol']
Usability,". addChild(BaseElement *child)sofa::simulation::xml::BaseElementvirtual; addReplaceAttribute(const std::string &attr, const char *val)sofa::simulation::xml::BaseElementvirtual; AttributeMap typedefsofa::core::objectmodel::BaseObjectDescription; attributessofa::core::objectmodel::BaseObjectDescriptionprotected; BaseElement(const std::string &name, const std::string &type, BaseElement *newParent=nullptr)sofa::simulation::xml::BaseElement; BaseMultiMappingElement(const std::string &name, const std::string &type, BaseElement *parent=nullptr)sofa::simulation::xml::BaseMultiMappingElement; BaseObjectDescription(const char *name=nullptr, const char *type=nullptr)sofa::core::objectmodel::BaseObjectDescription; begin()sofa::simulation::xml::BaseElementinline; begin()sofa::simulation::xml::BaseElementinline; clearErrors()sofa::core::objectmodel::BaseObjectDescriptioninlinevirtual; create(Node *, std::pair< std::string, std::string > arg)sofa::simulation::xml::BaseElementinlinestatic; Create(const std::string &nodeClass, const std::string &name, const std::string &type)sofa::simulation::xml::BaseElementstatic; Element(const std::string &name, const std::string &type, BaseElement *newParent=nullptr)sofa::simulation::xml::Element< sofa::core::objectmodel::BaseObject >; end()sofa::simulation::xml::BaseElementinline; end()sofa::simulation::xml::BaseElementinline; errorssofa::core::objectmodel::BaseObjectDescriptionprotected; Factory typedefsofa::simulation::xml::Element< sofa::core::objectmodel::BaseObject >; find(const char *nodeName, bool absolute=false) overridesofa::simulation::xml::BaseElementinlinevirtual; findNode(const char *nodeName, bool absolute=false)sofa::simulation::xml::BaseElementvirtual; findObject(const char *nodeName)sofa::core::objectmodel::BaseObjectDescriptionvirtual; getAttribute(const std::string &attr, const char *defaultVal=nullptr)sofa::core::objectmodel::BaseObjectDescriptionvirtual; getAttributeAsFloat(const std::string &attr, const float defaultVal=0.0",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1xml_1_1_base_multi_mapping_element-members.html:1091,clear,clearErrors,1091,api/master/sofa/html/classsofa_1_1simulation_1_1xml_1_1_base_multi_mapping_element-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1xml_1_1_base_multi_mapping_element-members.html,1,['clear'],['clearErrors']
Usability,". inline . Try to compute the LDLT decomposition, and return true if success. The matrix is unchanged. . ◆ choleskySolve(). template<class TReal > . void sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::choleskySolve ; (; VectorEigen & ; x, . const VectorEigen & ; b . ); const. inline . Solve Ax=b, where A is this matrix. WARNING: ldltDecompose() must be called first. x and b can be the same vector. . ◆ clear(). template<class TReal > . void sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::clear ; (; ). inlineoverridevirtual . Set all values to 0, by resizing to the same size. ; Implements sofa::linearalgebra::BaseMatrix. ◆ clearCol(). template<class TReal > . void sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::clearCol ; (; Index ; col). inlineoverridevirtual . Clears the all the entries of column imin to column imax-1. Not efficient ! ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearCols(). template<class TReal > . void sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::clearCols ; (; Index ; imin, . Index ; imax . ). inlineoverridevirtual . Set all the entries of column i and of row i to 0. Not efficient ! ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRow(). template<class TReal > . void sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::clearRow ; (; Index ; i). inlineoverridevirtual . Set all the entries of a row to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRowCol(). template<class TReal > . void sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::clearRowCol ; (; Index ; i). inlineoverridevirtual . Clears all the entries of rows imin to imax-1 and columns imin to imax-1. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRows(). template<class TReal > . void sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::clearRows ; (; Index ; imin, . Index ; imax . ). inlineoverridevirtual . Set all the entries of rows imin to imax-1 to 0. ; Set all the entries of a column to 0. Not efficient !",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_base_sparse_matrix.html:20005,clear,clearCols,20005,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_base_sparse_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_base_sparse_matrix.html,1,['clear'],['clearCols']
Usability,". inlineprotected . this += m . ◆ addTo(). template<typename T > . template<class Dest > . void sofa::linearalgebra::DiagonalMatrix< T >::addTo ; (; Dest * ; dest); const. inline . ◆ clear() [1/3]. template<typename T > . void sofa::linearalgebra::DiagonalMatrix< T >::clear ; (; ). inlineoverridevirtual . Reset all values to 0. ; Implements sofa::linearalgebra::BaseMatrix. ◆ clear() [2/3]. template<typename T > . void sofa::linearalgebra::DiagonalMatrix< T >::clear ; (; Index ; i). inline . ◆ clear() [3/3]. template<typename T > . void sofa::linearalgebra::DiagonalMatrix< T >::clear ; (; Index ; i, . Index ; j . ). inlineoverridevirtual . Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearCol(). template<typename T > . void sofa::linearalgebra::DiagonalMatrix< T >::clearCol ; (; Index ; j). inlineoverridevirtual . Reset the all values in column j to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRow(). template<typename T > . void sofa::linearalgebra::DiagonalMatrix< T >::clearRow ; (; Index ; i). inlineoverridevirtual . Reset all the values in row i to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRowCol(). template<typename T > . void sofa::linearalgebra::DiagonalMatrix< T >::clearRowCol ; (; Index ; i). inlineoverridevirtual . Reset the value of both row and column i to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ colSize(). template<typename T > . Index sofa::linearalgebra::DiagonalMatrix< T >::colSize ; (; void ; ); const. inlineoverridevirtual . Number of columns. ; Implements sofa::linearalgebra::BaseMatrix. ◆ element() [1/2]. template<typename T > . SReal sofa::linearalgebra::DiagonalMatrix< T >::element ; (; Index ; i); const. inline . ◆ element() [2/2]. template<typename T > . SReal sofa::linearalgebra::DiagonalMatrix< T >::element ; (; Index ; i, . Index ; j . ); const. inlineoverridevirtual . Read the value of the element at row i, column j (using 0-based indices) ; Implements sofa::linearalgebra::B",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_diagonal_matrix.html:20370,clear,clearRow,20370,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_diagonal_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_diagonal_matrix.html,1,['clear'],['clearRow']
Usability,". void sofa::gl::component::rendering3d::glVertex3v ; (; const double * ; d). ◆ glVertex3v() [2/2]. void sofa::gl::component::rendering3d::glVertex3v ; (; const float * ; d). ◆ init(). SOFA_GL_COMPONENT_RENDERING3D_API void sofa::gl::component::rendering3d::init ; (; ). ◆ initExternalModule(). void sofa::gl::component::rendering3d::initExternalModule ; (; ). Variable Documentation. ◆ ClipPlaneClass. int sofa::gl::component::rendering3d::ClipPlaneClass. Initial value:= core::RegisterObject(""OpenGL Clipping Plane""); .add< ClipPlane >(). ◆ DataDisplayClass. int sofa::gl::component::rendering3d::DataDisplayClass. Initial value:= core::RegisterObject(""Rendering of meshes colored by data""); .add< DataDisplay >(). ◆ MergeVisualModelsClass. int sofa::gl::component::rendering3d::MergeVisualModelsClass. Initial value:= core::RegisterObject(""Merge several visual models""); .add< MergeVisualModels >(true). ◆ OglCylinderModelClass. int sofa::gl::component::rendering3d::OglCylinderModelClass. Initial value:= core::RegisterObject(""A simple visualization for set of cylinder.""); .add< OglCylinderModel >(). ◆ OglModelClass. int sofa::gl::component::rendering3d::OglModelClass. Initial value:= core::RegisterObject(""Generic visual model for OpenGL display""); .add< OglModel >(). ◆ OglSceneFrameClass. int sofa::gl::component::rendering3d::OglSceneFrameClass. Initial value:= core::RegisterObject(""Display a frame at the corner of the scene view""); .add< OglSceneFrame >(). ◆ PointSplatModelClass. int sofa::gl::component::rendering3d::PointSplatModelClass. Initial value:= core::RegisterObject(""A simple visualization for a cloud of points.""); .add< PointSplatModel >(); .addAlias(""PointSplat""). ◆ SlicedVolumetricModelClass. int sofa::gl::component::rendering3d::SlicedVolumetricModelClass. Initial value:= core::RegisterObject(""A simple visualization for a cloud of points.""); .add< SlicedVolumetricModel >(). sofaglcomponentrendering3d; Generated on Mon Nov 11 2024 03:18:55 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gl_1_1component_1_1rendering3d.html:2953,simpl,simple,2953,api/master/sofa/html/namespacesofa_1_1gl_1_1component_1_1rendering3d.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gl_1_1component_1_1rendering3d.html,3,['simpl'],['simple']
Usability,". ◆ addComponent(). void sofa::gui::qt::QDisplayPropertyWidget::addComponent ; (; const QString & ; component, . core::objectmodel::Base * ; base, . QTreeWidgetItem * ; listItem, . bool ; clear = true . ). ◆ addData(). void sofa::gui::qt::QDisplayPropertyWidget::addData ; (; const QString & ; component, . const QString & ; group, . sofa::core::objectmodel::BaseData * ; data . ). ◆ addDescriptionItem(). void sofa::gui::qt::QDisplayPropertyWidget::addDescriptionItem ; (; QTreeWidgetItem * ; groupItem, . const QString & ; name, . const QString & ; description . ). protected . ◆ addGroup(). void sofa::gui::qt::QDisplayPropertyWidget::addGroup ; (; const QString & ; component, . const QString & ; group . ). ◆ addLink(). void sofa::gui::qt::QDisplayPropertyWidget::addLink ; (; const QString & ; component, . const QString & ; group, . sofa::core::objectmodel::BaseLink * ; link . ). ◆ clear(). void sofa::gui::qt::QDisplayPropertyWidget::clear ; (; ). ◆ clearAll(). void sofa::gui::qt::QDisplayPropertyWidget::clearAll ; (; ). ◆ clearComponentOutput. void sofa::gui::qt::QDisplayPropertyWidget::clearComponentOutput ; (; ). protectedslot . ◆ clearComponentWarning. void sofa::gui::qt::QDisplayPropertyWidget::clearComponentWarning ; (; ). protectedslot . ◆ DefaultDataGroup(). static QString sofa::gui::qt::QDisplayPropertyWidget::DefaultDataGroup ; (; ). inlinestatic . ◆ DefaultInfoGroup(). static QString sofa::gui::qt::QDisplayPropertyWidget::DefaultInfoGroup ; (; ). inlinestatic . ◆ DefaultLinkGroup(). static QString sofa::gui::qt::QDisplayPropertyWidget::DefaultLinkGroup ; (; ). inlinestatic . ◆ DefaultLogGroup(). static QString sofa::gui::qt::QDisplayPropertyWidget::DefaultLogGroup ; (; ). inlinestatic . ◆ findComponent(). QTreeWidgetItem * sofa::gui::qt::QDisplayPropertyWidget::findComponent ; (; const QString & ; component); const. protected . ◆ findGroup(). QTreeWidgetItem * sofa::gui::qt::QDisplayPropertyWidget::findGroup ; (; const QString & ; component, . const QString & ;",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_display_property_widget.html:3235,clear,clearAll,3235,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_display_property_widget.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_display_property_widget.html,1,['clear'],['clearAll']
Usability,. ◆ cleanHexahedronTopologyFromDirty(). void sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer::cleanHexahedronTopologyFromDirty ; (; ). protected . ◆ clear(). void sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer::clear ; (; ). overridevirtual . Procedural creation methods ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer.; Reimplemented in sofa::component::topology::container::dynamic::MultilevelHexahedronSetTopologyContainer. ◆ clearEdgesInHexahedron(). void sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer::clearEdgesInHexahedron ; (; ). protected . ◆ clearHexahedra(). void sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer::clearHexahedra ; (; ). protected . ◆ clearHexahedraAroundEdge(). void sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer::clearHexahedraAroundEdge ; (; ). protected . ◆ clearHexahedraAroundQuad(). void sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer::clearHexahedraAroundQuad ; (; ). protected . ◆ clearHexahedraAroundVertex(). void sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer::clearHexahedraAroundVertex ; (; ). protected . ◆ clearQuadsInHexahedron(). void sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer::clearQuadsInHexahedron ; (; ). protected . ◆ createEdgeSetArray(). void sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer::createEdgeSetArray ; (; ). overrideprotectedvirtual . Creates the EdgeSet array. ; Create the set of edges when needed. ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer. ◆ createEdgesInHexahedronArray(). void sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer::createEdgesInHexahedronArray ; (; ). protectedvirtual . Creates the array of edge indices for eac,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_topology_container.html:49595,clear,clearHexahedraAroundQuad,49595,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_topology_container.html,1,['clear'],['clearHexahedraAroundQuad']
Usability,". ◆ clear() [1/2]. template<std::size_t N, typename T > . void sofa::linearalgebra::BlockFullMatrix< N, T >::clear ; (; ). overridevirtual . Reset all values to 0. ; Implements sofa::linearalgebra::BaseMatrix. ◆ clear() [2/2]. template<std::size_t N, typename T > . void sofa::linearalgebra::BlockFullMatrix< N, T >::clear ; (; Index ; i, . Index ; j . ). overridevirtual . Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearCol(). template<std::size_t N, typename T > . void sofa::linearalgebra::BlockFullMatrix< N, T >::clearCol ; (; Index ; j). overridevirtual . Reset the all values in column j to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRow(). template<std::size_t N, typename T > . void sofa::linearalgebra::BlockFullMatrix< N, T >::clearRow ; (; Index ; i). overridevirtual . Reset all the values in row i to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRowCol(). template<std::size_t N, typename T > . void sofa::linearalgebra::BlockFullMatrix< N, T >::clearRowCol ; (; Index ; i). overridevirtual . Reset the value of both row and column i to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ colSize(). template<std::size_t N, typename T > . BlockFullMatrix< N, T >::Index sofa::linearalgebra::BlockFullMatrix< N, T >::colSize ; (; void ; ); const. overridevirtual . Number of columns. ; Implements sofa::linearalgebra::BaseMatrix. ◆ element(). template<std::size_t N, typename T > . SReal sofa::linearalgebra::BlockFullMatrix< N, T >::element ; (; Index ; i, . Index ; j . ); const. overridevirtual . Read the value of the element at row i, column j (using 0-based indices) ; Implements sofa::linearalgebra::BaseMatrix. ◆ getAlignedSubMatrix(). template<std::size_t N, typename T > . template<class B > . void sofa::linearalgebra::BlockFullMatrix< N, T >::getAlignedSubMatrix ; (; Index ; bi, . Index ; bj, . Index ; nrow, . Index ; ncol, . B & ; m . ). ◆ getSubMatrix(). template<std::size_t N, typename T > . template<class B >",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_full_matrix.html:17896,clear,clearRowCol,17896,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_full_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_full_matrix.html,1,['clear'],['clearRowCol']
Usability,". ◆ segmentation. helper::io::Image* sofa::component::io::mesh::VoxelGridLoader::segmentation. protected . ◆ segmentationHeaderSize. sofa::core::objectmodel::RenamedData< int > sofa::component::io::mesh::VoxelGridLoader::segmentationHeaderSize. ◆ voxelSize. sofa::core::objectmodel::RenamedData< type::Vec3 > sofa::component::io::mesh::VoxelGridLoader::voxelSize. Constructor details. ◆ VoxelGridLoader(). sofa::component::io::mesh::VoxelGridLoader::VoxelGridLoader ; (; ). protected . ◆ ~VoxelGridLoader(). sofa::component::io::mesh::VoxelGridLoader::~VoxelGridLoader ; (; ). overrideprotected . Function details. ◆ addActiveDataValue(). void sofa::component::io::mesh::VoxelGridLoader::addActiveDataValue ; (; const int ; value). ◆ addBackgroundValue(). void sofa::component::io::mesh::VoxelGridLoader::addBackgroundValue ; (; const int ; value). ◆ canLoad(). bool sofa::component::io::mesh::VoxelGridLoader::canLoad ; (; ). overridevirtual . Reimplemented from sofa::core::loader::BaseLoader. ◆ clear(). void sofa::component::io::mesh::VoxelGridLoader::clear ; (; ). virtual . ◆ createSegmentation3DTexture(). void sofa::component::io::mesh::VoxelGridLoader::createSegmentation3DTexture ; (; unsigned char ** ; textureData, . int & ; width, . int & ; height, . int & ; depth . ). overridevirtual . Implements sofa::core::loader::VoxelLoader. ◆ getActiveDataValue(). int sofa::component::io::mesh::VoxelGridLoader::getActiveDataValue ; (; const unsigned int ; idx = 0); const. ◆ getBackgroundValue(). int sofa::component::io::mesh::VoxelGridLoader::getBackgroundValue ; (; const unsigned int ; idx = 0); const. ◆ getData(). unsigned char * sofa::component::io::mesh::VoxelGridLoader::getData ; (; ). overridevirtual . Implements sofa::core::loader::VoxelLoader. ◆ getDataSize(). int sofa::component::io::mesh::VoxelGridLoader::getDataSize ; (; ); const. overridevirtual . Implements sofa::core::loader::VoxelLoader. ◆ getHexaIndicesInGrid(). type::vector< unsigned int > sofa::component::io::mesh::V",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_voxel_grid_loader.html:19864,clear,clear,19864,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_voxel_grid_loader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_voxel_grid_loader.html,1,['clear'],['clear']
Usability,"...;  ; void postDrawScene (core::visual::VisualParams *vp) override;  Called after rendering the scene. More...;  ; void handleEvent (sofa::core::objectmodel::Event *event) override;  Handle an event. More...;  ;  Public Member Functions inherited from sofa::core::visual::VisualManager;  SOFA_CLASS (VisualManager, VisualModel);  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virt",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_post_process_manager.html:3374,clear,clearVisual,3374,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_post_process_manager.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_post_process_manager.html,2,['clear'],"['clear', 'clearVisual']"
Usability,"..;  ; bool hasPos () const override;  check if vertices in this topology have positions. More...;  ; SReal getPX (Index i) const override;  Returns the X coordinate of the ith DOF. More...;  ; SReal getPY (Index i) const override;  Returns the Y coordinate of the ith DOF. More...;  ; SReal getPZ (Index i) const override;  Returns the Z coordinate of the ith DOF. More...;  ; sofa::geometry::ElementType getTopologyType () const override;  Returns the type of the topology. More...;  . bool checkTopology () const override;  Checks if the Topology is coherent. More...;  ; void addPoint ();  add one DOF in this topology (simply increment the number of DOF) More...;  ; void addPoints (const Size nPoints);  add a number of DOFs in this topology (simply increase the number of DOF according to this parameter) More...;  ; void removePoint ();  remove one DOF in this topology (simply decrement the number of DOF) More...;  ; void removePoints (const Size nPoints);  remove a number of DOFs in this topology (simply decrease the number of DOF according to this parameter) More...;  ;  Public Member Functions inherited from sofa::core::topology::TopologyContainer;  SOFA_CLASS2 (TopologyContainer, BaseTopologyObject, BaseMeshTopology);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; const SeqEdges & getEdges () override;  ; const SeqTriangles & getTriangles () override;  ; const SeqQuads & getQuads () override;  ; const SeqTetrahedra & getTetrahedra () override;  ; const SeqHexahedra & getHexahedra () override;  ; int getRevision () const override;  Get the current revision of this mesh. More...;  ; const std::list< const TopologyChange * > & getChangeList () const;  ; const std::list< const TopologyChange * > & getStateChangeList () const;  ; const Data< std::list< const TopologyChange * > > & getDataChangeList () const;  ; const Data< std::list< const TopologyChange * > > & getDataStateChangeList () ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_container.html:5492,simpl,simply,5492,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_container.html,1,['simpl'],['simply']
Usability,"..;  ; bool hasPos () const override;  check if vertices in this topology have positions. More...;  ; SReal getPX (Index i) const override;  Returns the X coordinate of the ith DOF. More...;  ; SReal getPY (Index i) const override;  Returns the Y coordinate of the ith DOF. More...;  ; SReal getPZ (Index i) const override;  Returns the Z coordinate of the ith DOF. More...;  ; sofa::geometry::ElementType getTopologyType () const override;  Returns the type of the topology. More...;  ; bool checkTopology () const override;  Checks if the Topology is coherent. More...;  ; void addPoint ();  add one DOF in this topology (simply increment the number of DOF) More...;  ; void addPoints (const Size nPoints);  add a number of DOFs in this topology (simply increase the number of DOF according to this parameter) More...;  ; void removePoint ();  remove one DOF in this topology (simply decrement the number of DOF) More...;  ; void removePoints (const Size nPoints);  remove a number of DOFs in this topology (simply decrease the number of DOF according to this parameter) More...;  ;  Public Member Functions inherited from sofa::core::topology::TopologyContainer;  SOFA_CLASS2 (TopologyContainer, BaseTopologyObject, BaseMeshTopology);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; const SeqEdges & getEdges () override;  ; const SeqTriangles & getTriangles () override;  ; const SeqQuads & getQuads () override;  ; const SeqTetrahedra & getTetrahedra () override;  ; const SeqHexahedra & getHexahedra () override;  ; int getRevision () const override;  Get the current revision of this mesh. More...;  ; const std::list< const TopologyChange * > & getChangeList () const;  ; const std::list< const TopologyChange * > & getStateChangeList () const;  ; const Data< std::list< const TopologyChange * > > & getDataChangeList () const;  ; const Data< std::list< const TopologyChange * > > & getDataStateChangeList () ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_container.html:8861,simpl,simply,8861,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_container.html,1,['simpl'],['simply']
Usability,".;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_ABSTRACT_CLASS (ForceFeedback, core::behavior::BaseController);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; virtual void computeForce (SReal x, SReal y, SReal z, SReal u, SReal v, SReal w, SReal q, SReal &fx, SReal &fy, SReal &fz)=0;  ; virtual void computeWrench (const sofa::type::Transform< SReal > &, const sofa::type::SpatialVector< SReal > &, sofa::type::SpatialVector< SReal > &)=0;  ; virtual void setReferencePosition (sofa::type::Transform< SReal > &referencePosition);  ; virtual bool isEnabled ();  ; virtual void setLock (bool value);  Abstract method to lock or unlock the force feedback computation. To be implemented by child class if needed. More...;  ;  Public Member Functions inherited from sofa::core::behavior::BaseController;  SOFA_ABSTRACT_CLASS (BaseController, core::objectmodel::BaseObject);  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_force_feedback.html:2462,feedback,feedback,2462,api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_force_feedback.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_force_feedback.html,1,['feedback'],['feedback']
Usability,".h>. Inheritance diagram for sofa::core::ListMappingMatrixAccumulator:. [legend]. Additional Inherited Members;  Public Member Functions inherited from sofa::core::ListMatrixAccumulator< MappingMatrixAccumulator >; void push_back (MappingMatrixAccumulator *m);  ; void remove (MappingMatrixAccumulator *m);  ; bool empty () const;  ; void clear () override;  ; InternalListMatrixAccumulator::size_type size () const;  ; void add (sofa::SignedIndex i, sofa::SignedIndex j, float value) override;  ; void add (sofa::SignedIndex i, sofa::SignedIndex j, double value) override;  ; void add (sofa::SignedIndex i, sofa::SignedIndex j, const sofa::type::Mat3x3f &value) override;  ; void add (sofa::SignedIndex i, sofa::SignedIndex j, const sofa::type::Mat3x3d &value) override;  ; const InternalListMatrixAccumulator & getAccumulators () const;  ;  Public Member Functions inherited from sofa::core::MatrixAccumulatorInterface; virtual ~MatrixAccumulatorInterface ()=default;  ; virtual void add (sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 1, 1, float > &value);  ; virtual void add (sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 1, 1, double > &value);  ; virtual void add (sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 2, 2, float > &value);  ; virtual void add (sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 2, 2, double > &value);  ; virtual void add (sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 6, 6, float > &value);  ; virtual void add (sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 6, 6, double > &value);  ; template<sofa::Size L, sofa::Size C, class real > ; void matAdd (sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< L, C, real > &value);  ; virtual void setIndexCheckerStrategy (std::shared_ptr< matrixaccumulator::IndexVerificationStrategy >);  . sofacoreListMappingMatrixAccumulator; Generated on Mon Nov 11 2024 03:13:41 for ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_list_mapping_matrix_accumulator.html:597,clear,clear,597,api/master/sofa/html/classsofa_1_1core_1_1_list_mapping_matrix_accumulator.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_list_mapping_matrix_accumulator.html,1,['clear'],['clear']
Usability,"0)sofa::simulation::common::MechanicalOperations; addSeparateGravity(SReal dt, core::MultiVecDerivId result=core::VecDerivId::velocity())sofa::simulation::common::MechanicalOperations; baseVector2MultiVector(const linearalgebra::BaseVector *src, core::MultiVecId dest, const sofa::core::behavior::MultiMatrixAccessor *matrix)sofa::simulation::common::MechanicalOperations; bFactsofa::simulation::common::MechanicalOperations; computeAcc(SReal t, core::MultiVecDerivId a, core::MultiVecCoordId x, core::MultiVecDerivId v)sofa::simulation::common::MechanicalOperations; computeContactAcc(SReal t, core::MultiVecDerivId a, core::MultiVecCoordId x, core::MultiVecDerivId v)sofa::simulation::common::MechanicalOperations; computeContactDf(core::MultiVecDerivId df)sofa::simulation::common::MechanicalOperations; computeContactForce(core::MultiVecDerivId result)sofa::simulation::common::MechanicalOperations; computeDf(core::MultiVecDerivId df, bool clear=true, bool accumulate=true)sofa::simulation::common::MechanicalOperations; computeDfV(core::MultiVecDerivId df, bool clear=true",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1common_1_1_mechanical_operations-members.html:1868,clear,clear,1868,api/master/sofa/html/classsofa_1_1simulation_1_1common_1_1_mechanical_operations-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1common_1_1_mechanical_operations-members.html,1,['clear'],['clear']
Usability,"2, unsigned int > >, sofa::gl::component::shader::OglAttribute< 4, GL_INT, sofa::type::Vec< 4, int > >, sofa::gl::component::shader::OglAttribute< 3, GL_FLOAT, sofa::type::Vec< 3, float > >, sofa::gl::component::shader::OglAttribute< 4, GL_FLOAT, sofa::type::Vec< 4, float > >, sofa::gl::component::shader::OglAttribute< 2, GL_FLOAT, sofa::type::Vec< 2, float > >, sofa::gl::component::shader::OglAttribute< 3, GL_INT, sofa::type::Vec< 3, int > >, sofa::gl::component::shader::OglAttribute< 2, GL_INT, sofa::type::Vec< 2, int > >, sofa::gl::component::shader::OglAttribute< 1, GL_INT, int >, sofa::gl::component::shader::OglAttribute< 1, GL_UNSIGNED_INT, unsigned int >, sofa::gl::component::shader::OglAttribute< 4, GL_UNSIGNED_INT, sofa::type::Vec< 4, unsigned int > >, sofa::gl::component::shader::LightManager, and sofa::gl::component::rendering3d::ClipPlane. ◆ clearVisual(). virtual void sofa::core::visual::VisualModel::clearVisual ; (; ). inlinevirtual . clear some graphical resources (generally called before the deleteVisitor). ; Note: for more general usage you can use the cleanup visitor . ◆ drawShadow(). virtual void sofa::core::visual::VisualModel::drawShadow ; (; const VisualParams * ; vparams). inlinevirtual . Display shadow-casting surfaces. ; This method default to calling draw(). Object that do not cast any shadows, or that use a different LOD for them should reimplement it. ; Reimplemented in sofa::component::visual::VisualModelImpl. ◆ drawTransparent(). virtual void sofa::core::visual::VisualModel::drawTransparent ; (; const VisualParams * ; ). inlinevirtual . Display transparent surfaces. ; Transparent objects should use this method to get a correct display order. ; Reimplemented in sofa::component::visual::VisualTransform, sofa::gl::component::rendering3d::SlicedVolumetricModel, sofa::gl::component::rendering3d::PointSplatModel, sofa::component::visual::VisualModelImpl, and sofa::component::visual::Visual3DText. ◆ drawVisual(). void sofa::core::visual::Visua",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_model.html:19022,clear,clear,19022,api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_model.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_model.html,1,['clear'],['clear']
Usability,2mesh-toolkit; ; SOFA - Topic: [SOLVED] How to import volume mesh from Matlab iso2mesh toolkit?. /how-to-incise-3d-object; . /page; . /10; ; SOFA - Topic: [SOLVED] How to incise 3d object. /11; ; SOFA - Topic: [SOLVED] How to incise 3d object. /3; ; SOFA - Topic: [SOLVED] How to incise 3d object. /5; ; SOFA - Topic: [SOLVED] How to incise 3d object. SOFA - Topic: [SOLVED] How to incise 3d object. /how-to-increase-fps-of-a-scene-including-more-than-20000-tetrahedral-mesh; ; SOFA - Topic: [SOLVED] How to increase FPS of a scene including more than 20000 tetrahedral mesh. /how-to-integrate-the-new-fem-methods-into-sofa-engine; ; SOFA - Topic: How to integrate the new FEM methods into SOFA engine. /how-to-interact-with-3d-deformable-objects-in-sofa; ; SOFA - Topic: How to interact with 3D deformable objects in SOFA. /how-to-know-the-collision-force-or-energy; ; SOFA - Topic: How to know the collision force or energy. /how-to-learn-mesh-editing-programming; . /feed; ; [SOLVED] How to learn mesh editing programming? – SOFA. SOFA - Topic: [SOLVED] How to learn mesh editing programming?. /how-to-learn-using-sofa; ; SOFA - Topic: How to learn using SOFA. /how-to-look-at-the-example-of-the-source-codec; ; SOFA - Topic: [SOLVED] How to look at the example of the source code(c++) ?. /how-to-make-a-6dof-simulation-act-like-a-4dof-make-3d-act-like-2d-simulation; ; SOFA - Topic: How to make a 6DOF simulation act like a 4DOF (make 3d act like 2d simulation)?. /how-to-make-a-modal-analysis; ; SOFA - Topic: how to: Make a modal analysis. /how-to-make-a-pythonscript-controller-with-sofapython3; ; SOFA - Topic: [SOLVED] How to make a PythonScript controller with SofaPython3. /how-to-make-local-refined-tetrahedral-mesh; ; SOFA - Topic: How to make local refined tetrahedral mesh?. /how-to-make-some-part-of-an-object-elastic-and-other-part-plastic; ; SOFA - Topic: How to make some part of an object elastic and other part plastic. /how-to-make-tetrahedron-msh-file-with-meshlab; . /embed; ; ,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:325117,learn,learn,325117,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['learn'],['learn']
Usability,"3x3d &value) override;  ; const InternalListMatrixAccumulator & getAccumulators () const;  . Function details. ◆ add() [1/4]. template<class TMatrixAccumulator > . void sofa::core::ListMatrixAccumulator< TMatrixAccumulator >::add ; (; sofa::SignedIndex ; i, . sofa::SignedIndex ; j, . const sofa::type::Mat3x3d & ; value . ). inlineoverride . ◆ add() [2/4]. template<class TMatrixAccumulator > . void sofa::core::ListMatrixAccumulator< TMatrixAccumulator >::add ; (; sofa::SignedIndex ; i, . sofa::SignedIndex ; j, . const sofa::type::Mat3x3f & ; value . ). inlineoverride . ◆ add() [3/4]. template<class TMatrixAccumulator > . void sofa::core::ListMatrixAccumulator< TMatrixAccumulator >::add ; (; sofa::SignedIndex ; i, . sofa::SignedIndex ; j, . double ; value . ). inlineoverride . ◆ add() [4/4]. template<class TMatrixAccumulator > . void sofa::core::ListMatrixAccumulator< TMatrixAccumulator >::add ; (; sofa::SignedIndex ; i, . sofa::SignedIndex ; j, . float ; value . ). inlineoverride . ◆ clear(). template<class TMatrixAccumulator > . void sofa::core::ListMatrixAccumulator< TMatrixAccumulator >::clear ; (; ). inlineoverride . ◆ empty(). template<class TMatrixAccumulator > . bool sofa::core::ListMatrixAccumulator< TMatrixAccumulator >::empty ; (; ); const. inline . ◆ getAccumulators(). template<class TMatrixAccumulator > . const InternalListMatrixAccumulator& sofa::core::ListMatrixAccumulator< TMatrixAccumulator >::getAccumulators ; (; ); const. inline . ◆ push_back(). template<class TMatrixAccumulator > . void sofa::core::ListMatrixAccumulator< TMatrixAccumulator >::push_back ; (; TMatrixAccumulator * ; m). inline . ◆ remove(). template<class TMatrixAccumulator > . void sofa::core::ListMatrixAccumulator< TMatrixAccumulator >::remove ; (; TMatrixAccumulator * ; m). inline . ◆ size(). template<class TMatrixAccumulator > . InternalListMatrixAccumulator::size_type sofa::core::ListMatrixAccumulator< TMatrixAccumulator >::size ; (; ); const. inline . sofacoreListMatrixAccumulato",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_list_matrix_accumulator.html:2139,clear,clear,2139,api/master/sofa/html/classsofa_1_1core_1_1_list_matrix_accumulator.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_list_matrix_accumulator.html,1,['clear'],['clear']
Usability,"4);  ; virtual void internalDrawQuad (const type::Vec3 &p1, const type::Vec3 &p2, const type::Vec3 &p3, const type::Vec3 &p4, const type::Vec3 &normal1, const type::Vec3 &normal2, const type::Vec3 &normal3, const type::Vec3 &normal4, const type::RGBAColor &c1, const type::RGBAColor &c2, const type::RGBAColor &c3, const type::RGBAColor &c4);  . Attribute details. ◆ m_fakeSphereUtil. gl::BasicShapesGL_FakeSphere<type::Vec3> sofa::gl::DrawToolGL::m_fakeSphereUtil. protected . ◆ m_sphereUtil. gl::BasicShapesGL_Sphere<type::Vec3> sofa::gl::DrawToolGL::m_sphereUtil. protected . ◆ mLightEnabled. bool sofa::gl::DrawToolGL::mLightEnabled. protected . ◆ mPolygonMode. int sofa::gl::DrawToolGL::mPolygonMode. protected . ◆ mWireFrameEnabled. bool sofa::gl::DrawToolGL::mWireFrameEnabled. protected . Constructor details. ◆ DrawToolGL(). sofa::gl::DrawToolGL::DrawToolGL ; (; ). ◆ ~DrawToolGL(). sofa::gl::DrawToolGL::~DrawToolGL ; (; ). overridevirtual . Function details. ◆ clear(). void sofa::gl::DrawToolGL::clear ; (; ). overridevirtual . Reimplemented from sofa::helper::visual::DrawTool. ◆ disableBlending(). void sofa::gl::DrawToolGL::disableBlending ; (; ). overridevirtual . Implements sofa::helper::visual::DrawTool. ◆ disableDepthTest(). void sofa::gl::DrawToolGL::disableDepthTest ; (; ). overridevirtual . Implements sofa::helper::visual::DrawTool. ◆ disableLighting(). void sofa::gl::DrawToolGL::disableLighting ; (; ). overridevirtual . Implements sofa::helper::visual::DrawTool. ◆ disablePolygonOffset(). void sofa::gl::DrawToolGL::disablePolygonOffset ; (; ). overridevirtual . Remove variable depth offset for polygon drawing. ; Implements sofa::helper::visual::DrawTool. ◆ draw3DText(). void sofa::gl::DrawToolGL::draw3DText ; (; const type::Vec3 & ; p, . float ; scale, . const type::RGBAColor & ; color, . const char * ; text . ). overridevirtual . Implements sofa::helper::visual::DrawTool. ◆ draw3DText_Indices(). void sofa::gl::DrawToolGL::draw3DText_Indices ; (; const std::vecto",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1_draw_tool_g_l.html:14054,clear,clear,14054,api/master/sofa/html/classsofa_1_1gl_1_1_draw_tool_g_l.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1_draw_tool_g_l.html,1,['clear'],['clear']
Usability,"79a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::linearalgebra::matrix_bloc_traits< defaulttype::RigidDeriv< N, T >, IndexType > Class Template Reference . #include <RigidDeriv.h>. Static Public Member Functions; static const Real & v (const Block &b, int, int col);  ; static Real & v (Block &b, int, int col);  ; static void vset (Block &b, int, int col, Real v);  ; static void vadd (Block &b, int, int col, Real v);  ; static void clear (Block &b);  ; static bool empty (const Block &b);  ; static BlockTranspose transposed (const Block &b);  ; static void transpose (BlockTranspose &res, const Block &b);  ; template<class TSubBlock , std::enable_if_t< std::is_scalar_v< TSubBlock >, bool > = true> ; static void subBlock (const Block &b, IndexType row, IndexType col, TSubBlock &subBlock);  ; static sofa::linearalgebra::BaseMatrix::ElementType getElementType ();  ; static const char * Name ();  . Function details. ◆ clear(). template<Size N, class T , typename IndexType > . static void sofa::linearalgebra::matrix_bloc_traits< defaulttype::RigidDeriv< N, T >, IndexType >::clear ; (; Block & ; b). inlinestatic . ◆ empty(). template<Size N, class T , typename IndexType > . static bool sofa::linearalgebra::matrix_bloc_traits< defaulttype::RigidDeriv< N, T >, IndexType >::empty ; (; const Block & ; b). inlinestatic . ◆ getElementType(). template<Size N, class T , typename IndexType > . static sofa::linearalgebra::BaseMatrix::ElementType sofa::linearalgebra::matrix_bloc_traits< defaulttype::RigidDeriv< N, T >, IndexType >::getElementType ; (; ). inlinestatic . ◆ Name(). template<Size N, class T , typename IndexType > . static const char* sofa::linearalgebra::matrix_bloc_traits< defaulttype::RigidDeriv< N, T >, IndexType >::Name ; (; ). inlinestatic . ◆ subBlock(). template<Size N, class T , typename IndexType > . template<class TSubBlock , std::enable_if_t< std::is_scalar_v< TSubBlock >, bool > = true> . s",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1matrix__bloc__traits_3_01defaulttype_1_1_rigid_deriv_3_01_n_00_01_t_01_4_00_01_index_type_01_4.html:1137,clear,clear,1137,api/master/sofa/html/classsofa_1_1linearalgebra_1_1matrix__bloc__traits_3_01defaulttype_1_1_rigid_deriv_3_01_n_00_01_t_01_4_00_01_index_type_01_4.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1matrix__bloc__traits_3_01defaulttype_1_1_rigid_deriv_3_01_n_00_01_t_01_4_00_01_index_type_01_4.html,1,['clear'],['clear']
Usability,"9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::linearalgebra::matrix_bloc_traits< T, IndexType > Class Template Reference . #include <matrix_bloc_traits.h>. Static Public Member Functions; static Real & v (Block &b, IndexType row, IndexType col);  ; static const Real & v (const Block &b, IndexType row, IndexType col);  ; static void vset (Block &b, int row, int col, Real val);  ; static void vadd (Block &b, int row, int col, Real val);  ; static void clear (Block &b);  ; static bool empty (const Block &b);  ; static void invert (Block &result, const Block &b);  ; static void split_row_index (IndexType &index, IndexType &modulo);  ; static void split_col_index (IndexType &index, IndexType &modulo);  ; template<class TSubBlock > ; static void subBlock (const Block &b, IndexType row, IndexType col, TSubBlock &subBlock);  ; static sofa::linearalgebra::BaseMatrix::ElementType getElementType ();  . Function details. ◆ clear(). template<class T , typename IndexType > . static void sofa::linearalgebra::matrix_bloc_traits< T, IndexType >::clear ; (; Block & ; b). inlinestatic . ◆ empty(). template<class T , typename IndexType > . static bool sofa::linearalgebra::matrix_bloc_traits< T, IndexType >::empty ; (; const Block & ; b). inlinestatic . ◆ getElementType(). template<class T , typename IndexType > . static sofa::linearalgebra::BaseMatrix::ElementType sofa::linearalgebra::matrix_bloc_traits< T, IndexType >::getElementType ; (; ). inlinestatic . ◆ invert(). template<class T , typename IndexType > . static void sofa::linearalgebra::matrix_bloc_traits< T, IndexType >::invert ; (; Block & ; result, . const Block & ; b . ). inlinestatic . ◆ split_col_index(). template<class T , typename IndexType > . static void sofa::linearalgebra::matrix_bloc_traits< T, IndexType >::split_col_index ; (; IndexType & ; index, . IndexType & ; modulo . ). inlinestatic . ◆ split_row_index(). template<class T , typename IndexTy",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1matrix__bloc__traits.html:1110,clear,clear,1110,api/master/sofa/html/classsofa_1_1linearalgebra_1_1matrix__bloc__traits.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1matrix__bloc__traits.html,1,['clear'],['clear']
Usability,":. [legend]; Detailed Description; template<class In, class Out>; class sofa::component::mapping::linear::BarycentricMapperRegularGridTopology< In, Out >; Class allowing barycentric mapping computation on a RegularGridTopology. . Protected Attributes; type::vector< CubeData > m_map;  ; RegularGridTopology * m_fromTopology {nullptr};  ; MatrixType * m_matrixJ {nullptr};  ; bool m_updateJ {false};  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE2(BarycentricMapperRegularGridTopology, In, Out), SOFA_TEMPLATE2(TopologyBarycentricMapper, In, Out));  ;  ~BarycentricMapperRegularGridTopology () override;  ; void clear (std::size_t reserve=0) override;  ; void resize (core::State< Out > *toModel) override;  ; virtual bool isEmpty ();  ; virtual void setTopology (topology::container::grid::RegularGridTopology *_topology);  ; RegularGridTopology * getTopology ();  ; Index addPointInCube (const Index cubeIndex, const SReal *baryCoords) override;  ; void init (const typename Out::VecCoord &out, const typename In::VecCoord &in) override;  ; void draw (const core::visual::VisualParams *, const typename Out::VecCoord &out, const typename In::VecCoord &in) override;  ; void apply (typename Out::VecCoord &out, const typename In::VecCoord &in) override;  ; void applyJ (typename Out::VecDeriv &out, const typename In::VecDeriv &in) override;  ; void applyJT (typename In::VecDeriv &out, const typename Out::VecDeriv &in) override;  ; void applyJT (typename In::MatrixDeriv &out, const typename Out::MatrixDeriv &in) override;  ; const BaseMatrix * getJ (int outSize, int inSize) override;  . Protected Member Functions;  BarycentricMapperRegularGridTopology (RegularGridTopology *fromTopology, core::topology::BaseMeshTopology *toTopology);  . Friends; template<class I , class O > ; std::istream & operator>> (std::istream &in, BarycentricMapperRegularGridTopology< I, O > &b);  ; template<class I , class O > ; std::ostream & operator<< (std::ostream &out, const BarycentricMapperRegularGri",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_barycentric_mapper_regular_grid_topology.html:1276,clear,clear,1276,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_barycentric_mapper_regular_grid_topology.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_barycentric_mapper_regular_grid_topology.html,1,['clear'],['clear']
Usability,"::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseLoader()sofa::core::loader::BaseLoaderprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; canLoad()sofa::core::loader::BaseLoadervirtual; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createSegmentation3DTexture(unsigned char **textureData, int &width, int &height, int &depth)=0sofa::core::loader::VoxelLoaderpure virtual; d_componentStatesofa::core::objectmodel::Base; d_filenamesofa::core::loader::BaseLoader; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::B",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_voxel_loader-members.html:2333,clear,clearLoggedMessages,2333,api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_voxel_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_voxel_loader-members.html,1,['clear'],['clearLoggedMessages']
Usability,"::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseLoader()sofa::core::loader::BaseLoaderprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; canLoad()sofa::core::loader::BaseLoadervirtual; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_filenamesofa::core::loader::BaseLoader; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const B",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_base_loader-members.html:1976,clear,clearLoggedMessages,1976,api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_base_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_base_loader-members.html,2,['clear'],['clearLoggedMessages']
Usability,"::BaseMatrix. ◆ bRowSize(). template<typename TBlock , typename TPolicy = CRSMechanicalPolicy> . virtual Index sofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >::bRowSize ; (; ); const. inlineoverridevirtual . Returnsthe number of rows of blocks ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ bRowsRange(). template<typename TBlock , typename TPolicy = CRSMechanicalPolicy> . virtual std::pair<RowBlockConstIterator, RowBlockConstIterator> sofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >::bRowsRange ; (; ); const. inlineoverridevirtual . Get the iterators corresponding to the beginning and end of the given row of blocks. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clear() [1/2]. template<typename TBlock , typename TPolicy = CRSMechanicalPolicy> . void sofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >::clear ; (; ). inlineoverridevirtual . Completely clear the matrix. ; Need implement clear to override BaseMatrix one. ; Implements sofa::linearalgebra::BaseMatrix. ◆ clear() [2/2]. template<typename TBlock , typename TPolicy = CRSMechanicalPolicy> . void sofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >::clear ; (; Index ; i, . Index ; j . ). inlineoverride . clear scalar at element i, j of matrix . ◆ clearCol(). template<typename TBlock , typename TPolicy = CRSMechanicalPolicy> . void sofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >::clearCol ; (; Index ; j). inlineoverride . Clear col scalar method. Clear this col in all row of matrix. ; Parameters. j: Col index considering size of matrix in scalar. . WarningIf you want to clear all value of a block, it is better to call clearColBlock . ◆ clearRow(). template<typename TBlock , typename TPolicy = CRSMechanicalPolicy> . void sofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >::clearRow ; (; Index ; i). inlineoverride . Clear row scalar method. Clear ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical.html:48366,clear,clear,48366,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical.html,1,['clear'],['clear']
Usability,"::BaseMatrix::add. Adding values from a 6x6f matrix. This function may be overload to obtain better performances. . ◆ add() [8/8]. template<typename T > . virtual void sofa::linearalgebra::BaseMatrix::add. Add v to the existing value of the element at row i, column j (using 0-based indices) . ◆ begin() [1/2]. template<class Real > . FullMatrix< Real >::LineIterator sofa::linearalgebra::FullMatrix< Real >::begin. ◆ begin() [2/2]. template<class Real > . FullMatrix< Real >::LineConstIterator sofa::linearalgebra::FullMatrix< Real >::begin. ◆ clear() [1/2]. template<class Real > . void sofa::linearalgebra::FullMatrix< Real >::clear ; (; ). overridevirtual . Reset all values to 0. ; Implements sofa::linearalgebra::BaseMatrix. ◆ clear() [2/2]. template<class Real > . void sofa::linearalgebra::FullMatrix< Real >::clear ; (; Index ; i, . Index ; j . ). overridevirtual . Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearCol(). template<class Real > . void sofa::linearalgebra::FullMatrix< Real >::clearCol ; (; Index ; j). overridevirtual . Reset the all values in column j to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRow(). template<class Real > . void sofa::linearalgebra::FullMatrix< Real >::clearRow ; (; Index ; i). overridevirtual . Reset all the values in row i to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRowCol(). template<class Real > . void sofa::linearalgebra::FullMatrix< Real >::clearRowCol ; (; Index ; i). overridevirtual . Reset the value of both row and column i to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ colSize(). template<typename T > . Index sofa::linearalgebra::FullMatrix< T >::colSize ; (; void ; ); const. inlineoverridevirtual . Number of columns. ; Implements sofa::linearalgebra::BaseMatrix. ◆ element(). template<class Real > . SReal sofa::linearalgebra::FullMatrix< Real >::element ; (; Index ; i, . Index ; j . ); const. overridevirtual . Read the value of the element at row i, column j ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_full_matrix.html:19452,clear,clearCol,19452,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_full_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_full_matrix.html,1,['clear'],['clearCol']
Usability,"::BaseMatrixinline; blocCreate(Index i, Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; blocElements(Index i, Index j, T *buffer) constsofa::linearalgebra::BaseMatrixinline; blocGet(Index i, Index j) constsofa::linearalgebra::BaseMatrixinlinevirtual; blocGetW(Index i, Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; blocSet(Index i, Index j, const T *buffer)sofa::linearalgebra::BaseMatrixinline; bRowBegin(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowEnd(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowRange(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsBegin() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsEnd() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowSize() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsRange() constsofa::linearalgebra::BaseMatrixinlinevirtual; clear()=0sofa::linearalgebra::BaseMatrixpure virtual; clear(Index i, Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; clearCol(Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; clearCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRow(Index i)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowCol(Index i)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRows(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowsCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; cols(void) constsofa::linearalgebra::BaseMatrixinline; colSize(void) const =0sofa::linearalgebra::BaseMatrixpure virtual; compress()sofa::linearalgebra::BaseMatrixvirtual; createBlockAccessor(Index row, Index col, void *internalPtr=nullptr)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockAccessor(Index row, Index col, Index internalData)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockConstAccessor(Index row, Index col, void *internalPtr=nullptr) constsofa::linearalgebra::BaseMatrixinlineprotected; createBlockConstAccessor(Index row, Index col, I",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_matrix-members.html:4840,clear,clearCol,4840,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_matrix-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_matrix-members.html,1,['clear'],['clearCol']
Usability,"::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; buildDampingMatrix(core::behavior::DampingMatrix *) finalsofa::component::solidmechanics::spring::TriangularBiquadraticSpringsForceField< DataTypes >virtual; buildStiffnessMatrix(StiffnessMatrix *matrix)sofa::core::behavior::BaseForceFieldvirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ForceField< DataTypes >inlinestatic; sofa::core::behavior::BaseForceField::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; Coord typedefsofa::component::solidmechanics::spring::TriangularBiquadraticSpringsForceField< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_compressiblesofa::component::solidmechanics::spring::TriangularBiquadraticSpringsForceField< DataTypes >protected; d_dampingRatiosofa::component::solidmechanics::spring::TriangularBiquadraticSpringsForceField< DataTypes >protected; d_edgeInfosofa::component::solidmechanics::spring::TriangularBiquadraticSpringsForceField< DataTypes >protected; d_initialPointssofa::component::solidmechanics::spring::TriangularBiquadrat",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangular_biquadratic_springs_force_field-members.html:5637,clear,clearLoggedMessages,5637,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangular_biquadratic_springs_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangular_biquadratic_springs_force_field-members.html,1,['clear'],['clearLoggedMessages']
Usability,"::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::component::engine::analyze::Distances< DataTypes >inlinestatic; sofa::core::DataEngine::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanDirty(const core::ExecParams *params=nullptr)sofa::core::DataTrackerDDGNodevirtual; sofa::core::objectmodel::DDGNode::cleanDirty()sofa::core::objectmodel::DDGNode; cleanDirtyOutputsOfInputs()sofa::core::objectmodel::DDGNodeprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeDistanceMap(VecCoord beginElts=VecCoord(), const double &distMax=0)sofa::component::engine::analyze::Distances< DataTypes >; Coord typedefsofa::component::engine::analyze::Distances< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::component::engine::analyze::Distances< DataTypes >inlinestatic; d_componentStatesofa::core::objectmodel::Base; d_distanceTypesofa::component::engine::analyze::Distances< DataTypes >; d_harmonicMaxValuesofa::component::engine::analyze::Distances< DataTypes >; d_initTargetsofa::component::engine::analyze::Distances< DataTypes >; d_initTargetStepsofa::component::engine::analyze::Distances< DataTypes >; d_",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_distances-members.html:3028,clear,clearLoggedMessages,3028,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_distances-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_distances-members.html,1,['clear'],['clearLoggedMessages']
Usability,"::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::component::engine::select::PairBoxROI< DataTypes >inlinestatic; sofa::core::DataEngine::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanDirty(const core::ExecParams *params=nullptr)sofa::core::DataTrackerDDGNodevirtual; sofa::core::objectmodel::DDGNode::cleanDirty()sofa::core::objectmodel::DDGNode; cleanDirtyOutputsOfInputs()sofa::core::objectmodel::DDGNodeprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; Coord typedefsofa::component::engine::select::PairBoxROI< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; CPos typedefsofa::component::engine::select::PairBoxROI< DataTypes >; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; DataEngine()sofa::core::DataEngineprotected; DataTrackerDDGNode()sofa::core::DataTrackerDDGNodeinline; DDGLinkContainer typedefsofa::core::objectmodel::DDGNode; DDGLinkIterator typedefsofa::core::objectmodel::DDGNode; DDGNode()sofa::core::objectmodel::DDGNode; delInput(DDGNode *n)sofa::core::objectmodel::DDGNode; delOutput(DDGNode *n)sofa::core::objectmodel:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_pair_box_r_o_i-members.html:2957,clear,clearLoggedMessages,2957,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_pair_box_r_o_i-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_pair_box_r_o_i-members.html,1,['clear'],['clearLoggedMessages']
Usability,"::ConstraintProblem::_df. protected . ◆ _dFree. sofa::linearalgebra::FullVector<SReal> sofa::component::animationloop::ConstraintProblem::_dFree. protected . ◆ _dim. int sofa::component::animationloop::ConstraintProblem::_dim. protected . ◆ _force. sofa::linearalgebra::FullVector<SReal> sofa::component::animationloop::ConstraintProblem::_force. protected . ◆ _timer. sofa::helper::system::thread::CTime* sofa::component::animationloop::ConstraintProblem::_timer. protected . ◆ _tol. SReal sofa::component::animationloop::ConstraintProblem::_tol. protected . ◆ _W. sofa::linearalgebra::LPtrFullMatrix<SReal> sofa::component::animationloop::ConstraintProblem::_W. protected . Constructor details. ◆ ConstraintProblem(). sofa::component::animationloop::ConstraintProblem::ConstraintProblem ; (; bool ; printLog = false). ◆ ~ConstraintProblem(). sofa::component::animationloop::ConstraintProblem::~ConstraintProblem ; (; ). virtual . Function details. ◆ clear(). void sofa::component::animationloop::ConstraintProblem::clear ; (; int ; dim, . const SReal & ; tol . ). virtual . ◆ gaussSeidelConstraintTimed(). void sofa::component::animationloop::ConstraintProblem::gaussSeidelConstraintTimed ; (; SReal & ; timeout, . int ; numItMax . ). ◆ getConstraintResolutions(). std::vector<core::behavior::ConstraintResolution*>& sofa::component::animationloop::ConstraintProblem::getConstraintResolutions ; (; void ; ). inline . ◆ getD(). sofa::linearalgebra::FullVector<SReal>* sofa::component::animationloop::ConstraintProblem::getD ; (; void ; ). inline . ◆ getdF(). sofa::linearalgebra::FullVector<SReal>* sofa::component::animationloop::ConstraintProblem::getdF ; (; void ; ). inline . ◆ getDfree(). sofa::linearalgebra::FullVector<SReal>* sofa::component::animationloop::ConstraintProblem::getDfree ; (; void ; ). inline . ◆ getF(). sofa::linearalgebra::FullVector<SReal>* sofa::component::animationloop::ConstraintProblem::getF ; (; void ; ). inline . ◆ getSize(). int sofa::component::animationloop::Co",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_problem.html:2830,clear,clear,2830,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_problem.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_problem.html,1,['clear'],['clear']
Usability,"::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::core::behavior::SingleStateAccessor< DataTypes >; SingleLink< SingleStateAccessor< DataTypes >, MechanicalState< DataTypes >, BaseLink::FLAG_STRONGLINK > mstate;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(LineProjectiveConstraint, DataTypes), SOFA_TEMPLATE(sofa::core::behavior::ProjectiveConstraintSet, DataTypes));  ;  SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER (Vector3, sofa::type::Vec3);  ; void clearConstraints ();  ; void addConstraint (Index index);  ; void removeConstraint (Index index);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void projectResponse (const core::MechanicalParams *mparams, DataVecDeriv &resData) override;  ; void projectVelocity (const core::MechanicalParams *mparams, DataVecDeriv &vData) override;  ; void projectPosition (const core::MechanicalParams *mparams, DataVecCoord &xData) override;  ; void projectJacobianMatrix (const core::MechanicalParams *mparams, DataMatrixDeriv &cData) override;  ; void applyConstraint (const core::MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix) override;  Project the global Mechanical Matrix to constrained space using offset parameter. More...;  ; void applyConstraint (const core:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_line_projective_constraint.html:4682,clear,clearConstraints,4682,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_line_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_line_projective_constraint.html,1,['clear'],['clearConstraints']
Usability,"::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::core::behavior::SingleStateAccessor< DataTypes >; SingleLink< SingleStateAccessor< DataTypes >, MechanicalState< DataTypes >, BaseLink::FLAG_STRONGLINK > mstate;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(PlaneProjectiveConstraint, DataTypes), SOFA_TEMPLATE(sofa::core::behavior::ProjectiveConstraintSet, DataTypes));  ;  SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER (Vector3, sofa::type::Vec3);  ; void clearConstraints ();  ; void addConstraint (Index index);  ; void removeConstraint (Index index);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void projectResponse (const core::MechanicalParams *mparams, DataVecDeriv &resData) override;  ; void projectVelocity (const core::MechanicalParams *mparams, DataVecDeriv &vData) override;  ; void projectPosition (const core::MechanicalParams *mparams, DataVecCoord &xData) override;  ; void projectJacobianMatrix (const core::MechanicalParams *mparams, DataMatrixDeriv &cData) override;  ; void applyConstraint (const core::MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix) override;  Project the global Mechanical Matrix to constrained space using offset parameter. More...;  ; void applyConstraint (const core:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_plane_projective_constraint.html:4682,clear,clearConstraints,4682,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_plane_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_plane_projective_constraint.html,1,['clear'],['clearConstraints']
Usability,"::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::core::behavior::SingleStateAccessor< DataTypes >; SingleLink< SingleStateAccessor< DataTypes >, MechanicalState< DataTypes >, BaseLink::FLAG_STRONGLINK > mstate;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(PointProjectiveConstraint, DataTypes), SOFA_TEMPLATE(sofa::core::behavior::ProjectiveConstraintSet, DataTypes));  ;  SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER (Vector3, sofa::type::Vec3);  ; void clearConstraints ();  ; void addConstraint (Index index);  ; void removeConstraint (Index index);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void projectResponse (const core::MechanicalParams *mparams, DataVecDeriv &resData) override;  ; void projectVelocity (const core::MechanicalParams *mparams, DataVecDeriv &vData) override;  ; void projectPosition (const core::MechanicalParams *mparams, DataVecCoord &xData) override;  ; void projectJacobianMatrix (const core::MechanicalParams *mparams, DataMatrixDeriv &cData) override;  ; void applyConstraint (const core::MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix) override;  Project the global Mechanical Matrix to constrained space using offset parameter. More...;  ; void applyConstraint (const core:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_point_projective_constraint.html:4704,clear,clearConstraints,4704,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_point_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_point_projective_constraint.html,1,['clear'],['clearConstraints']
Usability,"::GearSpringForceField< DataTypes >::addSpringForce ; (; SReal & ; potentialEnergy, . VecDeriv & ; f1, . const VecCoord & ; p1, . const VecDeriv & ; v1, . VecDeriv & ; f2, . const VecCoord & ; p2, . const VecDeriv & ; v2, . int ; i, . Spring & ; spring . ). protected . Accumulate the spring force and compute and store its stiffness. . ◆ buildDampingMatrix(). template<class DataTypes > . void sofa::component::solidmechanics::spring::GearSpringForceField< DataTypes >::buildDampingMatrix ; (; core::behavior::DampingMatrix * ; ). finalvirtual . Reimplemented from sofa::core::behavior::BaseForceField. ◆ bwdInit(). template<class DataTypes > . void sofa::component::solidmechanics::spring::GearSpringForceField< DataTypes >::bwdInit. overridevirtual . Initialization method called at graph creation and modification, during bottom-up traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ clear(). template<class DataTypes > . void sofa::component::solidmechanics::spring::GearSpringForceField< DataTypes >::clear ; (; int ; reserve = 0). inline . ◆ draw(). template<class DataTypes > . void sofa::component::solidmechanics::spring::GearSpringForceField< DataTypes >::draw ; (; const core::visual::VisualParams * ; ). overridevirtual . Render internal data of this object, for debugging purposes. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ getAngleAroundAxis(). template<class DataTypes > . GearSpringForceField<DataTypes>::Real sofa::component::solidmechanics::spring::GearSpringForceField< DataTypes >::getAngleAroundAxis ; (; Coord ; p1, . Coord ; p2, . unsigned int ; axis . ). inline . ◆ getObject1(). template<class DataTypes > . core::behavior::MechanicalState<DataTypes>* sofa::component::solidmechanics::spring::GearSpringForceField< DataTypes >::getObject1 ; (; ). inline . ◆ getObject2(). template<class DataTypes > . core::behavior::MechanicalState<DataTypes>* sofa::component::solidmechanics::spring::GearSpringForceField< DataTypes >::getObject2 ; (; ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_gear_spring_force_field.html:29610,clear,clear,29610,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_gear_spring_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_gear_spring_force_field.html,1,['clear'],['clear']
Usability,"::Key, QAction* > sofa::gui::qt::RealGUI::viewerMap. protected . list of all viewer key name (for creation) mapped to its QAction in the GUI . Constructor details. ◆ RealGUI(). sofa::gui::qt::RealGUI::RealGUI ; (; const char * ; viewername). ◆ ~RealGUI(). sofa::gui::qt::RealGUI::~RealGUI ; (; ). override . Function details. ◆ activateNode. void sofa::gui::qt::RealGUI::activateNode ; (; sofa::simulation::Node * ; node, . bool ; activate . ). virtualslot . ◆ appendToDataLogFile. void sofa::gui::qt::RealGUI::appendToDataLogFile ; (; QString ; dataModifiedString). protectedslot . ◆ centerWindow(). void sofa::gui::qt::RealGUI::centerWindow ; (; ). overridevirtual . Reimplemented from sofa::gui::common::BaseGUI. ◆ changeViewer. void sofa::gui::qt::RealGUI::changeViewer ; (; ). protectedvirtualslot . Allow to dynamically change viewer. Called when click on another viewer in GUI Qt viewer list (see viewerMap). TODO: find a better way to propagate the argument when we construct the viewer . ◆ clear. void sofa::gui::qt::RealGUI::clear ; (; ). virtualslot . ◆ closeGUI(). int sofa::gui::qt::RealGUI::closeGUI ; (; ). overridevirtual . Close the GUI. ; Implements sofa::gui::common::BaseGUI. ◆ CreateApplication(). void sofa::gui::qt::RealGUI::CreateApplication ; (; int ; _argc = 0, . char ** ; _argv = nullptr . ). staticprotected . ◆ createDisplayFlags(). void sofa::gui::qt::RealGUI::createDisplayFlags ; (; Node::SPtr ; root). protected . ◆ CreateGUI(). BaseGUI * sofa::gui::qt::RealGUI::CreateGUI ; (; const char * ; name, . sofa::simulation::Node::SPtr ; groot = nullptr, . const char * ; filename = nullptr . ). static . ◆ createViewer(). void sofa::gui::qt::RealGUI::createViewer ; (; const char * ; _viewerName, . bool ; _updateViewerList = false . ). virtual . create a viewer according to the argument key Notethe viewerMap have to be initialize at least once before ; _updateViewerList is used only if you want to reactualise the viewerMap in the GUI TODO: find a better way to propag",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i.html:13044,clear,clear,13044,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i.html,1,['clear'],['clear']
Usability,"::MapIndices< T >inline; applyIndex(V &v, const MapIndex &m)sofa::component::engine::transform::MapIndices< T >inline; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanDirty(const core::ExecParams *params=nullptr)sofa::core::DataTrackerDDGNodevirtual; sofa::core::objectmodel::DDGNode::cleanDirty()sofa::core::objectmodel::DDGNode; cleanDirtyOutputsOfInputs()sofa::core::objectmodel::DDGNodeprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; DataEngine()sofa::core::DataEngineprotected; DataTrackerDDGNode()sofa::core::DataTrackerDDGNodeinline; DDGLinkContainer typedefsofa::core::objectmodel::DDGNode; DDGLinkIterator typedefsofa::core::objectmodel::DDGNode; DDGNode()sofa::core::objectmodel::DDGNode; delInput(DDGNode *n)sofa::core::objectmodel::DDGNode; delOutput(DDGNode *n)sofa::core::objectmodel::DDGNode; doAddInput(DDGNode *n)sofa::core::objectmodel::DDGNodeprotectedvirtual; doAddOutput(DDGNode *n)sofa::core::objectmodel::DDGNodeprot",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_map_indices-members.html:3053,clear,clearLoggedMessages,3053,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_map_indices-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_map_indices-members.html,1,['clear'],['clearLoggedMessages']
Usability,"::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(core::visual::VisualParams *) overridesofa::gl::component::shader::OglRenderingSRGBvirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; drawScene(VisualParams *)sofa::core::visual::VisualManagerinlinevirtual; drawShadow(const VisualParams *vparams)sofa::core::visual::VisualModelinlinevirtual; drawTransparent(const VisualParams *)sofa::core::visual::VisualModelinlinevirtual;",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_rendering_s_r_g_b-members.html:2456,clear,clearLoggedMessages,2456,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_rendering_s_r_g_b-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_rendering_s_r_g_b-members.html,1,['clear'],['clearLoggedMessages']
Usability,"::Vec3 &center, const double orient[4][4], const type::Vec3 &length, const type::Vec4f &colorX=type::Vec4f(1, 0, 0, 1), const type::Vec4f &colorY=type::Vec4f(0, 1, 0, 1), const type::Vec4f &colorZ=type::Vec4f(0, 0, 1, 1))=delete;  ; static void draw (const type::Vec3 &center, const Quaternion &orient, SReal length=1.0_sreal, const type::Vec4f &colorX=type::Vec4f(1, 0, 0, 1), const type::Vec4f &colorY=type::Vec4f(0, 1, 0, 1), const type::Vec4f &colorZ=type::Vec4f(0, 0, 1, 1))=delete;  ; static void draw (const type::Vec3 &center, const double orient[4][4], SReal length=1.0_sreal, const type::Vec4f &colorX=type::Vec4f(1, 0, 0, 1), const type::Vec4f &colorY=type::Vec4f(0, 1, 0, 1), const type::Vec4f &colorZ=type::Vec4f(0, 0, 1, 1))=delete;  ; static void draw (const double *mat, SReal length=1.0_sreal, const type::Vec4f &colorX=type::Vec4f(1, 0, 0, 1), const type::Vec4f &colorY=type::Vec4f(0, 1, 0, 1), const type::Vec4f &colorZ=type::Vec4f(0, 0, 1, 1))=delete;  ; static void draw (const type::Vec3 &center, const type::Vec3 &ext, const double &radius);  ; static void draw (const type::Vec3 &center, const type::Vec3 &ext, const double &r1, const double &r2);  ; static void clear ();  . Constructor details. ◆ Axis() [1/8]. sofa::gl::Axis::Axis ; (; SReal ; len = 1.0_sreal). ◆ Axis() [2/8]. sofa::gl::Axis::Axis ; (; const type::Vec3 & ; len). ◆ Axis() [3/8]. sofa::gl::Axis::Axis ; (; const type::Vec3 & ; center, . const Quaternion & ; orient, . const type::Vec3 & ; length . ). ◆ Axis() [4/8]. sofa::gl::Axis::Axis ; (; const type::Vec3 & ; center, . const double ; orient[4][4], . const type::Vec3 & ; length . ). ◆ Axis() [5/8]. sofa::gl::Axis::Axis ; (; const double * ; mat, . const type::Vec3 & ; length . ). ◆ Axis() [6/8]. sofa::gl::Axis::Axis ; (; const type::Vec3 & ; center, . const Quaternion & ; orient, . SReal ; length = 1.0_sreal . ). ◆ Axis() [7/8]. sofa::gl::Axis::Axis ; (; const type::Vec3 & ; center, . const double ; orient[4][4], . SReal ; length = 1.0_sreal . )",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1_axis.html:4811,clear,clear,4811,api/master/sofa/html/classsofa_1_1gl_1_1_axis.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1_axis.html,1,['clear'],['clear']
Usability,"::behavior::BaseProjectiveConstraintSetvirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseProjectiveConstraintSet()sofa::core::behavior::BaseProjectiveConstraintSetinlineprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ProjectiveConstraintSet< DataTypes >inlinestatic; sofa::core::behavior::BaseProjectiveConstraintSet::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearConstraints()sofa::component::constraint::projective::HermiteSplineProjectiveConstraint< DataTypes >; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; computeDerivateHermiteCoefs(const Real u, Real &dH00, Real &dH10, Real &dH01, Real &dH11)sofa::component::constraint::projective::HermiteSplineProjectiveConstraint< DataTypes >; computeHermiteCoefs(const Real u, Real &H00, Real &H10, Real &H01, Real &H11)sofa::component::constraint::projective::HermiteSplineProjectiveConstraint< DataTypes >; Coord typedefsofa::component::constraint::projective::HermiteSplineProjectiveConstraint< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_hermite_spline_projective_constraint-members.html:2968,clear,clearConstraints,2968,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_hermite_spline_projective_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_hermite_spline_projective_constraint-members.html,1,['clear'],['clearConstraints']
Usability,"::component::topology::container::dynamic::HexahedronSetTopologyContainer. ◆ cleanEdgeTopologyFromDirty(). void sofa::component::topology::container::dynamic::EdgeSetTopologyContainer::cleanEdgeTopologyFromDirty ; (; ). protected . ◆ clear(). void sofa::component::topology::container::dynamic::EdgeSetTopologyContainer::clear ; (; ). overridevirtual . Procedural creation methods ; Reimplemented from sofa::core::topology::BaseMeshTopology.; Reimplemented in sofa::component::topology::container::dynamic::TriangleSetTopologyContainer, sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer, sofa::component::topology::container::dynamic::QuadSetTopologyContainer, sofa::component::topology::container::dynamic::MultilevelHexahedronSetTopologyContainer, and sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer. ◆ clearEdges(). void sofa::component::topology::container::dynamic::EdgeSetTopologyContainer::clearEdges ; (; ). protected . ◆ clearEdgesAroundVertex(). void sofa::component::topology::container::dynamic::EdgeSetTopologyContainer::clearEdgesAroundVertex ; (; ). protected . ◆ createEdgesAroundVertexArray(). void sofa::component::topology::container::dynamic::EdgeSetTopologyContainer::createEdgesAroundVertexArray ; (; ). protectedvirtual . Creates the EdgesAroundVertex array. ; This function is only called if EdgesAroundVertex member is required. EdgesAroundVertex[i] contains the indices of all edges having the ith DOF as one of their ends. . ◆ createEdgeSetArray(). void sofa::component::topology::container::dynamic::EdgeSetTopologyContainer::createEdgeSetArray ; (; ). protectedvirtual . Creates the EdgeSet array. ; This function must be implemented by derived classes to create a list of edges from a set of triangles or tetrahedra ; Reimplemented in sofa::component::topology::container::dynamic::TriangleSetTopologyContainer, sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer, sofa::component::to",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_container.html:37401,clear,clearEdgesAroundVertex,37401,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_container.html,1,['clear'],['clearEdgesAroundVertex']
Usability,"::core::objectmodel::Base; buildGroupsOfComponentAssociatedToMechanicalStates(std::map< PairMechanicalStates, GroupOfComponentsAssociatedToAPairOfMechanicalStates > &groups)sofa::component::linearsystem::MatrixLinearSystem< TMatrix, TVector >protected; buildSystemMatrix(const core::MechanicalParams *mparams)sofa::core::behavior::BaseMatrixLinearSystem; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanLocalMatrices()sofa::component::linearsystem::MatrixLinearSystem< TMatrix, TVector >protected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearSystem()sofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >virtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; contribute(const core::MechanicalParams *mparams, IndependentContributors &contributors)sofa::component::linearsystem::MatrixLinearSystem< TMatrix, TVector >protected; Contribution typedefsofa::component::linearsystem::MatrixLinearSystem< TMatrix, TVector >; copyLocalVectorToGlobalVector(core::MultiVecDerivId v, TVector *globalVector)sofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >protected; copyLocalVectorToGlobalVector(core::MultiVecDerivId v, GraphScatteredVector *globalVector)sofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >protected; copyLocalVectorToGlobalVector(core::MultiVecDerivId v, GraphScatteredVector *globalVector)sofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >protected; countLoggedMessages(sofa::helper::loggin",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_matrix_linear_system-members.html:3644,clear,clearSystem,3644,api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_matrix_linear_system-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_matrix_linear_system-members.html,1,['clear'],['clearSystem']
Usability,"::core::objectmodel::Base; m_definitionSourceFilePossofa::core::objectmodel::Base; m_instanciationSourceFileNamesofa::core::objectmodel::Base; m_instanciationSourceFilePossofa::core::objectmodel::Base; m_internalEnginesofa::core::objectmodel::Baseprotected; m_oldAttributessofa::core::objectmodel::Base; m_vecDatasofa::core::objectmodel::Baseprotected; m_vecLinksofa::core::objectmodel::Baseprotected; MapData typedefsofa::core::objectmodel::Base; MapLink typedefsofa::core::objectmodel::Base; MyClass typedefsofa::core::objectmodel::Base; namesofa::core::objectmodel::Base; notMuted() constsofa::core::objectmodel::Baseinline; parse(BaseObjectDescription *arg) overridesofa::core::objectmodel::BaseObjectvirtual; parseField(const std::string &attribute, const std::string &value)sofa::core::objectmodel::Basevirtual; parseFields(const std::list< std::string > &str)sofa::core::objectmodel::Base; parseFields(const std::map< std::string, std::string * > &str)sofa::core::objectmodel::Basevirtual; pause()sofa::component::sceneutility::PauseAnimationvirtual; PauseAnimation()sofa::component::sceneutility::PauseAnimationprotected; PauseAnimationOnEvent()sofa::component::sceneutility::PauseAnimationOnEventprotected; pausedsofa::component::sceneutility::PauseAnimationOnEvent; Ptr typedefsofa::core::objectmodel::Base; reinit()sofa::core::objectmodel::BaseObjectvirtual; removeData(BaseData *f)sofa::core::objectmodel::Base; removeInNode(BaseNode *)sofa::core::objectmodel::BaseObjectinlinevirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; rootsofa::component::sceneutility::PauseAnimationprotected; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstancia",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_pause_animation_on_event-members.html:8251,pause,pause,8251,api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_pause_animation_on_event-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_pause_animation_on_event-members.html,1,['pause'],['pause']
Usability,"::core::objectmodel::Base; m_definitionSourceFilePossofa::core::objectmodel::Base; m_instanciationSourceFileNamesofa::core::objectmodel::Base; m_instanciationSourceFilePossofa::core::objectmodel::Base; m_internalEnginesofa::core::objectmodel::Baseprotected; m_oldAttributessofa::core::objectmodel::Base; m_vecDatasofa::core::objectmodel::Baseprotected; m_vecLinksofa::core::objectmodel::Baseprotected; MapData typedefsofa::core::objectmodel::Base; MapLink typedefsofa::core::objectmodel::Base; MyClass typedefsofa::core::objectmodel::Base; namesofa::core::objectmodel::Base; notMuted() constsofa::core::objectmodel::Baseinline; parse(BaseObjectDescription *arg) overridesofa::core::objectmodel::BaseObjectvirtual; parseField(const std::string &attribute, const std::string &value)sofa::core::objectmodel::Basevirtual; parseFields(const std::list< std::string > &str)sofa::core::objectmodel::Base; parseFields(const std::map< std::string, std::string * > &str)sofa::core::objectmodel::Basevirtual; pause()sofa::component::sceneutility::PauseAnimationvirtual; PauseAnimation()sofa::component::sceneutility::PauseAnimationprotected; Ptr typedefsofa::core::objectmodel::Base; reinit()sofa::core::objectmodel::BaseObjectvirtual; removeData(BaseData *f)sofa::core::objectmodel::Base; removeInNode(BaseNode *)sofa::core::objectmodel::BaseObjectinlinevirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; rootsofa::component::sceneutility::PauseAnimationprotected; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_pause_animation-members.html:8165,pause,pause,8165,api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_pause_animation-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_pause_animation-members.html,1,['pause'],['pause']
Usability,"::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::core::behavior::SingleStateAccessor< DataTypes >; SingleLink< SingleStateAccessor< DataTypes >, MechanicalState< DataTypes >, BaseLink::FLAG_STRONGLINK > mstate;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE2(DiagonalMass, DataTypes, GeometricalTypes), SOFA_TEMPLATE(core::behavior::Mass, DataTypes));  ; bool load (const char *filename);  ; void clear ();  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void handleEvent (sofa::core::objectmodel::Event *) override;  Handle an event. More...;  ; void doUpdateInternal () override;  Implementation of the internal update. More...;  ; sofa::geometry::ElementType getMassTopologyType () const;  ; Real getMassDensity () const;  ; template<typename T = GeometricalTypes, typename std::enable_if_t< T::spatial_dimensions > = 3, int > ; SReal getTotalMass () const;  ; std::size_t getMassCount ();  ; void printMass ();  Print key mass information (totalMass, vertexMass and massDensity) More...;  ; void addMass (const MassType &mass);  ; void resize (int vsize);  ; void addMDx (const core::MechanicalParams *mparams, DataVecDeriv &f, const DataVecDeriv &dx, SReal f",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_diagonal_mass.html:5915,clear,clear,5915,api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_diagonal_mass.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_diagonal_mass.html,1,['clear'],['clear']
Usability,"::core::objectmodel::Event *) override;  Handle an event. More...;  ; virtual bool isPrerendered ();  ; virtual sofa::gl::FrameBufferObject & getFBO ();  ; bool hasFilledFbo ();  ; std::string getOutputName ();  ;  Public Member Functions inherited from sofa::core::visual::VisualManager;  SOFA_CLASS (VisualManager, VisualModel);  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_visual_manager_pass.html:5000,clear,clearVisual,5000,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_visual_manager_pass.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_visual_manager_pass.html,2,['clear'],"['clear', 'clearVisual']"
Usability,"::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; baseRead(ConstVecId v) const overridesofa::core::State< TDataTypes >virtual; BaseState()sofa::core::BaseStateinlineprotected; BaseType typedefsofa::core::objectmodel::Base; baseWrite(VecId v) overridesofa::core::State< TDataTypes >virtual; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; colorMapsofa::gl::component::rendering3d::DataDisplay; sofa::computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; VisualState< defaulttype::Vec3Types >::computeBBox() constsofa::core::State< TDataTypes >; VisualState< defaulttype::Vec3Types >::computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::State< TDataTypes >virtual; computeNormals()sofa::gl::component::rendering3d::DataDisplayprotected; Coord typedefsofa::core::State< TDataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_currentMaxsofa::gl::component::rendering3d::DataDisplay; d_currentMinsofa::gl::component::rendering3d::DataDisplay; d_enable",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_data_display-members.html:2822,clear,clearVisual,2822,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_data_display-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_data_display-members.html,1,['clear'],['clearVisual']
Usability,"::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; baseRead(ConstVecId v) const overridesofa::core::State< TDataTypes >virtual; BaseState()sofa::core::BaseStateinlineprotected; BaseType typedefsofa::core::objectmodel::Base; baseWrite(VecId v) overridesofa::core::State< TDataTypes >virtual; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; sofa::computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; VisualState< defaulttype::Vec3Types >::computeBBox() constsofa::core::State< TDataTypes >; VisualState< defaulttype::Vec3Types >::computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::State< TDataTypes >virtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; DataTypes typedefsofa::core::State< TDataTypes >; Deriv typedefsofa::core::State< TDataTypes >; doDrawVisual(const core::visual::VisualParams *vparams) overridesofa::gl::component::rendering3d::OglCylind",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_ogl_cylinder_model-members.html:2832,clear,clearVisual,2832,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_ogl_cylinder_model-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_ogl_cylinder_model-members.html,1,['clear'],['clearVisual']
Usability,"::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(core::visual::VisualParams *) overridesofa::gl::component::shader::LightManagervirtual; bwdInit() overridesofa::gl::component::shader::LightManagervirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear()sofa::gl::component::shader::LightManager; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_ambientsofa::gl::component::shader::LightManager; d_componentStatesofa::core::objectmodel::Base; d_drawIsEnabledsofa::gl::component::shader::LightManager; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; d_shadowsEnabledsofa::gl::component::shader::LightManager; d_softShadowsEnabledsofa::gl::component::shader::LightManager; doInitVisual(const core::visual::VisualParams *vparams) overridesofa::gl::component::shader::LightManagervirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_light_manager-members.html:2567,clear,clearVisual,2567,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_light_manager-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_light_manager-members.html,1,['clear'],['clearVisual']
Usability,"::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(core::visual::VisualParams *) overridesofa::gl::component::shader::VisualManagerPassvirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkMultipass(sofa::core::objectmodel::BaseContext *con)sofa::gl::component::shader::VisualManagerPassprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; doInitVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::VisualManagerPassvirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *vparams) overridesofa::gl::component::shader::VisualManagerPassvirtual; drawScene(core::visual::VisualParams *vp) overridesofa::gl::component::shader::VisualManagerPassvirtual; dr",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_visual_manager_pass-members.html:2573,clear,clearLoggedMessages,2573,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_visual_manager_pass-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_visual_manager_pass-members.html,1,['clear'],['clearLoggedMessages']
Usability,"::d_shadowsEnabled. Enable Shadow in the scene. (default=0) . ◆ d_softShadowsEnabled. Data<bool> sofa::gl::component::shader::LightManager::d_softShadowsEnabled. If Shadows enabled, Enable Variance Soft Shadow in the scene. (default=0) . Constructor details. ◆ LightManager(). sofa::gl::component::shader::LightManager::LightManager ; (; ). protected . ◆ ~LightManager(). sofa::gl::component::shader::LightManager::~LightManager ; (; ). overrideprotected . Function details. ◆ bwdDraw(). void sofa::gl::component::shader::LightManager::bwdDraw ; (; core::visual::VisualParams * ; ). overridevirtual . Called after objects in the current branch are displayed. ; Reimplemented from sofa::core::visual::VisualModel. ◆ bwdInit(). void sofa::gl::component::shader::LightManager::bwdInit ; (; ). overridevirtual . Initialization method called at graph creation and modification, during bottom-up traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ clear(). void sofa::gl::component::shader::LightManager::clear ; (; ). Remove all lights of the LightManager. . ◆ doInitVisual(). void sofa::gl::component::shader::LightManager::doInitVisual ; (; const core::visual::VisualParams * ; vparams). overridevirtual . Reimplemented from sofa::core::visual::VisualModel. ◆ draw(). void sofa::gl::component::shader::LightManager::draw ; (; const core::visual::VisualParams * ; ). overridevirtual . Render internal data of this object, for debugging purposes. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ drawScene(). bool sofa::gl::component::shader::LightManager::drawScene ; (; core::visual::VisualParams * ; ). overridevirtual . Called instead of rendering the scene. ; Return true if this object actually did the rendering, or false if it wasn't done. ; Reimplemented from sofa::core::visual::VisualManager. ◆ fwdDraw(). void sofa::gl::component::shader::LightManager::fwdDraw ; (; core::visual::VisualParams * ; ). overridevirtual . Called before objects in the current branch a",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_light_manager.html:18149,clear,clear,18149,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_light_manager.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_light_manager.html,1,['clear'],['clear']
Usability,"::gl::component::shader::LightManager::d_shadowsEnabled. Enable Shadow in the scene. (default=0) . ◆ d_softShadowsEnabled. Data<bool> sofa::gl::component::shader::LightManager::d_softShadowsEnabled. If Shadows enabled, Enable Variance Soft Shadow in the scene. (default=0) . Constructor details. ◆ LightManager(). sofa::gl::component::shader::LightManager::LightManager ; (; ). protected . ◆ ~LightManager(). sofa::gl::component::shader::LightManager::~LightManager ; (; ). overrideprotected . Function details. ◆ bwdDraw(). void sofa::gl::component::shader::LightManager::bwdDraw ; (; core::visual::VisualParams * ; ). overridevirtual . Called after objects in the current branch are displayed. ; Reimplemented from sofa::core::visual::VisualModel. ◆ bwdInit(). void sofa::gl::component::shader::LightManager::bwdInit ; (; ). overridevirtual . Initialization method called at graph creation and modification, during bottom-up traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ clear(). void sofa::gl::component::shader::LightManager::clear ; (; ). Remove all lights of the LightManager. . ◆ doInitVisual(). void sofa::gl::component::shader::LightManager::doInitVisual ; (; const core::visual::VisualParams * ; vparams). overridevirtual . Reimplemented from sofa::core::visual::VisualModel. ◆ draw(). void sofa::gl::component::shader::LightManager::draw ; (; const core::visual::VisualParams * ; ). overridevirtual . Render internal data of this object, for debugging purposes. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ drawScene(). bool sofa::gl::component::shader::LightManager::drawScene ; (; core::visual::VisualParams * ; ). overridevirtual . Called instead of rendering the scene. ; Return true if this object actually did the rendering, or false if it wasn't done. ; Reimplemented from sofa::core::visual::VisualManager. ◆ fwdDraw(). void sofa::gl::component::shader::LightManager::fwdDraw ; (; core::visual::VisualParams * ; ). overridevirtual . Called be",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_light_manager.html:18092,clear,clear,18092,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_light_manager.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_light_manager.html,1,['clear'],['clear']
Usability,"::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyTransformation(sofa::type::Matrix4 const &T)sofa::core::loader::MeshLoadervirtual; Base()sofa::core::objectmodel::Baseprotected; BaseLoader()sofa::core::loader::BaseLoaderprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; canLoad() overridesofa::component::io::mesh::StringMeshCreatorinlinevirtual; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearBuffers() finalsofa::core::loader::MeshLoaderprotectedvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; copyMeshToData(helper::io::Mesh &_mesh)sofa::core::loader::MeshLoaderprotected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_createSubelementssofa::core::loader::MeshLoader; d_edgessofa::core::loader::MeshLoader; d_edgesGroupssofa::core::loader::MeshLoader; d_filenamesofa::core::loader::BaseLoader; d_flipNormalssofa::core::loader::MeshLoader; d_hexahedrasofa::core::loader::MeshLoader; d_hexahedraGroupssofa::core::loader::MeshLoader; d_highOrderEdgePositionssofa::core::loader::MeshLoader; d_highOrderHexahedronPositionssofa::core::loader::MeshLoader; d_highOrderQuadPositionssofa::core::loader::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_string_mesh_creator-members.html:4830,clear,clearLoggedMessages,4830,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_string_mesh_creator-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_string_mesh_creator-members.html,1,['clear'],['clearLoggedMessages']
Usability,"::lagrangian::solver::GenericConstraintSolvervirtual; buildSystem_matrixAssembly(const core::ConstraintParams *cParams)sofa::component::constraint::lagrangian::solver::GenericConstraintSolverprotected; buildSystem_matrixFree(unsigned int numConstraints)sofa::component::constraint::lagrangian::solver::GenericConstraintSolverprotected; buildSystemTask(const ConstraintParams *, MultiVecId res1, MultiVecId res2)sofa::core::behavior::ConstraintSolverprotected; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup() overridesofa::component::constraint::lagrangian::solver::GenericConstraintSolvervirtual; clearConstraintCorrections()sofa::component::constraint::lagrangian::solver::ConstraintSolverImplprotected; clearConstraintProblemLocks()sofa::component::constraint::lagrangian::solver::GenericConstraintSolverprotected; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeGraphssofa::component::constraint::lagrangian::solver::GenericConstraintSolver; computeResidual(const core::ExecParams *) overridesofa::component::constraint::lagrangian::solver::GenericConstraintSolvervirtual; ConstraintSolver()sofa::core::behavior::ConstraintSolverprotected; ConstraintSolverImpl()sofa::component::constraint::lagrangian::solver::ConstraintSolverImpl; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; CP_BUFFER_SIZEsofa::component::constraint::lagrangian::solver::GenericConstraintSolverprotectedstatic; create(T *, Base",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_generic_constraint_solver-members.html:3615,clear,clearConstraintCorrections,3615,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_generic_constraint_solver-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_generic_constraint_solver-members.html,1,['clear'],['clearConstraintCorrections']
Usability,"::linearalgebra::BaseMatrix. ◆ addToBaseMatrix(). template<class TReal > . void sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::addToBaseMatrix ; (; BaseMatrix * ; matrix, . SReal ; factor, . Index ; offset . ); const. inline . add this EigenBaseSparseMatrix to a BaseMatrix at the offset and multiplied by factor . ◆ beginRow(). template<class TReal > . void sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::beginRow ; (; Index ; index). inline . ◆ choleskyDecompose(). template<class TReal > . bool sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::choleskyDecompose ; (; ). inline . Try to compute the LDLT decomposition, and return true if success. The matrix is unchanged. . ◆ choleskySolve(). template<class TReal > . void sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::choleskySolve ; (; VectorEigen & ; x, . const VectorEigen & ; b . ); const. inline . Solve Ax=b, where A is this matrix. WARNING: ldltDecompose() must be called first. x and b can be the same vector. . ◆ clear(). template<class TReal > . void sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::clear ; (; ). inlineoverridevirtual . Set all values to 0, by resizing to the same size. ; Implements sofa::linearalgebra::BaseMatrix. ◆ clearCol(). template<class TReal > . void sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::clearCol ; (; Index ; col). inlineoverridevirtual . Clears the all the entries of column imin to column imax-1. Not efficient ! ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearCols(). template<class TReal > . void sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::clearCols ; (; Index ; imin, . Index ; imax . ). inlineoverridevirtual . Set all the entries of column i and of row i to 0. Not efficient ! ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRow(). template<class TReal > . void sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::clearRow ; (; Index ; i). inlineoverridevirtual . Set all the entries of a row to 0. ; Reimplemented from so",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_base_sparse_matrix.html:19401,clear,clear,19401,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_base_sparse_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_base_sparse_matrix.html,1,['clear'],['clear']
Usability,"::linearalgebra::BaseMatrix::add. Adding values from a 6x6d matrix. This function may be overload to obtain better performances. . ◆ add() [7/8]. template<typename T > . void sofa::linearalgebra::BaseMatrix::add. Adding values from a 6x6f matrix. This function may be overload to obtain better performances. . ◆ add() [8/8]. template<typename T > . virtual void sofa::linearalgebra::BaseMatrix::add. Add v to the existing value of the element at row i, column j (using 0-based indices) . ◆ begin() [1/2]. template<class Real > . FullMatrix< Real >::LineIterator sofa::linearalgebra::FullMatrix< Real >::begin. ◆ begin() [2/2]. template<class Real > . FullMatrix< Real >::LineConstIterator sofa::linearalgebra::FullMatrix< Real >::begin. ◆ clear() [1/2]. template<class Real > . void sofa::linearalgebra::FullMatrix< Real >::clear ; (; ). overridevirtual . Reset all values to 0. ; Implements sofa::linearalgebra::BaseMatrix. ◆ clear() [2/2]. template<class Real > . void sofa::linearalgebra::FullMatrix< Real >::clear ; (; Index ; i, . Index ; j . ). overridevirtual . Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearCol(). template<class Real > . void sofa::linearalgebra::FullMatrix< Real >::clearCol ; (; Index ; j). overridevirtual . Reset the all values in column j to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRow(). template<class Real > . void sofa::linearalgebra::FullMatrix< Real >::clearRow ; (; Index ; i). overridevirtual . Reset all the values in row i to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRowCol(). template<class Real > . void sofa::linearalgebra::FullMatrix< Real >::clearRowCol ; (; Index ; i). overridevirtual . Reset the value of both row and column i to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ colSize(). template<typename T > . Index sofa::linearalgebra::FullMatrix< T >::colSize ; (; void ; ); const. inlineoverridevirtual . Number of columns. ; Implements sofa::linearalgebra::BaseMatrix. ◆ ele",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_full_matrix.html:19259,clear,clear,19259,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_full_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_full_matrix.html,1,['clear'],['clear']
Usability,"::linearalgebra::SparseMatrix< T >, sofa::linearalgebra::SparseMatrix< SReal >, sofa::linearalgebra::SparseMatrix< Real >, sofa::linearalgebra::FullMatrix< T >, sofa::linearalgebra::FullMatrix< typename Vector::Real >, sofa::linearalgebra::FullMatrix< Real >, sofa::linearalgebra::EigenBaseSparseMatrix< TReal >, sofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >, sofa::linearalgebra::EigenBaseSparseMatrix< typename DataTypes::Real >, sofa::linearalgebra::DiagonalMatrix< T >, sofa::linearalgebra::DiagonalMatrix< R1 >, sofa::linearalgebra::DiagonalMatrix< R2 >, sofa::linearalgebra::CompressedRowSparseMatrixMechanical< sofa::type::Mat< NL, NC, MReal > >, sofa::linearalgebra::CompressedRowSparseMatrixMechanical< MReal >, sofa::linearalgebra::CompressedRowSparseMatrixMechanical< Real >, sofa::linearalgebra::BTDMatrix< N, T >, sofa::linearalgebra::BlockFullMatrix< N, T >, and sofa::linearalgebra::BlockDiagonalMatrix< LC, T >. ◆ clearRowCol(). virtual void sofa::linearalgebra::BaseMatrix::clearRowCol ; (; Index ; i). inlinevirtual . Reset the value of both row and column i to 0. ; Reimplemented in sofa::linearalgebra::SparseMatrix< T >, sofa::linearalgebra::SparseMatrix< SReal >, sofa::linearalgebra::SparseMatrix< Real >, sofa::linearalgebra::FullMatrix< T >, sofa::linearalgebra::FullMatrix< typename Vector::Real >, sofa::linearalgebra::FullMatrix< Real >, sofa::linearalgebra::EigenBaseSparseMatrix< TReal >, sofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >, sofa::linearalgebra::EigenBaseSparseMatrix< typename DataTypes::Real >, sofa::linearalgebra::DiagonalMatrix< T >, sofa::linearalgebra::DiagonalMatrix< R1 >, sofa::linearalgebra::DiagonalMatrix< R2 >, sofa::linearalgebra::CompressedRowSparseMatrixMechanical< sofa::type::Mat< NL, NC, MReal > >, sofa::linearalgebra::CompressedRowSparseMatrixMechanical< MReal >, sofa::linearalgebra::CompressedRowSparseMatrixMechanical< Real >, sofa::linearalgebra::BTDMatrix< N, T >, sofa::linearalgebra::BlockFull",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_matrix.html:38260,clear,clearRowCol,38260,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_matrix.html,1,['clear'],['clearRowCol']
Usability,"::mechanicalload::SphereForceField< DataTypes >; buildDampingMatrix(core::behavior::DampingMatrix *) finalsofa::component::mechanicalload::SphereForceField< DataTypes >virtual; buildStiffnessMatrix(core::behavior::StiffnessMatrix *matrix) overridesofa::component::mechanicalload::SphereForceField< DataTypes >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ForceField< DataTypes >inlinestatic; sofa::core::behavior::BaseForceField::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; colorsofa::component::mechanicalload::SphereForceField< DataTypes >; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; contactssofa::component::mechanicalload::SphereForceField< DataTypes >protected; Coord typedefsofa::component::mechanicalload::SphereForceField< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_bilateralsofa::component::mechanicalload::SphereForceField< DataTypes >; d_colorsofa::component::mechanicalload::SphereForceField< DataTypes >; d_componentStatesofa::core::objectmodel::Base; d_contactssofa::component::mechanicalload::SphereForceField< DataTypes >protected; d_dampingsofa::component::mechanicalload::SphereForceField< DataTypes >; ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_sphere_force_field-members.html:4747,clear,clearLoggedMessages,4747,api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_sphere_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_sphere_force_field-members.html,1,['clear'],['clearLoggedMessages']
Usability,"::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseIntersector()sofa::core::collision::BaseIntersectorinline; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; beginBroadPhase()sofa::core::collision::Intersectioninlinevirtual; beginIntersection(sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *)sofa::core::collision::BaseIntersectorinline; beginNarrowPhase()sofa::core::collision::Intersectioninlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeIntersection(collision::geometry::Cube &cube1, collision::geometry::Cube &cube2, OutputVector *contacts, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; computeIntersection(collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2, OutputVector *contacts, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; computeIntersection(collision::geometry::RigidSphere &sph1, collision::geometry::RigidSphere &sph2, OutputVector *contacts, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; computeIntersection(collision::geometry::Sphere &sph1, collision::geometry::RigidSpher",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_discrete_intersection-members.html:2298,clear,clearLoggedMessages,2298,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_discrete_intersection-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_discrete_intersection-members.html,1,['clear'],['clearLoggedMessages']
Usability,"::objectmodel::Base; buildDampingMatrix(core::behavior::DampingMatrix *) finalsofa::component::solidmechanics::spring::QuadularBendingSprings< DataTypes >virtual; buildStiffnessMatrix(core::behavior::StiffnessMatrix *matrix) overridesofa::component::solidmechanics::spring::QuadularBendingSprings< DataTypes >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ForceField< DataTypes >inlinestatic; sofa::core::behavior::BaseForceField::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; computeForce(const VecDeriv &v, const EdgeInformation &einfo, const typename EdgeInformation::Spring &spring, Coord direction, Real distance)sofa::component::solidmechanics::spring::QuadularBendingSprings< DataTypes >protected; computeLocalJacobian(EdgeInformation &einfo, const Coord &direction, const ForceOutput &force)sofa::component::solidmechanics::spring::QuadularBendingSprings< DataTypes >protected; computeSpringForce(VecDeriv &f, const VecCoord &x, const VecDeriv &v, EdgeInformation &einfo, typename EdgeInformation::Spring &spring)sofa::component::solidmechanics::spring::QuadularBendingSprings< DataTypes >protected; Coord typedefsofa::component::solidmechanics::spring::QuadularBendingSprings< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_quadular_bending_springs-members.html:5754,clear,clearLoggedMessages,5754,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_quadular_bending_springs-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_quadular_bending_springs-members.html,1,['clear'],['clearLoggedMessages']
Usability,"::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; buildDampingMatrix(core::behavior::DampingMatrix *) finalsofa::component::solidmechanics::spring::PolynomialSpringsForceField< DataTypes >virtual; buildStiffnessMatrix(core::behavior::StiffnessMatrix *matrix) overridesofa::component::solidmechanics::spring::PolynomialSpringsForceField< DataTypes >virtual; bwdInit() overridesofa::component::solidmechanics::spring::PolynomialSpringsForceField< DataTypes >virtual; canCreate(T *obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::PairInteractionForceField< DataTypes >inlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; ComputeJacobian(unsigned int stiffnessIndex, unsigned int springIndex)sofa::component::solidmechanics::spring::PolynomialSpringsForceField< DataTypes >protected; Coord typedefsofa::component::solidmechanics::spring::PolynomialSpringsForceField< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; CPos typedefsofa::component::solidmechanics::spring::PolynomialSpringsForceField< DataTypes >; create(T *, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::core::behavior::PairInteractionForceField< DataTypes >inlinestatic; d_componentStatesofa::core::objectmodel::Base; d_compressiblesofa::component::solidmechanics::spring::PolynomialSpringsForceField< DataTypes >; d_computeZeroLen",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_polynomial_springs_force_field-members.html:4190,clear,clearLoggedMessages,4190,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_polynomial_springs_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_polynomial_springs_force_field-members.html,1,['clear'],['clearLoggedMessages']
Usability,"::objectmodel::BaseObjectprotected; checkConnexity() overridesofa::component::topology::container::dynamic::QuadSetTopologyContainervirtual; checkTopology() const overridesofa::component::topology::container::dynamic::QuadSetTopologyContainervirtual; cleanEdgeTopologyFromDirty()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; cleanPointTopologyFromDirty()sofa::component::topology::container::dynamic::PointSetTopologyContainerprotected; cleanQuadTopologyFromDirty()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear() overridesofa::component::topology::container::dynamic::QuadSetTopologyContainervirtual; clearEdges()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearEdgesAroundVertex()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearEdgesInQuad()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; clearLoggedMessages() constsofa::core::objectmodel::Base; clearQuads()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; clearQuadsAroundEdge()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; clearQuadsAroundVertex()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createEdgesAroundVertexArray()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotectedvirtual; createEdgeSetArray() overridesofa::component::topology::container::dynamic::Qua",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_container-members.html:4373,clear,clearEdgesInQuad,4373,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_container-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_container-members.html,1,['clear'],['clearEdgesInQuad']
Usability,"::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup() overridesofa::component::odesolver::backward::EulerImplicitSolvervirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeResidual(const core::ExecParams *, SReal, sofa::core::MultiVecCoordId, sofa::core::MultiVecDerivId)sofa::core::behavior::OdeSolverinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_firstOrdersofa::component::odesolver::backward::EulerImplicitSolver; d_messageLogCountsofa::core::objectmodel::Basemutable; d_rayleighMasssofa::component::odesolver::backward::EulerImplicitSolver; d_rayleighStiffnesssofa::component::odesolver::backward::EulerImplicitSolver; d_solveConstraintsofa::component::odesolver::backward::EulerImplicitSolver; d_threadSafeVisitorsofa::component::odesolver::back",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1backward_1_1_euler_implicit_solver-members.html:1960,clear,clearLoggedMessages,1960,api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1backward_1_1_euler_implicit_solver-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1backward_1_1_euler_implicit_solver-members.html,1,['clear'],['clearLoggedMessages']
Usability,"::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkConnexity() overridesofa::component::topology::container::dynamic::EdgeSetTopologyContainervirtual; checkTopology() const overridesofa::component::topology::container::dynamic::EdgeSetTopologyContainervirtual; cleanEdgeTopologyFromDirty()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; cleanPointTopologyFromDirty()sofa::component::topology::container::dynamic::PointSetTopologyContainerprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear() overridesofa::component::topology::container::dynamic::EdgeSetTopologyContainervirtual; clearEdges()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearEdgesAroundVertex()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createEdgesAroundVertexArray()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotectedvirtual; createEdgeSetArray()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotectedvirtual; d_checkConnexitysofa::component::topology::container::dynamic::EdgeSetTopologyContainer; d_checkTopologysofa::component::topology::container::dynamic::PointSetTopologyCont",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_container-members.html:4021,clear,clearEdges,4021,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_container-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_container-members.html,1,['clear'],['clearEdges']
Usability,"::simulation::Node* sofa::gui::qt::SofaWindowDataGraph::m_rootNode. protected . Point to the root node of the current simulation. . ◆ m_scaleX. SReal sofa::gui::qt::SofaWindowDataGraph::m_scaleX. protected . Scale parameter to apply between nodes for display in abscissa. . ◆ m_scaleY. SReal sofa::gui::qt::SofaWindowDataGraph::m_scaleY. protected . Scale parameter to apply between nodes for display in ordinate. . Constructor details. ◆ SofaWindowDataGraph(). sofa::gui::qt::SofaWindowDataGraph::SofaWindowDataGraph ; (; QWidget * ; parent, . sofa::simulation::Node * ; scene . ). Default constructor of the Widget, given a QWidget as parent and a pointer to the current simulation scene. . ◆ ~SofaWindowDataGraph(). sofa::gui::qt::SofaWindowDataGraph::~SofaWindowDataGraph ; (; ). Function details. ◆ addSimulationObject(). size_t sofa::gui::qt::SofaWindowDataGraph::addSimulationObject ; (; sofa::core::objectmodel::BaseObject * ; bObject). protected . Internal method to create a Node for this sofa BaseObject. . ◆ clearNodeData(). void sofa::gui::qt::SofaWindowDataGraph::clearNodeData ; (; ). protected . Internal method to clear the graph structures. . ◆ connectNodeData(). void sofa::gui::qt::SofaWindowDataGraph::connectNodeData ; (; ). protected . Internal method to create all connection between component on the graph. . ◆ parseSimulationNode(). void sofa::gui::qt::SofaWindowDataGraph::parseSimulationNode ; (; sofa::simulation::Node * ; node, . int ; posX = 0 . ). protected . Internal method to parse all Sofa component inside a Sofa simulation Node. Will call. ; See alsoaddSimulationObject for each compoenent then will iterate on children nodes. . ◆ resetNodeGraph(). void sofa::gui::qt::SofaWindowDataGraph::resetNodeGraph ; (; sofa::simulation::Node * ; scene). Method to be called when graph need to be recomputed (like reloading scene). Take a pointer to the root node of the scene. . sofaguiqtSofaWindowDataGraph; Generated on Mon Nov 11 2024 03:25:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_window_data_graph.html:4364,clear,clearNodeData,4364,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_window_data_graph.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_window_data_graph.html,3,['clear'],"['clear', 'clearNodeData']"
Usability,"::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ paused. bool sofa::component::sceneutility::PauseAnimationOnEvent::paused. Constructor details. ◆ PauseAnimationOnEvent(). sofa::component::sceneutility::PauseAnimationOnEvent::PauseAnimationOnEvent ; (; ). protected . ◆ ~PauseAnimationOnEvent(). sofa::component::sceneutility::PauseAnimationOnEvent::~PauseAnimationOnEvent ; (; ). overrideprotected . Function details. ◆ handleEvent(). void sofa::component::sceneutility::PauseAnimationOnEvent::handleEvent ; (; sofa::core::objectmodel::Event * ; ). overridevirtual . Handle an event. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ init(). void sofa::component::sceneutility::PauseAnimationOnEvent::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::component::sceneutility::PauseAnimation. ◆ isPaused(). bool sofa::component::sceneutility::PauseAnimationOnEvent::isPaused ; (; ). overridevirtual . Implements sofa::component::scene",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_pause_animation_on_event.html:13407,pause,paused,13407,api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_pause_animation_on_event.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_pause_animation_on_event.html,1,['pause'],['paused']
Usability,"::system::FileRepository::FileRepository ; (; const char * ; envVar, . const std::vector< std::string > & ; paths, . const fileKeysMap & ; iniFilesAndKeys . ). Initialize the set of paths using the environment variable specified by the parameter envVar, the relative paths specified by the parameter paths and the ini files and respective keys specified by the parameter iniFilesAndKeys. . ◆ ~FileRepository(). sofa::helper::system::FileRepository::~FileRepository ; (; ). Function details. ◆ addFirstPath(). void sofa::helper::system::FileRepository::addFirstPath ; (; const std::string & ; path). Adds a path to the front of the set of paths. . ◆ addLastPath(). void sofa::helper::system::FileRepository::addLastPath ; (; const std::string & ; path). Adds a path to the back of the set of paths. . ◆ cleanPath(). std::string sofa::helper::system::FileRepository::cleanPath ; (; const std::string & ; path). static . Replaces every occurrences of ""//"" by ""/"" . ◆ clear(). void sofa::helper::system::FileRepository::clear ; (; ). Remove all known paths. . ◆ displayPaths(). void sofa::helper::system::FileRepository::displayPaths ; (; ); const. inline . ◆ entrySeparator(). static char sofa::helper::system::FileRepository::entrySeparator ; (; ). inlinestatic . OS-dependant character separating entries in list of paths. . ◆ findFile(). bool sofa::helper::system::FileRepository::findFile ; (; std::string & ; filename, . const std::string & ; basedir = """", . std::ostream * ; errlog = &std::cerr . ). Find file using the stored set of paths. Parameters. basediroverride current directory (optional) ; filenamerequested file as input, resolved file path as output . Returnstrue if the file was found in one of the directories, false otherwise . ◆ findFileFromFile(). bool sofa::helper::system::FileRepository::findFileFromFile ; (; std::string & ; filename, . const std::string & ; basefile, . std::ostream * ; errlog = &std::cerr . ). Find file using the stored set of paths. Parameters. basefileove",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1system_1_1_file_repository.html:6673,clear,clear,6673,api/master/sofa/html/classsofa_1_1helper_1_1system_1_1_file_repository.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1system_1_1_file_repository.html,1,['clear'],['clear']
Usability,"::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH | BaseLink::FLAG_STRONGLINK> sofa::component::constraint::projective::FixedTranslationProjectiveConstraint< DataTypes >::l_topology. Link to be set to the topology container in the component graph. . Constructor details. ◆ FixedTranslationProjectiveConstraint(). template<class DataTypes > . sofa::component::constraint::projective::FixedTranslationProjectiveConstraint< DataTypes >::FixedTranslationProjectiveConstraint. protected . ◆ ~FixedTranslationProjectiveConstraint(). template<class DataTypes > . sofa::component::constraint::projective::FixedTranslationProjectiveConstraint< DataTypes >::~FixedTranslationProjectiveConstraint. protectedvirtual . Function details. ◆ addIndex(). template<class DataTypes > . void sofa::component::constraint::projective::FixedTranslationProjectiveConstraint< DataTypes >::addIndex ; (; Index ; index). ◆ clearIndices(). template<class DataTypes > . void sofa::component::constraint::projective::FixedTranslationProjectiveConstraint< DataTypes >::clearIndices. ◆ draw(). template<class DataTypes > . void sofa::component::constraint::projective::FixedTranslationProjectiveConstraint< DataTypes >::draw ; (; const core::visual::VisualParams * ; ). overridevirtual . Render internal data of this object, for debugging purposes. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ init(). template<class DataTypes > . void sofa::component::constraint::projective::FixedTranslationProjectiveConstraint< DataTypes >::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ projectJacobianMatrix(). template<class DataTypes > . void sofa::component::constraint::projective::FixedTranslationProjectiveConstraint< DataTypes >::projectJacobianMatrix ; (; const core::MechanicalParams * ; , . DataMatrixDeriv & ; cData . ). overridevirtual . Project c to constrained space ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_translation_projective_constraint.html:22818,clear,clearIndices,22818,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_translation_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_translation_projective_constraint.html,1,['clear'],['clearIndices']
Usability,"::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(core::visual::VisualParams *) overridesofa::gl::component::rendering3d::ClipPlanevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkDataValues()sofa::gl::component::rendering3d::ClipPlanevirtual; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; ClipPlane()sofa::gl::component::rendering3d::ClipPlaneprotected; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; drawShadow(const VisualParams *vparams)sofa::core::visual::VisualModelinlinevirtual; drawTransparent(const VisualParams *)sofa::core::visual::VisualModelinlinevirtual; drawVisual(const VisualParams *) finalsofa::core::visual::Vis",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_clip_plane-members.html:2628,clear,clearVisual,2628,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_clip_plane-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_clip_plane-members.html,1,['clear'],['clearVisual']
Usability,":AbstractTypeInfo. ◆ Scalar(). bool sofa::defaulttype::NameOnlyTypeInfo::Scalar ; (; ); const. inlineoverridevirtual . True iff this type uses scalar values. ; Implements sofa::defaulttype::AbstractTypeInfo. ◆ setIntegerValue(). void sofa::defaulttype::NameOnlyTypeInfo::setIntegerValue ; (; void * ; , . Index ; , . long long ;  . ); const. inlineoverridevirtual . Set the value at index of data from an integer value. ; Implements sofa::defaulttype::AbstractTypeInfo. ◆ setScalarValue(). void sofa::defaulttype::NameOnlyTypeInfo::setScalarValue ; (; void * ; , . Index ; , . double ;  . ); const. inlineoverridevirtual . Set the value at index of data from a scalar value. ; Implements sofa::defaulttype::AbstractTypeInfo. ◆ setSize(). bool sofa::defaulttype::NameOnlyTypeInfo::setSize ; (; void * ; , . sofa::Size ;  . ); const. inlineoverridevirtual . Resize data to size elements, if relevant. ; But resizing is not always relevant, for example:; nothing happens if FixedSize() is true;; sets can't be resized; they are cleared instead;; nothing happens for vectors containing resizable values (i.e. when BaseType()::FixedSize() is false), because of the ""single index"" abstraction;. Returns true iff the data was resizable ; Implements sofa::defaulttype::AbstractTypeInfo. ◆ setTextValue(). void sofa::defaulttype::NameOnlyTypeInfo::setTextValue ; (; void * ; , . Index ; , . const std::string & ;  . ); const. inlineoverridevirtual . Set the value at index of data from a string value. ; Implements sofa::defaulttype::AbstractTypeInfo. ◆ SimpleCopy(). bool sofa::defaulttype::NameOnlyTypeInfo::SimpleCopy ; (; ); const. inlineoverridevirtual . True iff copying the data can be done with a memcpy(). ; Implements sofa::defaulttype::AbstractTypeInfo. ◆ SimpleLayout(). bool sofa::defaulttype::NameOnlyTypeInfo::SimpleLayout ; (; ); const. inlineoverridevirtual . True iff the layout in memory is simply N values of the same base type. It means that you can use the abstract index system to itera",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1defaulttype_1_1_name_only_type_info.html:7939,clear,cleared,7939,api/master/sofa/html/classsofa_1_1defaulttype_1_1_name_only_type_info.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1defaulttype_1_1_name_only_type_info.html,1,['clear'],['cleared']
Usability,":Base; Base()sofa::core::objectmodel::Baseprotected; BaseForceField()sofa::core::behavior::BaseForceFieldprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; buildDampingMatrix(core::behavior::DampingMatrix *) finalsofa::component::solidmechanics::spring::FrameSpringForceField< DataTypes >virtual; buildStiffnessMatrix(StiffnessMatrix *matrix)sofa::core::behavior::BaseForceFieldvirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::PairInteractionForceField< DataTypes >inlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear(int reserve=0)sofa::component::solidmechanics::spring::FrameSpringForceField< DataTypes >; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; Coord typedefsofa::component::solidmechanics::spring::FrameSpringForceField< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::core::behavior::PairInteractionForceField< DataTypes >inlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; d_showExtraTorsionsofa::component::solidmechanics::spring::FrameSpringForceField< DataTypes >protected; d_showLawfulTorsionsofa::component::solidmechanics::spring::FrameSpringForceField< DataTypes >protected; d_spring",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_frame_spring_force_field-members.html:4633,clear,clear,4633,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_frame_spring_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_frame_spring_force_field-members.html,1,['clear'],['clear']
Usability,":Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeInstance(Instance inst) overridesofa::core::collision::CollisionGroupManagerinlineprotectedvirtual; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearGroups(objectmodel::BaseContext *scene)=0sofa::core::collision::CollisionGroupManagerpure virtual; clearLoggedMessages() constsofa::core::objectmodel::Base; CollisionAlgorithm()sofa::core::collision::CollisionAlgorithminlineprotected; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createGroups(objectmodel::BaseContext *scene, const sofa::type::vector< Contact::SPtr > &contacts)=0sofa::core::collision::CollisionGroupManagerpure virtual; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtu",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_collision_group_manager-members.html:2009,clear,clearGroups,2009,api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_collision_group_manager-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_collision_group_manager-members.html,1,['clear'],['clearGroups']
Usability,":BaseForceField. ◆ checkMassDensity(). template<class DataTypes , class GeometricalTypes > . bool sofa::component::mass::DiagonalMass< DataTypes, GeometricalTypes >::checkMassDensity. virtual . ◆ checkTopology(). template<class DataTypes , class GeometricalTypes > . bool sofa::component::mass::DiagonalMass< DataTypes, GeometricalTypes >::checkTopology. protected . ◆ checkTotalMass(). template<class DataTypes , class GeometricalTypes > . bool sofa::component::mass::DiagonalMass< DataTypes, GeometricalTypes >::checkTotalMass. virtual . ◆ checkTotalMassInit(). template<class DataTypes , class GeometricalTypes > . void sofa::component::mass::DiagonalMass< DataTypes, GeometricalTypes >::checkTotalMassInit. virtual . ◆ checkVertexMass(). template<class DataTypes , class GeometricalTypes > . bool sofa::component::mass::DiagonalMass< DataTypes, GeometricalTypes >::checkVertexMass. virtual . ◆ clear(). template<class DataTypes , class GeometricalTypes > . void sofa::component::mass::DiagonalMass< DataTypes, GeometricalTypes >::clear. ◆ computeVertexMass(). template<class DataTypes , class GeometricalTypes > . DiagonalMass< DataTypes, GeometricalTypes >::Real sofa::component::mass::DiagonalMass< DataTypes, GeometricalTypes >::computeVertexMass ; (; Real ; density). protected . Compute the vertexMass using input density and return the corresponding full mass. . ◆ doUpdateInternal(). template<class DataTypes , class GeometricalTypes > . void sofa::component::mass::DiagonalMass< DataTypes, GeometricalTypes >::doUpdateInternal. overridevirtual . Implementation of the internal update. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ draw() [1/5]. void sofa::component::mass::DiagonalMass< defaulttype::Rigid3Types >::draw ; (; const core::visual::VisualParams * ; ). virtual . Render internal data of this object, for debugging purposes. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ draw() [2/5]. void sofa::component::mass::DiagonalMass< defaulttype::Rigid2Typ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_diagonal_mass.html:37815,clear,clear,37815,api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_diagonal_mass.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_diagonal_mass.html,1,['clear'],['clear']
Usability,":Decompose< Real >::polarDecomposition ; (; const type::Mat< 3, 2, Real > & ; M, . type::Mat< 3, 2, Real > & ; Q, . type::Mat< 2, 2, Real > & ; S . ). static . Stable Polar Decomposition of 3x2 matrix based on a SVD using Q=UVt where M=UsV . ◆ polarDecomposition() [3/4]. template<class Real > . Real sofa::helper::Decompose< Real >::polarDecomposition ; (; const type::Mat< 3, 3, Real > & ; M, . type::Mat< 3, 3, Real > & ; Q . ). static . The same as previous except we do not care about S . ◆ polarDecomposition() [4/4]. template<class Real > . Real sofa::helper::Decompose< Real >::polarDecomposition ; (; const type::Mat< 3, 3, Real > & ; M, . type::Mat< 3, 3, Real > & ; Q, . type::Mat< 3, 3, Real > & ; S . ). static . Polar Decomposition of 3x3 matrix, M = QS. See Nicholas Higham and Robert S. Schreiber, Fast Polar Decomposition of An Arbitrary Matrix, Technical Report 88-942, October 1988, Department of Computer Science, Cornell University.; original code by Ken Shoemake, 1993 version simplified by Jernej Barbič imported from Vega . ◆ polarDecomposition_stable() [1/4]. template<class Real > . bool sofa::helper::Decompose< Real >::polarDecomposition_stable ; (; const type::Mat< 2, 2, Real > & ; M, . type::Mat< 2, 2, Real > & ; Q . ). static . ◆ polarDecomposition_stable() [2/4]. template<class Real > . bool sofa::helper::Decompose< Real >::polarDecomposition_stable ; (; const type::Mat< 2, 2, Real > & ; M, . type::Mat< 2, 2, Real > & ; Q, . type::Mat< 2, 2, Real > & ; S . ). static . ◆ polarDecomposition_stable() [3/4]. template<class Real > . bool sofa::helper::Decompose< Real >::polarDecomposition_stable ; (; const type::Mat< 3, 3, Real > & ; M, . type::Mat< 3, 3, Real > & ; Q . ). static . ◆ polarDecomposition_stable() [4/4]. template<class Real > . bool sofa::helper::Decompose< Real >::polarDecomposition_stable ; (; const type::Mat< 3, 3, Real > & ; M, . type::Mat< 3, 3, Real > & ; Q, . type::Mat< 3, 3, Real > & ; S . ). static . Stable Polar Decomposition of 3x3 ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_decompose.html:12425,simpl,simplified,12425,api/master/sofa/html/classsofa_1_1helper_1_1_decompose.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_decompose.html,1,['simpl'],['simplified']
Usability,":FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE2(DistanceFromTargetMapping, TIn, TOut), SOFA_TEMPLATE3(BaseNonLinearMapping, TIn, TOut, true));  ; void createTarget (unsigned index, const InCoord &position, Real distance);  Add a target with a desired distance. More...;  ; void updateTarget (unsigned index, const InCoord &position);  Update the position of a target. More...;  ; void updateTarget (unsigned index, SReal x, SReal y, SReal z) override;  ; void clear ();  Remove all targets. More...;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void apply (const core::MechanicalParams *mparams, DataVecCoord_t< Out > &out, const DataVecCoord_t< In > &in) override;  ; void buildGeometricStiffnessMatrix (sofa::core::GeometricStiffnessMatrix *matrices) override;  Assembles the geometric stiffness matrix of the mapping in the provided matrix object. More...;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ;  Public Member Functions inherited from sofa::component::mapping::nonlinear::BaseNonLinearMapping< TIn, TOut, true >;  SOFA_CLASS (SOFA_TEMPLATE3(BaseNonLinearMapping, TIn, TOut, HasStabilizedGeometricStiffness), SOFA_TEMPLATE2(core::Mapping, TIn, TOut));  ; void init () override;  Initialization method called at graph creation and modification",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_distance_from_target_mapping.html:5708,clear,clear,5708,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_distance_from_target_mapping.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_distance_from_target_mapping.html,1,['clear'],['clear']
Usability,:HexahedronSetTopologyContainer::checkConnexity ; (; ). overridevirtual . Checks if the topology has only one connected component. ; Get information about connexity of the mesh; Returnstrue if only one connected component; Get information about connexity of the mesh ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer. ◆ checkTopology(). bool sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer::checkTopology ; (; ); const. overridevirtual . Checks if the topology is coherent. ; Check if the shell arrays are coherent See alsom_hexahedron . m_edgesInHexahedron . m_quadsInHexahedron . m_hexahedraAroundVertex . m_hexahedraAroundEdge . m_hexahedraAroundQuad ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer. ◆ cleanHexahedronTopologyFromDirty(). void sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer::cleanHexahedronTopologyFromDirty ; (; ). protected . ◆ clear(). void sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer::clear ; (; ). overridevirtual . Procedural creation methods ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer.; Reimplemented in sofa::component::topology::container::dynamic::MultilevelHexahedronSetTopologyContainer. ◆ clearEdgesInHexahedron(). void sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer::clearEdgesInHexahedron ; (; ). protected . ◆ clearHexahedra(). void sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer::clearHexahedra ; (; ). protected . ◆ clearHexahedraAroundEdge(). void sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer::clearHexahedraAroundEdge ; (; ). protected . ◆ clearHexahedraAroundQuad(). void sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer::clearHexahedraAroundQuad ; (; ). protected . ◆ clearHexahedraAroundVertex(). void ,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_topology_container.html:48786,clear,clear,48786,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_topology_container.html,1,['clear'],['clear']
Usability,":LinearVelocityProjectiveConstraint. protected . ◆ ~LinearVelocityProjectiveConstraint(). template<class TDataTypes > . sofa::component::constraint::projective::LinearVelocityProjectiveConstraint< TDataTypes >::~LinearVelocityProjectiveConstraint. protectedvirtual . Function details. ◆ addIndex(). template<class TDataTypes > . void sofa::component::constraint::projective::LinearVelocityProjectiveConstraint< TDataTypes >::addIndex ; (; Index ; index). ◆ addKeyVelocity(). template<class TDataTypes > . void sofa::component::constraint::projective::LinearVelocityProjectiveConstraint< TDataTypes >::addKeyVelocity ; (; Real ; time, . Deriv ; movement . ). add a new key movement Parameters. time: the simulation time you want to set a movement (in sec) ; movement: the corresponding motion for instance, addKeyMovement(1.0, Deriv(5,0,0) ) will set a translation of 5 in x direction a time 1.0s . ◆ clearIndices(). template<class TDataTypes > . void sofa::component::constraint::projective::LinearVelocityProjectiveConstraint< TDataTypes >::clearIndices. methods to add/remove some indices, keyTimes, keyVelocity . ◆ clearKeyVelocities(). template<class TDataTypes > . void sofa::component::constraint::projective::LinearVelocityProjectiveConstraint< TDataTypes >::clearKeyVelocities. ◆ draw(). template<class TDataTypes > . void sofa::component::constraint::projective::LinearVelocityProjectiveConstraint< TDataTypes >::draw ; (; const core::visual::VisualParams * ; ). overridevirtual . Render internal data of this object, for debugging purposes. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ init(). template<class TDataTypes > . void sofa::component::constraint::projective::LinearVelocityProjectiveConstraint< TDataTypes >::init ; (; void ; ). overridevirtual . – Constraint interface ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ projectJacobianMatrix(). template<class TDataTypes > . void sofa::component::constraint::projective::LinearVelocityProjectiveConstrain",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_linear_velocity_projective_constraint.html:23253,clear,clearIndices,23253,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_linear_velocity_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_linear_velocity_projective_constraint.html,1,['clear'],['clearIndices']
Usability,":PointProjectiveConstraint< DataTypes >virtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseProjectiveConstraintSet()sofa::core::behavior::BaseProjectiveConstraintSetinlineprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ProjectiveConstraintSet< DataTypes >inlinestatic; sofa::core::behavior::BaseProjectiveConstraintSet::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearConstraints()sofa::component::constraint::projective::PointProjectiveConstraint< DataTypes >; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; Coord typedefsofa::component::constraint::projective::PointProjectiveConstraint< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_drawSizesofa::component::constraint::projective::PointProjectiveConstraint< DataTypes >; d_fixAllsofa::component::constraint::projective::PointProjectiveConstraint< DataTypes >; d_indicessofa::component::constraint::projective::PointProjectiveConstraint< DataTypes >; d_messageLogCountsofa::core::objectmodel::Basemutable; d_pointsof",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_point_projective_constraint-members.html:3009,clear,clearConstraints,3009,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_point_projective_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_point_projective_constraint-members.html,1,['clear'],['clearConstraints']
Usability,":SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkConnexity() overridesofa::component::topology::container::dynamic::TetrahedronSetTopologyContainervirtual; checkTopology() const overridesofa::component::topology::container::dynamic::TetrahedronSetTopologyContainervirtual; cleanEdgeTopologyFromDirty()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; cleanPointTopologyFromDirty()sofa::component::topology::container::dynamic::PointSetTopologyContainerprotected; cleanTetrahedronTopologyFromDirty()sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainerprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanTriangleTopologyFromDirty()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear() overridesofa::component::topology::container::dynamic::TetrahedronSetTopologyContainervirtual; clearBorderElementLists()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; clearEdges()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearEdgesAroundVertex()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearEdgesInTetrahedron()sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainerprotected; clearEdgesInTriangle()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; clearLoggedMessages() constsofa::core::objectmodel::Base; clearTetrahedra()sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainerprotected; clearTetrahedraAroundEdge()sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainerprotected; clearTetrahedraAroundTriangle()sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainerprotected; clearTetrahedraAroundVertex()sofa::component::topology::container::dynamic::Tet",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container-members.html:4551,clear,clearBorderElementLists,4551,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container-members.html,1,['clear'],['clearBorderElementLists']
Usability,":SignedIndex col, const sofa::type::Mat< 1, 1, float > &value)sofa::core::MatrixAccumulatorInterfacevirtual; sofa::core::behavior::StiffnessMatrixAccumulator::add(sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 1, 1, double > &value)sofa::core::MatrixAccumulatorInterfacevirtual; sofa::core::behavior::StiffnessMatrixAccumulator::add(sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 2, 2, float > &value)sofa::core::MatrixAccumulatorInterfacevirtual; sofa::core::behavior::StiffnessMatrixAccumulator::add(sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 2, 2, double > &value)sofa::core::MatrixAccumulatorInterfacevirtual; sofa::core::behavior::StiffnessMatrixAccumulator::add(sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 6, 6, float > &value)sofa::core::MatrixAccumulatorInterfacevirtual; sofa::core::behavior::StiffnessMatrixAccumulator::add(sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 6, 6, double > &value)sofa::core::MatrixAccumulatorInterfacevirtual; clear() overridesofa::core::ListMatrixAccumulator< StiffnessMatrixAccumulator >inlinevirtual; empty() constsofa::core::ListMatrixAccumulator< StiffnessMatrixAccumulator >inline; getAccumulators() constsofa::core::ListMatrixAccumulator< StiffnessMatrixAccumulator >inline; matAdd(sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< L, C, real > &value)sofa::core::MatrixAccumulatorInterface; push_back(StiffnessMatrixAccumulator *m)sofa::core::ListMatrixAccumulator< StiffnessMatrixAccumulator >inline; remove(StiffnessMatrixAccumulator *m)sofa::core::ListMatrixAccumulator< StiffnessMatrixAccumulator >inline; setIndexCheckerStrategy(std::shared_ptr< matrixaccumulator::IndexVerificationStrategy >)sofa::core::MatrixAccumulatorInterfaceinlinevirtual; size() constsofa::core::ListMatrixAccumulator< StiffnessMatrixAccumulator >inline; ~MatrixAccumulatorInterface()=defaultsofa::core::MatrixAccumulatorInterfacevirtual.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_list_stiffness_matrix_accumulator-members.html:2067,clear,clear,2067,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_list_stiffness_matrix_accumulator-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_list_stiffness_matrix_accumulator-members.html,1,['clear'],['clear']
Usability,:TetrahedronSetTopologyContainer::checkTopology ; (; ); const. overridevirtual . Checks if the topology is coherent. ; Check if the shell arrays are coherent See alsom_tetrahedron . m_edgesInTetrahedron . m_trianglesInTetrahedron . m_tetrahedraAroundVertex . m_tetrahedraAroundEdge . m_tetrahedraAroundTriangle ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer. ◆ cleanTetrahedronTopologyFromDirty(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::cleanTetrahedronTopologyFromDirty ; (; ). protected . ◆ clear(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::clear ; (; ). overridevirtual . Procedural creation methods ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer. ◆ clearEdgesInTetrahedron(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::clearEdgesInTetrahedron ; (; ). protected . ◆ clearTetrahedra(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::clearTetrahedra ; (; ). protected . ◆ clearTetrahedraAroundEdge(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::clearTetrahedraAroundEdge ; (; ). protected . ◆ clearTetrahedraAroundTriangle(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::clearTetrahedraAroundTriangle ; (; ). protected . ◆ clearTetrahedraAroundVertex(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::clearTetrahedraAroundVertex ; (; ). protected . ◆ clearTrianglesInTetrahedron(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::clearTrianglesInTetrahedron ; (; ). protected . ◆ createEdgeSetArray(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::createEdgeSetArray ; (; ). overrideprotectedvirtual . Creates the EdgeSet array. ; Create the s,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container.html:50683,clear,clearTetrahedra,50683,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container.html,1,['clear'],['clearTetrahedra']
Usability,":Transform ; (; const SpatialVector< TReal > & ; v). Origin of the child in the parent coordinate system and the orientation of the child wrt the parent (i.e. standard way) ; Define as a given SpatialVector integrated during one second. The spatial vector is given in parent coordinates.; Define child as a given SpatialVector<TReal> integrated during one second, starting from the parent (used for time integration). The spatial vector is given in parent coordinates. . Function details. ◆ backProjectPoint(). template<class TReal > . auto sofa::type::Transform< TReal >::backProjectPoint ; (; const Vec & ; pointInParent); const. Project point from parent coordinates to this coordinates. . ◆ backProjectVector(). template<class TReal > . auto sofa::type::Transform< TReal >::backProjectVector ; (; const Vec & ; vectorInParent); const. Projected a vector (i.e. a direction or a displacement) from parent coordinates to child coordinates. . ◆ clear(). template<class TReal > . void sofa::type::Transform< TReal >::clear. Reset this to identity. . ◆ CreateSpatialVector(). template<class TReal > . SpatialVector< TReal > sofa::type::Transform< TReal >::CreateSpatialVector. Project a spatial vector from child to parent TODO One should handle differently the transformation of a twist and a wrench ! This applying the adjoint to velocities or its transpose to wrench : V_parent = Ad . V_child or W_child = Ad^T . W_parent To project a wrench in the child frame to the parent frame you need to do parent_wrench = this->inversed * child_wrench (this doc needs to be douv-ble checked !) . ◆ DTrans(). template<class TReal > . SpatialVector< TReal > sofa::type::Transform< TReal >::DTrans. ◆ getAdjointMatrix(). template<class TReal > . auto sofa::type::Transform< TReal >::getAdjointMatrix. Adjoint matrix to the transform This matrix transports velocities in twist coordinates from the child frame to the parent frame. Its inverse transpose does the same for the wrenches. . ◆ getOrientation(). templa",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_transform.html:7444,clear,clear,7444,api/master/sofa/html/classsofa_1_1type_1_1_transform.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_transform.html,1,['clear'],['clear']
Usability,":VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; backupFlagssofa::component::visual::VisualStyleprotected; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *) overridesofa::component::visual::VisualStylevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_displayFlagssofa::component::visual::VisualStyle; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; DisplayFlags typedefsofa::component::visual::VisualStyle; displayFlagssofa::component::visual::VisualStyle; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; drawShadow(const VisualParams *vparams)sofa::core::visual::VisualModelinlinevirt",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_style-members.html:2473,clear,clearLoggedMessages,2473,api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_style-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_style-members.html,1,['clear'],['clearLoggedMessages']
Usability,":VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; beginEdit()sofa::gl::component::shader::OglAttribute< 2, GL_INT, sofa::type::Vec< 2, int > >; bwdDraw(core::visual::VisualParams *) overridesofa::gl::component::shader::OglAttribute< 2, GL_INT, sofa::type::Vec< 2, int > >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; DataType typedefsofa::gl::component::shader::OglAttribute< 2, GL_INT, sofa::type::Vec< 2, int > >; disable()sofa::gl::component::shader::OglAttribute< 2, GL_INT, sofa::type::Vec< 2, int > >; doInitVisual(const core::visual::VisualParams *vparams) overridesofa::gl::component::shader::OglAttribute< 2, GL_INT, sofa::type::Vec< 2, int > >virtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectpro",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int2_attribute-members.html:3296,clear,clearLoggedMessages,3296,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int2_attribute-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int2_attribute-members.html,1,['clear'],['clearLoggedMessages']
Usability,":VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; beginEdit()sofa::gl::component::shader::OglAttribute< 3, GL_INT, sofa::type::Vec< 3, int > >; bwdDraw(core::visual::VisualParams *) overridesofa::gl::component::shader::OglAttribute< 3, GL_INT, sofa::type::Vec< 3, int > >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; DataType typedefsofa::gl::component::shader::OglAttribute< 3, GL_INT, sofa::type::Vec< 3, int > >; disable()sofa::gl::component::shader::OglAttribute< 3, GL_INT, sofa::type::Vec< 3, int > >; doInitVisual(const core::visual::VisualParams *vparams) overridesofa::gl::component::shader::OglAttribute< 3, GL_INT, sofa::type::Vec< 3, int > >virtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectpro",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int3_attribute-members.html:3296,clear,clearLoggedMessages,3296,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int3_attribute-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int3_attribute-members.html,1,['clear'],['clearLoggedMessages']
Usability,":VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; beginEdit()sofa::gl::component::shader::OglAttribute< 4, GL_INT, sofa::type::Vec< 4, int > >; bwdDraw(core::visual::VisualParams *) overridesofa::gl::component::shader::OglAttribute< 4, GL_INT, sofa::type::Vec< 4, int > >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; DataType typedefsofa::gl::component::shader::OglAttribute< 4, GL_INT, sofa::type::Vec< 4, int > >; disable()sofa::gl::component::shader::OglAttribute< 4, GL_INT, sofa::type::Vec< 4, int > >; doInitVisual(const core::visual::VisualParams *vparams) overridesofa::gl::component::shader::OglAttribute< 4, GL_INT, sofa::type::Vec< 4, int > >virtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectpro",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_attribute-members.html:3296,clear,clearLoggedMessages,3296,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_attribute-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_attribute-members.html,1,['clear'],['clearLoggedMessages']
Usability,":VisualParams *vparams, SReal *minBBox, SReal *maxBBox, bool init) override;  Compute the bounding box of the scene. If init is set to ""true"", then minBBox and maxBBox will be initialised to a default value. More...;  ;  Public Member Functions inherited from sofa::core::visual::VisualLoop;  SOFA_CLASS (VisualLoop, VisualModel);  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virt",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_compositing_visual_loop.html:4076,clear,clearVisual,4076,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_compositing_visual_loop.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_compositing_visual_loop.html,4,['clear'],"['clear', 'clearVisual']"
Usability,":add. Add v to the existing value of the element at row i, column j (using 0-based indices) . ◆ addEqual(). template<typename T > . template<class M > . void sofa::linearalgebra::DiagonalMatrix< T >::addEqual ; (; const M & ; m). inlineprotected . this += m . ◆ addTo(). template<typename T > . template<class Dest > . void sofa::linearalgebra::DiagonalMatrix< T >::addTo ; (; Dest * ; dest); const. inline . ◆ clear() [1/3]. template<typename T > . void sofa::linearalgebra::DiagonalMatrix< T >::clear ; (; ). inlineoverridevirtual . Reset all values to 0. ; Implements sofa::linearalgebra::BaseMatrix. ◆ clear() [2/3]. template<typename T > . void sofa::linearalgebra::DiagonalMatrix< T >::clear ; (; Index ; i). inline . ◆ clear() [3/3]. template<typename T > . void sofa::linearalgebra::DiagonalMatrix< T >::clear ; (; Index ; i, . Index ; j . ). inlineoverridevirtual . Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearCol(). template<typename T > . void sofa::linearalgebra::DiagonalMatrix< T >::clearCol ; (; Index ; j). inlineoverridevirtual . Reset the all values in column j to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRow(). template<typename T > . void sofa::linearalgebra::DiagonalMatrix< T >::clearRow ; (; Index ; i). inlineoverridevirtual . Reset all the values in row i to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRowCol(). template<typename T > . void sofa::linearalgebra::DiagonalMatrix< T >::clearRowCol ; (; Index ; i). inlineoverridevirtual . Reset the value of both row and column i to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ colSize(). template<typename T > . Index sofa::linearalgebra::DiagonalMatrix< T >::colSize ; (; void ; ); const. inlineoverridevirtual . Number of columns. ; Implements sofa::linearalgebra::BaseMatrix. ◆ element() [1/2]. template<typename T > . SReal sofa::linearalgebra::DiagonalMatrix< T >::element ; (; Index ; i); const. inline . ◆ element() [2/2]. template<typename T > . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_diagonal_matrix.html:20142,clear,clearCol,20142,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_diagonal_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_diagonal_matrix.html,1,['clear'],['clearCol']
Usability,":algorithm::BruteForceBroadPhasevirtual; boxModelsofa::component::collision::detection::algorithm::BruteForceBroadPhaseprotected; BruteForceBroadPhase()sofa::component::collision::detection::algorithm::BruteForceBroadPhaseprotected; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeInstance(Instance inst) overridesofa::core::collision::Detectioninlineprotectedvirtual; changeInstanceBP(Instance inst) overridesofa::core::collision::BroadPhaseDetectionprotectedvirtual; changeInstanceNP(Instance)sofa::core::collision::Detectioninlineprotectedvirtual; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; cmPairssofa::core::collision::BroadPhaseDetectionprotected; CollisionAlgorithm()sofa::core::collision::CollisionAlgorithminlineprotected; CollisionModelPair typedefsofa::core::collision::BroadPhaseDetection; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; Detection()sofa::core::collision::Detectioninlineprotected; doesSelfCollide(core::CollisionModel *cm) constsofa::component::collision::detection::algorithm::BruteForceBroadPhaseprotected; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualPar",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase-members.html:2783,clear,clearLoggedMessages,2783,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase-members.html,1,['clear'],['clearLoggedMessages']
Usability,":behavior::BaseForceFieldprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; buildDampingMatrix(DampingMatrix *matrix)sofa::core::behavior::BaseForceFieldvirtual; buildStiffnessMatrix(StiffnessMatrix *matrix)sofa::core::behavior::BaseForceFieldvirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ForceField< TDataTypes >inlinestatic; sofa::core::behavior::BaseForceField::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; Coord typedefsofa::core::behavior::ForceField< TDataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; DataTypes typedefsofa::core::behavior::ForceField< TDataTypes >; DataVecCoord typedefsofa::core::behavior::ForceField< TDataTypes >; DataVecDeriv typedefsofa::core::behavior::ForceField< TDataTypes >; Deriv typedefsofa::core::behavior::ForceField< TDataTypes >; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlin",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_force_field-members.html:4411,clear,clearLoggedMessages,4411,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_force_field-members.html,1,['clear'],['clearLoggedMessages']
Usability,":behavior::BaseProjectiveConstraintSetinlineprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; calcRestRotations()sofa::component::constraint::projective::AttachProjectiveConstraint< DataTypes >protected; calcRestRotations()sofa::component::constraint::projective::AttachProjectiveConstraint< DataTypes >protected; calcRestRotations()sofa::component::constraint::projective::AttachProjectiveConstraint< DataTypes >protected; canCreate(T *obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::PairInteractionProjectiveConstraintSet< DataTypes >inlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; sofa::computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; sofa::core::behavior::StateAccessor::computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; constraintReleasedsofa::component::constraint::projective::AttachProjectiveConstraint< DataTypes >; Coord typedefsofa::component::constraint::projective::AttachProjectiveConstraint< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::core::behavior::PairInteractionProjectiveConstraintSet< DataTypes >inlinestatic; d_componentStatesofa::core::objectmodel::Base; d_constraintFactorsofa::component::constraint::projective::AttachProjectiveConstraint< Da",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_attach_projective_constraint-members.html:3528,clear,clearLoggedMessages,3528,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_attach_projective_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_attach_projective_constraint-members.html,1,['clear'],['clearLoggedMessages']
Usability,":behavior::BaseProjectiveConstraintSetvirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseProjectiveConstraintSet()sofa::core::behavior::BaseProjectiveConstraintSetinlineprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ProjectiveConstraintSet< TDataTypes >inlinestatic; sofa::core::behavior::BaseProjectiveConstraintSet::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearConstraints()sofa::component::constraint::projective::AffineMovementProjectiveConstraint< TDataTypes >; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; Coord typedefsofa::component::constraint::projective::AffineMovementProjectiveConstraint< TDataTypes >; CoordSizesofa::component::constraint::projective::AffineMovementProjectiveConstraint< TDataTypes >static; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; CPos typedefsofa::component::constraint::projective::AffineMovementProjectiveConstraint< TDataTypes >; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_beginConstraintTimesofa::component::constraint::projective::AffineMovementProjectiveConstraint< TDataTypes >; d_componentStatesofa::core::objectmodel::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_affine_movement_projective_constraint-members.html:3272,clear,clearConstraints,3272,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_affine_movement_projective_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_affine_movement_projective_constraint-members.html,1,['clear'],['clearConstraints']
Usability,":behavior::BaseProjectiveConstraintSetvirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseProjectiveConstraintSet()sofa::core::behavior::BaseProjectiveConstraintSetinlineprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ProjectiveConstraintSet< TDataTypes >inlinestatic; sofa::core::behavior::BaseProjectiveConstraintSet::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearConstraints()sofa::component::constraint::projective::PatchTestMovementProjectiveConstraint< TDataTypes >; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; Coord typedefsofa::component::constraint::projective::PatchTestMovementProjectiveConstraint< TDataTypes >; CoordSizesofa::component::constraint::projective::PatchTestMovementProjectiveConstraint< TDataTypes >static; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_beginConstraintTimesofa::component::constraint::projective::PatchTestMovementProjectiveConstraint< TDataTypes >; d_componentStatesofa::core::objectmodel::Base; d_constrainedPointssofa::component::constraint::projective::PatchTestMovementProjecti",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_patch_test_movement_projective_constraint-members.html:2983,clear,clearConstraints,2983,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_patch_test_movement_projective_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_patch_test_movement_projective_constraint-members.html,1,['clear'],['clearConstraints']
Usability,":buildConstraintMatrix(const ConstraintParams *cParams, MultiMatrixDerivId cId, unsigned int &cIndex) overridesofa::core::behavior::PairInteractionConstraint< DataTypes >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::PairInteractionConstraint< DataTypes >inlinestatic; sofa::core::behavior::BaseInteractionConstraint::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear(int reserve=0)sofa::component::constraint::lagrangian::model::UnilateralLagrangianConstraint< DataTypes >; clearLoggedMessages() constsofa::core::objectmodel::Base; sofa::computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; sofa::core::behavior::StateAccessor::computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; ConstArea typedefsofa::core::behavior::BaseConstraint; ConstCoord typedefsofa::component::constraint::lagrangian::model::UnilateralLagrangianConstraint< DataTypes >; ConstDeriv typedefsofa::core::behavior::BaseConstraint; ConstraintBlockInfo typedefsofa::component::constraint::lagrangian::model::UnilateralLagrangianConstraint< DataTypes >; constraintIdsofa::component::constraint::lagrangian::model::UnilateralLagrangianConstraint< DataTypes >; contactssofa::component::constraint::lagrangian::model::UnilateralLagrangianConstraint< DataTypes >protected; contactsStatussofa::component::constraint::lagrangian::model::UnilateralLagrangianConstraint< DataTypes >protected; Coord typed",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_unilateral_lagrangian_constraint-members.html:3718,clear,clearLoggedMessages,3718,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_unilateral_lagrangian_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_unilateral_lagrangian_constraint-members.html,1,['clear'],['clearLoggedMessages']
Usability,:component::topology::container::dynamic::EdgeSetTopologyContainer. ◆ checkTopology(). bool sofa::component::topology::container::dynamic::QuadSetTopologyContainer::checkTopology ; (; ); const. overridevirtual . Checks if the topology is coherent. ; Check if the shell arrays are coherent See alsom_quad . m_edgesInQuad . m_quadsAroundVertex . m_quadsAroundEdge ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer. ◆ cleanQuadTopologyFromDirty(). void sofa::component::topology::container::dynamic::QuadSetTopologyContainer::cleanQuadTopologyFromDirty ; (; ). protected . ◆ clear(). void sofa::component::topology::container::dynamic::QuadSetTopologyContainer::clear ; (; ). overridevirtual . Procedural creation methods ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer. ◆ clearEdgesInQuad(). void sofa::component::topology::container::dynamic::QuadSetTopologyContainer::clearEdgesInQuad ; (; ). protected . ◆ clearQuads(). void sofa::component::topology::container::dynamic::QuadSetTopologyContainer::clearQuads ; (; ). protected . ◆ clearQuadsAroundEdge(). void sofa::component::topology::container::dynamic::QuadSetTopologyContainer::clearQuadsAroundEdge ; (; ). protected . ◆ clearQuadsAroundVertex(). void sofa::component::topology::container::dynamic::QuadSetTopologyContainer::clearQuadsAroundVertex ; (; ). protected . ◆ createEdgeSetArray(). void sofa::component::topology::container::dynamic::QuadSetTopologyContainer::createEdgeSetArray ; (; ). overrideprotectedvirtual . Creates the EdgeSet array. ; Create the set of edges when needed. ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer. ◆ createEdgesInQuadArray(). void sofa::component::topology::container::dynamic::QuadSetTopologyContainer::createEdgesInQuadArray ; (; ). protectedvirtual . Creates the array of edge indices for each quad. ; This function is only called if the EdgesInQuad array is required,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_container.html:40367,clear,clearQuads,40367,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_container.html,1,['clear'],['clearQuads']
Usability,":component::topology::container::dynamic::PointSetTopologyContainerprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanTriangleTopologyFromDirty()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear() overridesofa::component::topology::container::dynamic::TriangleSetTopologyContainervirtual; clearBorderElementLists()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; clearEdges()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearEdgesAroundVertex()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearEdgesInTriangle()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; clearLoggedMessages() constsofa::core::objectmodel::Base; clearTriangles()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; clearTrianglesAroundEdge()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; clearTrianglesAroundVertex()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createEdgesAroundVertexArray()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotectedvirtual; createEdgeSetArray() overridesofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotectedvirtual; createEdgesInTriangleArray()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotectedvirtual; createElementsOnBorder()sofa::component::topology::container::dynamic::Trian",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_container-members.html:4790,clear,clearTrianglesAroundEdge,4790,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_container-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_container-members.html,1,['clear'],['clearTrianglesAroundEdge']
Usability,":constraint::projective::LinearMovementProjectiveConstraint< DataTypes >::applyConstraint ; (; const core::MechanicalParams * ; , . linearalgebra::BaseVector * ; , . const sofa::core::behavior::MultiMatrixAccessor * ;  . ). overridevirtual . Project the global Mechanical Vector to constrained space using offset parameter. ; Reimplemented from sofa::core::behavior::BaseProjectiveConstraintSet. ◆ applyConstraint() [3/3]. template<class TDataTypes > . void sofa::component::constraint::projective::LinearMovementProjectiveConstraint< TDataTypes >::applyConstraint ; (; sofa::core::behavior::ZeroDirichletCondition * ; zeroDirichletCondition). overridevirtual . Project the global matrix to constrained space by using the ZeroDirichletCondition interface It allows to define what rows and columns to discard for the projection. ; Reimplemented from sofa::core::behavior::BaseProjectiveConstraintSet. ◆ clearIndices(). template<class DataTypes > . void sofa::component::constraint::projective::LinearMovementProjectiveConstraint< DataTypes >::clearIndices. methods to add/remove some indices, keyTimes, keyMovement . ◆ clearKeyMovements(). template<class DataTypes > . void sofa::component::constraint::projective::LinearMovementProjectiveConstraint< DataTypes >::clearKeyMovements. ◆ draw(). template<class DataTypes > . void sofa::component::constraint::projective::LinearMovementProjectiveConstraint< DataTypes >::draw ; (; const core::visual::VisualParams * ; ). overridevirtual . Render internal data of this object, for debugging purposes. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ init() [1/2]. SOFA_COMPONENT_CONSTRAINT_PROJECTIVE_API void sofa::component::constraint::projective::LinearMovementProjectiveConstraint< defaulttype::Rigid3Types >::init ; (; void ; ). virtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ init() [2/2]. template<class DataTypes > . void s",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_linear_movement_projective_constraint.html:27534,clear,clearIndices,27534,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_linear_movement_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_linear_movement_projective_constraint.html,1,['clear'],['clearIndices']
Usability,":core::State< TDataTypes >virtual; bboxsofa::component::visual::VisualModelImpl; blendEqsofa::gl::component::rendering3d::OglModelprotected; blendEquationsofa::gl::component::rendering3d::OglModelprotected; blendTransparencysofa::gl::component::rendering3d::OglModel; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; canUsePatchessofa::gl::component::rendering3d::OglModelprotected; castShadowsofa::component::visual::VisualModelImpl; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *params, bool=false) overridesofa::component::visual::VisualModelImplvirtual; VisualState< defaulttype::Vec3Types >::computeBBox() constsofa::core::State< TDataTypes >; computeBitangent(const Coord &v1, const Coord &v2, const Coord &v3, const TexCoord &t1, const TexCoord &t2, const TexCoord &t3)sofa::component::visual::VisualModelImplstatic; computeMesh()sofa::component::visual::VisualModelImplvirtual; computeNormals()sofa::component::visual::VisualModelImplvirtual; computePositions()sofa::component::visual::VisualModelImplvirtual; computeTangent(const Coord &v1, const Coord &v2, const Coord &v3, const TexCoord &t1, const TexCoord &t2, const TexCoord &t3)sofa::component::visual::VisualModelImplstatic; computeTangents()sofa::component::visual::VisualModelImplvirtual; computeUVSphereProjection()sofa::component::visual::VisualModelImplvirtual; Coord typedefsofa::component::visual::VisualModelImpl; coun",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_merge_visual_models-members.html:3577,clear,clearVisual,3577,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_merge_visual_models-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_merge_visual_models-members.html,2,['clear'],['clearVisual']
Usability,":core::behavior::ProjectiveConstraintSet::projectPosition(const MechanicalParams *mparams, MultiVecCoordId xId) overridesofa::core::behavior::ProjectiveConstraintSet< DataTypes >virtual; projectResponse(const core::MechanicalParams *mparams, DataVecDeriv &resData) overridesofa::component::constraint::projective::ParabolicProjectiveConstraint< DataTypes >virtual; sofa::core::behavior::ProjectiveConstraintSet::projectResponse(const MechanicalParams *mparams, MultiVecDerivId dxId) overridesofa::core::behavior::ProjectiveConstraintSet< DataTypes >virtual; sofa::core::behavior::ProjectiveConstraintSet::projectResponse(const MechanicalParams *mparams, MultiVecDerivId dxId)=0sofa::core::behavior::ProjectiveConstraintSet< DataTypes >; sofa::core::behavior::BaseProjectiveConstraintSet::projectResponse(const MechanicalParams *, double **)sofa::core::behavior::BaseProjectiveConstraintSetinlinevirtual; projectResponseT(DataDeriv &dx, const std::function< void(DataDeriv &, const unsigned int)> &clear)sofa::component::constraint::projective::ParabolicProjectiveConstraint< DataTypes >protected; projectVelocity(const core::MechanicalParams *mparams, DataVecDeriv &vData) overridesofa::component::constraint::projective::ParabolicProjectiveConstraint< DataTypes >virtual; sofa::core::behavior::ProjectiveConstraintSet::projectVelocity(const MechanicalParams *mparams, MultiVecDerivId vId) overridesofa::core::behavior::ProjectiveConstraintSet< DataTypes >virtual; Ptr typedefsofa::core::objectmodel::Base; QuatR typedefsofa::component::constraint::projective::ParabolicProjectiveConstraint< DataTypes >; Real typedefsofa::component::constraint::projective::ParabolicProjectiveConstraint< DataTypes >; reinit() overridesofa::component::constraint::projective::ParabolicProjectiveConstraint< DataTypes >virtual; removeData(BaseData *f)sofa::core::objectmodel::Base; removeInNode(objectmodel::BaseNode *node) overridesofa::core::behavior::BaseProjectiveConstraintSetvirtual; removeSlave(BaseObject::SPt",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_parabolic_projective_constraint-members.html:15117,clear,clear,15117,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_parabolic_projective_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_parabolic_projective_constraint-members.html,1,['clear'],['clear']
Usability,":core::behavior::StiffnessMatrixAccumulator Member List . This is the complete list of members for sofa::core::behavior::StiffnessMatrixAccumulator, including all inherited members. add(sofa::SignedIndex, sofa::SignedIndex, float)sofa::core::MatrixAccumulatorInterfaceinlinevirtual; add(sofa::SignedIndex, sofa::SignedIndex, double)sofa::core::MatrixAccumulatorInterfaceinlinevirtual; add(sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 1, 1, float > &value)sofa::core::MatrixAccumulatorInterfacevirtual; add(sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 1, 1, double > &value)sofa::core::MatrixAccumulatorInterfacevirtual; add(sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 2, 2, float > &value)sofa::core::MatrixAccumulatorInterfacevirtual; add(sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 2, 2, double > &value)sofa::core::MatrixAccumulatorInterfacevirtual; add(sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 3, 3, float > &value)sofa::core::MatrixAccumulatorInterfacevirtual; add(sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 3, 3, double > &value)sofa::core::MatrixAccumulatorInterfacevirtual; add(sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 6, 6, float > &value)sofa::core::MatrixAccumulatorInterfacevirtual; add(sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 6, 6, double > &value)sofa::core::MatrixAccumulatorInterfacevirtual; clear()sofa::core::MatrixAccumulatorInterfaceinlinevirtual; matAdd(sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< L, C, real > &value)sofa::core::MatrixAccumulatorInterface; setIndexCheckerStrategy(std::shared_ptr< matrixaccumulator::IndexVerificationStrategy >)sofa::core::MatrixAccumulatorInterfaceinlinevirtual; ~MatrixAccumulatorInterface()=defaultsofa::core::MatrixAccumulatorInterfacevirtual. Generated on Mon Nov 11 2024 03:15:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_stiffness_matrix_accumulator-members.html:1622,clear,clear,1622,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_stiffness_matrix_accumulator-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_stiffness_matrix_accumulator-members.html,1,['clear'],['clear']
Usability,":core::objectmodel::TLink< TOwnerType, TDestType, TFlags >static; add(DestPtr v)sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags >inline; add(DestPtr v, const std::string &path)sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags >inline; sofa::core::objectmodel::BaseLink::add(Base *baseptr, const std::string &path)sofa::core::objectmodel::BaseLinkinline; addBegin(DestPtr v)sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags >inline; added(DestPtr val, std::size_t index)sofa::core::objectmodel::MultiLink< Node, T, BaseLink::FLAG_DOUBLELINK|(false ? BaseLink::FLAG_STRONGLINK :BaseLink::FLAG_DUPLICATE)>inlineprotectedvirtual; addPath(const std::string &path)sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags >inline; BaseLink(LinkFlags flags)sofa::core::objectmodel::BaseLink; BaseLink(const BaseInitLink &init, LinkFlags flags)sofa::core::objectmodel::BaseLink; begin() constsofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags >inline; clear()sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags >inline; const_iterator typedefsofa::simulation::NodeSequence< T, strong >; const_reverse_iterator typedefsofa::simulation::NodeSequence< T, strong >; Container typedefsofa::core::objectmodel::MultiLink< Node, T, BaseLink::FLAG_DOUBLELINK|(false ? BaseLink::FLAG_STRONGLINK :BaseLink::FLAG_DUPLICATE)>; CreateString(const std::string &path, const std::string &data="""")sofa::core::objectmodel::BaseLinkstatic; CreateString(Base *object, Base *from)sofa::core::objectmodel::BaseLinkstatic; CreateString(BaseData *data, Base *from)sofa::core::objectmodel::BaseLinkstatic; CreateString(Base *object, BaseData *data, Base *from)sofa::core::objectmodel::BaseLinkstatic; CreateStringData(BaseData *data)sofa::core::objectmodel::BaseLinkstatic; CreateStringPath(Base *object, Base *from)sofa::core::objectmodel::BaseLinkstatic; DestPtr typedefsofa::core::objectmodel::MultiLink< Node, T, BaseLink::FLAG_DOUBLELINK|(false ? BaseLink::FLAG_STRO",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_node_sequence-members.html:1290,clear,clear,1290,api/master/sofa/html/classsofa_1_1simulation_1_1_node_sequence-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_node_sequence-members.html,1,['clear'],['clear']
Usability,":lagrangian::solver::ConstraintSolverImplprotected; buildSystem(const core::ConstraintParams *, MultiVecId res1, MultiVecId res2=MultiVecId::null()) overridesofa::component::constraint::lagrangian::solver::LCPConstraintSolvervirtual; buildSystemTask(const ConstraintParams *, MultiVecId res1, MultiVecId res2)sofa::core::behavior::ConstraintSolverprotected; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup() overridesofa::component::constraint::lagrangian::solver::ConstraintSolverImplvirtual; clearConstraintCorrections()sofa::component::constraint::lagrangian::solver::ConstraintSolverImplprotected; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeResidual(const core::ExecParams *)sofa::core::behavior::ConstraintSolverinlinevirtual; constraintGroupssofa::component::constraint::lagrangian::solver::LCPConstraintSolver; ConstraintSolver()sofa::core::behavior::ConstraintSolverprotected; ConstraintSolverImpl()sofa::component::constraint::lagrangian::solver::ConstraintSolverImpl; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_build_lcpsofa::component::constraint::lagrangian::solver::LCPConstraintSolver; d_componentStatesofa::core::objectmodel::Base; d_computeConstraintForcessofa::component::constraint::lagrangian::solver::LCPConstraintSolver; d_constraintForcessofa::component::const",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_l_c_p_constraint_solver-members.html:3416,clear,clearLoggedMessages,3416,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_l_c_p_constraint_solver-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_l_c_p_constraint_solver-members.html,1,['clear'],['clearLoggedMessages']
Usability,":linearalgebra::BaseMatrixinlinevirtual; blocElements(Index i, Index j, T *buffer) constsofa::linearalgebra::BaseMatrixinline; blocGet(Index i, Index j) constsofa::linearalgebra::BaseMatrixinlinevirtual; blocGetW(Index i, Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; blocSet(Index i, Index j, const T *buffer)sofa::linearalgebra::BaseMatrixinline; bRowBegin(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowEnd(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowRange(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsBegin() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsEnd() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowSize() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsRange() constsofa::linearalgebra::BaseMatrixinlinevirtual; clear() overridesofa::core::behavior::ApplyConstraintCompatinlinevirtual; sofa::linearalgebra::BaseMatrix::clear(Index i, Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; clearCol(Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; clearCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRow(Index i)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowCol(Index i) overridesofa::core::behavior::ApplyConstraintCompatinlinevirtual; clearRows(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowsCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; cols(void) constsofa::linearalgebra::BaseMatrixinline; colSize() const overridesofa::core::behavior::ApplyConstraintCompatinlinevirtual; componentsofa::core::behavior::ApplyConstraintCompat; compress()sofa::linearalgebra::BaseMatrixvirtual; createBlockAccessor(Index row, Index col, void *internalPtr=nullptr)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockAccessor(Index row, Index col, Index internalData)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockConstAccessor(Index row, Index col, void *internalPtr=nullptr) constsofa::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_apply_constraint_compat-members.html:5135,clear,clearCol,5135,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_apply_constraint_compat-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_apply_constraint_compat-members.html,1,['clear'],['clearCol']
Usability,":linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >::blockMultTranspose ; (; const TBlock & ; blockA, . const TBlock & ; blockB . ). inlinestatic . ◆ check_matrix() [1/2]. template<typename TBlock , typename TPolicy = CRSDefaultPolicy> . bool sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >::check_matrix ; (; ). inline . ◆ check_matrix() [2/2]. template<typename TBlock , typename TPolicy = CRSDefaultPolicy> . static bool sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >::check_matrix ; (; Index ; nzmax, . Index ; m, . Index ; n, . Index * ; a_p, . Index * ; a_i, . Block * ; a_x . ). inlinestatic . ◆ clear(). template<typename TBlock , typename TPolicy = CRSDefaultPolicy> . void sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >::clear ; (; ). inline . Completely clear the matrix. ; Warningif ClearByZeros Policy is activated all value in colsValue will be set to zero using default constructor . ◆ clearColBlock(). template<typename TBlock , typename TPolicy = CRSDefaultPolicy> . void sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >::clearColBlock ; (; Index ; j). inline . Clear col block method. Clear this col in all row of matrix. ; Parameters. j: Col index considering size of matrix in block. . Warningif ClearByZeros Policy is activated all col j of each line will be set to zero using default constructor . ◆ clearRowBlock(). template<typename TBlock , typename TPolicy = CRSDefaultPolicy> . void sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >::clearRowBlock ; (; Index ; i). inline . Clear row block method. Clear all col of this line. ; Parameters. i: Line index considering size of matrix in block. . Warningif ClearByZeros Policy is activated all col value of line will be set to zero using default constructor . ◆ clearRowColBlock(). template<typename TBlock , typename TPolicy = CRSDefaultPolicy> . template<typename = typename std::enable",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_generic.html:21483,clear,clearColBlock,21483,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_generic.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_generic.html,1,['clear'],['clearColBlock']
Usability,":linearalgebra::FullMatrix< Real >::begin. ◆ begin() [2/2]. template<class Real > . FullMatrix< Real >::LineConstIterator sofa::linearalgebra::FullMatrix< Real >::begin. ◆ clear() [1/2]. template<class Real > . void sofa::linearalgebra::FullMatrix< Real >::clear ; (; ). overridevirtual . Reset all values to 0. ; Implements sofa::linearalgebra::BaseMatrix. ◆ clear() [2/2]. template<class Real > . void sofa::linearalgebra::FullMatrix< Real >::clear ; (; Index ; i, . Index ; j . ). overridevirtual . Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearCol(). template<class Real > . void sofa::linearalgebra::FullMatrix< Real >::clearCol ; (; Index ; j). overridevirtual . Reset the all values in column j to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRow(). template<class Real > . void sofa::linearalgebra::FullMatrix< Real >::clearRow ; (; Index ; i). overridevirtual . Reset all the values in row i to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRowCol(). template<class Real > . void sofa::linearalgebra::FullMatrix< Real >::clearRowCol ; (; Index ; i). overridevirtual . Reset the value of both row and column i to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ colSize(). template<typename T > . Index sofa::linearalgebra::FullMatrix< T >::colSize ; (; void ; ); const. inlineoverridevirtual . Number of columns. ; Implements sofa::linearalgebra::BaseMatrix. ◆ element(). template<class Real > . SReal sofa::linearalgebra::FullMatrix< Real >::element ; (; Index ; i, . Index ; j . ); const. overridevirtual . Read the value of the element at row i, column j (using 0-based indices) ; Implements sofa::linearalgebra::BaseMatrix. ◆ end() [1/2]. template<class Real > . FullMatrix< Real >::LineIterator sofa::linearalgebra::FullMatrix< Real >::end. ◆ end() [2/2]. template<class Real > . FullMatrix< Real >::LineConstIterator sofa::linearalgebra::FullMatrix< Real >::end. ◆ mul() [1/2]. template<class Real > . void sofa::linearalgebra",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_full_matrix.html:19809,clear,clearRowCol,19809,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_full_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_full_matrix.html,1,['clear'],['clearRowCol']
Usability,":linearalgebra::FullMatrix< T >, sofa::linearalgebra::FullMatrix< typename Vector::Real >, sofa::linearalgebra::FullMatrix< Real >, sofa::linearalgebra::EigenBaseSparseMatrix< TReal >, sofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >, sofa::linearalgebra::EigenBaseSparseMatrix< typename DataTypes::Real >, sofa::linearalgebra::DiagonalMatrix< T >, sofa::linearalgebra::DiagonalMatrix< R1 >, sofa::linearalgebra::DiagonalMatrix< R2 >, sofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >, sofa::linearalgebra::CompressedRowSparseMatrixMechanical< sofa::type::Mat< NL, NC, MReal > >, sofa::linearalgebra::CompressedRowSparseMatrixMechanical< MReal >, sofa::linearalgebra::CompressedRowSparseMatrixMechanical< Real >, sofa::linearalgebra::BTDMatrix< N, T >, sofa::linearalgebra::BlockFullMatrix< N, T >, sofa::linearalgebra::BlockDiagonalMatrix< LC, T >, sofa::core::behavior::ApplyConstraintCompat, and sofa::core::behavior::AddToMatrixCompatMatrix< c >. ◆ clear() [2/2]. virtual void sofa::linearalgebra::BaseMatrix::clear ; (; Index ; i, . Index ; j . ). inlinevirtual . Reimplemented in sofa::linearalgebra::SparseMatrix< T >, sofa::linearalgebra::SparseMatrix< SReal >, sofa::linearalgebra::SparseMatrix< Real >, sofa::linearalgebra::FullMatrix< T >, sofa::linearalgebra::FullMatrix< typename Vector::Real >, sofa::linearalgebra::FullMatrix< Real >, sofa::linearalgebra::DiagonalMatrix< T >, sofa::linearalgebra::DiagonalMatrix< R1 >, sofa::linearalgebra::DiagonalMatrix< R2 >, sofa::linearalgebra::CompressedRowSparseMatrixMechanical< sofa::type::Mat< NL, NC, MReal > >, sofa::linearalgebra::CompressedRowSparseMatrixMechanical< MReal >, sofa::linearalgebra::CompressedRowSparseMatrixMechanical< Real >, sofa::linearalgebra::BTDMatrix< N, T >, sofa::linearalgebra::BlockFullMatrix< N, T >, and sofa::linearalgebra::BlockDiagonalMatrix< LC, T >. ◆ clearCol(). virtual void sofa::linearalgebra::BaseMatrix::clearCol ; (; Index ; j). inlinevirtual . Reset the a",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_matrix.html:34696,clear,clear,34696,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_matrix.html,1,['clear'],['clear']
Usability,":objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkInput()sofa::component::engine::generate::ExtrudeEdgesAndGenerateQuads< DataTypes >protected; cleanDirty(const core::ExecParams *params=nullptr)sofa::core::DataTrackerDDGNodevirtual; sofa::core::objectmodel::DDGNode::cleanDirty()sofa::core::objectmodel::DDGNode; cleanDirtyOutputsOfInputs()sofa::core::objectmodel::DDGNodeprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; Coord typedefsofa::component::engine::generate::ExtrudeEdgesAndGenerateQuads< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_curveEdgessofa::component::engine::generate::ExtrudeEdgesAndGenerateQuads< DataTypes >; d_curveVerticessofa::component::engine::generate::ExtrudeEdgesAndGenerateQuads< DataTypes >; d_directionsofa::component::engine::generate::ExtrudeEdgesAndGenerateQuads< DataTypes >; d_extrudedEdgessofa::component::engine::generate::ExtrudeEdgesAndGenerateQuads< DataTypes >; d_extrudedQuadssofa::component::engine::generate::ExtrudeEdgesAndGenerateQuads< DataTypes >; d_extru",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_extrude_edges_and_generate_quads-members.html:2829,clear,clearLoggedMessages,2829,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_extrude_edges_and_generate_quads-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_extrude_edges_and_generate_quads-members.html,1,['clear'],['clearLoggedMessages']
Usability,":objectmodel::Base; b_setDefaultParameterssofa::component::visual::BaseCameraprotected; Base()sofa::core::objectmodel::Baseprotected; BaseCamera()sofa::component::visual::BaseCamera; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit() overridesofa::component::visual::BaseCameravirtual; Camera()sofa::component::visual::Cameraprotected; cameraToWorldCoordinates(const type::Vec3 &p)sofa::component::visual::BaseCamera; cameraToWorldTransform(const type::Vec3 &v)sofa::component::visual::BaseCamera; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeClippingPlane(const core::visual::VisualParams *vp, double &zNear, double &zFar)sofa::component::visual::BaseCamera; computeZ()sofa::component::visual::BaseCamera; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; currentDistancesofa::component::visual::BaseCameraprotected; currentLookAtsofa::component::visual::BaseCameraprotected; currentZFarsofa::component::visual::BaseCameraprotected; currentZNearsofa::component::visual::BaseCameraprotected; d_activatedsofa::component::visual::BaseCamera; d_componentStatesofa::core::objectmodel::Base; d_computeZClipsofa::component::visual::BaseCamera; d_distancesofa::component::visual::BaseCamera; d_fi",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_camera-members.html:2262,clear,clearLoggedMessages,2262,api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_camera-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_camera-members.html,1,['clear'],['clearLoggedMessages']
Usability,":string > & ; params . ). ◆ createChild() [3/4]. NodeSPtr SOFA_SIMPLEAPI_API sofa::simpleapi::createChild ; (; NodeSPtr ; node, . BaseObjectDescription & ; desc . ). create a child to the provided node. The parameter ""params"" is for passing specific data argument to the created object (including the node name). . ◆ createChild() [4/4]. NodeSPtr SOFA_SIMPLEAPI_API sofa::simpleapi::createChild ; (; NodeSPtr ; node, . const std::string & ; name, . const std::map< std::string, std::string > & ; params = std::map< std::string, std::string >{} . ). create a child to the provided nodeof given name. The parameter ""params"" is for passing specific data argument to the created object. . ◆ createNode(). NodeSPtr SOFA_SIMPLEAPI_API sofa::simpleapi::createNode ; (; const std::string & ; name). create a child to the provided node. The parameter ""params"" is for passing specific data argument to the created object (including the node name). . ◆ createObject() [1/4]. BaseObject::SPtr sofa::simpleapi::createObject ; (; Node::SPtr ; parent, . BaseObjectDescription & ; desc . ). ◆ createObject() [2/4]. BaseObject::SPtr sofa::simpleapi::createObject ; (; Node::SPtr ; parent, . const std::string & ; type, . const std::map< std::string, std::string > & ; params . ). ◆ createObject() [3/4]. sofa::core::sptr<BaseObject> SOFA_SIMPLEAPI_API sofa::simpleapi::createObject ; (; NodeSPtr ; node, . BaseObjectDescription & ; params . ). Create a sofa object in the provided node. The parameter ""params"" is for passing specific data argument to the created object including the object's type. . ◆ createObject() [4/4]. sofa::core::sptr<BaseObject> SOFA_SIMPLEAPI_API sofa::simpleapi::createObject ; (; NodeSPtr ; node, . const std::string & ; type, . const std::map< std::string, std::string > & ; params = std::map< std::string, std::string >{} . ). create a sofa object in the provided node of the given type. The parameter ""params"" is for passing specific data argument to the created object. . ◆ createRootNo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simpleapi.html:4522,simpl,simpleapi,4522,api/master/sofa/html/namespacesofa_1_1simpleapi.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simpleapi.html,1,['simpl'],['simpleapi']
Usability,:topology::container::dynamic::EdgeSetTopologyContainer. ◆ cleanTriangleTopologyFromDirty(). void sofa::component::topology::container::dynamic::TriangleSetTopologyContainer::cleanTriangleTopologyFromDirty ; (; ). protected . ◆ clear(). void sofa::component::topology::container::dynamic::TriangleSetTopologyContainer::clear ; (; ). overridevirtual . Procedural creation methods ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer. ◆ clearBorderElementLists(). void sofa::component::topology::container::dynamic::TriangleSetTopologyContainer::clearBorderElementLists ; (; ). protected . ◆ clearEdgesInTriangle(). void sofa::component::topology::container::dynamic::TriangleSetTopologyContainer::clearEdgesInTriangle ; (; ). protected . ◆ clearTriangles(). void sofa::component::topology::container::dynamic::TriangleSetTopologyContainer::clearTriangles ; (; ). protected . ◆ clearTrianglesAroundEdge(). void sofa::component::topology::container::dynamic::TriangleSetTopologyContainer::clearTrianglesAroundEdge ; (; ). protected . ◆ clearTrianglesAroundVertex(). void sofa::component::topology::container::dynamic::TriangleSetTopologyContainer::clearTrianglesAroundVertex ; (; ). protected . ◆ createEdgeSetArray(). void sofa::component::topology::container::dynamic::TriangleSetTopologyContainer::createEdgeSetArray ; (; ). overrideprotectedvirtual . Creates the EdgeSet array. ; Create the set of edges when needed. ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer. ◆ createEdgesInTriangleArray(). void sofa::component::topology::container::dynamic::TriangleSetTopologyContainer::createEdgesInTriangleArray ; (; ). protectedvirtual . Creates the array of edge indices for each triangle. ; This function is only called if the EdgesInTriangle array is required. m_edgesInTriangle[i] contains the 3 indices of the 3 edges composing the ith triangle. . ◆ createElementsOnBorder(). void sofa::component::topology::contai,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_container.html:41784,clear,clearTrianglesAroundEdge,41784,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_container.html,1,['clear'],['clearTrianglesAroundEdge']
Usability,":vector< InRootDataVecDeriv * > &dataVecOutRootForce, const type::vector< const OutDataVecDeriv * > &dataVecInForce) override;  ; void applyDJT (const core::MechanicalParams *mparams, core::MultiVecDerivId inForce, core::ConstMultiVecDerivId outForce) override;  ; void applyJT (InMatrixDeriv &out, const OutMatrixDeriv &in, InRootMatrixDeriv *outroot);  ; void applyJT (const core::ConstraintParams *, const type::vector< InDataMatrixDeriv * > &dataMatOutConst, const type::vector< InRootDataMatrixDeriv * > &dataMatOutRootConst, const type::vector< const OutDataMatrixDeriv * > &dataMatInConst) override;  ; void recomputeRigidMass ();  MAP the mass: this function recompute the rigid mass (gravity center position and inertia) of the object based on its deformed shape. More...;  ; void draw (const core::visual::VisualParams *vparams) override;  ; void clear (int reserve=0);  ; void setRepartition (unsigned int value);  ; void setRepartition (sofa::type::vector< unsigned int > values);  ;  Public Member Functions inherited from sofa::component::mapping::linear::crtp::CRTPLinearMapping< TMapping >;  SOFA_CLASS (SOFA_TEMPLATE(CRTPLinearMapping, TMapping), TMapping);  ; virtual bool isLinear () const override;  . Protected Member Functions;  DeformableOnRigidFrameMapping ();  ; virtual ~DeformableOnRigidFrameMapping ();  . Attribute details. ◆ d_globalToLocalCoords. template<class TIn , class TInRoot , class TOut > . Data< bool > sofa::component::mapping::linear::DeformableOnRigidFrameMapping< TIn, TInRoot, TOut >::d_globalToLocalCoords. are the output DOFs initially expressed in global coordinates . ◆ d_index. template<class TIn , class TInRoot , class TOut > . Data<unsigned int> sofa::component::mapping::linear::DeformableOnRigidFrameMapping< TIn, TInRoot, TOut >::d_index. input DOF index . ◆ d_indexFromEnd. template<class TIn , class TInRoot , class TOut > . Data< bool > sofa::component::mapping::linear::DeformableOnRigidFrameMapping< TIn, TInRoot, TOut >::d_indexFromEnd. in",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_deformable_on_rigid_frame_mapping.html:4044,clear,clear,4044,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_deformable_on_rigid_frame_mapping.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_deformable_on_rigid_frame_mapping.html,1,['clear'],['clear']
Usability,":visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; beginEdit()sofa::gl::component::shader::OglAttribute< 1, GL_UNSIGNED_INT, unsigned int >; bwdDraw(core::visual::VisualParams *) overridesofa::gl::component::shader::OglAttribute< 1, GL_UNSIGNED_INT, unsigned int >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; DataType typedefsofa::gl::component::shader::OglAttribute< 1, GL_UNSIGNED_INT, unsigned int >; disable()sofa::gl::component::shader::OglAttribute< 1, GL_UNSIGNED_INT, unsigned int >; doInitVisual(const core::visual::VisualParams *vparams) overridesofa::gl::component::shader::OglAttribute< 1, GL_UNSIGNED_INT, unsigned int >virtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtua",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int_attribute-members.html:3260,clear,clearLoggedMessages,3260,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int_attribute-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int_attribute-members.html,1,['clear'],['clearLoggedMessages']
Usability,; ). protected . ◆ clear(). void sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer::clear ; (; ). overridevirtual . Procedural creation methods ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer.; Reimplemented in sofa::component::topology::container::dynamic::MultilevelHexahedronSetTopologyContainer. ◆ clearEdgesInHexahedron(). void sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer::clearEdgesInHexahedron ; (; ). protected . ◆ clearHexahedra(). void sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer::clearHexahedra ; (; ). protected . ◆ clearHexahedraAroundEdge(). void sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer::clearHexahedraAroundEdge ; (; ). protected . ◆ clearHexahedraAroundQuad(). void sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer::clearHexahedraAroundQuad ; (; ). protected . ◆ clearHexahedraAroundVertex(). void sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer::clearHexahedraAroundVertex ; (; ). protected . ◆ clearQuadsInHexahedron(). void sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer::clearQuadsInHexahedron ; (; ). protected . ◆ createEdgeSetArray(). void sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer::createEdgeSetArray ; (; ). overrideprotectedvirtual . Creates the EdgeSet array. ; Create the set of edges when needed. ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer. ◆ createEdgesInHexahedronArray(). void sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer::createEdgesInHexahedronArray ; (; ). protectedvirtual . Creates the array of edge indices for each hexahedron. ; This function is only called if the EdgesInHexahedron array is required. m_edgesInHexahedron[i] contains the 12 indices of the 12 edges of each ,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_topology_container.html:49754,clear,clearHexahedraAroundVertex,49754,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_topology_container.html,1,['clear'],['clearHexahedraAroundVertex']
Usability,"; , . linearalgebra::BaseVector * ; , . const sofa::core::behavior::MultiMatrixAccessor * ;  . ). overridevirtual . Project the global Mechanical Vector to constrained space using offset parameter. ; Reimplemented from sofa::core::behavior::BaseProjectiveConstraintSet. ◆ applyConstraint() [3/3]. template<class TDataTypes > . void sofa::component::constraint::projective::LinearMovementProjectiveConstraint< TDataTypes >::applyConstraint ; (; sofa::core::behavior::ZeroDirichletCondition * ; zeroDirichletCondition). overridevirtual . Project the global matrix to constrained space by using the ZeroDirichletCondition interface It allows to define what rows and columns to discard for the projection. ; Reimplemented from sofa::core::behavior::BaseProjectiveConstraintSet. ◆ clearIndices(). template<class DataTypes > . void sofa::component::constraint::projective::LinearMovementProjectiveConstraint< DataTypes >::clearIndices. methods to add/remove some indices, keyTimes, keyMovement . ◆ clearKeyMovements(). template<class DataTypes > . void sofa::component::constraint::projective::LinearMovementProjectiveConstraint< DataTypes >::clearKeyMovements. ◆ draw(). template<class DataTypes > . void sofa::component::constraint::projective::LinearMovementProjectiveConstraint< DataTypes >::draw ; (; const core::visual::VisualParams * ; ). overridevirtual . Render internal data of this object, for debugging purposes. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ init() [1/2]. SOFA_COMPONENT_CONSTRAINT_PROJECTIVE_API void sofa::component::constraint::projective::LinearMovementProjectiveConstraint< defaulttype::Rigid3Types >::init ; (; void ; ). virtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ init() [2/2]. template<class DataTypes > . void sofa::component::constraint::projective::LinearMovementProjectiveConstraint< DataTypes >::init ; (; void ; ). overridevirtual .",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_linear_movement_projective_constraint.html:27610,clear,clearKeyMovements,27610,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_linear_movement_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_linear_movement_projective_constraint.html,1,['clear'],['clearKeyMovements']
Usability,"; ; /*! Truncated class, inheritance relation is hidden */; class Truncated : public Invisible { };; ; /* Class not documented with doxygen comments */; class Undocumented { };; ; /*! Class that is inherited using public inheritance */; class PublicBase : public Truncated { };; ; /*! A template class */; template<class T> class Templ { };; ; /*! Class that is inherited using protected inheritance */; class ProtectedBase { };; ; /*! Class that is inherited using private inheritance */; class PrivateBase { };; ; /*! Class that is used by the Inherited class */; class Used { };; ; /*! Super class that inherits a number of other classes */; class Inherited : public PublicBase,; protected ProtectedBase,; private PrivateBase,; public Undocumented,; public Templ<int>; {; private:; Used *m_usedClass;; };; This will result in the following graph:; The boxes in the above graph have the following meaning: . A filled gray box represents the struct or class for which the graph is generated. . A box with a black border denotes a documented struct or class. . A box with a gray border denotes an undocumented struct or class. . A box with a red border denotes a documented struct or class forwhich not all inheritance/containment relations are shown. A graph is truncated if it does not fit within the specified boundaries. . The arrows have the following meaning: . A dark blue arrow is used to visualize a public inheritance relation between two classes. . A dark green arrow is used for protected inheritance. . A dark red arrow is used for private inheritance. . A purple dashed arrow is used if a class is contained or used by another class. The arrow is labelled with the variable(s) through which the pointed class or struct is accessible. . A yellow dashed arrow denotes a relation between a template instance and the template class it was instantiated from. The arrow is labelled with the template parameters of the instance. . Generated on Mon Nov 11 2024 03:36:34 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/graph_legend.html:1390,undo,undocumented,1390,api/master/sofa/html/graph_legend.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/graph_legend.html,1,['undo'],['undocumented']
Usability,"; BaseForceField()sofa::core::behavior::BaseForceFieldprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; buildDampingMatrix(core::behavior::DampingMatrix *) finalsofa::component::solidmechanics::spring::VectorSpringForceField< DataTypes >virtual; buildStiffnessMatrix(StiffnessMatrix *matrix)sofa::core::behavior::BaseForceFieldvirtual; bwdInit() overridesofa::component::solidmechanics::spring::VectorSpringForceField< DataTypes >virtual; canCreate(T *obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::PairInteractionForceField< DataTypes >inlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear(int reserve=0)sofa::component::solidmechanics::spring::VectorSpringForceField< DataTypes >inline; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; Coord typedefsofa::component::solidmechanics::spring::VectorSpringForceField< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::core::behavior::PairInteractionForceField< DataTypes >inlinestatic; createDefaultSprings()sofa::component::solidmechanics::spring::VectorSpringForceField< DataTypes >; createEdgeInformation(Index, Spring &t, const core::topology::BaseMeshTopology::Edge &e, const sofa::type::vector< Index > &ancestors, const sofa::type::vector< SReal > &coefs)sofa::component::solidmechanics::sp",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_vector_spring_force_field-members.html:4124,clear,clear,4124,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_vector_spring_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_vector_spring_force_field-members.html,1,['clear'],['clear']
Usability,"; Block typedefsofa::component::constraint::projective::PlaneProjectiveConstraint< DataTypes >; bsize enum valuesofa::component::constraint::projective::PlaneProjectiveConstraint< DataTypes >; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ProjectiveConstraintSet< DataTypes >inlinestatic; sofa::core::behavior::BaseProjectiveConstraintSet::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearConstraints()sofa::component::constraint::projective::PlaneProjectiveConstraint< DataTypes >; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; Coord typedefsofa::component::constraint::projective::PlaneProjectiveConstraint< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; CPos typedefsofa::component::constraint::projective::PlaneProjectiveConstraint< DataTypes >; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_drawSizesofa::component::constraint::projective::PlaneProjectiveConstraint< DataTypes >; d_indicessofa::component::constraint::projective::PlaneProjectiveConstraint< DataTypes >; d_messageLogCountsofa::core::objectmodel::Basemutable; d_normalsofa::component::constraint::projective::PlaneProjectiveConstraint< DataTypes >; d_originsofa::com",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_plane_projective_constraint-members.html:3410,clear,clearLoggedMessages,3410,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_plane_projective_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_plane_projective_constraint-members.html,1,['clear'],['clearLoggedMessages']
Usability,; Get information about connexity of the mesh ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer. ◆ checkTopology(). bool sofa::component::topology::container::dynamic::QuadSetTopologyContainer::checkTopology ; (; ); const. overridevirtual . Checks if the topology is coherent. ; Check if the shell arrays are coherent See alsom_quad . m_edgesInQuad . m_quadsAroundVertex . m_quadsAroundEdge ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer. ◆ cleanQuadTopologyFromDirty(). void sofa::component::topology::container::dynamic::QuadSetTopologyContainer::cleanQuadTopologyFromDirty ; (; ). protected . ◆ clear(). void sofa::component::topology::container::dynamic::QuadSetTopologyContainer::clear ; (; ). overridevirtual . Procedural creation methods ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer. ◆ clearEdgesInQuad(). void sofa::component::topology::container::dynamic::QuadSetTopologyContainer::clearEdgesInQuad ; (; ). protected . ◆ clearQuads(). void sofa::component::topology::container::dynamic::QuadSetTopologyContainer::clearQuads ; (; ). protected . ◆ clearQuadsAroundEdge(). void sofa::component::topology::container::dynamic::QuadSetTopologyContainer::clearQuadsAroundEdge ; (; ). protected . ◆ clearQuadsAroundVertex(). void sofa::component::topology::container::dynamic::QuadSetTopologyContainer::clearQuadsAroundVertex ; (; ). protected . ◆ createEdgeSetArray(). void sofa::component::topology::container::dynamic::QuadSetTopologyContainer::createEdgeSetArray ; (; ). overrideprotectedvirtual . Creates the EdgeSet array. ; Create the set of edges when needed. ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer. ◆ createEdgesInQuadArray(). void sofa::component::topology::container::dynamic::QuadSetTopologyContainer::createEdgesInQuadArray ; (; ). protectedvirtual . Creates the array of edge indices for each qu,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_container.html:40328,clear,clearEdgesInQuad,40328,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_container.html,1,['clear'],['clearEdgesInQuad']
Usability,; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer. ◆ cleanTetrahedronTopologyFromDirty(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::cleanTetrahedronTopologyFromDirty ; (; ). protected . ◆ clear(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::clear ; (; ). overridevirtual . Procedural creation methods ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer. ◆ clearEdgesInTetrahedron(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::clearEdgesInTetrahedron ; (; ). protected . ◆ clearTetrahedra(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::clearTetrahedra ; (; ). protected . ◆ clearTetrahedraAroundEdge(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::clearTetrahedraAroundEdge ; (; ). protected . ◆ clearTetrahedraAroundTriangle(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::clearTetrahedraAroundTriangle ; (; ). protected . ◆ clearTetrahedraAroundVertex(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::clearTetrahedraAroundVertex ; (; ). protected . ◆ clearTrianglesInTetrahedron(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::clearTrianglesInTetrahedron ; (; ). protected . ◆ createEdgeSetArray(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::createEdgeSetArray ; (; ). overrideprotectedvirtual . Creates the EdgeSet array. ; Create the set of edges when needed. ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer. ◆ createEdgesInTetrahedronArray(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::createEdgesInTetrahedronArray ; (; ). protectedvirtual . Creates the arr,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container.html:50987,clear,clearTetrahedraAroundTriangle,50987,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container.html,1,['clear'],['clearTetrahedraAroundTriangle']
Usability,"; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ bRowSize(). template<typename TBlock , typename TPolicy = CRSMechanicalPolicy> . virtual Index sofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >::bRowSize ; (; ); const. inlineoverridevirtual . Returnsthe number of rows of blocks ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ bRowsRange(). template<typename TBlock , typename TPolicy = CRSMechanicalPolicy> . virtual std::pair<RowBlockConstIterator, RowBlockConstIterator> sofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >::bRowsRange ; (; ); const. inlineoverridevirtual . Get the iterators corresponding to the beginning and end of the given row of blocks. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clear() [1/2]. template<typename TBlock , typename TPolicy = CRSMechanicalPolicy> . void sofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >::clear ; (; ). inlineoverridevirtual . Completely clear the matrix. ; Need implement clear to override BaseMatrix one. ; Implements sofa::linearalgebra::BaseMatrix. ◆ clear() [2/2]. template<typename TBlock , typename TPolicy = CRSMechanicalPolicy> . void sofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >::clear ; (; Index ; i, . Index ; j . ). inlineoverride . clear scalar at element i, j of matrix . ◆ clearCol(). template<typename TBlock , typename TPolicy = CRSMechanicalPolicy> . void sofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >::clearCol ; (; Index ; j). inlineoverride . Clear col scalar method. Clear this col in all row of matrix. ; Parameters. j: Col index considering size of matrix in scalar. . WarningIf you want to clear all value of a block, it is better to call clearColBlock . ◆ clearRow(). template<typename TBlock , typename TPolicy = CRSMechanicalPolicy> . void sofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >::clearRow ; (; Index ; i). inlineov",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical.html:48331,clear,clear,48331,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical.html,1,['clear'],['clear']
Usability,; SOFA - Topic: [SOLVED] How to look at the example of the source code(c++) ?. /how-to-make-a-6dof-simulation-act-like-a-4dof-make-3d-act-like-2d-simulation; ; SOFA - Topic: How to make a 6DOF simulation act like a 4DOF (make 3d act like 2d simulation)?. /how-to-make-a-modal-analysis; ; SOFA - Topic: how to: Make a modal analysis. /how-to-make-a-pythonscript-controller-with-sofapython3; ; SOFA - Topic: [SOLVED] How to make a PythonScript controller with SofaPython3. /how-to-make-local-refined-tetrahedral-mesh; ; SOFA - Topic: How to make local refined tetrahedral mesh?. /how-to-make-some-part-of-an-object-elastic-and-other-part-plastic; ; SOFA - Topic: How to make some part of an object elastic and other part plastic. /how-to-make-tetrahedron-msh-file-with-meshlab; . /embed; ; SOFA - Topic: how to make tetrahedron msh file with meshlab?. SOFA - Topic: how to make tetrahedron msh file with meshlab?. /how-to-make-the-size-or-type-of-feedback-in-the-two-object-is-not-the-same; ; SOFA - Topic: [SOLVED] HOW to make the size or type of feedback in the two object is not the same?. /how-to-map-pointdata-in-a-datadisplay-using-c; ; SOFA - Topic: How to map pointData in a DataDisplay using C++. /how-to-mark-a-node-of-a-mesh; ; SOFA - Topic: [SOLVED] How to mark a node of a mesh?. /how-to-model-a-curved-slack-soft-rope-at-the-start; ; SOFA - Topic: How to model a curved slack soft rope at the start?. /how-to-model-a-deformable-object-with-a-deep-crevice; . /embed; ; SOFA - Topic: [SOLVED] How to model a deformable object with a deep crevice?. SOFA - Topic: [SOLVED] How to model a deformable object with a deep crevice?. /how-to-modify-and-object-in-the-scene-and-restart-simulation; ; SOFA - Topic: How to modify and object in the scene and restart simulation. /how-to-move-objects-with-keyboard-and-mouse; . /feed; ; [SOLVED] How to move objects with keyboard and mouse? – SOFA. SOFA - Topic: [SOLVED] How to move objects with keyboard and mouse?. /how-to-not-check-some-collisions; ;,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:326281,feedback,feedback-in-the-two-object-is-not-the-same,326281,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,2,['feedback'],"['feedback', 'feedback-in-the-two-object-is-not-the-same']"
Usability,; SOFA API: sofa::gui::qt::viewer::qgl Namespace Reference; SOFA API: sofa::gui::qt::viewer::qt Namespace Reference; SOFA API: sofa::helper Namespace Reference; SOFA API: sofa::helper::advancedtimer Namespace Reference; SOFA API: sofa::helper::console Namespace Reference; SOFA API: sofa::helper::io Namespace Reference; SOFA API: sofa::helper::lifecycle Namespace Reference; SOFA API: sofa::helper::logging Namespace Reference; SOFA API: sofa::helper::logging::countingmessagehandler Namespace Reference; SOFA API: sofa::helper::logging::loggingmessagehandler Namespace Reference; SOFA API: sofa::helper::logging::percomponentloggingmessagehandler Namespace Reference; SOFA API: sofa::helper::logging::routingmessagehandler Namespace Reference; SOFA API: sofa::helper::messaging Namespace Reference; SOFA API: sofa::helper::polygon_cube_intersection Namespace Reference; SOFA API: sofa::helper::system Namespace Reference; SOFA API: sofa::helper::system::thread Namespace Reference; SOFA API: sofa::helper::visual Namespace Reference; SOFA API: sofa::linearalgebra Namespace Reference; SOFA API: sofa::linearalgebra::sparsematrixproduct Namespace Reference; SOFA API: sofa::linearalgebra::testing Namespace Reference; SOFA API: sofa::mapping_test Namespace Reference; SOFA API: sofa::simpleapi Namespace Reference; SOFA API: sofa::simulation Namespace Reference; SOFA API: sofa::simulation::Colors Namespace Reference; SOFA API: sofa::simulation::common Namespace Reference; SOFA API: sofa::simulation::core Namespace Reference; SOFA API: sofa::simulation::graph Namespace Reference; SOFA API: sofa::simulation::mechanicalvisitor Namespace Reference; SOFA API: sofa::simulation::node Namespace Reference; SOFA API: sofa::simulation::xml Namespace Reference; SOFA API: sofa::testing Namespace Reference; SOFA API: sofa::topology Namespace Reference; SOFA API: sofa::type Namespace Reference; SOFA API: sofa::type::pairwise Namespace Reference; SOFA API: sofa::type::trait Namespace Reference; navtree.,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:205979,simpl,simpleapi,205979,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['simpl'],['simpleapi']
Usability,"; blocAdd(Index i, Index j, const T *buffer)sofa::linearalgebra::BaseMatrixinline; blocCreate(Index i, Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; blocElements(Index i, Index j, T *buffer) constsofa::linearalgebra::BaseMatrixinline; blocGet(Index i, Index j) constsofa::linearalgebra::BaseMatrixinlinevirtual; blocGetW(Index i, Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; blocSet(Index i, Index j, const T *buffer)sofa::linearalgebra::BaseMatrixinline; bRowBegin(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowEnd(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowRange(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsBegin() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsEnd() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowSize() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsRange() constsofa::linearalgebra::BaseMatrixinlinevirtual; category enum valuesofa::linearalgebra::DiagonalMatrix< T >; clear(Index i, Index j) overridesofa::linearalgebra::DiagonalMatrix< T >inlinevirtual; clear() overridesofa::linearalgebra::DiagonalMatrix< T >inlinevirtual; clear(Index i)sofa::linearalgebra::DiagonalMatrix< T >inline; clearCol(Index j) overridesofa::linearalgebra::DiagonalMatrix< T >inlinevirtual; clearCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRow(Index i) overridesofa::linearalgebra::DiagonalMatrix< T >inlinevirtual; clearRowCol(Index i) overridesofa::linearalgebra::DiagonalMatrix< T >inlinevirtual; clearRows(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowsCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; cols(void) constsofa::linearalgebra::BaseMatrixinline; colSize(void) const overridesofa::linearalgebra::DiagonalMatrix< T >inlinevirtual; compress()sofa::linearalgebra::BaseMatrixvirtual; createBlockAccessor(Index row, Index col, void *internalPtr=nullptr)sofa::linearalgebra::BaseMatrixinlinepro",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_diagonal_matrix-members.html:5856,clear,clear,5856,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_diagonal_matrix-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_diagonal_matrix-members.html,1,['clear'],['clear']
Usability,"; blocGetW(Index i, Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; blocSet(Index i, Index j, const T *buffer)sofa::linearalgebra::BaseMatrixinline; bRowBegin(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowEnd(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowRange(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsBegin() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsEnd() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowSize() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsRange() constsofa::linearalgebra::BaseMatrixinlinevirtual; choleskysofa::linearalgebra::EigenBaseSparseMatrix< TReal >protected; choleskyDecompose()sofa::linearalgebra::EigenBaseSparseMatrix< TReal >inline; choleskySolve(VectorEigen &x, const VectorEigen &b) constsofa::linearalgebra::EigenBaseSparseMatrix< TReal >inline; clear() overridesofa::linearalgebra::EigenBaseSparseMatrix< TReal >inlinevirtual; sofa::linearalgebra::BaseMatrix::clear(Index i, Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; clearCol(Index col) overridesofa::linearalgebra::EigenBaseSparseMatrix< TReal >inlinevirtual; clearCols(Index imin, Index imax) overridesofa::linearalgebra::EigenBaseSparseMatrix< TReal >inlinevirtual; clearRow(Index i) overridesofa::linearalgebra::EigenBaseSparseMatrix< TReal >inlinevirtual; clearRowCol(Index i) overridesofa::linearalgebra::EigenBaseSparseMatrix< TReal >inlinevirtual; clearRows(Index imin, Index imax) overridesofa::linearalgebra::EigenBaseSparseMatrix< TReal >inlinevirtual; clearRowsCols(Index imin, Index imax) overridesofa::linearalgebra::EigenBaseSparseMatrix< TReal >inlinevirtual; coeffRef(Index i, Index j)sofa::linearalgebra::EigenBaseSparseMatrix< TReal >inline; cols(void) constsofa::linearalgebra::BaseMatrixinline; colSize(void) const overridesofa::linearalgebra::EigenBaseSparseMatrix< TReal >inlinevirtual; compress() overridesofa::linearalgebra::EigenBaseSparseMatrix< TReal >inlinevirtual; Compre",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_base_sparse_matrix-members.html:5574,clear,clear,5574,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_base_sparse_matrix-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_base_sparse_matrix-members.html,1,['clear'],['clear']
Usability,"; blocGetW(Index i, Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; blocSet(Index i, Index j, const T *buffer)sofa::linearalgebra::BaseMatrixinline; bRowBegin(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowEnd(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowRange(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsBegin() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsEnd() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowSize() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsRange() constsofa::linearalgebra::BaseMatrixinlinevirtual; clear() overridesofa::linearalgebra::RotationMatrix< TReal >virtual; sofa::linearalgebra::BaseMatrix::clear(Index i, Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; clearCol(Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; clearCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRow(Index i)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowCol(Index i)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRows(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowsCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; cols(void) constsofa::linearalgebra::BaseMatrixinline; colSize(void) const overridesofa::linearalgebra::RotationMatrix< TReal >virtual; compress()sofa::linearalgebra::BaseMatrixvirtual; createBlockAccessor(Index row, Index col, void *internalPtr=nullptr)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockAccessor(Index row, Index col, Index internalData)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockConstAccessor(Index row, Index col, void *internalPtr=nullptr) constsofa::linearalgebra::BaseMatrixinlineprotected; createBlockConstAccessor(Index row, Index col, Index internalData) constsofa::linearalgebra::BaseMatrixinlineprotected; createColBlockConstIterator(Index row, void *internalPtr) constsofa::linearalgebra::BaseMatrixinlineprotected; createCol",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_rotation_matrix-members.html:6011,clear,clearRowCol,6011,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_rotation_matrix-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_rotation_matrix-members.html,1,['clear'],['clearRowCol']
Usability,"; cleanPointTopologyFromDirty()sofa::component::topology::container::dynamic::PointSetTopologyContainerprotected; cleanQuadTopologyFromDirty()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear() overridesofa::component::topology::container::dynamic::QuadSetTopologyContainervirtual; clearEdges()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearEdgesAroundVertex()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearEdgesInQuad()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; clearLoggedMessages() constsofa::core::objectmodel::Base; clearQuads()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; clearQuadsAroundEdge()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; clearQuadsAroundVertex()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createEdgesAroundVertexArray()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotectedvirtual; createEdgeSetArray() overridesofa::component::topology::container::dynamic::QuadSetTopologyContainerprotectedvirtual; createEdgesInQuadArray()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotectedvirtual; createQuadsAroundEdgeArray()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotectedvirtual; createQuadsAroundVertexArray()sofa::component::topology::container::dynamic::QuadSetTopolo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_container-members.html:4729,clear,clearQuadsAroundVertex,4729,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_container-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_container-members.html,1,['clear'],['clearQuadsAroundVertex']
Usability,"; const Block & bloc (Index i) const;  ; const Block & bloc (Index i, Index j) const;  ; Block * wbloc (Index i);  ; Block * wbloc (Index i, Index j);  ; SReal element (Index i, Index j) const override;  Read the value of the element at row i, column j (using 0-based indices) More...;  ; void set (Index i, Index j, double v) override;  Write the value of the element at row i, column j (using 0-based indices) More...;  ; void setB (Index i, const Block &b);  ; void setB (Index i, Index j, const Block &b);  ; void add (Index i, Index j, double v) override;  Add v to the existing value of the element at row i, column j (using 0-based indices) More...;  ; void addB (Index i, const Block &b);  ; void addB (Index i, Index j, const Block &b);  ; void clear (Index i, Index j) override;  ; void clearRow (Index i) override;  Reset all the values in row i to 0. More...;  ; void clearCol (Index j) override;  Reset the all values in column j to 0. More...;  ; void clearRowCol (Index i) override;  Reset the value of both row and column i to 0. More...;  ; void clear () override;  Reset all values to 0. More...;  ; void invert ();  ; template<class Real2 > ; void mul (FullVector< Real2 > &res, const FullVector< Real2 > &v) const;  ; template<class Real2 > ; FullVector< Real2 > operator* (const FullVector< Real2 > &v) const;  ; virtual void add (Index row, Index col, double v)=0;  Add v to the existing value of the element at row i, column j (using 0-based indices) More...;  ; virtual void add (Index row, Index col, const type::Mat3x3d &_M);  Adding values from a 3x3d matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat3x3f &_M);  Adding values from a 3x3f matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat2x2d &_M);  Adding values from a 2x2d matrix. This function may be overload to obtain better performances. More.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_diagonal_matrix.html:2104,clear,clearRowCol,2104,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_diagonal_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_diagonal_matrix.html,1,['clear'],['clearRowCol']
Usability,"; const real2 * ; p). inlineexplicitconstexprnoexcept . Constructor from an array of values. . Function details. ◆ assign(). template<sofa::Size N, typename ValueType > . constexpr void sofa::type::Vec< N, ValueType >::assign ; (; const ValueType & ; value). inlineconstexprnoexcept . ◆ back() [1/2]. template<sofa::Size N, typename ValueType > . constexpr reference sofa::type::Vec< N, ValueType >::back ; (; ). inlineconstexpr . ◆ back() [2/2]. template<sofa::Size N, typename ValueType > . constexpr const_reference sofa::type::Vec< N, ValueType >::back ; (; ); const. inlineconstexpr . ◆ begin() [1/2]. template<sofa::Size N, typename ValueType > . constexpr const_iterator sofa::type::Vec< N, ValueType >::begin ; (; ); const. inlineconstexprnoexcept . ◆ begin() [2/2]. template<sofa::Size N, typename ValueType > . constexpr iterator sofa::type::Vec< N, ValueType >::begin ; (; ). inlineconstexprnoexcept . ◆ clear(). template<sofa::Size N, typename ValueType > . constexpr void sofa::type::Vec< N, ValueType >::clear ; (; ). inlineconstexprnoexcept . Sets every element to 0. . ◆ cross(). template<sofa::Size N, typename ValueType > . template<typename R , Size NN = N, typename std::enable_if<(NN==3), int >::type = 0> . constexpr Vec sofa::type::Vec< N, ValueType >::cross ; (; const Vec< 3, R > & ; b); const. inlineconstexprnoexcept . ◆ data(). template<sofa::Size N, typename ValueType > . constexpr const ValueType* sofa::type::Vec< N, ValueType >::data ; (; ); const. inlineconstexprnoexcept . ◆ divscalar() [1/2]. template<sofa::Size N, typename ValueType > . template<class real2 , std::enable_if_t< std::is_convertible_v< real2, ValueType >, bool > = true> . constexpr Vec<N,ValueType> sofa::type::Vec< N, ValueType >::divscalar ; (; const real2 ; f); const. inlineconstexprnoexcept . ◆ divscalar() [2/2]. template<sofa::Size N, typename ValueType > . constexpr Vec<N,ValueType> sofa::type::Vec< N, ValueType >::divscalar ; (; const ValueType ; f); const. inlineconstexprnoexcept . D",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_vec.html:15181,clear,clear,15181,api/master/sofa/html/classsofa_1_1type_1_1_vec.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_vec.html,1,['clear'],['clear']
Usability,"; const sofa::core::topology::EdgesRemoved * ; edgesRemoved, . sofa::Index ; mstateId . ). protected . ◆ applyRemovedPoints(). template<class DataTypes > . void sofa::component::solidmechanics::spring::SpringForceField< DataTypes >::applyRemovedPoints ; (; const sofa::core::topology::PointsRemoved * ; pointsRemoved, . sofa::Index ; mstateId . ). protected . ◆ buildDampingMatrix(). template<class DataTypes > . void sofa::component::solidmechanics::spring::SpringForceField< DataTypes >::buildDampingMatrix ; (; core::behavior::DampingMatrix * ; ). overridevirtual . Reimplemented from sofa::core::behavior::BaseForceField. ◆ buildStiffnessMatrix(). template<class DataTypes > . void sofa::component::solidmechanics::spring::SpringForceField< DataTypes >::buildStiffnessMatrix ; (; core::behavior::StiffnessMatrix * ; matrix). overridevirtual . Reimplemented from sofa::core::behavior::BaseForceField. ◆ clear(). template<class DataTypes > . void sofa::component::solidmechanics::spring::SpringForceField< DataTypes >::clear ; (; sofa::Size ; reserve = 0). ◆ computeBBox(). template<class DataTypes > . void sofa::component::solidmechanics::spring::SpringForceField< DataTypes >::computeBBox ; (; const core::ExecParams * ; , . bool ; = false . ). overridevirtual . Bounding Box computation method. Default to empty method. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ computeSpringDForce(). template<class DataTypes > . DataTypes::DPos sofa::component::solidmechanics::spring::SpringForceField< DataTypes >::computeSpringDForce ; (; VecDeriv & ; df1, . const VecDeriv & ; dx1, . VecDeriv & ; df2, . const VecDeriv & ; dx2, . sofa::Index ; i, . const Spring & ; spring, . SReal ; kFactor, . SReal ; bFactor . ). ◆ computeSpringForce(). template<class DataTypes > . auto sofa::component::solidmechanics::spring::SpringForceField< DataTypes >::computeSpringForce ; (; const VecCoord & ; p1, . const VecDeriv & ; v1, . const VecCoord & ; p2, . const VecDeriv & ; v2, . const Spring & ; s",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_spring_force_field.html:35829,clear,clear,35829,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_spring_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_spring_force_field.html,1,['clear'],['clear']
Usability,"; const. inlineconstexpr . ◆ begin() [1/2]. template<sofa::Size L, sofa::Size C, class real > . constexpr ArrayLineType::const_iterator sofa::type::Mat< L, C, real >::begin ; (; ); const. inlineconstexprnoexcept . ◆ begin() [2/2]. template<sofa::Size L, sofa::Size C, class real > . constexpr ArrayLineType::iterator sofa::type::Mat< L, C, real >::begin ; (; ). inlineconstexprnoexcept . ◆ canSelfTranspose() [1/2]. template<sofa::Size L, sofa::Size C, class real > . template<Size I, Size J> . static bool sofa::type::Mat< L, C, real >::canSelfTranspose ; (; const Mat< I, J, real > & ; , . const Mat< J, I, real > & ;  . ). inlinestaticnoexcept . ◆ canSelfTranspose() [2/2]. template<sofa::Size L, sofa::Size C, class real > . template<Size S> . static bool sofa::type::Mat< L, C, real >::canSelfTranspose ; (; const Mat< S, S, real > & ; lhs, . const Mat< S, S, real > & ; rhs . ). inlinestaticnoexcept . ◆ clear(). template<sofa::Size L, sofa::Size C, class real > . constexpr void sofa::type::Mat< L, C, real >::clear ; (; ). inlineconstexprnoexcept . Sets each element to 0. . ◆ col(). template<sofa::Size L, sofa::Size C, class real > . constexpr Col sofa::type::Mat< L, C, real >::col ; (; Size ; j); const. inlineconstexprnoexcept . Copy of column j. . ◆ data(). template<sofa::Size L, sofa::Size C, class real > . constexpr const real* sofa::type::Mat< L, C, real >::data ; (; ); const. inlineconstexprnoexcept . ◆ end() [1/2]. template<sofa::Size L, sofa::Size C, class real > . constexpr ArrayLineType::const_iterator sofa::type::Mat< L, C, real >::end ; (; ); const. inlineconstexprnoexcept . ◆ end() [2/2]. template<sofa::Size L, sofa::Size C, class real > . constexpr ArrayLineType::iterator sofa::type::Mat< L, C, real >::end ; (; ). inlineconstexprnoexcept . ◆ fill(). template<sofa::Size L, sofa::Size C, class real > . constexpr void sofa::type::Mat< L, C, real >::fill ; (; real ; r). inlineconstexprnoexcept . Sets each element to r. . ◆ front() [1/2]. template<sofa::Size L, sof",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_mat.html:16940,clear,clear,16940,api/master/sofa/html/classsofa_1_1type_1_1_mat.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_mat.html,1,['clear'],['clear']
Usability,"; sofa::core::behavior::BaseInteractionProjectiveConstraintSet::applyConstraint(sofa::core::behavior::ZeroDirichletCondition *)sofa::core::behavior::BaseProjectiveConstraintSetvirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseProjectiveConstraintSet()sofa::core::behavior::BaseProjectiveConstraintSetinlineprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::PairInteractionProjectiveConstraintSet< TDataTypes >inlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; sofa::computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; sofa::core::behavior::StateAccessor::computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; Coord typedefsofa::core::behavior::PairInteractionProjectiveConstraintSet< TDataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::core::behavior::PairInteractionProjectiveConstraintSet< TDataTypes >inlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; DataTypes typedefsofa::core::behavior::PairInteractionProjectiveConstraintSet< TDataTypes >; DataVecCoord typedefsofa::core::behavior::Pair",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_pair_interaction_projective_constraint_set-members.html:2728,clear,clearLoggedMessages,2728,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_pair_interaction_projective_constraint_set-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_pair_interaction_projective_constraint_set-members.html,1,['clear'],['clearLoggedMessages']
Usability,;  ; template class SOFA_COMPONENT_STATECONTAINER_API MappedObject< Vec3Types >;  ; template class SOFA_COMPONENT_STATECONTAINER_API MappedObject< Vec6Types >;  ; template class SOFA_COMPONENT_STATECONTAINER_API MappedObject< Rigid3Types >;  ; template class SOFA_COMPONENT_STATECONTAINER_API MappedObject< Rigid2Types >;  ; template class SOFA_COMPONENT_STATECONTAINER_API MechanicalObject< Vec3Types >;  ; template class SOFA_COMPONENT_STATECONTAINER_API MechanicalObject< Vec2Types >;  ; template class SOFA_COMPONENT_STATECONTAINER_API MechanicalObject< Vec1Types >;  ; template class SOFA_COMPONENT_STATECONTAINER_API MechanicalObject< Vec6Types >;  ; template class SOFA_COMPONENT_STATECONTAINER_API MechanicalObject< Rigid3Types >;  ; template class SOFA_COMPONENT_STATECONTAINER_API MechanicalObject< Rigid2Types >;  . Typedef Documentation. ◆ nat. typedef std::size_t sofa::component::statecontainer::nat. Function Documentation. ◆ clear() [1/3]. template<> . void sofa::component::statecontainer::clear ; (; double & ; t). inline . ◆ clear() [2/3]. template<> . void sofa::component::statecontainer::clear ; (; float & ; t). inline . ◆ clear() [3/3]. template<class T > . void sofa::component::statecontainer::clear ; (; T & ; t). inline . ◆ getModuleName(). const char * sofa::component::statecontainer::getModuleName ; (; ). ◆ getModuleVersion(). const char * sofa::component::statecontainer::getModuleVersion ; (; ). ◆ init(). SOFA_COMPONENT_STATECONTAINER_API void sofa::component::statecontainer::init ; (; ). ◆ initExternalModule(). void sofa::component::statecontainer::initExternalModule ; (; ). ◆ registerMappedObject(). void sofa::component::statecontainer::registerMappedObject ; (; sofa::core::ObjectFactory * ; factory). ◆ registerMechanicalObject(). void sofa::component::statecontainer::registerMechanicalObject ; (; sofa::core::ObjectFactory * ; factory). ◆ registerObjects(). void sofa::component::statecontainer::registerObjects ; (; sofa::core::ObjectFactory * ; factory),MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1component_1_1statecontainer.html:2362,clear,clear,2362,api/master/sofa/html/namespacesofa_1_1component_1_1statecontainer.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1component_1_1statecontainer.html,1,['clear'],['clear']
Usability,";  ; virtual ~BaseLink ();  ; const std::string & getName () const;  ; void setName (const std::string &name);  ; const std::string & getHelp () const;  Get help message. More...;  ; void setHelp (const std::string &val);  Set help message. More...;  ; virtual Base * getOwnerBase () const =0;  ; void setFlag (LinkFlagsEnum flag, bool b);  Set one of the flags. More...;  ; bool getFlag (LinkFlagsEnum flag) const;  Get one flag. More...;  ; bool isMultiLink () const;  ; bool isStrongLink () const;  ; bool isDoubleLink () const;  ; bool isDuplicate () const;  ; bool storePath () const;  ; void setPersistent (bool b);  Alias to match BaseData API. More...;  ; bool isPersistent () const;  ; bool isReadOnly () const;  Alias to match BaseData API. More...;  ; virtual const BaseClass * getDestClass () const =0;  ; virtual const BaseClass * getOwnerClass () const =0;  ; int getCounter () const;  ; void setLinkedBase (Base *link);  ; virtual size_t getSize () const =0;  ; Base * getLinkedBase (std::size_t index=0) const;  ; void clear ();  ; std::string getLinkedPath (const std::size_t index=0) const;  ; std::string getPath (std::size_t index=0) const;  ; Serialization API; bool read (const std::string &str);  Read the command line. More...;  ; bool updateLinks ();  ; virtual void printValue (std::ostream &) const;  Print the value of the associated variable. More...;  ; virtual std::string getValueString () const;  Print the value of the associated variable. More...;  ; virtual std::string getValueTypeString () const;  Print the value type of the associated variable. More...;  . Serialization Helper API; unsigned int m_flags;  ; std::string m_name;  ; std::string m_help;  ; int m_counter;  Number of changes since creation. More...;  ; bool parseString (const std::string &text, std::string *path, std::string *data=nullptr) const;  ; Base * getOwner () const;  ; void setOwner (Base *owner);  ; bool add (Base *baseptr, const std::string &path);  Add a new target to the link. Mo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_link.html:1969,clear,clear,1969,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_link.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_link.html,1,['clear'],['clear']
Usability,";  ; void bwdInit () override;  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; void computeBBox (const core::ExecParams *params, bool) override;  ; void addForce (const core::MechanicalParams *mparams, DataVecDeriv &data_f1, DataVecDeriv &data_f2, const DataVecCoord &data_x1, const DataVecCoord &data_x2, const DataVecDeriv &data_v1, const DataVecDeriv &data_v2) override;  ; void addDForce (const core::MechanicalParams *mparams, DataVecDeriv &data_df1, DataVecDeriv &data_df2, const DataVecDeriv &data_dx1, const DataVecDeriv &data_dx2) override;  ; void buildDampingMatrix (core::behavior::DampingMatrix *) final;  ; SReal getPotentialEnergy (const core::MechanicalParams *, const DataVecCoord &, const DataVecCoord &) const override;  ; core::behavior::MechanicalState< DataTypes > * getObject1 ();  ; core::behavior::MechanicalState< DataTypes > * getObject2 ();  ; sofa::type::vector< Spring > * getSprings ();  ; void clear (sofa::Size reserve=0);  ; void addSpring (const Spring &s);  ; void addSpring (sofa::Index m1, sofa::Index m2, Real softKst, Real hardKst, Real softKsr, Real hardKsr, Real blocKsr, Real axmin, Real axmax, Real aymin, Real aymax, Real azmin, Real azmax, Real kd);  ;  Public Member Functions inherited from sofa::core::behavior::PairInteractionForceField< DataTypes >;  SOFA_ABSTRACT_CLASS2 (SOFA_TEMPLATE(PairInteractionForceField, DataTypes), BaseInteractionForceField, SOFA_TEMPLATE2(PairStateAccessor, DataTypes, DataTypes));  ; void setPathObject1 (const std::string &path);  Set the Object1 path. More...;  ; void setPathObject2 (const std::string &path);  Set the Object2 path. More...;  ; std::string getPathObject1 () const;  Retrieve the Object1 path. More...;  ; std::string getPathObject2 () const;  Retrieve the Object2 path. More...;  ; void addForce (const ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_joint_spring_force_field.html:6077,clear,clear,6077,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_joint_spring_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_joint_spring_force_field.html,1,['clear'],['clear']
Usability,";  FullMatrix (Real *p, Index nbRow, Index nbCol);  ;  FullMatrix (Real *p, Index nbRow, Index nbCol, Index pitch);  ;  ~FullMatrix () override;  ; Real * ptr ();  ; const Real * ptr () const;  ; LineIterator begin ();  ; LineIterator end ();  ; LineConstIterator begin () const;  ; LineConstIterator end () const;  ; Real * operator[] (Index i);  ; const Real * operator[] (Index i) const;  ; Index rowSize (void) const override;  Number of rows. More...;  ; Index colSize (void) const override;  Number of columns. More...;  ; SReal element (Index i, Index j) const override;  Read the value of the element at row i, column j (using 0-based indices) More...;  ; void set (Index i, Index j, double v) override;  Write the value of the element at row i, column j (using 0-based indices) More...;  ; void add (Index i, Index j, double v) override;  Add v to the existing value of the element at row i, column j (using 0-based indices) More...;  ; void clear (Index i, Index j) override;  ; void clearRow (Index i) override;  Reset all the values in row i to 0. More...;  ; void clearCol (Index j) override;  Reset the all values in column j to 0. More...;  ; void clearRowCol (Index i) override;  Reset the value of both row and column i to 0. More...;  ; void clear () override;  Reset all values to 0. More...;  ; FullVector< Real > operator* (const FullVector< Real > &v) const;  ; void mul (FullVector< Real > &res, const FullVector< Real > &b) const;  ; void mulT (FullVector< Real > &res, const FullVector< Real > &b) const;  ; FullMatrix< Real > operator* (const FullMatrix< Real > &m) const;  ; void mul (FullMatrix< Real > &res, const FullMatrix< Real > &m) const;  ; void mulT (FullMatrix< Real > &res, const FullMatrix< Real > &m) const;  ; const char * Name ();  ; const char * Name ();  ; const char * Name ();  ; const char * Name ();  ; virtual void add (Index row, Index col, double v)=0;  Add v to the existing value of the element at row i, column j (using 0-based indices) More...; ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_l_ptr_full_matrix.html:2258,clear,clear,2258,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_l_ptr_full_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_l_ptr_full_matrix.html,2,['clear'],"['clear', 'clearRow']"
Usability,";  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; TMatrix * getSystemMatrix () const override;  Return the global matrix of the linear system. More...;  ; TVector * getRHSVector () const override;  Return the RHS of the linear system. More...;  ; TVector * getSolutionVector () const override;  Return the solution of the linear system. More...;  ; sofa::linearalgebra::BaseMatrix * getSystemBaseMatrix () const override;  Returns the system matrix as a linearalgebra::BaseMatrix*. More...;  ; void resizeSystem (sofa::Size n) override;  Set the size of the matrix to n x n, and the size of RHS and solution to n. More...;  ; void clearSystem () override;  ; void setRHS (core::MultiVecDerivId v) override;  ; void setSystemSolution (core::MultiVecDerivId v) override;  ; void dispatchSystemSolution (core::MultiVecDerivId v) override;  ; void dispatchSystemRHS (core::MultiVecDerivId v) override;  ;  Public Member Functions inherited from sofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >;  SOFA_CLASS (SOFA_TEMPLATE2(TypedMatrixLinearSystem, TMatrix, TVector), sofa::core::behavior::BaseMatrixLinearSystem);  ; linearalgebra::BaseMatrix * getSystemBaseMatrix () const override;  Returns the system matrix as a linearalgebra::BaseMatrix*. More...;  ; core::objectmodel::BaseContext * getSolveContext ();  ; SOFA_COMPONENT_LINEARSOLVER_ITERATIVE_API void setRHS (core::MultiVecDerivId v);  ; SOFA_COMPONENT_LINEARSOLVER_ITERATIVE_API void setSystemSolution (core::MultiVecDerivId v);  ; SOFA_COMPONENT_LINEARSOLVER_ITERATIVE_API void dispatchSystemSolution (core::MultiVecDerivId v);  ; SOFA_COMPONENT_LINEARSOLVER_ITERATIVE_API void dispatchSystemRHS (core::MultiVecDerivId v);  ; void setRHS (core::MultiVecDerivId v);  ; void setSystemSolution (core::MultiVecDerivId v);  ; void dispatchSystemSolution (core::MultiVecDerivId v);  ; void dispatchSystemRHS (core::MultiVecDerivId v);  ;  Public Member Functions inhe",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_composite_linear_system.html:4024,clear,clearSystem,4024,api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_composite_linear_system.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_composite_linear_system.html,1,['clear'],['clearSystem']
Usability,";  get scalar element i, j of matrix More...;  ; void set (Index i, Index j, double v) override;  set scalar element i, j of matrix More...;  ; void add (Index i, Index j, double v) override;  add scalar v at element i, j of matrix More...;  ; void set (Index i, Index j, int &rowId, int &colId, double v);  set scalar element i, j of matrix when rowId and colId are known More...;  ; template<typename T = Block, typename std::enable_if_t<!std::is_same_v< T, double > &&!std::is_same_v< T, float >, int > = 0> ; void add (Index i, Index j, int &rowId, int &colId, double v);  add scalar v at element i, j when rowId and colId are known More...;  ; void clear (Index i, Index j) override;  clear scalar at element i, j of matrix More...;  ; void add (Index i, Index j, const type::Mat3x3d &_M) override;  ; void add (Index i, Index j, const type::Mat3x3f &_M) override;  ; void clearRow (Index i) override;  Clear row scalar method. Clear all col of this line. More...;  ; void clearCol (Index j) override;  Clear col scalar method. Clear this col in all row of matrix. More...;  ; void clearRowCol (Index i) override;  Clear both row i and column i in a square matrix. More...;  ; void clear () override;  Completely clear the matrix. More...;  ; template<class M2 > ; bool hasRef (const M2 *m) const;  ; std::string expr () const;  ; bool valid () const;  ; template<class Dest > ; void addTo (Dest *dest) const;  ; template<class TBlock2 , class TPolicy2 > ; void operator= (const CompressedRowSparseMatrixMechanical< TBlock2, TPolicy2 > &m);  ; template<class TBlock2 , class TPolicy2 > ; void operator+= (const CompressedRowSparseMatrixMechanical< TBlock2, TPolicy2 > &m);  ; template<class TBlock2 , class TPolicy2 > ; void operator-= (const CompressedRowSparseMatrixMechanical< TBlock2, TPolicy2 > &m);  ; template<class Expr2 > ; void operator= (const MatrixExpr< Expr2 > &m);  ; template<class Expr2 > ; void operator+= (const MatrixExpr< Expr2 > &m);  ; template<class Expr2 > ; void operat",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical.html:6001,clear,clearCol,6001,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical.html,1,['clear'],['clearCol']
Usability,"< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseMouseInteractor()sofa::gui::component::performer::BaseMouseInteractorinlineprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; BehaviorModel()sofa::core::BehaviorModelinlineprotected; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup() overridesofa::gui::component::performer::BaseMouseInteractorvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; Coord typedefsofa::gui::component::performer::MouseInteractor< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; distanceFromMousesofa::gui::component::performer::BaseMouseInteractorprotected; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *vparams) overridesofa::gui::component::performer::BaseMouseInteractorvirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_mouse_interactor-members.html:2277,clear,clearLoggedMessages,2277,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_mouse_interactor-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_mouse_interactor-members.html,1,['clear'],['clearLoggedMessages']
Usability,"< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseMouseInteractor()sofa::gui::component::performer::BaseMouseInteractorinlineprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; BehaviorModel()sofa::core::BehaviorModelinlineprotected; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup() overridesofa::gui::component::performer::BaseMouseInteractorvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; distanceFromMousesofa::gui::component::performer::BaseMouseInteractorprotected; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *vparams) overridesofa::gui::component::performer::BaseMouseInteractorvirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_base_mouse_interactor-members.html:2259,clear,clearLoggedMessages,2259,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_base_mouse_interactor-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_base_mouse_interactor-members.html,1,['clear'],['clearLoggedMessages']
Usability,"< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseForceField()sofa::core::behavior::BaseForceFieldprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; buildDampingMatrix(DampingMatrix *matrix)sofa::core::behavior::BaseForceFieldvirtual; buildStiffnessMatrix(StiffnessMatrix *matrix)sofa::core::behavior::BaseForceFieldvirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::PairInteractionForceField< TDataTypes >inlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; Coord typedefsofa::core::behavior::PairInteractionForceField< TDataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::core::behavior::PairInteractionForceField< TDataTypes >inlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; DataTypes typedefsofa::core::behavior::PairInteractionForceField< TDataTypes >; DataVecCoord typedefsofa::core::behavior::PairInteractionForceField< TDataTypes >; DataVecDeriv typedefsofa::core::behavior::PairInteractionForceField< TDataTypes >; Deriv typedefsofa::core::behavior::PairInteractionForceField< TDataTypes >; doUpdateInte",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_pair_interaction_force_field-members.html:3674,clear,clearLoggedMessages,3674,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_pair_interaction_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_pair_interaction_force_field-members.html,1,['clear'],['clearLoggedMessages']
Usability,"< N, T >::Block & sofa::linearalgebra::BlockFullMatrix< N, T >::asub ; (; Index ; bi, . Index ; bj, . Index ; , . Index ;  . ). ◆ asub() [2/2]. template<std::size_t N, typename T > . const BlockFullMatrix< N, T >::Block & sofa::linearalgebra::BlockFullMatrix< N, T >::asub ; (; Index ; bi, . Index ; bj, . Index ; , . Index ;  . ); const. ◆ bloc() [1/2]. template<std::size_t N, typename T > . BlockFullMatrix< N, T >::Block & sofa::linearalgebra::BlockFullMatrix< N, T >::bloc ; (; Index ; bi, . Index ; bj . ). ◆ bloc() [2/2]. template<std::size_t N, typename T > . const BlockFullMatrix< N, T >::Block & sofa::linearalgebra::BlockFullMatrix< N, T >::bloc ; (; Index ; bi, . Index ; bj . ); const. ◆ clear() [1/2]. template<std::size_t N, typename T > . void sofa::linearalgebra::BlockFullMatrix< N, T >::clear ; (; ). overridevirtual . Reset all values to 0. ; Implements sofa::linearalgebra::BaseMatrix. ◆ clear() [2/2]. template<std::size_t N, typename T > . void sofa::linearalgebra::BlockFullMatrix< N, T >::clear ; (; Index ; i, . Index ; j . ). overridevirtual . Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearCol(). template<std::size_t N, typename T > . void sofa::linearalgebra::BlockFullMatrix< N, T >::clearCol ; (; Index ; j). overridevirtual . Reset the all values in column j to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRow(). template<std::size_t N, typename T > . void sofa::linearalgebra::BlockFullMatrix< N, T >::clearRow ; (; Index ; i). overridevirtual . Reset all the values in row i to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRowCol(). template<std::size_t N, typename T > . void sofa::linearalgebra::BlockFullMatrix< N, T >::clearRowCol ; (; Index ; i). overridevirtual . Reset the value of both row and column i to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ colSize(). template<std::size_t N, typename T > . BlockFullMatrix< N, T >::Index sofa::linearalgebra::BlockFullMatrix< N, T >::colSize ; (; v",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_full_matrix.html:17201,clear,clear,17201,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_full_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_full_matrix.html,1,['clear'],['clear']
Usability,"< T, MemoryManager, DataTypeInfoManager >::begin ; (; ); const. inline . ◆ bufferRead(). template<class T , class MemoryManager , class DataTypeInfoManager > . buffer_id_type sofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >::bufferRead ; (; bool ; create = false). inline . Get the Buffer Object ID for reading. . ◆ bufferWrite(). template<class T , class MemoryManager , class DataTypeInfoManager > . buffer_id_type sofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >::bufferWrite ; (; bool ; create = false). inline . Get the Buffer Object ID for writing. . ◆ capacity(). template<class T , class MemoryManager , class DataTypeInfoManager > . Size sofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >::capacity ; (; ); const. inline . ◆ checkIndex(). template<class T , class MemoryManager , class DataTypeInfoManager > . void sofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >::checkIndex ; (; Size ; i); const. inlineprotected . ◆ clear(). template<class T , class MemoryManager , class DataTypeInfoManager > . void sofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >::clear ; (; ). inline . ◆ copyToDevice(). template<class T , class MemoryManager , class DataTypeInfoManager > . void sofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >::copyToDevice ; (; int ; d = 0); const. inlineprotected . ◆ copyToHost(). template<class T , class MemoryManager , class DataTypeInfoManager > . void sofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >::copyToHost ; (; ); const. inlineprotected . ◆ copyToHostSingle(). template<class T , class MemoryManager , class DataTypeInfoManager > . void sofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >::copyToHostSingle ; (; Size ; i); const. inlineprotected . ◆ createBuffer(). template<class T , class MemoryManager , class DataTypeInfoManager > . void sofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >::createBuffer ; (; ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1vector__device.html:10148,clear,clear,10148,api/master/sofa/html/classsofa_1_1type_1_1vector__device.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1vector__device.html,1,['clear'],['clear']
Usability,"< T, MemoryManager, DataTypeInfoManager >inlineprotected; allocSizesofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >protected; begin() constsofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >inline; begin()sofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >inline; buffer_id_type typedefsofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >; bufferIsRegisteredsofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >mutableprotected; bufferObjectsofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >protected; bufferRead(bool create=false)sofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >inline; bufferWrite(bool create=false)sofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >inline; capacity() constsofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >inline; checkIndex(Size i) constsofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >inlineprotected; clear()sofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >inline; clearSizesofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >mutableprotected; const_iterator typedefsofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >; const_reference typedefsofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >; copyToDevice(int d=0) constsofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >inlineprotected; copyToHost() constsofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >inlineprotected; copyToHostSingle(Size i) constsofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >inlineprotected; cptidsofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >inlineprotectedstatic; createBuffer()sofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >inlineprotected; data() constsofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >inline; data()sofa::type::vector_device< T, MemoryManag",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1vector__device-members.html:1470,clear,clear,1470,api/master/sofa/html/classsofa_1_1type_1_1vector__device-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1vector__device-members.html,1,['clear'],['clear']
Usability,"< TReal >; Sparse matrix based on the Eigen library.; An Eigen::SparseMatrix<Real, RowMajor> matrix is used to store the data in Compressed Row Storage mode. This matrix can not be accessed randomly. Two access modes are implemented.; The first access mode consists in inserting entries in increasing row, increasing column order. Method beginRow(Index index) must be called before any entry can be appended to row i. WarningbeginRow must be called even for empty rows Then insertBack(i,j,value) must be used in for increasing j. There is no need to explicitly end a row. Finally, method compress() must be called after the last entry has been inserted. This is the most efficient access mode.; The second access mode is randow access, but you access an auxiliary matrix. Method add is used to add a value at a given location. Method compress() is then used to transfer this data to the compressed matrix. There is no way to replace an entry, you can only add.; Rows, columns, or the full matrix can be set to zero using the clear* methods. . Public Attributes; CompressedMatrix compressedMatrix;  the compressed matrix More...;  . Protected Attributes; SimplicialCholesky cholesky;  used to factorize the matrix and solve systems using Cholesky method, for symmetric positive definite matrices only. More...;  . Public Member Functions;  EigenBaseSparseMatrix (Index nbRow=0, Index nbCol=0);  ;  EigenBaseSparseMatrix (const ThisMatrix &m);  copy constructor More...;  ; void operator= (const ThisMatrix &m);  copy operator More...;  ; void set (Index i, Index j, double v) override;  Write the value of the element at row i, column j (using 0-based indices) More...;  ; void setIdentity ();  ; void add (Index row, Index col, double value) override;  Schedule the addition of the value at the given place. Scheduled additions must be finalized using function compress(). More...;  ; void beginRow (Index index);  ; void insertBack (Index row, Index col, Real value);  ; Real & coeffRef (Index i, In",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_base_sparse_matrix.html:1614,clear,clear,1614,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_base_sparse_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_base_sparse_matrix.html,1,['clear'],['clear']
Usability,"< VectorLikeType, std::enable_if_t< sofa::type::trait::is_vector< VectorLikeType >::value > > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::WriteAccessor< VectorLikeType, std::enable_if_t< sofa::type::trait::is_vector< VectorLikeType >::value > > Class Template Reference . #include <WriteAccessor.h>. Inheritance diagram for sofa::helper::WriteAccessor< VectorLikeType, std::enable_if_t< sofa::type::trait::is_vector< VectorLikeType >::value > >:. [legend]. Public Member Functions;  WriteAccessor (container_type &c);  ;  Public Member Functions inherited from sofa::helper::WriteAccessorVector< VectorLikeType >;  WriteAccessorVector (container_type &container);  ; bool empty () const;  ; Size size () const;  ; void reserve (Size s);  ; reference operator[] (Size pos);  ; const_reference operator[] (Size pos) const;  ; reference front ();  ; const_reference front () const;  ; reference back ();  ; const_reference back () const;  ; const_iterator begin () const;  ; iterator begin ();  ; const_iterator end () const;  ; iterator end ();  ; void clear ();  ; void resize (Size s);  ; iterator insert (const_iterator pos, const VectorLikeType &value);  ; iterator erase (iterator pos);  ; iterator erase (const_iterator pos);  ; void push_back (const value_type &v);  ; reference emplace_back (Args &&... args);  ; void pop_back ();  ;  operator container_type ();  ; container_type * operator-> ();  ; const_container_type * operator-> () const;  ; container_type & operator* ();  ; const_container_type & operator* () const;  ; container_type & wref ();  ;  operator const_container_type () const;  ; const container_type & ref () const;  this one duplicate operator* More...;  . Additional Inherited Members;  Protected Attributes inherited from sofa::helper::WriteAccessorVector< VectorLikeType >; container_type * vref;  . Constructor details. ◆ WriteAccessor(). template<",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_write_accessor_3_01_vector_like_type_00_01std_1_1enable__if__t_3_01sofa_6c8aa194fa59fde725aeccee4070f722.html:1210,clear,clear,1210,api/master/sofa/html/classsofa_1_1helper_1_1_write_accessor_3_01_vector_like_type_00_01std_1_1enable__if__t_3_01sofa_6c8aa194fa59fde725aeccee4070f722.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_write_accessor_3_01_vector_like_type_00_01std_1_1enable__if__t_3_01sofa_6c8aa194fa59fde725aeccee4070f722.html,1,['clear'],['clear']
Usability,"<typename T > . template<class Dest > . void sofa::linearalgebra::SparseMatrix< T >::addTo ; (; Dest * ; dest); const. inline . ◆ begin() [1/2]. template<typename T > . LineIterator sofa::linearalgebra::SparseMatrix< T >::begin ; (; ). inline . ◆ begin() [2/2]. template<typename T > . LineConstIterator sofa::linearalgebra::SparseMatrix< T >::begin ; (; ); const. inline . ◆ clear() [1/2]. template<typename T > . void sofa::linearalgebra::SparseMatrix< T >::clear ; (; ). inlineoverridevirtual . Reset all values to 0. ; Implements sofa::linearalgebra::BaseMatrix. ◆ clear() [2/2]. template<typename T > . void sofa::linearalgebra::SparseMatrix< T >::clear ; (; Index ; i, . Index ; j . ). inlineoverridevirtual . Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearCol(). template<typename T > . void sofa::linearalgebra::SparseMatrix< T >::clearCol ; (; Index ; j). inlineoverridevirtual . Reset the all values in column j to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRow(). template<typename T > . void sofa::linearalgebra::SparseMatrix< T >::clearRow ; (; Index ; i). inlineoverridevirtual . Reset all the values in row i to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRowCol(). template<typename T > . void sofa::linearalgebra::SparseMatrix< T >::clearRowCol ; (; Index ; i). inlineoverridevirtual . Reset the value of both row and column i to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ colSize(). template<typename T > . Index sofa::linearalgebra::SparseMatrix< T >::colSize ; (; void ; ); const. inlineoverridevirtual . Number of columns. ; Implements sofa::linearalgebra::BaseMatrix. ◆ element(). template<typename T > . SReal sofa::linearalgebra::SparseMatrix< T >::element ; (; Index ; i, . Index ; j . ); const. inlineoverridevirtual . Read the value of the element at row i, column j (using 0-based indices) ; Implements sofa::linearalgebra::BaseMatrix. ◆ end() [1/2]. template<typename T > . LineIterator sofa::linearalg",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_sparse_matrix.html:22041,clear,clearRow,22041,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_sparse_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_sparse_matrix.html,1,['clear'],['clearRow']
Usability,"> . sofa::component::constraint::projective::LinearVelocityProjectiveConstraint< TDataTypes >::LinearVelocityProjectiveConstraint. protected . ◆ ~LinearVelocityProjectiveConstraint(). template<class TDataTypes > . sofa::component::constraint::projective::LinearVelocityProjectiveConstraint< TDataTypes >::~LinearVelocityProjectiveConstraint. protectedvirtual . Function details. ◆ addIndex(). template<class TDataTypes > . void sofa::component::constraint::projective::LinearVelocityProjectiveConstraint< TDataTypes >::addIndex ; (; Index ; index). ◆ addKeyVelocity(). template<class TDataTypes > . void sofa::component::constraint::projective::LinearVelocityProjectiveConstraint< TDataTypes >::addKeyVelocity ; (; Real ; time, . Deriv ; movement . ). add a new key movement Parameters. time: the simulation time you want to set a movement (in sec) ; movement: the corresponding motion for instance, addKeyMovement(1.0, Deriv(5,0,0) ) will set a translation of 5 in x direction a time 1.0s . ◆ clearIndices(). template<class TDataTypes > . void sofa::component::constraint::projective::LinearVelocityProjectiveConstraint< TDataTypes >::clearIndices. methods to add/remove some indices, keyTimes, keyVelocity . ◆ clearKeyVelocities(). template<class TDataTypes > . void sofa::component::constraint::projective::LinearVelocityProjectiveConstraint< TDataTypes >::clearKeyVelocities. ◆ draw(). template<class TDataTypes > . void sofa::component::constraint::projective::LinearVelocityProjectiveConstraint< TDataTypes >::draw ; (; const core::visual::VisualParams * ; ). overridevirtual . Render internal data of this object, for debugging purposes. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ init(). template<class TDataTypes > . void sofa::component::constraint::projective::LinearVelocityProjectiveConstraint< TDataTypes >::init ; (; void ; ). overridevirtual . – Constraint interface ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ projectJacobianMatrix(). template<class ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_linear_velocity_projective_constraint.html:23111,clear,clearIndices,23111,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_linear_velocity_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_linear_velocity_projective_constraint.html,1,['clear'],['clearIndices']
Usability,"> . void sofa::component::mapping::nonlinear::RigidMapping< TIn, TOut >::buildGeometricStiffnessMatrix ; (; sofa::core::GeometricStiffnessMatrix * ; matrices). overridevirtual . Assembles the geometric stiffness matrix of the mapping in the provided matrix object. ; The geometric stiffness is defined as dJ^T/dx * outForce, where outForce is the forces applying on the output of the mapping, J is the jacobian matrix of the mapping and x is the position of the input of the mapping.; Inside the method, outForce is retrieved, while dJ^T/dx and its product with outForce must be computed.; Note that dJ^T/dx is null for linear mappings, meaning that the method can remain empty.; The geometric stiffness is a term that must be added into the global mechanical matrix.; Parameters. matricesThe matrix to fill in with the geometric stiffness of the mapping . Reimplemented from sofa::core::BaseMapping. ◆ clear(). template<class TIn , class TOut > . void sofa::component::mapping::nonlinear::RigidMapping< TIn, TOut >::clear ; (; sofa::Size ; reserve = 0). ◆ draw(). template<class TIn , class TOut > . void sofa::component::mapping::nonlinear::RigidMapping< TIn, TOut >::draw ; (; const core::visual::VisualParams * ; ). overridevirtual . Render internal data of this object, for debugging purposes. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ getGlobalToLocalCoords() [1/2]. void sofa::component::mapping::nonlinear::RigidMapping< Rigid3Types, Rigid3Types >::getGlobalToLocalCoords ; (; OutCoord & ; result, . const InCoord & ; xFrom, . const OutCoord & ; xTo . ). ◆ getGlobalToLocalCoords() [2/2]. template<class TIn , class TOut > . void sofa::component::mapping::nonlinear::RigidMapping< TIn, TOut >::getGlobalToLocalCoords ; (; OutCoord & ; result, . const InCoord & ; xfrom, . const OutCoord & ; xto . ). ◆ getJ(). template<class TIn , class TOut > . const sofa::linearalgebra::BaseMatrix * sofa::component::mapping::nonlinear::RigidMapping< TIn, TOut >::getJ. overridevirtual . R",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_rigid_mapping.html:30726,clear,clear,30726,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_rigid_mapping.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_rigid_mapping.html,1,['clear'],['clear']
Usability,"> sofa::gui::qt::GraphVisitor::visitorsTimeMax. protected . ◆ visitorsTimeTotal. std::vector< dataTime > sofa::gui::qt::GraphVisitor::visitorsTimeTotal. protected . ◆ window. WindowVisitor* sofa::gui::qt::GraphVisitor::window. protected . Constructor details. ◆ GraphVisitor(). sofa::gui::qt::GraphVisitor::GraphVisitor ; (; WindowVisitor * ; w). inline . Function details. ◆ addComment(). QTreeWidgetItem * sofa::gui::qt::GraphVisitor::addComment ; (; QTreeWidgetItem * ; element, . QTreeWidgetItem * ; elementAbove, . std::string ; comment . ). ◆ addInformation(). void sofa::gui::qt::GraphVisitor::addInformation ; (; QTreeWidgetItem * ; element, . std::string ; name, . std::string ; info . ). ◆ addNode(). QTreeWidgetItem * sofa::gui::qt::GraphVisitor::addNode ; (; QTreeWidgetItem * ; parent, . QTreeWidgetItem * ; elementAbove, . std::string ; info . ). ◆ addTime(). void sofa::gui::qt::GraphVisitor::addTime ; (; QTreeWidgetItem * ; element, . std::string ; info . ). ◆ clear(). void sofa::gui::qt::GraphVisitor::clear ; (; ). inline . ◆ getTime(). double sofa::gui::qt::GraphVisitor::getTime ; (; const tinyxml2::XMLAttribute * ; attribute); const. inline . ◆ getTotalTime(). double sofa::gui::qt::GraphVisitor::getTotalTime ; (; tinyxml2::XMLNode * ; node); const. ◆ load(). bool sofa::gui::qt::GraphVisitor::load ; (; std::string & ; file). ◆ openAttribute(). void sofa::gui::qt::GraphVisitor::openAttribute ; (; tinyxml2::XMLElement * ; element, . QTreeWidgetItem * ; item . ). protected . ◆ openNode(). QTreeWidgetItem * sofa::gui::qt::GraphVisitor::openNode ; (; tinyxml2::XMLNode * ; node, . QTreeWidgetItem * ; parent, . QTreeWidgetItem * ; elementAbove . ). protected . ◆ openTime(). void sofa::gui::qt::GraphVisitor::openTime ; (; tinyxml2::XMLNode * ; element, . QTreeWidgetItem * ; item . ). protected . ◆ setGraph(). void sofa::gui::qt::GraphVisitor::setGraph ; (; QTreeWidget * ; g). inline . sofaguiqtGraphVisitor; Generated on Mon Nov 11 2024 03:23:42 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_graph_visitor.html:3781,clear,clear,3781,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_graph_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_graph_visitor.html,1,['clear'],['clear']
Usability,">, MechanicalState< DataTypes1 >, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > mstate1;  ; SingleLink< PairStateAccessor< DataTypes1, DataTypes2 >, MechanicalState< DataTypes2 >, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > mstate2;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(UnilateralLagrangianConstraint, DataTypes), SOFA_TEMPLATE(core::behavior::PairInteractionConstraint, DataTypes));  ; void setCustomTolerance (SReal tol);  ; void clear (int reserve=0);  ; virtual void addContact (SReal mu, Deriv norm, Coord P, Coord Q, Real contactDistance, int m1, int m2, Coord Pfree, Coord Qfree, long id=0, PersistentID localid=0);  ; void addContact (SReal mu, Deriv norm, Coord P, Coord Q, Real contactDistance, int m1, int m2, long id=0, PersistentID localid=0);  ; void addContact (SReal mu, Deriv norm, Real contactDistance, int m1, int m2, long id=0, PersistentID localid=0);  ; void buildConstraintMatrix (const core::ConstraintParams *cParams, DataMatrixDeriv &c1, DataMatrixDeriv &c2, unsigned int &cIndex, const DataVecCoord &x1, const DataVecCoord &x2) override;  ; void getConstraintViolation (const core::ConstraintParams *cParams, linearalgebra::BaseVector *v, const DataVecCoord &x1, const DataVecCoord &x2, const DataVecDeriv &v1, const DataVecDeriv &v2) override;  ; void getConstraintInfo (const core::ConstraintParams *cParams, VecConstraintBlockInfo &blocks, VecPersistentID &ids, VecConstCoord &positions, VecConstDeriv &directions, VecConstArea &areas) override;  ; void getConstraintResolution (const core::ConstraintParams *, std::vector< core::behavior::ConstraintResolution * > &resTab, unsigned int &offset) override;  ; bool isActive () const override;  if false, the constraint does nothing More...;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ;  Public Member Functions inherited from sofa::core::behavior::PairInteractionConstraint< DataTypes >;  SOF",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_unilateral_lagrangian_constraint.html:4209,clear,clear,4209,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_unilateral_lagrangian_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_unilateral_lagrangian_constraint.html,1,['clear'],['clear']
Usability,">, including all inherited members. Block typedefsofa::linearalgebra::matrix_bloc_traits< defaulttype::RigidDeriv< N, T >, IndexType >; BlockTranspose typedefsofa::linearalgebra::matrix_bloc_traits< defaulttype::RigidDeriv< N, T >, IndexType >; clear(Block &b)sofa::linearalgebra::matrix_bloc_traits< defaulttype::RigidDeriv< N, T >, IndexType >inlinestatic; empty(const Block &b)sofa::linearalgebra::matrix_bloc_traits< defaulttype::RigidDeriv< N, T >, IndexType >inlinestatic; getElementType()sofa::linearalgebra::matrix_bloc_traits< defaulttype::RigidDeriv< N, T >, IndexType >inlinestatic; Name()sofa::linearalgebra::matrix_bloc_traits< defaulttype::RigidDeriv< N, T >, IndexType >inlinestatic; NC enum valuesofa::linearalgebra::matrix_bloc_traits< defaulttype::RigidDeriv< N, T >, IndexType >; NL enum valuesofa::linearalgebra::matrix_bloc_traits< defaulttype::RigidDeriv< N, T >, IndexType >; Real typedefsofa::linearalgebra::matrix_bloc_traits< defaulttype::RigidDeriv< N, T >, IndexType >; subBlock(const Block &b, IndexType row, IndexType col, TSubBlock &subBlock)sofa::linearalgebra::matrix_bloc_traits< defaulttype::RigidDeriv< N, T >, IndexType >inlinestatic; transpose(BlockTranspose &res, const Block &b)sofa::linearalgebra::matrix_bloc_traits< defaulttype::RigidDeriv< N, T >, IndexType >inlinestatic; transposed(const Block &b)sofa::linearalgebra::matrix_bloc_traits< defaulttype::RigidDeriv< N, T >, IndexType >inlinestatic; v(const Block &b, int, int col)sofa::linearalgebra::matrix_bloc_traits< defaulttype::RigidDeriv< N, T >, IndexType >inlinestatic; v(Block &b, int, int col)sofa::linearalgebra::matrix_bloc_traits< defaulttype::RigidDeriv< N, T >, IndexType >inlinestatic; vadd(Block &b, int, int col, Real v)sofa::linearalgebra::matrix_bloc_traits< defaulttype::RigidDeriv< N, T >, IndexType >inlinestatic; vset(Block &b, int, int col, Real v)sofa::linearalgebra::matrix_bloc_traits< defaulttype::RigidDeriv< N, T >, IndexType >inlinestatic. Generated on Mon Nov 11 2024 03:31",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1matrix__bloc__traits_3_01defaulttype_1_1_rigid_deriv_3_01_n_00_01_11f9f74aaa4765f4ea367a642067a7f0.html:570,clear,clear,570,api/master/sofa/html/classsofa_1_1linearalgebra_1_1matrix__bloc__traits_3_01defaulttype_1_1_rigid_deriv_3_01_n_00_01_11f9f74aaa4765f4ea367a642067a7f0.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1matrix__bloc__traits_3_01defaulttype_1_1_rigid_deriv_3_01_n_00_01_11f9f74aaa4765f4ea367a642067a7f0.html,1,['clear'],['clear']
Usability,">, sofa::linearalgebra::CompressedRowSparseMatrixMechanical< sofa::type::Mat< NL, NC, MReal > >, sofa::linearalgebra::CompressedRowSparseMatrixMechanical< MReal >, sofa::linearalgebra::CompressedRowSparseMatrixMechanical< Real >, sofa::linearalgebra::BTDMatrix< N, T >, sofa::linearalgebra::BlockFullMatrix< N, T >, sofa::linearalgebra::BlockDiagonalMatrix< LC, T >, sofa::linearalgebra::EigenBaseSparseMatrix< TReal >, sofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >, and sofa::linearalgebra::EigenBaseSparseMatrix< typename DataTypes::Real >. ◆ clearCols(). virtual void sofa::linearalgebra::BaseMatrix::clearCols ; (; Index ; imin, . Index ; imax . ). inlinevirtual . Clears all the values in columns imin to imax-1. ; Reimplemented in sofa::linearalgebra::EigenBaseSparseMatrix< TReal >, sofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >, and sofa::linearalgebra::EigenBaseSparseMatrix< typename DataTypes::Real >. ◆ clearRow(). virtual void sofa::linearalgebra::BaseMatrix::clearRow ; (; Index ; i). inlinevirtual . Reset all the values in row i to 0. ; Reimplemented in sofa::linearalgebra::SparseMatrix< T >, sofa::linearalgebra::SparseMatrix< SReal >, sofa::linearalgebra::SparseMatrix< Real >, sofa::linearalgebra::FullMatrix< T >, sofa::linearalgebra::FullMatrix< typename Vector::Real >, sofa::linearalgebra::FullMatrix< Real >, sofa::linearalgebra::EigenBaseSparseMatrix< TReal >, sofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >, sofa::linearalgebra::EigenBaseSparseMatrix< typename DataTypes::Real >, sofa::linearalgebra::DiagonalMatrix< T >, sofa::linearalgebra::DiagonalMatrix< R1 >, sofa::linearalgebra::DiagonalMatrix< R2 >, sofa::linearalgebra::CompressedRowSparseMatrixMechanical< sofa::type::Mat< NL, NC, MReal > >, sofa::linearalgebra::CompressedRowSparseMatrixMechanical< MReal >, sofa::linearalgebra::CompressedRowSparseMatrixMechanical< Real >, sofa::linearalgebra::BTDMatrix< N, T >, sofa::linearalgebra::BlockFullMatrix< N, T",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_matrix.html:37149,clear,clearRow,37149,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_matrix.html,1,['clear'],['clearRow']
Usability,">, sofa::linearalgebra::DiagonalMatrix< R2 >, sofa::linearalgebra::CompressedRowSparseMatrixMechanical< sofa::type::Mat< NL, NC, MReal > >, sofa::linearalgebra::CompressedRowSparseMatrixMechanical< MReal >, sofa::linearalgebra::CompressedRowSparseMatrixMechanical< Real >, sofa::linearalgebra::BTDMatrix< N, T >, sofa::linearalgebra::BlockFullMatrix< N, T >, sofa::linearalgebra::BlockDiagonalMatrix< LC, T >, sofa::linearalgebra::EigenBaseSparseMatrix< TReal >, sofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >, and sofa::linearalgebra::EigenBaseSparseMatrix< typename DataTypes::Real >. ◆ clearCols(). virtual void sofa::linearalgebra::BaseMatrix::clearCols ; (; Index ; imin, . Index ; imax . ). inlinevirtual . Clears all the values in columns imin to imax-1. ; Reimplemented in sofa::linearalgebra::EigenBaseSparseMatrix< TReal >, sofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >, and sofa::linearalgebra::EigenBaseSparseMatrix< typename DataTypes::Real >. ◆ clearRow(). virtual void sofa::linearalgebra::BaseMatrix::clearRow ; (; Index ; i). inlinevirtual . Reset all the values in row i to 0. ; Reimplemented in sofa::linearalgebra::SparseMatrix< T >, sofa::linearalgebra::SparseMatrix< SReal >, sofa::linearalgebra::SparseMatrix< Real >, sofa::linearalgebra::FullMatrix< T >, sofa::linearalgebra::FullMatrix< typename Vector::Real >, sofa::linearalgebra::FullMatrix< Real >, sofa::linearalgebra::EigenBaseSparseMatrix< TReal >, sofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >, sofa::linearalgebra::EigenBaseSparseMatrix< typename DataTypes::Real >, sofa::linearalgebra::DiagonalMatrix< T >, sofa::linearalgebra::DiagonalMatrix< R1 >, sofa::linearalgebra::DiagonalMatrix< R2 >, sofa::linearalgebra::CompressedRowSparseMatrixMechanical< sofa::type::Mat< NL, NC, MReal > >, sofa::linearalgebra::CompressedRowSparseMatrixMechanical< MReal >, sofa::linearalgebra::CompressedRowSparseMatrixMechanical< Real >, sofa::linearalgebra::BTDMatrix< N, T >,",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_matrix.html:37091,clear,clearRow,37091,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_matrix.html,1,['clear'],['clearRow']
Usability,">. Inheritance diagram for sofa::core::behavior::ListMassMatrixAccumulator:. [legend]. Additional Inherited Members;  Public Member Functions inherited from sofa::core::ListMatrixAccumulator< MassMatrixAccumulator >; void push_back (MassMatrixAccumulator *m);  ; void remove (MassMatrixAccumulator *m);  ; bool empty () const;  ; void clear () override;  ; InternalListMatrixAccumulator::size_type size () const;  ; void add (sofa::SignedIndex i, sofa::SignedIndex j, float value) override;  ; void add (sofa::SignedIndex i, sofa::SignedIndex j, double value) override;  ; void add (sofa::SignedIndex i, sofa::SignedIndex j, const sofa::type::Mat3x3f &value) override;  ; void add (sofa::SignedIndex i, sofa::SignedIndex j, const sofa::type::Mat3x3d &value) override;  ; const InternalListMatrixAccumulator & getAccumulators () const;  ;  Public Member Functions inherited from sofa::core::MatrixAccumulatorInterface; virtual ~MatrixAccumulatorInterface ()=default;  ; virtual void add (sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 1, 1, float > &value);  ; virtual void add (sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 1, 1, double > &value);  ; virtual void add (sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 2, 2, float > &value);  ; virtual void add (sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 2, 2, double > &value);  ; virtual void add (sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 6, 6, float > &value);  ; virtual void add (sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 6, 6, double > &value);  ; template<sofa::Size L, sofa::Size C, class real > ; void matAdd (sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< L, C, real > &value);  ; virtual void setIndexCheckerStrategy (std::shared_ptr< matrixaccumulator::IndexVerificationStrategy >);  . sofacorebehaviorListMassMatrixAccumulator; Generated on Mon Nov 11 2024 03:15:04 for ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_list_mass_matrix_accumulator.html:606,clear,clear,606,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_list_mass_matrix_accumulator.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_list_mass_matrix_accumulator.html,1,['clear'],['clear']
Usability,">. ◆ computeWrench(). virtual void sofa::component::haptics::ForceFeedback::computeWrench ; (; const sofa::type::Transform< SReal > & ; , . const sofa::type::SpatialVector< SReal > & ; , . sofa::type::SpatialVector< SReal > & ;  . ). pure virtual . Implemented in sofa::component::haptics::NullForceFeedback, sofa::component::haptics::LCPForceFeedback< TDataTypes >, sofa::component::haptics::LCPForceFeedback< TDataTypes >, sofa::component::haptics::LCPForceFeedback< TDataTypes >, sofa::component::haptics::NullForceFeedbackT< TDataTypes >, and sofa::component::haptics::MechanicalStateForceFeedback< TDataTypes >. ◆ init(). void sofa::component::haptics::ForceFeedback::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject.; Reimplemented in sofa::component::haptics::NullForceFeedbackT< TDataTypes >, sofa::component::haptics::NullForceFeedback, sofa::component::haptics::MechanicalStateForceFeedback< TDataTypes >, and sofa::component::haptics::LCPForceFeedback< TDataTypes >. ◆ isEnabled(). bool sofa::component::haptics::ForceFeedback::isEnabled ; (; ). virtual . ◆ setLock(). virtual void sofa::component::haptics::ForceFeedback::setLock ; (; bool ; value). inlinevirtual . Abstract method to lock or unlock the force feedback computation. To be implemented by child class if needed. ; Reimplemented in sofa::component::haptics::LCPForceFeedback< TDataTypes >. ◆ setReferencePosition(). void sofa::component::haptics::ForceFeedback::setReferencePosition ; (; sofa::type::Transform< SReal > & ; referencePosition). virtual . Reimplemented in sofa::component::haptics::MechanicalStateForceFeedback< TDataTypes >. ◆ SOFA_ABSTRACT_CLASS(). sofa::component::haptics::ForceFeedback::SOFA_ABSTRACT_CLASS ; (; ForceFeedback ; , . core::behavior::BaseController ;  . ). sofacomponenthapticsForceFeedback; Generated on Mon Nov 11 2024 02:46:05 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_force_feedback.html:16265,feedback,feedback,16265,api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_force_feedback.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_force_feedback.html,1,['feedback'],['feedback']
Usability,">::Block & sofa::linearalgebra::BTDMatrix< N, T >::bloc ; (; Index ; bi, . Index ; bj . ). ◆ bloc() [2/2]. template<std::size_t N, typename T > . const BTDMatrix< N, T >::Block & sofa::linearalgebra::BTDMatrix< N, T >::bloc ; (; Index ; bi, . Index ; bj . ); const. ◆ clear() [1/2]. template<std::size_t N, typename T > . void sofa::linearalgebra::BTDMatrix< N, T >::clear ; (; ). overridevirtual . Reset all values to 0. ; Implements sofa::linearalgebra::BaseMatrix. ◆ clear() [2/2]. template<std::size_t N, typename T > . void sofa::linearalgebra::BTDMatrix< N, T >::clear ; (; Index ; i, . Index ; j . ). overridevirtual . Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearCol(). template<std::size_t N, typename T > . void sofa::linearalgebra::BTDMatrix< N, T >::clearCol ; (; Index ; j). overridevirtual . Reset the all values in column j to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRow(). template<std::size_t N, typename T > . void sofa::linearalgebra::BTDMatrix< N, T >::clearRow ; (; Index ; i). overridevirtual . Reset all the values in row i to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRowCol(). template<std::size_t N, typename T > . void sofa::linearalgebra::BTDMatrix< N, T >::clearRowCol ; (; Index ; i). overridevirtual . Reset the value of both row and column i to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ colSize(). template<std::size_t N, typename T > . BTDMatrix< N, T >::Index sofa::linearalgebra::BTDMatrix< N, T >::colSize ; (; void ; ); const. overridevirtual . Number of columns. ; Implements sofa::linearalgebra::BaseMatrix. ◆ element(). template<std::size_t N, typename T > . SReal sofa::linearalgebra::BTDMatrix< N, T >::element ; (; Index ; i, . Index ; j . ); const. overridevirtual . Read the value of the element at row i, column j (using 0-based indices) ; Implements sofa::linearalgebra::BaseMatrix. ◆ getAlignedSubMatrix(). template<std::size_t N, typename T > . template<class B > . void sofa",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_b_t_d_matrix.html:17843,clear,clearRow,17843,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_b_t_d_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_b_t_d_matrix.html,1,['clear'],['clearRow']
Usability,">::RigidDeriv ; (; ). inlineconstexpr . ◆ RigidDeriv() [2/6]. template<typename real > . constexpr sofa::defaulttype::RigidDeriv< 3, real >::RigidDeriv ; (; type::NoInit ; ). inlineexplicitconstexpr . ◆ RigidDeriv() [3/6]. template<typename real > . constexpr sofa::defaulttype::RigidDeriv< 3, real >::RigidDeriv ; (; const Vec3 & ; velCenter, . const Vec3 & ; velOrient . ). inlineconstexpr . ◆ RigidDeriv() [4/6]. template<typename real > . template<typename real2 > . constexpr sofa::defaulttype::RigidDeriv< 3, real >::RigidDeriv ; (; const RigidDeriv< 3, real2 > & ; c). inlineconstexpr . ◆ RigidDeriv() [5/6]. template<typename real > . template<typename real2 > . constexpr sofa::defaulttype::RigidDeriv< 3, real >::RigidDeriv ; (; const type::Vec< 6, real2 > & ; v). inlineconstexpr . ◆ RigidDeriv() [6/6]. template<typename real > . template<typename real2 > . constexpr sofa::defaulttype::RigidDeriv< 3, real >::RigidDeriv ; (; const real2 * ; ptr). inlineconstexpr . Function details. ◆ clear(). template<typename real > . constexpr void sofa::defaulttype::RigidDeriv< 3, real >::clear ; (; ). inlineconstexpr . ◆ getAngular() [1/2]. template<typename real > . constexpr Vec3& sofa::defaulttype::RigidDeriv< 3, real >::getAngular ; (; ). inlineconstexpr . ◆ getAngular() [2/2]. template<typename real > . constexpr const Vec3& sofa::defaulttype::RigidDeriv< 3, real >::getAngular ; (; ); const. inlineconstexpr . ◆ getLinear() [1/2]. template<typename real > . constexpr Vec3& sofa::defaulttype::RigidDeriv< 3, real >::getLinear ; (; ). inlineconstexpr . ◆ getLinear() [2/2]. template<typename real > . constexpr const Vec3& sofa::defaulttype::RigidDeriv< 3, real >::getLinear ; (; ); const. inlineconstexpr . ◆ getVAll(). template<typename real > . constexpr VecAll sofa::defaulttype::RigidDeriv< 3, real >::getVAll ; (; ); const. inlineconstexpr . ◆ getVCenter() [1/2]. template<typename real > . constexpr Vec3& sofa::defaulttype::RigidDeriv< 3, real >::getVCenter ; (; ). inlineconstexp",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1defaulttype_1_1_rigid_deriv_3_013_00_01real_01_4.html:5365,clear,clear,5365,api/master/sofa/html/classsofa_1_1defaulttype_1_1_rigid_deriv_3_013_00_01real_01_4.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1defaulttype_1_1_rigid_deriv_3_013_00_01real_01_4.html,1,['clear'],['clear']
Usability,">::clearCol ; (; Index ; col). inlineoverridevirtual . Clears the all the entries of column imin to column imax-1. Not efficient ! ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearCols(). template<class TReal > . void sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::clearCols ; (; Index ; imin, . Index ; imax . ). inlineoverridevirtual . Set all the entries of column i and of row i to 0. Not efficient ! ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRow(). template<class TReal > . void sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::clearRow ; (; Index ; i). inlineoverridevirtual . Set all the entries of a row to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRowCol(). template<class TReal > . void sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::clearRowCol ; (; Index ; i). inlineoverridevirtual . Clears all the entries of rows imin to imax-1 and columns imin to imax-1. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRows(). template<class TReal > . void sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::clearRows ; (; Index ; imin, . Index ; imax . ). inlineoverridevirtual . Set all the entries of rows imin to imax-1 to 0. ; Set all the entries of a column to 0. Not efficient ! ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRowsCols(). template<class TReal > . void sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::clearRowsCols ; (; Index ; imin, . Index ; imax . ). inlineoverridevirtual . Clears all the values in rows imin to imax-1 and columns imin to imax-1. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ coeffRef(). template<class TReal > . Real& sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::coeffRef ; (; Index ; i, . Index ; j . ). inline . Return a reference to the given entry in the compressed matrix.There can (must ?) be a value at this place already. Efficient only if the it is at the last place of the compressed matrix. . ◆ colSize(). template<class TRea",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_base_sparse_matrix.html:20718,clear,clearRows,20718,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_base_sparse_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_base_sparse_matrix.html,1,['clear'],['clearRows']
Usability,">::m_x0. ◆ m_x1. template<class DataTypes > . sofa::core::objectmodel::RenamedData<Vec3R> sofa::component::constraint::projective::HermiteSplineProjectiveConstraint< DataTypes >::m_x1. Constructor details. ◆ HermiteSplineProjectiveConstraint(). template<class DataTypes > . sofa::component::constraint::projective::HermiteSplineProjectiveConstraint< DataTypes >::HermiteSplineProjectiveConstraint ; (; core::behavior::MechanicalState< DataTypes > * ; mstate = nullptr). explicitprotected . ◆ ~HermiteSplineProjectiveConstraint(). template<class DataTypes > . sofa::component::constraint::projective::HermiteSplineProjectiveConstraint< DataTypes >::~HermiteSplineProjectiveConstraint. protected . Function details. ◆ addConstraint(). template<class DataTypes > . void sofa::component::constraint::projective::HermiteSplineProjectiveConstraint< DataTypes >::addConstraint ; (; unsigned ; index). ◆ clearConstraints(). template<class DataTypes > . void sofa::component::constraint::projective::HermiteSplineProjectiveConstraint< DataTypes >::clearConstraints. ◆ computeDerivateHermiteCoefs(). template<class DataTypes > . void sofa::component::constraint::projective::HermiteSplineProjectiveConstraint< DataTypes >::computeDerivateHermiteCoefs ; (; const Real ; u, . Real & ; dH00, . Real & ; dH10, . Real & ; dH01, . Real & ; dH11 . ). ◆ computeHermiteCoefs(). template<class DataTypes > . void sofa::component::constraint::projective::HermiteSplineProjectiveConstraint< DataTypes >::computeHermiteCoefs ; (; const Real ; u, . Real & ; H00, . Real & ; H10, . Real & ; H01, . Real & ; H11 . ). ◆ draw(). template<class DataTypes > . void sofa::component::constraint::projective::HermiteSplineProjectiveConstraint< DataTypes >::draw ; (; const core::visual::VisualParams * ; ). overridevirtual . Render internal data of this object, for debugging purposes. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ getBeginTime(). template<class DataTypes > . Real sofa::component::constraint::projecti",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_hermite_spline_projective_constraint.html:25194,clear,clearConstraints,25194,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_hermite_spline_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_hermite_spline_projective_constraint.html,1,['clear'],['clearConstraints']
Usability,">virtual; ProjectiveConstraintSet< TDataTypes >::projectPosition(const MechanicalParams *mparams, MultiVecCoordId xId) overridesofa::core::behavior::ProjectiveConstraintSet< TDataTypes >virtual; projectResponse(const core::MechanicalParams *mparams, DataVecDeriv &resData) overridesofa::component::constraint::projective::LinearMovementProjectiveConstraint< TDataTypes >virtual; ProjectiveConstraintSet< TDataTypes >::projectResponse(const MechanicalParams *mparams, MultiVecDerivId dxId) overridesofa::core::behavior::ProjectiveConstraintSet< TDataTypes >virtual; ProjectiveConstraintSet< TDataTypes >::projectResponse(const MechanicalParams *mparams, MultiVecDerivId dxId)=0sofa::core::behavior::ProjectiveConstraintSet< TDataTypes >; sofa::core::behavior::BaseProjectiveConstraintSet::projectResponse(const MechanicalParams *, double **)sofa::core::behavior::BaseProjectiveConstraintSetinlinevirtual; projectResponseT(DataDeriv &dx, const std::function< void(DataDeriv &, const unsigned int)> &clear)sofa::component::constraint::projective::LinearMovementProjectiveConstraint< TDataTypes >protected; projectVelocity(const core::MechanicalParams *mparams, DataVecDeriv &vData) overridesofa::component::constraint::projective::LinearMovementProjectiveConstraint< TDataTypes >virtual; ProjectiveConstraintSet< TDataTypes >::projectVelocity(const MechanicalParams *mparams, MultiVecDerivId vId) overridesofa::core::behavior::ProjectiveConstraintSet< TDataTypes >virtual; Ptr typedefsofa::core::objectmodel::Base; Real typedefsofa::component::constraint::projective::LinearMovementProjectiveConstraint< TDataTypes >; reinit()sofa::core::objectmodel::BaseObjectvirtual; removeData(BaseData *f)sofa::core::objectmodel::Base; removeIndex(Index index)sofa::component::constraint::projective::LinearMovementProjectiveConstraint< TDataTypes >; removeInNode(objectmodel::BaseNode *node) overridesofa::core::behavior::BaseProjectiveConstraintSetvirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_linear_movement_projective_constraint-members.html:15782,clear,clear,15782,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_linear_movement_projective_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_linear_movement_projective_constraint-members.html,1,['clear'],['clear']
Usability,">virtual; ProjectiveConstraintSet< TDataTypes >::projectPosition(const MechanicalParams *mparams, MultiVecCoordId xId) overridesofa::core::behavior::ProjectiveConstraintSet< TDataTypes >virtual; projectResponse(const core::MechanicalParams *mparams, DataVecDeriv &resData) overridesofa::component::constraint::projective::SkeletalMotionProjectiveConstraint< TDataTypes >virtual; ProjectiveConstraintSet< TDataTypes >::projectResponse(const MechanicalParams *mparams, MultiVecDerivId dxId) overridesofa::core::behavior::ProjectiveConstraintSet< TDataTypes >virtual; ProjectiveConstraintSet< TDataTypes >::projectResponse(const MechanicalParams *mparams, MultiVecDerivId dxId)=0sofa::core::behavior::ProjectiveConstraintSet< TDataTypes >; sofa::core::behavior::BaseProjectiveConstraintSet::projectResponse(const MechanicalParams *, double **)sofa::core::behavior::BaseProjectiveConstraintSetinlinevirtual; projectResponseT(DataDeriv &dx, const std::function< void(DataDeriv &, const unsigned int)> &clear)sofa::component::constraint::projective::SkeletalMotionProjectiveConstraint< TDataTypes >protected; projectVelocity(const core::MechanicalParams *, DataVecDeriv &vData) overridesofa::component::constraint::projective::SkeletalMotionProjectiveConstraint< TDataTypes >virtual; ProjectiveConstraintSet< TDataTypes >::projectVelocity(const MechanicalParams *mparams, MultiVecDerivId vId) overridesofa::core::behavior::ProjectiveConstraintSet< TDataTypes >virtual; Ptr typedefsofa::core::objectmodel::Base; Real typedefsofa::component::constraint::projective::SkeletalMotionProjectiveConstraint< TDataTypes >; reinit()sofa::core::objectmodel::BaseObjectvirtual; removeData(BaseData *f)sofa::core::objectmodel::Base; removeInNode(objectmodel::BaseNode *node) overridesofa::core::behavior::BaseProjectiveConstraintSetvirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset() overridesofa::component::constraint::projective:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_skeletal_motion_projective_constraint-members.html:14551,clear,clear,14551,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_skeletal_motion_projective_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_skeletal_motion_projective_constraint-members.html,1,['clear'],['clear']
Usability,A – Registration. SOFA – SOFA Week 2024. /technical-committee-7; ; SOFA – Technical Committee #7. /technical-committees; . /registration; ; SOFA – Registration. SOFA – Technical Committees. stc11; ; SOFA – STC#11. stc9; . /live; ; SOFA – Live. SOFA – STC#9 meeting. wp-content; . /plugins; . /bbpress; . /templates; . /default; . /css; ; bbpress.min.css. /js; ; editor.min.js; engagements.min.js. /cf7-conditional-fields; . /js; ; scripts.js. style.css. /cleantalk-spam-protect; . /css; . /images; ; bad_email.svg; good_email.svg. cleantalk-email-decoder.min.css; cleantalk-public.min.css. /js; ; apbct-public-bundle.min.js. /contact-form-7; . /includes; . /css; ; styles.css. /js; ; index.js. /swv; . /js; ; index.js. /revslider; . /rs-plugin; . /css; ; settings.css. /font; ; revicons.eot; revicons.svg; revicons.ttf; revicons.woff. /js; ; jquery.themepunch.revolution.min.js; jquery.themepunch.tools.min.js. /wpcf7-recaptcha; . /assets; . /js; ; wpcf7-recaptcha-controls.js. /wp-logo-showcase-responsive-slider-slider; . /assets; . /css; ; slick.css; wpls-public.css. /js; ; slick.min.js; wpls-public.js. /sofaGraph; ; controller.js; functions.js; style.css. /themes; . /inovado; . /framework; . /css; . /font; ; fontawesome-webfont-1.eot; fontawesome-webfont.eot; fontawesome-webfont.ttf; fontawesome-webfont.woff. custom_script.css; flexslider.css; headers.css; prettyPhoto.css; responsive.css; retina.css; shortcodes.css. /js; . /twitter; ; jquery.tweet.js. bootstrap.js; easing.js; fitvids.js; flexslider.js; functions.js; isotope.js; mobilemenu.js; prettyPhoto.js; shortcodes.js; superfish.js; waypoints.js; waypoints-sticky.js. style.css. /inovado_child; ; style.css. /uploads; . /2016; . /08; ; 2-Tutorial.pdf. /2017; . /04; ; STC3-Report.pdf. /2018; . /07; ; STC1-Report.pdf; STC2-Report.pdf; STC4-Report.pdf; STC5-Report.pdf. /11; ; SOFA-SymposiumProgram-2018.pdf. /12; ; STC6-Report.pdf. /2019; . /06; ; STC7-Report.pdf. /11; ; FrenchTechCentral_Plan_FR.pdf; SOFA-SymposiumProgram-2019.p,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:587332,responsiv,responsive-slider-slider,587332,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['responsiv'],['responsive-slider-slider']
Usability,A. SOFA - Topic Tag: event. /events; . /feed; ; events – SOFA. SOFA - Topic Tag: events. /execution-time; . /feed; ; Execution time – SOFA. SOFA - Topic Tag: Execution time. /experience; . /feed; ; experience – SOFA. SOFA - Topic Tag: experience. /export; . /feed; ; export – SOFA. SOFA - Topic Tag: export. /exporter-obj-files-normals-estimation; . /feed; ; exporter ; OBJ files ; normals estimation – SOFA. SOFA - Topic Tag: exporter ; OBJ files ; normals estimation. /export-mesh; . /feed; ; export mesh – SOFA. SOFA - Topic Tag: export mesh. /external; . /feed; ; external – SOFA. SOFA - Topic Tag: external. /external-data-com-port; . /feed; ; external data COM port – SOFA. SOFA - Topic Tag: external data COM port. /extraction-of-the-equation; . /feed; ; Extraction of the equation – SOFA. SOFA - Topic Tag: Extraction of the equation. /features; . /feed; ; Features – SOFA. SOFA - Topic Tag: Features. /fedora-64-bits; . /feed; ; Fedora 64 bits – SOFA. SOFA - Topic Tag: Fedora 64 bits. /feedback; . /feed; ; Feedback – SOFA. SOFA - Topic Tag: Feedback. /fem; . /feed; ; FEM – SOFA. SOFA - Topic Tag: FEM. /fem-model-for-flat-element; . /feed; ; FEM model for flat element – SOFA. SOFA - Topic Tag: FEM model for flat element. /ffmpeg; . /feed; ; FFMPEG – SOFA. SOFA - Topic Tag: FFMPEG. /fibers; . /feed; ; fibers – SOFA. SOFA - Topic Tag: fibers. /final; . /feed; ; final – SOFA. SOFA - Topic Tag: final. /finite-element-method; . /feed; ; finite element method – SOFA. SOFA - Topic Tag: finite element method. /fisheye-camera; . /feed; ; fisheye camera – SOFA. SOFA - Topic Tag: fisheye camera. /fix; . /feed; ; fix – SOFA. SOFA - Topic Tag: fix. /fixedconstraint; . /feed; ; FixedConstraint – SOFA. SOFA - Topic Tag: FixedConstraint. /fixed-constraint; . /feed; ; fixed constraint – SOFA. SOFA - Topic Tag: fixed constraint. /fixedconstraint-genericconstraintsolver; . /feed; ; fixedconstraint GenericConstraintSolver – SOFA. SOFA - Topic Tag: fixedconstraint GenericConstraintSolver. /fix,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:442803,feedback,feedback,442803,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['feedback'],['feedback']
Usability,A_COMPONENT_STATECONTAINER_API MappedObject< Vec6Types >;  ; template class SOFA_COMPONENT_STATECONTAINER_API MappedObject< Rigid3Types >;  ; template class SOFA_COMPONENT_STATECONTAINER_API MappedObject< Rigid2Types >;  ; template class SOFA_COMPONENT_STATECONTAINER_API MechanicalObject< Vec3Types >;  ; template class SOFA_COMPONENT_STATECONTAINER_API MechanicalObject< Vec2Types >;  ; template class SOFA_COMPONENT_STATECONTAINER_API MechanicalObject< Vec1Types >;  ; template class SOFA_COMPONENT_STATECONTAINER_API MechanicalObject< Vec6Types >;  ; template class SOFA_COMPONENT_STATECONTAINER_API MechanicalObject< Rigid3Types >;  ; template class SOFA_COMPONENT_STATECONTAINER_API MechanicalObject< Rigid2Types >;  . Typedef Documentation. ◆ nat. typedef std::size_t sofa::component::statecontainer::nat. Function Documentation. ◆ clear() [1/3]. template<> . void sofa::component::statecontainer::clear ; (; double & ; t). inline . ◆ clear() [2/3]. template<> . void sofa::component::statecontainer::clear ; (; float & ; t). inline . ◆ clear() [3/3]. template<class T > . void sofa::component::statecontainer::clear ; (; T & ; t). inline . ◆ getModuleName(). const char * sofa::component::statecontainer::getModuleName ; (; ). ◆ getModuleVersion(). const char * sofa::component::statecontainer::getModuleVersion ; (; ). ◆ init(). SOFA_COMPONENT_STATECONTAINER_API void sofa::component::statecontainer::init ; (; ). ◆ initExternalModule(). void sofa::component::statecontainer::initExternalModule ; (; ). ◆ registerMappedObject(). void sofa::component::statecontainer::registerMappedObject ; (; sofa::core::ObjectFactory * ; factory). ◆ registerMechanicalObject(). void sofa::component::statecontainer::registerMechanicalObject ; (; sofa::core::ObjectFactory * ; factory). ◆ registerObjects(). void sofa::component::statecontainer::registerObjects ; (; sofa::core::ObjectFactory * ; factory). Variable Documentation. ◆ MappedObject< Rigid2Types >. template class SOFA_COMPONENT_STATECONTAINER_A,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1component_1_1statecontainer.html:2465,clear,clear,2465,api/master/sofa/html/namespacesofa_1_1component_1_1statecontainer.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1component_1_1statecontainer.html,1,['clear'],['clear']
Usability,AroundQuadForModification (const QuadID quadIndex);  Returns a non-const list of hexahedron indices around a given quad for subsequent modification. More...;  ; void setHexahedronTopologyToDirty ();  ; void cleanHexahedronTopologyFromDirty ();  ; const bool & isHexahedronTopologyDirty ();  ;  Protected Member Functions inherited from sofa::component::topology::container::dynamic::QuadSetTopologyContainer;  QuadSetTopologyContainer ();  ;  ~QuadSetTopologyContainer () override;  ; void createEdgeSetArray () override;  Creates the EdgeSet array. More...;  ; virtual void createEdgesInQuadArray ();  Creates the array of edge indices for each quad. More...;  ; virtual void createQuadsAroundVertexArray ();  Creates the QuadsAroundVertex Array. More...;  ; virtual void createQuadsAroundEdgeArray ();  Creates the quadsAroundEdge Array. More...;  ; void clearQuads ();  ; void clearEdgesInQuad ();  ; void clearQuadsAroundVertex ();  ; void clearQuadsAroundEdge ();  ; virtual QuadsAroundVertex & getQuadsAroundVertexForModification (const PointID vertexIndex);  Returns a non-const list of quad indices around a given DOF for subsequent modification. More...;  ; virtual QuadsAroundEdge & getQuadsAroundEdgeForModification (const EdgeID edgeIndex);  Returns a non-const list of quad indices around a given edge for subsequent modification. More...;  ; void setQuadTopologyToDirty ();  ; void cleanQuadTopologyFromDirty ();  ; const bool & isQuadTopologyDirty ();  ;  Protected Member Functions inherited from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer;  EdgeSetTopologyContainer ();  ;  ~EdgeSetTopologyContainer () override;  ; virtual void createEdgesAroundVertexArray ();  Creates the EdgesAroundVertex array. More...;  ; void clearEdges ();  ; void clearEdgesAroundVertex ();  ; void setEdgeTopologyToDirty ();  ; void cleanEdgeTopologyFromDirty ();  ; const bool & isEdgeTopologyDirty ();  ; virtual EdgesAroundVertex & getEdgesAroundVertexForModification (const ,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_container.html:38609,clear,clearQuads,38609,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_container.html,12,['clear'],"['clearEdgesInQuad', 'clearQuads', 'clearQuadsAroundEdge', 'clearQuadsAroundVertex']"
Usability,"B v + K x $; This method must be implemented by the component, and is usually called by the generic ForceField::addForce() method. ; Implements sofa::core::behavior::PairInteractionForceField< DataTypes >. ◆ addSpring(). template<class DataTypes > . void sofa::component::solidmechanics::spring::VectorSpringForceField< DataTypes >::addSpring ; (; int ; m1, . int ; m2, . SReal ; ks, . SReal ; kd, . Coord ; restVector . ). ◆ buildDampingMatrix(). template<class DataTypes > . void sofa::component::solidmechanics::spring::VectorSpringForceField< DataTypes >::buildDampingMatrix ; (; core::behavior::DampingMatrix * ; ). finalvirtual . Reimplemented from sofa::core::behavior::BaseForceField. ◆ bwdInit(). template<class DataTypes > . void sofa::component::solidmechanics::spring::VectorSpringForceField< DataTypes >::bwdInit. overridevirtual . Initialization method called at graph creation and modification, during bottom-up traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ clear(). template<class DataTypes > . void sofa::component::solidmechanics::spring::VectorSpringForceField< DataTypes >::clear ; (; int ; reserve = 0). inline . ◆ createDefaultSprings(). template<class DataTypes > . void sofa::component::solidmechanics::spring::VectorSpringForceField< DataTypes >::createDefaultSprings. ◆ createEdgeInformation(). template<class DataTypes > . void sofa::component::solidmechanics::spring::VectorSpringForceField< DataTypes >::createEdgeInformation ; (; Index ; , . Spring & ; t, . const core::topology::BaseMeshTopology::Edge & ; e, . const sofa::type::vector< Index > & ; ancestors, . const sofa::type::vector< SReal > & ; coefs . ). protected . Method to initialize See alsoSpring when a new edge is created. Will be set as creation callback in the EdgeData . d_springArray . ◆ draw(). template<class DataTypes > . void sofa::component::solidmechanics::spring::VectorSpringForceField< DataTypes >::draw ; (; const core::visual::VisualParams * ; ). overridevirtual . R",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_vector_spring_force_field.html:29414,clear,clear,29414,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_vector_spring_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_vector_spring_force_field.html,1,['clear'],['clear']
Usability,"BSTRACT_CLASS (SOFA_TEMPLATE(SingleStateAccessor, TDataTypes), StateAccessor);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; MechanicalState< TDataTypes > * getMState ();  ; const MechanicalState< TDataTypes > * getMState () const;  . Protected Member Functions;  LinearMovementProjectiveConstraint ();  ;  ~LinearMovementProjectiveConstraint () override;  ; template<class DataDeriv > ; void projectResponseT (DataDeriv &dx, const std::function< void(DataDeriv &, const unsigned int)> &clear);  ; template<class MyCoord > ; void interpolatePosition (Real cT, typename std::enable_if<!std::is_same< MyCoord, defaulttype::RigidCoord< 3, Real > >::value, VecCoord >::type &x);  ; template<class MyCoord > ; void interpolatePosition (Real cT, typename std::enable_if< std::is_same< MyCoord, defaulttype::RigidCoord< 3, Real > >::value, VecCoord >::type &x);  ;  Protected Member Functions inherited from sofa::core::behavior::ProjectiveConstraintSet< TDataTypes >;  ProjectiveConstraintSet (MechanicalState< TDataTypes > *mm=nullptr);  ;  ~ProjectiveConstraintSet () override;  ;  Protected Member Functions inherited from sofa::core::behavior::BaseProjectiveConstraintSet;  BaseProjectiveConstraintSet ();  ;  ~BaseProjectiveConstraintSet () override;  ;  Protected Member Functions inherited from sofa::core::behavior::StateAccessor;  StateAccessor ();  ;  ~StateAccessor () override=default;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_linear_movement_projective_constraint.html:17871,clear,clear,17871,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_linear_movement_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_linear_movement_projective_constraint.html,1,['clear'],['clear']
Usability,"BTDMatrix< N, T >::Block & sofa::linearalgebra::BTDMatrix< N, T >::bloc ; (; Index ; bi, . Index ; bj . ); const. ◆ clear() [1/2]. template<std::size_t N, typename T > . void sofa::linearalgebra::BTDMatrix< N, T >::clear ; (; ). overridevirtual . Reset all values to 0. ; Implements sofa::linearalgebra::BaseMatrix. ◆ clear() [2/2]. template<std::size_t N, typename T > . void sofa::linearalgebra::BTDMatrix< N, T >::clear ; (; Index ; i, . Index ; j . ). overridevirtual . Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearCol(). template<std::size_t N, typename T > . void sofa::linearalgebra::BTDMatrix< N, T >::clearCol ; (; Index ; j). overridevirtual . Reset the all values in column j to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRow(). template<std::size_t N, typename T > . void sofa::linearalgebra::BTDMatrix< N, T >::clearRow ; (; Index ; i). overridevirtual . Reset all the values in row i to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRowCol(). template<std::size_t N, typename T > . void sofa::linearalgebra::BTDMatrix< N, T >::clearRowCol ; (; Index ; i). overridevirtual . Reset the value of both row and column i to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ colSize(). template<std::size_t N, typename T > . BTDMatrix< N, T >::Index sofa::linearalgebra::BTDMatrix< N, T >::colSize ; (; void ; ); const. overridevirtual . Number of columns. ; Implements sofa::linearalgebra::BaseMatrix. ◆ element(). template<std::size_t N, typename T > . SReal sofa::linearalgebra::BTDMatrix< N, T >::element ; (; Index ; i, . Index ; j . ); const. overridevirtual . Read the value of the element at row i, column j (using 0-based indices) ; Implements sofa::linearalgebra::BaseMatrix. ◆ getAlignedSubMatrix(). template<std::size_t N, typename T > . template<class B > . void sofa::linearalgebra::BTDMatrix< N, T >::getAlignedSubMatrix ; (; Index ; bi, . Index ; bj, . Index ; nrow, . Index ; ncol, . B & ; m . ). ◆ getSubMatrix(). ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_b_t_d_matrix.html:17979,clear,clearRowCol,17979,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_b_t_d_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_b_t_d_matrix.html,1,['clear'],['clearRowCol']
Usability,"Base::addDeprecatedAttribute ; (; lifecycle::DeprecatedData * ; attribute). ◆ addLink(). void sofa::core::objectmodel::Base::addLink ; (; BaseLink * ; l). Add a link. ; Add a link. Note that this method should only be called if the link was not initialized with the initLink method . ◆ addMessage(). void sofa::core::objectmodel::Base::addMessage ; (; const sofa::helper::logging::Message & ; m); const. ◆ addOutputsToCallback(). void sofa::core::objectmodel::Base::addOutputsToCallback ; (; const std::string & ; name, . std::initializer_list< BaseData * > ; outputs . ). ◆ addTag(). void sofa::core::objectmodel::Base::addTag ; (; Tag ; t). Add a subset qualification to the object. . ◆ addUpdateCallback(). void sofa::core::objectmodel::Base::addUpdateCallback ; (; const std::string & ; name, . std::initializer_list< BaseData * > ; inputs, . std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> ; function, . std::initializer_list< BaseData * > ; outputs . ). ◆ clearLoggedMessages(). void sofa::core::objectmodel::Base::clearLoggedMessages ; (; ); const. ◆ countLoggedMessages(). size_t sofa::core::objectmodel::Base::countLoggedMessages ; (; sofa::helper::logging::Message::TypeSet ; t = sofa::helper::logging::Message::AnyTypes); const. ◆ findData(). BaseData * sofa::core::objectmodel::Base::findData ; (; const std::string & ; name); const. Find a data field given its name. Return nullptr if not found. If more than one field is found (due to aliases), only the first is returned. . ◆ findDataLinkDest(). bool sofa::core::objectmodel::Base::findDataLinkDest ; (; BaseData *& ; ptr, . const std::string & ; path, . const BaseLink * ; link . ). virtual . ◆ findGlobalField(). std::vector< BaseData * > sofa::core::objectmodel::Base::findGlobalField ; (; const std::string & ; name); const. Find data fields given a name: several can be found as we look into the alias map. ; Find fields given a name: several can be found as we look into the alias map. . ◆ findLink().",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base.html:13900,clear,clearLoggedMessages,13900,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base.html,1,['clear'],['clearLoggedMessages']
Usability,"Base; begin()sofa::core::CollisionModelinline; bMovingsofa::core::CollisionModelprotected; bSelfCollisionsofa::core::CollisionModelprotected; bSimulatedsofa::core::CollisionModelprotected; bwdInit() overridesofa::core::CollisionModelvirtual; canCollideWith(CollisionModel *model)sofa::core::CollisionModelvirtual; canCollideWithElement(Index, CollisionModel *, Index)sofa::core::CollisionModelinlinevirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; CAPSULE_TYPE enum valuesofa::core::CollisionModel; center(sofa::Index i) constsofa::component::collision::geometry::CylinderCollisionModel< TDataTypes >; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; CollisionModel()sofa::core::CollisionModelprotected; colorsofa::core::CollisionModelprotected; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeBoundingTree(int maxDepth=0) overridesofa::component::collision::geometry::CylinderCollisionModel< TDataTypes >virtual; computeContinuousBoundingTree(SReal, int maxDepth=0)sofa::core::CollisionModelinlinevirtual; contactFrictionsofa::core::CollisionModelprotected; contactResponsesofa::core::CollisionModelprotected; contactRestitutionsofa::core::CollisionModelprotected; contactStiffnesssofa::core::CollisionModelprotected; Coord typedefsofa::component::collision::geometry::CylinderCollisionModel< TDataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjecti",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cylinder_collision_model-members.html:2724,clear,clearLoggedMessages,2724,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cylinder_collision_model-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cylinder_collision_model-members.html,1,['clear'],['clearLoggedMessages']
Usability,"Base; buildDampingMatrix(core::behavior::DampingMatrix *) finalsofa::component::solidmechanics::spring::FastTriangularBendingSprings< _DataTypes >virtual; buildStiffnessMatrix(core::behavior::StiffnessMatrix *matrix) overridesofa::component::solidmechanics::spring::FastTriangularBendingSprings< _DataTypes >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ForceField< _DataTypes >inlinestatic; sofa::core::behavior::BaseForceField::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; Coord typedefsofa::component::solidmechanics::spring::FastTriangularBendingSprings< _DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_bendingStiffnesssofa::component::solidmechanics::spring::FastTriangularBendingSprings< _DataTypes >; d_componentStatesofa::core::objectmodel::Base; d_edgeSpringssofa::component::solidmechanics::spring::FastTriangularBendingSprings< _DataTypes >protected; d_messageLogCountsofa::core::objectmodel::Basemutable; d_minDistValiditysofa::component::solidmechanics::spring::FastTriangularBendingSprings< _DataTypes >; DataTypes typedefsofa::component::solidmechanics::spring::FastTr",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_fast_triangular_bending_springs-members.html:5968,clear,clearLoggedMessages,5968,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_fast_triangular_bending_springs-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_fast_triangular_bending_springs-members.html,1,['clear'],['clearLoggedMessages']
Usability,"BaseLink *l);  Add a link. More...;  ; void addAlias (BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions;  MeshOBJLoader ();  ;  ~MeshOBJLoader () override;  ; bool readOBJ (std::ifstream &file, const char *filename);  ; bool readMTL (const char *filename, type::vector< sofa::type::Material > &d_materials);  ; void addGroup (const sofa::core::loader::PrimitiveGroup &g);  ; void doClearBuffers () override;  MeshOBJLoader::clearBuffers Clear all the buffer containing the data loaded from the file. More...;  ;  Protected Member Functions inherited from sofa::core::loader::MeshLoader;  MeshLoader ();  ; virtual void clearBuffers () final;  ; void addPosition (type::vector< sofa::type::Vec3 > &pPositions, const sofa::type::Vec3 &p);  ; void addPosition (type::vector< sofa::type::Vec3 > &pPositions, SReal x, SReal y, SReal z);  ; void addPolyline (type::vector< Polyline > &pPolylines, Polyline p);  ; void addEdge (type::vector< Edge > &pEdges, const Edge &p);  ; void addEdge (type::vector< Edge > &pEdges, Topology::EdgeID p0, Topology::EdgeID p1);  ; void addTriangle (type::vector< Triangle > &pTriangles, const Triangle &p);  ; void addTriangle (type::vector< Triangle > &pTriangles, Topology::TriangleID p0, Topology::TriangleID p1, Topology::TriangleID p2);  ; void addQuad (",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_o_b_j_loader.html:17313,clear,clearBuffers,17313,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_o_b_j_loader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_o_b_j_loader.html,1,['clear'],['clearBuffers']
Usability,"BaseMappingvirtual; Base()sofa::core::objectmodel::Baseprotected; BaseMapping()sofa::core::BaseMappingprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; buildGeometricStiffnessMatrix(sofa::core::GeometricStiffnessMatrix *matrices)sofa::core::BaseMappingvirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::core::MultiMapping< TIn, TOut >inlinestatic; sofa::core::BaseMapping::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeAccFromMapping(const MechanicalParams *mparams, MultiVecDerivId outAcc, ConstMultiVecDerivId inVel, ConstMultiVecDerivId inAcc) overridesofa::core::MultiMapping< TIn, TOut >inlinevirtual; computeAccFromMapping(const MechanicalParams *, const type::vector< OutDataVecDeriv * > &, const type::vector< const InDataVecDeriv * > &, const type::vector< const InDataVecDeriv * > &)sofa::core::MultiMapping< TIn, TOut >inlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::core::MultiMapping< TIn, TOut >inlinestatic; createMappedMatrix(const behavior::BaseMechanicalState *state1, const behavior::BaseMechanicalState *state2, func_createMappedMatr",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_multi_mapping-members.html:4202,clear,clearLoggedMessages,4202,api/master/sofa/html/classsofa_1_1core_1_1_multi_mapping-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_multi_mapping-members.html,1,['clear'],['clearLoggedMessages']
Usability,"BaseMatrixinline; bRowBegin(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowEnd(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowRange(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsBegin() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsEnd() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowSize() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsRange() constsofa::linearalgebra::BaseMatrixinlinevirtual; clear(Index i, Index j) overridesofa::linearalgebra::FullMatrix< T >virtual; clear() overridesofa::linearalgebra::FullMatrix< T >virtual; clearCol(Index j) overridesofa::linearalgebra::FullMatrix< T >virtual; clearCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRow(Index i) overridesofa::linearalgebra::FullMatrix< T >virtual; clearRowCol(Index i) overridesofa::linearalgebra::FullMatrix< T >virtual; clearRows(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowsCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; cols(void) constsofa::linearalgebra::BaseMatrixinline; colSize(void) const overridesofa::linearalgebra::FullMatrix< T >inlinevirtual; compress()sofa::linearalgebra::BaseMatrixvirtual; createBlockAccessor(Index row, Index col, void *internalPtr=nullptr)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockAccessor(Index row, Index col, Index internalData)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockConstAccessor(Index row, Index col, void *internalPtr=nullptr) constsofa::linearalgebra::BaseMatrixinlineprotected; createBlockConstAccessor(Index row, Index col, Index internalData) constsofa::linearalgebra::BaseMatrixinlineprotected; createColBlockConstIterator(Index row, void *internalPtr) constsofa::linearalgebra::BaseMatrixinlineprotected; createColBlockConstIterator(Index row, Index internalData) constsofa::linearalgebra::BaseMatrixinlineprotected; createRowBlockConstIterator(void *internalPtr",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_full_matrix-members.html:6195,clear,clearRowsCols,6195,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_full_matrix-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_full_matrix-members.html,2,['clear'],['clearRowsCols']
Usability,"BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::core::behavior::SingleStateAccessor< TDataTypes >; SingleLink< SingleStateAccessor< TDataTypes >, MechanicalState< TDataTypes >, BaseLink::FLAG_STRONGLINK > mstate;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(AffineMovementProjectiveConstraint, TDataTypes), SOFA_TEMPLATE(sofa::core::behavior::ProjectiveConstraintSet, TDataTypes));  ; void clearConstraints ();  ; void addConstraint (Index index);  ; void removeConstraint (Index index);  ; void init () override;  – Constraint interface More...;  ; void projectResponse (const core::MechanicalParams *mparams, DataVecDeriv &resData) override;  Cancel the possible forces. More...;  ; void projectVelocity (const core::MechanicalParams *mparams, DataVecDeriv &vData) override;  Cancel the possible velocities. More...;  ; void projectPosition (const core::MechanicalParams *mparams, DataVecCoord &xData) override;  Apply the computed movements to the border mesh points between beginConstraintTime and endConstraintTime. More...;  ; void projectJacobianMatrix (const core::MechanicalParams *, DataMatrixDeriv &) override;  ; void getFinalPositions (VecCoord &finalPos, DataVecCoord &xData);  Compute the theoretical final positions. More...;  ; void projectMatrix (sofa::linearalgebra::BaseMatrix *, unsigned) override;  ; void draw (const core::visual::VisualParams *vparam",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_affine_movement_projective_constraint.html:5754,clear,clearConstraints,5754,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_affine_movement_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_affine_movement_projective_constraint.html,1,['clear'],['clearConstraints']
Usability,"BaseType typedefsofa::core::objectmodel::Base; buildDampingMatrix(core::behavior::DampingMatrix *) finalsofa::component::mechanicalload::ConicalForceField< DataTypes >virtual; buildStiffnessMatrix(core::behavior::StiffnessMatrix *matrix) overridesofa::component::mechanicalload::ConicalForceField< DataTypes >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ForceField< DataTypes >inlinestatic; sofa::core::behavior::BaseForceField::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; colorsofa::component::mechanicalload::ConicalForceField< DataTypes >; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; coneAnglesofa::component::mechanicalload::ConicalForceField< DataTypes >; coneCentersofa::component::mechanicalload::ConicalForceField< DataTypes >; coneHeightsofa::component::mechanicalload::ConicalForceField< DataTypes >; ConicalForceField()sofa::component::mechanicalload::ConicalForceField< DataTypes >protected; contactssofa::component::mechanicalload::ConicalForceField< DataTypes >protected; Coord typedefsofa::component::mechanicalload::ConicalForceField< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::o",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_conical_force_field-members.html:4655,clear,clearLoggedMessages,4655,api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_conical_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_conical_force_field-members.html,1,['clear'],['clearLoggedMessages']
Usability,"BaseType typedefsofa::core::objectmodel::Base; buildDampingMatrix(core::behavior::DampingMatrix *) finalsofa::component::mechanicalload::TorsionForceField< DataTypes >virtual; buildStiffnessMatrix(core::behavior::StiffnessMatrix *matrix) overridesofa::component::mechanicalload::TorsionForceField< DataTypes >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ForceField< DataTypes >inlinestatic; sofa::core::behavior::BaseForceField::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; Coord typedefsofa::component::mechanicalload::TorsionForceField< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_axissofa::component::mechanicalload::TorsionForceField< DataTypes >; d_componentStatesofa::core::objectmodel::Base; d_indicessofa::component::mechanicalload::TorsionForceField< DataTypes >; d_messageLogCountsofa::core::objectmodel::Basemutable; d_originsofa::component::mechanicalload::TorsionForceField< DataTypes >; d_torquesofa::component::mechanicalload::TorsionForceField< DataTypes >; DataTypes typedefsofa::core::behavior::ForceField< DataTypes >; DataVecCoord typedefsofa::component::mech",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_torsion_force_field-members.html:5337,clear,clearLoggedMessages,5337,api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_torsion_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_torsion_force_field-members.html,1,['clear'],['clearLoggedMessages']
Usability,"Block & sofa::linearalgebra::BlockFullMatrix< N, T >::asub ; (; Index ; bi, . Index ; bj, . Index ; , . Index ;  . ); const. ◆ bloc() [1/2]. template<std::size_t N, typename T > . BlockFullMatrix< N, T >::Block & sofa::linearalgebra::BlockFullMatrix< N, T >::bloc ; (; Index ; bi, . Index ; bj . ). ◆ bloc() [2/2]. template<std::size_t N, typename T > . const BlockFullMatrix< N, T >::Block & sofa::linearalgebra::BlockFullMatrix< N, T >::bloc ; (; Index ; bi, . Index ; bj . ); const. ◆ clear() [1/2]. template<std::size_t N, typename T > . void sofa::linearalgebra::BlockFullMatrix< N, T >::clear ; (; ). overridevirtual . Reset all values to 0. ; Implements sofa::linearalgebra::BaseMatrix. ◆ clear() [2/2]. template<std::size_t N, typename T > . void sofa::linearalgebra::BlockFullMatrix< N, T >::clear ; (; Index ; i, . Index ; j . ). overridevirtual . Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearCol(). template<std::size_t N, typename T > . void sofa::linearalgebra::BlockFullMatrix< N, T >::clearCol ; (; Index ; j). overridevirtual . Reset the all values in column j to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRow(). template<std::size_t N, typename T > . void sofa::linearalgebra::BlockFullMatrix< N, T >::clearRow ; (; Index ; i). overridevirtual . Reset all the values in row i to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRowCol(). template<std::size_t N, typename T > . void sofa::linearalgebra::BlockFullMatrix< N, T >::clearRowCol ; (; Index ; i). overridevirtual . Reset the value of both row and column i to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ colSize(). template<std::size_t N, typename T > . BlockFullMatrix< N, T >::Index sofa::linearalgebra::BlockFullMatrix< N, T >::colSize ; (; void ; ); const. overridevirtual . Number of columns. ; Implements sofa::linearalgebra::BaseMatrix. ◆ element(). template<std::size_t N, typename T > . SReal sofa::linearalgebra::BlockFullMatrix< N, T >::element ; (",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_full_matrix.html:17414,clear,clearCol,17414,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_full_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_full_matrix.html,1,['clear'],['clearCol']
Usability,"C, real >, IndexType > Class Template Reference . #include <matrix_bloc_traits.h>. Static Public Member Functions; static Real & v (Block &b, Index row, Index col);  ; static const Real & v (const Block &b, Index row, Index col);  ; static void vset (Block &b, int row, int col, Real val);  ; static void vadd (Block &b, int row, int col, Real val);  ; static void clear (Block &b);  ; static bool empty (const Block &b);  ; static void invert (Block &result, const Block &b);  ; static void split_row_index (IndexType &index, IndexType &modulo);  ; static void split_col_index (IndexType &index, IndexType &modulo);  ; template<class TSubBlock > ; static void subBlock (const Block &b, IndexType row, IndexType col, TSubBlock &subBlock);  ; static sofa::linearalgebra::BaseMatrix::ElementType getElementType ();  ; static const std::string Name ();  . Function details. ◆ clear(). template<Size L, Size C, class real , typename IndexType > . static void sofa::linearalgebra::matrix_bloc_traits< type::Mat< L, C, real >, IndexType >::clear ; (; Block & ; b). inlinestatic . ◆ empty(). template<Size L, Size C, class real , typename IndexType > . static bool sofa::linearalgebra::matrix_bloc_traits< type::Mat< L, C, real >, IndexType >::empty ; (; const Block & ; b). inlinestatic . ◆ getElementType(). template<Size L, Size C, class real , typename IndexType > . static sofa::linearalgebra::BaseMatrix::ElementType sofa::linearalgebra::matrix_bloc_traits< type::Mat< L, C, real >, IndexType >::getElementType ; (; ). inlinestatic . ◆ invert(). template<Size L, Size C, class real , typename IndexType > . static void sofa::linearalgebra::matrix_bloc_traits< type::Mat< L, C, real >, IndexType >::invert ; (; Block & ; result, . const Block & ; b . ). inlinestatic . ◆ Name(). template<Size L, Size C, class real , typename IndexType > . static const std::string sofa::linearalgebra::matrix_bloc_traits< type::Mat< L, C, real >, IndexType >::Name ; (; ). inlinestatic . ◆ split_col_index(). template<",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1matrix__bloc__traits_3_01type_1_1_mat_3_01_l_00_01_c_00_01real_01_4_00_01_index_type_01_4.html:1336,clear,clear,1336,api/master/sofa/html/classsofa_1_1linearalgebra_1_1matrix__bloc__traits_3_01type_1_1_mat_3_01_l_00_01_c_00_01real_01_4_00_01_index_type_01_4.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1matrix__bloc__traits_3_01type_1_1_mat_3_01_l_00_01_c_00_01real_01_4_00_01_index_type_01_4.html,1,['clear'],['clear']
Usability,COMPONENT_STATECONTAINER_API MappedObject< Vec2Types >;  ; template class SOFA_COMPONENT_STATECONTAINER_API MappedObject< Vec3Types >;  ; template class SOFA_COMPONENT_STATECONTAINER_API MappedObject< Vec6Types >;  ; template class SOFA_COMPONENT_STATECONTAINER_API MappedObject< Rigid3Types >;  ; template class SOFA_COMPONENT_STATECONTAINER_API MappedObject< Rigid2Types >;  ; template class SOFA_COMPONENT_STATECONTAINER_API MechanicalObject< Vec3Types >;  ; template class SOFA_COMPONENT_STATECONTAINER_API MechanicalObject< Vec2Types >;  ; template class SOFA_COMPONENT_STATECONTAINER_API MechanicalObject< Vec1Types >;  ; template class SOFA_COMPONENT_STATECONTAINER_API MechanicalObject< Vec6Types >;  ; template class SOFA_COMPONENT_STATECONTAINER_API MechanicalObject< Rigid3Types >;  ; template class SOFA_COMPONENT_STATECONTAINER_API MechanicalObject< Rigid2Types >;  . Typedef Documentation. ◆ nat. typedef std::size_t sofa::component::statecontainer::nat. Function Documentation. ◆ clear() [1/3]. template<> . void sofa::component::statecontainer::clear ; (; double & ; t). inline . ◆ clear() [2/3]. template<> . void sofa::component::statecontainer::clear ; (; float & ; t). inline . ◆ clear() [3/3]. template<class T > . void sofa::component::statecontainer::clear ; (; T & ; t). inline . ◆ getModuleName(). const char * sofa::component::statecontainer::getModuleName ; (; ). ◆ getModuleVersion(). const char * sofa::component::statecontainer::getModuleVersion ; (; ). ◆ init(). SOFA_COMPONENT_STATECONTAINER_API void sofa::component::statecontainer::init ; (; ). ◆ initExternalModule(). void sofa::component::statecontainer::initExternalModule ; (; ). ◆ registerMappedObject(). void sofa::component::statecontainer::registerMappedObject ; (; sofa::core::ObjectFactory * ; factory). ◆ registerMechanicalObject(). void sofa::component::statecontainer::registerMechanicalObject ; (; sofa::core::ObjectFactory * ; factory). ◆ registerObjects(). void sofa::component::statecontainer::regist,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1component_1_1statecontainer.html:2296,clear,clear,2296,api/master/sofa/html/namespacesofa_1_1component_1_1statecontainer.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1component_1_1statecontainer.html,1,['clear'],['clear']
Usability,"Callback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; animate_sofa::core::objectmodel::Context; animationManagersofa::simulation::Node; Base()sofa::core::objectmodel::Baseprotected; BaseContext()sofa::core::objectmodel::BaseContextprotected; BaseNode()sofa::core::objectmodel::BaseNodeprotected; BaseType typedefsofa::core::objectmodel::Base; behaviorModelsofa::simulation::Node; canChangeSleepingState() const overridesofa::core::objectmodel::Contextvirtual; childsofa::simulation::Node; ChildIterator typedefsofa::simulation::Node; Children typedefsofa::core::objectmodel::BaseNode; clearLoggedMessages() constsofa::core::objectmodel::Base; clearObjectContext(BaseObject::SPtr obj)sofa::core::objectmodel::BaseNodeprotected; collisionModelsofa::simulation::Node; collisionPipelinesofa::simulation::Node; configurationSettingsofa::simulation::Node; constraintSetsofa::simulation::Node; constraintSolversofa::simulation::Node; Context()sofa::core::objectmodel::Contextprotected; contextObjectsofa::simulation::Node; copyContext(const Context &c)sofa::core::objectmodel::Context; copySimulationContext(const Context &c)sofa::core::objectmodel::Context; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(DAGNode *, sofa::core::objectmodel::BaseObjectDescription *arg)sofa::simulation::graph::DAGNodeinlinestatic; sofa::simulation::Node::create(RealObject *, sofa::core::objectmodel::BaseObjectDescription *arg)sofa::simulation::Nodestatic; sofa::simulation::Node::create(const std::string &name)sofa::simulation::Nodestatic; createChild(const std::string &no",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1graph_1_1_d_a_g_node-members.html:2459,clear,clearObjectContext,2459,api/master/sofa/html/classsofa_1_1simulation_1_1graph_1_1_d_a_g_node-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1graph_1_1_d_a_g_node-members.html,1,['clear'],['clearObjectContext']
Usability,"Callback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; animate_sofa::core::objectmodel::Context; animationManagersofa::simulation::Node; Base()sofa::core::objectmodel::Baseprotected; BaseContext()sofa::core::objectmodel::BaseContextprotected; BaseNode()sofa::core::objectmodel::BaseNodeprotected; BaseType typedefsofa::core::objectmodel::Base; behaviorModelsofa::simulation::Node; canChangeSleepingState() const overridesofa::core::objectmodel::Contextvirtual; childsofa::simulation::Node; ChildIterator typedefsofa::simulation::Node; Children typedefsofa::core::objectmodel::BaseNode; clearLoggedMessages() constsofa::core::objectmodel::Base; clearObjectContext(BaseObject::SPtr obj)sofa::core::objectmodel::BaseNodeprotected; collisionModelsofa::simulation::Node; collisionPipelinesofa::simulation::Node; configurationSettingsofa::simulation::Node; constraintSetsofa::simulation::Node; constraintSolversofa::simulation::Node; Context()sofa::core::objectmodel::Contextprotected; contextObjectsofa::simulation::Node; copyContext(const Context &c)sofa::core::objectmodel::Context; copySimulationContext(const Context &c)sofa::core::objectmodel::Context; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(RealObject *, sofa::core::objectmodel::BaseObjectDescription *arg)sofa::simulation::Nodestatic; create(const std::string &name)sofa::simulation::Nodestatic; createChild(const std::string &nodeName)=0sofa::simulation::Nodepure virtual; d_canChangeSleepingStatesofa::core::objectmodel::Context; d_componentStatesofa::core::objectmodel::Base; d_isSleepingso",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_node-members.html:2315,clear,clearObjectContext,2315,api/master/sofa/html/classsofa_1_1simulation_1_1_node-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_node-members.html,1,['clear'],['clearObjectContext']
Usability,"Col values. More...;  ; void resize (Index nbRow, Index nbCol) override;  ; void extend (Index nbRow, Index nbCol);  ; SReal element (Index i, Index j) const override;  get scalar element i, j of matrix More...;  ; void set (Index i, Index j, double v) override;  set scalar element i, j of matrix More...;  ; void add (Index i, Index j, double v) override;  add scalar v at element i, j of matrix More...;  ; void set (Index i, Index j, int &rowId, int &colId, double v);  set scalar element i, j of matrix when rowId and colId are known More...;  ; template<typename T = Block, typename std::enable_if_t<!std::is_same_v< T, double > &&!std::is_same_v< T, float >, int > = 0> ; void add (Index i, Index j, int &rowId, int &colId, double v);  add scalar v at element i, j when rowId and colId are known More...;  ; void clear (Index i, Index j) override;  clear scalar at element i, j of matrix More...;  ; void add (Index i, Index j, const type::Mat3x3d &_M) override;  ; void add (Index i, Index j, const type::Mat3x3f &_M) override;  ; void clearRow (Index i) override;  Clear row scalar method. Clear all col of this line. More...;  ; void clearCol (Index j) override;  Clear col scalar method. Clear this col in all row of matrix. More...;  ; void clearRowCol (Index i) override;  Clear both row i and column i in a square matrix. More...;  ; void clear () override;  Completely clear the matrix. More...;  ; template<class M2 > ; bool hasRef (const M2 *m) const;  ; std::string expr () const;  ; bool valid () const;  ; template<class Dest > ; void addTo (Dest *dest) const;  ; template<class TBlock2 , class TPolicy2 > ; void operator= (const CompressedRowSparseMatrixMechanical< TBlock2, TPolicy2 > &m);  ; template<class TBlock2 , class TPolicy2 > ; void operator+= (const CompressedRowSparseMatrixMechanical< TBlock2, TPolicy2 > &m);  ; template<class TBlock2 , class TPolicy2 > ; void operator-= (const CompressedRowSparseMatrixMechanical< TBlock2, TPolicy2 > &m);  ; template<class Expr2 ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical.html:5901,clear,clearRow,5901,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical.html,1,['clear'],['clearRow']
Usability,"CollisionModelprotected; bSimulatedsofa::core::CollisionModelprotected; bwdInit() overridesofa::core::CollisionModelvirtual; canCollideWith(CollisionModel *model)sofa::core::CollisionModelvirtual; canCollideWithElement(Index, CollisionModel *, Index)sofa::core::CollisionModelinlinevirtual; canCreate(T *&obj, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::component::collision::geometry::SphereCollisionModel< TDataTypes >inlinestatic; sofa::core::CollisionModel::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; CAPSULE_TYPE enum valuesofa::core::CollisionModel; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; CollisionModel()sofa::core::CollisionModelprotected; colorsofa::core::CollisionModelprotected; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::component::collision::geometry::SphereCollisionModel< TDataTypes >virtual; computeBoundingTree(int maxDepth=0) overridesofa::component::collision::geometry::SphereCollisionModel< TDataTypes >virtual; computeContinuousBoundingTree(SReal dt, int maxDepth=0) overridesofa::component::collision::geometry::SphereCollisionModel< TDataTypes >virtual; contactFrictionsofa::core::CollisionModelprotected; contactResponsesofa::core::CollisionModelprotected; contactRestitutionsofa::core::CollisionModelprotected; contactStiffnesssofa::core::CollisionModelprotected; Coord typedefsofa::component::collision::geometry::SphereCollisionModel< TDataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmode",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_sphere_collision_model-members.html:2732,clear,clearLoggedMessages,2732,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_sphere_collision_model-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_sphere_collision_model-members.html,1,['clear'],['clearLoggedMessages']
Usability,"CompressedRowSparseMatrixMechanical< TBlock, TPolicy >::clear ; (; Index ; i, . Index ; j . ). inlineoverride . clear scalar at element i, j of matrix . ◆ clearCol(). template<typename TBlock , typename TPolicy = CRSMechanicalPolicy> . void sofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >::clearCol ; (; Index ; j). inlineoverride . Clear col scalar method. Clear this col in all row of matrix. ; Parameters. j: Col index considering size of matrix in scalar. . WarningIf you want to clear all value of a block, it is better to call clearColBlock . ◆ clearRow(). template<typename TBlock , typename TPolicy = CRSMechanicalPolicy> . void sofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >::clearRow ; (; Index ; i). inlineoverride . Clear row scalar method. Clear all col of this line. ; Parameters. i: Line index considering size of matrix in scalar. . WarningIf you want to clear all value of a block, it is better to call clearRowBlock . ◆ clearRowCol(). template<typename TBlock , typename TPolicy = CRSMechanicalPolicy> . void sofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >::clearRowCol ; (; Index ; i). inlineoverride . Clear both row i and column i in a square matrix. ; Parameters. i: Row and Col index considering size of matrix in scalar. . ◆ colSize(). template<typename TBlock , typename TPolicy = CRSMechanicalPolicy> . Index sofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >::colSize ; (; ); const. inlineoverridevirtual . Number of columns. ; Implements sofa::linearalgebra::BaseMatrix. ◆ compress(). template<typename TBlock , typename TPolicy = CRSMechanicalPolicy> . void sofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >::compress ; (; ). inlineoverridevirtual . Make the final data setup after adding entries. For most concrete types, this method does nothing. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ copyLower(). template<typename ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical.html:49553,clear,clearRowCol,49553,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical.html,1,['clear'],['clearRowCol']
Usability,"ConstraintSet. ◆ applyConstraint() [2/3]. template<class DataTypes > . void sofa::component::constraint::projective::LinearMovementProjectiveConstraint< DataTypes >::applyConstraint ; (; const core::MechanicalParams * ; , . linearalgebra::BaseVector * ; , . const sofa::core::behavior::MultiMatrixAccessor * ;  . ). overridevirtual . Project the global Mechanical Vector to constrained space using offset parameter. ; Reimplemented from sofa::core::behavior::BaseProjectiveConstraintSet. ◆ applyConstraint() [3/3]. template<class TDataTypes > . void sofa::component::constraint::projective::LinearMovementProjectiveConstraint< TDataTypes >::applyConstraint ; (; sofa::core::behavior::ZeroDirichletCondition * ; zeroDirichletCondition). overridevirtual . Project the global matrix to constrained space by using the ZeroDirichletCondition interface It allows to define what rows and columns to discard for the projection. ; Reimplemented from sofa::core::behavior::BaseProjectiveConstraintSet. ◆ clearIndices(). template<class DataTypes > . void sofa::component::constraint::projective::LinearMovementProjectiveConstraint< DataTypes >::clearIndices. methods to add/remove some indices, keyTimes, keyMovement . ◆ clearKeyMovements(). template<class DataTypes > . void sofa::component::constraint::projective::LinearMovementProjectiveConstraint< DataTypes >::clearKeyMovements. ◆ draw(). template<class DataTypes > . void sofa::component::constraint::projective::LinearMovementProjectiveConstraint< DataTypes >::draw ; (; const core::visual::VisualParams * ; ). overridevirtual . Render internal data of this object, for debugging purposes. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ init() [1/2]. SOFA_COMPONENT_CONSTRAINT_PROJECTIVE_API void sofa::component::constraint::projective::LinearMovementProjectiveConstraint< defaulttype::Rigid3Types >::init ; (; void ; ). virtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_linear_movement_projective_constraint.html:27394,clear,clearIndices,27394,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_linear_movement_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_linear_movement_projective_constraint.html,1,['clear'],['clearIndices']
Usability,"Constructor details. ◆ PickHandler(). sofa::gui::common::PickHandler::PickHandler ; (; double ; defaultLength = 1000000). ◆ ~PickHandler(). sofa::gui::common::PickHandler::~PickHandler ; (; ). virtual . Function details. ◆ activateRay(). void sofa::gui::common::PickHandler::activateRay ; (; int ; width, . int ; height, . core::objectmodel::BaseNode * ; root . ). ◆ addCallBack(). void sofa::gui::common::PickHandler::addCallBack ; (; CallBackPicker * ; c). inline . ◆ allocateSelectionBuffer(). void sofa::gui::common::PickHandler::allocateSelectionBuffer ; (; int ; width, . int ; height . ). virtual . Reimplemented in sofa::gui::qt::GLPickHandler. ◆ changeOperation() [1/2]. Operation * sofa::gui::common::PickHandler::changeOperation ; (; MOUSE_BUTTON ; button, . const std::string & ; op . ). ◆ changeOperation() [2/2]. Operation * sofa::gui::common::PickHandler::changeOperation ; (; sofa::component::setting::MouseButtonSetting * ; setting). ◆ clearCallBacks(). void sofa::gui::common::PickHandler::clearCallBacks ; (; ). inline . ◆ deactivateRay(). void sofa::gui::common::PickHandler::deactivateRay ; (; ). ◆ destroySelectionBuffer(). void sofa::gui::common::PickHandler::destroySelectionBuffer ; (; ). virtual . Reimplemented in sofa::gui::qt::GLPickHandler. ◆ findCollision(). BodyPicked sofa::gui::common::PickHandler::findCollision ; (; ). protectedvirtual . ◆ findCollisionUsingBruteForce() [1/2]. BodyPicked sofa::gui::common::PickHandler::findCollisionUsingBruteForce ; (; ). protected . ◆ findCollisionUsingBruteForce() [2/2]. BodyPicked sofa::gui::common::PickHandler::findCollisionUsingBruteForce ; (; const type::Vec3 & ; origin, . const type::Vec3 & ; direction, . double ; maxLength, . core::objectmodel::BaseNode * ; root . ). static . ◆ findCollisionUsingColourCoding() [1/2]. BodyPicked sofa::gui::common::PickHandler::findCollisionUsingColourCoding ; (; ). protected . ◆ findCollisionUsingColourCoding() [2/2]. BodyPicked sofa::gui::common::PickHandler::findCollisionUsing",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_pick_handler.html:5463,clear,clearCallBacks,5463,api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_pick_handler.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_pick_handler.html,1,['clear'],['clearCallBacks']
Usability,Container () override;  ; void createEdgeSetArray () override;  Creates the EdgeSet array. More...;  ; void createQuadSetArray () override;  Creates the QuadSet array. More...;  ; virtual void createHexahedronSetArray ();  Creates the HexahedronSet array. More...;  ; virtual void createEdgesInHexahedronArray ();  Creates the array of edge indices for each hexahedron. More...;  ; virtual void createQuadsInHexahedronArray ();  Creates the array of quad indices for each hexahedron. More...;  ; virtual void createHexahedraAroundVertexArray ();  Creates the HexahedraAroundVertex Array. More...;  ; virtual void createHexahedraAroundEdgeArray ();  Creates the HexahedraAroundEdge Array. More...;  ; virtual void createHexahedraAroundQuadArray ();  Creates the HexahedraAroundQuad Array. More...;  ; void clearHexahedra ();  ; void clearEdgesInHexahedron ();  ; void clearQuadsInHexahedron ();  ; void clearHexahedraAroundVertex ();  ; void clearHexahedraAroundEdge ();  ; void clearHexahedraAroundQuad ();  ; virtual HexahedraAroundVertex & getHexahedraAroundVertexForModification (const PointID vertexIndex);  Returns a non-const list of hexahedron indices around a given DOF for subsequent modification. More...;  ; virtual HexahedraAroundEdge & getHexahedraAroundEdgeForModification (const EdgeID edgeIndex);  Returns a non-const list of hexahedron indices around a given edge for subsequent modification. More...;  ; virtual HexahedraAroundQuad & getHexahedraAroundQuadForModification (const QuadID quadIndex);  Returns a non-const list of hexahedron indices around a given quad for subsequent modification. More...;  ; void setHexahedronTopologyToDirty ();  ; void cleanHexahedronTopologyFromDirty ();  ; const bool & isHexahedronTopologyDirty ();  ;  Protected Member Functions inherited from sofa::component::topology::container::dynamic::QuadSetTopologyContainer;  QuadSetTopologyContainer ();  ;  ~QuadSetTopologyContainer () override;  ; void createEdgeSetArray () override;  Creates the Ed,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_container.html:37093,clear,clearHexahedra,37093,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_container.html,18,['clear'],"['clearEdgesInHexahedron', 'clearHexahedra', 'clearHexahedraAroundEdge', 'clearHexahedraAroundQuad', 'clearHexahedraAroundVertex', 'clearQuadsInHexahedron']"
Usability,Container. ◆ checkTopology(). bool sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::checkTopology ; (; ); const. overridevirtual . Checks if the topology is coherent. ; Check if the shell arrays are coherent See alsom_tetrahedron . m_edgesInTetrahedron . m_trianglesInTetrahedron . m_tetrahedraAroundVertex . m_tetrahedraAroundEdge . m_tetrahedraAroundTriangle ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer. ◆ cleanTetrahedronTopologyFromDirty(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::cleanTetrahedronTopologyFromDirty ; (; ). protected . ◆ clear(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::clear ; (; ). overridevirtual . Procedural creation methods ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer. ◆ clearEdgesInTetrahedron(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::clearEdgesInTetrahedron ; (; ). protected . ◆ clearTetrahedra(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::clearTetrahedra ; (; ). protected . ◆ clearTetrahedraAroundEdge(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::clearTetrahedraAroundEdge ; (; ). protected . ◆ clearTetrahedraAroundTriangle(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::clearTetrahedraAroundTriangle ; (; ). protected . ◆ clearTetrahedraAroundVertex(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::clearTetrahedraAroundVertex ; (; ). protected . ◆ clearTrianglesInTetrahedron(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::clearTrianglesInTetrahedron ; (; ). protected . ◆ createEdgeSetArray(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::createEdgeSetA,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container.html:50637,clear,clearEdgesInTetrahedron,50637,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container.html,1,['clear'],['clearEdgesInTetrahedron']
Usability,"Containervirtual; cleanEdgeTopologyFromDirty()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; cleanPointTopologyFromDirty()sofa::component::topology::container::dynamic::PointSetTopologyContainerprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanTriangleTopologyFromDirty()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear() overridesofa::component::topology::container::dynamic::TriangleSetTopologyContainervirtual; clearBorderElementLists()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; clearEdges()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearEdgesAroundVertex()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearEdgesInTriangle()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; clearLoggedMessages() constsofa::core::objectmodel::Base; clearTriangles()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; clearTrianglesAroundEdge()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; clearTrianglesAroundVertex()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createEdgesAroundVertexArray()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotectedvirtual; createEdgeSetArray() overridesofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotectedvirtual; createEdgesInTriangleArray()sofa::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_container-members.html:4630,clear,clearLoggedMessages,4630,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_container-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_container-members.html,1,['clear'],['clearLoggedMessages']
Usability,"Correction< TDataTypes >virtual; Base()sofa::core::objectmodel::Baseprotected; BaseConstraintCorrection()sofa::core::behavior::BaseConstraintCorrectionprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ConstraintCorrection< TDataTypes >inlinestatic; sofa::core::behavior::BaseConstraintCorrection::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup() overridesofa::core::behavior::ConstraintCorrection< TDataTypes >virtual; clearLoggedMessages() constsofa::core::objectmodel::Base; compliancesofa::component::constraint::lagrangian::correction::UncoupledConstraintCorrection< TDataTypes >; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeDx(const Data< VecDeriv > &f, VecDeriv &x)sofa::component::constraint::lagrangian::correction::UncoupledConstraintCorrection< TDataTypes >protected; computeMotionCorrection(const core::ConstraintParams *cparams, core::MultiVecDerivId dx, core::MultiVecDerivId f) overridesofa::component::constraint::lagrangian::correction::UncoupledConstraintCorrection< TDataTypes >virtual; computeMotionCorrectionFromLambda(const core::ConstraintParams *cparams, core::MultiVecDerivId dx, const linearalgebra::BaseVector *lambda) overridesofa::core::behavior::ConstraintCorrection< TDataTypes >virtual; computeResidual(const core::ExecParams *, linearalgebra::BaseVector *)sofa::core::behavior::BaseConstraintCorrectionvirtual; ConstraintCorrection(Mec",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_uncoupled_constraint_correction-members.html:4867,clear,clearLoggedMessages,4867,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_uncoupled_constraint_correction-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_uncoupled_constraint_correction-members.html,1,['clear'],['clearLoggedMessages']
Usability,"Correction< TDataTypes >virtual; Base()sofa::core::objectmodel::Baseprotected; BaseConstraintCorrection()sofa::core::behavior::BaseConstraintCorrectionprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ConstraintCorrection< TDataTypes >inlinestatic; sofa::core::behavior::BaseConstraintCorrection::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup() overridesofa::core::behavior::ConstraintCorrection< TDataTypes >virtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeJ(sofa::linearalgebra::BaseMatrix *W, const MatrixDeriv &j)sofa::component::constraint::lagrangian::correction::LinearSolverConstraintCorrection< TDataTypes >inlineprotectedvirtual; computeMotionCorrection(const core::ConstraintParams *cparams, core::MultiVecDerivId dx, core::MultiVecDerivId f) overridesofa::component::constraint::lagrangian::correction::LinearSolverConstraintCorrection< TDataTypes >virtual; computeMotionCorrectionFromLambda(const core::ConstraintParams *cparams, core::MultiVecDerivId dx, const linearalgebra::BaseVector *lambda) overridesofa::core::behavior::ConstraintCorrection< TDataTypes >virtual; computeResidual(const core::ExecParams *, linearalgebra::BaseVector *)sofa::core::behavior::BaseConstraintCorrectionvirtual; ConstraintCorrection(MechanicalState< DataTypes > *ms=nullptr)sofa::core::behavior::ConstraintCo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_linear_solver_constraint_correction-members.html:4852,clear,clearLoggedMessages,4852,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_linear_solver_constraint_correction-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_linear_solver_constraint_correction-members.html,1,['clear'],['clearLoggedMessages']
Usability,"Create(Index i, Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; blocElements(Index i, Index j, T *buffer) constsofa::linearalgebra::BaseMatrixinline; blocGet(Index i, Index j) constsofa::linearalgebra::BaseMatrixinlinevirtual; blocGetW(Index i, Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; blocSet(Index i, Index j, const T *buffer)sofa::linearalgebra::BaseMatrixinline; bRowBegin(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowEnd(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowRange(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsBegin() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsEnd() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowSize() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsRange() constsofa::linearalgebra::BaseMatrixinlinevirtual; category enum valuesofa::linearalgebra::DiagonalMatrix< T >; clear(Index i, Index j) overridesofa::linearalgebra::DiagonalMatrix< T >inlinevirtual; clear() overridesofa::linearalgebra::DiagonalMatrix< T >inlinevirtual; clear(Index i)sofa::linearalgebra::DiagonalMatrix< T >inline; clearCol(Index j) overridesofa::linearalgebra::DiagonalMatrix< T >inlinevirtual; clearCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRow(Index i) overridesofa::linearalgebra::DiagonalMatrix< T >inlinevirtual; clearRowCol(Index i) overridesofa::linearalgebra::DiagonalMatrix< T >inlinevirtual; clearRows(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowsCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; cols(void) constsofa::linearalgebra::BaseMatrixinline; colSize(void) const overridesofa::linearalgebra::DiagonalMatrix< T >inlinevirtual; compress()sofa::linearalgebra::BaseMatrixvirtual; createBlockAccessor(Index row, Index col, void *internalPtr=nullptr)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockAccessor(Index row, Index col, Index internalData)sofa::linearalgebr",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_diagonal_matrix-members.html:5943,clear,clear,5943,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_diagonal_matrix-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_diagonal_matrix-members.html,1,['clear'],['clear']
Usability,"D] How to determine the source of an stress sigularity?. /how-to-develop-collision-model-that-support-different-proximity; . /feed; ; [SOLVED] How to develop collision model that support different proximity? – SOFA. /page; . /10; ; SOFA - Topic: [SOLVED] How to develop collision model that support different proximity?. /2; ; SOFA - Topic: [SOLVED] How to develop collision model that support different proximity?. /8; ; SOFA - Topic: [SOLVED] How to develop collision model that support different proximity?. /9; ; SOFA - Topic: [SOLVED] How to develop collision model that support different proximity?. SOFA - Topic: [SOLVED] How to develop collision model that support different proximity?. /how-to-disable-warning-message; ; SOFA - Topic: How to disable warning message. /how-to-do-attachconstraint; ; SOFA - Topic: [SOLVED] How to Do AttachConstraint?. /how-to-do-feasible-and-stable-physical-acceleration-in-force-feedback-scene; . /page; . /2; ; SOFA - Topic: [SOLVED] How to do feasible and stable physical acceleration in force feedback scene?. SOFA - Topic: [SOLVED] How to do feasible and stable physical acceleration in force feedback scene?. /how-to-exclude-certain-mesh-elements-from-the-collision-test; ; SOFA - Topic: How to exclude certain mesh elements from the collision test?. /how-to-exert-a-torque-on-an-articulatedsystemmapping; ; SOFA - Topic: How to exert a torque on an ArticulatedSystemMapping?. /how-to-export-obj-files-at-specified-time-steps-before-ending-the-animation; ; SOFA - Topic: [SOLVED] How to export .OBJ files at specified time steps, before ending the animation?. /how-to-export-obj-files-at-specified-time-steps-before-ending-the-animation-2; ; SOFA - Topic: [SOLVED] How to export .OBJ files at specified time steps, before ending the animation?. /how-to-extract-reaction-force-for-certain-nodes; ; SOFA - Topic: [SOLVED] How to extract reaction force for certain nodes. /how-to-extract-the-surface-of-a-volumeyric-mesh; ; SOFA - Topic: [SOLVED] How to ext",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:321090,feedback,feedback,321090,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['feedback'],['feedback']
Usability,"DampingMatrix *) finalsofa::component::solidmechanics::fem::hyperelastic::TetrahedronHyperelasticityFEMForceField< DataTypes >virtual; buildStiffnessMatrix(core::behavior::StiffnessMatrix *matrix) overridesofa::component::solidmechanics::fem::hyperelastic::TetrahedronHyperelasticityFEMForceField< DataTypes >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ForceField< DataTypes >inlinestatic; sofa::core::behavior::BaseForceField::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible) overridesofa::component::solidmechanics::fem::hyperelastic::TetrahedronHyperelasticityFEMForceField< DataTypes >virtual; Coord typedefsofa::component::solidmechanics::fem::hyperelastic::TetrahedronHyperelasticityFEMForceField< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createTetrahedronRestInformation(Index, TetrahedronRestInformation &t, const Tetrahedron &, const sofa::type::vector< Index > &, const sofa::type::vector< SReal > &)sofa::component::solidmechanics::fem::hyperelastic::TetrahedronHyperelasticityFEMForceField< DataTypes >; d_anisotropySetsofa::component::solidmechanics::fem::hyperelastic::TetrahedronHyperelasticityFEMForceField< DataTypes >; d_compon",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1_tetrahedron_hyperelasticity_f_e_m_force_field-members.html:4979,clear,clearLoggedMessages,4979,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1_tetrahedron_hyperelasticity_f_e_m_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1_tetrahedron_hyperelasticity_f_e_m_force_field-members.html,1,['clear'],['clearLoggedMessages']
Usability,"Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  . Constructor details. ◆ MultiTagAnimationLoop(). sofa::component::animationloop::MultiTagAnimationLoop::MultiTagAnimationLoop ; (; ). ◆ ~MultiTagAnimationLoop(). sofa::component::animationloop::MultiTagAnimationLoop::~MultiTagAnimationLoop ; (; ). override . Function details. ◆ clear(). void sofa::component::animationloop::MultiTagAnimationLoop::clear ; (; ). virtual . ◆ init(). void sofa::component::animationloop::MultiTagAnimationLoop::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ SOFA_CLASS(). sofa::component::animationloop::MultiTagAnimationLoop::SOFA_CLASS ; (; MultiTagAnimationLoop ; , . sofa::simulation::CollisionAnimationLoop ;  . ). ◆ step(). void sofa::component::animationloop::MultiTagAnimationLoop::step ; (; const sofa::core::ExecParams * ; params, . SReal ; dt . ). overridevirtual . Main computation method.; Specify and execute all computations for computing a timestep, such as one or more collisions and integrations stages. ; Implements sofa::core::behavior::BaseAnimationLoop. sofacomponentanimationloopMultiTagAnimationLoop; Generated on Mon Nov 11 2024 02:19:50 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop.html:15283,clear,clear,15283,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop.html,2,['clear'],['clear']
Usability,"DataFileNameVector ; (; const sofa::type::SVector< std::string > & ; value, . const char * ; helpMsg = nullptr, . bool ; isDisplayed = true, . bool ; isReadOnly = false . ). ◆ DataFileNameVector() [3/5]. sofa::core::objectmodel::DataFileNameVector::DataFileNameVector ; (; const BaseData::BaseInitData & ; init). explicit . Constructor this constructor should be used through the initData() methods . ◆ DataFileNameVector() [4/5]. sofa::core::objectmodel::DataFileNameVector::DataFileNameVector ; (; const Inherit::InitData & ; init). explicit . Constructor this constructor should be used through the initData() methods . ◆ ~DataFileNameVector(). sofa::core::objectmodel::DataFileNameVector::~DataFileNameVector ; (; ). overridedefault . ◆ DataFileNameVector() [5/5]. sofa::core::objectmodel::DataFileNameVector::DataFileNameVector ; (; const Inherit & ; d). delete . Function details. ◆ addPath(). void sofa::core::objectmodel::DataFileNameVector::addPath ; (; const std::string & ; v, . bool ; clear = false . ). ◆ doOnUpdate(). void sofa::core::objectmodel::DataFileNameVector::doOnUpdate ; (; ). overridevirtual . Reimplemented from sofa::core::objectmodel::BaseData. ◆ endEdit(). void sofa::core::objectmodel::DataFileNameVector::endEdit ; (; ). overridevirtual . Reimplemented from sofa::core::objectmodel::Data< sofa::type::SVector< std::string > >. ◆ getAbsolutePath(). const std::string & sofa::core::objectmodel::DataFileNameVector::getAbsolutePath ; (; unsigned int ; i); const. virtual . ◆ getFullPath(). const std::string & sofa::core::objectmodel::DataFileNameVector::getFullPath ; (; unsigned int ; i); const. virtual . ◆ getPathType(). PathType sofa::core::objectmodel::DataFileNameVector::getPathType ; (; ); const. ◆ getRelativePath(). const std::string & sofa::core::objectmodel::DataFileNameVector::getRelativePath ; (; unsigned int ; i). virtual . ◆ operator=(). DataFileNameVector& sofa::core::objectmodel::DataFileNameVector::operator= ; (; const DataFileNameVector & ; ). dele",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_data_file_name_vector.html:13641,clear,clear,13641,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_data_file_name_vector.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_data_file_name_vector.html,1,['clear'],['clear']
Usability,"DataTypes >protected; blocSet(Index i, Index j, const T *buffer)sofa::linearalgebra::BaseMatrixinline; bRowBegin(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowEnd(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowRange(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsBegin() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsEnd() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowSize() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsRange() constsofa::linearalgebra::BaseMatrixinlinevirtual; choleskysofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >protected; choleskyDecompose()sofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >inline; choleskySolve(VectorEigen &x, const VectorEigen &b) constsofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >inline; clear() overridesofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >inlinevirtual; sofa::linearalgebra::BaseMatrix::clear(Index i, Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; clearCol(Index col) overridesofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >inlinevirtual; clearCols(Index imin, Index imax) overridesofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >inlinevirtual; clearRow(Index i) overridesofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >inlinevirtual; clearRowCol(Index i) overridesofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >inlinevirtual; clearRows(Index imin, Index imax) overridesofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >inlinevirtual; clearRowsCols(Index imin, Index imax) overridesofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >inlinevirtual; coeffRef(Index i, Index j)sofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >inline; cols(void) constsofa::linearalgebra::BaseMatrixinline; colSize(void) const overridesofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >in",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_sparse_matrix-members.html:7228,clear,clear,7228,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_sparse_matrix-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_sparse_matrix-members.html,1,['clear'],['clear']
Usability,"Deriv * > & ; dataMatInConst . ). override . ◆ applyJT() [2/4]. template<class TIn , class TInRoot , class TOut > . void sofa::component::mapping::linear::DeformableOnRigidFrameMapping< TIn, TInRoot, TOut >::applyJT ; (; const core::MechanicalParams * ; , . const type::vector< InDataVecDeriv * > & ; dataVecOutForce, . const type::vector< InRootDataVecDeriv * > & ; dataVecOutRootForce, . const type::vector< const OutDataVecDeriv * > & ; dataVecInForce . ). override . ◆ applyJT() [3/4]. template<class TIn , class TInRoot , class TOut > . void sofa::component::mapping::linear::DeformableOnRigidFrameMapping< TIn, TInRoot, TOut >::applyJT ; (; InMatrixDeriv & ; out, . const OutMatrixDeriv & ; in, . InRootMatrixDeriv * ; outroot . ). ◆ applyJT() [4/4]. template<class TIn , class TInRoot , class TOut > . void sofa::component::mapping::linear::DeformableOnRigidFrameMapping< TIn, TInRoot, TOut >::applyJT ; (; InVecDeriv & ; out, . const OutVecDeriv & ; in, . InRootVecDeriv * ; outroot . ). ◆ clear(). template<class TIn , class TInRoot , class TOut > . void sofa::component::mapping::linear::DeformableOnRigidFrameMapping< TIn, TInRoot, TOut >::clear ; (; int ; reserve = 0). ◆ draw(). template<class TIn , class TInRoot , class TOut > . void sofa::component::mapping::linear::DeformableOnRigidFrameMapping< TIn, TInRoot, TOut >::draw ; (; const core::visual::VisualParams * ; vparams). override . ◆ handleTopologyChange(). template<class TIn , class TInRoot , class TOut > . void sofa::component::mapping::linear::DeformableOnRigidFrameMapping< TIn, TInRoot, TOut >::handleTopologyChange ; (; core::topology::Topology * ; t). override . ◆ init(). template<class TIn , class TInRoot , class TOut > . void sofa::component::mapping::linear::DeformableOnRigidFrameMapping< TIn, TInRoot, TOut >::init ; (; void ; ). override . ◆ recomputeRigidMass(). template<class TIn , class TInRoot , class TOut > . void sofa::component::mapping::linear::DeformableOnRigidFrameMapping< TIn, TInRoot, TOut >::reco",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_deformable_on_rigid_frame_mapping.html:12587,clear,clear,12587,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_deformable_on_rigid_frame_mapping.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_deformable_on_rigid_frame_mapping.html,1,['clear'],['clear']
Usability,"DerivId ; a, . core::MultiVecCoordId ; x, . core::MultiVecDerivId ; v . ). Compute a(x,v) at time t. Parameters x and v not const due to propagation through mappings. . ◆ computeContactAcc(). void sofa::simulation::common::MechanicalOperations::computeContactAcc ; (; SReal ; t, . core::MultiVecDerivId ; a, . core::MultiVecCoordId ; x, . core::MultiVecDerivId ; v . ). ◆ computeContactDf(). void sofa::simulation::common::MechanicalOperations::computeContactDf ; (; core::MultiVecDerivId ; df). ◆ computeContactForce(). void sofa::simulation::common::MechanicalOperations::computeContactForce ; (; core::MultiVecDerivId ; result). ◆ computeDf(). void sofa::simulation::common::MechanicalOperations::computeDf ; (; core::MultiVecDerivId ; df, . bool ; clear = true, . bool ; accumulate = true . ). Compute the current force delta (given the latest propagated displacement) . ◆ computeDfV(). void sofa::simulation::common::MechanicalOperations::computeDfV ; (; core::MultiVecDerivId ; df, . bool ; clear = true, . bool ; accumulate = true . ). Compute the current force delta (given the latest propagated velocity) . ◆ computeEnergy(). void sofa::simulation::common::MechanicalOperations::computeEnergy ; (; SReal & ; kineticEnergy, . SReal & ; potentialEnergy . ). Compute Energy. ; Apply projective constraints to the given velocity vector. . ◆ computeForce() [1/2]. void sofa::simulation::common::MechanicalOperations::computeForce ; (; core::MultiVecDerivId ; result, . bool ; clear = true, . bool ; accumulate = true . ). Compute the current force (given the latest propagated position and velocity) . ◆ computeForce() [2/2]. void sofa::simulation::common::MechanicalOperations::computeForce ; (; SReal ; t, . core::MultiVecDerivId ; f, . core::MultiVecCoordId ; x, . core::MultiVecDerivId ; v . ). Compute f(x,v) at time t. Parameters x and v not const due to propagation through mappings. . ◆ getMatrixDimension() [1/2]. void sofa::simulation::common::MechanicalOperations::getMatrixDimension ; ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1common_1_1_mechanical_operations.html:11266,clear,clear,11266,api/master/sofa/html/classsofa_1_1simulation_1_1common_1_1_mechanical_operations.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1common_1_1_mechanical_operations.html,1,['clear'],['clear']
Usability,Dirty ; (; ). protected . ◆ clear(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::clear ; (; ). overridevirtual . Procedural creation methods ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer. ◆ clearEdgesInTetrahedron(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::clearEdgesInTetrahedron ; (; ). protected . ◆ clearTetrahedra(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::clearTetrahedra ; (; ). protected . ◆ clearTetrahedraAroundEdge(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::clearTetrahedraAroundEdge ; (; ). protected . ◆ clearTetrahedraAroundTriangle(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::clearTetrahedraAroundTriangle ; (; ). protected . ◆ clearTetrahedraAroundVertex(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::clearTetrahedraAroundVertex ; (; ). protected . ◆ clearTrianglesInTetrahedron(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::clearTrianglesInTetrahedron ; (; ). protected . ◆ createEdgeSetArray(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::createEdgeSetArray ; (; ). overrideprotectedvirtual . Creates the EdgeSet array. ; Create the set of edges when needed. ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer. ◆ createEdgesInTetrahedronArray(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::createEdgesInTetrahedronArray ; (; ). protectedvirtual . Creates the array of edge indices for each tetrahedron. ; This function is only called if the EdgesInTetrahedrone array is required. m_edgesInTetrahedron[i] contains the 6 indices of the 6 edges of each tetrahedron The number of each edge is the following : edg,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container.html:51273,clear,clearTetrahedraAroundVertex,51273,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container.html,1,['clear'],['clearTetrahedraAroundVertex']
Usability,ED] HOW TO carving by phantom device ?. /how-to-change-the-texture-of-oglmodel-at-runtime; ; SOFA - Topic: [SOLVED] How to change the texture of OglModel at runtime?. /how-to-close-the-runsofa-window-reinitialize-it-in-python; ; SOFA - Topic: [SOLVED] How to close the runSofa window/reinitialize it in python?. /how-to-completely-prevent-penetration-when-collision-occurs; ; SOFA - Topic: How to completely prevent penetration when collision occurs?. /how-to-connect-two-rigid-parts-while-one-would-separate-from-the-other-halfway; ; SOFA - Topic: How to connect two rigid parts while one would separate from the other halfway?. /how-to-constraint-objects-inside-a-closed-mesh-without-using-collision-models; ; SOFA - Topic: How to constraint objects inside a closed mesh without using collision models?. /how-to-construct-a-grasper-scenewith-force-feedback; . /page; . /15; ; SOFA - Topic: [SOLVED] How to construct a grasper scene(with force feedback) ?. /4; ; SOFA - Topic: [SOLVED] How to construct a grasper scene(with force feedback) ?. SOFA - Topic: [SOLVED] How to construct a grasper scene(with force feedback) ?. /how-to-control-cable-length-in-cable-driven-manipulator; ; SOFA - Topic: How to control cable length in cable-driven manipulator. /how-to-convert-arbitrary-triangular-surface-mesh-to-tetrahedron-mesh; ; SOFA - Topic: [SOLVED] How to convert arbitrary triangular surface mesh to tetrahedron mesh?. /how-to-convert-obj-to-msh-format-file; . /feed; ; [SOLVED] How to convert obj to msh format file? – SOFA. SOFA - Topic: [SOLVED] How to convert obj to msh format file?. /how-to-create-a-coaxial-contraints-between-part-a-and-b; . /feed; ; [SOLVED] How to create a coaxial contraints between part A and B – SOFA. /page; . /15; ; SOFA - Topic: [SOLVED] How to create a coaxial contraints between part A and B. /5; ; SOFA - Topic: [SOLVED] How to create a coaxial contraints between part A and B. SOFA - Topic: [SOLVED] How to create a coaxial contraints between part A and B. /how,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:318252,feedback,feedback,318252,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['feedback'],['feedback']
Usability,"ED] How to define an animation path?. /how-to-determine-the-source-of-an-error; ; SOFA - Topic: [SOLVED] How to determine the source of an stress sigularity?. /how-to-develop-collision-model-that-support-different-proximity; . /feed; ; [SOLVED] How to develop collision model that support different proximity? – SOFA. /page; . /10; ; SOFA - Topic: [SOLVED] How to develop collision model that support different proximity?. /2; ; SOFA - Topic: [SOLVED] How to develop collision model that support different proximity?. /8; ; SOFA - Topic: [SOLVED] How to develop collision model that support different proximity?. /9; ; SOFA - Topic: [SOLVED] How to develop collision model that support different proximity?. SOFA - Topic: [SOLVED] How to develop collision model that support different proximity?. /how-to-disable-warning-message; ; SOFA - Topic: How to disable warning message. /how-to-do-attachconstraint; ; SOFA - Topic: [SOLVED] How to Do AttachConstraint?. /how-to-do-feasible-and-stable-physical-acceleration-in-force-feedback-scene; . /page; . /2; ; SOFA - Topic: [SOLVED] How to do feasible and stable physical acceleration in force feedback scene?. SOFA - Topic: [SOLVED] How to do feasible and stable physical acceleration in force feedback scene?. /how-to-exclude-certain-mesh-elements-from-the-collision-test; ; SOFA - Topic: How to exclude certain mesh elements from the collision test?. /how-to-exert-a-torque-on-an-articulatedsystemmapping; ; SOFA - Topic: How to exert a torque on an ArticulatedSystemMapping?. /how-to-export-obj-files-at-specified-time-steps-before-ending-the-animation; ; SOFA - Topic: [SOLVED] How to export .OBJ files at specified time steps, before ending the animation?. /how-to-export-obj-files-at-specified-time-steps-before-ending-the-animation-2; ; SOFA - Topic: [SOLVED] How to export .OBJ files at specified time steps, before ending the animation?. /how-to-extract-reaction-force-for-certain-nodes; ; SOFA - Topic: [SOLVED] How to extract reaction force f",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:320973,feedback,feedback-scene,320973,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['feedback'],['feedback-scene']
Usability,"EMPLATE(SingleStateAccessor, TDataTypes), StateAccessor);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; MechanicalState< TDataTypes > * getMState ();  ; const MechanicalState< TDataTypes > * getMState () const;  . Protected Member Functions;  PartialLinearMovementProjectiveConstraint ();  ;  ~PartialLinearMovementProjectiveConstraint () override;  ; template<class DataDeriv > ; void projectResponseT (DataDeriv &dx, const std::function< void(DataDeriv &, const unsigned int, const VecBool &)> &clear);  ; template<class MyCoord > ; void interpolatePosition (Real cT, typename std::enable_if<!std::is_same< MyCoord, sofa::defaulttype::RigidCoord< 3, Real > >::value, VecCoord >::type &x);  ; template<class MyCoord > ; void interpolatePosition (Real cT, typename std::enable_if< std::is_same< MyCoord, sofa::defaulttype::RigidCoord< 3, Real > >::value, VecCoord >::type &x);  ;  Protected Member Functions inherited from sofa::core::behavior::ProjectiveConstraintSet< TDataTypes >;  ProjectiveConstraintSet (MechanicalState< TDataTypes > *mm=nullptr);  ;  ~ProjectiveConstraintSet () override;  ;  Protected Member Functions inherited from sofa::core::behavior::BaseProjectiveConstraintSet;  BaseProjectiveConstraintSet ();  ;  ~BaseProjectiveConstraintSet () override;  ;  Protected Member Functions inherited from sofa::core::behavior::StateAccessor;  StateAccessor ();  ;  ~StateAccessor () override=default;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_partial_linear_movement_projective_constraint.html:19938,clear,clear,19938,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_partial_linear_movement_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_partial_linear_movement_projective_constraint.html,1,['clear'],['clear']
Usability,"EdgeArray ();  Returns the HexahedraAroundEdge array (i.e. provide the hexahedron indices adjacent to each edge). More...;  ; const sofa::type::vector< HexahedraAroundQuad > & getHexahedraAroundQuadArray ();  Returns the HexahedraAroundQuad array (i.e. provide the hexahedron indices adjacent to each quad). More...;  ; bool hasHexahedra () const;  ; bool hasEdgesInHexahedron () const;  ; bool hasQuadsInHexahedron () const;  ; bool hasHexahedraAroundVertex () const;  ; bool hasHexahedraAroundEdge () const;  ; bool hasHexahedraAroundQuad () const;  ; sofa::geometry::ElementType getTopologyType () const override;  Returns the type of the topology. More...;  ; bool linkTopologyHandlerToData (core::topology::TopologyHandler *topologyHandler, sofa::geometry::ElementType elementType) override;  ; bool unlinkTopologyHandlerToData (core::topology::TopologyHandler *topologyHandler, sofa::geometry::ElementType elementType) override;  . void clear () override;  ; void addHexa (Index a, Index b, Index c, Index d, Index e, Index f, Index g, Index h) override;  . const SeqHexahedra & getHexahedra () override;  Get the array of hexahedra. More...;  ; const Hexahedron getHexahedron (HexaID i) override;  Get a hexahedron from its index. More...;  ; virtual unsigned int getLocalIndexFromBinaryIndex (const HexahedronBinaryIndex bi) const;  Get the local hexahedron index (0<i<8) from its 3 binary indices. More...;  ; virtual HexahedronBinaryIndex getBinaryIndexFromLocalIndex (const unsigned int li) const;  Get the binary index (array of 3 binary values) from its local index (0<li<8) More...;  ; HexahedronID getHexahedronIndex (PointID v1, PointID v2, PointID v3, PointID v4, PointID v5, PointID v6, PointID v7, PointID v8) override;  Get the index of a hexahedron from the indices of its vertices. More...;  ; const EdgesInHexahedron & getEdgesInHexahedron (HexaID id) override;  Get the 12 edges that form a hexahedron. More...;  ; const QuadsInHexahedron & getQuadsInHexahedron (HexaID id) ov",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_topology_container.html:8420,clear,clear,8420,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_topology_container.html,1,['clear'],['clear']
Usability,"Elements (VecEdgeID elems) override;  Returns the set of element indices adjacent to a given list of elements (i.e. sharing a link) More...;  ;  Public Member Functions inherited from sofa::component::topology::container::dynamic::PointSetTopologyContainer;  SOFA_CLASS (PointSetTopologyContainer, core::topology::TopologyContainer);  ; void addPoint (SReal px, SReal py, SReal pz) override;  ; Size getNbPoints () const override;  Returns the number of vertices in this topology. More...;  ; void setNbPoints (Size n) override;  Set the number of vertices in this topology. More...;  ; bool hasPos () const override;  check if vertices in this topology have positions. More...;  ; SReal getPX (Index i) const override;  Returns the X coordinate of the ith DOF. More...;  ; SReal getPY (Index i) const override;  Returns the Y coordinate of the ith DOF. More...;  ; SReal getPZ (Index i) const override;  Returns the Z coordinate of the ith DOF. More...;  ; void addPoint ();  add one DOF in this topology (simply increment the number of DOF) More...;  ; void addPoints (const Size nPoints);  add a number of DOFs in this topology (simply increase the number of DOF according to this parameter) More...;  ; void removePoint ();  remove one DOF in this topology (simply decrement the number of DOF) More...;  ; void removePoints (const Size nPoints);  remove a number of DOFs in this topology (simply decrease the number of DOF according to this parameter) More...;  ;  Public Member Functions inherited from sofa::core::topology::TopologyContainer;  SOFA_CLASS2 (TopologyContainer, BaseTopologyObject, BaseMeshTopology);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; const SeqEdges & getEdges () override;  ; const SeqTriangles & getTriangles () override;  ; const SeqQuads & getQuads () override;  ; const SeqTetrahedra & getTetrahedra () override;  ; const SeqHexahedra & getHexahedra () override;  ; int getRevisi",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_container.html:17585,simpl,simply,17585,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_container.html,6,['simpl'],['simply']
Usability,"End(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowRange(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsBegin() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsEnd() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowSize() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsRange() constsofa::linearalgebra::BaseMatrixinlinevirtual; choleskysofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >protected; choleskyDecompose()sofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >inline; choleskySolve(VectorEigen &x, const VectorEigen &b) constsofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >inline; clear() overridesofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >inlinevirtual; sofa::linearalgebra::BaseMatrix::clear(Index i, Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; clearCol(Index col) overridesofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >inlinevirtual; clearCols(Index imin, Index imax) overridesofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >inlinevirtual; clearRow(Index i) overridesofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >inlinevirtual; clearRowCol(Index i) overridesofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >inlinevirtual; clearRows(Index imin, Index imax) overridesofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >inlinevirtual; clearRowsCols(Index imin, Index imax) overridesofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >inlinevirtual; coeffRef(Index i, Index j)sofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >inline; cols(void) constsofa::linearalgebra::BaseMatrixinline; colSize(void) const overridesofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >inlinevirtual; compress() overridesofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >inlinevirtual; compressedMatrixsofa::linearalgebra::EigenBaseSparseMatrix< OutData",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_sparse_matrix-members.html:7404,clear,clearCols,7404,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_sparse_matrix-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_sparse_matrix-members.html,1,['clear'],['clearCols']
Usability,"FA_CLASS (SOFA_TEMPLATE2(BarycentricMapperTetrahedronSetTopology, In, Out), SOFA_TEMPLATE2(BarycentricMapperTetrahedronSetTopologyRigid, In, Out));  ;  BarycentricMapperTetrahedronSetTopology (core::topology::BaseMeshTopology *fromTopology, core::topology::BaseMeshTopology *_toTopology);  ;  Public Member Functions inherited from sofa::component::mapping::linear::BarycentricMapperTetrahedronSetTopologyRigid< sofa::defaulttype::StdVectorTypes< sofa::type::Vec< 3, TInReal >, sofa::type::Vec< 3, TInReal >, TInReal >, sofa::defaulttype::StdRigidTypes< 3, TOutReal > >;  SOFA_CLASS (SOFA_TEMPLATE2(BarycentricMapperTetrahedronSetTopologyRigid, sofa::defaulttype::StdVectorTypes< sofa::type::Vec< 3, TInReal >, sofa::type::Vec< 3, TInReal >, TInReal >, sofa::defaulttype::StdRigidTypes< 3, TOutReal >), SOFA_TEMPLATE2(TopologyBarycentricMapper, sofa::defaulttype::StdVectorTypes< sofa::type::Vec< 3, TInReal >, sofa::type::Vec< 3, TInReal >, TInReal >, sofa::defaulttype::StdRigidTypes< 3, TOutReal >));  ; void clear (std::size_t reserve=0) override;  ; Index addPointInTetra (const Index index, const SReal *baryCoords) override;  ; Index addPointOrientationInTetra (const Index tetraIndex, const sofa::type::Matrix3 baryCoorsOrient);  ; void init (const typename Out::VecCoord &out, const typename In::VecCoord &in) override;  ; void apply (typename Out::VecCoord &out, const typename In::VecCoord &in) override;  ; void applyJ (typename Out::VecDeriv &out, const typename In::VecDeriv &in) override;  ; void applyJT (typename In::VecDeriv &out, const typename Out::VecDeriv &in) override;  ; void applyJT (typename In::MatrixDeriv &out, const typename Out::MatrixDeriv &in) override;  ; const sofa::linearalgebra::BaseMatrix * getJ (int outSize, int inSize) override;  ; void draw (const core::visual::VisualParams *, const typename Out::VecCoord &out, const typename In::VecCoord &in) override;  ; void resize (core::State< sofa::defaulttype::StdRigidTypes< 3, TOutReal > > *toModel) override;  .",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_barycentric_mapper_tetrahedron_set_topology_3_018c5b54561c2b3a2f472d358a805328a1.html:2002,clear,clear,2002,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_barycentric_mapper_tetrahedron_set_topology_3_018c5b54561c2b3a2f472d358a805328a1.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_barycentric_mapper_tetrahedron_set_topology_3_018c5b54561c2b3a2f472d358a805328a1.html,1,['clear'],['clear']
Usability,"FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::core::behavior::SingleStateAccessor< DataTypes >; SingleLink< SingleStateAccessor< DataTypes >, MechanicalState< DataTypes >, BaseLink::FLAG_STRONGLINK > mstate;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(DirectionProjectiveConstraint, DataTypes), SOFA_TEMPLATE(sofa::core::behavior::ProjectiveConstraintSet, DataTypes));  ;  SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER (Vector3, sofa::type::Vec3);  ; void clearConstraints ();  ; void addConstraint (Index index);  ; void removeConstraint (Index index);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void projectResponse (const core::MechanicalParams *mparams, DataVecDeriv &resData) override;  ; void projectVelocity (const core::MechanicalParams *mparams, DataVecDeriv &vData) override;  ; void projectPosition (const core::MechanicalParams *mparams, DataVecCoord &xData) override;  ; void projectJacobianMatrix (const core::MechanicalParams *mparams, DataMatrixDeriv &cData) override;  ; void applyConstraint (const core::MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix) override;  Project the global Mechanical Matrix to constrained space using offset parameter. More...;  ; void applyConstraint (const cor",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_direction_projective_constraint.html:4668,clear,clearConstraints,4668,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_direction_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_direction_projective_constraint.html,1,['clear'],['clearConstraints']
Usability,"GeometryAlgorithms< DataTypes >; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseTopologyObject()sofa::core::topology::BaseTopologyObjectinlineprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >inlinestatic; sofa::core::topology::GeometryAlgorithms::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; compute2EdgesIntersection(const Coord edge1[2], const Coord edge2[2], bool &intersected)sofa::component::topology::container::dynamic::EdgeSetGeometryAlgorithms< DataTypes >; compute2PointsBarycoefs(const sofa::type::Vec< 3, Real > &p, PointID ind_p1, PointID ind_p2) const =deletesofa::component::topology::container::dynamic::EdgeSetGeometryAlgorithms< DataTypes >; compute3PointsBarycoefs(const sofa::type::Vec< 3, Real > &p, PointID ind_p1, PointID ind_p2, PointID ind_p3, bool bRest=false) constsofa::component::topology::container::dynamic::TriangleSetGeometryAlgorithms< DataTypes >; computeAngle(PointID ind_p0, PointID ind_p1, PointID ind_p2) constsofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >; computeBaryEdgePoint(PointID p0, PointID p1, Real coord_p) constsofa::component::topology::container::dynamic::TriangleSetGeometryAlgorithms< DataTypes >; computeBaryEdgePoint(Edge e, Real coord_p) constsofa",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_geometry_algorithms-members.html:2969,clear,clearLoggedMessages,2969,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_geometry_algorithms-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_geometry_algorithms-members.html,1,['clear'],['clearLoggedMessages']
Usability,"GeometryAlgorithms< DataTypes >; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseTopologyObject()sofa::core::topology::BaseTopologyObjectinlineprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >inlinestatic; sofa::core::topology::GeometryAlgorithms::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; compute2EdgesIntersection(const Coord edge1[2], const Coord edge2[2], bool &intersected)sofa::component::topology::container::dynamic::EdgeSetGeometryAlgorithms< DataTypes >; compute2PointsBarycoefs(const sofa::type::Vec< 3, Real > &p, PointID ind_p1, PointID ind_p2) const =deletesofa::component::topology::container::dynamic::EdgeSetGeometryAlgorithms< DataTypes >; computeAngle(PointID ind_p0, PointID ind_p1, PointID ind_p2) constsofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >virtual; computeEdgeAABB(const EdgeID i, CPos &minCoord, CPos &maxCoord) constsofa::component::topology::container::dynamic::EdgeSetGeometryAlgorithms< DataTypes >; computeEdgeBarycentricCoordinates(const sofa::type::Vec< 3, Real > &p, PointID ind_p1, PointID ind_p2, ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_geometry_algorithms-members.html:2623,clear,clearLoggedMessages,2623,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_geometry_algorithms-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_geometry_algorithms-members.html,2,['clear'],['clearLoggedMessages']
Usability,"GeometryAlgorithms< DataTypes >; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseTopologyObject()sofa::core::topology::BaseTopologyObjectinlineprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >inlinestatic; sofa::core::topology::GeometryAlgorithms::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeAngle(PointID ind_p0, PointID ind_p1, PointID ind_p2) constsofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >virtual; Coord typedefsofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; CPos typedefsofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; d_showIndicesScalesofa::component::topology::container::dynamic::PointSetG",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_geometry_algorithms-members.html:2519,clear,clearLoggedMessages,2519,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_geometry_algorithms-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_geometry_algorithms-members.html,1,['clear'],['clearLoggedMessages']
Usability,"GridRamificationTopology; buildVirtualFinerLevels() overridesofa::component::topology::container::grid::SparseGridMultipleTopologyvirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeIndices(Index oldidx, Index newidx)sofa::component::topology::container::grid::SparseGridRamificationTopology; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkConnexity() overridesofa::component::topology::container::constant::MeshTopologyvirtual; checkTopology() constsofa::core::topology::BaseMeshTopologyinlinevirtual; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear() overridesofa::component::topology::container::constant::MeshTopologyvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeBoundingBox(const type::vector< type::Vec3 > &vertices, SReal &xmin, SReal &xmax, SReal &ymin, SReal &ymax, SReal &zmin, SReal &zmax) constsofa::component::topology::container::grid::SparseGridTopologyprotected; computeRelativeOrientationInQuad(const PointID ind_p0, const PointID ind_p1, const PointID ind_q)sofa::component::topology::container::constant::MeshTopology; computeRelativeOrientationInTri(const PointID ind_p0, const PointID ind_p1, const PointID ind_t)sofa::component::topology::container::constant::MeshTopology; constructCollisionModels(const sofa::type::vector< sofa::core::topology::BaseMeshTopology * > &list_mesh, const type::vector< Data< type::vector< sofa::type::Vec< 3, T > > > * > &list_X)sofa::component::topology::container::grid::SparseGridTopologyprotected; convolutionSizesofa::component::topology::container::grid:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_sparse_grid_multiple_topology-members.html:9143,clear,clearLoggedMessages,9143,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_sparse_grid_multiple_topology-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_sparse_grid_multiple_topology-members.html,1,['clear'],['clearLoggedMessages']
Usability,HexahedronSetTopologyContainer::MultilevelHexahedronSetTopologyContainer ; (; ). protected . ◆ MultilevelHexahedronSetTopologyContainer() [2/2]. sofa::component::topology::container::dynamic::MultilevelHexahedronSetTopologyContainer::MultilevelHexahedronSetTopologyContainer ; (; const type::vector< Hexahedron > & ; hexahedra). protected . ◆ ~MultilevelHexahedronSetTopologyContainer(). sofa::component::topology::container::dynamic::MultilevelHexahedronSetTopologyContainer::~MultilevelHexahedronSetTopologyContainer ; (; ). overrideprotected . Function details. ◆ addTopologyChangeFine(). void sofa::component::topology::container::dynamic::MultilevelHexahedronSetTopologyContainer::addTopologyChangeFine ; (; const core::topology::TopologyChange * ; topologyChange). inline . ◆ beginChangeFine(). std::list<const core::topology::TopologyChange *>::const_iterator sofa::component::topology::container::dynamic::MultilevelHexahedronSetTopologyContainer::beginChangeFine ; (; ); const. inline . ◆ clear(). void sofa::component::topology::container::dynamic::MultilevelHexahedronSetTopologyContainer::clear ; (; ). overridevirtual . Procedural creation methods ; Reimplemented from sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer. ◆ endChangeFine(). std::list<const core::topology::TopologyChange *>::const_iterator sofa::component::topology::container::dynamic::MultilevelHexahedronSetTopologyContainer::endChangeFine ; (; ); const. inline . ◆ getChangeListFine(). const std::list<const core::topology::TopologyChange *>& sofa::component::topology::container::dynamic::MultilevelHexahedronSetTopologyContainer::getChangeListFine ; (; ); const. inline . ◆ getCoarseResolution(). const Vec3i& sofa::component::topology::container::dynamic::MultilevelHexahedronSetTopologyContainer::getCoarseResolution ; (; ); const. inline . ◆ getHexaChildren(). MultilevelHexahedronSetTopologyContainer::Index sofa::component::topology::container::dynamic::MultilevelHexahedronSetTopolog,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_multilevel_hexahedron_set_topology_container.html:49235,clear,clear,49235,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_multilevel_hexahedron_set_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_multilevel_hexahedron_set_topology_container.html,1,['clear'],['clear']
Usability,"I;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Static Public Member Functions |; List of all members . sofa::core::behavior::CRSMultiMatrixAccessor Class Reference . #include <CRSMultiMatrixAccessor.h>. Inheritance diagram for sofa::core::behavior::CRSMultiMatrixAccessor:. [legend]. Public Member Functions;  CRSMultiMatrixAccessor ();  ;  ~CRSMultiMatrixAccessor () override;  ; void addMechanicalMapping (sofa::core::BaseMapping *mapping) override;  ; void computeGlobalMatrix () override;  ;  Public Member Functions inherited from sofa::core::behavior::DefaultMultiMatrixAccessor;  DefaultMultiMatrixAccessor ();  ;  ~DefaultMultiMatrixAccessor () override;  ; virtual void clear ();  ; virtual void setGlobalMatrix (linearalgebra::BaseMatrix *matrix);  ; void addMechanicalState (const sofa::core::behavior::BaseMechanicalState *mstate) override;  ; void addMechanicalMapping (sofa::core::BaseMapping *mapping) override;  ; void addMappedMechanicalState (const sofa::core::behavior::BaseMechanicalState *mstate) override;  ; virtual void setupMatrices ();  ; Index getGlobalDimension () const override;  ; int getGlobalOffset (const sofa::core::behavior::BaseMechanicalState *mstate) const override;  ; MatrixRef getMatrix (const sofa::core::behavior::BaseMechanicalState *mstate) const override;  ; InteractionMatrixRef getMatrix (const sofa::core::behavior::BaseMechanicalState *mstate1, const sofa::core::behavior::BaseMechanicalState *mstate2) const override;  ; void setDoPrintInfo (bool value);  ;  Public Member Functions inherited from sofa::core::behavior::MultiMatrixAccessor; virtual ~MultiMatrixAccessor ();  . Static Public Member Functions; static linearalgebra::BaseMatrix * createMatrix (const sofa::core::behavior::BaseMechanicalState *mstate1, const sofa::core::behavior::BaseMechanicalState *mstate2);  ; static linearalgebra::BaseMatrix * createMatrix (const sofa::core::behavior::BaseMechanicalState *mstate1, const sofa::core::b",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_c_r_s_multi_matrix_accessor.html:808,clear,clear,808,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_c_r_s_multi_matrix_accessor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_c_r_s_multi_matrix_accessor.html,1,['clear'],['clear']
Usability,"IGNED_INT, sofa::type::Vec< 3, unsigned int > >, sofa::gl::component::shader::OglAttribute< 2, GL_UNSIGNED_INT, sofa::type::Vec< 2, unsigned int > >, sofa::gl::component::shader::OglAttribute< 4, GL_INT, sofa::type::Vec< 4, int > >, sofa::gl::component::shader::OglAttribute< 3, GL_FLOAT, sofa::type::Vec< 3, float > >, sofa::gl::component::shader::OglAttribute< 4, GL_FLOAT, sofa::type::Vec< 4, float > >, sofa::gl::component::shader::OglAttribute< 2, GL_FLOAT, sofa::type::Vec< 2, float > >, sofa::gl::component::shader::OglAttribute< 3, GL_INT, sofa::type::Vec< 3, int > >, sofa::gl::component::shader::OglAttribute< 2, GL_INT, sofa::type::Vec< 2, int > >, sofa::gl::component::shader::OglAttribute< 1, GL_INT, int >, sofa::gl::component::shader::OglAttribute< 1, GL_UNSIGNED_INT, unsigned int >, sofa::gl::component::shader::OglAttribute< 4, GL_UNSIGNED_INT, sofa::type::Vec< 4, unsigned int > >, sofa::gl::component::shader::LightManager, and sofa::gl::component::rendering3d::ClipPlane. ◆ clearVisual(). virtual void sofa::core::visual::VisualModel::clearVisual ; (; ). inlinevirtual . clear some graphical resources (generally called before the deleteVisitor). ; Note: for more general usage you can use the cleanup visitor . ◆ drawShadow(). virtual void sofa::core::visual::VisualModel::drawShadow ; (; const VisualParams * ; vparams). inlinevirtual . Display shadow-casting surfaces. ; This method default to calling draw(). Object that do not cast any shadows, or that use a different LOD for them should reimplement it. ; Reimplemented in sofa::component::visual::VisualModelImpl. ◆ drawTransparent(). virtual void sofa::core::visual::VisualModel::drawTransparent ; (; const VisualParams * ; ). inlinevirtual . Display transparent surfaces. ; Transparent objects should use this method to get a correct display order. ; Reimplemented in sofa::component::visual::VisualTransform, sofa::gl::component::rendering3d::SlicedVolumetricModel, sofa::gl::component::rendering3d::PointSplatModel, sof",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_model.html:18925,clear,clearVisual,18925,api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_model.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_model.html,1,['clear'],['clearVisual']
Usability,"Id v) overridesofa::core::State< TDataTypes >virtual; bboxsofa::component::visual::VisualModelImpl; blendEqsofa::gl::component::rendering3d::OglModelprotected; blendEquationsofa::gl::component::rendering3d::OglModelprotected; blendTransparencysofa::gl::component::rendering3d::OglModel; bwdDraw(core::visual::VisualParams *) overridesofa::gl::component::shader::OglShaderVisualModelvirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; canUsePatchessofa::gl::component::rendering3d::OglModelprotected; castShadowsofa::component::visual::VisualModelImpl; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *params, bool=false) overridesofa::component::visual::VisualModelImplvirtual; VisualState< defaulttype::Vec3Types >::computeBBox() constsofa::core::State< TDataTypes >; computeBitangent(const Coord &v1, const Coord &v2, const Coord &v3, const TexCoord &t1, const TexCoord &t2, const TexCoord &t3)sofa::component::visual::VisualModelImplstatic; computeMesh()sofa::component::visual::VisualModelImplvirtual; computeNormals()sofa::component::visual::VisualModelImplvirtual; computePositions()sofa::component::visual::VisualModelImplvirtual; computeRestNormals()sofa::gl::component::shader::OglShaderVisualModel; computeRestPositions()sofa::gl::component::shader::OglShaderVisualModel; computeTangent(const Coord &v1, const Coord &v2, const Coord &v3, const TexCoord &t1, const TexCoord &t2, const TexCoord &t3)sofa::component::visual::VisualModelImplstatic; com",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_visual_model-members.html:3613,clear,clearLoggedMessages,3613,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_visual_model-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_visual_model-members.html,1,['clear'],['clearLoggedMessages']
Usability,"In, TInRoot, TOut >; applyJT(InVecDeriv &out, const OutVecDeriv &in, InRootVecDeriv *outroot)sofa::component::mapping::linear::DeformableOnRigidFrameMapping< TIn, TInRoot, TOut >; applyJT(const core::MechanicalParams *, const type::vector< InDataVecDeriv * > &dataVecOutForce, const type::vector< InRootDataVecDeriv * > &dataVecOutRootForce, const type::vector< const OutDataVecDeriv * > &dataVecInForce) overridesofa::component::mapping::linear::DeformableOnRigidFrameMapping< TIn, TInRoot, TOut >; applyJT(InMatrixDeriv &out, const OutMatrixDeriv &in, InRootMatrixDeriv *outroot)sofa::component::mapping::linear::DeformableOnRigidFrameMapping< TIn, TInRoot, TOut >; applyJT(const core::ConstraintParams *, const type::vector< InDataMatrixDeriv * > &dataMatOutConst, const type::vector< InRootDataMatrixDeriv * > &dataMatOutRootConst, const type::vector< const OutDataMatrixDeriv * > &dataMatInConst) overridesofa::component::mapping::linear::DeformableOnRigidFrameMapping< TIn, TInRoot, TOut >; clear(int reserve=0)sofa::component::mapping::linear::DeformableOnRigidFrameMapping< TIn, TInRoot, TOut >; Coord typedefsofa::component::mapping::linear::DeformableOnRigidFrameMapping< TIn, TInRoot, TOut >; d_globalToLocalCoordssofa::component::mapping::linear::DeformableOnRigidFrameMapping< TIn, TInRoot, TOut >; d_indexsofa::component::mapping::linear::DeformableOnRigidFrameMapping< TIn, TInRoot, TOut >; d_indexFromEndsofa::component::mapping::linear::DeformableOnRigidFrameMapping< TIn, TInRoot, TOut >; d_repartitionsofa::component::mapping::linear::DeformableOnRigidFrameMapping< TIn, TInRoot, TOut >; d_rootAngularForceScaleFactorsofa::component::mapping::linear::DeformableOnRigidFrameMapping< TIn, TInRoot, TOut >; d_rootLinearForceScaleFactorsofa::component::mapping::linear::DeformableOnRigidFrameMapping< TIn, TInRoot, TOut >; datasofa::component::mapping::linear::DeformableOnRigidFrameMapping< TIn, TInRoot, TOut >; DeformableOnRigidFrameMapping()sofa::component::mapping::linear::Deform",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_deformable_on_rigid_frame_mapping-members.html:2751,clear,clear,2751,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_deformable_on_rigid_frame_mapping-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_deformable_on_rigid_frame_mapping-members.html,1,['clear'],['clear']
Usability,"In2, Out >, State< Out >, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK >, sofa::core::objectmodel::MultiLink< Multi2Mapping< In1, In2, Out >, State< In2 >, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK >, sofa::core::objectmodel::MultiLink< DAGNode, DAGNode, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_DOUBLELINK >, sofa::core::objectmodel::MultiLink< Node, T, BaseLink::FLAG_DOUBLELINK|(false ? BaseLink::FLAG_STRONGLINK :BaseLink::FLAG_DUPLICATE)>, and sofa::core::objectmodel::MultiLink< MyType, sofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >, BaseLink::FLAG_DUPLICATE >. ◆ addPath(). template<class TOwnerType , class TDestType , unsigned TFlags> . bool sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags >::addPath ; (; const std::string & ; path). inline . ◆ begin(). template<class TOwnerType , class TDestType , unsigned TFlags> . const_iterator sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags >::begin ; (; ); const. inline . ◆ clear(). template<class TOwnerType , class TDestType , unsigned TFlags> . void sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags >::clear ; (; ). inline . ◆ empty(). template<class TOwnerType , class TDestType , unsigned TFlags> . bool sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags >::empty ; (; ); const. inline . ◆ end(). template<class TOwnerType , class TDestType , unsigned TFlags> . const_iterator sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags >::end ; (; ); const. inline . ◆ getDestClass(). template<class TOwnerType , class TDestType , unsigned TFlags> . const BaseClass* sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags >::getDestClass ; (; ); const. inlineoverridevirtual . Implements sofa::core::objectmodel::BaseLink. ◆ getIndex(). template<class TOwnerType , class TDestType , unsigned TFlags> . DestType* sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags >::getIndex ; (; std::size_t ; index); const. inlineprotected . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_t_link.html:31346,clear,clear,31346,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_t_link.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_t_link.html,1,['clear'],['clear']
Usability,"Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowEnd(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowRange(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsBegin() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsEnd() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowSize() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsRange() constsofa::linearalgebra::BaseMatrixinlinevirtual; choleskysofa::linearalgebra::EigenBaseSparseMatrix< TReal >protected; choleskyDecompose()sofa::linearalgebra::EigenBaseSparseMatrix< TReal >inline; choleskySolve(VectorEigen &x, const VectorEigen &b) constsofa::linearalgebra::EigenBaseSparseMatrix< TReal >inline; clear() overridesofa::linearalgebra::EigenBaseSparseMatrix< TReal >inlinevirtual; sofa::linearalgebra::BaseMatrix::clear(Index i, Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; clearCol(Index col) overridesofa::linearalgebra::EigenBaseSparseMatrix< TReal >inlinevirtual; clearCols(Index imin, Index imax) overridesofa::linearalgebra::EigenBaseSparseMatrix< TReal >inlinevirtual; clearRow(Index i) overridesofa::linearalgebra::EigenBaseSparseMatrix< TReal >inlinevirtual; clearRowCol(Index i) overridesofa::linearalgebra::EigenBaseSparseMatrix< TReal >inlinevirtual; clearRows(Index imin, Index imax) overridesofa::linearalgebra::EigenBaseSparseMatrix< TReal >inlinevirtual; clearRowsCols(Index imin, Index imax) overridesofa::linearalgebra::EigenBaseSparseMatrix< TReal >inlinevirtual; coeffRef(Index i, Index j)sofa::linearalgebra::EigenBaseSparseMatrix< TReal >inline; cols(void) constsofa::linearalgebra::BaseMatrixinline; colSize(void) const overridesofa::linearalgebra::EigenBaseSparseMatrix< TReal >inlinevirtual; compress() overridesofa::linearalgebra::EigenBaseSparseMatrix< TReal >inlinevirtual; CompressedMatrix typedefsofa::linearalgebra::EigenBaseSparseMatrix< TReal >; compressedMatrixsofa::linearalgebra::EigenBaseSparseMatrix< TReal >; copy(const EigenBaseSpars",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_base_sparse_matrix-members.html:5737,clear,clearCols,5737,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_base_sparse_matrix-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_base_sparse_matrix-members.html,1,['clear'],['clearCols']
Usability,"Index j, const T *buffer)sofa::linearalgebra::BaseMatrixinline; bRowBegin(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowEnd(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowRange(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsBegin() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsEnd() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowSize() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsRange() constsofa::linearalgebra::BaseMatrixinlinevirtual; clear() overridesofa::core::behavior::ApplyConstraintCompatinlinevirtual; sofa::linearalgebra::BaseMatrix::clear(Index i, Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; clearCol(Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; clearCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRow(Index i)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowCol(Index i) overridesofa::core::behavior::ApplyConstraintCompatinlinevirtual; clearRows(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowsCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; cols(void) constsofa::linearalgebra::BaseMatrixinline; colSize() const overridesofa::core::behavior::ApplyConstraintCompatinlinevirtual; componentsofa::core::behavior::ApplyConstraintCompat; compress()sofa::linearalgebra::BaseMatrixvirtual; createBlockAccessor(Index row, Index col, void *internalPtr=nullptr)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockAccessor(Index row, Index col, Index internalData)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockConstAccessor(Index row, Index col, void *internalPtr=nullptr) constsofa::linearalgebra::BaseMatrixinlineprotected; createBlockConstAccessor(Index row, Index col, Index internalData) constsofa::linearalgebra::BaseMatrixinlineprotected; createColBlockConstIterator(Index row, void *internalPtr) constsofa::linearalgebra::BaseMatrixinlineprotected; createColBlockConst",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_apply_constraint_compat-members.html:5427,clear,clearRows,5427,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_apply_constraint_compat-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_apply_constraint_compat-members.html,1,['clear'],['clearRows']
Usability,"Index, . const SReal * ; baryCoords . ). override . ◆ apply(). template<class In , class Out > . void sofa::component::mapping::linear::BarycentricMapperRegularGridTopology< In, Out >::apply ; (; typename Out::VecCoord & ; out, . const typename In::VecCoord & ; in . ). override . ◆ applyJ(). template<class In , class Out > . void sofa::component::mapping::linear::BarycentricMapperRegularGridTopology< In, Out >::applyJ ; (; typename Out::VecDeriv & ; out, . const typename In::VecDeriv & ; in . ). override . ◆ applyJT() [1/2]. template<class In , class Out > . void sofa::component::mapping::linear::BarycentricMapperRegularGridTopology< In, Out >::applyJT ; (; typename In::MatrixDeriv & ; out, . const typename Out::MatrixDeriv & ; in . ). override . ◆ applyJT() [2/2]. template<class In , class Out > . void sofa::component::mapping::linear::BarycentricMapperRegularGridTopology< In, Out >::applyJT ; (; typename In::VecDeriv & ; out, . const typename Out::VecDeriv & ; in . ). override . ◆ clear(). template<class In , class Out > . void sofa::component::mapping::linear::BarycentricMapperRegularGridTopology< In, Out >::clear ; (; std::size_t ; reserve = 0). override . ◆ draw(). template<class In , class Out > . void sofa::component::mapping::linear::BarycentricMapperRegularGridTopology< In, Out >::draw ; (; const core::visual::VisualParams * ; vparams, . const typename Out::VecCoord & ; out, . const typename In::VecCoord & ; in . ). override . ◆ getJ(). template<class In , class Out > . const sofa::linearalgebra::BaseMatrix * sofa::component::mapping::linear::BarycentricMapperRegularGridTopology< In, Out >::getJ ; (; int ; outSize, . int ; inSize . ). override . ◆ getTopology(). template<class In , class Out > . RegularGridTopology* sofa::component::mapping::linear::BarycentricMapperRegularGridTopology< In, Out >::getTopology ; (; ). inline . ◆ init(). template<class In , class Out > . void sofa::component::mapping::linear::BarycentricMapperRegularGridTopology< In, Out >::in",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_barycentric_mapper_regular_grid_topology.html:5188,clear,clear,5188,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_barycentric_mapper_regular_grid_topology.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_barycentric_mapper_regular_grid_topology.html,1,['clear'],['clear']
Usability,"IndexVerification >.; Reimplemented in sofa::component::linearsystem::ConstantLocalMappedMatrix< c, TBlockType >, and sofa::component::linearsystem::SparsityPatternLocalMappedMatrix< c, TBlockType >. ◆ add() [4/4]. template<sofa::core::matrixaccumulator::Contribution c, class TBlockType > . void sofa::component::linearsystem::AssemblingMappedMatrixAccumulator< c, TBlockType >::add ; (; const core::matrixaccumulator::no_check_policy & ; , . sofa::SignedIndex ; row, . sofa::SignedIndex ; col, . float ; value . ). overrideprotectedvirtual . Reimplemented from sofa::core::MatrixAccumulatorIndexChecker< BaseAssemblingMatrixAccumulator< c >, sofa::core::matrixaccumulator::NoIndexVerification >.; Reimplemented in sofa::component::linearsystem::ConstantLocalMappedMatrix< c, TBlockType >, and sofa::component::linearsystem::SparsityPatternLocalMappedMatrix< c, TBlockType >. ◆ clear(). template<sofa::core::matrixaccumulator::Contribution c, class TBlockType > . void sofa::component::linearsystem::AssemblingMappedMatrixAccumulator< c, TBlockType >::clear. override . ◆ getMatrix(). template<sofa::core::matrixaccumulator::Contribution c, class TBlockType > . const std::shared_ptr< LocalMappedMatrixType< TBlockType > > & sofa::component::linearsystem::AssemblingMappedMatrixAccumulator< c, TBlockType >::getMatrix. ◆ shareMatrix(). template<sofa::core::matrixaccumulator::Contribution c, class TBlockType > . void sofa::component::linearsystem::AssemblingMappedMatrixAccumulator< c, TBlockType >::shareMatrix ; (; const std::shared_ptr< LocalMappedMatrixType< TBlockType > > & ; m). ◆ SOFA_CLASS(). template<sofa::core::matrixaccumulator::Contribution c, class TBlockType > . sofa::component::linearsystem::AssemblingMappedMatrixAccumulator< c, TBlockType >::SOFA_CLASS ; (; AssemblingMappedMatrixAccumulator< c, TBlockType > ; , . AssemblingMatrixAccumulator< c > ;  . ). sofacomponentlinearsystemAssemblingMappedMatrixAccumulator; Generated on Mon Nov 11 2024 02:47:32 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_assembling_mapped_matrix_accumulator.html:9629,clear,clear,9629,api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_assembling_mapped_matrix_accumulator.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_assembling_mapped_matrix_accumulator.html,1,['clear'],['clear']
Usability,"Index ; , . const std::string & ;  . ). inlinestatic . ◆ size() [1/2]. template<class TDataType > . static sofa::Size sofa::defaulttype::DefaultDataTypeInfo< TDataType >::size ; (; ). inlinestatic . ◆ size() [2/2]. template<class TDataType > . static sofa::Size sofa::defaulttype::DefaultDataTypeInfo< TDataType >::size ; (; const DataType & ; ). inlinestatic . Enum details. ◆ anonymous enum. template<class TDataType > . anonymous enum. EnumeratorValidInfo 1 if this type has valid infos . ◆ anonymous enum. template<class TDataType > . anonymous enum. EnumeratorFixedSize 1 if this type has a fixed size . ◆ anonymous enum. template<class TDataType > . anonymous enum. EnumeratorZeroConstructor 1 if the constructor is equivalent to setting memory to 0 . ◆ anonymous enum. template<class TDataType > . anonymous enum. EnumeratorSimpleCopy 1 if copying the data can be done with a memcpy . ◆ anonymous enum. template<class TDataType > . anonymous enum. EnumeratorSimpleLayout 1 if the layout in memory is simply N values of the same base type . ◆ anonymous enum. template<class TDataType > . anonymous enum. EnumeratorInteger 1 if this type uses integer values . ◆ anonymous enum. template<class TDataType > . anonymous enum. EnumeratorScalar 1 if this type uses scalar values . ◆ anonymous enum. template<class TDataType > . anonymous enum. EnumeratorText 1 if this type uses text values . ◆ anonymous enum. template<class TDataType > . anonymous enum. EnumeratorCopyOnWrite 1 if this type uses copy-on-write. The memory is shared with its source Data while only the source is changing (and the source modifications are then visible in the current Data). As soon as modifications are applied to the current Data, it will allocate its own value, and no longer shares memory with the source. . ◆ anonymous enum. template<class TDataType > . anonymous enum. EnumeratorContainer 1 if this type is a container . ◆ anonymous enum. template<class TDataType > . anonymous enum. EnumeratorSize largest know",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_default_data_type_info.html:4104,simpl,simply,4104,api/master/sofa/html/structsofa_1_1defaulttype_1_1_default_data_type_info.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_default_data_type_info.html,1,['simpl'],['simply']
Usability,"Inheritance diagram for sofa::core::collision::DetectionOutputVector:. [legend]; Detailed Description; Abstract description of a set of contact point. . Public Member Functions; virtual void clear ()=0;  Clear the content of this vector. More...;  ; virtual unsigned int size () const =0;  Current size (number of detected contacts. More...;  ; bool empty () const;  Test if the vector is empty. More...;  ; virtual void release ();  Delete this vector from memory once the contact pair is no longer active. More...;  ; virtual type::Vec3 getFirstPosition (unsigned idx)=0;  Const iterator to iterate the detection pairs. More...;  ; virtual type::Vec3 getSecondPosition (unsigned idx)=0;  Const iterator end to iterate the detection pairs. More...;  . Protected Member Functions; virtual ~DetectionOutputVector ();  . Constructor details. ◆ ~DetectionOutputVector(). virtual sofa::core::collision::DetectionOutputVector::~DetectionOutputVector ; (; ). inlineprotectedvirtual . Function details. ◆ clear(). virtual void sofa::core::collision::DetectionOutputVector::clear ; (; ). pure virtual . Clear the content of this vector. ; Implemented in sofa::core::collision::TDetectionOutputVector< CM1, CM2 >. ◆ empty(). bool sofa::core::collision::DetectionOutputVector::empty ; (; ); const. inline . Test if the vector is empty. . ◆ getFirstPosition(). virtual type::Vec3 sofa::core::collision::DetectionOutputVector::getFirstPosition ; (; unsigned ; idx). pure virtual . Const iterator to iterate the detection pairs. ; Implemented in sofa::core::collision::TDetectionOutputVector< CM1, CM2 >. ◆ getSecondPosition(). virtual type::Vec3 sofa::core::collision::DetectionOutputVector::getSecondPosition ; (; unsigned ; idx). pure virtual . Const iterator end to iterate the detection pairs. ; Implemented in sofa::core::collision::TDetectionOutputVector< CM1, CM2 >. ◆ release(). virtual void sofa::core::collision::DetectionOutputVector::release ; (; ). inlinevirtual . Delete this vector from memory once",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_detection_output_vector.html:1385,clear,clear,1385,api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_detection_output_vector.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_detection_output_vector.html,1,['clear'],['clear']
Usability,"Init()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::component::engine::select::SubsetTopology< DataTypes >inlinestatic; sofa::core::DataEngine::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; centerssofa::component::engine::select::SubsetTopology< DataTypes >; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanDirty(const core::ExecParams *params=nullptr)sofa::core::DataTrackerDDGNodevirtual; sofa::core::objectmodel::DDGNode::cleanDirty()sofa::core::objectmodel::DDGNode; cleanDirtyOutputsOfInputs()sofa::core::objectmodel::DDGNodeprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::component::engine::select::SubsetTopology< DataTypes >virtual; Coord typedefsofa::component::engine::select::SubsetTopology< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; CPos typedefsofa::component::engine::select::SubsetTopology< DataTypes >; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; d_tetrahedraInputsofa::component::engine::select::SubsetTopology< DataTypes >; DataEngine()sofa::core::DataEngineprotected; DataTrackerDDGNode()sofa::core::DataTrackerDDGNodeinline; DDGLinkContainer typedefsofa::core::objectmodel::DDGNode; DDGLinkIterator typedefsofa::core::objectmodel::DDGNode; DDGNode()",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_subset_topology-members.html:3185,clear,clearLoggedMessages,3185,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_subset_topology-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_subset_topology-members.html,1,['clear'],['clearLoggedMessages']
Usability,"Iterator out, unsigned outmaxsize, bool clear=true);  . Attribute details. ◆ head. AtomicInt sofa::helper::system::thread::ManyThreadsPerEnd::head. protected . ◆ tail. AtomicInt sofa::helper::system::thread::ManyThreadsPerEnd::tail. protected . Constructor details. ◆ ManyThreadsPerEnd(). SOFA_HELPER_API sofa::helper::system::thread::ManyThreadsPerEnd::ManyThreadsPerEnd ; (; ). inlineprotected . Function details. ◆ init(). SOFA_HELPER_API void sofa::helper::system::thread::ManyThreadsPerEnd::init ; (; AtomicInt ; array[], . int ; maxCapacity . ). inlineprotected . ◆ isEmpty(). SOFA_HELPER_API bool sofa::helper::system::thread::ManyThreadsPerEnd::isEmpty ; (; unsigned ; maxSize); const. inlineprotected . ◆ isFull(). SOFA_HELPER_API bool sofa::helper::system::thread::ManyThreadsPerEnd::isFull ; (; unsigned ; maxSize); const. inlineprotected . ◆ pop() [1/2]. SOFA_HELPER_API bool sofa::helper::system::thread::ManyThreadsPerEnd::pop ; (; AtomicInt ; array[], . int ; maxSize, . int ; maxCapacity, . AtomicInt & ; item, . bool ; clear = true . ). inlineprotected . ◆ pop() [2/2]. template<class OutputIterator > . unsigned sofa::helper::system::thread::ManyThreadsPerEnd::pop ; (; AtomicInt ; array[], . int ; maxSize, . int ; maxCapacity, . OutputIterator ; out, . unsigned ; outmaxsize, . bool ; clear = true . ). protected . ◆ push(). SOFA_HELPER_API bool sofa::helper::system::thread::ManyThreadsPerEnd::push ; (; AtomicInt ; array[], . int ; maxSize, . int ; maxCapacity, . const AtomicInt & ; item . ). inlineprotected . ◆ size(). SOFA_HELPER_API unsigned sofa::helper::system::thread::ManyThreadsPerEnd::size ; (; unsigned ; maxSize); const. inlineprotected . ◆ skip(). SOFA_HELPER_API unsigned sofa::helper::system::thread::ManyThreadsPerEnd::skip ; (; AtomicInt ; array[], . int ; maxSize, . int ; maxCapacity, . unsigned ; outmaxsize, . bool ; clear = true . ). inlineprotected . sofahelpersystemthreadManyThreadsPerEnd; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1system_1_1thread_1_1_many_threads_per_end.html:2361,clear,clear,2361,api/master/sofa/html/classsofa_1_1helper_1_1system_1_1thread_1_1_many_threads_per_end.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1system_1_1thread_1_1_many_threads_per_end.html,3,['clear'],['clear']
Usability,I MappedObject< Rigid3Types >;  ; template class SOFA_COMPONENT_STATECONTAINER_API MappedObject< Rigid2Types >;  ; template class SOFA_COMPONENT_STATECONTAINER_API MechanicalObject< Vec3Types >;  ; template class SOFA_COMPONENT_STATECONTAINER_API MechanicalObject< Vec2Types >;  ; template class SOFA_COMPONENT_STATECONTAINER_API MechanicalObject< Vec1Types >;  ; template class SOFA_COMPONENT_STATECONTAINER_API MechanicalObject< Vec6Types >;  ; template class SOFA_COMPONENT_STATECONTAINER_API MechanicalObject< Rigid3Types >;  ; template class SOFA_COMPONENT_STATECONTAINER_API MechanicalObject< Rigid2Types >;  . Typedef Documentation. ◆ nat. typedef std::size_t sofa::component::statecontainer::nat. Function Documentation. ◆ clear() [1/3]. template<> . void sofa::component::statecontainer::clear ; (; double & ; t). inline . ◆ clear() [2/3]. template<> . void sofa::component::statecontainer::clear ; (; float & ; t). inline . ◆ clear() [3/3]. template<class T > . void sofa::component::statecontainer::clear ; (; T & ; t). inline . ◆ getModuleName(). const char * sofa::component::statecontainer::getModuleName ; (; ). ◆ getModuleVersion(). const char * sofa::component::statecontainer::getModuleVersion ; (; ). ◆ init(). SOFA_COMPONENT_STATECONTAINER_API void sofa::component::statecontainer::init ; (; ). ◆ initExternalModule(). void sofa::component::statecontainer::initExternalModule ; (; ). ◆ registerMappedObject(). void sofa::component::statecontainer::registerMappedObject ; (; sofa::core::ObjectFactory * ; factory). ◆ registerMechanicalObject(). void sofa::component::statecontainer::registerMechanicalObject ; (; sofa::core::ObjectFactory * ; factory). ◆ registerObjects(). void sofa::component::statecontainer::registerObjects ; (; sofa::core::ObjectFactory * ; factory). Variable Documentation. ◆ MappedObject< Rigid2Types >. template class SOFA_COMPONENT_STATECONTAINER_API sofa::component::statecontainer::MappedObject< Rigid2Types >. ◆ MappedObject< Rigid3Types >. template cla,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1component_1_1statecontainer.html:2575,clear,clear,2575,api/master/sofa/html/namespacesofa_1_1component_1_1statecontainer.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1component_1_1statecontainer.html,1,['clear'],['clear']
Usability,"LC, typename T = SReal> . void sofa::linearalgebra::BlockDiagonalMatrix< LC, T >::addB ; (; Index ; i, . const Block & ; b . ). inline . ◆ addB() [2/2]. template<std::size_t LC, typename T = SReal> . void sofa::linearalgebra::BlockDiagonalMatrix< LC, T >::addB ; (; Index ; i, . Index ; j, . const Block & ; b . ). inline . ◆ bloc() [1/2]. template<std::size_t LC, typename T = SReal> . const Block& sofa::linearalgebra::BlockDiagonalMatrix< LC, T >::bloc ; (; Index ; i); const. inline . ◆ bloc() [2/2]. template<std::size_t LC, typename T = SReal> . const Block& sofa::linearalgebra::BlockDiagonalMatrix< LC, T >::bloc ; (; Index ; i, . Index ; j . ); const. inline . ◆ clear() [1/2]. template<std::size_t LC, typename T = SReal> . void sofa::linearalgebra::BlockDiagonalMatrix< LC, T >::clear ; (; ). inlineoverridevirtual . Reset all values to 0. ; Implements sofa::linearalgebra::BaseMatrix. ◆ clear() [2/2]. template<std::size_t LC, typename T = SReal> . void sofa::linearalgebra::BlockDiagonalMatrix< LC, T >::clear ; (; Index ; i, . Index ; j . ). inlineoverridevirtual . Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearCol(). template<std::size_t LC, typename T = SReal> . void sofa::linearalgebra::BlockDiagonalMatrix< LC, T >::clearCol ; (; Index ; j). inlineoverridevirtual . Reset the all values in column j to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRow(). template<std::size_t LC, typename T = SReal> . void sofa::linearalgebra::BlockDiagonalMatrix< LC, T >::clearRow ; (; Index ; i). inlineoverridevirtual . Reset all the values in row i to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRowCol(). template<std::size_t LC, typename T = SReal> . void sofa::linearalgebra::BlockDiagonalMatrix< LC, T >::clearRowCol ; (; Index ; i). inlineoverridevirtual . Reset the value of both row and column i to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ colBSize(). template<std::size_t LC, typename T = SReal> . Index sofa::line",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_diagonal_matrix.html:19224,clear,clear,19224,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_diagonal_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_diagonal_matrix.html,1,['clear'],['clear']
Usability,"List of all members . sofa::helper::io::ImageRAW Class Reference . #include <ImageRAW.h>. Inheritance diagram for sofa::helper::io::ImageRAW:. [legend]. Public Member Functions;  ImageRAW ();  ;  ~ImageRAW () override;  ; void initHeader (unsigned hsize);  ; unsigned getHeaderSize () const;  ; unsigned char * getHeader ();  ; const unsigned char * getHeader () const;  ; bool load (std::string filename) override;  ; bool save (std::string filename, int compression_level=-1) override;  ;  Public Member Functions inherited from sofa::helper::io::Image;  Image ();  ; virtual ~Image ();  ;  Image (const Image &rhs);  ; Image & operator= (const Image &rhs);  ; unsigned getWidth (unsigned mipmap=0) const;  ; unsigned getHeight (unsigned mipmap=0) const;  ; unsigned getDepth (unsigned mipmap=0) const;  ; unsigned getBytesPerPixel () const;  ; unsigned getBytesPerBlock () const;  ; unsigned getBytesPerChannel () const;  ; unsigned getChannelCount () const;  ; unsigned getMipmapCount () const;  ; unsigned getPixelCount () const;  ; unsigned getLineSize (unsigned mipmap=0) const;  ; unsigned getMipmapSize (unsigned mipmap) const;  ; unsigned getMipmapRangeSize (unsigned firstMipmap, unsigned mipmaps) const;  ; unsigned getImageSize () const;  ; DataType getDataType () const;  ; ChannelFormat getChannelFormat () const;  ; TextureType getTextureType () const;  ; unsigned char * getPixels ();  ; unsigned char * getMipmapPixels (unsigned mipmap);  ; unsigned char * getCubeMipmapPixels (unsigned cubeside, unsigned mipmap);  ; unsigned char * get3DSliceMipmapPixels (unsigned slice, unsigned mipmap);  ; void clear ();  ; void init (unsigned width, unsigned height, unsigned depth, unsigned mipmaps, DataType dataType, ChannelFormat channelFormat);  ; void init (unsigned width, unsigned height, unsigned bpp);  ; bool isLoaded () const;  . Additional Inherited Members;  Static Public Attributes inherited from sofa::helper::io::Image; static const char * strFromDataType [COUNT_OF_DATA_TYPE",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_image_r_a_w.html:1776,clear,clear,1776,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_image_r_a_w.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_image_r_a_w.html,1,['clear'],['clear']
Usability,"M in parent given the coordinates M_c of the same point in child are given by: M_p = orientation * ( M_c - origin ). This is due to Featherstone's conventions. Use method setTranslationRotation( const Vec& t, const Rot& q ) to model the Transform the standard way (i.e. translation given in the parent frame). . Protected Attributes; Rot orientation_;  child wrt parent More...;  ; Vec origin_;  parent wrt child More...;  . Public Member Functions;  Transform ();  The default constructor does not initialize the transform. More...;  ;  Transform (const Vec &origin, const Rot &orientation);  Origin of the child in parent coordinates, orientation of the child wrt to parent. More...;  ;  Transform (const Rot &q, const Vec &o);  WARNING: using Featherstone's conventions (see class documentation) More...;  ; void set (const Vec &t, const Rot &q);  Origin of the child in the parent coordinate system and the orientation of the child wrt the parent (i.e. standard way) More...;  ; void clear ();  Reset this to identity. More...;  ;  Transform (const SpatialVector< TReal > &v);  Origin of the child in the parent coordinate system and the orientation of the child wrt the parent (i.e. standard way) More...;  ; Transform inversed () const;  The inverse transform i.e. parent wrt child. More...;  ; const Vec & getOriginOfParentInChild () const;  Parent origin in child coordinates (the way it is actually stored internally) More...;  ; Vec getOrigin () const;  Origin of child in parent coordinates. More...;  ; void setOrigin (const Vec &);  Origin of child in parent coordinates. More...;  ; const Rot & getOrientation () const;  Orientation of the child coordinate axes wrt the parent coordinate axes. More...;  ; void setOrientation (const Rot &);  Orientation of the child coordinate axes wrt the parent coordinate axes. More...;  ; Mat3x3 getRotationMatrix () const;  Matrix which projects vectors from child coordinates to parent coordinates. The columns of the matrix are the axes of the c",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_transform.html:1721,clear,clear,1721,api/master/sofa/html/classsofa_1_1type_1_1_transform.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_transform.html,1,['clear'],['clear']
Usability,"Manager , class DataTypeInfoManager > . buffer_id_type sofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >::bufferRead ; (; bool ; create = false). inline . Get the Buffer Object ID for reading. . ◆ bufferWrite(). template<class T , class MemoryManager , class DataTypeInfoManager > . buffer_id_type sofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >::bufferWrite ; (; bool ; create = false). inline . Get the Buffer Object ID for writing. . ◆ capacity(). template<class T , class MemoryManager , class DataTypeInfoManager > . Size sofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >::capacity ; (; ); const. inline . ◆ checkIndex(). template<class T , class MemoryManager , class DataTypeInfoManager > . void sofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >::checkIndex ; (; Size ; i); const. inlineprotected . ◆ clear(). template<class T , class MemoryManager , class DataTypeInfoManager > . void sofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >::clear ; (; ). inline . ◆ copyToDevice(). template<class T , class MemoryManager , class DataTypeInfoManager > . void sofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >::copyToDevice ; (; int ; d = 0); const. inlineprotected . ◆ copyToHost(). template<class T , class MemoryManager , class DataTypeInfoManager > . void sofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >::copyToHost ; (; ); const. inlineprotected . ◆ copyToHostSingle(). template<class T , class MemoryManager , class DataTypeInfoManager > . void sofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >::copyToHostSingle ; (; Size ; i); const. inlineprotected . ◆ createBuffer(). template<class T , class MemoryManager , class DataTypeInfoManager > . void sofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >::createBuffer ; (; ). inlineprotected . ◆ data() [1/2]. template<class T , class MemoryManager , class DataTypeInfoManager > . T* sofa::typ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1vector__device.html:10301,clear,clear,10301,api/master/sofa/html/classsofa_1_1type_1_1vector__device.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1vector__device.html,1,['clear'],['clear']
Usability,"Matrix(Index nbRow, Index nbCol)sofa::linearalgebra::BlockFullMatrix< N, T >; blocSet(Index i, Index j, const T *buffer)sofa::linearalgebra::BaseMatrixinline; bRowBegin(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowEnd(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowRange(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsBegin() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsEnd() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowSize() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsRange() constsofa::linearalgebra::BaseMatrixinlinevirtual; BSIZE enum valuesofa::linearalgebra::BlockFullMatrix< N, T >; clear(Index i, Index j) overridesofa::linearalgebra::BlockFullMatrix< N, T >virtual; clear() overridesofa::linearalgebra::BlockFullMatrix< N, T >virtual; clearCol(Index j) overridesofa::linearalgebra::BlockFullMatrix< N, T >virtual; clearCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRow(Index i) overridesofa::linearalgebra::BlockFullMatrix< N, T >virtual; clearRowCol(Index i) overridesofa::linearalgebra::BlockFullMatrix< N, T >virtual; clearRows(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowsCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; cols(void) constsofa::linearalgebra::BaseMatrixinline; colSize(void) const overridesofa::linearalgebra::BlockFullMatrix< N, T >virtual; compress()sofa::linearalgebra::BaseMatrixvirtual; createBlockAccessor(Index row, Index col, void *internalPtr=nullptr)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockAccessor(Index row, Index col, Index internalData)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockConstAccessor(Index row, Index col, void *internalPtr=nullptr) constsofa::linearalgebra::BaseMatrixinlineprotected; createBlockConstAccessor(Index row, Index col, Index internalData) constsofa::linearalgebra::BaseMatrixinlineprotected; createColBlockConstItera",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_full_matrix-members.html:5860,clear,clearRow,5860,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_full_matrix-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_full_matrix-members.html,1,['clear'],['clearRow']
Usability,"Member List . This is the complete list of members for sofa::gui::qt::GraphVisitor, including all inherited members. addComment(QTreeWidgetItem *element, QTreeWidgetItem *elementAbove, std::string comment)sofa::gui::qt::GraphVisitor; addInformation(QTreeWidgetItem *element, std::string name, std::string info)sofa::gui::qt::GraphVisitor; addNode(QTreeWidgetItem *parent, QTreeWidgetItem *elementAbove, std::string info)sofa::gui::qt::GraphVisitor; addTime(QTreeWidgetItem *element, std::string info)sofa::gui::qt::GraphVisitor; clear()sofa::gui::qt::GraphVisitorinline; componentsTimesofa::gui::qt::GraphVisitorprotected; componentsTimeMaxsofa::gui::qt::GraphVisitorprotected; componentsTimeTotalsofa::gui::qt::GraphVisitorprotected; getTime(const tinyxml2::XMLAttribute *attribute) constsofa::gui::qt::GraphVisitorinline; getTotalTime(tinyxml2::XMLNode *node) constsofa::gui::qt::GraphVisitor; graphsofa::gui::qt::GraphVisitorprotected; GraphVisitor(WindowVisitor *w)sofa::gui::qt::GraphVisitorinline; initSizesofa::gui::qt::GraphVisitorprotected; levelsofa::gui::qt::GraphVisitorprotected; load(std::string &file)sofa::gui::qt::GraphVisitor; openAttribute(tinyxml2::XMLElement *element, QTreeWidgetItem *item)sofa::gui::qt::GraphVisitorprotected; openNode(tinyxml2::XMLNode *node, QTreeWidgetItem *parent, QTreeWidgetItem *elementAbove)sofa::gui::qt::GraphVisitorprotected; openTime(tinyxml2::XMLNode *element, QTreeWidgetItem *item)sofa::gui::qt::GraphVisitorprotected; setGraph(QTreeWidget *g)sofa::gui::qt::GraphVisitorinline; timeComponentsBelowsofa::gui::qt::GraphVisitorprotected; totalTimesofa::gui::qt::GraphVisitorprotected; totalTimeMaxsofa::gui::qt::GraphVisitorprotected; visitedNodesofa::gui::qt::GraphVisitorprotected; visitorsTimesofa::gui::qt::GraphVisitorprotected; visitorsTimeMaxsofa::gui::qt::GraphVisitorprotected; visitorsTimeTotalsofa::gui::qt::GraphVisitorprotected; windowsofa::gui::qt::GraphVisitorprotected. Generated on Mon Nov 11 2024 03:23:42 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_graph_visitor-members.html:657,clear,clear,657,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_graph_visitor-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_graph_visitor-members.html,1,['clear'],['clear']
Usability,"MeshTopologyprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; beginChange() constsofa::core::topology::BaseMeshTopologyvirtual; beginStateChange() constsofa::core::topology::BaseMeshTopologyvirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; centersofa::component::topology::container::constant::SphereQuadTopologyprotected; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkConnexity() overridesofa::component::topology::container::constant::MeshTopologyvirtual; checkTopology() constsofa::core::topology::BaseMeshTopologyinlinevirtual; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear() overridesofa::component::topology::container::constant::MeshTopologyvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeRelativeOrientationInQuad(const PointID ind_p0, const PointID ind_p1, const PointID ind_q)sofa::component::topology::container::constant::MeshTopology; computeRelativeOrientationInTri(const PointID ind_p0, const PointID ind_p1, const PointID ind_t)sofa::component::topology::container::constant::MeshTopology; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createEdgesAroundVertexArray()sofa::component::topology::container::constant::MeshTopologyprotected; createEdgesInHexahedronArray()sofa::component::topology::container::constant::MeshTopologypro",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_sphere_quad_topology-members.html:3656,clear,clear,3656,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_sphere_quad_topology-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_sphere_quad_topology-members.html,1,['clear'],['clear']
Usability,Missing lib files. /missing-libraries-stlib-and-libsofapython; . /embed; ; SOFA - Topic: Missing libraries: STLIB and libSofaPython. /page; . /2; ; SOFA - Topic: Missing libraries: STLIB and libSofaPython. SOFA - Topic: Missing libraries: STLIB and libSofaPython. /missing-pybind11config-cmake; ; SOFA - Topic: Missing pybind11Config.cmake. /missing-sosfsphfluid-dll; ; SOFA - Topic: [SOLVED] Missing SosfSphFluid dll. /model-collapse-with-force-of-gravity; ; SOFA - Topic: Model collapse with force of gravity. /modeler-exe-error; ; SOFA - Topic: Modeler.exe error. /modeler-in-sofa; ; SOFA - Topic: Modeler in SOFA. /modeler-in-sofa-binaries-18-06; . /feed; ; [SOLVED] Modeler in SOFA Binaries 18.06 – SOFA. SOFA - Topic: [SOLVED] Modeler in SOFA Binaries 18.06. /modeler-in-v18-06; ; SOFA - Topic: [SOLVED] Modeler in v18.06. /modeling-a-simple-grasper; . /feed; ; [SOLVED] Modeling a simple grasper – SOFA. /page; . /3; ; SOFA - Topic: [SOLVED] Modeling a simple grasper. SOFA - Topic: [SOLVED] Modeling a simple grasper. /modeling-hyper-elastic-material; ; SOFA - Topic: Modeling Hyper-elastic Material. /modeling-suction-force; . /feed; ; [SOLVED] Modeling suction force – SOFA. /page; . /13; ; SOFA - Topic: [SOLVED] Modeling suction force. /4; ; SOFA - Topic: [SOLVED] Modeling suction force. SOFA - Topic: [SOLVED] Modeling suction force. /modelling-flexible-inelastic-materials; ; SOFA - Topic: Modelling flexible inelastic materials. /modelling-skin-attached-to-tissue; ; SOFA - Topic: Modelling skin attached to tissue. /modelling-superelastic-material-nitinol; ; SOFA - Topic: Modelling SuperElastic Material (Nitinol). /modelling-tissue-deformation-in-needle-insertion-case; ; SOFA - Topic: [SOLVED] Modelling tissue deformation in needle insertion case. /model-not-visible-in-runsofa; . /feed; ; [SOLVED] model not visible in runsofa – SOFA. SOFA - Topic: [SOLVED] model not visible in runsofa. /model-order-reduction-phase-3-animation-issue; ; SOFA - Topic: Model Order Reduction Phas,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:349137,simpl,simple,349137,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['simpl'],['simple']
Usability,"More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (VisualStyle, sofa::core::visual::VisualModel);  ; void fwdDraw (VisualParams *) override;  Called before objects in the current branch are displayed. More...;  ; void bwdDraw (VisualParams *) override;  Called after objects in the current branch are displayed. More...;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_style.html:4369,clear,clearVisual,4369,api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_style.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_style.html,2,['clear'],"['clear', 'clearVisual']"
Usability,"NbPoints () const override;  ; Size getNbHexahedra () override;  TODO 2018-07-23 epernod: check why this method is override to return the same result as parent class. More...;  ;  Public Member Functions inherited from sofa::component::topology::container::constant::MeshTopology;  SOFA_CLASS (MeshTopology, core::topology::BaseMeshTopology);  ; void setNbPoints (Size n) override;  ; const SeqEdges & getEdges () override;  ; const SeqTriangles & getTriangles () override;  ; const SeqQuads & getQuads () override;  ; const SeqTetrahedra & getTetrahedra () override;  ; Size getNbEdges () override;  ; Size getNbTriangles () override;  ; Size getNbQuads () override;  ; Size getNbTetrahedra () override;  ; const Edge getEdge (EdgeID i) override;  ; const Triangle getTriangle (TriangleID i) override;  ; const Quad getQuad (QuadID i) override;  ; const Tetra getTetrahedron (TetraID i) override;  ; const Hexa getHexahedron (HexaID i) override;  ; virtual const SeqUV & getUVs ();  ; virtual Size getNbUVs ();  ; virtual const UV getUV (UVID i);  ; void addUV (SReal u, SReal v);  ; SReal getPosX (Index i) const;  ; SReal getPosY (Index i) const;  ; SReal getPosZ (Index i) const;  ; SReal getPX (Index i) const override;  ; SReal getPY (Index i) const override;  ; SReal getPZ (Index i) const override;  ; void clear () override;  ; void addPoint (SReal px, SReal py, SReal pz) override;  ; void addEdge (Index a, Index b) override;  ; void addTriangle (Index a, Index b, Index c) override;  ; void addQuad (Index a, Index b, Index c, Index d) override;  ; void addTetra (Index a, Index b, Index c, Index d) override;  ; void addHexa (Index a, Index b, Index c, Index d, Index e, Index f, Index g, Index h) override;  ; int getRevision () const override;  get the current revision of this mesh (use to detect changes) More...;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; virtual bool hasVolume ();  ;",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_sparse_grid_multiple_topology.html:13516,clear,clear,13516,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_sparse_grid_multiple_topology.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_sparse_grid_multiple_topology.html,3,['clear'],['clear']
Usability,"OFA - Topic: [SOLVED] Fixed constraints not so fixed with GenericConstraintSolver. /fixedrotationconstraint-and-linearmovementconstraint-not-working; ; SOFA - Topic: [SOLVED] FixedRotationConstraint and LinearMovementConstraint not working. /fixing-collision-for-a-static-floor; ; SOFA - Topic: [SOLVED] Fixing Collision for a static floor. /flexible-plugin-fails-to-compile-in-v17-12; ; SOFA - Topic: [SOLVED] Flexible plugin fails to compile in v17.12. /flexible-plugin-or-core; . /feed; ; [SOLVED] Flexible plugin or core? – SOFA. SOFA - Topic: [SOLVED] Flexible plugin or core?. /floating-behaviour-in-soft-actuators-with-bilateralinteractionconstraint; ; SOFA - Topic: Floating behaviour in soft actuators with BilateralInteractionConstraint. /floating-point-exception; ; SOFA - Topic: [SOLVED] Floating point exception. /floor-as-a-projective-constraint; ; SOFA - Topic: [SOLVED] Floor as a projective constraint. /force-feedback-not-working-correctly-when-using-two-haptic-devices; ; SOFA - Topic: [SOLVED] Force feedback not working correctly when using two haptic devices. /forcefields-adddforce; . /feed; ; [SOLVED] Forcefield’s addDForce – SOFA. /page; . /11; ; SOFA - Topic: [SOLVED] Forcefield’s addDForce. /12; ; SOFA - Topic: [SOLVED] Forcefield’s addDForce. /3; ; SOFA - Topic: [SOLVED] Forcefield’s addDForce. SOFA - Topic: [SOLVED] Forcefield’s addDForce. /forcefields-collisions-and-integration; . /feed; ; [SOLVED] Forcefields, collisions and integration – SOFA. SOFA - Topic: [SOLVED] Forcefields, collisions and integration. /forcefield-with-implicit-iterative-solver; ; SOFA - Topic: [SOLVED] ForceField with implicit iterative solver. /forcefield-with-python-controller; ; SOFA - Topic: ForceField with Python controller. /force-induced-topoligical-modification-of-triangular-mesh; ; SOFA - Topic: [SOLVED] Force Induced Topological Modification of Triangular Mesh. /forceps-assembly; . /feed; ; [SOLVED] Forceps assembly – SOFA. /page; . /15; ; SOFA - Topic: [SOLVED] Forceps",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:305846,feedback,feedback-not-working-correctly-when-using-two-haptic-devices,305846,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,2,['feedback'],"['feedback', 'feedback-not-working-correctly-when-using-two-haptic-devices']"
Usability,"OFA : cannot find Eigen3. /cmake-error-install-files-given-directory; ; SOFA - Topic: [SOLVED] CMake error install FILES given directory. /cmake-errors-while-configuring; ; SOFA - Topic: [SOLVED] CMake Errors while configuring. /cmake-error-while-configuring-sofapyhon3-build-script; . /feed; ; CMake Error while configuring SofaPyhon3 build script – SOFA. SOFA - Topic: CMake Error while configuring SofaPyhon3 build script. /cmake-gui-error; ; SOFA - Topic: CMake-gui error. /coding; ; SOFA - Topic: Coding. /coding-2; ; SOFA - Topic: Coding. /collision-algorithm-in-sofa; . /feed; ; [SOLVED] collision algorithm in sofa – SOFA. SOFA - Topic: [SOLVED] collision algorithm in sofa. /collision-between-rigid-and-deformable-object; ; SOFA - Topic: [SOLVED] Collision between rigid and deformable object. /collision-callback-function-in-python; ; SOFA - Topic: [SOLVED] Collision Callback function in python. /collision-detection-algorithm-and-the-algorithm-to-calculate-the-feedback-force; ; SOFA - Topic: [SOLVED] Collision detection algorithm and the algorithm to calculate the feedback force. /collision-detection-for-deformable-objects; . /feed; ; [SOLVED] Collision detection for deformable objects – SOFA. SOFA - Topic: [SOLVED] Collision detection for deformable objects. /collision-detection-of-interactive-training-system-for-interventional; ; SOFA - Topic: [SOLVED] Collision detection of ""Interactive Training System for Interventional…."". /collision-detection-problem; ; SOFA - Topic: [SOLVED] Collision detection problem. /collision-groups; ; SOFA - Topic: [SOLVED] Collision groups. /collision-in-cuda; ; SOFA - Topic: Collision in CUDA. /collision-not-work-through-python; ; SOFA - Topic: [SOLVED] Collision not work through python. /collision-problems-in-grasping-using-phantom-omni; ; SOFA - Topic: [SOLVED] Collision problems in grasping using Phantom omni. /collision-response-between-two-objects; ; SOFA - Topic: Collision response between two objects. /collision-response-with-ben",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:276180,feedback,feedback-force,276180,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,2,['feedback'],"['feedback', 'feedback-force']"
Usability,OFA dedicated to? How to use it as physics engine?. /questions-regarding-the-installation-of-sofapython3-plugin; ; SOFA - Topic: [SOLVED] Questions regarding the installation of SofaPython3 plugin. /random-linear-force-field; ; SOFA - Topic: [SOLVED] Random Linear Force Field. /rayleigh-numerical-damping; . /feed; ; Rayleigh/Numerical damping – SOFA. SOFA - Topic: Rayleigh/Numerical damping. /read-data-from-external-file; ; SOFA - Topic: [SOLVED] Read data from external file. /reading-indices-of-fixedconstraint-from-an-ascii-file; ; SOFA - Topic: [SOLVED] Reading indices of FixedConstraint from an ascii file. /reading-stl-file-vertices-from-my-own-component; ; SOFA - Topic: [SOLVED] reading STL file vertices from my own component. /realistic-behavior-of-a-liver-and-its-skin; ; SOFA - Topic: [SOLVED] Realistic behavior of a liver and its skin. /realtime-fea-visualization-with-ros; ; SOFA - Topic: Realtime FEA visualization with ROS. /receive-realtime-force-feedback-in-batch-mode; ; SOFA - Topic: Receive realtime force feedback in batch mode. /recommendation-of-the-versions-for-sofa-dependencies; ; SOFA - Topic: Recommendation of the Versions for SOFA Dependencies. /recordedcamera-in-sofapython; ; SOFA - Topic: [SOLVED] RecordedCamera in SofaPython ?. /recording-images-of-scenes; . /page; . /2; ; SOFA - Topic: Recording images of scenes. SOFA - Topic: Recording images of scenes. /regarding-modeler; ; SOFA - Topic: Regarding Modeler. /register-for-the-sofa-week-2019-now; . /feed; ; Register for the SOFA Week 2019 now! – SOFA. SOFA - Topic: Register for the SOFA Week 2019 now!. /register-for-the-sofa-week-2020-now; . /feed; ; Register for the SOFA Week 2020 now! – SOFA. SOFA - Topic: Register for the SOFA Week 2020 now!. /removing-and-adding-compliance-nodes-in-simulation-compliant-module; ; SOFA - Topic: [SOLVED] Error while Adding Compliance nodes in the simulation (Compliant module). /rendering-a-scene-in-stereoscopic-3d; ; SOFA - Topic: [SOLVED] Rendering a scene in ,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:375609,feedback,feedback-in-batch-mode,375609,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,2,['feedback'],"['feedback', 'feedback-in-batch-mode']"
Usability,"OFA_CLASS (SlicedVolumetricModel, core::visual::VisualModel);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; virtual bool isTransparent ();  ; void drawTransparent (const core::visual::VisualParams *vparams) override;  Display transparent surfaces. More...;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::str",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_sliced_volumetric_model.html:2825,clear,clearVisual,2825,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_sliced_volumetric_model.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_sliced_volumetric_model.html,2,['clear'],"['clear', 'clearVisual']"
Usability,Object. /missing-lib-files; ; SOFA - Topic: [SOLVED] Missing lib files. /missing-libraries-stlib-and-libsofapython; . /embed; ; SOFA - Topic: Missing libraries: STLIB and libSofaPython. /page; . /2; ; SOFA - Topic: Missing libraries: STLIB and libSofaPython. SOFA - Topic: Missing libraries: STLIB and libSofaPython. /missing-pybind11config-cmake; ; SOFA - Topic: Missing pybind11Config.cmake. /missing-sosfsphfluid-dll; ; SOFA - Topic: [SOLVED] Missing SosfSphFluid dll. /model-collapse-with-force-of-gravity; ; SOFA - Topic: Model collapse with force of gravity. /modeler-exe-error; ; SOFA - Topic: Modeler.exe error. /modeler-in-sofa; ; SOFA - Topic: Modeler in SOFA. /modeler-in-sofa-binaries-18-06; . /feed; ; [SOLVED] Modeler in SOFA Binaries 18.06 – SOFA. SOFA - Topic: [SOLVED] Modeler in SOFA Binaries 18.06. /modeler-in-v18-06; ; SOFA - Topic: [SOLVED] Modeler in v18.06. /modeling-a-simple-grasper; . /feed; ; [SOLVED] Modeling a simple grasper – SOFA. /page; . /3; ; SOFA - Topic: [SOLVED] Modeling a simple grasper. SOFA - Topic: [SOLVED] Modeling a simple grasper. /modeling-hyper-elastic-material; ; SOFA - Topic: Modeling Hyper-elastic Material. /modeling-suction-force; . /feed; ; [SOLVED] Modeling suction force – SOFA. /page; . /13; ; SOFA - Topic: [SOLVED] Modeling suction force. /4; ; SOFA - Topic: [SOLVED] Modeling suction force. SOFA - Topic: [SOLVED] Modeling suction force. /modelling-flexible-inelastic-materials; ; SOFA - Topic: Modelling flexible inelastic materials. /modelling-skin-attached-to-tissue; ; SOFA - Topic: Modelling skin attached to tissue. /modelling-superelastic-material-nitinol; ; SOFA - Topic: Modelling SuperElastic Material (Nitinol). /modelling-tissue-deformation-in-needle-insertion-case; ; SOFA - Topic: [SOLVED] Modelling tissue deformation in needle insertion case. /model-not-visible-in-runsofa; . /feed; ; [SOLVED] model not visible in runsofa – SOFA. SOFA - Topic: [SOLVED] model not visible in runsofa. /model-order-reduction-phase-3-animat,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:349087,simpl,simple,349087,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['simpl'],['simple']
Usability,"PairInteractionConstraint< TDataTypes >virtual; buildConstraintMatrix(const ConstraintParams *cParams, DataMatrixDeriv &c1, DataMatrixDeriv &c2, unsigned int &cIndex, const DataVecCoord &x1, const DataVecCoord &x2)=0sofa::core::behavior::PairInteractionConstraint< TDataTypes >pure virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::PairInteractionConstraint< TDataTypes >inlinestatic; sofa::core::behavior::BaseInteractionConstraint::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; sofa::computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; sofa::core::behavior::StateAccessor::computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; ConstArea typedefsofa::core::behavior::BaseConstraint; ConstCoord typedefsofa::core::behavior::BaseConstraint; ConstDeriv typedefsofa::core::behavior::BaseConstraint; Coord typedefsofa::core::behavior::PairInteractionConstraint< TDataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *p0, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::core::behavior::PairInteractionConstraint< TDataTypes >inlinestatic; d_componentStatesofa::core::objectmodel::Base; d_constraintIndexsofa::core::behavior::BaseConstraintSet; d_messageLogCountsof",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_pair_interaction_constraint-members.html:2806,clear,clearLoggedMessages,2806,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_pair_interaction_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_pair_interaction_constraint-members.html,1,['clear'],['clearLoggedMessages']
Usability,"PairOfMechanicalStates > &groups)sofa::component::linearsystem::MatrixLinearSystem< TMatrix, TVector >protected; buildHashTable(linearalgebra::CompressedRowSparseMatrix< SReal > &M, ConstantCRSMapping &mapping)sofa::component::linearsystem::ConstantSparsityPatternSystem< TMatrix, TVector >protectedstatic; buildSystemMatrix(const core::MechanicalParams *mparams)sofa::core::behavior::BaseMatrixLinearSystem; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanLocalMatrices()sofa::component::linearsystem::MatrixLinearSystem< TMatrix, TVector >protected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearSystem() overridesofa::component::linearsystem::ConstantSparsityPatternSystem< TMatrix, TVector >virtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; ConstantCRSMapping typedefsofa::component::linearsystem::ConstantSparsityPatternSystem< TMatrix, TVector >; ConstantSparsityPatternSystem()sofa::component::linearsystem::ConstantSparsityPatternSystem< TMatrix, TVector >protected; contribute(const core::MechanicalParams *mparams, IndependentContributors &contributors)sofa::component::linearsystem::MatrixLinearSystem< TMatrix, TVector >protected; Contribution typedefsofa::component::linearsystem::MatrixLinearSystem< TMatrix, TVector >; copyLocalVectorToGlobalVector(core::MultiVecDerivId v, TVector *globalVector)sofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >protected; copyLocalVectorToGlobalVector(core::MultiVecDerivId v, GraphScatteredVector *globalVector)s",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_constant_sparsity_pattern_system-members.html:3813,clear,clearLoggedMessages,3813,api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_constant_sparsity_pattern_system-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_constant_sparsity_pattern_system-members.html,1,['clear'],['clearLoggedMessages']
Usability,"PickHandler::useCollisions. protected . Constructor details. ◆ PickHandler(). sofa::gui::common::PickHandler::PickHandler ; (; double ; defaultLength = 1000000). ◆ ~PickHandler(). sofa::gui::common::PickHandler::~PickHandler ; (; ). virtual . Function details. ◆ activateRay(). void sofa::gui::common::PickHandler::activateRay ; (; int ; width, . int ; height, . core::objectmodel::BaseNode * ; root . ). ◆ addCallBack(). void sofa::gui::common::PickHandler::addCallBack ; (; CallBackPicker * ; c). inline . ◆ allocateSelectionBuffer(). void sofa::gui::common::PickHandler::allocateSelectionBuffer ; (; int ; width, . int ; height . ). virtual . Reimplemented in sofa::gui::qt::GLPickHandler. ◆ changeOperation() [1/2]. Operation * sofa::gui::common::PickHandler::changeOperation ; (; MOUSE_BUTTON ; button, . const std::string & ; op . ). ◆ changeOperation() [2/2]. Operation * sofa::gui::common::PickHandler::changeOperation ; (; sofa::component::setting::MouseButtonSetting * ; setting). ◆ clearCallBacks(). void sofa::gui::common::PickHandler::clearCallBacks ; (; ). inline . ◆ deactivateRay(). void sofa::gui::common::PickHandler::deactivateRay ; (; ). ◆ destroySelectionBuffer(). void sofa::gui::common::PickHandler::destroySelectionBuffer ; (; ). virtual . Reimplemented in sofa::gui::qt::GLPickHandler. ◆ findCollision(). BodyPicked sofa::gui::common::PickHandler::findCollision ; (; ). protectedvirtual . ◆ findCollisionUsingBruteForce() [1/2]. BodyPicked sofa::gui::common::PickHandler::findCollisionUsingBruteForce ; (; ). protected . ◆ findCollisionUsingBruteForce() [2/2]. BodyPicked sofa::gui::common::PickHandler::findCollisionUsingBruteForce ; (; const type::Vec3 & ; origin, . const type::Vec3 & ; direction, . double ; maxLength, . core::objectmodel::BaseNode * ; root . ). static . ◆ findCollisionUsingColourCoding() [1/2]. BodyPicked sofa::gui::common::PickHandler::findCollisionUsingColourCoding ; (; ). protected . ◆ findCollisionUsingColourCoding() [2/2]. BodyPicked sofa::gui:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_pick_handler.html:5408,clear,clearCallBacks,5408,api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_pick_handler.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_pick_handler.html,1,['clear'],['clearCallBacks']
Usability,PointTopologyFromDirty()sofa::component::topology::container::dynamic::PointSetTopologyContainerprotected; cleanTetrahedronTopologyFromDirty()sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainerprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanTriangleTopologyFromDirty()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear() overridesofa::component::topology::container::dynamic::TetrahedronSetTopologyContainervirtual; clearBorderElementLists()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; clearEdges()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearEdgesAroundVertex()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearEdgesInTetrahedron()sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainerprotected; clearEdgesInTriangle()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; clearLoggedMessages() constsofa::core::objectmodel::Base; clearTetrahedra()sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainerprotected; clearTetrahedraAroundEdge()sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainerprotected; clearTetrahedraAroundTriangle()sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainerprotected; clearTetrahedraAroundVertex()sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainerprotected; clearTriangles()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; clearTrianglesAroundEdge()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; clearTrianglesAroundVertex()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; clearTrianglesInTetrahedron()sofa::component::topology::c,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container-members.html:4976,clear,clearEdgesInTriangle,4976,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container-members.html,1,['clear'],['clearEdgesInTriangle']
Usability,"Pool.h>; Detailed Description; This class is responsible for providing a buffer for communicating aspects between threads, such that only the most up to date aspect is kept, and the previous one is reused to send the next update. This is similar to triple buffering. . Protected Attributes; AspectPool & pool;  ; AtomicInt latestID;  -1 or aspect ID of the last version sent More...;  ; AtomicInt availableID;  -1 or aspect ID available to send the next version More...;  . Public Member Functions;  AspectBuffer (AspectPool &pool);  ;  ~AspectBuffer ();  ; AspectRef allocate ();  Allocate an aspect ID to prepare the next version, reusing a recent one if possible. More...;  ; void push (AspectRef id);  Send a new version, overriding the latest if it was not already received (in which case it can be ""recycled"" using allocate) More...;  ; bool pop (AspectRef &id);  Receive the latest version, return true if one is available, or false otherwise (in which case id is unchanged) More...;  ; void clear ();  . Attribute details. ◆ availableID. AtomicInt sofa::core::objectmodel::AspectBuffer::availableID. protected . -1 or aspect ID available to send the next version . ◆ latestID. AtomicInt sofa::core::objectmodel::AspectBuffer::latestID. protected . -1 or aspect ID of the last version sent . ◆ pool. AspectPool& sofa::core::objectmodel::AspectBuffer::pool. protected . Constructor details. ◆ AspectBuffer(). sofa::core::objectmodel::AspectBuffer::AspectBuffer ; (; AspectPool & ; pool). ◆ ~AspectBuffer(). sofa::core::objectmodel::AspectBuffer::~AspectBuffer ; (; ). Function details. ◆ allocate(). AspectRef sofa::core::objectmodel::AspectBuffer::allocate ; (; ). Allocate an aspect ID to prepare the next version, reusing a recent one if possible. . ◆ clear(). void sofa::core::objectmodel::AspectBuffer::clear ; (; ). Clear the buffers This must be called before either the AspectPool or this buffer is deleted . ◆ pop(). bool sofa::core::objectmodel::AspectBuffer::pop ; (; AspectRef & ; i",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_aspect_buffer.html:1286,clear,clear,1286,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_aspect_buffer.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_aspect_buffer.html,1,['clear'],['clear']
Usability,"Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::core::behavior::SingleStateAccessor< TDataTypes >; SingleLink< SingleStateAccessor< TDataTypes >, MechanicalState< TDataTypes >, BaseLink::FLAG_STRONGLINK > mstate;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(PartialLinearMovementProjectiveConstraint, TDataTypes), SOFA_TEMPLATE(sofa::core::behavior::ProjectiveConstraintSet, TDataTypes));  ; void clearIndices ();  methods to add/remove some indices, keyTimes, keyMovement More...;  ; void addIndex (Index index);  ; void removeIndex (Index index);  ; void clearKeyMovements ();  ; void addKeyMovement (Real time, Deriv movement);  Add a new key movement. More...;  ; void init () override;  – Constraint interface More...;  ; void reset () override;  Reset to initial state. More...;  ; void projectResponse (const core::MechanicalParams *mparams, DataVecDeriv &resData) override;  ; void projectVelocity (const core::MechanicalParams *mparams, DataVecDeriv &vData) override;  ; void projectPosition (const core::MechanicalParams *mparams, DataVecCoord &xData) override;  ; void projectJacobianMatrix (const core::MechanicalParams *mparams, DataMatrixDeriv &cData) override;  ; void applyConstraint (const core::MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix) override;  Project the global Mechanical Matrix to constrained space using offset parameter. More...;  ; void applyConstraint (const core::MechanicalParams *mparams, linearalgebra::BaseVector *vector, const sofa::core::behavior::MultiMatrixAccessor *matrix) override;  Pr",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_partial_linear_movement_projective_constraint.html:7089,clear,clearKeyMovements,7089,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_partial_linear_movement_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_partial_linear_movement_projective_constraint.html,1,['clear'],['clearKeyMovements']
Usability,"Ptr(). template<class T , class TDestPtr , class TPtr = T*> . sofa::core::objectmodel::SinglePtr< T, TDestPtr, TPtr >::SinglePtr ; (; ). inline . Function details. ◆ add(). template<class T , class TDestPtr , class TPtr = T*> . void sofa::core::objectmodel::SinglePtr< T, TDestPtr, TPtr >::add ; (; TDestPtr ; v). inline . ◆ addBegin(). template<class T , class TDestPtr , class TPtr = T*> . void sofa::core::objectmodel::SinglePtr< T, TDestPtr, TPtr >::addBegin ; (; TDestPtr ; v). inline . ◆ begin(). template<class T , class TDestPtr , class TPtr = T*> . const_iterator sofa::core::objectmodel::SinglePtr< T, TDestPtr, TPtr >::begin ; (; ); const. inline . ◆ cbegin(). template<class T , class TDestPtr , class TPtr = T*> . const_iterator sofa::core::objectmodel::SinglePtr< T, TDestPtr, TPtr >::cbegin ; (; ); const. inline . ◆ cend(). template<class T , class TDestPtr , class TPtr = T*> . const_iterator sofa::core::objectmodel::SinglePtr< T, TDestPtr, TPtr >::cend ; (; ); const. inline . ◆ clear(). template<class T , class TDestPtr , class TPtr = T*> . void sofa::core::objectmodel::SinglePtr< T, TDestPtr, TPtr >::clear ; (; ). inline . ◆ crbegin(). template<class T , class TDestPtr , class TPtr = T*> . const_reverse_iterator sofa::core::objectmodel::SinglePtr< T, TDestPtr, TPtr >::crbegin ; (; ); const. inline . ◆ crend(). template<class T , class TDestPtr , class TPtr = T*> . const_reverse_iterator sofa::core::objectmodel::SinglePtr< T, TDestPtr, TPtr >::crend ; (; ); const. inline . ◆ empty(). template<class T , class TDestPtr , class TPtr = T*> . bool sofa::core::objectmodel::SinglePtr< T, TDestPtr, TPtr >::empty ; (; ); const. inline . ◆ end(). template<class T , class TDestPtr , class TPtr = T*> . const_iterator sofa::core::objectmodel::SinglePtr< T, TDestPtr, TPtr >::end ; (; ); const. inline . ◆ get() [1/2]. template<class T , class TDestPtr , class TPtr = T*> . TPtr& sofa::core::objectmodel::SinglePtr< T, TDestPtr, TPtr >::get ; (; ). inline . ◆ get() [2/2]. templat",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_single_ptr.html:2965,clear,clear,2965,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_single_ptr.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_single_ptr.html,1,['clear'],['clear']
Usability,"QuadArray array (i.e. provide the 4 edge indices for each quad) More...;  ; const sofa::type::vector< QuadsAroundVertex > & getQuadsAroundVertexArray ();  Returns the QuadsAroundVertex array (i.e. provide the quad indices adjacent to each vertex). More...;  ; const sofa::type::vector< QuadsAroundEdge > & getQuadsAroundEdgeArray ();  Returns the QuadsAroundEdge array (i.e. provide the quad indices adjacent to each edge). More...;  ; bool hasQuads () const;  ; bool hasEdgesInQuad () const;  ; bool hasQuadsAroundVertex () const;  ; bool hasQuadsAroundEdge () const;  ; sofa::geometry::ElementType getTopologyType () const override;  Returns the type of the topology. More...;  ; bool linkTopologyHandlerToData (core::topology::TopologyHandler *topologyHandler, sofa::geometry::ElementType elementType) override;  ; bool unlinkTopologyHandlerToData (core::topology::TopologyHandler *topologyHandler, sofa::geometry::ElementType elementType) override;  . void clear () override;  ; void addQuad (Index a, Index b, Index c, Index d) override;  . const SeqQuads & getQuads () override;  Returns the quad array. More...;  ; const Quad getQuad (QuadID id) override;  Returns the quad corresponding to the QuadID i. More...;  ; QuadID getQuadIndex (PointID v1, PointID v2, PointID v3, PointID v4) override;  ; const EdgesInQuad & getEdgesInQuad (QuadID id) override;  Returns the set of edges adjacent to a given quad. More...;  ; const QuadsAroundVertex & getQuadsAroundVertex (PointID id) override;  Returns the set of quads adjacent to a given vertex. More...;  ; const QuadsAroundEdge & getQuadsAroundEdge (EdgeID id) override;  Returns the set of quads adjacent to a given edge. More...;  ; int getVertexIndexInQuad (const Quad &t, PointID vertexIndex) const override;  Returns the index (either 0, 1, 2, 3) of the vertex whose global index is vertexIndex. More...;  ; int getEdgeIndexInQuad (const EdgesInQuad &t, EdgeID edheIndex) const override;  Returns the index (either 0, 1, 2, 3) of the edge",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_container.html:6623,clear,clear,6623,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_container.html,1,['clear'],['clear']
Usability,"QuatCoord3< real > identity ();  . Friends; std::ostream & operator<< (std::ostream &out, const DualQuatCoord3< real > &v);  ; std::istream & operator>> (std::istream &in, DualQuatCoord3< real > &v);  . Constructor details. ◆ DualQuatCoord3() [1/4]. template<class real > . sofa::type::DualQuatCoord3< real >::DualQuatCoord3 ; (; const Quat & ; Dual, . const Quat & ; orient . ). inline . ◆ DualQuatCoord3() [2/4]. template<class real > . template<typename real2 > . sofa::type::DualQuatCoord3< real >::DualQuatCoord3 ; (; const DualQuatCoord3< real2 > & ; c). inline . ◆ DualQuatCoord3() [3/4]. template<class real > . sofa::type::DualQuatCoord3< real >::DualQuatCoord3 ; (; const Pos & ; p, . const sofa::type::Quat< real > & ; q . ). inline . ◆ DualQuatCoord3() [4/4]. template<class real > . sofa::type::DualQuatCoord3< real >::DualQuatCoord3 ; (; ). inline . ◆ ~DualQuatCoord3(). template<class real > . sofa::type::DualQuatCoord3< real >::~DualQuatCoord3 ; (; ). inline . Function details. ◆ clear(). template<class real > . void sofa::type::DualQuatCoord3< real >::clear ; (; ). inline . ◆ getDual() [1/2]. template<class real > . Quat& sofa::type::DualQuatCoord3< real >::getDual ; (; ). inline . ◆ getDual() [2/2]. template<class real > . const Quat& sofa::type::DualQuatCoord3< real >::getDual ; (; ); const. inline . ◆ getOrientation() [1/2]. template<class real > . Quat& sofa::type::DualQuatCoord3< real >::getOrientation ; (; ). inline . ◆ getOrientation() [2/2]. template<class real > . const Quat& sofa::type::DualQuatCoord3< real >::getOrientation ; (; ); const. inline . ◆ getTranslation(). template<class real > . Vec3 sofa::type::DualQuatCoord3< real >::getTranslation ; (; ). inline . ◆ identity(). template<class real > . static DualQuatCoord3<real> sofa::type::DualQuatCoord3< real >::identity ; (; ). inlinestatic . ◆ inverse(). template<typename real > . DualQuatCoord3< real > sofa::type::DualQuatCoord3< real >::inverse. ◆ inverseRotate(). template<typename real > . type::V",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_dual_quat_coord3.html:4718,clear,clear,4718,api/master/sofa/html/classsofa_1_1type_1_1_dual_quat_coord3.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_dual_quat_coord3.html,1,['clear'],['clear']
Usability,"Quaternion &orient, const type::Vec3 &length)sofa::gl::Axis; Axis(const type::Vec3 &center, const double orient[4][4], const type::Vec3 &length)sofa::gl::Axis; Axis(const double *mat, const type::Vec3 &length)sofa::gl::Axis; Axis(const type::Vec3 &center, const Quaternion &orient, SReal length=1.0_sreal)sofa::gl::Axis; Axis(const type::Vec3 &center, const double orient[4][4], SReal length=1.0_sreal)sofa::gl::Axis; Axis(const double *mat, SReal length=1.0_sreal)sofa::gl::Axis; clear()sofa::gl::Axisinlinestatic; draw(const type::RGBAColor &colorX=type::RGBAColor::red(), const type::RGBAColor &colorY=type::RGBAColor::green(), const type::RGBAColor &colorZ=type::RGBAColor::red())sofa::gl::Axis; draw(const type::Vec3 &center, const Quaternion &orient, const type::Vec3 &length, const type::RGBAColor &colorX=type::RGBAColor::red(), const type::RGBAColor &colorY=type::RGBAColor::green(), const type::RGBAColor &colorZ=type::RGBAColor::red())sofa::gl::Axisstatic; draw(const type::Vec3 &center, const double orient[4][4], const type::Vec3 &length, const type::RGBAColor &colorX=type::RGBAColor::red(), const type::RGBAColor &colorY=type::RGBAColor::green(), const type::RGBAColor &colorZ=type::RGBAColor::red())sofa::gl::Axisstatic; draw(const double *mat, const type::Vec3 &length, const type::RGBAColor &colorX=type::RGBAColor::red(), const type::RGBAColor &colorY=type::RGBAColor::green(), const type::RGBAColor &colorZ=type::RGBAColor::red())sofa::gl::Axisstatic; draw(const type::Vec3 &center, const Quaternion &orient, SReal length=1.0_sreal, const type::RGBAColor &colorX=type::RGBAColor::red(), const type::RGBAColor &colorY=type::RGBAColor::green(), const type::RGBAColor &colorZ=type::RGBAColor::red())sofa::gl::Axisstatic; draw(const type::Vec3 &center, const double orient[4][4], SReal length=1.0_sreal, const type::RGBAColor &colorX=type::RGBAColor::red(), const type::RGBAColor &colorY=type::RGBAColor::green(), const type::RGBAColor &colorZ=type::RGBAColor::red())sofa::gl::Axisstat",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1_axis-members.html:821,clear,clear,821,api/master/sofa/html/classsofa_1_1gl_1_1_axis-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1_axis-members.html,1,['clear'],['clear']
Usability,"RamificationTopology; buildVirtualFinerLevels() overridesofa::component::topology::container::grid::SparseGridRamificationTopologyvirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeIndices(Index oldidx, Index newidx)sofa::component::topology::container::grid::SparseGridRamificationTopology; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkConnexity() overridesofa::component::topology::container::constant::MeshTopologyvirtual; checkTopology() constsofa::core::topology::BaseMeshTopologyinlinevirtual; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear() overridesofa::component::topology::container::constant::MeshTopologyvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeBoundingBox(const type::vector< type::Vec3 > &vertices, SReal &xmin, SReal &xmax, SReal &ymin, SReal &ymax, SReal &zmin, SReal &zmax) constsofa::component::topology::container::grid::SparseGridTopologyprotected; computeRelativeOrientationInQuad(const PointID ind_p0, const PointID ind_p1, const PointID ind_q)sofa::component::topology::container::constant::MeshTopology; computeRelativeOrientationInTri(const PointID ind_p0, const PointID ind_p1, const PointID ind_t)sofa::component::topology::container::constant::MeshTopology; constructCollisionModels(const sofa::type::vector< sofa::core::topology::BaseMeshTopology * > &list_mesh, const type::vector< Data< type::vector< sofa::type::Vec< 3, T > > > * > &list_X)sofa::component::topology::container::grid::SparseGridTopologyprotected; convolutionSizesofa::component::topology::container::grid:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_sparse_grid_ramification_topology-members.html:8029,clear,clearLoggedMessages,8029,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_sparse_grid_ramification_topology-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_sparse_grid_ramification_topology-members.html,1,['clear'],['clearLoggedMessages']
Usability,"Real, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; backfaceWritingsofa::gl::component::shader::OglShader; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; clampVertexColorsofa::gl::component::shader::OglShader; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; doInitVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglShadervirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; drawShadow(const VisualParams *vparams)sofa::core::visual::VisualModelinlinevirtual; drawTransparent(const VisualParams *)sofa::core::vi",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_o_i_t_shader-members.html:2722,clear,clearLoggedMessages,2722,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_o_i_t_shader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_o_i_t_shader-members.html,3,['clear'],['clearLoggedMessages']
Usability,"Real> . constexpr sofa::type::MatSym< D, real >::MatSym ; (; NoInit ; ). inlineexplicitconstexprnoexcept . ◆ MatSym() [3/5]. template<sofa::Size D, class real = SReal> . template<sofa::Size TD = D, typename = std::enable_if_t<TD == 3>> . constexpr sofa::type::MatSym< D, real >::MatSym ; (; const real & ; v1, . const real & ; v2, . const real & ; v3, . const real & ; v4, . const real & ; v5, . const real & ; v6 . ). inlineconstexpr . Constructor from 6 elements. . ◆ MatSym() [4/5]. template<sofa::Size D, class real = SReal> . constexpr sofa::type::MatSym< D, real >::MatSym ; (; const sofa::Size ; sizeM, . const real & ; v . ). inlineconstexpr . Constructor from an element. . ◆ MatSym() [5/5]. template<sofa::Size D, class real = SReal> . template<typename real2 > . sofa::type::MatSym< D, real >::MatSym ; (; const MatSym< D, real2 > & ; m). inlineexplicit . Constructor from another matrix. . Function details. ◆ clear(). template<sofa::Size D, class real = SReal> . void sofa::type::MatSym< D, real >::clear ; (; ). inline . Sets each element to 0. . ◆ fill(). template<sofa::Size D, class real = SReal> . void sofa::type::MatSym< D, real >::fill ; (; real ; r). inline . Sets each element to r. . ◆ getVoigt(). template<sofa::Size D, class real = SReal> . template<sofa::Size TD = D, typename = std::enable_if_t<TD == 3 || TD == 2>> . Vec<NumberStoredValues, real> sofa::type::MatSym< D, real >::getVoigt ; (; ); const. inline . convert to Voigt notation (supported only for D == 2 and D == 3) . ◆ identity(). template<sofa::Size D, class real = SReal> . constexpr void sofa::type::MatSym< D, real >::identity ; (; ). inlineconstexpr . Set matrix to identity. . ◆ invert(). template<sofa::Size D, class real = SReal> . bool sofa::type::MatSym< D, real >::invert ; (; const MatSym< D, real > & ; m). inline . Invert matrix m. . ◆ Mat2Sym(). template<sofa::Size D, class real = SReal> . static void sofa::type::MatSym< D, real >::Mat2Sym ; (; const Mat< D, D, real > & ; M, . MatSym< D, real",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_mat_sym.html:16206,clear,clear,16206,api/master/sofa/html/classsofa_1_1type_1_1_mat_sym.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_mat_sym.html,1,['clear'],['clear']
Usability,"Returns the set of element indices connected to an input one (i.e. which can be reached by topological links) More...;  ; const VecEdgeID getElementAroundElement (EdgeID elem) override;  Returns the set of element indices adjacent to a given element (i.e. sharing a link) More...;  ; const VecEdgeID getElementAroundElements (VecEdgeID elems) override;  Returns the set of element indices adjacent to a given list of elements (i.e. sharing a link) More...;  ;  Public Member Functions inherited from sofa::component::topology::container::dynamic::PointSetTopologyContainer;  SOFA_CLASS (PointSetTopologyContainer, core::topology::TopologyContainer);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; bool linkTopologyHandlerToData (core::topology::TopologyHandler *topologyHandler, sofa::geometry::ElementType elementType) override;  ; bool unlinkTopologyHandlerToData (core::topology::TopologyHandler *topologyHandler, sofa::geometry::ElementType elementType) override;  ; void clear () override;  ; void addPoint (SReal px, SReal py, SReal pz) override;  ; Size getNbPoints () const override;  Returns the number of vertices in this topology. More...;  ; void setNbPoints (Size n) override;  Set the number of vertices in this topology. More...;  ; bool hasPos () const override;  check if vertices in this topology have positions. More...;  ; SReal getPX (Index i) const override;  Returns the X coordinate of the ith DOF. More...;  ; SReal getPY (Index i) const override;  Returns the Y coordinate of the ith DOF. More...;  ; SReal getPZ (Index i) const override;  Returns the Z coordinate of the ith DOF. More...;  ; sofa::geometry::ElementType getTopologyType () const override;  Returns the type of the topology. More...;  ; bool checkTopology () const override;  Checks if the Topology is coherent. More...;  ; void addPoint ();  add one DOF in this topology (simply increment the number of DOF) More...;  ; void",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_container.html:7586,clear,clear,7586,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_container.html,1,['clear'],['clear']
Usability,"RowBlockConstIterator sofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >::bRowsEnd ; (; ); const. inlineoverridevirtual . Get the iterator corresponding to the end of the rows of blocks. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ bRowSize(). template<typename TBlock , typename TPolicy = CRSMechanicalPolicy> . virtual Index sofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >::bRowSize ; (; ); const. inlineoverridevirtual . Returnsthe number of rows of blocks ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ bRowsRange(). template<typename TBlock , typename TPolicy = CRSMechanicalPolicy> . virtual std::pair<RowBlockConstIterator, RowBlockConstIterator> sofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >::bRowsRange ; (; ); const. inlineoverridevirtual . Get the iterators corresponding to the beginning and end of the given row of blocks. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clear() [1/2]. template<typename TBlock , typename TPolicy = CRSMechanicalPolicy> . void sofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >::clear ; (; ). inlineoverridevirtual . Completely clear the matrix. ; Need implement clear to override BaseMatrix one. ; Implements sofa::linearalgebra::BaseMatrix. ◆ clear() [2/2]. template<typename TBlock , typename TPolicy = CRSMechanicalPolicy> . void sofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >::clear ; (; Index ; i, . Index ; j . ). inlineoverride . clear scalar at element i, j of matrix . ◆ clearCol(). template<typename TBlock , typename TPolicy = CRSMechanicalPolicy> . void sofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >::clearCol ; (; Index ; j). inlineoverride . Clear col scalar method. Clear this col in all row of matrix. ; Parameters. j: Col index considering size of matrix in scalar. . WarningIf you want to clear all value of a block, it is better to call cle",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical.html:48116,clear,clear,48116,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical.html,1,['clear'],['clear']
Usability,"S (MeshTopology, core::topology::BaseMeshTopology);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; Size getNbPoints () const override;  ; void setNbPoints (Size n) override;  ; const SeqEdges & getEdges () override;  ; const SeqTriangles & getTriangles () override;  ; const SeqQuads & getQuads () override;  ; const SeqTetrahedra & getTetrahedra () override;  ; const SeqHexahedra & getHexahedra () override;  ; Size getNbEdges () override;  ; Size getNbTriangles () override;  ; Size getNbQuads () override;  ; Size getNbTetrahedra () override;  ; Size getNbHexahedra () override;  ; const Edge getEdge (EdgeID i) override;  ; const Triangle getTriangle (TriangleID i) override;  ; const Quad getQuad (QuadID i) override;  ; const Tetra getTetrahedron (TetraID i) override;  ; const Hexa getHexahedron (HexaID i) override;  ; virtual const SeqUV & getUVs ();  ; virtual Size getNbUVs ();  ; virtual const UV getUV (UVID i);  ; void addUV (SReal u, SReal v);  ; SReal getPosX (Index i) const;  ; SReal getPosY (Index i) const;  ; SReal getPosZ (Index i) const;  ; bool hasPos () const override;  ; SReal getPX (Index i) const override;  ; SReal getPY (Index i) const override;  ; SReal getPZ (Index i) const override;  ; void clear () override;  ; void addPoint (SReal px, SReal py, SReal pz) override;  ; void addEdge (Index a, Index b) override;  ; void addTriangle (Index a, Index b, Index c) override;  ; void addQuad (Index a, Index b, Index c, Index d) override;  ; void addTetra (Index a, Index b, Index c, Index d) override;  ; void addHexa (Index a, Index b, Index c, Index d, Index e, Index f, Index g, Index h) override;  ; int getRevision () const override;  get the current revision of this mesh (use to detect changes) More...;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; virtual bool hasVolume ();  ; vir",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_cube_topology.html:8007,clear,clear,8007,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_cube_topology.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_cube_topology.html,3,['clear'],['clear']
Usability,"SOFA_CLASS (LineAxis, VisualModel);  ;  LineAxis ();  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doDrawVisual (const core::visual::VisualParams *) override;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; void updateLine ();  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virt",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_line_axis.html:3604,clear,clearVisual,3604,api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_line_axis.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_line_axis.html,2,['clear'],"['clear', 'clearVisual']"
Usability,"SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(sofa::core::visual::VisualParams *vparams) overridesofa::component::visual::VisualTransformvirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; Coord typedefsofa::component::visual::VisualTransform; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; d_recursivesofa::component::visual::VisualTransform; d_transformsofa::component::visual::VisualTransform; doDrawVisual(const sofa::core::visual::VisualParams *vparams) overridesofa::component::visual::VisualTransformvirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const sofa::core::visual::VisualParams *vpara",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_transform-members.html:2454,clear,clearLoggedMessages,2454,api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_transform-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_transform-members.html,1,['clear'],['clearLoggedMessages']
Usability,"SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseContext typedefsofa::simulation::DefaultVisualManagerLoop; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseObjectDescription typedefsofa::simulation::DefaultVisualManagerLoop; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; CompositingVisualLoop()sofa::gl::component::shader::CompositingVisualLoopprotected; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeBBoxStep(sofa::core::visual::VisualParams *vparams, SReal *minBBox, SReal *maxBBox, bool init) overridesofa::simulation::DefaultVisualManagerLoopvirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; DefaultVisualManagerLoop()sofa::simulation::DefaultVisualManagerLoopprotected; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(c",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_compositing_visual_loop-members.html:2571,clear,clearLoggedMessages,2571,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_compositing_visual_loop-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_compositing_visual_loop-members.html,1,['clear'],['clearLoggedMessages']
Usability,"SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseContext typedefsofa::simulation::DefaultVisualManagerLoop; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseObjectDescription typedefsofa::simulation::DefaultVisualManagerLoop; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeBBoxStep(sofa::core::visual::VisualParams *vparams, SReal *minBBox, SReal *maxBBox, bool init) overridesofa::simulation::DefaultVisualManagerLoopvirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; DefaultVisualManagerLoop()sofa::simulation::DefaultVisualManagerLoopprotected; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_default_visual_manager_loop-members.html:2555,clear,clearLoggedMessages,2555,api/master/sofa/html/classsofa_1_1simulation_1_1_default_visual_manager_loop-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_default_visual_manager_loop-members.html,1,['clear'],['clearLoggedMessages']
Usability,"Scale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(core::visual::VisualParams *) overridesofa::gl::component::rendering3d::ClipPlanevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkDataValues()sofa::gl::component::rendering3d::ClipPlanevirtual; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; ClipPlane()sofa::gl::component::rendering3d::ClipPlaneprotected; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; drawShadow(const VisualParams *vparams)sofa::core::visual::VisualModelinlinevirtual; drawTransparent(const VisualParams *)sofa::core::visual::VisualModelinlinevirtual; drawVis",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_clip_plane-members.html:2570,clear,clearLoggedMessages,2570,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_clip_plane-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_clip_plane-members.html,1,['clear'],['clearLoggedMessages']
Usability,"Scheduler * > > m_lastInserted {};  . Public Member Functions; bool addTaskSchedulerToRegistry (TaskScheduler *taskScheduler, const std::string &taskSchedulerName);  ; TaskScheduler * getTaskScheduler (const std::string &taskSchedulerName) const;  ; bool hasScheduler (const std::string &taskSchedulerName) const;  ; const std::optional< std::pair< std::string, TaskScheduler * > > & getLastInserted () const;  ; void clear ();  ;  ~TaskSchedulerRegistry ();  . Attribute details. ◆ m_lastInserted. std::optional<std::pair<std::string, TaskScheduler*> > sofa::simulation::TaskSchedulerRegistry::m_lastInserted {}. protected . ◆ m_schedulers. std::map<std::string, TaskScheduler*> sofa::simulation::TaskSchedulerRegistry::m_schedulers. protected . Constructor details. ◆ ~TaskSchedulerRegistry(). sofa::simulation::TaskSchedulerRegistry::~TaskSchedulerRegistry ; (; ). Function details. ◆ addTaskSchedulerToRegistry(). bool sofa::simulation::TaskSchedulerRegistry::addTaskSchedulerToRegistry ; (; TaskScheduler * ; taskScheduler, . const std::string & ; taskSchedulerName . ). Add a task scheduler to the registry and transfer the ownership . ◆ clear(). void sofa::simulation::TaskSchedulerRegistry::clear ; (; ). Clear the registry and destroy the task schedulers sstored in the registry . ◆ getLastInserted(). const std::optional< std::pair< std::string, TaskScheduler * > > & sofa::simulation::TaskSchedulerRegistry::getLastInserted ; (; ); const. ◆ getTaskScheduler(). TaskScheduler * sofa::simulation::TaskSchedulerRegistry::getTaskScheduler ; (; const std::string & ; taskSchedulerName); const. Returnsa @TaskScheduler if the scheduler name is found in the registry, nullptr otherwise . ◆ hasScheduler(). bool sofa::simulation::TaskSchedulerRegistry::hasScheduler ; (; const std::string & ; taskSchedulerName); const. Returnstrue if the scheduler name is found in the registry, false otherwise . sofasimulationTaskSchedulerRegistry; Generated on Mon Nov 11 2024 03:34:14 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_task_scheduler_registry.html:1737,clear,clear,1737,api/master/sofa/html/classsofa_1_1simulation_1_1_task_scheduler_registry.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_task_scheduler_registry.html,2,['clear'],['clear']
Usability,"Sets this quaternion to the rotation required to rotate direction vector vFrom to direction vector vTo. ; vFrom and vTo are assumed to be normalized. . Function details. ◆ angularDisplacement(). template<class Real > . auto sofa::type::Quat< Real >::angularDisplacement ; (; const Quat< Real > & ; a, . const Quat< Real > & ; b . ); -> Vec3. static . Return the eulerian vector resulting of the movement between 2 quaternions. . ◆ axisToQuat(). template<class Real > . auto sofa::type::Quat< Real >::axisToQuat ; (; Vec3 ; a, . Real ; phi . ); -> Quat. Given an axis and angle, compute quaternion. ; This function computes a quaternion based on an axis (defined by the given vector) and an angle about which to rotate. The angle is expressed in radians. . ◆ buildRotationMatrix(). template<class Real > . constexpr void sofa::type::Quat< Real >::buildRotationMatrix ; (; Real ; m[4][4]); const. inlineconstexpr . A useful function, builds a rotation matrix in Matrix based on given quaternion. . ◆ clear(). template<class Real > . void sofa::type::Quat< Real >::clear ; (; ). inline . ◆ createFromRotationVector() [1/2]. template<class Real > . auto sofa::type::Quat< Real >::createFromRotationVector ; (; const Vec3 & ; a); -> Quat. static . Create using rotation vector (axis*angle) given in parent coordinates. . ◆ createFromRotationVector() [2/2]. template<class Real > . auto sofa::type::Quat< Real >::createFromRotationVector ; (; Real ; a0, . Real ; a1, . Real ; a2 . ); -> Quat. static . Create using the entries of a rotation vector (axis*angle) given in parent coordinates. . ◆ createQuaterFromEuler(). template<class Real > . auto sofa::type::Quat< Real >::createQuaterFromEuler ; (; const Vec3 & ; v, . EulerOrder ; order = EulerOrder::ZYX . ); -> Quat. static . ◆ createQuaterFromFrame(). template<class Real > . auto sofa::type::Quat< Real >::createQuaterFromFrame ; (; const Vec3 & ; lox, . const Vec3 & ; loy, . const Vec3 & ; loz . ); -> Quat. static . ◆ fromEuler(). template<class R",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_quat.html:8012,clear,clear,8012,api/master/sofa/html/classsofa_1_1type_1_1_quat.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_quat.html,1,['clear'],['clear']
Usability,SoftRobot. /how-to-import-volume-mesh-from-matlab-iso2mesh-toolkit; ; SOFA - Topic: [SOLVED] How to import volume mesh from Matlab iso2mesh toolkit?. /how-to-incise-3d-object; . /page; . /10; ; SOFA - Topic: [SOLVED] How to incise 3d object. /11; ; SOFA - Topic: [SOLVED] How to incise 3d object. /3; ; SOFA - Topic: [SOLVED] How to incise 3d object. /5; ; SOFA - Topic: [SOLVED] How to incise 3d object. SOFA - Topic: [SOLVED] How to incise 3d object. /how-to-increase-fps-of-a-scene-including-more-than-20000-tetrahedral-mesh; ; SOFA - Topic: [SOLVED] How to increase FPS of a scene including more than 20000 tetrahedral mesh. /how-to-integrate-the-new-fem-methods-into-sofa-engine; ; SOFA - Topic: How to integrate the new FEM methods into SOFA engine. /how-to-interact-with-3d-deformable-objects-in-sofa; ; SOFA - Topic: How to interact with 3D deformable objects in SOFA. /how-to-know-the-collision-force-or-energy; ; SOFA - Topic: How to know the collision force or energy. /how-to-learn-mesh-editing-programming; . /feed; ; [SOLVED] How to learn mesh editing programming? – SOFA. SOFA - Topic: [SOLVED] How to learn mesh editing programming?. /how-to-learn-using-sofa; ; SOFA - Topic: How to learn using SOFA. /how-to-look-at-the-example-of-the-source-codec; ; SOFA - Topic: [SOLVED] How to look at the example of the source code(c++) ?. /how-to-make-a-6dof-simulation-act-like-a-4dof-make-3d-act-like-2d-simulation; ; SOFA - Topic: How to make a 6DOF simulation act like a 4DOF (make 3d act like 2d simulation)?. /how-to-make-a-modal-analysis; ; SOFA - Topic: how to: Make a modal analysis. /how-to-make-a-pythonscript-controller-with-sofapython3; ; SOFA - Topic: [SOLVED] How to make a PythonScript controller with SofaPython3. /how-to-make-local-refined-tetrahedral-mesh; ; SOFA - Topic: How to make local refined tetrahedral mesh?. /how-to-make-some-part-of-an-object-elastic-and-other-part-plastic; ; SOFA - Topic: How to make some part of an object elastic and other part plastic. /how-t,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:325058,learn,learn-mesh-editing-programming,325058,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['learn'],['learn-mesh-editing-programming']
Usability,"Solve ; (; VectorEigen & ; x, . const VectorEigen & ; b . ); const. inline . Solve Ax=b, where A is this matrix. WARNING: ldltDecompose() must be called first. x and b can be the same vector. . ◆ clear(). template<class TReal > . void sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::clear ; (; ). inlineoverridevirtual . Set all values to 0, by resizing to the same size. ; Implements sofa::linearalgebra::BaseMatrix. ◆ clearCol(). template<class TReal > . void sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::clearCol ; (; Index ; col). inlineoverridevirtual . Clears the all the entries of column imin to column imax-1. Not efficient ! ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearCols(). template<class TReal > . void sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::clearCols ; (; Index ; imin, . Index ; imax . ). inlineoverridevirtual . Set all the entries of column i and of row i to 0. Not efficient ! ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRow(). template<class TReal > . void sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::clearRow ; (; Index ; i). inlineoverridevirtual . Set all the entries of a row to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRowCol(). template<class TReal > . void sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::clearRowCol ; (; Index ; i). inlineoverridevirtual . Clears all the entries of rows imin to imax-1 and columns imin to imax-1. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRows(). template<class TReal > . void sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::clearRows ; (; Index ; imin, . Index ; imax . ). inlineoverridevirtual . Set all the entries of rows imin to imax-1 to 0. ; Set all the entries of a column to 0. Not efficient ! ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRowsCols(). template<class TReal > . void sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::clearRowsCols ; (; Index ; imin, . Index ; imax . ). inli",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_base_sparse_matrix.html:20201,clear,clearRow,20201,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_base_sparse_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_base_sparse_matrix.html,1,['clear'],['clearRow']
Usability,"SparseMatrix< T >::addTo ; (; Dest * ; dest); const. inline . ◆ begin() [1/2]. template<typename T > . LineIterator sofa::linearalgebra::SparseMatrix< T >::begin ; (; ). inline . ◆ begin() [2/2]. template<typename T > . LineConstIterator sofa::linearalgebra::SparseMatrix< T >::begin ; (; ); const. inline . ◆ clear() [1/2]. template<typename T > . void sofa::linearalgebra::SparseMatrix< T >::clear ; (; ). inlineoverridevirtual . Reset all values to 0. ; Implements sofa::linearalgebra::BaseMatrix. ◆ clear() [2/2]. template<typename T > . void sofa::linearalgebra::SparseMatrix< T >::clear ; (; Index ; i, . Index ; j . ). inlineoverridevirtual . Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearCol(). template<typename T > . void sofa::linearalgebra::SparseMatrix< T >::clearCol ; (; Index ; j). inlineoverridevirtual . Reset the all values in column j to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRow(). template<typename T > . void sofa::linearalgebra::SparseMatrix< T >::clearRow ; (; Index ; i). inlineoverridevirtual . Reset all the values in row i to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRowCol(). template<typename T > . void sofa::linearalgebra::SparseMatrix< T >::clearRowCol ; (; Index ; i). inlineoverridevirtual . Reset the value of both row and column i to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ colSize(). template<typename T > . Index sofa::linearalgebra::SparseMatrix< T >::colSize ; (; void ; ); const. inlineoverridevirtual . Number of columns. ; Implements sofa::linearalgebra::BaseMatrix. ◆ element(). template<typename T > . SReal sofa::linearalgebra::SparseMatrix< T >::element ; (; Index ; i, . Index ; j . ); const. inlineoverridevirtual . Read the value of the element at row i, column j (using 0-based indices) ; Implements sofa::linearalgebra::BaseMatrix. ◆ end() [1/2]. template<typename T > . LineIterator sofa::linearalgebra::SparseMatrix< T >::end ; (; ). inline . ◆ end() [2/2]. templa",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_sparse_matrix.html:22122,clear,clearRow,22122,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_sparse_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_sparse_matrix.html,1,['clear'],['clearRow']
Usability,"SparseMatrixGeneric< TBlock, CRSConstraintPolicy >inline; blockMultTranspose(const TBlock &blockA, const TBlock &blockB)sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSConstraintPolicy >inlinestatic; BlockTranspose typedefsofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSConstraintPolicy >; btempsofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSConstraintPolicy >; category enum valuesofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSConstraintPolicy >; cbegin() constsofa::linearalgebra::CompressedRowSparseMatrixConstraint< TBlock, TPolicy >inline; cend() constsofa::linearalgebra::CompressedRowSparseMatrixConstraint< TBlock, TPolicy >inline; check_matrix()sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSConstraintPolicy >inline; check_matrix(Index nzmax, Index m, Index n, Index *a_p, Index *a_i, Block *a_x)sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSConstraintPolicy >inlinestatic; clear()sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSConstraintPolicy >inline; ClearByZerossofa::linearalgebra::CRSConstraintPolicystatic; clearColBlock(Index j)sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSConstraintPolicy >inline; clearRowBlock(Index i)sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSConstraintPolicy >inline; clearRowColBlock(Index i)sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSConstraintPolicy >inline; colBSize() constsofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSConstraintPolicy >inline; ColIterator typedefsofa::linearalgebra::CompressedRowSparseMatrixConstraint< TBlock, TPolicy >; colsIndexsofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSConstraintPolicy >; colsValuesofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSConstraintPolicy >; compress()sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSConstraintPolicy >inline; com",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_constraint-members.html:4596,clear,clear,4596,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_constraint-members.html,1,['clear'],['clear']
Usability,"StoragePolicy, ThreadAccessPolicy >::CircularQueue. ◆ ~CircularQueue(). template<class T , template< class U > class StoragePolicy, class ThreadAccessPolicy > . sofa::helper::system::thread::CircularQueue< T, StoragePolicy, ThreadAccessPolicy >::~CircularQueue. Function details. ◆ isEmpty(). template<class T , template< class U > class StoragePolicy, class ThreadAccessPolicy > . bool sofa::helper::system::thread::CircularQueue< T, StoragePolicy, ThreadAccessPolicy >::isEmpty. ◆ isFull(). template<class T , template< class U > class StoragePolicy, class ThreadAccessPolicy > . bool sofa::helper::system::thread::CircularQueue< T, StoragePolicy, ThreadAccessPolicy >::isFull. ◆ pop() [1/2]. template<class T , template< class U > class StoragePolicy, class ThreadAccessPolicy > . template<class OutputIterator > . unsigned sofa::helper::system::thread::CircularQueue< T, StoragePolicy, ThreadAccessPolicy >::pop ; (; OutputIterator ; out, . unsigned ; maxsize, . bool ; clear = true . ). ◆ pop() [2/2]. template<class T , template< class U > class StoragePolicy, class ThreadAccessPolicy > . bool sofa::helper::system::thread::CircularQueue< T, StoragePolicy, ThreadAccessPolicy >::pop ; (; T & ; item, . bool ; clear = true . ). ◆ push(). template<class T , template< class U > class StoragePolicy, class ThreadAccessPolicy > . bool sofa::helper::system::thread::CircularQueue< T, StoragePolicy, ThreadAccessPolicy >::push ; (; const T & ; item). ◆ size(). template<class T , template< class U > class StoragePolicy, class ThreadAccessPolicy > . unsigned sofa::helper::system::thread::CircularQueue< T, StoragePolicy, ThreadAccessPolicy >::size. ◆ skip(). template<class T , template< class U > class StoragePolicy, class ThreadAccessPolicy > . unsigned sofa::helper::system::thread::CircularQueue< T, StoragePolicy, ThreadAccessPolicy >::skip ; (; unsigned ; maxsize, . bool ; clear = true . ). sofahelpersystemthreadCircularQueue; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1system_1_1thread_1_1_circular_queue.html:2654,clear,clear,2654,api/master/sofa/html/classsofa_1_1helper_1_1system_1_1thread_1_1_circular_queue.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1system_1_1thread_1_1_circular_queue.html,2,['clear'],['clear']
Usability,"T * elementsDefaultImpl (Index i0, Index n, T *buffer) const;  ; template<class T > ; void setDefaultImpl (Index i0, Index n, const T *src);  ; template<class T > ; void addDefaultImpl (Index i0, Index n, const T *src);  . Attribute details. ◆ eigenVector. template<class TReal , std::size_t TBlockSize = 1> . VectorEigen sofa::linearalgebra::EigenVector< TReal, TBlockSize >::eigenVector. protected . the data . Constructor details. ◆ EigenVector(). template<class TReal , std::size_t TBlockSize = 1> . sofa::linearalgebra::EigenVector< TReal, TBlockSize >::EigenVector ; (; Index ; nbRow = 0). inline . Function details. ◆ add(). template<class TReal , std::size_t TBlockSize = 1> . void sofa::linearalgebra::EigenVector< TReal, TBlockSize >::add ; (; Index ; i, . SReal ; v . ). inlineoverridevirtual . Add v to the existing value of element i. ; Implements sofa::linearalgebra::BaseVector. ◆ clear() [1/2]. template<class TReal , std::size_t TBlockSize = 1> . void sofa::linearalgebra::EigenVector< TReal, TBlockSize >::clear ; (; ). inlineoverridevirtual . Set all values to 0, by resizing to the same size. ; Implements sofa::linearalgebra::BaseVector. ◆ clear() [2/2]. template<class TReal , std::size_t TBlockSize = 1> . void sofa::linearalgebra::EigenVector< TReal, TBlockSize >::clear ; (; Index ; i). inlineoverridevirtual . Reset the value of element i to 0. ; Reimplemented from sofa::linearalgebra::BaseVector. ◆ element(). template<class TReal , std::size_t TBlockSize = 1> . SReal sofa::linearalgebra::EigenVector< TReal, TBlockSize >::element ; (; Index ; i); const. inlineoverridevirtual . Read the value of element i. ; Implements sofa::linearalgebra::BaseVector. ◆ getVectorEigen() [1/2]. template<class TReal , std::size_t TBlockSize = 1> . VectorEigen& sofa::linearalgebra::EigenVector< TReal, TBlockSize >::getVectorEigen ; (; ). inline . ◆ getVectorEigen() [2/2]. template<class TReal , std::size_t TBlockSize = 1> . const VectorEigen& sofa::linearalgebra::EigenVector< TReal,",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_vector.html:4910,clear,clear,4910,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_vector.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_vector.html,1,['clear'],['clear']
Usability,"TDataTypes >::x0. initial constrained DOFs position . ◆ xf. template<class TDataTypes > . VecCoord sofa::component::constraint::projective::PatchTestMovementProjectiveConstraint< TDataTypes >::xf. final constrained DOFs position . Constructor details. ◆ PatchTestMovementProjectiveConstraint(). template<class DataTypes > . sofa::component::constraint::projective::PatchTestMovementProjectiveConstraint< DataTypes >::PatchTestMovementProjectiveConstraint. protected . ◆ ~PatchTestMovementProjectiveConstraint(). template<class DataTypes > . sofa::component::constraint::projective::PatchTestMovementProjectiveConstraint< DataTypes >::~PatchTestMovementProjectiveConstraint. protectedvirtual . Function details. ◆ addConstraint(). template<class DataTypes > . void sofa::component::constraint::projective::PatchTestMovementProjectiveConstraint< DataTypes >::addConstraint ; (; Index ; index). ◆ clearConstraints(). template<class DataTypes > . void sofa::component::constraint::projective::PatchTestMovementProjectiveConstraint< DataTypes >::clearConstraints. ◆ draw(). template<class DataTypes > . void sofa::component::constraint::projective::PatchTestMovementProjectiveConstraint< DataTypes >::draw ; (; const core::visual::VisualParams * ; vparams). overridevirtual . Draw the constrained points (= border mesh points) ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ getFinalPositions(). template<class DataTypes > . void sofa::component::constraint::projective::PatchTestMovementProjectiveConstraint< DataTypes >::getFinalPositions ; (; VecCoord & ; finalPos, . DataVecCoord & ; xData . ). Compute the theoretical final positions. . ◆ init(). template<class DataTypes > . void sofa::component::constraint::projective::PatchTestMovementProjectiveConstraint< DataTypes >::init ; (; void ; ). overridevirtual . – Constraint interface ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ projectJacobianMatrix(). template<class TDataTypes > . void sofa::component::constraint::proj",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_patch_test_movement_projective_constraint.html:24830,clear,clearConstraints,24830,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_patch_test_movement_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_patch_test_movement_projective_constraint.html,1,['clear'],['clearConstraints']
Usability,"TPolicy >::clear ; (; ). inlineoverridevirtual . Completely clear the matrix. ; Need implement clear to override BaseMatrix one. ; Implements sofa::linearalgebra::BaseMatrix. ◆ clear() [2/2]. template<typename TBlock , typename TPolicy = CRSMechanicalPolicy> . void sofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >::clear ; (; Index ; i, . Index ; j . ). inlineoverride . clear scalar at element i, j of matrix . ◆ clearCol(). template<typename TBlock , typename TPolicy = CRSMechanicalPolicy> . void sofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >::clearCol ; (; Index ; j). inlineoverride . Clear col scalar method. Clear this col in all row of matrix. ; Parameters. j: Col index considering size of matrix in scalar. . WarningIf you want to clear all value of a block, it is better to call clearColBlock . ◆ clearRow(). template<typename TBlock , typename TPolicy = CRSMechanicalPolicy> . void sofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >::clearRow ; (; Index ; i). inlineoverride . Clear row scalar method. Clear all col of this line. ; Parameters. i: Line index considering size of matrix in scalar. . WarningIf you want to clear all value of a block, it is better to call clearRowBlock . ◆ clearRowCol(). template<typename TBlock , typename TPolicy = CRSMechanicalPolicy> . void sofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >::clearRowCol ; (; Index ; i). inlineoverride . Clear both row i and column i in a square matrix. ; Parameters. i: Row and Col index considering size of matrix in scalar. . ◆ colSize(). template<typename TBlock , typename TPolicy = CRSMechanicalPolicy> . Index sofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >::colSize ; (; ); const. inlineoverridevirtual . Number of columns. ; Implements sofa::linearalgebra::BaseMatrix. ◆ compress(). template<typename TBlock , typename TPolicy = CRSMechanicalPolicy> . void sofa::linearalge",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical.html:49300,clear,clearRow,49300,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical.html,1,['clear'],['clearRow']
Usability,"Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; BaseVTKReader()sofa::component::io::mesh::basevtkreader::BaseVTKReader; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Bas",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1basevtkreader_1_1_base_v_t_k_reader-members.html:1997,clear,clearLoggedMessages,1997,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1basevtkreader_1_1_base_v_t_k_reader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1basevtkreader_1_1_base_v_t_k_reader-members.html,3,['clear'],['clearLoggedMessages']
Usability,Tag: fisheye camera. /fix; . /feed; ; fix – SOFA. SOFA - Topic Tag: fix. /fixedconstraint; . /feed; ; FixedConstraint – SOFA. SOFA - Topic Tag: FixedConstraint. /fixed-constraint; . /feed; ; fixed constraint – SOFA. SOFA - Topic Tag: fixed constraint. /fixedconstraint-genericconstraintsolver; . /feed; ; fixedconstraint GenericConstraintSolver – SOFA. SOFA - Topic Tag: fixedconstraint GenericConstraintSolver. /fixedtranslationconstraint; . /feed; ; FixedTranslationConstraint – SOFA. SOFA - Topic Tag: FixedTranslationConstraint. /flexible; . /feed; ; Flexible – SOFA. SOFA - Topic Tag: Flexible. /flexible-manipulator; . /feed; ; flexible manipulator – SOFA. SOFA - Topic Tag: flexible manipulator. /fluid; . /feed; ; Fluid – SOFA. SOFA - Topic Tag: Fluid. /fluid-simulation; . /feed; ; fluid simulation – SOFA. SOFA - Topic Tag: fluid simulation. /force; . /feed; ; force – SOFA. SOFA - Topic Tag: force. /forcefeedback; . /feed; ; ForceFeedback – SOFA. SOFA - Topic Tag: ForceFeedback. /force-feedback; . /feed; ; force feedback – SOFA. SOFA - Topic Tag: force feedback. /forcefield; . /feed; ; Forcefield – SOFA. SOFA - Topic Tag: Forcefield. /force-field; . /feed; ; force field – SOFA. SOFA - Topic Tag: force field. /forcefields; . /feed; ; Forcefields – SOFA. SOFA - Topic Tag: Forcefields. /forcefiled; . /feed; ; forcefiled – SOFA. SOFA - Topic Tag: forcefiled. /forces; . /feed; ; forces – SOFA. SOFA - Topic Tag: forces. /forum; . /feed; ; forum – SOFA. SOFA - Topic Tag: forum. /frame-plugin; . /feed; ; Frame plugin – SOFA. SOFA - Topic Tag: Frame plugin. /freemotionanimationloop; . /feed; ; FreeMotionAnimationLoop – SOFA. SOFA - Topic Tag: FreeMotionAnimationLoop. /friction; . /feed; ; friction – SOFA. SOFA - Topic Tag: friction. /gamepad; . /feed; ; Gamepad – SOFA. SOFA - Topic Tag: Gamepad. /gcc; . /feed; ; GCC – SOFA. /page; . /2; ; SOFA - Topic Tag: GCC. /3; ; SOFA - Topic Tag: GCC. /4; ; SOFA - Topic Tag: GCC. /5; ; SOFA - Topic Tag: GCC. /6; ; SOFA - Topic Tag: GCC. SO,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:444391,feedback,feedback,444391,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['feedback'],['feedback']
Usability,"TetrahedronSetTopologyContainer::clear ; (; ). overridevirtual . Procedural creation methods ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer. ◆ clearEdgesInTetrahedron(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::clearEdgesInTetrahedron ; (; ). protected . ◆ clearTetrahedra(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::clearTetrahedra ; (; ). protected . ◆ clearTetrahedraAroundEdge(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::clearTetrahedraAroundEdge ; (; ). protected . ◆ clearTetrahedraAroundTriangle(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::clearTetrahedraAroundTriangle ; (; ). protected . ◆ clearTetrahedraAroundVertex(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::clearTetrahedraAroundVertex ; (; ). protected . ◆ clearTrianglesInTetrahedron(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::clearTrianglesInTetrahedron ; (; ). protected . ◆ createEdgeSetArray(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::createEdgeSetArray ; (; ). overrideprotectedvirtual . Creates the EdgeSet array. ; Create the set of edges when needed. ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer. ◆ createEdgesInTetrahedronArray(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::createEdgesInTetrahedronArray ; (; ). protectedvirtual . Creates the array of edge indices for each tetrahedron. ; This function is only called if the EdgesInTetrahedrone array is required. m_edgesInTetrahedron[i] contains the 6 indices of the 6 edges of each tetrahedron The number of each edge is the following : edge 0 links vertex 0 and 1, edge 1 links vertex 0 and 2, edge 2 links vertex 0 and 3, edge ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container.html:51323,clear,clearTrianglesInTetrahedron,51323,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container.html,1,['clear'],['clearTrianglesInTetrahedron']
Usability,"This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat6x6d &_M);  Adding values from a 6x6d matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat6x6f &_M);  Adding values from a 6x6f matrix. This function may be overload to obtain better performances. More...;  ; virtual void clear (Index i, Index j);  ; virtual void clearRow (Index i);  Reset all the values in row i to 0. More...;  ; virtual void clearRows (Index imin, Index imax);  Clears the value of rows imin to imax-1. More...;  ; virtual void clearCol (Index j);  Reset the all values in column j to 0. More...;  ; virtual void clearCols (Index imin, Index imax);  Clears all the values in columns imin to imax-1. More...;  ; virtual void clearRowCol (Index i);  Reset the value of both row and column i to 0. More...;  ; virtual void clearRowsCols (Index imin, Index imax);  Clears all the values in rows imin to imax-1 and columns imin to imax-1. More...;  ; virtual void compress ();  ; basic linear operations; virtual void opMulV (linearalgebra::BaseVector *result, const linearalgebra::BaseVector *v) const;  Multiply the matrix by vector v and put the result in vector result. More...;  ; virtual void opMulV (float *result, const float *v) const;  Multiply the matrix by float vector v and put the result in vector result. More...;  ; virtual void opMulV (double *result, const double *v) const;  Multiply the matrix by double vector v and put the result in vector result. More...;  ; virtual void opPMulV (linearalgebra::BaseVector *result, const linearalgebra::BaseVector *v) const;  Multiply the matrix by vector v and add the result in vector result. More...;  ; virtual void opPMulV (float *result, const float *v) const;  Multiply the matrix by float vector v and add the result in vector result. More...;  ; virtual void opPMulV (double *result, const double *v) const",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_matrix.html:3547,clear,clearRowsCols,3547,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_matrix.html,1,['clear'],['clearRowsCols']
Usability,"This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat6x6d &_M);  Adding values from a 6x6d matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat6x6f &_M);  Adding values from a 6x6f matrix. This function may be overload to obtain better performances. More...;  ; virtual void clear (Index i, Index j);  ; virtual void clearRow (Index i);  Reset all the values in row i to 0. More...;  ; virtual void clearRows (Index imin, Index imax);  Clears the value of rows imin to imax-1. More...;  ; virtual void clearCol (Index j);  Reset the all values in column j to 0. More...;  ; virtual void clearCols (Index imin, Index imax);  Clears all the values in columns imin to imax-1. More...;  ; virtual void clearRowCol (Index i);  Reset the value of both row and column i to 0. More...;  ; virtual void clearRowsCols (Index imin, Index imax);  Clears all the values in rows imin to imax-1 and columns imin to imax-1. More...;  ; virtual void compress ();  ; virtual void opMulV (float *result, const float *v) const;  Multiply the matrix by float vector v and put the result in vector result. More...;  ; virtual void opMulV (double *result, const double *v) const;  Multiply the matrix by double vector v and put the result in vector result. More...;  ; virtual void opPMulV (linearalgebra::BaseVector *result, const linearalgebra::BaseVector *v) const;  Multiply the matrix by vector v and add the result in vector result. More...;  ; virtual void opPMulV (float *result, const float *v) const;  Multiply the matrix by float vector v and add the result in vector result. More...;  ; virtual void opPMulV (double *result, const double *v) const;  Multiply the matrix by double vector v and add the result in vector result. More...;  ; virtual void opMulTV (float *result, const float *v) const;  Multiply the transposed matrix by float vector v and p",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_rotation_matrix.html:5898,clear,clearRowsCols,5898,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_rotation_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_rotation_matrix.html,1,['clear'],['clearRowsCols']
Usability,"This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat6x6d &_M);  Adding values from a 6x6d matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat6x6f &_M);  Adding values from a 6x6f matrix. This function may be overload to obtain better performances. More...;  ; virtual void clear (Index i, Index j);  ; virtual void clearRow (Index i);  Reset all the values in row i to 0. More...;  ; virtual void clearRows (Index imin, Index imax);  Clears the value of rows imin to imax-1. More...;  ; virtual void clearCol (Index j);  Reset the all values in column j to 0. More...;  ; virtual void clearCols (Index imin, Index imax);  Clears all the values in columns imin to imax-1. More...;  ; virtual void clearRowCol (Index i);  Reset the value of both row and column i to 0. More...;  ; virtual void clearRowsCols (Index imin, Index imax);  Clears all the values in rows imin to imax-1 and columns imin to imax-1. More...;  ; virtual void compress ();  ; virtual void opMulV (linearalgebra::BaseVector *result, const linearalgebra::BaseVector *v) const;  Multiply the matrix by vector v and put the result in vector result. More...;  ; virtual void opMulV (float *result, const float *v) const;  Multiply the matrix by float vector v and put the result in vector result. More...;  ; virtual void opMulV (double *result, const double *v) const;  Multiply the matrix by double vector v and put the result in vector result. More...;  ; virtual void opPMulV (linearalgebra::BaseVector *result, const linearalgebra::BaseVector *v) const;  Multiply the matrix by vector v and add the result in vector result. More...;  ; virtual void opPMulV (float *result, const float *v) const;  Multiply the matrix by float vector v and add the result in vector result. More...;  ; virtual void opPMulV (double *result, const double *v) const;  Multiply the matrix by",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_add_to_matrix_compat_matrix.html:4009,clear,clearRowsCols,4009,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_add_to_matrix_compat_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_add_to_matrix_compat_matrix.html,1,['clear'],['clearRowsCols']
Usability,"This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat6x6d &_M);  Adding values from a 6x6d matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat6x6f &_M);  Adding values from a 6x6f matrix. This function may be overload to obtain better performances. More...;  ; virtual void clear (Index i, Index j);  ; virtual void clearRow (Index i);  Reset all the values in row i to 0. More...;  ; virtual void clearRows (Index imin, Index imax);  Clears the value of rows imin to imax-1. More...;  ; virtual void clearCol (Index j);  Reset the all values in column j to 0. More...;  ; virtual void clearCols (Index imin, Index imax);  Clears all the values in columns imin to imax-1. More...;  ; virtual void clearRowCol (Index i);  Reset the value of both row and column i to 0. More...;  ; virtual void clearRowsCols (Index imin, Index imax);  Clears all the values in rows imin to imax-1 and columns imin to imax-1. More...;  ; virtual void opMulV (linearalgebra::BaseVector *result, const linearalgebra::BaseVector *v) const;  Multiply the matrix by vector v and put the result in vector result. More...;  ; virtual void opMulV (float *result, const float *v) const;  Multiply the matrix by float vector v and put the result in vector result. More...;  ; virtual void opMulV (double *result, const double *v) const;  Multiply the matrix by double vector v and put the result in vector result. More...;  ; virtual void opPMulV (linearalgebra::BaseVector *result, const linearalgebra::BaseVector *v) const;  Multiply the matrix by vector v and add the result in vector result. More...;  ; virtual void opPMulV (float *result, const float *v) const;  Multiply the matrix by float vector v and add the result in vector result. More...;  ; virtual void opPMulV (double *result, const double *v) const;  Multiply the matrix by double vector v and add the ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical.html:16054,clear,clearRowsCols,16054,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical.html,1,['clear'],['clearRowsCols']
Usability,"TopologyContainerprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear() overridesofa::component::topology::container::dynamic::HexahedronSetTopologyContainervirtual; clearEdges()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearEdgesAroundVertex()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearEdgesInHexahedron()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearEdgesInQuad()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; clearHexahedra()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearHexahedraAroundEdge()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearHexahedraAroundQuad()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearHexahedraAroundVertex()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearLoggedMessages() constsofa::core::objectmodel::Base; clearQuads()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; clearQuadsAroundEdge()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; clearQuadsAroundVertex()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; clearQuadsInHexahedron()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createEdgesAroundVertexArray()sofa::component::topology::container::dynamic",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_container-members.html:5125,clear,clearHexahedraAroundVertex,5125,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_container-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_container-members.html,2,['clear'],['clearHexahedraAroundVertex']
Usability,"Torque () const;  ; void setTorque (const Vec &v);  ; Vec & getForce ();  ; const Vec & getForce () const;  ; void setForce (const Vec &v);  . Friends; std::ostream & operator<< (std::ostream &out, const SpatialVector &t);  write to an output stream More...;  ; std::istream & operator>> (std::istream &in, SpatialVector &t);  read from an input stream More...;  . Attribute details. ◆ freeVec. template<class TReal > . Vec sofa::type::SpatialVector< TReal >::freeVec { type::NOINIT }. ◆ lineVec. template<class TReal > . Vec sofa::type::SpatialVector< TReal >::lineVec { type::NOINIT }. Constructor details. ◆ SpatialVector() [1/2]. template<class TReal > . sofa::type::SpatialVector< TReal >::SpatialVector ; (; ). default . ◆ SpatialVector() [2/2]. template<class TReal > . sofa::type::SpatialVector< TReal >::SpatialVector ; (; const Vec & ; l, . const Vec & ; f . ). Parameters. lThe line vector: angular velocity, or force ; fThe free vector: linear velocity, or torque . Function details. ◆ clear(). template<class TReal > . void sofa::type::SpatialVector< TReal >::clear. ◆ cross(). template<class TReal > . SpatialVector< TReal > sofa::type::SpatialVector< TReal >::cross ; (; const SpatialVector< TReal > & ; v); const. Spatial cross product. . ◆ getAngularVelocity() [1/2]. template<class TReal > . Vec& sofa::type::SpatialVector< TReal >::getAngularVelocity ; (; ). inline . If the SpatialVector models a spatial velocity, then the angular velocity is the lineVec. Otherwise, the SpatialVector models a spatial force, and this method returns a force. . ◆ getAngularVelocity() [2/2]. template<class TReal > . const Vec& sofa::type::SpatialVector< TReal >::getAngularVelocity ; (; ); const. inline . ◆ getForce() [1/2]. template<class TReal > . Vec& sofa::type::SpatialVector< TReal >::getForce ; (; ). inline . If the SpatialVector models a spatial force, then the torque is the lineVec. Otherwise, the SpatialVector models a spatial velocity, and this method returns an angular velocity. .",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_spatial_vector.html:2719,clear,clear,2719,api/master/sofa/html/classsofa_1_1type_1_1_spatial_vector.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_spatial_vector.html,1,['clear'],['clear']
Usability,"Translation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; baseRead(ConstVecId v) const overridesofa::core::State< TDataTypes >virtual; BaseState()sofa::core::BaseStateinlineprotected; BaseType typedefsofa::core::objectmodel::Base; baseWrite(VecId v) overridesofa::core::State< TDataTypes >virtual; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; colorMapsofa::gl::component::rendering3d::DataDisplay; sofa::computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; VisualState< defaulttype::Vec3Types >::computeBBox() constsofa::core::State< TDataTypes >; VisualState< defaulttype::Vec3Types >::computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::State< TDataTypes >virtual; computeNormals()sofa::gl::component::rendering3d::DataDisplayprotected; Coord typedefsofa::core::State< TDataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_currentMaxsofa::gl::component::rendering3d::DataDisplay; d_currentMins",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_data_display-members.html:2764,clear,clearLoggedMessages,2764,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_data_display-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_data_display-members.html,1,['clear'],['clearLoggedMessages']
Usability,"Translation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; baseRead(ConstVecId v) const overridesofa::core::State< TDataTypes >virtual; BaseState()sofa::core::BaseStateinlineprotected; BaseType typedefsofa::core::objectmodel::Base; baseWrite(VecId v) overridesofa::core::State< TDataTypes >virtual; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; sofa::computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; VisualState< defaulttype::Vec3Types >::computeBBox() constsofa::core::State< TDataTypes >; VisualState< defaulttype::Vec3Types >::computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::State< TDataTypes >virtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; DataTypes typedefsofa::core::State< TDataTypes >; Deriv typedefsofa::core::State< TDataTypes >; doDrawVisual(const core::visual::VisualParams *vparam",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_ogl_cylinder_model-members.html:2774,clear,clearLoggedMessages,2774,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_ogl_cylinder_model-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_ogl_cylinder_model-members.html,1,['clear'],['clearLoggedMessages']
Usability,"Type typedefsofa::core::objectmodel::Base; buildDampingMatrix(core::behavior::DampingMatrix *) finalsofa::component::mechanicalload::EllipsoidForceField< DataTypes >virtual; buildStiffnessMatrix(core::behavior::StiffnessMatrix *matrix) overridesofa::component::mechanicalload::EllipsoidForceField< DataTypes >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ForceField< DataTypes >inlinestatic; sofa::core::behavior::BaseForceField::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; Coord typedefsofa::component::mechanicalload::EllipsoidForceField< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_centersofa::component::mechanicalload::EllipsoidForceField< DataTypes >; d_colorsofa::component::mechanicalload::EllipsoidForceField< DataTypes >; d_componentStatesofa::core::objectmodel::Base; d_contactssofa::component::mechanicalload::EllipsoidForceField< DataTypes >protected; d_dampingsofa::component::mechanicalload::EllipsoidForceField< DataTypes >; d_messageLogCountsofa::core::objectmodel::Basemutable; d_stiffnesssofa::component::mechanicalload::EllipsoidForceField< DataTypes >; d_vra",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_ellipsoid_force_field-members.html:4667,clear,clearLoggedMessages,4667,api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_ellipsoid_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_ellipsoid_force_field-members.html,1,['clear'],['clearLoggedMessages']
Usability,"Type typedefsofa::core::objectmodel::Base; buildDampingMatrix(core::behavior::DampingMatrix *) finalsofa::component::mechanicalload::QuadPressureForceField< DataTypes >virtual; buildStiffnessMatrix(core::behavior::StiffnessMatrix *) overridesofa::component::mechanicalload::QuadPressureForceField< DataTypes >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ForceField< DataTypes >inlinestatic; sofa::core::behavior::BaseForceField::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; Coord typedefsofa::component::mechanicalload::QuadPressureForceField< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_dmaxsofa::component::mechanicalload::QuadPressureForceField< DataTypes >; d_dminsofa::component::mechanicalload::QuadPressureForceField< DataTypes >; d_messageLogCountsofa::core::objectmodel::Basemutable; d_normalsofa::component::mechanicalload::QuadPressureForceField< DataTypes >; d_pressuresofa::component::mechanicalload::QuadPressureForceField< DataTypes >; d_quadListsofa::component::mechanicalload::QuadPressureForceField< DataTypes >; d",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_quad_pressure_force_field-members.html:4713,clear,clearLoggedMessages,4713,api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_quad_pressure_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_quad_pressure_force_field-members.html,1,['clear'],['clearLoggedMessages']
Usability,Types >;  ; template class SOFA_COMPONENT_STATECONTAINER_API MappedObject< Rigid3Types >;  ; template class SOFA_COMPONENT_STATECONTAINER_API MappedObject< Rigid2Types >;  ; template class SOFA_COMPONENT_STATECONTAINER_API MechanicalObject< Vec3Types >;  ; template class SOFA_COMPONENT_STATECONTAINER_API MechanicalObject< Vec2Types >;  ; template class SOFA_COMPONENT_STATECONTAINER_API MechanicalObject< Vec1Types >;  ; template class SOFA_COMPONENT_STATECONTAINER_API MechanicalObject< Vec6Types >;  ; template class SOFA_COMPONENT_STATECONTAINER_API MechanicalObject< Rigid3Types >;  ; template class SOFA_COMPONENT_STATECONTAINER_API MechanicalObject< Rigid2Types >;  . Typedef Documentation. ◆ nat. typedef std::size_t sofa::component::statecontainer::nat. Function Documentation. ◆ clear() [1/3]. template<> . void sofa::component::statecontainer::clear ; (; double & ; t). inline . ◆ clear() [2/3]. template<> . void sofa::component::statecontainer::clear ; (; float & ; t). inline . ◆ clear() [3/3]. template<class T > . void sofa::component::statecontainer::clear ; (; T & ; t). inline . ◆ getModuleName(). const char * sofa::component::statecontainer::getModuleName ; (; ). ◆ getModuleVersion(). const char * sofa::component::statecontainer::getModuleVersion ; (; ). ◆ init(). SOFA_COMPONENT_STATECONTAINER_API void sofa::component::statecontainer::init ; (; ). ◆ initExternalModule(). void sofa::component::statecontainer::initExternalModule ; (; ). ◆ registerMappedObject(). void sofa::component::statecontainer::registerMappedObject ; (; sofa::core::ObjectFactory * ; factory). ◆ registerMechanicalObject(). void sofa::component::statecontainer::registerMechanicalObject ; (; sofa::core::ObjectFactory * ; factory). ◆ registerObjects(). void sofa::component::statecontainer::registerObjects ; (; sofa::core::ObjectFactory * ; factory). Variable Documentation. ◆ MappedObject< Rigid2Types >. template class SOFA_COMPONENT_STATECONTAINER_API sofa::component::statecontainer::MappedObject<,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1component_1_1statecontainer.html:2501,clear,clear,2501,api/master/sofa/html/namespacesofa_1_1component_1_1statecontainer.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1component_1_1statecontainer.html,1,['clear'],['clear']
Usability,"Types >virtual; bwdInit() overridesofa::component::constraint::lagrangian::model::BilateralLagrangianConstraint< DataTypes >inlinevirtual; bwdInit()sofa::component::constraint::lagrangian::model::BilateralLagrangianConstraint< DataTypes >virtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::PairInteractionConstraint< TDataTypes >inlinestatic; sofa::core::behavior::BaseInteractionConstraint::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cidsofa::component::constraint::lagrangian::model::BilateralLagrangianConstraint< DataTypes >protected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear(int reserve=0)sofa::component::constraint::lagrangian::model::BilateralLagrangianConstraint< DataTypes >; clearLoggedMessages() constsofa::core::objectmodel::Base; sofa::computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; sofa::core::behavior::StateAccessor::computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; ConstArea typedefsofa::core::behavior::BaseConstraint; ConstCoord typedefsofa::core::behavior::BaseConstraint; ConstDeriv typedefsofa::core::behavior::BaseConstraint; Coord typedefsofa::component::constraint::lagrangian::model::BilateralLagrangianConstraint< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *p0, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::core::behavior::PairInteractionConstraint< TDa",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_bilateral_lagrangian_constraint-members.html:4974,clear,clear,4974,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_bilateral_lagrangian_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_bilateral_lagrangian_constraint-members.html,1,['clear'],['clear']
Usability,"V &v) const;  compute the projection of a point from the local frame to the reference frame More...;  ; Frame inversed () const;  Transformation from the reference frame to the local frame. More...;  . Static Public Member Functions; static Frame identity ();  The identity transform. More...;  . Friends; std::ostream & operator<< (std::ostream &out, const Frame &c);  . Constructor details. ◆ Frame() [1/4]. sofa::type::Frame::Frame ; (; const Vec3 & ; origin, . const Mat33 & ; matrix . ). Define the local frame using origin and basis vectors . ◆ Frame() [2/4]. sofa::type::Frame::Frame ; (; const Vec3 & ; origin, . const Quat & ; orientation, . const Vec3 & ; scale = Vec3(1_sreal,1_sreal,1_sreal) . ). Define the local frame using three transforms . ◆ Frame() [3/4]. sofa::type::Frame::Frame ; (; const Vec3 & ; origin). Define the local frame without rotation . ◆ Frame() [4/4]. sofa::type::Frame::Frame ; (; ). Default constructor set the transformation to identity. . Function details. ◆ clear(). void sofa::type::Frame::clear ; (; ). Reset the transformation to identity. . ◆ getBasis() [1/2]. Frame::Mat33 & sofa::type::Frame::getBasis ; (; ). The columns represent the base vectors of the local frame wrt the reference frame. . ◆ getBasis() [2/2]. const Frame::Mat33 & sofa::type::Frame::getBasis ; (; ); const. The columns represent the base vectors of the local frame wrt the reference frame. . ◆ getOrigin() [1/2]. Vec3 & sofa::type::Frame::getOrigin ; (; ). Origin of the local frame in the reference frame,. . ◆ getOrigin() [2/2]. const Vec3 & sofa::type::Frame::getOrigin ; (; ); const. Origin of the local frame in the reference frame,. . ◆ identity(). Frame sofa::type::Frame::identity ; (; ). static . The identity transform. . ◆ inversed(). Frame sofa::type::Frame::inversed ; (; ); const. Transformation from the reference frame to the local frame. ; Compute the transformation from the parent to the child. . ◆ mult(). Frame sofa::type::Frame::mult ; (; const Frame & ; c); co",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_frame.html:3926,clear,clear,3926,api/master/sofa/html/classsofa_1_1type_1_1_frame.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_frame.html,1,['clear'],['clear']
Usability,"VecCoord &data_x1, const DataVecCoord &data_x2, const DataVecDeriv &data_v1, const DataVecDeriv &data_v2) override;  ; void addDForce (const core::MechanicalParams *mparams, DataVecDeriv &data_df1, DataVecDeriv &data_df2, const DataVecDeriv &data_dx1, const DataVecDeriv &data_dx2) override;  ; void buildDampingMatrix (core::behavior::DampingMatrix *) final;  ; SReal getPotentialEnergy (const core::MechanicalParams *, const DataVecCoord &, const DataVecCoord &) const override;  ; Real getStiffness () const;  ; const Real getViscosity () const;  ; const core::topology::EdgeData< sofa::type::vector< Spring > > & getSpringArray () const;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; void clear (int reserve=0);  ; void addSpring (int m1, int m2, SReal ks, SReal kd, Coord restVector);  ;  Public Member Functions inherited from sofa::core::behavior::PairInteractionForceField< DataTypes >;  SOFA_ABSTRACT_CLASS2 (SOFA_TEMPLATE(PairInteractionForceField, DataTypes), BaseInteractionForceField, SOFA_TEMPLATE2(PairStateAccessor, DataTypes, DataTypes));  ; void setPathObject1 (const std::string &path);  Set the Object1 path. More...;  ; void setPathObject2 (const std::string &path);  Set the Object2 path. More...;  ; std::string getPathObject1 () const;  Retrieve the Object1 path. More...;  ; std::string getPathObject2 () const;  Retrieve the Object2 path. More...;  ; void addForce (const MechanicalParams *mparams, MultiVecDerivId fId) override;  ; void addDForce (const MechanicalParams *mparams, MultiVecDerivId dfId) override;  ; SReal getPotentialEnergy (const MechanicalParams *mparams) const override;  ;  Public Member Functions inherited from sofa::core::behavior::BaseInteractionForceField;  SOFA_ABSTRACT_CLASS (BaseInteractionForceField, BaseForceField);  ; virtual BaseMechanicalState * getMechModel1 ();  ; virtual BaseMechanicalState * getMechModel2 ();  ; void addKToMatrix (const ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_vector_spring_force_field.html:6204,clear,clear,6204,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_vector_spring_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_vector_spring_force_field.html,1,['clear'],['clear']
Usability,"VecDerivId dx, SReal factor=1.0);  res += factor M.dx More...;  ; void integrateVelocity (core::MultiVecDerivId res, core::ConstMultiVecCoordId x, core::ConstMultiVecDerivId v, SReal dt);  res = x + v.dt More...;  ; void accFromF (core::MultiVecDerivId a, core::ConstMultiVecDerivId f);  ; void computeEnergy (SReal &kineticEnergy, SReal &potentialEnergy);  Compute Energy. More...;  ; void computeForce (core::MultiVecDerivId result, bool clear=true, bool accumulate=true);  Compute the current force (given the latest propagated position and velocity) More...;  ; void computeDf (core::MultiVecDerivId df, bool clear=true, bool accumulate=true);  Compute the current force delta (given the latest propagated displacement) More...;  ; void computeDfV (core::MultiVecDerivId df, bool clear=true, bool accumulate=true);  Compute the current force delta (given the latest propagated velocity) More...;  ; void addMBKdx (core::MultiVecDerivId df, SReal m, SReal b, SReal k, bool clear=true, bool accumulate=true);  accumulate $ df += (m M + b B + k K) dx $ (given the latest propagated displacement) More...;  ; void addMBKv (core::MultiVecDerivId df, SReal m, SReal b, SReal k, bool clear=true, bool accumulate=true);  accumulate $ df += (m M + b B + k K) velocity $ More...;  ; void addSeparateGravity (SReal dt, core::MultiVecDerivId result=core::VecDerivId::velocity());  Add dt*Gravity to the velocity. More...;  ; void computeContactForce (core::MultiVecDerivId result);  ; void computeContactDf (core::MultiVecDerivId df);  ; void computeAcc (SReal t, core::MultiVecDerivId a, core::MultiVecCoordId x, core::MultiVecDerivId v);  Compute a(x,v) at time t. Parameters x and v not const due to propagation through mappings. More...;  ; void computeForce (SReal t, core::MultiVecDerivId f, core::MultiVecCoordId x, core::MultiVecDerivId v);  Compute f(x,v) at time t. Parameters x and v not const due to propagation through mappings. More...;  ; void computeContactAcc (SReal t, core::MultiVecDerivId",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1common_1_1_mechanical_operations.html:3720,clear,clear,3720,api/master/sofa/html/classsofa_1_1simulation_1_1common_1_1_mechanical_operations.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1common_1_1_mechanical_operations.html,1,['clear'],['clear']
Usability,"Widget(). sofa::gui::qt::QDisplayPropertyWidget::~QDisplayPropertyWidget ; (; ). override . Function details. ◆ addComponent(). void sofa::gui::qt::QDisplayPropertyWidget::addComponent ; (; const QString & ; component, . core::objectmodel::Base * ; base, . QTreeWidgetItem * ; listItem, . bool ; clear = true . ). ◆ addData(). void sofa::gui::qt::QDisplayPropertyWidget::addData ; (; const QString & ; component, . const QString & ; group, . sofa::core::objectmodel::BaseData * ; data . ). ◆ addDescriptionItem(). void sofa::gui::qt::QDisplayPropertyWidget::addDescriptionItem ; (; QTreeWidgetItem * ; groupItem, . const QString & ; name, . const QString & ; description . ). protected . ◆ addGroup(). void sofa::gui::qt::QDisplayPropertyWidget::addGroup ; (; const QString & ; component, . const QString & ; group . ). ◆ addLink(). void sofa::gui::qt::QDisplayPropertyWidget::addLink ; (; const QString & ; component, . const QString & ; group, . sofa::core::objectmodel::BaseLink * ; link . ). ◆ clear(). void sofa::gui::qt::QDisplayPropertyWidget::clear ; (; ). ◆ clearAll(). void sofa::gui::qt::QDisplayPropertyWidget::clearAll ; (; ). ◆ clearComponentOutput. void sofa::gui::qt::QDisplayPropertyWidget::clearComponentOutput ; (; ). protectedslot . ◆ clearComponentWarning. void sofa::gui::qt::QDisplayPropertyWidget::clearComponentWarning ; (; ). protectedslot . ◆ DefaultDataGroup(). static QString sofa::gui::qt::QDisplayPropertyWidget::DefaultDataGroup ; (; ). inlinestatic . ◆ DefaultInfoGroup(). static QString sofa::gui::qt::QDisplayPropertyWidget::DefaultInfoGroup ; (; ). inlinestatic . ◆ DefaultLinkGroup(). static QString sofa::gui::qt::QDisplayPropertyWidget::DefaultLinkGroup ; (; ). inlinestatic . ◆ DefaultLogGroup(). static QString sofa::gui::qt::QDisplayPropertyWidget::DefaultLogGroup ; (; ). inlinestatic . ◆ findComponent(). QTreeWidgetItem * sofa::gui::qt::QDisplayPropertyWidget::findComponent ; (; const QString & ; component); const. protected . ◆ findGroup(). QTreeWidgetI",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_display_property_widget.html:3110,clear,clear,3110,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_display_property_widget.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_display_property_widget.html,1,['clear'],['clear']
Usability,"]. template<std::size_t N, typename T > . BTDMatrix< N, T >::Block & sofa::linearalgebra::BTDMatrix< N, T >::asub ; (; Index ; bi, . Index ; bj, . Index ; , . Index ;  . ). ◆ asub() [2/2]. template<std::size_t N, typename T > . const BTDMatrix< N, T >::Block & sofa::linearalgebra::BTDMatrix< N, T >::asub ; (; Index ; bi, . Index ; bj, . Index ; , . Index ;  . ); const. ◆ bloc() [1/2]. template<std::size_t N, typename T > . BTDMatrix< N, T >::Block & sofa::linearalgebra::BTDMatrix< N, T >::bloc ; (; Index ; bi, . Index ; bj . ). ◆ bloc() [2/2]. template<std::size_t N, typename T > . const BTDMatrix< N, T >::Block & sofa::linearalgebra::BTDMatrix< N, T >::bloc ; (; Index ; bi, . Index ; bj . ); const. ◆ clear() [1/2]. template<std::size_t N, typename T > . void sofa::linearalgebra::BTDMatrix< N, T >::clear ; (; ). overridevirtual . Reset all values to 0. ; Implements sofa::linearalgebra::BaseMatrix. ◆ clear() [2/2]. template<std::size_t N, typename T > . void sofa::linearalgebra::BTDMatrix< N, T >::clear ; (; Index ; i, . Index ; j . ). overridevirtual . Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearCol(). template<std::size_t N, typename T > . void sofa::linearalgebra::BTDMatrix< N, T >::clearCol ; (; Index ; j). overridevirtual . Reset the all values in column j to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRow(). template<std::size_t N, typename T > . void sofa::linearalgebra::BTDMatrix< N, T >::clearRow ; (; Index ; i). overridevirtual . Reset all the values in row i to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRowCol(). template<std::size_t N, typename T > . void sofa::linearalgebra::BTDMatrix< N, T >::clearRowCol ; (; Index ; i). overridevirtual . Reset the value of both row and column i to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ colSize(). template<std::size_t N, typename T > . BTDMatrix< N, T >::Index sofa::linearalgebra::BTDMatrix< N, T >::colSize ; (; void ; ); const. overridevirtual .",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_b_t_d_matrix.html:17401,clear,clear,17401,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_b_t_d_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_b_t_d_matrix.html,1,['clear'],['clear']
Usability,_API MappedObject< Vec3Types >;  ; template class SOFA_COMPONENT_STATECONTAINER_API MappedObject< Vec6Types >;  ; template class SOFA_COMPONENT_STATECONTAINER_API MappedObject< Rigid3Types >;  ; template class SOFA_COMPONENT_STATECONTAINER_API MappedObject< Rigid2Types >;  ; template class SOFA_COMPONENT_STATECONTAINER_API MechanicalObject< Vec3Types >;  ; template class SOFA_COMPONENT_STATECONTAINER_API MechanicalObject< Vec2Types >;  ; template class SOFA_COMPONENT_STATECONTAINER_API MechanicalObject< Vec1Types >;  ; template class SOFA_COMPONENT_STATECONTAINER_API MechanicalObject< Vec6Types >;  ; template class SOFA_COMPONENT_STATECONTAINER_API MechanicalObject< Rigid3Types >;  ; template class SOFA_COMPONENT_STATECONTAINER_API MechanicalObject< Rigid2Types >;  . Typedef Documentation. ◆ nat. typedef std::size_t sofa::component::statecontainer::nat. Function Documentation. ◆ clear() [1/3]. template<> . void sofa::component::statecontainer::clear ; (; double & ; t). inline . ◆ clear() [2/3]. template<> . void sofa::component::statecontainer::clear ; (; float & ; t). inline . ◆ clear() [3/3]. template<class T > . void sofa::component::statecontainer::clear ; (; T & ; t). inline . ◆ getModuleName(). const char * sofa::component::statecontainer::getModuleName ; (; ). ◆ getModuleVersion(). const char * sofa::component::statecontainer::getModuleVersion ; (; ). ◆ init(). SOFA_COMPONENT_STATECONTAINER_API void sofa::component::statecontainer::init ; (; ). ◆ initExternalModule(). void sofa::component::statecontainer::initExternalModule ; (; ). ◆ registerMappedObject(). void sofa::component::statecontainer::registerMappedObject ; (; sofa::core::ObjectFactory * ; factory). ◆ registerMechanicalObject(). void sofa::component::statecontainer::registerMechanicalObject ; (; sofa::core::ObjectFactory * ; factory). ◆ registerObjects(). void sofa::component::statecontainer::registerObjects ; (; sofa::core::ObjectFactory * ; factory). Variable Documentation. ◆ MappedObject< Rigid2Ty,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1component_1_1statecontainer.html:2399,clear,clear,2399,api/master/sofa/html/namespacesofa_1_1component_1_1statecontainer.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1component_1_1statecontainer.html,1,['clear'],['clear']
Usability,"_device< T, MemoryManager, DataTypeInfoManager >protected; begin() constsofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >inline; begin()sofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >inline; buffer_id_type typedefsofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >; bufferIsRegisteredsofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >mutableprotected; bufferObjectsofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >protected; bufferRead(bool create=false)sofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >inline; bufferWrite(bool create=false)sofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >inline; capacity() constsofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >inline; checkIndex(Size i) constsofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >inlineprotected; clear()sofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >inline; clearSizesofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >mutableprotected; const_iterator typedefsofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >; const_reference typedefsofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >; copyToDevice(int d=0) constsofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >inlineprotected; copyToHost() constsofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >inlineprotected; copyToHostSingle(Size i) constsofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >inlineprotected; cptidsofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >inlineprotectedstatic; createBuffer()sofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >inlineprotected; data() constsofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >inline; data()sofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >inline; datatypeinfo_manager typedefsofa::type::vector_devic",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1vector__device-members.html:1551,clear,clearSizesofa,1551,api/master/sofa/html/classsofa_1_1type_1_1vector__device-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1vector__device-members.html,1,['clear'],['clearSizesofa']
Usability,"a 3x3d matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat3x3f &_M);  Adding values from a 3x3f matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat2x2d &_M);  Adding values from a 2x2d matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat2x2f &_M);  Adding values from a 2x2f matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat6x6d &_M);  Adding values from a 6x6d matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat6x6f &_M);  Adding values from a 6x6f matrix. This function may be overload to obtain better performances. More...;  ; virtual void clearRows (Index imin, Index imax);  Clears the value of rows imin to imax-1. More...;  ; virtual void clearCols (Index imin, Index imax);  Clears all the values in columns imin to imax-1. More...;  ; virtual void clearRowsCols (Index imin, Index imax);  Clears all the values in rows imin to imax-1 and columns imin to imax-1. More...;  ; virtual void compress ();  ; virtual void opMulV (linearalgebra::BaseVector *result, const linearalgebra::BaseVector *v) const;  Multiply the matrix by vector v and put the result in vector result. More...;  ; virtual void opMulV (float *result, const float *v) const;  Multiply the matrix by float vector v and put the result in vector result. More...;  ; virtual void opMulV (double *result, const double *v) const;  Multiply the matrix by double vector v and put the result in vector result. More...;  ; virtual void opPMulV (linearalgebra::BaseVector *result, const linearalgebra::BaseVector *v) const;  Multiply the matrix by vector v and add the result in vector result. More...;  ; v",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_diagonal_matrix.html:5151,clear,clearRows,5151,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_diagonal_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_diagonal_matrix.html,7,['clear'],['clearRows']
Usability,"a::BaseMatrix. ◆ asub() [1/2]. template<std::size_t N, typename T > . BlockFullMatrix< N, T >::Block & sofa::linearalgebra::BlockFullMatrix< N, T >::asub ; (; Index ; bi, . Index ; bj, . Index ; , . Index ;  . ). ◆ asub() [2/2]. template<std::size_t N, typename T > . const BlockFullMatrix< N, T >::Block & sofa::linearalgebra::BlockFullMatrix< N, T >::asub ; (; Index ; bi, . Index ; bj, . Index ; , . Index ;  . ); const. ◆ bloc() [1/2]. template<std::size_t N, typename T > . BlockFullMatrix< N, T >::Block & sofa::linearalgebra::BlockFullMatrix< N, T >::bloc ; (; Index ; bi, . Index ; bj . ). ◆ bloc() [2/2]. template<std::size_t N, typename T > . const BlockFullMatrix< N, T >::Block & sofa::linearalgebra::BlockFullMatrix< N, T >::bloc ; (; Index ; bi, . Index ; bj . ); const. ◆ clear() [1/2]. template<std::size_t N, typename T > . void sofa::linearalgebra::BlockFullMatrix< N, T >::clear ; (; ). overridevirtual . Reset all values to 0. ; Implements sofa::linearalgebra::BaseMatrix. ◆ clear() [2/2]. template<std::size_t N, typename T > . void sofa::linearalgebra::BlockFullMatrix< N, T >::clear ; (; Index ; i, . Index ; j . ). overridevirtual . Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearCol(). template<std::size_t N, typename T > . void sofa::linearalgebra::BlockFullMatrix< N, T >::clearCol ; (; Index ; j). overridevirtual . Reset the all values in column j to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRow(). template<std::size_t N, typename T > . void sofa::linearalgebra::BlockFullMatrix< N, T >::clearRow ; (; Index ; i). overridevirtual . Reset all the values in row i to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRowCol(). template<std::size_t N, typename T > . void sofa::linearalgebra::BlockFullMatrix< N, T >::clearRowCol ; (; Index ; i). overridevirtual . Reset the value of both row and column i to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ colSize(). template<std::size_t N, typename T > . BlockF",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_full_matrix.html:17096,clear,clear,17096,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_full_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_full_matrix.html,1,['clear'],['clear']
Usability,"a::BaseMatrix::add. Adding values from a 6x6f matrix. This function may be overload to obtain better performances. . ◆ add() [9/9]. template<typename T > . virtual void sofa::linearalgebra::BaseMatrix::add. Add v to the existing value of the element at row i, column j (using 0-based indices) . ◆ addEqual(). template<typename T > . template<class M > . void sofa::linearalgebra::DiagonalMatrix< T >::addEqual ; (; const M & ; m). inlineprotected . this += m . ◆ addTo(). template<typename T > . template<class Dest > . void sofa::linearalgebra::DiagonalMatrix< T >::addTo ; (; Dest * ; dest); const. inline . ◆ clear() [1/3]. template<typename T > . void sofa::linearalgebra::DiagonalMatrix< T >::clear ; (; ). inlineoverridevirtual . Reset all values to 0. ; Implements sofa::linearalgebra::BaseMatrix. ◆ clear() [2/3]. template<typename T > . void sofa::linearalgebra::DiagonalMatrix< T >::clear ; (; Index ; i). inline . ◆ clear() [3/3]. template<typename T > . void sofa::linearalgebra::DiagonalMatrix< T >::clear ; (; Index ; i, . Index ; j . ). inlineoverridevirtual . Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearCol(). template<typename T > . void sofa::linearalgebra::DiagonalMatrix< T >::clearCol ; (; Index ; j). inlineoverridevirtual . Reset the all values in column j to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRow(). template<typename T > . void sofa::linearalgebra::DiagonalMatrix< T >::clearRow ; (; Index ; i). inlineoverridevirtual . Reset all the values in row i to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRowCol(). template<typename T > . void sofa::linearalgebra::DiagonalMatrix< T >::clearRowCol ; (; Index ; i). inlineoverridevirtual . Reset the value of both row and column i to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ colSize(). template<typename T > . Index sofa::linearalgebra::DiagonalMatrix< T >::colSize ; (; void ; ); const. inlineoverridevirtual . Number of columns. ; Implements sofa::l",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_diagonal_matrix.html:19942,clear,clear,19942,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_diagonal_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_diagonal_matrix.html,1,['clear'],['clear']
Usability,"a::component::mapping::linear::BarycentricMapperTetrahedronSetTopologyRigid< sofa::defaulttype::StdVectorTypes< sofa::type::Vec< 3, TInReal >, sofa::type::Vec< 3, TInReal >, TInReal >, sofa::defaulttype::StdRigidTypes< 3, TOutReal > >; BarycentricMapperTetrahedronSetTopology(core::topology::BaseMeshTopology *fromTopology, core::topology::BaseMeshTopology *_toTopology)sofa::component::mapping::linear::BarycentricMapperTetrahedronSetTopology< sofa::defaulttype::StdVectorTypes< sofa::type::Vec< 3, TInReal >, sofa::type::Vec< 3, TInReal >, TInReal >, sofa::defaulttype::StdRigidTypes< 3, TOutReal > >inline; BarycentricMapperTetrahedronSetTopologyRigid(core::topology::BaseMeshTopology *fromTopology, core::topology::BaseMeshTopology *_toTopology)sofa::component::mapping::linear::BarycentricMapperTetrahedronSetTopologyRigid< sofa::defaulttype::StdVectorTypes< sofa::type::Vec< 3, TInReal >, sofa::type::Vec< 3, TInReal >, TInReal >, sofa::defaulttype::StdRigidTypes< 3, TOutReal > >protected; clear(std::size_t reserve=0) overridesofa::component::mapping::linear::BarycentricMapperTetrahedronSetTopologyRigid< sofa::defaulttype::StdVectorTypes< sofa::type::Vec< 3, TInReal >, sofa::type::Vec< 3, TInReal >, TInReal >, sofa::defaulttype::StdRigidTypes< 3, TOutReal > >; d_mapsofa::component::mapping::linear::BarycentricMapperTetrahedronSetTopologyRigid< sofa::defaulttype::StdVectorTypes< sofa::type::Vec< 3, TInReal >, sofa::type::Vec< 3, TInReal >, TInReal >, sofa::defaulttype::StdRigidTypes< 3, TOutReal > >protected; d_mapOrientsofa::component::mapping::linear::BarycentricMapperTetrahedronSetTopologyRigid< sofa::defaulttype::StdVectorTypes< sofa::type::Vec< 3, TInReal >, sofa::type::Vec< 3, TInReal >, TInReal >, sofa::defaulttype::StdRigidTypes< 3, TOutReal > >protected; draw(const core::visual::VisualParams *, const typename Out::VecCoord &out, const typename In::VecCoord &in) overridesofa::component::mapping::linear::BarycentricMapperTetrahedronSetTopologyRigid< sofa::defaulttype:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_barycentric_mapper_tetrahedron_set_topology_3_01a042bb74f5ff17dd54e7164f87ac38e9.html:4107,clear,clear,4107,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_barycentric_mapper_tetrahedron_set_topology_3_01a042bb74f5ff17dd54e7164f87ac38e9.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_barycentric_mapper_tetrahedron_set_topology_3_01a042bb74f5ff17dd54e7164f87ac38e9.html,1,['clear'],['clear']
Usability,"a::component::solidmechanics::spring::FrameSpringForceField< DataTypes >::addSpringDForce ; (; VecDeriv & ; df1, . const VecDeriv & ; dx1, . VecDeriv & ; df2, . const VecDeriv & ; dx2, . int ; i, . const Spring & ; spring . ). protected . Apply the stiffness, i.e. accumulate df given dx. . ◆ addSpringForce(). template<class DataTypes > . void sofa::component::solidmechanics::spring::FrameSpringForceField< DataTypes >::addSpringForce ; (; SReal & ; potentialEnergy, . VecDeriv & ; f1, . const VecCoord & ; p1, . const VecDeriv & ; v1, . VecDeriv & ; f2, . const VecCoord & ; p2, . const VecDeriv & ; v2, . int ; i, . const Spring & ; spring . ). protected . Accumulate the spring force and compute and store its stiffness. . ◆ buildDampingMatrix(). template<class DataTypes > . void sofa::component::solidmechanics::spring::FrameSpringForceField< DataTypes >::buildDampingMatrix ; (; core::behavior::DampingMatrix * ; ). finalvirtual . Reimplemented from sofa::core::behavior::BaseForceField. ◆ clear(). template<class DataTypes > . void sofa::component::solidmechanics::spring::FrameSpringForceField< DataTypes >::clear ; (; int ; reserve = 0). ◆ draw(). template<class DataTypes > . void sofa::component::solidmechanics::spring::FrameSpringForceField< DataTypes >::draw ; (; const core::visual::VisualParams * ; ). overridevirtual . Render internal data of this object, for debugging purposes. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ getObject1(). template<class DataTypes > . core::behavior::MechanicalState<DataTypes>* sofa::component::solidmechanics::spring::FrameSpringForceField< DataTypes >::getObject1 ; (; ). inline . ◆ getObject2(). template<class DataTypes > . core::behavior::MechanicalState<DataTypes>* sofa::component::solidmechanics::spring::FrameSpringForceField< DataTypes >::getObject2 ; (; ). inline . ◆ getPotentialEnergy(). template<class DataTypes > . SReal sofa::component::solidmechanics::spring::FrameSpringForceField< DataTypes >::getPotentialEnergy ;",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_frame_spring_force_field.html:27730,clear,clear,27730,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_frame_spring_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_frame_spring_force_field.html,1,['clear'],['clear']
Usability,"a::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addObject(BaseObject::SPtr obj, TypeOfInsertion=TypeOfInsertion::AtEnd)=0sofa::core::objectmodel::BaseNodepure virtual; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseNode()sofa::core::objectmodel::BaseNodeprotected; BaseType typedefsofa::core::objectmodel::Base; Children typedefsofa::core::objectmodel::BaseNode; clearLoggedMessages() constsofa::core::objectmodel::Base; clearObjectContext(BaseObject::SPtr obj)sofa::core::objectmodel::BaseNodeprotected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; detachFromGraph()=0sofa::core::objectmodel::BaseNodepure virtual; f_bboxsofa::core::objectmodel::Base; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Basevirtual; findGlobalField(const std::string &name) constsofa::core::objectmodel::Base; findLink(const std::string &name) constsofa::core::objectmodel::Base; findLinkDest(T *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Baseinline; findLi",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_node-members.html:1573,clear,clearLoggedMessages,1573,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_node-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_node-members.html,1,['clear'],['clearLoggedMessages']
Usability,"a::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup() overridesofa::component::collision::response::contact::StickContactConstraint< TCollisionModel1, TCollisionModel2 >virtual; clearLoggedMessages() constsofa::core::objectmodel::Base; CollisionElement1 typedefsofa::component::collision::response::contact::StickContactConstraint< TCollisionModel1, TCollisionModel2 >; CollisionElement2 typedefsofa::component::collision::response::contact::StickContactConstraint< TCollisionModel1, TCollisionModel2 >; CollisionModel1 typedefsofa::component::collision::response::contact::StickContactConstraint< TCollisionModel1, TCollisionModel2 >; CollisionModel2 typedefsofa::component::collision::response::contact::StickContactConstraint< TCollisionModel1, TCollisionModel2 >; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; Contact()sofa::core::collision::Contactinlineprotected; ContactIdentifier()sofa::component::collision::response::contact::ContactIdentifier; contactssofa::component::collision::response::contact::StickContactConstraint< TCollisionModel1, TCollisionModel2 >protected; countLoggedMessages(sofa::helper::logging::Message::Ty",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_stick_contact_constraint-members.html:2245,clear,clearLoggedMessages,2245,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_stick_contact_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_stick_contact_constraint-members.html,1,['clear'],['clearLoggedMessages']
Usability,"a::core::objectmodel::BaseObjectprotected; BaseProjectiveConstraintSet()sofa::core::behavior::BaseProjectiveConstraintSetinlineprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ProjectiveConstraintSet< DataTypes >inlinestatic; sofa::core::behavior::BaseProjectiveConstraintSet::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearConstraints()sofa::component::constraint::projective::HermiteSplineProjectiveConstraint< DataTypes >; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; computeDerivateHermiteCoefs(const Real u, Real &dH00, Real &dH10, Real &dH01, Real &dH11)sofa::component::constraint::projective::HermiteSplineProjectiveConstraint< DataTypes >; computeHermiteCoefs(const Real u, Real &H00, Real &H10, Real &H01, Real &H11)sofa::component::constraint::projective::HermiteSplineProjectiveConstraint< DataTypes >; Coord typedefsofa::component::constraint::projective::HermiteSplineProjectiveConstraint< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_dx0sofa::component::constraint::projective::HermiteSplineProjectiveConstraint< Da",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_hermite_spline_projective_constraint-members.html:3075,clear,clearLoggedMessages,3075,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_hermite_spline_projective_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_hermite_spline_projective_constraint-members.html,1,['clear'],['clearLoggedMessages']
Usability,"a::core::objectmodel::Baseprotected; m_oldAttributessofa::core::objectmodel::Base; m_vecDatasofa::core::objectmodel::Baseprotected; m_vecLinksofa::core::objectmodel::Baseprotected; MapData typedefsofa::core::objectmodel::Base; MapLink typedefsofa::core::objectmodel::Base; MyClass typedefsofa::core::objectmodel::Base; namesofa::core::objectmodel::Base; notMuted() constsofa::core::objectmodel::Baseinline; parse(BaseObjectDescription *arg) overridesofa::core::objectmodel::BaseObjectvirtual; parseField(const std::string &attribute, const std::string &value)sofa::core::objectmodel::Basevirtual; parseFields(const std::list< std::string > &str)sofa::core::objectmodel::Base; parseFields(const std::map< std::string, std::string * > &str)sofa::core::objectmodel::Basevirtual; pause()sofa::component::sceneutility::PauseAnimationvirtual; PauseAnimation()sofa::component::sceneutility::PauseAnimationprotected; PauseAnimationOnEvent()sofa::component::sceneutility::PauseAnimationOnEventprotected; pausedsofa::component::sceneutility::PauseAnimationOnEvent; Ptr typedefsofa::core::objectmodel::Base; reinit()sofa::core::objectmodel::BaseObjectvirtual; removeData(BaseData *f)sofa::core::objectmodel::Base; removeInNode(BaseNode *)sofa::core::objectmodel::BaseObjectinlinevirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; rootsofa::component::sceneutility::PauseAnimationprotected; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, s",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_pause_animation_on_event-members.html:8470,pause,pausedsofa,8470,api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_pause_animation_on_event-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_pause_animation_on_event-members.html,1,['pause'],['pausedsofa']
Usability,"a::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyTransformation(sofa::type::Matrix4 const &T)sofa::core::loader::MeshLoadervirtual; Base()sofa::core::objectmodel::Baseprotected; BaseLoader()sofa::core::loader::BaseLoaderprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; canLoad() overridesofa::component::io::mesh::StringMeshCreatorinlinevirtual; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearBuffers() finalsofa::core::loader::MeshLoaderprotectedvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; copyMeshToData(helper::io::Mesh &_mesh)sofa::core::loader::MeshLoaderprotected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_createSubelementssofa::core::loader::MeshLoader; d_edgessofa::core::loader::MeshLoader; d_edgesGroupssofa::core::loader::MeshLoader; d_filenamesofa::core::loader::BaseLoader; d_flipNormalssofa::core::loader::MeshLoader; d_hexahedrasofa::core::loader::MeshLoader; d_hexahedraGroupssofa::core::loader::MeshLoader; d_highOrderEdgePositionssofa::core::loader::MeshLoader; d_highOrderHexahedronPositionssofa:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_string_mesh_creator-members.html:4762,clear,clearBuffers,4762,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_string_mesh_creator-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_string_mesh_creator-members.html,1,['clear'],['clearBuffers']
Usability,"a::core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; void doDrawVisual (const sofa::core::visual::VisualParams *vparams) override;  ; void drawTransparent (const sofa::core::visual::VisualParams *vparams) override;  Display transparent surfaces. More...;  ; void push (const sofa::core::visual::VisualParams *vparams);  ; void pop (const sofa::core::visual::VisualParams *vparams);  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format stream. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_transform.html:4320,clear,clearVisual,4320,api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_transform.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_transform.html,2,['clear'],"['clear', 'clearVisual']"
Usability,"a::linearalgebra::BlockFullMatrix< N, T >::bloc ; (; Index ; bi, . Index ; bj . ); const. ◆ clear() [1/2]. template<std::size_t N, typename T > . void sofa::linearalgebra::BlockFullMatrix< N, T >::clear ; (; ). overridevirtual . Reset all values to 0. ; Implements sofa::linearalgebra::BaseMatrix. ◆ clear() [2/2]. template<std::size_t N, typename T > . void sofa::linearalgebra::BlockFullMatrix< N, T >::clear ; (; Index ; i, . Index ; j . ). overridevirtual . Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearCol(). template<std::size_t N, typename T > . void sofa::linearalgebra::BlockFullMatrix< N, T >::clearCol ; (; Index ; j). overridevirtual . Reset the all values in column j to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRow(). template<std::size_t N, typename T > . void sofa::linearalgebra::BlockFullMatrix< N, T >::clearRow ; (; Index ; i). overridevirtual . Reset all the values in row i to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRowCol(). template<std::size_t N, typename T > . void sofa::linearalgebra::BlockFullMatrix< N, T >::clearRowCol ; (; Index ; i). overridevirtual . Reset the value of both row and column i to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ colSize(). template<std::size_t N, typename T > . BlockFullMatrix< N, T >::Index sofa::linearalgebra::BlockFullMatrix< N, T >::colSize ; (; void ; ); const. overridevirtual . Number of columns. ; Implements sofa::linearalgebra::BaseMatrix. ◆ element(). template<std::size_t N, typename T > . SReal sofa::linearalgebra::BlockFullMatrix< N, T >::element ; (; Index ; i, . Index ; j . ); const. overridevirtual . Read the value of the element at row i, column j (using 0-based indices) ; Implements sofa::linearalgebra::BaseMatrix. ◆ getAlignedSubMatrix(). template<std::size_t N, typename T > . template<class B > . void sofa::linearalgebra::BlockFullMatrix< N, T >::getAlignedSubMatrix ; (; Index ; bi, . Index ; bj, . Index ; nrow, . Index ; ncol, . B",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_full_matrix.html:17791,clear,clearRowCol,17791,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_full_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_full_matrix.html,1,['clear'],['clearRowCol']
Usability,"a::linearalgebra::DiagonalMatrix< T >::addEqual ; (; const M & ; m). inlineprotected . this += m . ◆ addTo(). template<typename T > . template<class Dest > . void sofa::linearalgebra::DiagonalMatrix< T >::addTo ; (; Dest * ; dest); const. inline . ◆ clear() [1/3]. template<typename T > . void sofa::linearalgebra::DiagonalMatrix< T >::clear ; (; ). inlineoverridevirtual . Reset all values to 0. ; Implements sofa::linearalgebra::BaseMatrix. ◆ clear() [2/3]. template<typename T > . void sofa::linearalgebra::DiagonalMatrix< T >::clear ; (; Index ; i). inline . ◆ clear() [3/3]. template<typename T > . void sofa::linearalgebra::DiagonalMatrix< T >::clear ; (; Index ; i, . Index ; j . ). inlineoverridevirtual . Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearCol(). template<typename T > . void sofa::linearalgebra::DiagonalMatrix< T >::clearCol ; (; Index ; j). inlineoverridevirtual . Reset the all values in column j to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRow(). template<typename T > . void sofa::linearalgebra::DiagonalMatrix< T >::clearRow ; (; Index ; i). inlineoverridevirtual . Reset all the values in row i to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRowCol(). template<typename T > . void sofa::linearalgebra::DiagonalMatrix< T >::clearRowCol ; (; Index ; i). inlineoverridevirtual . Reset the value of both row and column i to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ colSize(). template<typename T > . Index sofa::linearalgebra::DiagonalMatrix< T >::colSize ; (; void ; ); const. inlineoverridevirtual . Number of columns. ; Implements sofa::linearalgebra::BaseMatrix. ◆ element() [1/2]. template<typename T > . SReal sofa::linearalgebra::DiagonalMatrix< T >::element ; (; Index ; i); const. inline . ◆ element() [2/2]. template<typename T > . SReal sofa::linearalgebra::DiagonalMatrix< T >::element ; (; Index ; i, . Index ; j . ); const. inlineoverridevirtual . Read the value of the element at row i, ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_diagonal_matrix.html:20287,clear,clearRow,20287,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_diagonal_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_diagonal_matrix.html,1,['clear'],['clearRow']
Usability,"a::linearalgebra::DiagonalMatrix< T >::clear ; (; ). inlineoverridevirtual . Reset all values to 0. ; Implements sofa::linearalgebra::BaseMatrix. ◆ clear() [2/3]. template<typename T > . void sofa::linearalgebra::DiagonalMatrix< T >::clear ; (; Index ; i). inline . ◆ clear() [3/3]. template<typename T > . void sofa::linearalgebra::DiagonalMatrix< T >::clear ; (; Index ; i, . Index ; j . ). inlineoverridevirtual . Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearCol(). template<typename T > . void sofa::linearalgebra::DiagonalMatrix< T >::clearCol ; (; Index ; j). inlineoverridevirtual . Reset the all values in column j to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRow(). template<typename T > . void sofa::linearalgebra::DiagonalMatrix< T >::clearRow ; (; Index ; i). inlineoverridevirtual . Reset all the values in row i to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRowCol(). template<typename T > . void sofa::linearalgebra::DiagonalMatrix< T >::clearRowCol ; (; Index ; i). inlineoverridevirtual . Reset the value of both row and column i to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ colSize(). template<typename T > . Index sofa::linearalgebra::DiagonalMatrix< T >::colSize ; (; void ; ); const. inlineoverridevirtual . Number of columns. ; Implements sofa::linearalgebra::BaseMatrix. ◆ element() [1/2]. template<typename T > . SReal sofa::linearalgebra::DiagonalMatrix< T >::element ; (; Index ; i); const. inline . ◆ element() [2/2]. template<typename T > . SReal sofa::linearalgebra::DiagonalMatrix< T >::element ; (; Index ; i, . Index ; j . ); const. inlineoverridevirtual . Read the value of the element at row i, column j (using 0-based indices) ; Implements sofa::linearalgebra::BaseMatrix. ◆ equal(). template<typename T > . template<class M > . void sofa::linearalgebra::DiagonalMatrix< T >::equal ; (; const M & ; m, . bool ; add = false . ). inlineprotected . ◆ expr(). template<typename T > . std::string",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_diagonal_matrix.html:20598,clear,clearRowCol,20598,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_diagonal_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_diagonal_matrix.html,1,['clear'],['clearRowCol']
Usability,"a::linearalgebra::SparseMatrix< T >, sofa::linearalgebra::SparseMatrix< SReal >, sofa::linearalgebra::SparseMatrix< Real >, sofa::linearalgebra::FullMatrix< T >, sofa::linearalgebra::FullMatrix< typename Vector::Real >, sofa::linearalgebra::FullMatrix< Real >, sofa::linearalgebra::DiagonalMatrix< T >, sofa::linearalgebra::DiagonalMatrix< R1 >, sofa::linearalgebra::DiagonalMatrix< R2 >, sofa::linearalgebra::CompressedRowSparseMatrixMechanical< sofa::type::Mat< NL, NC, MReal > >, sofa::linearalgebra::CompressedRowSparseMatrixMechanical< MReal >, sofa::linearalgebra::CompressedRowSparseMatrixMechanical< Real >, sofa::linearalgebra::BTDMatrix< N, T >, sofa::linearalgebra::BlockFullMatrix< N, T >, sofa::linearalgebra::BlockDiagonalMatrix< LC, T >, sofa::linearalgebra::EigenBaseSparseMatrix< TReal >, sofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >, and sofa::linearalgebra::EigenBaseSparseMatrix< typename DataTypes::Real >. ◆ clearCols(). virtual void sofa::linearalgebra::BaseMatrix::clearCols ; (; Index ; imin, . Index ; imax . ). inlinevirtual . Clears all the values in columns imin to imax-1. ; Reimplemented in sofa::linearalgebra::EigenBaseSparseMatrix< TReal >, sofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >, and sofa::linearalgebra::EigenBaseSparseMatrix< typename DataTypes::Real >. ◆ clearRow(). virtual void sofa::linearalgebra::BaseMatrix::clearRow ; (; Index ; i). inlinevirtual . Reset all the values in row i to 0. ; Reimplemented in sofa::linearalgebra::SparseMatrix< T >, sofa::linearalgebra::SparseMatrix< SReal >, sofa::linearalgebra::SparseMatrix< Real >, sofa::linearalgebra::FullMatrix< T >, sofa::linearalgebra::FullMatrix< typename Vector::Real >, sofa::linearalgebra::FullMatrix< Real >, sofa::linearalgebra::EigenBaseSparseMatrix< TReal >, sofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >, sofa::linearalgebra::EigenBaseSparseMatrix< typename DataTypes::Real >, sofa::linearalgebra::DiagonalMatrix< T >, sofa::line",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_matrix.html:36761,clear,clearCols,36761,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_matrix.html,1,['clear'],['clearCols']
Usability,"aTypes >virtual; buildStiffnessMatrix(core::behavior::StiffnessMatrix *) overridesofa::component::solidmechanics::fem::elastic::HexahedronFEMForceFieldAndMass< DataTypes >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ForceField< DataTypes >inlinestatic; sofa::core::behavior::BaseForceField::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkPoissonRatio()sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >protected; checkYoungModulus()sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >protected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; Col_Value typedefsofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >protected; CompressedMatrix typedefsofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >protected; CompressedValue typedefsofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >protected; sofa::computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField::computeBBox(const core::ExecParams *params, bool onlyVisible) overridesofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >virtual; computeElementMass(ElementMass &Mass, const type::fixed_array< Coord, 8 > &nodes, const Index elementIndice, SReal stiffnessFactor=1.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedron_f_e_m_force_field_and_mass-members.html:9399,clear,clearLoggedMessages,9399,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedron_f_e_m_force_field_and_mass-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedron_f_e_m_force_field_and_mass-members.html,1,['clear'],['clearLoggedMessages']
Usability,"ack > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ paused. bool sofa::component::sceneutility::PauseAnimationOnEvent::paused. Constructor details. ◆ PauseAnimationOnEvent(). sofa::component::sceneutility::PauseAnimationOnEvent::PauseAnimationOnEvent ; (; ). protected . ◆ ~PauseAnimationOnEvent(). sofa::component::sceneutility::PauseAnimationOnEvent::~PauseAnimationOnEvent ; (; ). overrideprotected . Function details. ◆ handleEvent(). void sofa::component::sceneutility::PauseAnimationOnEvent::handleEvent ; (; sofa::core::objectmodel::Event * ; ). overridevirtual . Handle an event. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ init(). void sofa::component::sceneutility::PauseAnimationOnEvent::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::component::sceneutility::PauseAnimation. ◆ isPaused(). bool sofa::component::sceneutility::PauseAnimationOnEvent::isPaused ; (; ). overridevirtual . Implements sofa::component::sceneutility::PauseAnimation. ◆ SOFA_CLASS()",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_pause_animation_on_event.html:13474,pause,paused,13474,api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_pause_animation_on_event.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_pause_animation_on_event.html,1,['pause'],['paused']
Usability,"ack(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; broadPhaseDetectionsofa::core::collision::Pipelineprotected; broadPhaseDetectionssofa::core::collision::Pipelineprotected; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeCollisionDetection() overridesofa::simulation::PipelineImplvirtual; computeCollisionReset() overridesofa::simulation::PipelineImplvirtual; computeCollisionResponse() overridesofa::simulation::PipelineImplvirtual; computeCollisions()sofa::core::collision::Pipelineinline; contactManagersofa::core::collision::Pipelineprotected; contactManagerssofa::core::collision::Pipelineprotected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; doCollisionDetection(const sofa::type::vector< core::CollisionModel * > &collisionModels)=0sofa::core::collisi",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_pipeline_impl-members.html:1998,clear,clearLoggedMessages,1998,api/master/sofa/html/classsofa_1_1simulation_1_1_pipeline_impl-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_pipeline_impl-members.html,1,['clear'],['clearLoggedMessages']
Usability,"ack(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; broadPhaseDetectionsofa::core::collision::Pipelineprotected; broadPhaseDetectionssofa::core::collision::Pipelineprotected; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeCollisionDetection()=0sofa::core::collision::Pipelinepure virtual; computeCollisionReset()=0sofa::core::collision::Pipelinepure virtual; computeCollisionResponse()=0sofa::core::collision::Pipelinepure virtual; computeCollisions()sofa::core::collision::Pipelineinline; contactManagersofa::core::collision::Pipelineprotected; contactManagerssofa::core::collision::Pipelineprotected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; doCollisionDetection(const sofa::type::vector< core::CollisionModel * > &collisionModels)=0sofa::core::collision:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_pipeline-members.html:2000,clear,clearLoggedMessages,2000,api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_pipeline-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_pipeline-members.html,1,['clear'],['clearLoggedMessages']
Usability,action; ; SOFA – Heat Transfer: GPU diffusion reaction. /image-manipulation; ; SOFA – Image Manipulation. /image-registration; ; SOFA – Image Registration. /inverse-model-for-soft-robot-control; ; SOFA – Inverse Model for Soft-Robot Control. /lapgym; ; SOFA – LapGym. /mesh-skeletonization; ; SOFA – Mesh Skeletonization. /micro-parallel-robot; ; SOFA – Micro-Parallel Robot. /migribot-robot; ; SOFA – MiGriBot Robot. /model-order-reduction; ; SOFA – Model Order Reduction. /modern-gui-using-glfw; ; SOFA – Modern GUI using GLFW. /modular-fem-mechanics; ; SOFA – Modular FEM Mechanics. /multi-material-tool; ; SOFA – Multi-Material Tool. /multithreading; ; SOFA – Multithreading. /openigtlink; ; SOFA – OpenIGTLink. /pardiso-contact-solver; ; SOFA – Pardiso Contact Solver. /porous-visco-hyperelasticity; ; SOFA – Porous Visco-Hyperelasticity. /pyqt-widget-for-cameras; ; SOFA – PyQt Widget for Cameras. /python-template-scenes; ; SOFA – Python Template Scenes. /reinforcement-learning-framework; ; SOFA – Reinforcement Learning Framework. /reinforcement-learning-with-domain-randomization; ; SOFA – Reinforcement Learning with Domain Randomization. /rendering-hardware-interface-rhi; ; SOFA – Rendering Hardware Interface (RHI). /shape-matching; ; SOFA – Shape Matching. /shell-elastic-fem; ; SOFA – Shell Elastic FEM. /sofa-godot-basic-renderer; ; SOFA – SOFA & Godot – Basic Renderer. /sofa-unity3d-basic-renderer; ; SOFA – SOFA & Unity3D – Basic Renderer. /sofa-unity3d-full-integration; ; SOFA – SOFA & Unity3D – Full Integration. /sofa-unrealengine-5-basic-renderer; ; SOFA – SOFA & UnrealEngine 5 – Basic Renderer. /soft-rigid-hybrid-arms; ; SOFA – Soft-Rigid Hybrid Arms. /softrobots; ; SOFA – Models and Actuators for Soft-Robots. /tearing; ; SOFA – Tearing. /tetrahedral-mesh-tool; ; SOFA – Tetrahedral Mesh Tool. /timoshenko-beam-catheters; ; SOFA – Timoshenko Beam: catheters. /tutorial-probe-tissue-interaction; ; SOFA – Tutorial: probe-tissue interaction. /ultra-sound-rendering; . /emb,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:246135,learn,learning-framework,246135,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['learn'],['learning-framework']
Usability,"addSpringForce(). template<class DataTypes > . void sofa::component::solidmechanics::spring::GearSpringForceField< DataTypes >::addSpringForce ; (; SReal & ; potentialEnergy, . VecDeriv & ; f1, . const VecCoord & ; p1, . const VecDeriv & ; v1, . VecDeriv & ; f2, . const VecCoord & ; p2, . const VecDeriv & ; v2, . int ; i, . Spring & ; spring . ). protected . Accumulate the spring force and compute and store its stiffness. . ◆ buildDampingMatrix(). template<class DataTypes > . void sofa::component::solidmechanics::spring::GearSpringForceField< DataTypes >::buildDampingMatrix ; (; core::behavior::DampingMatrix * ; ). finalvirtual . Reimplemented from sofa::core::behavior::BaseForceField. ◆ bwdInit(). template<class DataTypes > . void sofa::component::solidmechanics::spring::GearSpringForceField< DataTypes >::bwdInit. overridevirtual . Initialization method called at graph creation and modification, during bottom-up traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ clear(). template<class DataTypes > . void sofa::component::solidmechanics::spring::GearSpringForceField< DataTypes >::clear ; (; int ; reserve = 0). inline . ◆ draw(). template<class DataTypes > . void sofa::component::solidmechanics::spring::GearSpringForceField< DataTypes >::draw ; (; const core::visual::VisualParams * ; ). overridevirtual . Render internal data of this object, for debugging purposes. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ getAngleAroundAxis(). template<class DataTypes > . GearSpringForceField<DataTypes>::Real sofa::component::solidmechanics::spring::GearSpringForceField< DataTypes >::getAngleAroundAxis ; (; Coord ; p1, . Coord ; p2, . unsigned int ; axis . ). inline . ◆ getObject1(). template<class DataTypes > . core::behavior::MechanicalState<DataTypes>* sofa::component::solidmechanics::spring::GearSpringForceField< DataTypes >::getObject1 ; (; ). inline . ◆ getObject2(). template<class DataTypes > . core::behavior::MechanicalState<DataTypes>* so",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_gear_spring_force_field.html:29491,clear,clear,29491,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_gear_spring_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_gear_spring_force_field.html,1,['clear'],['clear']
Usability,"addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; apply() overridesofa::component::mechanicalload::Gravityvirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; ContextObject()sofa::core::objectmodel::ContextObjectinlineprotected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_gravitysofa::component::mechanicalload::Gravity; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objec",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_gravity-members.html:1960,clear,clearLoggedMessages,1960,api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_gravity-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_gravity-members.html,1,['clear'],['clearLoggedMessages']
Usability,"addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; BruteForceDetection()=defaultsofa::component::collision::detection::algorithm::BruteForceDetectionprotected; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, sofa::core::objectmodel::BaseContext *context, sofa::core::objectmodel::BaseObjectDescription *arg)sofa::component::collision::detection::algorithm::BruteForceDetectioninlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseDa",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection-members.html:2062,clear,clearLoggedMessages,2062,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection-members.html,1,['clear'],['clearLoggedMessages']
Usability,"ader);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; virtual void clear ();  ; bool load () override;  ; bool canLoad () override;  ; void setVoxelSize (const type::Vec3 vSize);  ; type::Vec3 getVoxelSize () const override;  ; void addBackgroundValue (const int value);  ; int getBackgroundValue (const unsigned int idx=0) const;  ; void addActiveDataValue (const int value);  ; int getActiveDataValue (const unsigned int idx=0) const;  ; void getResolution (Vec3i &res) const;  ; int getDataSize () const override;  ; unsigned char * getData () override;  ; unsigned char * getSegmentID () override;  ; type::vector< unsigned int > getHexaIndicesInGrid () const override;  ; Vec6i getROI () const override;  ; void createSegmentation3DTexture (unsigned char **textureData, int &width, int &height, int &depth) override;  ;  Public Member Functions inherited from sofa::core::loader::VoxelLoader;  SOFA_ABSTRACT_CLASS (VoxelLoader, BaseLoader);  ; void addHexahedron (type::vector< Hexahedron > *pHexahedra, const type::fixed_array< unsigned int, 8 > &p);  ; void addHexahedron (type::vector< Hexahedron > *pHexahedra, unsigned int p0, unsigned int p1, unsigned int p2, unsigned int p3, unsigned int p4, unsigned int p5, unsigned int p6, unsigned int p7);  ;  Public Member Functions inherited from sofa::core::loader::BaseLoader;  SOFA_ABSTRACT_CLASS (BaseLoader, objectmodel::BaseObject);  ; void parse (objectmodel::BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; void setFilename (std::string f);  ; const std::string & getFilename ();  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::Visu",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_voxel_grid_loader.html:4249,clear,clear,4249,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_voxel_grid_loader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_voxel_grid_loader.html,1,['clear'],['clear']
Usability,"ag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; BackgroundSetting()sofa::component::setting::BackgroundSettingprotected; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; colorsofa::component::setting::BackgroundSetting; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; ConfigurationSetting()sofa::core::objectmodel::ConfigurationSettingprotected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_colorsofa::component::setting::BackgroundSetting; d_componentStatesofa::core::objectmodel::Base; d_imagesofa::component::setting::BackgroundSetting; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::o",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_background_setting-members.html:1974,clear,clearLoggedMessages,1974,api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_background_setting-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_background_setting-members.html,1,['clear'],['clearLoggedMessages']
Usability,"ag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseAnimationLoop()sofa::core::behavior::BaseAnimationLoopprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_computeBoundingBoxsofa::core::behavior::BaseAnimationLoop; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::st",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_animation_loop-members.html:1962,clear,clearLoggedMessages,1962,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_animation_loop-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_animation_loop-members.html,1,['clear'],['clearLoggedMessages']
Usability,"agonalMatrix< LC, T >::addB ; (; Index ; i, . Index ; j, . const Block & ; b . ). inline . ◆ bloc() [1/2]. template<std::size_t LC, typename T = SReal> . const Block& sofa::linearalgebra::BlockDiagonalMatrix< LC, T >::bloc ; (; Index ; i); const. inline . ◆ bloc() [2/2]. template<std::size_t LC, typename T = SReal> . const Block& sofa::linearalgebra::BlockDiagonalMatrix< LC, T >::bloc ; (; Index ; i, . Index ; j . ); const. inline . ◆ clear() [1/2]. template<std::size_t LC, typename T = SReal> . void sofa::linearalgebra::BlockDiagonalMatrix< LC, T >::clear ; (; ). inlineoverridevirtual . Reset all values to 0. ; Implements sofa::linearalgebra::BaseMatrix. ◆ clear() [2/2]. template<std::size_t LC, typename T = SReal> . void sofa::linearalgebra::BlockDiagonalMatrix< LC, T >::clear ; (; Index ; i, . Index ; j . ). inlineoverridevirtual . Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearCol(). template<std::size_t LC, typename T = SReal> . void sofa::linearalgebra::BlockDiagonalMatrix< LC, T >::clearCol ; (; Index ; j). inlineoverridevirtual . Reset the all values in column j to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRow(). template<std::size_t LC, typename T = SReal> . void sofa::linearalgebra::BlockDiagonalMatrix< LC, T >::clearRow ; (; Index ; i). inlineoverridevirtual . Reset all the values in row i to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRowCol(). template<std::size_t LC, typename T = SReal> . void sofa::linearalgebra::BlockDiagonalMatrix< LC, T >::clearRowCol ; (; Index ; i). inlineoverridevirtual . Reset the value of both row and column i to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ colBSize(). template<std::size_t LC, typename T = SReal> . Index sofa::linearalgebra::BlockDiagonalMatrix< LC, T >::colBSize ; (; void ; ); const. inline . ◆ colSize(). template<std::size_t LC, typename T = SReal> . Index sofa::linearalgebra::BlockDiagonalMatrix< LC, T >::colSize ; (; void ; ); const. inlin",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_diagonal_matrix.html:19456,clear,clearCol,19456,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_diagonal_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_diagonal_matrix.html,1,['clear'],['clearCol']
Usability,ahedraAroundVertex . m_hexahedraAroundEdge . m_hexahedraAroundQuad ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer. ◆ cleanHexahedronTopologyFromDirty(). void sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer::cleanHexahedronTopologyFromDirty ; (; ). protected . ◆ clear(). void sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer::clear ; (; ). overridevirtual . Procedural creation methods ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer.; Reimplemented in sofa::component::topology::container::dynamic::MultilevelHexahedronSetTopologyContainer. ◆ clearEdgesInHexahedron(). void sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer::clearEdgesInHexahedron ; (; ). protected . ◆ clearHexahedra(). void sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer::clearHexahedra ; (; ). protected . ◆ clearHexahedraAroundEdge(). void sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer::clearHexahedraAroundEdge ; (; ). protected . ◆ clearHexahedraAroundQuad(). void sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer::clearHexahedraAroundQuad ; (; ). protected . ◆ clearHexahedraAroundVertex(). void sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer::clearHexahedraAroundVertex ; (; ). protected . ◆ clearQuadsInHexahedron(). void sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer::clearQuadsInHexahedron ; (; ). protected . ◆ createEdgeSetArray(). void sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer::createEdgeSetArray ; (; ). overrideprotectedvirtual . Creates the EdgeSet array. ; Create the set of edges when needed. ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer. ◆ createEdgesInHexahedronArray(). void sofa::component::,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_topology_container.html:49436,clear,clearHexahedraAroundEdge,49436,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_topology_container.html,1,['clear'],['clearHexahedraAroundEdge']
Usability,ahedron . m_tetrahedraAroundVertex . m_tetrahedraAroundEdge . m_tetrahedraAroundTriangle ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer. ◆ cleanTetrahedronTopologyFromDirty(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::cleanTetrahedronTopologyFromDirty ; (; ). protected . ◆ clear(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::clear ; (; ). overridevirtual . Procedural creation methods ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer. ◆ clearEdgesInTetrahedron(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::clearEdgesInTetrahedron ; (; ). protected . ◆ clearTetrahedra(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::clearTetrahedra ; (; ). protected . ◆ clearTetrahedraAroundEdge(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::clearTetrahedraAroundEdge ; (; ). protected . ◆ clearTetrahedraAroundTriangle(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::clearTetrahedraAroundTriangle ; (; ). protected . ◆ clearTetrahedraAroundVertex(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::clearTetrahedraAroundVertex ; (; ). protected . ◆ clearTrianglesInTetrahedron(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::clearTrianglesInTetrahedron ; (; ). protected . ◆ createEdgeSetArray(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::createEdgeSetArray ; (; ). overrideprotectedvirtual . Creates the EdgeSet array. ; Create the set of edges when needed. ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer. ◆ createEdgesInTetrahedronArray(). void sofa::component::topology::container::dynamic::TetrahedronSetTo,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container.html:50939,clear,clearTetrahedraAroundEdge,50939,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container.html,1,['clear'],['clearTetrahedraAroundEdge']
Usability,"ails. ◆ DefaultMultiMatrixAccessor(). sofa::core::behavior::DefaultMultiMatrixAccessor::DefaultMultiMatrixAccessor ; (; ). ◆ ~DefaultMultiMatrixAccessor(). sofa::core::behavior::DefaultMultiMatrixAccessor::~DefaultMultiMatrixAccessor ; (; ). override . Function details. ◆ addMappedMechanicalState(). void sofa::core::behavior::DefaultMultiMatrixAccessor::addMappedMechanicalState ; (; const sofa::core::behavior::BaseMechanicalState * ; mstate). overridevirtual . Reimplemented from sofa::core::behavior::MultiMatrixAccessor. ◆ addMechanicalMapping(). void sofa::core::behavior::DefaultMultiMatrixAccessor::addMechanicalMapping ; (; sofa::core::BaseMapping * ; mapping). overridevirtual . Reimplemented from sofa::core::behavior::MultiMatrixAccessor. ◆ addMechanicalState(). void sofa::core::behavior::DefaultMultiMatrixAccessor::addMechanicalState ; (; const sofa::core::behavior::BaseMechanicalState * ; mstate). overridevirtual . Reimplemented from sofa::core::behavior::MultiMatrixAccessor. ◆ clear(). void sofa::core::behavior::DefaultMultiMatrixAccessor::clear ; (; ). virtual . ◆ computeGlobalMatrix(). void sofa::core::behavior::DefaultMultiMatrixAccessor::computeGlobalMatrix ; (; ). virtual . Reimplemented in sofa::core::behavior::CRSMultiMatrixAccessor. ◆ createMatrix(). linearalgebra::BaseMatrix * sofa::core::behavior::DefaultMultiMatrixAccessor::createMatrix ; (; const sofa::core::behavior::BaseMechanicalState * ; mstate1, . const sofa::core::behavior::BaseMechanicalState * ; mstate2 . ). static . ◆ createMatrixImpl(). linearalgebra::BaseMatrix * sofa::core::behavior::DefaultMultiMatrixAccessor::createMatrixImpl ; (; const sofa::core::behavior::BaseMechanicalState * ; mstate1, . const sofa::core::behavior::BaseMechanicalState * ; mstate2, . bool ; doPrintInfo . ). static . ◆ getGlobalDimension(). DefaultMultiMatrixAccessor::Index sofa::core::behavior::DefaultMultiMatrixAccessor::getGlobalDimension ; (; ); const. overridevirtual . Implements sofa::core::behavior::MultiMatr",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_default_multi_matrix_accessor.html:4940,clear,clear,4940,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_default_multi_matrix_accessor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_default_multi_matrix_accessor.html,1,['clear'],['clear']
Usability,"ainer. ◆ cleanEdgeTopologyFromDirty(). void sofa::component::topology::container::dynamic::EdgeSetTopologyContainer::cleanEdgeTopologyFromDirty ; (; ). protected . ◆ clear(). void sofa::component::topology::container::dynamic::EdgeSetTopologyContainer::clear ; (; ). overridevirtual . Procedural creation methods ; Reimplemented from sofa::core::topology::BaseMeshTopology.; Reimplemented in sofa::component::topology::container::dynamic::TriangleSetTopologyContainer, sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer, sofa::component::topology::container::dynamic::QuadSetTopologyContainer, sofa::component::topology::container::dynamic::MultilevelHexahedronSetTopologyContainer, and sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer. ◆ clearEdges(). void sofa::component::topology::container::dynamic::EdgeSetTopologyContainer::clearEdges ; (; ). protected . ◆ clearEdgesAroundVertex(). void sofa::component::topology::container::dynamic::EdgeSetTopologyContainer::clearEdgesAroundVertex ; (; ). protected . ◆ createEdgesAroundVertexArray(). void sofa::component::topology::container::dynamic::EdgeSetTopologyContainer::createEdgesAroundVertexArray ; (; ). protectedvirtual . Creates the EdgesAroundVertex array. ; This function is only called if EdgesAroundVertex member is required. EdgesAroundVertex[i] contains the indices of all edges having the ith DOF as one of their ends. . ◆ createEdgeSetArray(). void sofa::component::topology::container::dynamic::EdgeSetTopologyContainer::createEdgeSetArray ; (; ). protectedvirtual . Creates the EdgeSet array. ; This function must be implemented by derived classes to create a list of edges from a set of triangles or tetrahedra ; Reimplemented in sofa::component::topology::container::dynamic::TriangleSetTopologyContainer, sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer, sofa::component::topology::container::dynamic::QuadSetTopologyContainer, and sofa::compo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_container.html:37505,clear,clearEdgesAroundVertex,37505,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_container.html,1,['clear'],['clearEdgesAroundVertex']
Usability,"ainer. ◆ isPointTopologyDirty(). const bool& sofa::component::topology::container::dynamic::PointSetTopologyContainer::isPointTopologyDirty ; (; ); const. inlineprotected . ◆ linkTopologyHandlerToData(). bool sofa::component::topology::container::dynamic::PointSetTopologyContainer::linkTopologyHandlerToData ; (; core::topology::TopologyHandler * ; topologyHandler, . sofa::geometry::ElementType ; elementType . ). overridevirtual . \ brief Generic function to link potential data (related to a type of element) with a topologyHandler ; Reimplemented from sofa::core::topology::TopologyContainer.; Reimplemented in sofa::component::topology::container::dynamic::TriangleSetTopologyContainer, sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer, and sofa::component::topology::container::dynamic::QuadSetTopologyContainer. ◆ removePoint(). void sofa::component::topology::container::dynamic::PointSetTopologyContainer::removePoint ; (; ). remove one DOF in this topology (simply decrement the number of DOF) . ◆ removePoints(). void sofa::component::topology::container::dynamic::PointSetTopologyContainer::removePoints ; (; const Size ; nPoints). remove a number of DOFs in this topology (simply decrease the number of DOF according to this parameter) ; Parameters. Thenumber of point to remove. . ◆ setNbPoints(). void sofa::component::topology::container::dynamic::PointSetTopologyContainer::setNbPoints ; (; Size ; n). overridevirtual . Set the number of vertices in this topology. ; Reimplemented from sofa::core::topology::Topology. ◆ setPointTopologyToDirty(). void sofa::component::topology::container::dynamic::PointSetTopologyContainer::setPointTopologyToDirty ; (; ). protected . Use a specific boolean See alsom_pointTopologyDirty in order to know if topology Data is dirty or not. Set/Get function access to this boolean . ◆ SOFA_CLASS(). sofa::component::topology::container::dynamic::PointSetTopologyContainer::SOFA_CLASS ; (; PointSetTopologyContainer ; , . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_container.html:36498,simpl,simply,36498,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_container.html,1,['simpl'],['simply']
Usability,"ainer::dynamic::HexahedronSetGeometryAlgorithms< DataTypes >::getRestHexahedronVertexCoordinates ; (; const HexaID ; h, . Coord ; pnt[8] . ); const. ◆ getRestPointPositionInHexahedron() [1/2]. template<class DataTypes > . DataTypes::Coord sofa::component::topology::container::dynamic::HexahedronSetGeometryAlgorithms< DataTypes >::getRestPointPositionInHexahedron ; (; const HexaID ; h, . const LocalCoord & ; baryC . ); const. ◆ getRestPointPositionInHexahedron() [2/2]. template<class DataTypes > . DataTypes::Coord sofa::component::topology::container::dynamic::HexahedronSetGeometryAlgorithms< DataTypes >::getRestPointPositionInHexahedron ; (; const HexaID ; h, . const Real ; baryC[3] . ); const. ◆ isHexahedronAffine(). template<class DataTypes > . bool sofa::component::topology::container::dynamic::HexahedronSetGeometryAlgorithms< DataTypes >::isHexahedronAffine ; (; const HexaID ; h, . const VecCoord & ; p, . const Real ; tolerance = (Real)1e-5 . ); const. test if the heaxahedron is a simple affine warp of a cube . ◆ mustComputeBBox(). template<class DataTypes > . bool sofa::component::topology::container::dynamic::HexahedronSetGeometryAlgorithms< DataTypes >::mustComputeBBox. overrideprotectedvirtual . Return true if the visibility parameters are showing the object in any way whatsoever, false otherwise. ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetGeometryAlgorithms< DataTypes >. ◆ SOFA_CLASS(). template<class DataTypes > . sofa::component::topology::container::dynamic::HexahedronSetGeometryAlgorithms< DataTypes >::SOFA_CLASS ; (; SOFA_TEMPLATE(HexahedronSetGeometryAlgorithms< DataTypes >, DataTypes) ; , . SOFA_TEMPLATE(QuadSetGeometryAlgorithms, DataTypes) ;  . ). ◆ writeMSHfile(). template<class DataTypes > . void sofa::component::topology::container::dynamic::HexahedronSetGeometryAlgorithms< DataTypes >::writeMSHfile ; (; const char * ; filename); const. inline . sofacomponenttopologycontainerdynamicHexahedronSetGeometryAlgorithms;",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_geometry_algorithms.html:40919,simpl,simple,40919,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_geometry_algorithms.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_geometry_algorithms.html,1,['simpl'],['simple']
Usability,ainer::dynamic::TetrahedronSetTopologyContainer::cleanTetrahedronTopologyFromDirty ; (; ). protected . ◆ clear(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::clear ; (; ). overridevirtual . Procedural creation methods ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer. ◆ clearEdgesInTetrahedron(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::clearEdgesInTetrahedron ; (; ). protected . ◆ clearTetrahedra(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::clearTetrahedra ; (; ). protected . ◆ clearTetrahedraAroundEdge(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::clearTetrahedraAroundEdge ; (; ). protected . ◆ clearTetrahedraAroundTriangle(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::clearTetrahedraAroundTriangle ; (; ). protected . ◆ clearTetrahedraAroundVertex(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::clearTetrahedraAroundVertex ; (; ). protected . ◆ clearTrianglesInTetrahedron(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::clearTrianglesInTetrahedron ; (; ). protected . ◆ createEdgeSetArray(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::createEdgeSetArray ; (; ). overrideprotectedvirtual . Creates the EdgeSet array. ; Create the set of edges when needed. ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer. ◆ createEdgesInTetrahedronArray(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::createEdgesInTetrahedronArray ; (; ). protectedvirtual . Creates the array of edge indices for each tetrahedron. ; This function is only called if the EdgesInTetrahedrone array is required. m_edgesInTetrahedron[i] contains the 6 indices of t,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container.html:51157,clear,clearTetrahedraAroundVertex,51157,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container.html,1,['clear'],['clearTetrahedraAroundVertex']
Usability,"ainerprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear() overridesofa::component::topology::container::dynamic::TetrahedronSetTopologyContainervirtual; clearBorderElementLists()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; clearEdges()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearEdgesAroundVertex()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearEdgesInTetrahedron()sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainerprotected; clearEdgesInTriangle()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; clearLoggedMessages() constsofa::core::objectmodel::Base; clearTetrahedra()sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainerprotected; clearTetrahedraAroundEdge()sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainerprotected; clearTetrahedraAroundTriangle()sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainerprotected; clearTetrahedraAroundVertex()sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainerprotected; clearTriangles()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; clearTrianglesAroundEdge()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; clearTrianglesAroundVertex()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; clearTrianglesInTetrahedron()sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainerprotected; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseOb",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container-members.html:5364,clear,clearTetrahedraAroundTriangle,5364,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container-members.html,1,['clear'],['clearTetrahedraAroundTriangle']
Usability,"aint::lagrangian::model::SlidingLagrangianConstraint< DataTypes >virtual; PairInteractionConstraint< DataTypes >::buildConstraintMatrix(const ConstraintParams *cParams, MultiMatrixDerivId cId, unsigned int &cIndex) overridesofa::core::behavior::PairInteractionConstraint< DataTypes >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::PairInteractionConstraint< DataTypes >inlinestatic; sofa::core::behavior::BaseInteractionConstraint::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; sofa::computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; sofa::core::behavior::StateAccessor::computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; ConstArea typedefsofa::core::behavior::BaseConstraint; ConstCoord typedefsofa::core::behavior::BaseConstraint; ConstDeriv typedefsofa::core::behavior::BaseConstraint; Coord typedefsofa::component::constraint::lagrangian::model::SlidingLagrangianConstraint< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *p0, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::core::behavior::PairInteractionConstraint< DataTypes >inlinestatic; d_componentStatesofa::core::objectmodel::Base; d_constraintIndexsofa::core::behavior::BaseConstrain",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_sliding_lagrangian_constraint-members.html:2933,clear,clearLoggedMessages,2933,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_sliding_lagrangian_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_sliding_lagrangian_constraint-members.html,1,['clear'],['clearLoggedMessages']
Usability,"aintMatrix(const core::ConstraintParams *cparams, unsigned int &constraintId)sofa::component::constraint::lagrangian::solver::ConstraintSolverImplprotected; buildSystem(const core::ConstraintParams *, MultiVecId res1, MultiVecId res2=MultiVecId::null()) overridesofa::component::constraint::lagrangian::solver::LCPConstraintSolvervirtual; buildSystemTask(const ConstraintParams *, MultiVecId res1, MultiVecId res2)sofa::core::behavior::ConstraintSolverprotected; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup() overridesofa::component::constraint::lagrangian::solver::ConstraintSolverImplvirtual; clearConstraintCorrections()sofa::component::constraint::lagrangian::solver::ConstraintSolverImplprotected; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeResidual(const core::ExecParams *)sofa::core::behavior::ConstraintSolverinlinevirtual; constraintGroupssofa::component::constraint::lagrangian::solver::LCPConstraintSolver; ConstraintSolver()sofa::core::behavior::ConstraintSolverprotected; ConstraintSolverImpl()sofa::component::constraint::lagrangian::solver::ConstraintSolverImpl; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_build_lcpsofa::component::constraint::lagrangian::solver::LCPConstraintSolver; d_componentStatesofa::core::objectmodel::Base; d_computeConstraintForcessofa::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_l_c_p_constraint_solver-members.html:3308,clear,clearConstraintCorrections,3308,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_l_c_p_constraint_solver-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_l_c_p_constraint_solver-members.html,1,['clear'],['clearConstraintCorrections']
Usability,"al . Add to the values of n double elements, starting at element i0. . ◆ add() [3/4]. virtual void sofa::linearalgebra::BaseVector::add ; (; Index ; i0, . Index ; n, . const float * ; src . ). inlinevirtual . Add to the values of n float elements, starting at element i0. . ◆ add() [4/4]. virtual void sofa::linearalgebra::BaseVector::add ; (; Index ; i0, . Index ; n, . const int * ; src . ). inlinevirtual . Add to the values of n int elements, starting at element i0. . ◆ addDefaultImpl(). template<class T > . void sofa::linearalgebra::BaseVector::addDefaultImpl ; (; Index ; i0, . Index ; n, . const T * ; src . ). inlineprotected . ◆ clear() [1/2]. virtual void sofa::linearalgebra::BaseVector::clear ; (; ). pure virtual . Reset all values to 0. ; Implemented in sofa::linearalgebra::FullVector< T >, sofa::linearalgebra::FullVector< Real >, sofa::linearalgebra::FullVector< SReal >, and sofa::linearalgebra::EigenVector< TReal, TBlockSize >. ◆ clear() [2/2]. virtual void sofa::linearalgebra::BaseVector::clear ; (; Index ; i). inlinevirtual . Reset the value of element i to 0. ; Reimplemented in sofa::linearalgebra::EigenVector< TReal, TBlockSize >, sofa::linearalgebra::FullVector< T >, sofa::linearalgebra::FullVector< Real >, and sofa::linearalgebra::FullVector< SReal >. ◆ element(). virtual SReal sofa::linearalgebra::BaseVector::element ; (; Index ; i); const. pure virtual . Read the value of element i. ; Implemented in sofa::linearalgebra::FullVector< T >, sofa::linearalgebra::FullVector< Real >, sofa::linearalgebra::FullVector< SReal >, and sofa::linearalgebra::EigenVector< TReal, TBlockSize >. ◆ elements() [1/3]. virtual const double* sofa::linearalgebra::BaseVector::elements ; (; Index ; i0, . Index ; n, . double * ; src . ); const. inlinevirtual . Get the values of n elements, starting at element i0, into given double buffer, or return the pointer to the data if the in-memory format is compatible. . ◆ elements() [2/3]. virtual const float* sofa::linearalgebra::BaseVe",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_vector.html:5223,clear,clear,5223,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_vector.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_vector.html,1,['clear'],['clear']
Usability,"al >; Data structure storing local matrix components created during the matrix assembly and associated to each component contributing to the global matrix . Public Attributes; std::map< ComponentType *, std::map< PairMechanicalStates, AssemblingMappedMatrixAccumulator< c, Real > * > > mappedLocalMatrix;  The local matrix (value) that has been created and associated to a mapped component (key) More...;  ; std::map< ComponentType *, std::shared_ptr< core::matrixaccumulator::IndexVerificationStrategy > > indexVerificationStrategy;  A verification strategy allowing to verify that the matrix indices provided are valid. More...;  ; std::map< ComponentType *, std::map< PairMechanicalStates, BaseAssemblingMatrixAccumulator< c > * > > componentLocalMatrix;  . Public Member Functions; void clear ();  . Attribute details. ◆ componentLocalMatrix. template<Contribution c, class Real > . std::map< ComponentType*, std::map<PairMechanicalStates, BaseAssemblingMatrixAccumulator<c>* > > sofa::component::linearsystem::LocalMatrixMaps< c, Real >::componentLocalMatrix. ◆ indexVerificationStrategy. template<Contribution c, class Real > . std::map< ComponentType*, std::shared_ptr<core::matrixaccumulator::IndexVerificationStrategy> > sofa::component::linearsystem::LocalMatrixMaps< c, Real >::indexVerificationStrategy. A verification strategy allowing to verify that the matrix indices provided are valid. . ◆ mappedLocalMatrix. template<Contribution c, class Real > . std::map< ComponentType*, std::map<PairMechanicalStates, AssemblingMappedMatrixAccumulator<c, Real>*> > sofa::component::linearsystem::LocalMatrixMaps< c, Real >::mappedLocalMatrix. The local matrix (value) that has been created and associated to a mapped component (key) . Function details. ◆ clear(). template<Contribution c, class Real > . void sofa::component::linearsystem::LocalMatrixMaps< c, Real >::clear ; (; ). inline . sofacomponentlinearsystemLocalMatrixMaps; Generated on Mon Nov 11 2024 02:47:33 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_local_matrix_maps.html:2241,clear,clear,2241,api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_local_matrix_maps.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_local_matrix_maps.html,2,['clear'],['clear']
Usability,"al void add (Index row, Index col, const type::Mat2x2f &_M);  Adding values from a 2x2f matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat6x6d &_M);  Adding values from a 6x6d matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat6x6f &_M);  Adding values from a 6x6f matrix. This function may be overload to obtain better performances. More...;  ; virtual void clear (Index i, Index j);  ; virtual void clearRow (Index i);  Reset all the values in row i to 0. More...;  ; virtual void clearRows (Index imin, Index imax);  Clears the value of rows imin to imax-1. More...;  ; virtual void clearCol (Index j);  Reset the all values in column j to 0. More...;  ; virtual void clearCols (Index imin, Index imax);  Clears all the values in columns imin to imax-1. More...;  ; virtual void clearRowsCols (Index imin, Index imax);  Clears all the values in rows imin to imax-1 and columns imin to imax-1. More...;  ; virtual void compress ();  ; virtual void opMulV (linearalgebra::BaseVector *result, const linearalgebra::BaseVector *v) const;  Multiply the matrix by vector v and put the result in vector result. More...;  ; virtual void opMulV (float *result, const float *v) const;  Multiply the matrix by float vector v and put the result in vector result. More...;  ; virtual void opMulV (double *result, const double *v) const;  Multiply the matrix by double vector v and put the result in vector result. More...;  ; virtual void opPMulV (linearalgebra::BaseVector *result, const linearalgebra::BaseVector *v) const;  Multiply the matrix by vector v and add the result in vector result. More...;  ; virtual void opPMulV (float *result, const float *v) const;  Multiply the matrix by float vector v and add the result in vector result. More...;  ; virtual void opPMulV (double *result, const double *v) const;  Multiply the matrix by",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_apply_constraint_compat.html:3527,clear,clearRowsCols,3527,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_apply_constraint_compat.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_apply_constraint_compat.html,1,['clear'],['clearRowsCols']
Usability,"al, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bind()sofa::gl::component::shader::OglTexture; bwdDraw(core::visual::VisualParams *) overridesofa::gl::component::shader::OglTexturevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; cubemapFilenameNegXsofa::gl::component::shader::OglTextureprotected; cubemapFilenameNegYsofa::gl::component::shader::OglTextureprotected; cubemapFilenameNegZsofa::gl::component::shader::OglTextureprotected; cubemapFilenamePosXsofa::gl::component::shader::OglTextureprotected; cubemapFilenamePosYsofa::gl::component::shader::OglTextureprotected; cubemapFilenamePosZsofa::gl::component::shader::OglTextureprotected; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; doInitVisual(const core::visual::VisualPa",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_texture-members.html:2543,clear,clearVisual,2543,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_texture-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_texture-members.html,2,['clear'],['clearVisual']
Usability,"al; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; apply()=0sofa::core::objectmodel::ContextObjectpure virtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; ContextObject()sofa::core::objectmodel::ContextObjectinlineprotected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, cons",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_context_object-members.html:1952,clear,clearLoggedMessages,1952,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_context_object-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_context_object-members.html,1,['clear'],['clearLoggedMessages']
Usability,"al; blocElements(Index i, Index j, T *buffer) constsofa::linearalgebra::BaseMatrixinline; blocGet(Index i, Index j) constsofa::linearalgebra::BaseMatrixinlinevirtual; blocGetW(Index i, Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; blocSet(Index i, Index j, const T *buffer)sofa::linearalgebra::BaseMatrixinline; bRowBegin(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowEnd(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowRange(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsBegin() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsEnd() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowSize() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsRange() constsofa::linearalgebra::BaseMatrixinlinevirtual; category enum valuesofa::linearalgebra::SparseMatrix< T >; clear(Index i, Index j) overridesofa::linearalgebra::SparseMatrix< T >inlinevirtual; clear() overridesofa::linearalgebra::SparseMatrix< T >inlinevirtual; clearCol(Index j) overridesofa::linearalgebra::SparseMatrix< T >inlinevirtual; clearCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRow(Index i) overridesofa::linearalgebra::SparseMatrix< T >inlinevirtual; clearRowCol(Index i) overridesofa::linearalgebra::SparseMatrix< T >inlinevirtual; clearRows(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowsCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; cols(void) constsofa::linearalgebra::BaseMatrixinline; colSize(void) const overridesofa::linearalgebra::SparseMatrix< T >inlinevirtual; compress()sofa::linearalgebra::BaseMatrixvirtual; createBlockAccessor(Index row, Index col, void *internalPtr=nullptr)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockAccessor(Index row, Index col, Index internalData)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockConstAccessor(Index row, Index col, void *internalPtr=nullptr) constsofa::linearalgebra::BaseMatrixinl",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_sparse_matrix-members.html:6542,clear,clearCol,6542,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_sparse_matrix-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_sparse_matrix-members.html,1,['clear'],['clearCol']
Usability,"al; blocSet(Index i, Index j, const T *buffer)sofa::linearalgebra::BaseMatrixinline; bRowBegin(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowEnd(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowRange(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsBegin() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsEnd() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowSize() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsRange() constsofa::linearalgebra::BaseMatrixinlinevirtual; choleskysofa::linearalgebra::EigenBaseSparseMatrix< TReal >protected; choleskyDecompose()sofa::linearalgebra::EigenBaseSparseMatrix< TReal >inline; choleskySolve(VectorEigen &x, const VectorEigen &b) constsofa::linearalgebra::EigenBaseSparseMatrix< TReal >inline; clear() overridesofa::linearalgebra::EigenBaseSparseMatrix< TReal >inlinevirtual; sofa::linearalgebra::BaseMatrix::clear(Index i, Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; clearCol(Index col) overridesofa::linearalgebra::EigenBaseSparseMatrix< TReal >inlinevirtual; clearCols(Index imin, Index imax) overridesofa::linearalgebra::EigenBaseSparseMatrix< TReal >inlinevirtual; clearRow(Index i) overridesofa::linearalgebra::EigenBaseSparseMatrix< TReal >inlinevirtual; clearRowCol(Index i) overridesofa::linearalgebra::EigenBaseSparseMatrix< TReal >inlinevirtual; clearRows(Index imin, Index imax) overridesofa::linearalgebra::EigenBaseSparseMatrix< TReal >inlinevirtual; clearRowsCols(Index imin, Index imax) overridesofa::linearalgebra::EigenBaseSparseMatrix< TReal >inlinevirtual; coeffRef(Index i, Index j)sofa::linearalgebra::EigenBaseSparseMatrix< TReal >inline; cols(void) constsofa::linearalgebra::BaseMatrixinline; colSize(void) const overridesofa::linearalgebra::EigenBaseSparseMatrix< TReal >inlinevirtual; compress() overridesofa::linearalgebra::EigenBaseSparseMatrix< TReal >inlinevirtual; CompressedMatrix typedefsofa::linearalgebra::EigenBaseSparseMatrix< TReal >; ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_base_sparse_matrix-members.html:5643,clear,clearCol,5643,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_base_sparse_matrix-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_base_sparse_matrix-members.html,1,['clear'],['clearCol']
Usability,"al; btempsofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSMechanicalPolicy >; category enum valuesofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >; check_matrix()sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSMechanicalPolicy >inline; check_matrix(Index nzmax, Index m, Index n, Index *a_p, Index *a_i, Block *a_x)sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSMechanicalPolicy >inlinestatic; clear(Index i, Index j) overridesofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >inline; clear() overridesofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >inlinevirtual; sofa::linearalgebra::BaseMatrix::clear(Index i, Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; ClearByZerossofa::linearalgebra::CRSDefaultPolicystatic; clearCol(Index j) overridesofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >inline; sofa::linearalgebra::BaseMatrix::clearCol(Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; clearColBlock(Index j)sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSMechanicalPolicy >inline; clearCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRow(Index i) overridesofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >inline; sofa::linearalgebra::BaseMatrix::clearRow(Index i)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowBlock(Index i)sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSMechanicalPolicy >inline; clearRowCol(Index i) overridesofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >inline; sofa::linearalgebra::BaseMatrix::clearRowCol(Index i)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowColBlock(Index i)sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSMechanicalPolicy >inline; clearRows(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowsCols(Index imi",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical-members.html:14510,clear,clearCol,14510,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical-members.html,1,['clear'],['clearCol']
Usability,al; checkTopology() const overridesofa::component::topology::container::dynamic::HexahedronSetTopologyContainervirtual; cleanEdgeTopologyFromDirty()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; cleanHexahedronTopologyFromDirty()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; cleanPointTopologyFromDirty()sofa::component::topology::container::dynamic::PointSetTopologyContainerprotected; cleanQuadTopologyFromDirty()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear() overridesofa::component::topology::container::dynamic::HexahedronSetTopologyContainervirtual; clearEdges()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearEdgesAroundVertex()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearEdgesInHexahedron()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearEdgesInQuad()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; clearHexahedra()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearHexahedraAroundEdge()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearHexahedraAroundQuad()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearHexahedraAroundVertex()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearLoggedMessages() constsofa::core::objectmodel::Base; clearQuads()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; clearQuadsAroundEdge()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; clearQuadsAroundVertex()sofa::component::topology::container::dynamic::QuadSetTopologyContainerp,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_container-members.html:4581,clear,clearEdgesInHexahedron,4581,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_container-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_container-members.html,2,['clear'],['clearEdgesInHexahedron']
Usability,"alMappedMatrix< c, TBlockType >, sofa::component::linearsystem::SparsityPatternLocalMappedMatrix< c, TBlockType >, and sofa::component::linearsystem::ConstantLocalMatrix< linearalgebra::CompressedRowSparseMatrix< TBlockType >, c >. ◆ add() [6/6]. template<sofa::core::matrixaccumulator::Contribution c, class TStrategy > . void sofa::component::linearsystem::AssemblingMatrixAccumulator< c, TStrategy >::add ; (; const core::matrixaccumulator::no_check_policy & ; , . sofa::SignedIndex ; row, . sofa::SignedIndex ; col, . float ; value . ). overrideprotectedvirtual . Reimplemented from sofa::core::MatrixAccumulatorIndexChecker< BaseAssemblingMatrixAccumulator< c >, sofa::core::matrixaccumulator::NoIndexVerification >.; Reimplemented in sofa::component::linearsystem::ConstantLocalMappedMatrix< c, TBlockType >, sofa::component::linearsystem::SparsityPatternLocalMappedMatrix< c, TBlockType >, and sofa::component::linearsystem::ConstantLocalMatrix< linearalgebra::CompressedRowSparseMatrix< TBlockType >, c >. ◆ clear(). template<sofa::core::matrixaccumulator::Contribution c, class TStrategy > . void sofa::component::linearsystem::AssemblingMatrixAccumulator< c, TStrategy >::clear. override . ◆ GetCustomTemplateName(). template<core::matrixaccumulator::Contribution c, class TStrategy = sofa::core::matrixaccumulator::NoIndexVerification> . static std::string sofa::component::linearsystem::AssemblingMatrixAccumulator< c, TStrategy >::GetCustomTemplateName ; (; ). inlinestatic . ◆ SOFA_CLASS(). template<core::matrixaccumulator::Contribution c, class TStrategy = sofa::core::matrixaccumulator::NoIndexVerification> . sofa::component::linearsystem::AssemblingMatrixAccumulator< c, TStrategy >::SOFA_CLASS ; (; AssemblingMatrixAccumulator< c, TStrategy > ; , . SOFA_TEMPLATE2(sofa::core::MatrixAccumulatorIndexChecker, BaseAssemblingMatrixAccumulator< c >, TStrategy) ;  . ). sofacomponentlinearsystemAssemblingMatrixAccumulator; Generated on Mon Nov 11 2024 02:47:32 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_assembling_matrix_accumulator.html:9711,clear,clear,9711,api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_assembling_matrix_accumulator.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_assembling_matrix_accumulator.html,2,['clear'],['clear']
Usability,"algebra::BTDMatrix< N, T >::add ; (; Index ; row, . Index ; col, . const type::Mat< BSIZE, BSIZE, Real > & ; v . ). Accumulation specialized on contributions of the same size than the blocks. . ◆ asub() [1/2]. template<std::size_t N, typename T > . BTDMatrix< N, T >::Block & sofa::linearalgebra::BTDMatrix< N, T >::asub ; (; Index ; bi, . Index ; bj, . Index ; , . Index ;  . ). ◆ asub() [2/2]. template<std::size_t N, typename T > . const BTDMatrix< N, T >::Block & sofa::linearalgebra::BTDMatrix< N, T >::asub ; (; Index ; bi, . Index ; bj, . Index ; , . Index ;  . ); const. ◆ bloc() [1/2]. template<std::size_t N, typename T > . BTDMatrix< N, T >::Block & sofa::linearalgebra::BTDMatrix< N, T >::bloc ; (; Index ; bi, . Index ; bj . ). ◆ bloc() [2/2]. template<std::size_t N, typename T > . const BTDMatrix< N, T >::Block & sofa::linearalgebra::BTDMatrix< N, T >::bloc ; (; Index ; bi, . Index ; bj . ); const. ◆ clear() [1/2]. template<std::size_t N, typename T > . void sofa::linearalgebra::BTDMatrix< N, T >::clear ; (; ). overridevirtual . Reset all values to 0. ; Implements sofa::linearalgebra::BaseMatrix. ◆ clear() [2/2]. template<std::size_t N, typename T > . void sofa::linearalgebra::BTDMatrix< N, T >::clear ; (; Index ; i, . Index ; j . ). overridevirtual . Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearCol(). template<std::size_t N, typename T > . void sofa::linearalgebra::BTDMatrix< N, T >::clearCol ; (; Index ; j). overridevirtual . Reset the all values in column j to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRow(). template<std::size_t N, typename T > . void sofa::linearalgebra::BTDMatrix< N, T >::clearRow ; (; Index ; i). overridevirtual . Reset all the values in row i to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRowCol(). template<std::size_t N, typename T > . void sofa::linearalgebra::BTDMatrix< N, T >::clearRowCol ; (; Index ; i). overridevirtual . Reset the value of both row and column i to 0. ; Reimpleme",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_b_t_d_matrix.html:17199,clear,clear,17199,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_b_t_d_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_b_t_d_matrix.html,1,['clear'],['clear']
Usability,"algebra::BaseMatrixinlinevirtual; blocElements(Index i, Index j, T *buffer) constsofa::linearalgebra::BaseMatrixinline; blocGet(Index i, Index j) constsofa::linearalgebra::BaseMatrixinlinevirtual; blocGetW(Index i, Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; blocSet(Index i, Index j, const T *buffer)sofa::linearalgebra::BaseMatrixinline; bRowBegin(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowEnd(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowRange(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsBegin() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsEnd() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowSize() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsRange() constsofa::linearalgebra::BaseMatrixinlinevirtual; clear() overridesofa::core::behavior::AddToMatrixCompatMatrix< c >inlinevirtual; sofa::linearalgebra::BaseMatrix::clear(Index i, Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; clearCol(Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; clearCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRow(Index i)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowCol(Index i)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRows(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowsCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; cols(void) constsofa::linearalgebra::BaseMatrixinline; colSize() const overridesofa::core::behavior::AddToMatrixCompatMatrix< c >inlinevirtual; compatibilityMessagesofa::core::behavior::AddToMatrixCompatMatrix< c >static; componentsofa::core::behavior::AddToMatrixCompatMatrix< c >; compress()sofa::linearalgebra::BaseMatrixvirtual; createBlockAccessor(Index row, Index col, void *internalPtr=nullptr)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockAccessor(Index row, Index col, Index internalData)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockCon",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_add_to_matrix_compat_matrix-members.html:5165,clear,clearCol,5165,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_add_to_matrix_compat_matrix-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_add_to_matrix_compat_matrix-members.html,1,['clear'],['clearCol']
Usability,"algebra::BaseVector * ; , . const sofa::core::behavior::MultiMatrixAccessor * ;  . ). overridevirtual . Project the global Mechanical Vector to constrained space using offset parameter. ; Reimplemented from sofa::core::behavior::BaseProjectiveConstraintSet. ◆ applyConstraint() [3/3]. template<class DataTypes > . void sofa::component::constraint::projective::PartialLinearMovementProjectiveConstraint< DataTypes >::applyConstraint ; (; sofa::core::behavior::ZeroDirichletCondition * ; zeroDirichletCondition). overridevirtual . Project the global matrix to constrained space by using the ZeroDirichletCondition interface It allows to define what rows and columns to discard for the projection. ; Reimplemented from sofa::core::behavior::BaseProjectiveConstraintSet. ◆ clearIndices(). template<class DataTypes > . void sofa::component::constraint::projective::PartialLinearMovementProjectiveConstraint< DataTypes >::clearIndices. methods to add/remove some indices, keyTimes, keyMovement . ◆ clearKeyMovements(). template<class DataTypes > . void sofa::component::constraint::projective::PartialLinearMovementProjectiveConstraint< DataTypes >::clearKeyMovements. ◆ draw(). template<class DataTypes > . void sofa::component::constraint::projective::PartialLinearMovementProjectiveConstraint< DataTypes >::draw ; (; const core::visual::VisualParams * ; ). overridevirtual . Render internal data of this object, for debugging purposes. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ init(). template<class DataTypes > . void sofa::component::constraint::projective::PartialLinearMovementProjectiveConstraint< DataTypes >::init ; (; void ; ). overridevirtual . – Constraint interface ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ interpolatePosition() [1/4]. template<class TDataTypes > . template<class MyCoord > . void sofa::component::constraint::projective::PartialLinearMovementProjectiveConstraint< TDataTypes >::interpolatePosition ; (; Real ; cT, . typename std::enable_",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_partial_linear_movement_projective_constraint.html:33977,clear,clearKeyMovements,33977,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_partial_linear_movement_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_partial_linear_movement_projective_constraint.html,1,['clear'],['clearKeyMovements']
Usability,"alidator (ValidatorFn fn);  ; DestType * get () const;  ; void reset ();  ; void set (DestPtr v);  ; void set (DestPtr v, const std::string &path);  ; void setPath (const std::string &path);  ;  operator DestType * () const;  Convenient operators to make a SingleLink appear as a regular pointer. More...;  ; DestType * operator-> () const;  ; DestType & operator* () const;  ; DestPtr operator= (DestPtr v);  ;  Public Member Functions inherited from sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags >;  TLink ();  ;  TLink (const InitLink< OwnerType > &init);  ;  ~TLink () override;  ; size_t size () const;  ; bool empty () const;  ; const Container & getValue () const;  ; const_iterator begin () const;  ; const_iterator end () const;  ; const_reverse_iterator rbegin () const;  ; const_reverse_iterator rend () const;  ; void clear ();  ; bool addBegin (DestPtr v);  ; bool add (DestPtr v);  ; bool add (DestPtr v, const std::string &path);  ; bool addPath (const std::string &path);  ; bool remove (DestPtr v);  ; bool removeAt (std::size_t index);  ; bool removePath (const std::string &path);  ; const BaseClass * getDestClass () const override;  ; const BaseClass * getOwnerClass () const override;  ; size_t getSize () const override;  ; sofa::core::objectmodel::Base * getOwnerBase () const override;  ; void setOwner (OwnerType *owner);  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseLink;  BaseLink (LinkFlags flags);  ;  BaseLink (const BaseInitLink &init, LinkFlags flags);  ; virtual ~BaseLink ();  ; const std::string & getName () const;  ; void setName (const std::string &name);  ; const std::string & getHelp () const;  Get help message. More...;  ; void setHelp (const std::string &val);  Set help message. More...;  ; void setFlag (LinkFlagsEnum flag, bool b);  Set one of the flags. More...;  ; bool getFlag (LinkFlagsEnum flag) const;  Get one flag. More...;  ; bool isMultiLink () const;  ; bool isStrongLink () const;  ; bool isDoubleL",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_node_single.html:2093,clear,clear,2093,api/master/sofa/html/classsofa_1_1simulation_1_1_node_single.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_node_single.html,1,['clear'],['clear']
Usability,"alizer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseConstraint()sofa::core::behavior::BaseConstraintinlineprotected; BaseConstraintSet()sofa::core::behavior::BaseConstraintSetprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; buildConstraintMatrix(const ConstraintParams *cParams, MultiMatrixDerivId cId, unsigned int &cIndex)=0sofa::core::behavior::BaseConstraintSetpure virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; ConstArea typedefsofa::core::behavior::BaseConstraint; ConstCoord typedefsofa::core::behavior::BaseConstraint; ConstDeriv typedefsofa::core::behavior::BaseConstraint; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_constraintIndexsofa::core::behavior::BaseConstraintSet; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_constraint-members.html:2180,clear,clearLoggedMessages,2180,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_constraint-members.html,1,['clear'],['clearLoggedMessages']
Usability,"alue(). virtual void sofa::defaulttype::AbstractTypeInfo::setIntegerValue ; (; void * ; data, . Index ; index, . long long ; value . ); const. pure virtual . Set the value at index of data from an integer value. ; Implemented in sofa::defaulttype::DataTypeInfoDynamicWrapper< Info >, sofa::defaulttype::NoTypeInfo, and sofa::defaulttype::NameOnlyTypeInfo. ◆ setScalarValue(). virtual void sofa::defaulttype::AbstractTypeInfo::setScalarValue ; (; void * ; data, . Index ; index, . double ; value . ); const. pure virtual . Set the value at index of data from a scalar value. ; Implemented in sofa::defaulttype::DataTypeInfoDynamicWrapper< Info >, sofa::defaulttype::NoTypeInfo, and sofa::defaulttype::NameOnlyTypeInfo. ◆ setSize(). virtual bool sofa::defaulttype::AbstractTypeInfo::setSize ; (; void * ; data, . sofa::Size ; size . ); const. pure virtual . Resize data to size elements, if relevant. ; But resizing is not always relevant, for example:; nothing happens if FixedSize() is true;; sets can't be resized; they are cleared instead;; nothing happens for vectors containing resizable values (i.e. when BaseType()::FixedSize() is false), because of the ""single index"" abstraction;. Returns true iff the data was resizable ; Implemented in sofa::defaulttype::DataTypeInfoDynamicWrapper< Info >, sofa::defaulttype::NoTypeInfo, and sofa::defaulttype::NameOnlyTypeInfo. ◆ setTextValue(). virtual void sofa::defaulttype::AbstractTypeInfo::setTextValue ; (; void * ; data, . Index ; index, . const std::string & ; value . ); const. pure virtual . Set the value at index of data from a string value. ; Implemented in sofa::defaulttype::DataTypeInfoDynamicWrapper< Info >, sofa::defaulttype::NoTypeInfo, and sofa::defaulttype::NameOnlyTypeInfo. ◆ SimpleCopy(). virtual bool sofa::defaulttype::AbstractTypeInfo::SimpleCopy ; (; ); const. pure virtual . True iff copying the data can be done with a memcpy(). ; Implemented in sofa::defaulttype::NoTypeInfo, sofa::defaulttype::NameOnlyTypeInfo, and sofa:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1defaulttype_1_1_abstract_type_info.html:11701,clear,cleared,11701,api/master/sofa/html/classsofa_1_1defaulttype_1_1_abstract_type_info.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1defaulttype_1_1_abstract_type_info.html,1,['clear'],['cleared']
Usability,"alues in column j to 0. ; Reimplemented in sofa::linearalgebra::SparseMatrix< T >, sofa::linearalgebra::SparseMatrix< SReal >, sofa::linearalgebra::SparseMatrix< Real >, sofa::linearalgebra::FullMatrix< T >, sofa::linearalgebra::FullMatrix< typename Vector::Real >, sofa::linearalgebra::FullMatrix< Real >, sofa::linearalgebra::DiagonalMatrix< T >, sofa::linearalgebra::DiagonalMatrix< R1 >, sofa::linearalgebra::DiagonalMatrix< R2 >, sofa::linearalgebra::CompressedRowSparseMatrixMechanical< sofa::type::Mat< NL, NC, MReal > >, sofa::linearalgebra::CompressedRowSparseMatrixMechanical< MReal >, sofa::linearalgebra::CompressedRowSparseMatrixMechanical< Real >, sofa::linearalgebra::BTDMatrix< N, T >, sofa::linearalgebra::BlockFullMatrix< N, T >, sofa::linearalgebra::BlockDiagonalMatrix< LC, T >, sofa::linearalgebra::EigenBaseSparseMatrix< TReal >, sofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >, and sofa::linearalgebra::EigenBaseSparseMatrix< typename DataTypes::Real >. ◆ clearCols(). virtual void sofa::linearalgebra::BaseMatrix::clearCols ; (; Index ; imin, . Index ; imax . ). inlinevirtual . Clears all the values in columns imin to imax-1. ; Reimplemented in sofa::linearalgebra::EigenBaseSparseMatrix< TReal >, sofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >, and sofa::linearalgebra::EigenBaseSparseMatrix< typename DataTypes::Real >. ◆ clearRow(). virtual void sofa::linearalgebra::BaseMatrix::clearRow ; (; Index ; i). inlinevirtual . Reset all the values in row i to 0. ; Reimplemented in sofa::linearalgebra::SparseMatrix< T >, sofa::linearalgebra::SparseMatrix< SReal >, sofa::linearalgebra::SparseMatrix< Real >, sofa::linearalgebra::FullMatrix< T >, sofa::linearalgebra::FullMatrix< typename Vector::Real >, sofa::linearalgebra::FullMatrix< Real >, sofa::linearalgebra::EigenBaseSparseMatrix< TReal >, sofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >, sofa::linearalgebra::EigenBaseSparseMatrix< typename DataTypes::Real >, sofa::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_matrix.html:36702,clear,clearCols,36702,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_matrix.html,1,['clear'],['clearCols']
Usability,"ame real > . constexpr sofa::Size sofa::defaulttype::RigidDeriv< 2, real >::total_size = 3. staticconstexpr . Compile-time constant specifying the number of scalars within this vector (equivalent to the size() method) . Constructor details. ◆ RigidDeriv() [1/4]. template<typename real > . constexpr sofa::defaulttype::RigidDeriv< 2, real >::RigidDeriv ; (; type::NoInit ; ). inlineexplicitconstexpr . ◆ RigidDeriv() [2/4]. template<typename real > . constexpr sofa::defaulttype::RigidDeriv< 2, real >::RigidDeriv ; (; ). inlineconstexpr . ◆ RigidDeriv() [3/4]. template<typename real > . template<typename real2 > . constexpr sofa::defaulttype::RigidDeriv< 2, real >::RigidDeriv ; (; const type::Vec< 2, real2 > & ; velCenter, . const real2 & ; velOrient . ). inlineconstexpr . ◆ RigidDeriv() [4/4]. template<typename real > . template<typename real2 > . constexpr sofa::defaulttype::RigidDeriv< 2, real >::RigidDeriv ; (; const type::Vec< 3, real2 > & ; v). inlineconstexpr . Function details. ◆ clear(). template<typename real > . constexpr void sofa::defaulttype::RigidDeriv< 2, real >::clear ; (; ). inlineconstexpr . ◆ getAngular() [1/2]. template<typename real > . constexpr Real& sofa::defaulttype::RigidDeriv< 2, real >::getAngular ; (; ). inlineconstexpr . ◆ getAngular() [2/2]. template<typename real > . constexpr const Real& sofa::defaulttype::RigidDeriv< 2, real >::getAngular ; (; ); const. inlineconstexpr . ◆ getLinear() [1/2]. template<typename real > . constexpr Vec2& sofa::defaulttype::RigidDeriv< 2, real >::getLinear ; (; ). inlineconstexpr . ◆ getLinear() [2/2]. template<typename real > . constexpr const Vec2& sofa::defaulttype::RigidDeriv< 2, real >::getLinear ; (; ); const. inlineconstexpr . ◆ getVAll(). template<typename real > . constexpr VecAll sofa::defaulttype::RigidDeriv< 2, real >::getVAll ; (; ); const. inlineconstexpr . ◆ getVCenter() [1/2]. template<typename real > . constexpr Vec2& sofa::defaulttype::RigidDeriv< 2, real >::getVCenter ; (; ). inlineconstexp",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1defaulttype_1_1_rigid_deriv_3_012_00_01real_01_4.html:4628,clear,clear,4628,api/master/sofa/html/classsofa_1_1defaulttype_1_1_rigid_deriv_3_012_00_01real_01_4.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1defaulttype_1_1_rigid_deriv_3_012_00_01real_01_4.html,1,['clear'],['clear']
Usability,"ame;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(LinearVelocityProjectiveConstraint, TDataTypes), SOFA_TEMPLATE(core::behavior::ProjectiveConstraintSet, TDataTypes));  ; void clearIndices ();  methods to add/remove some indices, keyTimes, keyVelocity More...;  ; void addIndex (Index index);  ; void removeIndex (Index index);  ; void clearKeyVelocities ();  ; void addKeyVelocity (Real time, Deriv movement);  ; void init () override;  – Constraint interface More...;  ; void reset () override;  Reset to initial state. More...;  ; void projectResponse (const core::MechanicalParams *mparams, DataVecDeriv &resData) override;  ; void projectVelocity (const core::MechanicalParams *mparams, DataVecDeriv &vData) override;  ; void projectPosition (const core::MechanicalParams *mparams, DataVecCoord &xData) override;  ; void projectJacobianMatrix (const core::MechanicalParams *mparams, DataMatrixDeriv &cData) override;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ;  Public Member Functions inherited from sofa::core::behavior::ProjectiveConstraintSet< TDataTypes >;  SOFA_CLASS2 (SOFA_TEMPLATE(ProjectiveConstraintSet, TDataTypes), BaseProjectiveConstraintSet, SOFA_TEMPLATE(SingleStateAccessor, TDataTypes));  ; virtual bool isActive () const;  if false, the const",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_linear_velocity_projective_constraint.html:3419,clear,clearKeyVelocities,3419,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_linear_velocity_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_linear_velocity_projective_constraint.html,1,['clear'],['clearKeyVelocities']
Usability,"amework for multi-physics simuation. Public Attributes |; Static Public Attributes |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Signals |; Public Slots |; List of all members . sofa::gui::qt::viewer::qt::QtViewer Class Reference . #include <QtViewer.h>. Inheritance diagram for sofa::gui::qt::viewer::qt::QtViewer:. [legend]. Public Attributes; bool _mouseInteractorTranslationMode;  ; bool _mouseInteractorRotationMode;  ; int _translationMode;  ; Quat< SReal > _mouseInteractorCurrentQuat;  ; Vec3 _mouseInteractorAbsolutePosition;  ; Trackball _mouseInteractorTrackball;  . Static Public Attributes; static const std::string VIEW_FILE_EXTENSION = ""view"";  TODO: standardize .view file parameters. More...;  ; static Quat< SReal > _mouseInteractorNewQuat;  ; static bool _mouseTrans = false;  ; static bool _mouseRotate = false;  . Public Member Functions;  QtViewer (QWidget *parent, const char *name="""");  ;  ~QtViewer () override;  ; QWidget * getQWidget () override;  ; bool ready () override;  ; void wait () override;  ask the viewer to resume its activity More...;  ; sofa::simulation::Node * getScene () override;  ; int getWidth () override;  ; int getHeight () override;  ; void UpdateOBJ (void);  ; void moveRayPickInteractor (int eventX, int eventY) override;  RayCasting PickHandler. More...;  ; void ApplyMouseInteractorTransformation (int x, int y);  ; QString helpString () const override;  ; void screenshot (const std::string &filename, int compression_level=-1) override;  ;  Public Member Functions inherited from sofa::gui::qt::viewer::CustomPolicySofaViewer< VisualModelPolicyType >;  CustomPolicySofaViewer ();  ;  ~CustomPolicySofaViewer () override;  ;  Public Member Functions inherited from sofa::gui::qt::viewer::SofaViewer;  SofaViewer ();  ;  ~SofaViewer () override;  ; virtual void removeViewerTab (QTabWidget *);  Optional QTabWidget GUI for a concreate viewer. More...;  ; virtual void configureViewerTab (QTabWidget",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1viewer_1_1qt_1_1_qt_viewer.html:1197,resume,resume,1197,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1viewer_1_1qt_1_1_qt_viewer.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1viewer_1_1qt_1_1_qt_viewer.html,1,['resume'],['resume']
Usability,"amic::QuadSetTopologyContainervirtual; checkTopology() const overridesofa::component::topology::container::dynamic::QuadSetTopologyContainervirtual; cleanEdgeTopologyFromDirty()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; cleanPointTopologyFromDirty()sofa::component::topology::container::dynamic::PointSetTopologyContainerprotected; cleanQuadTopologyFromDirty()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear() overridesofa::component::topology::container::dynamic::QuadSetTopologyContainervirtual; clearEdges()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearEdgesAroundVertex()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearEdgesInQuad()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; clearLoggedMessages() constsofa::core::objectmodel::Base; clearQuads()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; clearQuadsAroundEdge()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; clearQuadsAroundVertex()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createEdgesAroundVertexArray()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotectedvirtual; createEdgeSetArray() overridesofa::component::topology::container::dynamic::QuadSetTopologyContainerprotectedvirtual; createEdgesInQuadArray()sofa::component::topology::container::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_container-members.html:4473,clear,clearLoggedMessages,4473,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_container-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_container-members.html,1,['clear'],['clearLoggedMessages']
Usability,"ams *) override;  Called before objects in the current branch are displayed. More...;  ; void bwdDraw (core::visual::VisualParams *) override;  Called after objects in the current branch are displayed. More...;  ;  Public Member Functions inherited from sofa::core::visual::VisualManager;  SOFA_CLASS (VisualManager, VisualModel);  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_order_independent_transparency_manager.html:3969,clear,clearVisual,3969,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_order_independent_transparency_manager.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_order_independent_transparency_manager.html,2,['clear'],"['clear', 'clearVisual']"
Usability,"anEdgeTopologyFromDirty()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; cleanPointTopologyFromDirty()sofa::component::topology::container::dynamic::PointSetTopologyContainerprotected; cleanQuadTopologyFromDirty()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear() overridesofa::component::topology::container::dynamic::QuadSetTopologyContainervirtual; clearEdges()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearEdgesAroundVertex()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearEdgesInQuad()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; clearLoggedMessages() constsofa::core::objectmodel::Base; clearQuads()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; clearQuadsAroundEdge()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; clearQuadsAroundVertex()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createEdgesAroundVertexArray()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotectedvirtual; createEdgeSetArray() overridesofa::component::topology::container::dynamic::QuadSetTopologyContainerprotectedvirtual; createEdgesInQuadArray()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotectedvirtual; createQuadsAroundEdgeArray()sofa::component::topology::container::dynamic::QuadSetTopologyContainerpro",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_container-members.html:4625,clear,clearQuadsAroundEdge,4625,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_container-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_container-members.html,1,['clear'],['clearQuadsAroundEdge']
Usability,anEdgeTopologyFromDirty()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; cleanPointTopologyFromDirty()sofa::component::topology::container::dynamic::PointSetTopologyContainerprotected; cleanTetrahedronTopologyFromDirty()sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainerprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanTriangleTopologyFromDirty()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear() overridesofa::component::topology::container::dynamic::TetrahedronSetTopologyContainervirtual; clearBorderElementLists()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; clearEdges()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearEdgesAroundVertex()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearEdgesInTetrahedron()sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainerprotected; clearEdgesInTriangle()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; clearLoggedMessages() constsofa::core::objectmodel::Base; clearTetrahedra()sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainerprotected; clearTetrahedraAroundEdge()sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainerprotected; clearTetrahedraAroundTriangle()sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainerprotected; clearTetrahedraAroundVertex()sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainerprotected; clearTriangles()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; clearTrianglesAroundEdge()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; clearTrianglesAroundVertex()sofa::component::topology::con,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container-members.html:4862,clear,clearEdgesInTetrahedron,4862,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container-members.html,1,['clear'],['clearEdgesInTetrahedron']
Usability,"and sofa::core::behavior::AddToMatrixCompatMatrix< c >. ◆ clear() [2/2]. virtual void sofa::linearalgebra::BaseMatrix::clear ; (; Index ; i, . Index ; j . ). inlinevirtual . Reimplemented in sofa::linearalgebra::SparseMatrix< T >, sofa::linearalgebra::SparseMatrix< SReal >, sofa::linearalgebra::SparseMatrix< Real >, sofa::linearalgebra::FullMatrix< T >, sofa::linearalgebra::FullMatrix< typename Vector::Real >, sofa::linearalgebra::FullMatrix< Real >, sofa::linearalgebra::DiagonalMatrix< T >, sofa::linearalgebra::DiagonalMatrix< R1 >, sofa::linearalgebra::DiagonalMatrix< R2 >, sofa::linearalgebra::CompressedRowSparseMatrixMechanical< sofa::type::Mat< NL, NC, MReal > >, sofa::linearalgebra::CompressedRowSparseMatrixMechanical< MReal >, sofa::linearalgebra::CompressedRowSparseMatrixMechanical< Real >, sofa::linearalgebra::BTDMatrix< N, T >, sofa::linearalgebra::BlockFullMatrix< N, T >, and sofa::linearalgebra::BlockDiagonalMatrix< LC, T >. ◆ clearCol(). virtual void sofa::linearalgebra::BaseMatrix::clearCol ; (; Index ; j). inlinevirtual . Reset the all values in column j to 0. ; Reimplemented in sofa::linearalgebra::SparseMatrix< T >, sofa::linearalgebra::SparseMatrix< SReal >, sofa::linearalgebra::SparseMatrix< Real >, sofa::linearalgebra::FullMatrix< T >, sofa::linearalgebra::FullMatrix< typename Vector::Real >, sofa::linearalgebra::FullMatrix< Real >, sofa::linearalgebra::DiagonalMatrix< T >, sofa::linearalgebra::DiagonalMatrix< R1 >, sofa::linearalgebra::DiagonalMatrix< R2 >, sofa::linearalgebra::CompressedRowSparseMatrixMechanical< sofa::type::Mat< NL, NC, MReal > >, sofa::linearalgebra::CompressedRowSparseMatrixMechanical< MReal >, sofa::linearalgebra::CompressedRowSparseMatrixMechanical< Real >, sofa::linearalgebra::BTDMatrix< N, T >, sofa::linearalgebra::BlockFullMatrix< N, T >, sofa::linearalgebra::BlockDiagonalMatrix< LC, T >, sofa::linearalgebra::EigenBaseSparseMatrix< TReal >, sofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >, and sofa::line",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_matrix.html:35649,clear,clearCol,35649,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_matrix.html,1,['clear'],['clearCol']
Usability,ap; ; SOFA - Topic: [SOLVED] Mass below a multimap. /mass-spring-model; ; SOFA - Topic: Mass-Spring Model. /mass-spring-modelling; ; SOFA - Topic: Mass-Spring Modelling. /materials-with-directionally-asymetric-friction; ; SOFA - Topic: [SOLVED] materials with directionally asymetric friction. /meaning-of-parameters-in-jointspringforcefield; ; SOFA - Topic: Meaning of parameters in JointSpringForceField. /measuring-contact-pressure; ; SOFA - Topic: [SOLVED] Measuring contact pressure. /mechanicalobject-and-articulationcenter-classes; ; SOFA - Topic: [SOLVED] MechanicalObject and ArticulationCenter classes. /mechanicalobject-rotation; ; SOFA - Topic: [SOLVED] MechanicalObject rotation. /memory-leaks; ; SOFA - Topic: Memory Leaks. /memory-leak-when-using-localmindistance; . /feed; ; [SOLVED] Memory leak when using LocalMinDistance – SOFA. SOFA - Topic: [SOLVED] Memory leak when using LocalMinDistance. /memory-problems-in-simple-app-using-sofa-as-lib; . /feed; ; [SOLVED] Memory problems in simple app using Sofa as lib – SOFA. SOFA - Topic: [SOLVED] Memory problems in simple app using Sofa as lib. /mergemeshes-remove-duplicated-vertices; ; SOFA - Topic: [SOLVED] MergeMeshes remove duplicated vertices. /mesh-explodes-when-using-the-surfacepressureconstraint; ; SOFA - Topic: [SOLVED] Mesh explodes when using the surfacepressureconstraint. /mesh-generation-in-sofa; ; SOFA - Topic: Mesh Generation in SOFA. /meshing-a-sphere; ; SOFA - Topic: [SOLVED] Meshing a Sphere. /mesh-object-does-not-visible; ; SOFA - Topic: [SOLVED] Mesh Object does not visible. /mesh-optimizatiation-for-deformable-objects; ; SOFA - Topic: Mesh-optimizatiation for deformable objects. /meshspringforcefield-on-rigid3d; ; SOFA - Topic: MeshSpringForceField on Rigid3d. /meshsteploader-plugin-loading-failed; ; SOFA - Topic: [SOLVED] MeshSTEPLoader plugin loading failed. /metal-forging-simulation; ; SOFA - Topic: Metal Forging Simulation. /missing-attribute-getobject; ; SOFA - Topic: Missing attribute: getOb,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:347077,simpl,simple,347077,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['simpl'],['simple']
Usability,"ap_modifyDialogOpened;  ; std::map< void *, QDialog * > map_modifyObjectWindow;  ; GraphListenerQListView * graphListener_;  ; std::vector< std::string > list_object;  ; AddObject * AddObjectDialog_;  ; ObjectModel object_;  ; SofaListViewAttribute attribute_;  ; QDisplayPropertyWidget * propertyWidget;  ;  Protected Attributes inherited from sofa::gui::qt::SofaSceneGraphWidget; bool m_isDirty;  ; bool m_isLocked;  . Public Member Functions;  QSofaListView (const SofaListViewAttribute &attribute, QWidget *parent=nullptr, const char *name=nullptr, Qt::WindowFlags f=Qt::WindowType::Widget);  ;  ~QSofaListView () override;  ; GraphListenerQListView * getListener () const;  ; void setPropertyWidget (QDisplayPropertyWidget *propertyWid);  ; void addInPropertyWidget (QTreeWidgetItem *item, bool clear);  ; void Clear (sofa::simulation::Node *rootNode);  ; void update ();  ; void setRoot (sofa::simulation::Node *);  ; SofaListViewAttribute getAttribute () const;  ; void contextMenuEvent (QContextMenuEvent *event) override;  ; void expandPathFrom (const std::vector< std::string > &pathes);  ; void getExpandedNodes (std::vector< std::string > &);  ; void loadObject (std::string path, double dx, double dy, double dz, double rx, double ry, double rz, double scale)=delete;  ;  Public Member Functions inherited from sofa::gui::qt::SofaSceneGraphWidget;  SofaSceneGraphWidget (QWidget *parent);  ;  ~SofaSceneGraphWidget ();  ; void lock ();  ; void unLock ();  ; bool isDirty ();  ; bool isLocked ();  Returns true if the view updates for any scene graph change is disable. More...;  ; void setViewToDirty ();  . Protected Member Functions; void expandPath (const std::string &path);  ; void getExpandedNodes (QTreeWidgetItem *item, std::vector< std::string > &);  ; void collapseNode (QTreeWidgetItem *item);  ; void expandNode (QTreeWidgetItem *item);  ; void transformObject (sofa::simulation::Node *node, double dx, double dy, double dz, double rx, double ry, double rz, double scale)=dele",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_sofa_list_view.html:1333,clear,clear,1333,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_sofa_list_view.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_sofa_list_view.html,1,['clear'],['clear']
Usability,"applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(sofa::core::visual::VisualParams *vparams) overridesofa::component::visual::VisualTransformvirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; Coord typedefsofa::component::visual::VisualTransform; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; d_recursivesofa::component::visual::VisualTransform; d_transformsofa::component::visual::VisualTransform; doDrawVisual(const sofa::core::visual::VisualParams *vparams) overridesofa::component::visual::VisualTransformvirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const sofa::core::visual::VisualParams *vparams) overridesofa::component::visual::VisualTransformvi",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_transform-members.html:2512,clear,clearVisual,2512,api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_transform-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_transform-members.html,1,['clear'],['clearVisual']
Usability,"aptics::LCPForceFeedback< DataTypes >::doComputeForce ; (; const VecCoord & ; state, . VecDeriv & ; forces . ). protectedvirtual . ◆ draw(). template<class TDataTypes > . void sofa::component::haptics::LCPForceFeedback< TDataTypes >::draw ; (; const core::visual::VisualParams * ; ). inlineoverridevirtual . Render internal data of this object, for debugging purposes. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ handleEvent(). template<typename DataTypes > . void sofa::component::haptics::LCPForceFeedback< DataTypes >::handleEvent ; (; sofa::core::objectmodel::Event * ; ). overridevirtual . Handle an event. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ init(). template<class DataTypes > . void sofa::component::haptics::LCPForceFeedback< DataTypes >::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::component::haptics::ForceFeedback. ◆ setLock(). template<class DataTypes > . void sofa::component::haptics::LCPForceFeedback< DataTypes >::setLock ; (; bool ; value). overridevirtual . Override method to lock or unlock the force feedback computation. According to parameter, value == true (resp. false) will lock (resp. unlock) mutex. ; See alsolockForce ; Reimplemented from sofa::component::haptics::ForceFeedback. ◆ SOFA_CLASS(). template<class TDataTypes > . sofa::component::haptics::LCPForceFeedback< TDataTypes >::SOFA_CLASS ; (; SOFA_TEMPLATE(LCPForceFeedback< TDataTypes >, TDataTypes) ; , . MechanicalStateForceFeedback< TDataTypes > ;  . ). ◆ updateConstraintProblem(). template<class DataTypes > . bool sofa::component::haptics::LCPForceFeedback< DataTypes >::updateConstraintProblem. protectedvirtual . ◆ updateStats(). template<class DataTypes > . void sofa::component::haptics::LCPForceFeedback< DataTypes >::updateStats. protectedvirtual . sofacomponenthapticsLCPForceFeedback; Generated on Mon Nov 11 2024 02:46:08 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_l_c_p_force_feedback.html:25672,feedback,feedback,25672,api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_l_c_p_force_feedback.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_l_c_p_force_feedback.html,1,['feedback'],['feedback']
Usability,"ar::SubsetMapping< TIn, TOut >::apply ; (; const core::MechanicalParams * ; mparams, . OutDataVecCoord & ; dOut, . const InDataVecCoord & ; dIn . ). override . ◆ applyJ(). template<class TIn , class TOut > . void sofa::component::mapping::linear::SubsetMapping< TIn, TOut >::applyJ ; (; const core::MechanicalParams * ; mparams, . OutDataVecDeriv & ; dOut, . const InDataVecDeriv & ; dIn . ). override . ◆ applyJT() [1/2]. template<class TIn , class TOut > . void sofa::component::mapping::linear::SubsetMapping< TIn, TOut >::applyJT ; (; const core::ConstraintParams * ; , . InDataMatrixDeriv & ; dOut, . const OutDataMatrixDeriv & ; dIn . ). override . ◆ applyJT() [2/2]. template<class TIn , class TOut > . void sofa::component::mapping::linear::SubsetMapping< TIn, TOut >::applyJT ; (; const core::MechanicalParams * ; mparams, . InDataVecDeriv & ; dOut, . const OutDataVecDeriv & ; dIn . ). override . ◆ clear(). template<class TIn , class TOut > . void sofa::component::mapping::linear::SubsetMapping< TIn, TOut >::clear ; (; Size ; reserve). ◆ getJ(). template<class TIn , class TOut > . const sofa::linearalgebra::BaseMatrix * sofa::component::mapping::linear::SubsetMapping< TIn, TOut >::getJ. override . ◆ getJs(). template<class TIn , class TOut > . const SubsetMapping< TIn, TOut >::js_type * sofa::component::mapping::linear::SubsetMapping< TIn, TOut >::getJs. override . ◆ init(). template<class TIn , class TOut > . void sofa::component::mapping::linear::SubsetMapping< TIn, TOut >::init ; (; void ; ). override . ◆ postInit(). template<class TIn , class TOut > . void sofa::component::mapping::linear::SubsetMapping< TIn, TOut >::postInit. ◆ SOFA_CLASS(). template<class TIn , class TOut > . sofa::component::mapping::linear::SubsetMapping< TIn, TOut >::SOFA_CLASS ; (; SOFA_TEMPLATE2(SubsetMapping< TIn, TOut >, TIn, TOut) ; , . SOFA_TEMPLATE2(LinearMapping, TIn, TOut) ;  . ). Enum details. ◆ anonymous enum. template<class TIn , class TOut > . anonymous enum. EnumeratorNIn . ◆ anon",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_subset_mapping.html:8643,clear,clear,8643,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_subset_mapping.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_subset_mapping.html,1,['clear'],['clear']
Usability,"aralgebra::BaseMatrix::bRowSize ; (; ); const. inlinevirtual . Returnsthe number of rows of blocks ; Reimplemented in sofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >, sofa::linearalgebra::CompressedRowSparseMatrixMechanical< sofa::type::Mat< NL, NC, MReal > >, sofa::linearalgebra::CompressedRowSparseMatrixMechanical< MReal >, and sofa::linearalgebra::CompressedRowSparseMatrixMechanical< Real >. ◆ bRowsRange(). virtual std::pair<RowBlockConstIterator, RowBlockConstIterator> sofa::linearalgebra::BaseMatrix::bRowsRange ; (; ); const. inlinevirtual . Get the iterators corresponding to the beginning and end of the given row of blocks. ; Reimplemented in sofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >, sofa::linearalgebra::CompressedRowSparseMatrixMechanical< sofa::type::Mat< NL, NC, MReal > >, sofa::linearalgebra::CompressedRowSparseMatrixMechanical< MReal >, and sofa::linearalgebra::CompressedRowSparseMatrixMechanical< Real >. ◆ clear() [1/2]. virtual void sofa::linearalgebra::BaseMatrix::clear ; (; ). pure virtual . Reset all values to 0. ; Implemented in sofa::linearalgebra::SparseMatrix< T >, sofa::linearalgebra::SparseMatrix< SReal >, sofa::linearalgebra::SparseMatrix< Real >, sofa::linearalgebra::RotationMatrix< TReal >, sofa::linearalgebra::FullMatrix< T >, sofa::linearalgebra::FullMatrix< typename Vector::Real >, sofa::linearalgebra::FullMatrix< Real >, sofa::linearalgebra::EigenBaseSparseMatrix< TReal >, sofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >, sofa::linearalgebra::EigenBaseSparseMatrix< typename DataTypes::Real >, sofa::linearalgebra::DiagonalMatrix< T >, sofa::linearalgebra::DiagonalMatrix< R1 >, sofa::linearalgebra::DiagonalMatrix< R2 >, sofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >, sofa::linearalgebra::CompressedRowSparseMatrixMechanical< sofa::type::Mat< NL, NC, MReal > >, sofa::linearalgebra::CompressedRowSparseMatrixMechanical< MReal >, sofa::lin",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_matrix.html:33393,clear,clear,33393,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_matrix.html,1,['clear'],['clear']
Usability,are coherent See alsom_quad . m_edgesInQuad . m_quadsAroundVertex . m_quadsAroundEdge ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer. ◆ cleanQuadTopologyFromDirty(). void sofa::component::topology::container::dynamic::QuadSetTopologyContainer::cleanQuadTopologyFromDirty ; (; ). protected . ◆ clear(). void sofa::component::topology::container::dynamic::QuadSetTopologyContainer::clear ; (; ). overridevirtual . Procedural creation methods ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer. ◆ clearEdgesInQuad(). void sofa::component::topology::container::dynamic::QuadSetTopologyContainer::clearEdgesInQuad ; (; ). protected . ◆ clearQuads(). void sofa::component::topology::container::dynamic::QuadSetTopologyContainer::clearQuads ; (; ). protected . ◆ clearQuadsAroundEdge(). void sofa::component::topology::container::dynamic::QuadSetTopologyContainer::clearQuadsAroundEdge ; (; ). protected . ◆ clearQuadsAroundVertex(). void sofa::component::topology::container::dynamic::QuadSetTopologyContainer::clearQuadsAroundVertex ; (; ). protected . ◆ createEdgeSetArray(). void sofa::component::topology::container::dynamic::QuadSetTopologyContainer::createEdgeSetArray ; (; ). overrideprotectedvirtual . Creates the EdgeSet array. ; Create the set of edges when needed. ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer. ◆ createEdgesInQuadArray(). void sofa::component::topology::container::dynamic::QuadSetTopologyContainer::createEdgesInQuadArray ; (; ). protectedvirtual . Creates the array of edge indices for each quad. ; This function is only called if the EdgesInQuad array is required. m_edgesInQuad[i] contains the 4 indices of the 4 edges composing the ith quad. . ◆ createQuadsAroundEdgeArray(). void sofa::component::topology::container::dynamic::QuadSetTopologyContainer::createQuadsAroundEdgeArray ; (; ). protectedvirtual . Creates the quadsAroundEdge A,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_container.html:40637,clear,clearQuadsAroundVertex,40637,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_container.html,1,['clear'],['clearQuadsAroundVertex']
Usability,"arsystem::MatrixLinearSystem< TMatrix, TVector >protected; buildHashTable(linearalgebra::CompressedRowSparseMatrix< SReal > &M, ConstantCRSMapping &mapping)sofa::component::linearsystem::ConstantSparsityPatternSystem< TMatrix, TVector >protectedstatic; buildSystemMatrix(const core::MechanicalParams *mparams)sofa::core::behavior::BaseMatrixLinearSystem; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanLocalMatrices()sofa::component::linearsystem::MatrixLinearSystem< TMatrix, TVector >protected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearSystem() overridesofa::component::linearsystem::ConstantSparsityPatternSystem< TMatrix, TVector >virtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; ConstantCRSMapping typedefsofa::component::linearsystem::ConstantSparsityPatternSystem< TMatrix, TVector >; ConstantSparsityPatternSystem()sofa::component::linearsystem::ConstantSparsityPatternSystem< TMatrix, TVector >protected; contribute(const core::MechanicalParams *mparams, IndependentContributors &contributors)sofa::component::linearsystem::MatrixLinearSystem< TMatrix, TVector >protected; Contribution typedefsofa::component::linearsystem::MatrixLinearSystem< TMatrix, TVector >; copyLocalVectorToGlobalVector(core::MultiVecDerivId v, TVector *globalVector)sofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >protected; copyLocalVectorToGlobalVector(core::MultiVecDerivId v, GraphScatteredVector *globalVector)sofa::component::linearsystem::TypedMatrixLinearSystem<",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_constant_sparsity_pattern_system-members.html:3871,clear,clearSystem,3871,api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_constant_sparsity_pattern_system-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_constant_sparsity_pattern_system-members.html,1,['clear'],['clearSystem']
Usability,"aryCoorsOrient . ). ◆ apply(). template<class In , class Out > . void sofa::component::mapping::linear::BarycentricMapperTetrahedronSetTopologyRigid< In, Out >::apply ; (; typename Out::VecCoord & ; out, . const typename In::VecCoord & ; in . ). override . ◆ applyJ(). template<class In , class Out > . void sofa::component::mapping::linear::BarycentricMapperTetrahedronSetTopologyRigid< In, Out >::applyJ ; (; typename Out::VecDeriv & ; out, . const typename In::VecDeriv & ; in . ). override . ◆ applyJT() [1/2]. template<class In , class Out > . void sofa::component::mapping::linear::BarycentricMapperTetrahedronSetTopologyRigid< In, Out >::applyJT ; (; typename In::MatrixDeriv & ; out, . const typename Out::MatrixDeriv & ; in . ). override . ◆ applyJT() [2/2]. template<class In , class Out > . void sofa::component::mapping::linear::BarycentricMapperTetrahedronSetTopologyRigid< In, Out >::applyJT ; (; typename In::VecDeriv & ; out, . const typename Out::VecDeriv & ; in . ). override . ◆ clear(). template<class In , class Out > . void sofa::component::mapping::linear::BarycentricMapperTetrahedronSetTopologyRigid< In, Out >::clear ; (; std::size_t ; reserve = 0). override . ◆ draw(). template<class In , class Out > . void sofa::component::mapping::linear::BarycentricMapperTetrahedronSetTopologyRigid< In, Out >::draw ; (; const core::visual::VisualParams * ; vparams, . const typename Out::VecCoord & ; out, . const typename In::VecCoord & ; in . ). override . ◆ getJ(). template<class In , class Out > . const sofa::linearalgebra::BaseMatrix * sofa::component::mapping::linear::BarycentricMapperTetrahedronSetTopologyRigid< In, Out >::getJ ; (; int ; outSize, . int ; inSize . ). override . ◆ init(). template<class In , class Out > . void sofa::component::mapping::linear::BarycentricMapperTetrahedronSetTopologyRigid< In, Out >::init ; (; const typename Out::VecCoord & ; out, . const typename In::VecCoord & ; in . ). override . ◆ resize(). template<class In , class Out > . void so",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_barycentric_mapper_tetrahedron_set_topology_rigid.html:6976,clear,clear,6976,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_barycentric_mapper_tetrahedron_set_topology_rigid.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_barycentric_mapper_tetrahedron_set_topology_rigid.html,1,['clear'],['clear']
Usability,"asLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(LCPForceFeedback, TDataTypes), MechanicalStateForceFeedback< TDataTypes >);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void draw (const core::visual::VisualParams *) override;  Render internal data of this object, for debugging purposes. More...;  ; void computeForce (SReal x, SReal y, SReal z, SReal u, SReal v, SReal w, SReal q, SReal &fx, SReal &fy, SReal &fz) override;  ; void computeWrench (const sofa::type::Transform< SReal > &world_H_tool, const sofa::type::SpatialVector< SReal > &V_tool_world, sofa::type::SpatialVector< SReal > &W_tool_world) override;  ; void computeForce (const VecCoord &state, VecDeriv &forces) override;  ; void handleEvent (sofa::core::objectmodel::Event *event) override;  Handle an event. More...;  ; void setLock (bool value) override;  Override method to lock or unlock the force feedback computation. According to parameter, value == true (resp. false) will lock (resp. unlock) mutex. More...;  ; void computeForce (SReal x, SReal y, SReal z, SReal, SReal, SReal, SReal, SReal &fx, SReal &fy, SReal &fz);  ; void computeWrench (const sofa::type::Transform< SReal > &world_H_tool, const sofa::type::SpatialVector< SReal > &, sofa::type::SpatialVector< SReal > &W_tool_world);  ; void SOFA_COMPONENT_HAPTICS_API computeForce (SReal x, SReal y, SReal z, SReal, SReal, SReal, SReal, SReal &fx, SReal &fy, SReal &fz);  ; void SOFA_COMPONENT_HAPTICS_API computeWrench (const sofa::type::Transform< SReal > &world_H_tool, const sofa::type::SpatialVector< SReal > &, sofa::type::SpatialVector< SReal > &W_tool_world);  ;  Public Member Functions inherited from sofa::component::haptics::MechanicalStateForceFeedback< TDataTypes >;  SOFA_CLASS (SOFA_TEMPLATE(MechanicalStateForceFeedback, TDataTypes), ForceFeedback);  ; void init () override;  Initializat",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_l_c_p_force_feedback.html:5010,feedback,feedback,5010,api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_l_c_p_force_feedback.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_l_c_p_force_feedback.html,1,['feedback'],['feedback']
Usability,"ase * findObject (const char *nodeName);  Find an object given its name (relative to this object) More...;  ; virtual const char * getAttribute (const std::string &attr, const char *defaultVal=nullptr);  Get an attribute given its name (return defaultVal if not present) More...;  ; virtual float getAttributeAsFloat (const std::string &attr, const float defaultVal=0.0);  Docs is in .h. More...;  ; virtual int getAttributeAsInt (const std::string &attr, const int defaultVal=0.0);  Docs is in .h. More...;  ; virtual void setAttribute (const std::string &attr, const std::string &val);  Set an attribute. Override any existing value. More...;  ; virtual bool removeAttribute (const std::string &attr);  Remove an attribute given its name. More...;  ; virtual std::string getFullName ();  Get the full name of this object (i.e. concatenation if all the names of its ancestors and itself) More...;  ; virtual void logError (const std::string &s);  ; virtual void logErrors (const std::vector< std::string > &e);  ; std::vector< std::string > const & getErrors () const;  ; virtual void clearErrors ();  . Attribute details. ◆ attributes. AttributeMap sofa::core::objectmodel::BaseObjectDescription::attributes. protected . ◆ errors. std::vector< std::string > sofa::core::objectmodel::BaseObjectDescription::errors. protected . Constructor details. ◆ BaseObjectDescription(). sofa::core::objectmodel::BaseObjectDescription::BaseObjectDescription ; (; const char * ; name = nullptr, . const char * ; type = nullptr . ). ◆ ~BaseObjectDescription(). sofa::core::objectmodel::BaseObjectDescription::~BaseObjectDescription ; (; ). virtual . Function details. ◆ clearErrors(). virtual void sofa::core::objectmodel::BaseObjectDescription::clearErrors ; (; ). inlinevirtual . ◆ find(). BaseObjectDescription * sofa::core::objectmodel::BaseObjectDescription::find ; (; const char * ; nodeName, . bool ; absolute = false . ). virtual . Find an object description given its name (relative to this object) ; Reim",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_object_description.html:2980,clear,clearErrors,2980,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_object_description.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_object_description.html,1,['clear'],['clearErrors']
Usability,"ase; Base()sofa::core::objectmodel::Baseprotected; BaseMatrixProjectionMethod(const PairMechanicalStates &states)sofa::component::linearsystem::BaseMatrixProjectionMethod< TMatrix >explicitprotected; BaseMatrixProjectionMethod()=defaultsofa::component::linearsystem::BaseMatrixProjectionMethod< TMatrix >protected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; Block typedefsofa::component::linearsystem::ConstantSparsityProjectionMethod< TMatrix >; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; computeJacobiansFrom(BaseMechanicalState *mstate, const core::MechanicalParams *mparams, const MappingGraph &mappingGraph, TMatrix *crs)sofa::component::linearsystem::MatrixProjectionMethod< TMatrix >protected; computeMatrixJacobians(const core::MechanicalParams *mparams, const MappingGraph &mappingGraph, TMatrix *matrixToProject)sofa::component::linearsystem::MatrixProjectionMethod< TMatrix >; computeMatrixProduct(const MappingGraph &mappingGraph, TMatrix *matrixToProject, linearalgebra::BaseMatrix *globalMatrix)sofa::component::linearsystem::MatrixProjectionMethod< TMatrix >protectedvirtual; computeProjection(const Eigen::Map< Eigen::SparseMatrix< Block, Eigen::RowMajor > > KMap, const sofa::type::fixed_array< std::shared_ptr< TMatrix >, 2 > J, Eigen::SparseMatrix< Block, Eigen::RowMajor > &JT_K_J) overridesofa::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_constant_sparsity_projection_method-members.html:2672,clear,clearLoggedMessages,2672,api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_constant_sparsity_projection_method-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_constant_sparsity_projection_method-members.html,1,['clear'],['clearLoggedMessages']
Usability,"ase; Block typedefsofa::component::constraint::projective::LineProjectiveConstraint< DataTypes >; bsize enum valuesofa::component::constraint::projective::LineProjectiveConstraint< DataTypes >; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ProjectiveConstraintSet< DataTypes >inlinestatic; sofa::core::behavior::BaseProjectiveConstraintSet::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearConstraints()sofa::component::constraint::projective::LineProjectiveConstraint< DataTypes >; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; Coord typedefsofa::component::constraint::projective::LineProjectiveConstraint< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; CPos typedefsofa::component::constraint::projective::LineProjectiveConstraint< DataTypes >; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_directionsofa::component::constraint::projective::LineProjectiveConstraint< DataTypes >; d_drawSizesofa::component::constraint::projective::LineProjectiveConstraint< DataTypes >; d_indicessofa::component::constraint::projective::LineProjectiveConstraint< DataTypes >; d_messageLogCountsofa::core::objectmodel::Basemutable; d_originsofa::compo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_line_projective_constraint-members.html:3401,clear,clearLoggedMessages,3401,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_line_projective_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_line_projective_constraint-members.html,1,['clear'],['clearLoggedMessages']
Usability,"ase; buildDampingMatrix(core::behavior::DampingMatrix *) finalsofa::component::solidmechanics::fem::elastic::QuadBendingFEMForceField< DataTypes >virtual; buildStiffnessMatrix(core::behavior::StiffnessMatrix *matrix) overridesofa::component::solidmechanics::fem::elastic::QuadBendingFEMForceField< DataTypes >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ForceField< DataTypes >inlinestatic; sofa::core::behavior::BaseForceField::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; computeBendingMaterialStiffness(int i, Index &a, Index &b, Index &c, Index &d)sofa::component::solidmechanics::fem::elastic::QuadBendingFEMForceField< DataTypes >protectedvirtual; computeBendingStrainDisplacement(StrainDisplacement &Jb, Real gauss1, Real gauss2, Real l, Real h)sofa::component::solidmechanics::fem::elastic::QuadBendingFEMForceField< DataTypes >protected; computeDisplacementSmall(Displacement &D, Index elementIndex, const VecCoord &p)sofa::component::solidmechanics::fem::elastic::QuadBendingFEMForceField< DataTypes >protected; computeElementStiffness(Stiffness &K, Index elementIndex)sofa::component::solidmechanics::fem::elastic::QuadBendingFEMForceField< DataTypes >protected; computeForce(Displacement &F, Index elementIndex, Displacement &D)sofa::component::solidmechanics::fem::elastic::QuadBendingFE",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_quad_bending_f_e_m_force_field-members.html:5284,clear,clearLoggedMessages,5284,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_quad_bending_f_e_m_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_quad_bending_f_e_m_force_field-members.html,1,['clear'],['clearLoggedMessages']
Usability,"aseAssemblingMatrixAccumulator< c >, sofa::core::matrixaccumulator::NoIndexVerification >;  SOFA_CLASS (MatrixAccumulatorIndexChecker, BaseAssemblingMatrixAccumulator< c >);  ; void setIndexCheckerStrategy (std::shared_ptr< matrixaccumulator::IndexVerificationStrategy > strategy) override;  ; void add (const sofa::SignedIndex row, const sofa::SignedIndex col, const float value) override final;  ; void add (const sofa::SignedIndex row, const sofa::SignedIndex col, double value) override final;  ; void add (const sofa::SignedIndex row, const sofa::SignedIndex col, const sofa::type::Mat< 2, 2, float > &value) override final;  ; void add (const sofa::SignedIndex row, const sofa::SignedIndex col, const sofa::type::Mat< 2, 2, double > &value) override final;  ; void add (const sofa::SignedIndex row, const sofa::SignedIndex col, const sofa::type::Mat< 3, 3, float > &value) override final;  ; void add (const sofa::SignedIndex row, const sofa::SignedIndex col, const sofa::type::Mat< 3, 3, double > &value) override final;  ; void add (const sofa::SignedIndex row, const sofa::SignedIndex col, const sofa::type::Mat< 6, 6, float > &value) override final;  ; void add (const sofa::SignedIndex row, const sofa::SignedIndex col, const sofa::type::Mat< 6, 6, double > &value) override final;  ;  Public Member Functions inherited from sofa::component::linearsystem::AssemblingMappedMatrixAccumulator< c, TBlockType >;  SOFA_CLASS (AssemblingMappedMatrixAccumulator, AssemblingMatrixAccumulator< c >);  ; void clear () override;  ; void shareMatrix (const std::shared_ptr< LocalMappedMatrixType< TBlockType > > &m);  ; const std::shared_ptr< LocalMappedMatrixType< TBlockType > > & getMatrix () const;  ;  Public Member Functions inherited from sofa::component::linearsystem::AssemblingMatrixAccumulator< c, TStrategy >;  SOFA_CLASS (AssemblingMatrixAccumulator, SOFA_TEMPLATE2(sofa::core::MatrixAccumulatorIndexChecker, BaseAssemblingMatrixAccumulator< c >, TStrategy));  ; void clear () override;  .",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_constant_local_mapped_matrix.html:3013,clear,clear,3013,api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_constant_local_mapped_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_constant_local_mapped_matrix.html,4,['clear'],['clear']
Usability,"aseLink *link);  ;  Public Member Functions inherited from sofa::core::State< TDataTypes >;  SOFA_CLASS (SOFA_TEMPLATE(State, TDataTypes), BaseState);  ; sofa::type::TBoundingBox< Real > computeBBox () const;  Compute the bounding box independently from the visibility parameters. More...;  ; void computeBBox (const core::ExecParams *params, bool onlyVisible=false) override;  ; virtual Data< VecCoord > * write (VecCoordId v)=0;  ; virtual const Data< VecCoord > * read (ConstVecCoordId v) const =0;  ; virtual Data< VecDeriv > * write (VecDerivId v)=0;  ; virtual const Data< VecDeriv > * read (ConstVecDerivId v) const =0;  ; virtual Data< MatrixDeriv > * write (MatrixDerivId v)=0;  ; virtual const Data< MatrixDeriv > * read (ConstMatrixDerivId v) const =0;  ; objectmodel::BaseData * baseWrite (VecId v) override;  ; const objectmodel::BaseData * baseRead (ConstVecId v) const override;  ; ReadVecCoord readPositions () const;  ; WriteVecCoord writePositions ();  ; WriteOnlyVecCoord writeOnlyPositions ();  ; ReadVecCoord readRestPositions () const;  ; WriteVecCoord writeRestPositions ();  ; WriteOnlyVecCoord writeOnlyRestPositions ();  ; ReadVecDeriv readVelocities () const;  ; WriteVecDeriv writeVelocities ();  ; WriteOnlyVecDeriv writeOnlyVelocities ();  ; ReadVecDeriv readForces () const;  ; WriteVecDeriv writeForces ();  ; WriteOnlyVecDeriv writeOnlyForces ();  ; ReadVecDeriv readDx () const;  ; WriteVecDeriv writeDx ();  ; WriteOnlyVecDeriv writeOnlyDx ();  ; ReadVecDeriv readNormals () const;  ; const AccumulationVecId< TDataTypes, V_DERIV, V_READ > & readTotalForces () const;  Returns a proxy objects offering simplified access to elements of the cumulative sum of all force containers. More...;  ; void addToTotalForces (core::ConstVecDerivId forceId) override;  The provided VecDerivId will contribute to the sum of all force containers. More...;  ; void removeFromTotalForces (core::ConstVecDerivId forceId) override;  . Static Public Member Functions; template<class T >",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mechanical_state.html:21220,simpl,simplified,21220,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mechanical_state.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mechanical_state.html,1,['simpl'],['simplified']
Usability,"aseMatrix::clearCol(Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; clearColBlock(Index j)sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSMechanicalPolicy >inline; clearCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRow(Index i) overridesofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >inline; sofa::linearalgebra::BaseMatrix::clearRow(Index i)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowBlock(Index i)sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSMechanicalPolicy >inline; clearRowCol(Index i) overridesofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >inline; sofa::linearalgebra::BaseMatrix::clearRowCol(Index i)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowColBlock(Index i)sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSMechanicalPolicy >inline; clearRows(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowsCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; colBSize() constsofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSMechanicalPolicy >inline; cols(void) constsofa::linearalgebra::BaseMatrixinline; colsIndexsofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSMechanicalPolicy >; colSize() const overridesofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >inlinevirtual; colsValuesofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSMechanicalPolicy >; compress() overridesofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >inlinevirtual; compressBtemp()sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSMechanicalPolicy >inlineprotected; compressCSR()sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSMechanicalPolicy >inlineprotected; CompressedRowSparseMatrixGeneric()sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSMechanicalPolicy >",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical-members.html:15492,clear,clearRowsCols,15492,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical-members.html,1,['clear'],['clearRowsCols']
Usability,"aseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkConnexity() overridesofa::component::topology::container::dynamic::HexahedronSetTopologyContainervirtual; checkTopology() const overridesofa::component::topology::container::dynamic::HexahedronSetTopologyContainervirtual; cleanEdgeTopologyFromDirty()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; cleanHexahedronTopologyFromDirty()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; cleanPointTopologyFromDirty()sofa::component::topology::container::dynamic::PointSetTopologyContainerprotected; cleanQuadTopologyFromDirty()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear() overridesofa::component::topology::container::dynamic::MultilevelHexahedronSetTopologyContainervirtual; clearEdges()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearEdgesAroundVertex()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearEdgesInHexahedron()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearEdgesInQuad()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; clearHexahedra()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearHexahedraAroundEdge()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearHexahedraAroundQuad()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearHexahedraAroundVertex()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearLoggedMessages() constsofa::core::objectmodel::Base; clearQuads()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprote",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_multilevel_hexahedron_set_topology_container-members.html:4786,clear,clearEdges,4786,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_multilevel_hexahedron_set_topology_container-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_multilevel_hexahedron_set_topology_container-members.html,1,['clear'],['clearEdges']
Usability,"aseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::core::behavior::SingleStateAccessor< TDataTypes >; SingleLink< SingleStateAccessor< TDataTypes >, MechanicalState< TDataTypes >, BaseLink::FLAG_STRONGLINK > mstate;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(PatchTestMovementProjectiveConstraint, TDataTypes), SOFA_TEMPLATE(sofa::core::behavior::ProjectiveConstraintSet, TDataTypes));  ; void clearConstraints ();  ; void addConstraint (Index index);  ; void removeConstraint (Index index);  ; void init () override;  – Constraint interface More...;  ; void projectResponse (const core::MechanicalParams *mparams, DataVecDeriv &resData) override;  Cancel the possible forces. More...;  ; void projectVelocity (const core::MechanicalParams *mparams, DataVecDeriv &vData) override;  Cancel the possible velocities. More...;  ; void projectPosition (const core::MechanicalParams *mparams, DataVecCoord &xData) override;  Apply the computed movements to the border mesh points between beginConstraintTime and endConstraintTime. More...;  ; void projectMatrix (sofa::linearalgebra::BaseMatrix *, unsigned) override;  ; void projectJacobianMatrix (const core::MechanicalParams *, DataMatrixDeriv &) override;  ; void getFinalPositions (VecCoord &finalPos, DataVecCoord &xData);  Compute the theoretical final positions. More...;  ; void draw (const core::visual::VisualParams *vpara",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_patch_test_movement_projective_constraint.html:5287,clear,clearConstraints,5287,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_patch_test_movement_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_patch_test_movement_projective_constraint.html,1,['clear'],['clearConstraints']
Usability,"aseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkEdgeMass()sofa::component::mass::MeshMatrixMass< DataTypes, GeometricalTypes >; checkMassDensity()sofa::component::mass::MeshMatrixMass< DataTypes, GeometricalTypes >virtual; checkTopology()sofa::component::mass::MeshMatrixMass< DataTypes, GeometricalTypes >protected; checkTotalMass()sofa::component::mass::MeshMatrixMass< DataTypes, GeometricalTypes >virtual; checkTotalMassInit()sofa::component::mass::MeshMatrixMass< DataTypes, GeometricalTypes >virtual; checkVertexMass()sofa::component::mass::MeshMatrixMass< DataTypes, GeometricalTypes >virtual; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear()sofa::component::mass::MeshMatrixMass< DataTypes, GeometricalTypes >virtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; computeMass()sofa::component::mass::MeshMatrixMass< DataTypes, GeometricalTypes >; Coord typedefsofa::component::mass::MeshMatrixMass< DataTypes, GeometricalTypes >; copyVertexMass()sofa::component::mass::MeshMatrixMass< DataTypes, GeometricalTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_computeMassOnRestsofa::component::mass::MeshMatrixMass< DataTypes, GeometricalTypes >; d_edgeMasssofa::component::mass::MeshMatrixMass< DataTypes, GeometricalTypes >; d_lumpingsofa::component::mass::MeshMatrixMass< DataTypes, GeometricalTypes >; d_massDensitysofa::component:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_mesh_matrix_mass-members.html:8127,clear,clearLoggedMessages,8127,api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_mesh_matrix_mass-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_mesh_matrix_mass-members.html,1,['clear'],['clearLoggedMessages']
Usability,"aseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; buildDampingMatrix(core::behavior::DampingMatrix *) overridesofa::component::solidmechanics::spring::SpringForceField< DataTypes >virtual; buildStiffnessMatrix(core::behavior::StiffnessMatrix *matrix) overridesofa::component::solidmechanics::spring::SpringForceField< DataTypes >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; c_springCallBacksofa::component::solidmechanics::spring::SpringForceField< DataTypes >protected; canCreate(T *obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::PairInteractionForceField< DataTypes >inlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear(sofa::Size reserve=0)sofa::component::solidmechanics::spring::SpringForceField< DataTypes >; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::component::solidmechanics::spring::SpringForceField< DataTypes >virtual; computeSpringDForce(VecDeriv &df1, const VecDeriv &dx1, VecDeriv &df2, const VecDeriv &dx2, sofa::Index i, const Spring &spring, SReal kFactor, SReal bFactor)sofa::component::solidmechanics::spring::SpringForceField< DataTypes >; computeSpringForce(const VecCoord &p1, const VecDeriv &v1, const VecCoord &p2, const VecDeriv &v2, const Spring &spring)sofa::component::solidmechanics::spring::SpringForceField< DataTypes >protectedvirtual; Coord typedefsofa::component::solidmechanics::spring::MeshSpringForceField< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, core::object",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_mesh_spring_force_field-members.html:5786,clear,clear,5786,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_mesh_spring_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_mesh_spring_force_field-members.html,1,['clear'],['clear']
Usability,"aseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; buildDampingMatrix(core::behavior::DampingMatrix *) overridesofa::component::solidmechanics::spring::SpringForceField< DataTypes >virtual; buildStiffnessMatrix(core::behavior::StiffnessMatrix *matrix) overridesofa::component::solidmechanics::spring::SpringForceField< DataTypes >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; c_springCallBacksofa::component::solidmechanics::spring::SpringForceField< DataTypes >protected; canCreate(T *obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::PairInteractionForceField< DataTypes >inlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear(sofa::Size reserve=0)sofa::component::solidmechanics::spring::SpringForceField< DataTypes >; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::component::solidmechanics::spring::SpringForceField< DataTypes >virtual; computeSpringDForce(VecDeriv &df1, const VecDeriv &dx1, VecDeriv &df2, const VecDeriv &dx2, sofa::Index i, const Spring &spring, SReal kFactor, SReal bFactor)sofa::component::solidmechanics::spring::SpringForceField< DataTypes >; computeSpringForce(const VecCoord &p1, const VecDeriv &v1, const VecCoord &p2, const VecDeriv &v2, const Spring &spring)sofa::component::solidmechanics::spring::SpringForceField< DataTypes >protectedvirtual; Coord typedefsofa::component::solidmechanics::spring::RegularGridSpringForceField< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, core:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_regular_grid_spring_force_field-members.html:5548,clear,clear,5548,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_regular_grid_spring_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_regular_grid_spring_force_field-members.html,1,['clear'],['clear']
Usability,"aseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; buildDampingMatrix(core::behavior::DampingMatrix *) overridesofa::component::solidmechanics::spring::SpringForceField< DataTypes >virtual; buildStiffnessMatrix(core::behavior::StiffnessMatrix *matrix) overridesofa::component::solidmechanics::spring::SpringForceField< DataTypes >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; c_springCallBacksofa::component::solidmechanics::spring::SpringForceField< DataTypes >protected; canCreate(T *obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::PairInteractionForceField< DataTypes >inlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear(sofa::Size reserve=0)sofa::component::solidmechanics::spring::SpringForceField< DataTypes >; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::component::solidmechanics::spring::SpringForceField< DataTypes >virtual; computeSpringDForce(VecDeriv &df1, const VecDeriv &dx1, VecDeriv &df2, const VecDeriv &dx2, sofa::Index i, const Spring &spring, SReal kFactor, SReal bFactor)sofa::component::solidmechanics::spring::SpringForceField< DataTypes >; computeSpringForce(const VecCoord &p1, const VecDeriv &v1, const VecCoord &p2, const VecDeriv &v2, const Spring &spring)sofa::component::solidmechanics::spring::SpringForceField< DataTypes >protectedvirtual; Coord typedefsofa::component::solidmechanics::spring::RepulsiveSpringForceField< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, core::o",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_repulsive_spring_force_field-members.html:5510,clear,clear,5510,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_repulsive_spring_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_repulsive_spring_force_field-members.html,1,['clear'],['clear']
Usability,"aseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; buildDampingMatrix(core::behavior::DampingMatrix *) overridesofa::component::solidmechanics::spring::SpringForceField< DataTypes >virtual; buildStiffnessMatrix(core::behavior::StiffnessMatrix *matrix) overridesofa::component::solidmechanics::spring::SpringForceField< DataTypes >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; c_springCallBacksofa::component::solidmechanics::spring::SpringForceField< DataTypes >protected; canCreate(T *obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::PairInteractionForceField< DataTypes >inlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear(sofa::Size reserve=0)sofa::component::solidmechanics::spring::SpringForceField< DataTypes >; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::component::solidmechanics::spring::SpringForceField< DataTypes >virtual; computeSpringDForce(VecDeriv &df1, const VecDeriv &dx1, VecDeriv &df2, const VecDeriv &dx2, sofa::Index i, const Spring &spring, SReal kFactor, SReal bFactor)sofa::component::solidmechanics::spring::SpringForceField< DataTypes >; computeSpringForce(const VecCoord &p1, const VecDeriv &v1, const VecCoord &p2, const VecDeriv &v2, const Spring &spring)sofa::component::solidmechanics::spring::SpringForceField< DataTypes >protectedvirtual; Coord typedefsofa::component::solidmechanics::spring::SpringForceField< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, core::objectmode",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_quad_bending_springs-members.html:5706,clear,clear,5706,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_quad_bending_springs-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_quad_bending_springs-members.html,3,['clear'],['clear']
Usability,"aseObjectvirtual; clear() overridesofa::component::topology::container::dynamic::MultilevelHexahedronSetTopologyContainervirtual; clearEdges()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearEdgesAroundVertex()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearEdgesInHexahedron()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearEdgesInQuad()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; clearHexahedra()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearHexahedraAroundEdge()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearHexahedraAroundQuad()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearHexahedraAroundVertex()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearLoggedMessages() constsofa::core::objectmodel::Base; clearQuads()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; clearQuadsAroundEdge()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; clearQuadsAroundVertex()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; clearQuadsInHexahedron()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createEdgesAroundVertexArray()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotectedvirtual; createEdgeSetArray() overridesofa::component::topology::container::d",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_multilevel_hexahedron_set_topology_container-members.html:5646,clear,clearLoggedMessages,5646,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_multilevel_hexahedron_set_topology_container-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_multilevel_hexahedron_set_topology_container-members.html,1,['clear'],['clearLoggedMessages']
Usability,"ases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Constructor details. ◆ BaseNode(). sofa::core::objectmodel::BaseNode::BaseNode ; (; ). protected . ◆ ~BaseNode(). sofa::core::objectmodel::BaseNode::~BaseNode ; (; ). overrideprotected . Function details. ◆ addChild(). virtual void sofa::core::objectmodel::BaseNode::addChild ; (; BaseNode::SPtr ; node). pure virtual . Add a child node. ; Implemented in sofa::simulation::Node. ◆ addObject(). virtual bool sofa::core::objectmodel::BaseNode::addObject ; (; BaseObject::SPtr ; obj, . TypeOfInsertion ; = TypeOfInsertion::AtEnd . ). pure virtual . Add a generic object. ; Implemented in sofa::simulation::Node. ◆ clearObjectContext(). void sofa::core::objectmodel::BaseNode::clearObjectContext ; (; BaseObject::SPtr ; obj). protected . Reset the context of an object. . ◆ detachFromGraph(). virtual void sofa::core::objectmodel::BaseNode::detachFromGraph ; (; ). pure virtual . Remove the current node from the graph: depending on the type of Node, it can have one or several parents. WarningYou must have a SPtr on the node you detach if you want to keep it or the smart pointer mechanism will remove it ! ; Implemented in sofa::simulation::graph::DAGNode. ◆ findLinkDestClass(). Base* sofa::core::objectmodel::BaseNode::findLinkDestClass ; (; const BaseClass * ; destType, . const std::string & ; path, . const BaseLink * ; link . ). overridepure virtual . Reimplemented from sofa::core::objectmodel::Base.; Implemented in sofa::simulation::Node. ◆ getAnimationLoop(). core::behavior::BaseAnimationLoop * sofa::core::objectmodel::BaseNode::getAnimationLoop ; (; ); const. virtual . Reimplemented in sofa::simulation::Nod",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_node.html:12467,clear,clearObjectContext,12467,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_node.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_node.html,1,['clear'],['clearObjectContext']
Usability,"ass< DataTypes, GeometricalTypes > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Public Attributes |; Protected Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::component::mass::DiagonalMass< DataTypes, GeometricalTypes > Class Template Reference . #include <DiagonalMass.h>; This component computes the integral of this mass density over the volume of the object geometry but it supposes that the Mass matrix is diagonal. ; More... Inheritance diagram for sofa::component::mass::DiagonalMass< DataTypes, GeometricalTypes >:. [legend]; Detailed Description; template<class DataTypes, class GeometricalTypes = DataTypes>; class sofa::component::mass::DiagonalMass< DataTypes, GeometricalTypes >; This component computes the integral of this mass density over the volume of the object geometry but it supposes that the Mass matrix is diagonal. ; RemarksSimilar to MeshMatrixMass but it does not simplify the Mass Matrix as diagonal. . https://www.sofa-framework.org/community/doc/components/masses/diagonalmass/ ; Template Parameters. DataTypestype of the state associated with this mass ; GeometricalTypestype of the geometry, i.e type of the state associated with the topology (if the topology and the mass relates to the same state, this will be the same as DataTypes) . Classes; class  Loader;  . Public Attributes; VecMass d_vertexMass;  values of the particles masses More...;  ; Data< Real > d_massDensity;  the mass density used to compute the mass from a mesh topology and geometry More...;  ; Data< Real > d_totalMass;  total mass of the object More...;  ; Data< bool > d_computeMassOnRest;  if true, the mass of every element is computed based on the rest position rather than the position More...;  ; Data< bool > d_showCenterOfGravity;  to display the center of gravity of the system More...;  ; Data< float > d_showAxisSize;  Factor length of the axis displayed (only used f",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_diagonal_mass.html:1053,simpl,simplify,1053,api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_diagonal_mass.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_diagonal_mass.html,1,['simpl'],['simplify']
Usability,"asub() [2/2]. template<std::size_t N, typename T > . const BlockFullMatrix< N, T >::Block & sofa::linearalgebra::BlockFullMatrix< N, T >::asub ; (; Index ; bi, . Index ; bj, . Index ; , . Index ;  . ); const. ◆ bloc() [1/2]. template<std::size_t N, typename T > . BlockFullMatrix< N, T >::Block & sofa::linearalgebra::BlockFullMatrix< N, T >::bloc ; (; Index ; bi, . Index ; bj . ). ◆ bloc() [2/2]. template<std::size_t N, typename T > . const BlockFullMatrix< N, T >::Block & sofa::linearalgebra::BlockFullMatrix< N, T >::bloc ; (; Index ; bi, . Index ; bj . ); const. ◆ clear() [1/2]. template<std::size_t N, typename T > . void sofa::linearalgebra::BlockFullMatrix< N, T >::clear ; (; ). overridevirtual . Reset all values to 0. ; Implements sofa::linearalgebra::BaseMatrix. ◆ clear() [2/2]. template<std::size_t N, typename T > . void sofa::linearalgebra::BlockFullMatrix< N, T >::clear ; (; Index ; i, . Index ; j . ). overridevirtual . Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearCol(). template<std::size_t N, typename T > . void sofa::linearalgebra::BlockFullMatrix< N, T >::clearCol ; (; Index ; j). overridevirtual . Reset the all values in column j to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRow(). template<std::size_t N, typename T > . void sofa::linearalgebra::BlockFullMatrix< N, T >::clearRow ; (; Index ; i). overridevirtual . Reset all the values in row i to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRowCol(). template<std::size_t N, typename T > . void sofa::linearalgebra::BlockFullMatrix< N, T >::clearRowCol ; (; Index ; i). overridevirtual . Reset the value of both row and column i to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ colSize(). template<std::size_t N, typename T > . BlockFullMatrix< N, T >::Index sofa::linearalgebra::BlockFullMatrix< N, T >::colSize ; (; void ; ); const. overridevirtual . Number of columns. ; Implements sofa::linearalgebra::BaseMatrix. ◆ element(). template<std::siz",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_full_matrix.html:17312,clear,clearCol,17312,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_full_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_full_matrix.html,1,['clear'],['clearCol']
Usability,"at element i, j of matrix More...;  ; void set (Index i, Index j, int &rowId, int &colId, double v);  set scalar element i, j of matrix when rowId and colId are known More...;  ; template<typename T = Block, typename std::enable_if_t<!std::is_same_v< T, double > &&!std::is_same_v< T, float >, int > = 0> ; void add (Index i, Index j, int &rowId, int &colId, double v);  add scalar v at element i, j when rowId and colId are known More...;  ; void clear (Index i, Index j) override;  clear scalar at element i, j of matrix More...;  ; void add (Index i, Index j, const type::Mat3x3d &_M) override;  ; void add (Index i, Index j, const type::Mat3x3f &_M) override;  ; void clearRow (Index i) override;  Clear row scalar method. Clear all col of this line. More...;  ; void clearCol (Index j) override;  Clear col scalar method. Clear this col in all row of matrix. More...;  ; void clearRowCol (Index i) override;  Clear both row i and column i in a square matrix. More...;  ; void clear () override;  Completely clear the matrix. More...;  ; template<class M2 > ; bool hasRef (const M2 *m) const;  ; std::string expr () const;  ; bool valid () const;  ; template<class Dest > ; void addTo (Dest *dest) const;  ; template<class TBlock2 , class TPolicy2 > ; void operator= (const CompressedRowSparseMatrixMechanical< TBlock2, TPolicy2 > &m);  ; template<class TBlock2 , class TPolicy2 > ; void operator+= (const CompressedRowSparseMatrixMechanical< TBlock2, TPolicy2 > &m);  ; template<class TBlock2 , class TPolicy2 > ; void operator-= (const CompressedRowSparseMatrixMechanical< TBlock2, TPolicy2 > &m);  ; template<class Expr2 > ; void operator= (const MatrixExpr< Expr2 > &m);  ; template<class Expr2 > ; void operator+= (const MatrixExpr< Expr2 > &m);  ; template<class Expr2 > ; void operator-= (const MatrixExpr< Expr2 > &m);  ; MatrixExpr< MatrixTranspose< Matrix > > t () const;  ; MatrixExpr< MatrixNegative< Matrix > > operator- () const;  ; MatrixExpr< MatrixScale< Matrix, double > > opera",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical.html:6210,clear,clear,6210,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical.html,2,['clear'],['clear']
Usability,"at< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(core::visual::VisualParams *) overridesofa::gl::component::shader::LightManagervirtual; bwdInit() overridesofa::gl::component::shader::LightManagervirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear()sofa::gl::component::shader::LightManager; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_ambientsofa::gl::component::shader::LightManager; d_componentStatesofa::core::objectmodel::Base; d_drawIsEnabledsofa::gl::component::shader::LightManager; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; d_shadowsEnabledsofa::gl::component::shader::LightManager; d_softShadowsEnabledsofa::gl::component::shader::LightManager; doInitVisual(const core::visual::VisualParams *vparams) overridesofa::gl::component::shader::LightManagervirtual",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_light_manager-members.html:2459,clear,clear,2459,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_light_manager-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_light_manager-members.html,1,['clear'],['clear']
Usability,"ata * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; associateObject(ComponentType *object)sofa::core::BaseMatrixAccumulatorComponent< c >inline; Base()sofa::core::objectmodel::Baseprotected; BaseMatrixAccumulatorComponent()sofa::core::BaseMatrixAccumulatorComponent< c >inline; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; ComponentType typedefsofa::core::BaseMatrixAccumulatorComponent< c >; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, cons",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_base_matrix_accumulator_component-members.html:2089,clear,clearLoggedMessages,2089,api/master/sofa/html/classsofa_1_1core_1_1_base_matrix_accumulator_component-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_base_matrix_accumulator_component-members.html,1,['clear'],['clearLoggedMessages']
Usability,"ataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::component::playback::CompareTopologyinlinestatic; sofa::component::playback::ReadTopology::canCreate(T *obj, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::component::playback::ReadTopologyinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; CompareTopology()sofa::component::playback::CompareTopologyprotected; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_filenamesofa::component::playback::ReadTopology; d_intervalsofa::component::playback::ReadTopology; d_loopsofa::component::playback::ReadTopology; d_messageLogCountsofa::core::objectmodel::Basemutable; d_shiftsofa::component::playback::ReadTopology; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; edgessofa::component::playback::ReadTopology; EdgesErrorsofa::component::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_compare_topology-members.html:2157,clear,clearLoggedMessages,2157,api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_compare_topology-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_compare_topology-members.html,1,['clear'],['clearLoggedMessages']
Usability,"ataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeInstance(Instance inst) overridesofa::core::collision::Detectioninlineprotectedvirtual; changeInstanceBP(Instance)sofa::core::collision::Detectioninlineprotectedvirtual; changeInstanceNP(Instance)sofa::core::collision::Detectioninlineprotectedvirtual; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; CollisionAlgorithm()sofa::core::collision::CollisionAlgorithminlineprotected; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; Detection()sofa::core::collision::Detectioninlineprotected; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) const",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_detection-members.html:2137,clear,clearLoggedMessages,2137,api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_detection-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_detection-members.html,1,['clear'],['clearLoggedMessages']
Usability,"ataVecCoord &x) overridesofa::component::constraint::lagrangian::model::StopperLagrangianConstraint< DataTypes >virtual; sofa::core::behavior::Constraint::buildConstraintMatrix(const ConstraintParams *cParams, MultiMatrixDerivId cId, unsigned int &cIndex) overridesofa::core::behavior::Constraint< DataTypes >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::Constraint< DataTypes >inlinestatic; sofa::core::behavior::BaseConstraint::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; sofa::computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; sofa::core::behavior::SingleStateAccessor::computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; ConstArea typedefsofa::core::behavior::BaseConstraint; ConstCoord typedefsofa::core::behavior::BaseConstraint; ConstDeriv typedefsofa::core::behavior::BaseConstraint; Constraint(MechanicalState< DataTypes > *mm=nullptr)sofa::core::behavior::Constraint< DataTypes >protected; Coord typedefsofa::component::constraint::lagrangian::model::StopperLagrangianConstraint< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_c",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_stopper_lagrangian_constraint-members.html:2750,clear,clearLoggedMessages,2750,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_stopper_lagrangian_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_stopper_lagrangian_constraint-members.html,1,['clear'],['clearLoggedMessages']
Usability,"ataVecCoord &x) overridesofa::component::constraint::lagrangian::model::UniformLagrangianConstraint< DataTypes >virtual; sofa::core::behavior::Constraint::buildConstraintMatrix(const ConstraintParams *cParams, MultiMatrixDerivId cId, unsigned int &cIndex) overridesofa::core::behavior::Constraint< DataTypes >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::Constraint< DataTypes >inlinestatic; sofa::core::behavior::BaseConstraint::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; sofa::computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; sofa::core::behavior::SingleStateAccessor::computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; ConstArea typedefsofa::core::behavior::BaseConstraint; ConstCoord typedefsofa::core::behavior::BaseConstraint; ConstDeriv typedefsofa::core::behavior::BaseConstraint; Constraint(MechanicalState< DataTypes > *mm=nullptr)sofa::core::behavior::Constraint< DataTypes >protected; Coord typedefsofa::component::constraint::lagrangian::model::UniformLagrangianConstraint< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_c",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_uniform_lagrangian_constraint-members.html:2754,clear,clearLoggedMessages,2754,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_uniform_lagrangian_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_uniform_lagrangian_constraint-members.html,1,['clear'],['clearLoggedMessages']
Usability,"ate direction vector vFrom to direction vector vTo. ; vFrom and vTo are assumed to be normalized. . Function details. ◆ angularDisplacement(). template<class Real > . auto sofa::type::Quat< Real >::angularDisplacement ; (; const Quat< Real > & ; a, . const Quat< Real > & ; b . ); -> Vec3. static . Return the eulerian vector resulting of the movement between 2 quaternions. . ◆ axisToQuat(). template<class Real > . auto sofa::type::Quat< Real >::axisToQuat ; (; Vec3 ; a, . Real ; phi . ); -> Quat. Given an axis and angle, compute quaternion. ; This function computes a quaternion based on an axis (defined by the given vector) and an angle about which to rotate. The angle is expressed in radians. . ◆ buildRotationMatrix(). template<class Real > . constexpr void sofa::type::Quat< Real >::buildRotationMatrix ; (; Real ; m[4][4]); const. inlineconstexpr . A useful function, builds a rotation matrix in Matrix based on given quaternion. . ◆ clear(). template<class Real > . void sofa::type::Quat< Real >::clear ; (; ). inline . ◆ createFromRotationVector() [1/2]. template<class Real > . auto sofa::type::Quat< Real >::createFromRotationVector ; (; const Vec3 & ; a); -> Quat. static . Create using rotation vector (axis*angle) given in parent coordinates. . ◆ createFromRotationVector() [2/2]. template<class Real > . auto sofa::type::Quat< Real >::createFromRotationVector ; (; Real ; a0, . Real ; a1, . Real ; a2 . ); -> Quat. static . Create using the entries of a rotation vector (axis*angle) given in parent coordinates. . ◆ createQuaterFromEuler(). template<class Real > . auto sofa::type::Quat< Real >::createQuaterFromEuler ; (; const Vec3 & ; v, . EulerOrder ; order = EulerOrder::ZYX . ); -> Quat. static . ◆ createQuaterFromFrame(). template<class Real > . auto sofa::type::Quat< Real >::createQuaterFromFrame ; (; const Vec3 & ; lox, . const Vec3 & ; loy, . const Vec3 & ; loz . ); -> Quat. static . ◆ fromEuler(). template<class Real > . auto sofa::type::Quat< Real >::fromEuler ; (",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_quat.html:8076,clear,clear,8076,api/master/sofa/html/classsofa_1_1type_1_1_quat.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_quat.html,1,['clear'],['clear']
Usability,"ate(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyTransformation(sofa::type::Matrix4 const &T)sofa::core::loader::MeshLoadervirtual; Base()sofa::core::objectmodel::Baseprotected; BaseLoader()sofa::core::loader::BaseLoaderprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; canLoad() overridesofa::core::loader::MeshLoadervirtual; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear()sofa::component::io::mesh::OffSequenceLoader; clearBuffers() finalsofa::core::loader::MeshLoaderprotectedvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; copyMeshToData(helper::io::Mesh &_mesh)sofa::core::loader::MeshLoaderprotected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_createSubelementssofa::core::loader::MeshLoader; d_edgessofa::core::loader::MeshLoader; d_edgesGroupssofa::core::loader::MeshLoader; d_filenamesofa::core::loader::BaseLoader; d_flipNormalssofa::core::loader::MeshLoader; d_hexahedrasofa::core::loader::MeshLoader; d_hexahedraGroupssofa::core::loader::MeshLoader; d_highOrderEdgePositionssofa::core::loader::MeshLoader; d_highOrderHexahedronPositionssofa:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_off_sequence_loader-members.html:4795,clear,clearBuffers,4795,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_off_sequence_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_off_sequence_loader-members.html,1,['clear'],['clearBuffers']
Usability,"atenation of directories separated by : on linux / mac and ; on windows . Protected Attributes; std::string directAccessProtocolPrefix;  ; std::vector< std::string > vpath;  Vector of paths. More...;  . Public Member Functions;  FileRepository ();  ;  FileRepository (const char *envVar);  ;  FileRepository (const char *envVar, const char *relativePath);  ;  FileRepository (const char *envVar, const std::vector< std::string > &paths);  ;  FileRepository (const char *envVar, const char *relativePath, const fileKeysMap &iniFilesAndKeys);  ;  FileRepository (const char *envVar, const std::vector< std::string > &paths, const fileKeysMap &iniFilesAndKeys);  ;  ~FileRepository ();  ; void addFirstPath (const std::string &path);  Adds a path to the front of the set of paths. More...;  ; void addLastPath (const std::string &path);  Adds a path to the back of the set of paths. More...;  ; void removePath (const std::string &path);  Remove a path of the set of paths. More...;  ; void clear ();  Remove all known paths. More...;  ; std::string getFirstPath ();  Get the first path into the set of paths. More...;  ; const std::vector< std::string > & getPaths () const;  ; const std::string getPathsJoined ();  ; const std::string & getDirectAccessProtocolPrefix () const;  ; void setDirectAccessProtocolPrefix (const std::string &protocolPrefix);  ; bool findFile (std::string &filename, const std::string &basedir="""", std::ostream *errlog=&std::cerr);  ; std::string getFile (std::string filename, const std::string &basedir="""", std::ostream *errlog=&std::cerr);  ; bool findFileFromFile (std::string &filename, const std::string &basefile, std::ostream *errlog=&std::cerr);  ; void print ();  Print the list of path to std::cout. More...;  ; void displayPaths () const;  ; const std::string getTempPath () const;  . Static Public Member Functions; static std::string cleanPath (const std::string &path);  ; static std::string relativeToPath (std::string path, std::string refPath);  ; static ch",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1system_1_1_file_repository.html:2031,clear,clear,2031,api/master/sofa/html/classsofa_1_1helper_1_1system_1_1_file_repository.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1system_1_1_file_repository.html,1,['clear'],['clear']
Usability,ator issues – SOFA. SOFA - Topic Tag: qt creator issues. /qtsofa; . /feed; ; qtSofa – SOFA. SOFA - Topic Tag: qtSofa. /raleigh-damping; . /feed; ; raleigh damping – SOFA. SOFA - Topic Tag: raleigh damping. /rayleigh-damping; . /feed; ; Rayleigh damping – SOFA. SOFA - Topic Tag: Rayleigh damping. /reaction-force; . /feed; ; reaction force – SOFA. SOFA - Topic Tag: reaction force. /realistic; . /feed; ; realistic – SOFA. SOFA - Topic Tag: realistic. /realtime; . /feed; ; realtime – SOFA. SOFA - Topic Tag: realtime. /real-time; . /feed; ; real-time – SOFA. SOFA - Topic Tag: real-time. /record; . /feed; ; record – SOFA. SOFA - Topic Tag: record. /recordedcamera; . /feed; ; RecordedCamera – SOFA. SOFA - Topic Tag: RecordedCamera. /recording; . /feed; ; Recording – SOFA. SOFA - Topic Tag: Recording. /refine-coarse; . /feed; ; refine coarse – SOFA. SOFA - Topic Tag: refine coarse. /registry; . /feed; ; Registry – SOFA. SOFA - Topic Tag: Registry. /reinforcement-learning; . /feed; ; Reinforcement learning – SOFA. SOFA - Topic Tag: Reinforcement learning. /release; . /feed; ; Release – SOFA. SOFA - Topic Tag: Release. /removed-object; . /feed; ; removed object – SOFA. SOFA - Topic Tag: removed object. /removetrianglespostprocessing; . /feed; ; removeTrianglesPostProcessing – SOFA. SOFA - Topic Tag: removeTrianglesPostProcessing. /rendering; . /feed; ; rendering – SOFA. SOFA - Topic Tag: rendering. /rep; . /feed; ; Rep – SOFA. SOFA - Topic Tag: Rep. /reset-sofa-using-code; . /feed; ; Reset SOFA using code. – SOFA. SOFA - Topic Tag: Reset SOFA using code. /rigid; . /feed; ; rigid – SOFA. SOFA - Topic Tag: rigid. /rigid-body; . /feed; ; rigid body – SOFA. SOFA - Topic Tag: rigid body. /rigidify; . /feed; ; rigidify – SOFA. SOFA - Topic Tag: rigidify. /rigidmapping-beamfemforcefield-geomagicdevice; . /feed; ; Rigidmapping BeamFEMForceField GeomagicDevice – SOFA. SOFA - Topic Tag: Rigidmapping BeamFEMForceField GeomagicDevice. /rigif; . /feed; ; rigif – SOFA. SOFA - Topic Tag: ri,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:467991,learn,learning,467991,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['learn'],['learning']
Usability,"atrix and reset all values to 0. More...;  ; Index rowSize (void) const override;  Number of rows. More...;  ; Index colSize (void) const override;  Number of columns. More...;  ; Index rowBSize (void) const;  ; Index colBSize (void) const;  ; const Block & bloc (Index i) const;  ; const Block & bloc (Index i, Index j) const;  ; Block * wbloc (Index i);  ; Block * wbloc (Index i, Index j);  ; SReal element (Index i, Index j) const override;  Read the value of the element at row i, column j (using 0-based indices) More...;  ; void set (Index i, Index j, double v) override;  Write the value of the element at row i, column j (using 0-based indices) More...;  ; void setB (Index i, const Block &b);  ; void setB (Index i, Index j, const Block &b);  ; void add (Index i, Index j, double v) override;  Add v to the existing value of the element at row i, column j (using 0-based indices) More...;  ; void addB (Index i, const Block &b);  ; void addB (Index i, Index j, const Block &b);  ; void clear (Index i, Index j) override;  ; void clearRow (Index i) override;  Reset all the values in row i to 0. More...;  ; void clearCol (Index j) override;  Reset the all values in column j to 0. More...;  ; void clearRowCol (Index i) override;  Reset the value of both row and column i to 0. More...;  ; void clear () override;  Reset all values to 0. More...;  ; void invert ();  ; template<class Real2 > ; void mul (FullVector< Real2 > &res, const FullVector< Real2 > &v) const;  ; template<class Real2 > ; FullVector< Real2 > operator* (const FullVector< Real2 > &v) const;  ; virtual void add (Index row, Index col, double v)=0;  Add v to the existing value of the element at row i, column j (using 0-based indices) More...;  ; virtual void add (Index row, Index col, const type::Mat3x3d &_M);  Adding values from a 3x3d matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat3x3f &_M);  Adding values from a 3x3f matrix",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_diagonal_matrix.html:1892,clear,clear,1892,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_diagonal_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_diagonal_matrix.html,2,['clear'],"['clear', 'clearRow']"
Usability,"atrix< T >; begin() constsofa::linearalgebra::FullMatrix< T >; blocAdd(Index i, Index j, const T *buffer)sofa::linearalgebra::BaseMatrixinline; blocCreate(Index i, Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; blocElements(Index i, Index j, T *buffer) constsofa::linearalgebra::BaseMatrixinline; blocGet(Index i, Index j) constsofa::linearalgebra::BaseMatrixinlinevirtual; blocGetW(Index i, Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; blocSet(Index i, Index j, const T *buffer)sofa::linearalgebra::BaseMatrixinline; bRowBegin(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowEnd(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowRange(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsBegin() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsEnd() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowSize() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsRange() constsofa::linearalgebra::BaseMatrixinlinevirtual; clear(Index i, Index j) overridesofa::linearalgebra::FullMatrix< T >virtual; clear() overridesofa::linearalgebra::FullMatrix< T >virtual; clearCol(Index j) overridesofa::linearalgebra::FullMatrix< T >virtual; clearCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRow(Index i) overridesofa::linearalgebra::FullMatrix< T >virtual; clearRowCol(Index i) overridesofa::linearalgebra::FullMatrix< T >virtual; clearRows(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowsCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; cols(void) constsofa::linearalgebra::BaseMatrixinline; colSize(void) const overridesofa::linearalgebra::FullMatrix< T >inlinevirtual; compress()sofa::linearalgebra::BaseMatrixvirtual; createBlockAccessor(Index row, Index col, void *internalPtr=nullptr)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockAccessor(Index row, Index col, Index internalData)sofa::linearalgebra::BaseMatrixinlineprotected;",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_full_matrix-members.html:5683,clear,clear,5683,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_full_matrix-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_full_matrix-members.html,2,['clear'],['clear']
Usability,"aultPolicystatic; bloc(Index i, Index j) constsofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >inline; Block typedefsofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >; block(Index i, Index j) constsofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >inline; blockMultTranspose(const TBlock &blockA, const TBlock &blockB)sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >inlinestatic; BlockTranspose typedefsofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >; btempsofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >; category enum valuesofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >; check_matrix()sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >inline; check_matrix(Index nzmax, Index m, Index n, Index *a_p, Index *a_i, Block *a_x)sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >inlinestatic; clear()sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >inline; ClearByZerossofa::linearalgebra::CRSDefaultPolicystatic; clearColBlock(Index j)sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >inline; clearRowBlock(Index i)sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >inline; clearRowColBlock(Index i)sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >inline; colBSize() constsofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >inline; colsIndexsofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >; colsValuesofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >; compress()sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >inline; compressBtemp()sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >inlineprotected; compressCSR()sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >inlinepro",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_generic-members.html:3876,clear,clear,3876,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_generic-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_generic-members.html,1,['clear'],['clear']
Usability,"aulttype::SolidTypes< R >::Wrench, including all inherited members. clear()sofa::type::SpatialVector< TReal >; cross(const SpatialVector &v) constsofa::type::SpatialVector< TReal >; freeVecsofa::type::SpatialVector< TReal >; getAngularVelocity()sofa::type::SpatialVector< TReal >inline; getAngularVelocity() constsofa::type::SpatialVector< TReal >inline; getForce()sofa::type::SpatialVector< TReal >inline; getForce() constsofa::type::SpatialVector< TReal >inline; getLinearVelocity()sofa::type::SpatialVector< TReal >inline; getLinearVelocity() constsofa::type::SpatialVector< TReal >inline; getTorque()sofa::type::SpatialVector< TReal >inline; getTorque() constsofa::type::SpatialVector< TReal >inline; lineVecsofa::type::SpatialVector< TReal >; Mat66 typedefsofa::type::SpatialVector< TReal >; operator*(Real a) constsofa::type::SpatialVector< TReal >inline; operator*(const SpatialVector &v) constsofa::type::SpatialVector< TReal >; operator*(const Mat66 &) constsofa::type::SpatialVector< TReal >; operator*=(Real a)sofa::type::SpatialVector< TReal >inline; operator+(const SpatialVector &v) constsofa::type::SpatialVector< TReal >; operator+=(const SpatialVector &v)sofa::type::SpatialVector< TReal >; operator-(const SpatialVector &v) constsofa::type::SpatialVector< TReal >; operator-() constsofa::type::SpatialVector< TReal >; Real typedefsofa::type::SpatialVector< TReal >; setAngularVelocity(const Vec &v)sofa::type::SpatialVector< TReal >inline; setForce(const Vec &v)sofa::type::SpatialVector< TReal >inline; setLinearVelocity(const Vec &v)sofa::type::SpatialVector< TReal >inline; setTorque(const Vec &v)sofa::type::SpatialVector< TReal >inline; SpatialVector()=defaultsofa::type::SpatialVector< TReal >; SpatialVector(const Vec &l, const Vec &f)sofa::type::SpatialVector< TReal >; Vec typedefsofa::type::SpatialVector< TReal >; Wrench(const Vec3 &force, const Vec3 &torque)sofa::defaulttype::SolidTypes< R >::Wrenchinline. Generated on Mon Nov 11 2024 03:18:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1defaulttype_1_1_solid_types_1_1_wrench-members.html:275,clear,clear,275,api/master/sofa/html/classsofa_1_1defaulttype_1_1_solid_types_1_1_wrench-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1defaulttype_1_1_solid_types_1_1_wrench-members.html,1,['clear'],['clear']
Usability,"avesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkConnexity() overridesofa::component::topology::container::dynamic::HexahedronSetTopologyContainervirtual; checkTopology() const overridesofa::component::topology::container::dynamic::HexahedronSetTopologyContainervirtual; cleanEdgeTopologyFromDirty()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; cleanHexahedronTopologyFromDirty()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; cleanPointTopologyFromDirty()sofa::component::topology::container::dynamic::PointSetTopologyContainerprotected; cleanQuadTopologyFromDirty()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear() overridesofa::component::topology::container::dynamic::HexahedronSetTopologyContainervirtual; clearEdges()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearEdgesAroundVertex()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearEdgesInHexahedron()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearEdgesInQuad()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; clearHexahedra()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearHexahedraAroundEdge()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearHexahedraAroundQuad()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearHexahedraAroundVertex()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearLoggedMessages() constsofa::core::objectmodel::Base; clearQuads()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprote",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_container-members.html:4381,clear,clearEdges,4381,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_container-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_container-members.html,2,['clear'],['clearEdges']
Usability,"avior::BaseForceFieldprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; buildDampingMatrix(core::behavior::DampingMatrix *) finalsofa::component::collision::response::contact::PenalityContactForceField< DataTypes >virtual; buildStiffnessMatrix(core::behavior::StiffnessMatrix *matrix) overridesofa::component::collision::response::contact::PenalityContactForceField< DataTypes >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::PairInteractionForceField< DataTypes >inlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear(sofa::Size reserve=0)sofa::component::collision::response::contact::PenalityContactForceField< DataTypes >; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; Contact typedefsofa::component::collision::response::contact::PenalityContactForceField< DataTypes >; contactssofa::component::collision::response::contact::PenalityContactForceField< DataTypes >; Coord typedefsofa::component::collision::response::contact::PenalityContactForceField< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::core::behavior::PairInteractionForceField< DataTypes >inlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemu",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_penality_contact_force_field-members.html:4385,clear,clear,4385,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_penality_contact_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_penality_contact_force_field-members.html,1,['clear'],['clear']
Usability,"b) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowEnd(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowRange(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsBegin() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsEnd() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowSize() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsRange() constsofa::linearalgebra::BaseMatrixinlinevirtual; clear() overridesofa::core::behavior::ApplyConstraintCompatinlinevirtual; sofa::linearalgebra::BaseMatrix::clear(Index i, Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; clearCol(Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; clearCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRow(Index i)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowCol(Index i) overridesofa::core::behavior::ApplyConstraintCompatinlinevirtual; clearRows(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowsCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; cols(void) constsofa::linearalgebra::BaseMatrixinline; colSize() const overridesofa::core::behavior::ApplyConstraintCompatinlinevirtual; componentsofa::core::behavior::ApplyConstraintCompat; compress()sofa::linearalgebra::BaseMatrixvirtual; createBlockAccessor(Index row, Index col, void *internalPtr=nullptr)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockAccessor(Index row, Index col, Index internalData)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockConstAccessor(Index row, Index col, void *internalPtr=nullptr) constsofa::linearalgebra::BaseMatrixinlineprotected; createBlockConstAccessor(Index row, Index col, Index internalData) constsofa::linearalgebra::BaseMatrixinlineprotected; createColBlockConstIterator(Index row, void *internalPtr) constsofa::linearalgebra::BaseMatrixinlineprotected; createColBlockConstIterator(Index row, Index internalData) constsofa::linearalgebra::BaseMatrixinlin",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_apply_constraint_compat-members.html:5506,clear,clearRowsCols,5506,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_apply_constraint_compat-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_apply_constraint_compat-members.html,1,['clear'],['clearRowsCols']
Usability,"bRowBegin(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowEnd(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowRange(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsBegin() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsEnd() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowSize() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsRange() constsofa::linearalgebra::BaseMatrixinlinevirtual; category enum valuesofa::linearalgebra::SparseMatrix< T >; clear(Index i, Index j) overridesofa::linearalgebra::SparseMatrix< T >inlinevirtual; clear() overridesofa::linearalgebra::SparseMatrix< T >inlinevirtual; clearCol(Index j) overridesofa::linearalgebra::SparseMatrix< T >inlinevirtual; clearCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRow(Index i) overridesofa::linearalgebra::SparseMatrix< T >inlinevirtual; clearRowCol(Index i) overridesofa::linearalgebra::SparseMatrix< T >inlinevirtual; clearRows(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowsCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; cols(void) constsofa::linearalgebra::BaseMatrixinline; colSize(void) const overridesofa::linearalgebra::SparseMatrix< T >inlinevirtual; compress()sofa::linearalgebra::BaseMatrixvirtual; createBlockAccessor(Index row, Index col, void *internalPtr=nullptr)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockAccessor(Index row, Index col, Index internalData)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockConstAccessor(Index row, Index col, void *internalPtr=nullptr) constsofa::linearalgebra::BaseMatrixinlineprotected; createBlockConstAccessor(Index row, Index col, Index internalData) constsofa::linearalgebra::BaseMatrixinlineprotected; createColBlockConstIterator(Index row, void *internalPtr) constsofa::linearalgebra::BaseMatrixinlineprotected; createColBlockConstIterator(Index row, Index internalData) constsofa::line",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_sparse_matrix-members.html:6861,clear,clearRows,6861,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_sparse_matrix-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_sparse_matrix-members.html,1,['clear'],['clearRows']
Usability,"bRowsBegin() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsEnd() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowSize() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsRange() constsofa::linearalgebra::BaseMatrixinlinevirtual; choleskysofa::linearalgebra::EigenBaseSparseMatrix< TReal >protected; choleskyDecompose()sofa::linearalgebra::EigenBaseSparseMatrix< TReal >inline; choleskySolve(VectorEigen &x, const VectorEigen &b) constsofa::linearalgebra::EigenBaseSparseMatrix< TReal >inline; clear() overridesofa::linearalgebra::EigenBaseSparseMatrix< TReal >inlinevirtual; sofa::linearalgebra::BaseMatrix::clear(Index i, Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; clearCol(Index col) overridesofa::linearalgebra::EigenBaseSparseMatrix< TReal >inlinevirtual; clearCols(Index imin, Index imax) overridesofa::linearalgebra::EigenBaseSparseMatrix< TReal >inlinevirtual; clearRow(Index i) overridesofa::linearalgebra::EigenBaseSparseMatrix< TReal >inlinevirtual; clearRowCol(Index i) overridesofa::linearalgebra::EigenBaseSparseMatrix< TReal >inlinevirtual; clearRows(Index imin, Index imax) overridesofa::linearalgebra::EigenBaseSparseMatrix< TReal >inlinevirtual; clearRowsCols(Index imin, Index imax) overridesofa::linearalgebra::EigenBaseSparseMatrix< TReal >inlinevirtual; coeffRef(Index i, Index j)sofa::linearalgebra::EigenBaseSparseMatrix< TReal >inline; cols(void) constsofa::linearalgebra::BaseMatrixinline; colSize(void) const overridesofa::linearalgebra::EigenBaseSparseMatrix< TReal >inlinevirtual; compress() overridesofa::linearalgebra::EigenBaseSparseMatrix< TReal >inlinevirtual; CompressedMatrix typedefsofa::linearalgebra::EigenBaseSparseMatrix< TReal >; compressedMatrixsofa::linearalgebra::EigenBaseSparseMatrix< TReal >; copy(const EigenBaseSparseMatrix &m, unsigned nbCol, unsigned shift)sofa::linearalgebra::EigenBaseSparseMatrix< TReal >inline; createBlockAccessor(Index row, Index col, void *internalPtr=nullptr)sofa::linearalgebra::BaseMatrix",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_base_sparse_matrix-members.html:5937,clear,clearRowCol,5937,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_base_sparse_matrix-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_base_sparse_matrix-members.html,1,['clear'],['clearRowCol']
Usability,"bboxsofa::component::visual::VisualModelImpl; blendEqsofa::gl::component::rendering3d::OglModelprotected; blendEquationsofa::gl::component::rendering3d::OglModelprotected; blendTransparencysofa::gl::component::rendering3d::OglModel; bwdDraw(core::visual::VisualParams *) overridesofa::gl::component::shader::OglShaderVisualModelvirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; canUsePatchessofa::gl::component::rendering3d::OglModelprotected; castShadowsofa::component::visual::VisualModelImpl; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *params, bool=false) overridesofa::component::visual::VisualModelImplvirtual; VisualState< defaulttype::Vec3Types >::computeBBox() constsofa::core::State< TDataTypes >; computeBitangent(const Coord &v1, const Coord &v2, const Coord &v3, const TexCoord &t1, const TexCoord &t2, const TexCoord &t3)sofa::component::visual::VisualModelImplstatic; computeMesh()sofa::component::visual::VisualModelImplvirtual; computeNormals()sofa::component::visual::VisualModelImplvirtual; computePositions()sofa::component::visual::VisualModelImplvirtual; computeRestNormals()sofa::gl::component::shader::OglShaderVisualModel; computeRestPositions()sofa::gl::component::shader::OglShaderVisualModel; computeTangent(const Coord &v1, const Coord &v2, const Coord &v3, const TexCoord &t1, const TexCoord &t2, const TexCoord &t3)sofa::component::visual::VisualModelImplstatic; computeTangents()sofa::component::visual::VisualModelImpl",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_visual_model-members.html:3671,clear,clearVisual,3671,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_visual_model-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_visual_model-members.html,1,['clear'],['clearVisual']
Usability,"beginChange() constsofa::core::topology::BaseMeshTopologyvirtual; beginStateChange() constsofa::core::topology::BaseMeshTopologyvirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeGridResolutionPostProcess() overridesofa::component::topology::container::grid::RegularGridTopologyprotectedvirtual; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkConnexity() overridesofa::component::topology::container::constant::MeshTopologyvirtual; checkGridResolution()sofa::component::topology::container::grid::GridTopologyprotected; checkTopology() constsofa::core::topology::BaseMeshTopologyinlinevirtual; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear() overridesofa::component::topology::container::constant::MeshTopologyvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeEdgeList()sofa::component::topology::container::grid::GridTopologyprotectedvirtual; computeHexaList()sofa::component::topology::container::grid::GridTopologyprotectedvirtual; computePointList()sofa::component::topology::container::grid::GridTopologyprotectedvirtual; computeQuadList()sofa::component::topology::container::grid::GridTopologyprotectedvirtual; computeRelativeOrientationInQuad(const PointID ind_p0, const PointID ind_p1, const PointID ind_q)sofa::component::topology::container::constant::MeshTopology; computeRelativeOrientationInTri(const PointID ind_p0, const PointID ind_p1, const PointID ind_t)sofa::component::topology::container::constant::MeshTopology; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::log",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_regular_grid_topology-members.html:3778,clear,clear,3778,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_regular_grid_topology-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_regular_grid_topology-members.html,1,['clear'],['clear']
Usability,"behavior::BaseProjectiveConstraintSetvirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseProjectiveConstraintSet()sofa::core::behavior::BaseProjectiveConstraintSetinlineprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ProjectiveConstraintSet< DataTypes >inlinestatic; sofa::core::behavior::BaseProjectiveConstraintSet::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; Coord typedefsofa::component::constraint::projective::FixedRotationProjectiveConstraint< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_fixedXRotationsofa::component::constraint::projective::FixedRotationProjectiveConstraint< DataTypes >protected; d_fixedYRotationsofa::component::constraint::projective::FixedRotationProjectiveConstraint< DataTypes >protected; d_fixedZRotationsofa::component::constraint::projective::FixedRotationProjectiveConstraint< DataTypes >protected; d_messageLogCountsofa::core::objectmodel::Basemutable; DataMatrixDeriv typedefsofa::c",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_rotation_projective_constraint-members.html:2850,clear,clearLoggedMessages,2850,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_rotation_projective_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_rotation_projective_constraint-members.html,1,['clear'],['clearLoggedMessages']
Usability,"behavior::BaseProjectiveConstraintSetvirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseProjectiveConstraintSet()sofa::core::behavior::BaseProjectiveConstraintSetinlineprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ProjectiveConstraintSet< DataTypes >inlinestatic; sofa::core::behavior::BaseProjectiveConstraintSet::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; Coord typedefsofa::component::constraint::projective::ParabolicProjectiveConstraint< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_indicessofa::component::constraint::projective::ParabolicProjectiveConstraint< DataTypes >protected; d_messageLogCountsofa::core::objectmodel::Basemutable; d_P1sofa::component::constraint::projective::ParabolicProjectiveConstraint< DataTypes >protected; d_P2sofa::component::constraint::projective::ParabolicProjectiveConstraint< DataTypes >protected; d_P3sofa::component::constraint::projective::ParabolicProjectiveConstraint< D",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_parabolic_projective_constraint-members.html:2956,clear,clearLoggedMessages,2956,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_parabolic_projective_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_parabolic_projective_constraint-members.html,1,['clear'],['clearLoggedMessages']
Usability,"behavior::BaseProjectiveConstraintSetvirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseProjectiveConstraintSet()sofa::core::behavior::BaseProjectiveConstraintSetinlineprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ProjectiveConstraintSet< DataTypes >inlinestatic; sofa::core::behavior::BaseProjectiveConstraintSet::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; Coord typedefsofa::component::constraint::projective::PositionBasedDynamicsProjectiveConstraint< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; d_old_positionsofa::component::constraint::projective::PositionBasedDynamicsProjectiveConstraint< DataTypes >; d_positionsofa::component::constraint::projective::PositionBasedDynamicsProjectiveConstraint< DataTypes >; d_stiffnesssofa::component::constraint::projective::PositionBasedDynamicsProjectiveConstraint< DataTypes >; d_velocitysofa::component::constraint:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_position_based_dynamics_projective_constraint-members.html:2866,clear,clearLoggedMessages,2866,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_position_based_dynamics_projective_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_position_based_dynamics_projective_constraint-members.html,1,['clear'],['clearLoggedMessages']
Usability,"behavior::BaseProjectiveConstraintSetvirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseProjectiveConstraintSet()sofa::core::behavior::BaseProjectiveConstraintSetinlineprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ProjectiveConstraintSet< DataTypes >inlinestatic; sofa::core::behavior::BaseProjectiveConstraintSet::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; Coord typedefsofa::core::behavior::ProjectiveConstraintSet< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; DataMatrixDeriv typedefsofa::core::behavior::ProjectiveConstraintSet< DataTypes >; DataVecCoord typedefsofa::core::behavior::ProjectiveConstraintSet< DataTypes >; DataVecDeriv typedefsofa::core::behavior::ProjectiveConstraintSet< DataTypes >; Deriv typedefsofa::core::behavior::ProjectiveConstraintSet< DataTypes >; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const cor",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_projective_constraint_set-members.html:2792,clear,clearLoggedMessages,2792,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_projective_constraint_set-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_projective_constraint_set-members.html,1,['clear'],['clearLoggedMessages']
Usability,"behavior::MassMatrixAccumulator::add(sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 1, 1, float > &value)sofa::core::MatrixAccumulatorInterfacevirtual; sofa::core::behavior::MassMatrixAccumulator::add(sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 1, 1, double > &value)sofa::core::MatrixAccumulatorInterfacevirtual; sofa::core::behavior::MassMatrixAccumulator::add(sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 2, 2, float > &value)sofa::core::MatrixAccumulatorInterfacevirtual; sofa::core::behavior::MassMatrixAccumulator::add(sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 2, 2, double > &value)sofa::core::MatrixAccumulatorInterfacevirtual; sofa::core::behavior::MassMatrixAccumulator::add(sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 6, 6, float > &value)sofa::core::MatrixAccumulatorInterfacevirtual; sofa::core::behavior::MassMatrixAccumulator::add(sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 6, 6, double > &value)sofa::core::MatrixAccumulatorInterfacevirtual; clear() overridesofa::core::ListMatrixAccumulator< MassMatrixAccumulator >inlinevirtual; empty() constsofa::core::ListMatrixAccumulator< MassMatrixAccumulator >inline; getAccumulators() constsofa::core::ListMatrixAccumulator< MassMatrixAccumulator >inline; matAdd(sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< L, C, real > &value)sofa::core::MatrixAccumulatorInterface; push_back(MassMatrixAccumulator *m)sofa::core::ListMatrixAccumulator< MassMatrixAccumulator >inline; remove(MassMatrixAccumulator *m)sofa::core::ListMatrixAccumulator< MassMatrixAccumulator >inline; setIndexCheckerStrategy(std::shared_ptr< matrixaccumulator::IndexVerificationStrategy >)sofa::core::MatrixAccumulatorInterfaceinlinevirtual; size() constsofa::core::ListMatrixAccumulator< MassMatrixAccumulator >inline; ~MatrixAccumulatorInterface()=defaultsofa::core::MatrixAccumulatorInterfacevirtual.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_list_mass_matrix_accumulator-members.html:2007,clear,clear,2007,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_list_mass_matrix_accumulator-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_list_mass_matrix_accumulator-members.html,1,['clear'],['clear']
Usability,"behavior::ProjectiveConstraintSet::projectPosition(const MechanicalParams *mparams, MultiVecCoordId xId) overridesofa::core::behavior::ProjectiveConstraintSet< DataTypes >virtual; projectResponse(const core::MechanicalParams *mparams, DataVecDeriv &resData) overridesofa::component::constraint::projective::FixedTranslationProjectiveConstraint< DataTypes >virtual; sofa::core::behavior::ProjectiveConstraintSet::projectResponse(const MechanicalParams *mparams, MultiVecDerivId dxId) overridesofa::core::behavior::ProjectiveConstraintSet< DataTypes >virtual; sofa::core::behavior::ProjectiveConstraintSet::projectResponse(const MechanicalParams *mparams, MultiVecDerivId dxId)=0sofa::core::behavior::ProjectiveConstraintSet< DataTypes >; sofa::core::behavior::BaseProjectiveConstraintSet::projectResponse(const MechanicalParams *, double **)sofa::core::behavior::BaseProjectiveConstraintSetinlinevirtual; projectResponseT(DataDeriv &dx, const std::function< void(DataDeriv &, const unsigned int)> &clear)sofa::component::constraint::projective::FixedTranslationProjectiveConstraint< DataTypes >protected; projectVelocity(const core::MechanicalParams *mparams, DataVecDeriv &vData) overridesofa::component::constraint::projective::FixedTranslationProjectiveConstraint< DataTypes >virtual; sofa::core::behavior::ProjectiveConstraintSet::projectVelocity(const MechanicalParams *mparams, MultiVecDerivId vId) overridesofa::core::behavior::ProjectiveConstraintSet< DataTypes >virtual; Ptr typedefsofa::core::objectmodel::Base; Real typedefsofa::core::behavior::ProjectiveConstraintSet< DataTypes >; reinit()sofa::core::objectmodel::BaseObjectvirtual; removeData(BaseData *f)sofa::core::objectmodel::Base; removeIndex(Index index)sofa::component::constraint::projective::FixedTranslationProjectiveConstraint< DataTypes >; removeInNode(objectmodel::BaseNode *node) overridesofa::core::behavior::BaseProjectiveConstraintSetvirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; re",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_translation_projective_constraint-members.html:14352,clear,clear,14352,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_translation_projective_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_translation_projective_constraint-members.html,1,['clear'],['clear']
Usability,"ber Functions |; List of all members . sofa::linearalgebra::matrix_bloc_traits< double, IndexType > Class Template Reference . #include <matrix_bloc_traits.h>. Static Public Member Functions; static Real & v (Block &b, IndexType, IndexType);  ; static void vset (Block &b, int, int, Real val);  ; static void vadd (Block &b, int, int, Real val);  ; static const Real & v (const Block &b, IndexType, IndexType);  ; static void clear (Block &b);  ; static bool empty (const Block &b);  ; static void invert (Block &result, const Block &b);  ; template<class TSubBlock , std::enable_if_t< std::is_scalar_v< TSubBlock >, bool > = true> ; static void subBlock (const Block &b, IndexType row, IndexType col, TSubBlock &subBlock);  ; static void split_row_index (IndexType &index, IndexType &modulo);  ; static void split_col_index (IndexType &index, IndexType &modulo);  ; static sofa::linearalgebra::BaseMatrix::ElementType getElementType ();  ; static const std::string Name ();  . Function details. ◆ clear(). template<typename IndexType > . static void sofa::linearalgebra::matrix_bloc_traits< double, IndexType >::clear ; (; Block & ; b). inlinestatic . ◆ empty(). template<typename IndexType > . static bool sofa::linearalgebra::matrix_bloc_traits< double, IndexType >::empty ; (; const Block & ; b). inlinestatic . ◆ getElementType(). template<typename IndexType > . static sofa::linearalgebra::BaseMatrix::ElementType sofa::linearalgebra::matrix_bloc_traits< double, IndexType >::getElementType ; (; ). inlinestatic . ◆ invert(). template<typename IndexType > . static void sofa::linearalgebra::matrix_bloc_traits< double, IndexType >::invert ; (; Block & ; result, . const Block & ; b . ). inlinestatic . ◆ Name(). template<typename IndexType > . static const std::string sofa::linearalgebra::matrix_bloc_traits< double, IndexType >::Name ; (; ). inlinestatic . ◆ split_col_index(). template<typename IndexType > . static void sofa::linearalgebra::matrix_bloc_traits< double, IndexType >::split_col",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1matrix__bloc__traits_3_01double_00_01_index_type_01_4.html:1189,clear,clear,1189,api/master/sofa/html/classsofa_1_1linearalgebra_1_1matrix__bloc__traits_3_01double_00_01_index_type_01_4.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1matrix__bloc__traits_3_01double_00_01_index_type_01_4.html,1,['clear'],['clear']
Usability,"bers. Block typedefsofa::linearalgebra::matrix_bloc_traits< type::Mat< L, C, real >, IndexType >; BlockTranspose typedefsofa::linearalgebra::matrix_bloc_traits< type::Mat< L, C, real >, IndexType >; clear(Block &b)sofa::linearalgebra::matrix_bloc_traits< type::Mat< L, C, real >, IndexType >inlinestatic; empty(const Block &b)sofa::linearalgebra::matrix_bloc_traits< type::Mat< L, C, real >, IndexType >inlinestatic; getElementType()sofa::linearalgebra::matrix_bloc_traits< type::Mat< L, C, real >, IndexType >inlinestatic; invert(Block &result, const Block &b)sofa::linearalgebra::matrix_bloc_traits< type::Mat< L, C, real >, IndexType >inlinestatic; Name()sofa::linearalgebra::matrix_bloc_traits< type::Mat< L, C, real >, IndexType >inlinestatic; NC enum valuesofa::linearalgebra::matrix_bloc_traits< type::Mat< L, C, real >, IndexType >; NL enum valuesofa::linearalgebra::matrix_bloc_traits< type::Mat< L, C, real >, IndexType >; Real typedefsofa::linearalgebra::matrix_bloc_traits< type::Mat< L, C, real >, IndexType >; split_col_index(IndexType &index, IndexType &modulo)sofa::linearalgebra::matrix_bloc_traits< type::Mat< L, C, real >, IndexType >inlinestatic; split_row_index(IndexType &index, IndexType &modulo)sofa::linearalgebra::matrix_bloc_traits< type::Mat< L, C, real >, IndexType >inlinestatic; subBlock(const Block &b, IndexType row, IndexType col, TSubBlock &subBlock)sofa::linearalgebra::matrix_bloc_traits< type::Mat< L, C, real >, IndexType >inlinestatic; v(Block &b, Index row, Index col)sofa::linearalgebra::matrix_bloc_traits< type::Mat< L, C, real >, IndexType >inlinestatic; v(const Block &b, Index row, Index col)sofa::linearalgebra::matrix_bloc_traits< type::Mat< L, C, real >, IndexType >inlinestatic; vadd(Block &b, int row, int col, Real val)sofa::linearalgebra::matrix_bloc_traits< type::Mat< L, C, real >, IndexType >inlinestatic; vset(Block &b, int row, int col, Real val)sofa::linearalgebra::matrix_bloc_traits< type::Mat< L, C, real >, IndexType >inlinestatic. Gene",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1matrix__bloc__traits_3_01type_1_1_mat_3_01_l_00_01_c_00_01real_01_4_00_01_index_type_01_4-members.html:538,clear,clear,538,api/master/sofa/html/classsofa_1_1linearalgebra_1_1matrix__bloc__traits_3_01type_1_1_mat_3_01_l_00_01_c_00_01real_01_4_00_01_index_type_01_4-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1matrix__bloc__traits_3_01type_1_1_mat_3_01_l_00_01_c_00_01real_01_4_00_01_index_type_01_4-members.html,1,['clear'],['clear']
Usability,"bi, . Index ; bj, . Index ; , . Index ;  . ). ◆ asub() [2/2]. template<std::size_t N, typename T > . const BTDMatrix< N, T >::Block & sofa::linearalgebra::BTDMatrix< N, T >::asub ; (; Index ; bi, . Index ; bj, . Index ; , . Index ;  . ); const. ◆ bloc() [1/2]. template<std::size_t N, typename T > . BTDMatrix< N, T >::Block & sofa::linearalgebra::BTDMatrix< N, T >::bloc ; (; Index ; bi, . Index ; bj . ). ◆ bloc() [2/2]. template<std::size_t N, typename T > . const BTDMatrix< N, T >::Block & sofa::linearalgebra::BTDMatrix< N, T >::bloc ; (; Index ; bi, . Index ; bj . ); const. ◆ clear() [1/2]. template<std::size_t N, typename T > . void sofa::linearalgebra::BTDMatrix< N, T >::clear ; (; ). overridevirtual . Reset all values to 0. ; Implements sofa::linearalgebra::BaseMatrix. ◆ clear() [2/2]. template<std::size_t N, typename T > . void sofa::linearalgebra::BTDMatrix< N, T >::clear ; (; Index ; i, . Index ; j . ). overridevirtual . Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearCol(). template<std::size_t N, typename T > . void sofa::linearalgebra::BTDMatrix< N, T >::clearCol ; (; Index ; j). overridevirtual . Reset the all values in column j to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRow(). template<std::size_t N, typename T > . void sofa::linearalgebra::BTDMatrix< N, T >::clearRow ; (; Index ; i). overridevirtual . Reset all the values in row i to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRowCol(). template<std::size_t N, typename T > . void sofa::linearalgebra::BTDMatrix< N, T >::clearRowCol ; (; Index ; i). overridevirtual . Reset the value of both row and column i to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ colSize(). template<std::size_t N, typename T > . BTDMatrix< N, T >::Index sofa::linearalgebra::BTDMatrix< N, T >::colSize ; (; void ; ); const. overridevirtual . Number of columns. ; Implements sofa::linearalgebra::BaseMatrix. ◆ element(). template<std::size_t N, typename T > . SReal so",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_b_t_d_matrix.html:17512,clear,clearCol,17512,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_b_t_d_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_b_t_d_matrix.html,1,['clear'],['clearCol']
Usability,"bi, . Index ; bj . ); const. ◆ clear() [1/2]. template<std::size_t N, typename T > . void sofa::linearalgebra::BTDMatrix< N, T >::clear ; (; ). overridevirtual . Reset all values to 0. ; Implements sofa::linearalgebra::BaseMatrix. ◆ clear() [2/2]. template<std::size_t N, typename T > . void sofa::linearalgebra::BTDMatrix< N, T >::clear ; (; Index ; i, . Index ; j . ). overridevirtual . Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearCol(). template<std::size_t N, typename T > . void sofa::linearalgebra::BTDMatrix< N, T >::clearCol ; (; Index ; j). overridevirtual . Reset the all values in column j to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRow(). template<std::size_t N, typename T > . void sofa::linearalgebra::BTDMatrix< N, T >::clearRow ; (; Index ; i). overridevirtual . Reset all the values in row i to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRowCol(). template<std::size_t N, typename T > . void sofa::linearalgebra::BTDMatrix< N, T >::clearRowCol ; (; Index ; i). overridevirtual . Reset the value of both row and column i to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ colSize(). template<std::size_t N, typename T > . BTDMatrix< N, T >::Index sofa::linearalgebra::BTDMatrix< N, T >::colSize ; (; void ; ); const. overridevirtual . Number of columns. ; Implements sofa::linearalgebra::BaseMatrix. ◆ element(). template<std::size_t N, typename T > . SReal sofa::linearalgebra::BTDMatrix< N, T >::element ; (; Index ; i, . Index ; j . ); const. overridevirtual . Read the value of the element at row i, column j (using 0-based indices) ; Implements sofa::linearalgebra::BaseMatrix. ◆ getAlignedSubMatrix(). template<std::size_t N, typename T > . template<class B > . void sofa::linearalgebra::BTDMatrix< N, T >::getAlignedSubMatrix ; (; Index ; bi, . Index ; bj, . Index ; nrow, . Index ; ncol, . B & ; m . ). ◆ getSubMatrix(). template<std::size_t N, typename T > . template<class B > . void sofa::linearalgebra",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_b_t_d_matrix.html:18078,clear,clearRowCol,18078,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_b_t_d_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_b_t_d_matrix.html,1,['clear'],['clearRowCol']
Usability,"bj, Index nrow, Index ncol, B &m);  ; template<class B > ; void setSubMatrix (Index i, Index j, Index nrow, Index ncol, const B &m);  ; template<class B > ; void setAlignedSubMatrix (Index bi, Index bj, Index nrow, Index ncol, const B &m);  ; void set (Index i, Index j, double v) override;  Write the value of the element at row i, column j (using 0-based indices) More...;  ; void add (Index i, Index j, double v) override;  Add v to the existing value of the element at row i, column j (using 0-based indices) More...;  ; template<std::size_t M = N, std::enable_if_t<(M > 3), int > = 0> ; void add (Index row, Index col, const type::Mat< BSIZE, BSIZE, Real > &v);  ; void clear (Index i, Index j) override;  ; void clearRow (Index i) override;  Reset all the values in row i to 0. More...;  ; void clearCol (Index j) override;  Reset the all values in column j to 0. More...;  ; void clearRowCol (Index i) override;  Reset the value of both row and column i to 0. More...;  ; void clear () override;  Reset all values to 0. More...;  ; template<class Real2 > ; FullVector< Real2 > operator* (const FullVector< Real2 > &v) const;  ;  Public Member Functions inherited from sofa::linearalgebra::BaseMatrix;  BaseMatrix ();  ; virtual ~BaseMatrix ();  ; Index rows (void) const;  Number of rows (Eigen-compatible API) More...;  ; Index cols (void) const;  Number of columns (Eigen-compatible API) More...;  ; SReal operator() (Index i, Index j) const;  Read the value of the element at row i, column j (using 0-based indices). Eigen-compatible API. More...;  ; virtual void add (Index row, Index col, const type::Mat3x3d &_M);  Adding values from a 3x3d matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat3x3f &_M);  Adding values from a 3x3f matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat2x2d &_M);  Adding values from a 2x2",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_b_t_d_matrix.html:2779,clear,clear,2779,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_b_t_d_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_b_t_d_matrix.html,1,['clear'],['clear']
Usability,"bjectDescription & ; desc . ). create a child to the provided node. The parameter ""params"" is for passing specific data argument to the created object (including the node name). . ◆ createChild() [4/4]. NodeSPtr SOFA_SIMPLEAPI_API sofa::simpleapi::createChild ; (; NodeSPtr ; node, . const std::string & ; name, . const std::map< std::string, std::string > & ; params = std::map< std::string, std::string >{} . ). create a child to the provided nodeof given name. The parameter ""params"" is for passing specific data argument to the created object. . ◆ createNode(). NodeSPtr SOFA_SIMPLEAPI_API sofa::simpleapi::createNode ; (; const std::string & ; name). create a child to the provided node. The parameter ""params"" is for passing specific data argument to the created object (including the node name). . ◆ createObject() [1/4]. BaseObject::SPtr sofa::simpleapi::createObject ; (; Node::SPtr ; parent, . BaseObjectDescription & ; desc . ). ◆ createObject() [2/4]. BaseObject::SPtr sofa::simpleapi::createObject ; (; Node::SPtr ; parent, . const std::string & ; type, . const std::map< std::string, std::string > & ; params . ). ◆ createObject() [3/4]. sofa::core::sptr<BaseObject> SOFA_SIMPLEAPI_API sofa::simpleapi::createObject ; (; NodeSPtr ; node, . BaseObjectDescription & ; params . ). Create a sofa object in the provided node. The parameter ""params"" is for passing specific data argument to the created object including the object's type. . ◆ createObject() [4/4]. sofa::core::sptr<BaseObject> SOFA_SIMPLEAPI_API sofa::simpleapi::createObject ; (; NodeSPtr ; node, . const std::string & ; type, . const std::map< std::string, std::string > & ; params = std::map< std::string, std::string >{} . ). create a sofa object in the provided node of the given type. The parameter ""params"" is for passing specific data argument to the created object. . ◆ createRootNode() [1/2]. NodeSPtr SOFA_SIMPLEAPI_API sofa::simpleapi::createRootNode ; (; Simulation * ; s, . const std::string & ; name, . const st",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simpleapi.html:4657,simpl,simpleapi,4657,api/master/sofa/html/namespacesofa_1_1simpleapi.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simpleapi.html,1,['simpl'],['simpleapi']
Usability,"bjectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseMeshTopology()sofa::core::topology::BaseMeshTopologyprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; beginChange() constsofa::core::topology::BaseMeshTopologyvirtual; beginStateChange() constsofa::core::topology::BaseMeshTopologyvirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkConnexity()sofa::core::topology::BaseMeshTopologyinlinevirtual; checkTopology() constsofa::core::topology::BaseMeshTopologyinlinevirtual; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear()sofa::core::topology::BaseMeshTopologyvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; Edge typedefsofa::core::topology::Topology; EdgeID typedefsofa::core::topology::Topology; EdgesAroundVertex typedefsofa::core::topology::BaseMeshTopology; EdgesInHexahedron typedefsofa::core::topology::BaseMeshTopology; EdgesInQuad typedefsofa::core::topology::BaseMeshTopology; ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_base_mesh_topology-members.html:2858,clear,clear,2858,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_base_mesh_topology-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_base_mesh_topology-members.html,1,['clear'],['clear']
Usability,"bjectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseConstraintSet()sofa::core::behavior::BaseConstraintSetprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; buildConstraintMatrix(const ConstraintParams *cParams, MultiMatrixDerivId cId, unsigned int &cIndex)=0sofa::core::behavior::BaseConstraintSetpure virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_constraintIndexsofa::core::behavior::BaseConstraintSet; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::strin",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_constraint_set-members.html:2117,clear,clearLoggedMessages,2117,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_constraint_set-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_constraint_set-members.html,1,['clear'],['clearLoggedMessages']
Usability,"bjectmodel::RenamedData< sofa::type::vector< MappingOrientData > > mapOrient;  ; core::topology::PointData< sofa::type::vector< MappingData > > d_map;  mapper data More...;  ; core::topology::PointData< sofa::type::vector< MappingOrientData > > d_mapOrient;  mapper data for mapped frames More...;  ; VecCoord actualTetraPosition;  ; MatrixType * matrixJ;  ; bool updateJ;  ; VecDeriv actualOut;  TEMP. More...;  ; Out::VecCoord actualPos;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE2(BarycentricMapperTetrahedronSetTopologyRigid, In, Out), SOFA_TEMPLATE2(TopologyBarycentricMapper, In, Out));  ; void clear (std::size_t reserve=0) override;  ; Index addPointInTetra (const Index index, const SReal *baryCoords) override;  ; Index addPointOrientationInTetra (const Index tetraIndex, const sofa::type::Matrix3 baryCoorsOrient);  ; void init (const typename Out::VecCoord &out, const typename In::VecCoord &in) override;  ; void apply (typename Out::VecCoord &out, const typename In::VecCoord &in) override;  ; void applyJ (typename Out::VecDeriv &out, const typename In::VecDeriv &in) override;  ; void applyJT (typename In::VecDeriv &out, const typename Out::VecDeriv &in) override;  ; void applyJT (typename In::MatrixDeriv &out, const typename Out::MatrixDeriv &in) override;  ; const sofa::linearalgebra::BaseMatrix * getJ (int outSize, int inSize) override;  ; void draw (const core::visual::VisualParams *, const typename Out::VecCoord &out, const typename In::VecCoord &in) override;  ; void resize (core::State< Out > *toModel) override;  . Protected Member Functions;  BarycentricMapperTetrahedronSetTopologyRigid (core::topology::BaseMeshTopology *fromTopology, core::topology::BaseMeshTopology *_toTopology);  TEMP. More...;  ; virtual ~BarycentricMapperTetrahedronSetTopologyRigid ();  . Attribute details. ◆ actualOut. template<class In , class Out > . VecDeriv sofa::component::mapping::linear::BarycentricMapperTetrahedronSetTopologyRigid< In, Out >::actualOut. protected . T",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_barycentric_mapper_tetrahedron_set_topology_rigid.html:1675,clear,clear,1675,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_barycentric_mapper_tetrahedron_set_topology_rigid.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_barycentric_mapper_tetrahedron_set_topology_rigid.html,1,['clear'],['clear']
Usability,"bjectprotected; cleanTriangleTopologyFromDirty()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear() overridesofa::component::topology::container::dynamic::TetrahedronSetTopologyContainervirtual; clearBorderElementLists()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; clearEdges()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearEdgesAroundVertex()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearEdgesInTetrahedron()sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainerprotected; clearEdgesInTriangle()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; clearLoggedMessages() constsofa::core::objectmodel::Base; clearTetrahedra()sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainerprotected; clearTetrahedraAroundEdge()sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainerprotected; clearTetrahedraAroundTriangle()sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainerprotected; clearTetrahedraAroundVertex()sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainerprotected; clearTriangles()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; clearTrianglesAroundEdge()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; clearTrianglesAroundVertex()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; clearTrianglesInTetrahedron()sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainerprotected; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container-members.html:5248,clear,clearTetrahedraAroundEdge,5248,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container-members.html,1,['clear'],['clearTetrahedraAroundEdge']
Usability,"bjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; cameraModesofa::component::setting::ViewerSetting; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; ConfigurationSetting()sofa::core::objectmodel::ConfigurationSettingprotected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_cameraModesofa::component::setting::ViewerSetting; d_componentStatesofa::core::objectmodel::Base; d_fullscreensofa::component::setting::ViewerSetting; d_messageLogCountsofa::core::objectmodel::Basemutable; d_objectPickingMethodsofa::component::setting::ViewerSetting; d_resolutionsofa::component::setting::ViewerSetting; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_li",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_viewer_setting-members.html:1944,clear,clearLoggedMessages,1944,api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_viewer_setting-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_viewer_setting-members.html,1,['clear'],['clearLoggedMessages']
Usability,"blic Member Functions;  SparseMatrix ();  ;  SparseMatrix (Index nbRow, Index nbCol);  ; LineIterator begin ();  ; LineIterator end ();  ; LineConstIterator begin () const;  ; LineConstIterator end () const;  ; Line & operator[] (Index i);  ; const Line & operator[] (Index i) const;  ; void resize (Index nbRow, Index nbCol) override;  Resize the matrix and reset all values to 0. More...;  ; Index rowSize (void) const override;  Number of rows. More...;  ; Index colSize (void) const override;  Number of columns. More...;  ; SReal element (Index i, Index j) const override;  Read the value of the element at row i, column j (using 0-based indices) More...;  ; void set (Index i, Index j, double v) override;  Write the value of the element at row i, column j (using 0-based indices) More...;  ; void add (Index i, Index j, double v) override;  Add v to the existing value of the element at row i, column j (using 0-based indices) More...;  ; void clear (Index i, Index j) override;  ; void clearRow (Index i) override;  Reset all the values in row i to 0. More...;  ; void clearCol (Index j) override;  Reset the all values in column j to 0. More...;  ; void clearRowCol (Index i) override;  Reset the value of both row and column i to 0. More...;  ; void clear () override;  Reset all values to 0. More...;  ; template<class Real2 > ; void mul (FullVector< Real2 > &res, const FullVector< Real2 > &v) const;  ; template<class Real2 > ; void addMulTranspose (FullVector< Real2 > &res, const FullVector< Real2 > &v) const;  ; template<class Real2 > ; void mul (FullVector< Real2 > &res, const linearalgebra::BaseVector *v) const;  ; template<class Real2 > ; void addMulTranspose (FullVector< Real2 > &res, const linearalgebra::BaseVector *v) const;  ; template<class Real2 > ; void mul (linearalgebra::BaseVector *res, const FullVector< Real2 > &v) const;  ; template<class Real2 > ; void addMulTranspose (linearalgebra::BaseVector *res, const FullVector< Real2 > &v) const;  ; void mul (linearalg",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_sparse_matrix.html:1731,clear,clear,1731,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_sparse_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_sparse_matrix.html,2,['clear'],"['clear', 'clearRow']"
Usability,"blocCreate(Index i, Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; blocElements(Index i, Index j, T *buffer) constsofa::linearalgebra::BaseMatrixinline; blocGet(Index i, Index j) constsofa::linearalgebra::BaseMatrixinlinevirtual; blocGetW(Index i, Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; blocSet(Index i, Index j, const T *buffer)sofa::linearalgebra::BaseMatrixinline; bRowBegin(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowEnd(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowRange(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsBegin() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsEnd() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowSize() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsRange() constsofa::linearalgebra::BaseMatrixinlinevirtual; category enum valuesofa::linearalgebra::SparseMatrix< T >; clear(Index i, Index j) overridesofa::linearalgebra::SparseMatrix< T >inlinevirtual; clear() overridesofa::linearalgebra::SparseMatrix< T >inlinevirtual; clearCol(Index j) overridesofa::linearalgebra::SparseMatrix< T >inlinevirtual; clearCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRow(Index i) overridesofa::linearalgebra::SparseMatrix< T >inlinevirtual; clearRowCol(Index i) overridesofa::linearalgebra::SparseMatrix< T >inlinevirtual; clearRows(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowsCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; cols(void) constsofa::linearalgebra::BaseMatrixinline; colSize(void) const overridesofa::linearalgebra::SparseMatrix< T >inlinevirtual; compress()sofa::linearalgebra::BaseMatrixvirtual; createBlockAccessor(Index row, Index col, void *internalPtr=nullptr)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockAccessor(Index row, Index col, Index internalData)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockConstAccessor(Index row, Index ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_sparse_matrix-members.html:6473,clear,clear,6473,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_sparse_matrix-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_sparse_matrix-members.html,1,['clear'],['clear']
Usability,"blocSet(Index i, Index j, const T *buffer)sofa::linearalgebra::BaseMatrixinline; bRowBegin(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowEnd(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowRange(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsBegin() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsEnd() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowSize() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsRange() constsofa::linearalgebra::BaseMatrixinlinevirtual; category enum valuesofa::linearalgebra::SparseMatrix< T >; clear(Index i, Index j) overridesofa::linearalgebra::SparseMatrix< T >inlinevirtual; clear() overridesofa::linearalgebra::SparseMatrix< T >inlinevirtual; clearCol(Index j) overridesofa::linearalgebra::SparseMatrix< T >inlinevirtual; clearCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRow(Index i) overridesofa::linearalgebra::SparseMatrix< T >inlinevirtual; clearRowCol(Index i) overridesofa::linearalgebra::SparseMatrix< T >inlinevirtual; clearRows(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowsCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; cols(void) constsofa::linearalgebra::BaseMatrixinline; colSize(void) const overridesofa::linearalgebra::SparseMatrix< T >inlinevirtual; compress()sofa::linearalgebra::BaseMatrixvirtual; createBlockAccessor(Index row, Index col, void *internalPtr=nullptr)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockAccessor(Index row, Index col, Index internalData)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockConstAccessor(Index row, Index col, void *internalPtr=nullptr) constsofa::linearalgebra::BaseMatrixinlineprotected; createBlockConstAccessor(Index row, Index col, Index internalData) constsofa::linearalgebra::BaseMatrixinlineprotected; createColBlockConstIterator(Index row, void *internalPtr) constsofa::linearalgebra::BaseMatrixinlineprot",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_sparse_matrix-members.html:6779,clear,clearRowCol,6779,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_sparse_matrix-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_sparse_matrix-members.html,1,['clear'],['clearRowCol']
Usability,"bloc_traits< float, IndexType > Member List . This is the complete list of members for sofa::linearalgebra::matrix_bloc_traits< float, IndexType >, including all inherited members. Block typedefsofa::linearalgebra::matrix_bloc_traits< float, IndexType >; BlockTranspose typedefsofa::linearalgebra::matrix_bloc_traits< float, IndexType >; clear(Block &b)sofa::linearalgebra::matrix_bloc_traits< float, IndexType >inlinestatic; empty(const Block &b)sofa::linearalgebra::matrix_bloc_traits< float, IndexType >inlinestatic; getElementSize()sofa::linearalgebra::matrix_bloc_traits< float, IndexType >inlinestatic; getElementType()sofa::linearalgebra::matrix_bloc_traits< float, IndexType >inlinestatic; invert(Block &result, const Block &b)sofa::linearalgebra::matrix_bloc_traits< float, IndexType >inlinestatic; Name()sofa::linearalgebra::matrix_bloc_traits< float, IndexType >inlinestatic; NC enum valuesofa::linearalgebra::matrix_bloc_traits< float, IndexType >; NL enum valuesofa::linearalgebra::matrix_bloc_traits< float, IndexType >; Real typedefsofa::linearalgebra::matrix_bloc_traits< float, IndexType >; split_col_index(IndexType &index, IndexType &modulo)sofa::linearalgebra::matrix_bloc_traits< float, IndexType >inlinestatic; split_row_index(IndexType &index, IndexType &modulo)sofa::linearalgebra::matrix_bloc_traits< float, IndexType >inlinestatic; subBlock(const Block &b, IndexType row, IndexType col, TSubBlock &subBlock)sofa::linearalgebra::matrix_bloc_traits< float, IndexType >inlinestatic; v(Block &b, IndexType, IndexType)sofa::linearalgebra::matrix_bloc_traits< float, IndexType >inlinestatic; v(const Block &b, IndexType, IndexType)sofa::linearalgebra::matrix_bloc_traits< float, IndexType >inlinestatic; vadd(Block &b, int, int, Real val)sofa::linearalgebra::matrix_bloc_traits< float, IndexType >inlinestatic; vset(Block &b, int, int, Real val)sofa::linearalgebra::matrix_bloc_traits< float, IndexType >inlinestatic. Generated on Mon Nov 11 2024 03:32:16 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1matrix__bloc__traits_3_01float_00_01_index_type_01_4-members.html:466,clear,clear,466,api/master/sofa/html/classsofa_1_1linearalgebra_1_1matrix__bloc__traits_3_01float_00_01_index_type_01_4-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1matrix__bloc__traits_3_01float_00_01_index_type_01_4-members.html,1,['clear'],['clear']
Usability,"bool sofa::gui::qt::viewer::qt::QtViewer::ready ; (; ). inlineoverridevirtual . true when the viewer keep the hand on the render false when it's not in activity ; Reimplemented from sofa::gui::common::BaseViewer. ◆ redrawn. void sofa::gui::qt::viewer::qt::QtViewer::redrawn ; (; ). overridesignal . ◆ resetView. void sofa::gui::qt::viewer::qt::QtViewer::resetView ; (; ). overrideslot . ◆ resizeGL(). void sofa::gui::qt::viewer::qt::QtViewer::resizeGL ; (; int ; w, . int ; h . ). overrideprotected . ◆ resizeH. void sofa::gui::qt::viewer::qt::QtViewer::resizeH ; (; int ; ). overridesignal . ◆ resizeW. void sofa::gui::qt::viewer::qt::QtViewer::resizeW ; (; int ; ). overridesignal . ◆ saveView. void sofa::gui::qt::viewer::qt::QtViewer::saveView ; (; ). overridevirtualslot . ◆ screenshot(). void sofa::gui::qt::viewer::qt::QtViewer::screenshot ; (; const std::string & ; filename, . int ; compression_level = -1 . ). overridevirtual . Reimplemented from sofa::gui::qt::viewer::SofaViewer. ◆ setSizeH. void sofa::gui::qt::viewer::qt::QtViewer::setSizeH ; (; int ; size). overridevirtualslot . ◆ setSizeW. void sofa::gui::qt::viewer::qt::QtViewer::setSizeW ; (; int ; size). overridevirtualslot . ◆ setView. void sofa::gui::qt::viewer::qt::QtViewer::setView ; (; const type::Vec3 & ; pos, . const type::Quat< SReal > & ; ori . ). overridevirtualslot . ◆ UpdateOBJ(). void sofa::gui::qt::viewer::qt::QtViewer::UpdateOBJ ; (; void ; ). ◆ viewAll(). virtual void sofa::gui::qt::viewer::qt::QtViewer::viewAll ; (; void ; ). inlineoverrideprotectedvirtual . Overloaded from SofaViewer. ; Implements sofa::gui::common::BaseViewer. ◆ viewerName(). static const char* sofa::gui::qt::viewer::qt::QtViewer::viewerName ; (; ). inlinestatic . ◆ wait(). void sofa::gui::qt::viewer::qt::QtViewer::wait ; (; ). inlineoverridevirtual . ask the viewer to resume its activity ; Reimplemented from sofa::gui::common::BaseViewer. sofaguiqtviewerqtQtViewer; Generated on Mon Nov 11 2024 03:26:02 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1viewer_1_1qt_1_1_qt_viewer.html:13265,resume,resume,13265,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1viewer_1_1qt_1_1_qt_viewer.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1viewer_1_1qt_1_1_qt_viewer.html,1,['resume'],['resume']
Usability,"bool isControlPressed () const;  ; virtual void wheelEvent (QWheelEvent *e);  ; virtual void mouseMoveEvent (QMouseEvent *e);  ; virtual void mousePressEvent (QMouseEvent *e);  ; virtual void mouseReleaseEvent (QMouseEvent *e);  ; virtual bool mouseEvent (QMouseEvent *e);  ; virtual void configure (sofa::component::setting::ViewerSetting *viewerConf) override;  ; const std::string screenshotName () override;  ; void setPrefix (const std::string &prefix, bool prependDirectory=true) override;  ; virtual void screenshot (const std::string &filename, int compression_level=-1) override;  ; virtual void setBackgroundImage (std::string imageFileName=std::string(""textures/SOFA_logo.bmp"")) override;  ;  Public Member Functions inherited from sofa::gui::common::BaseViewer;  BaseViewer ();  ; virtual ~BaseViewer ();  ; virtual void drawColourPicking (ColourPickingVisitor::ColourCode);  ; virtual sofa::simulation::Node * getScene ();  ; virtual const std::string & getSceneFileName ();  ; virtual void setSceneFileName (const std::string &f);  ; virtual void setScene (sofa::simulation::Node::SPtr scene, const char *filename=nullptr, bool=false);  ; virtual void setCameraMode (core::visual::VisualParams::CameraType);  ; virtual bool ready ();  ; virtual void wait ();  ask the viewer to resume its activity More...;  ; virtual bool load (void);  Load the viewer. It's the initialisation. More...;  ; virtual bool unload (void);  unload the viewer without delete More...;  ; virtual void viewAll (void)=0;  Recompute viewer's home position so it encompass the whole scene and apply it. More...;  ; virtual void getView (sofa::type::Vec3 &pos, sofa::type::Quat< SReal > &ori) const;  ; virtual void setView (const sofa::type::Vec3 &pos, const sofa::type::Quat< SReal > &ori);  ; virtual void moveView (const sofa::type::Vec3 &pos, const sofa::type::Quat< SReal > &ori);  ; virtual void newView ();  ; virtual void resetView ();  ; virtual void setBackgroundColour (float r, float g, float b);  ; s",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1viewer_1_1_custom_policy_sofa_viewer.html:2403,resume,resume,2403,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1viewer_1_1_custom_policy_sofa_viewer.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1viewer_1_1_custom_policy_sofa_viewer.html,2,['resume'],['resume']
Usability,"bra::BaseMatrixinlinevirtual; bRowEnd(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowRange(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsBegin() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsEnd() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowSize() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsRange() constsofa::linearalgebra::BaseMatrixinlinevirtual; BSIZE enum valuesofa::linearalgebra::BlockDiagonalMatrix< LC, T >; category enum valuesofa::linearalgebra::BlockDiagonalMatrix< LC, T >; clear(Index i, Index j) overridesofa::linearalgebra::BlockDiagonalMatrix< LC, T >inlinevirtual; clear() overridesofa::linearalgebra::BlockDiagonalMatrix< LC, T >inlinevirtual; clearCol(Index j) overridesofa::linearalgebra::BlockDiagonalMatrix< LC, T >inlinevirtual; clearCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRow(Index i) overridesofa::linearalgebra::BlockDiagonalMatrix< LC, T >inlinevirtual; clearRowCol(Index i) overridesofa::linearalgebra::BlockDiagonalMatrix< LC, T >inlinevirtual; clearRows(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowsCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; colBSize(void) constsofa::linearalgebra::BlockDiagonalMatrix< LC, T >inline; cols(void) constsofa::linearalgebra::BaseMatrixinline; colSize(void) const overridesofa::linearalgebra::BlockDiagonalMatrix< LC, T >inlinevirtual; compress()sofa::linearalgebra::BaseMatrixvirtual; createBlockAccessor(Index row, Index col, void *internalPtr=nullptr)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockAccessor(Index row, Index col, Index internalData)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockConstAccessor(Index row, Index col, void *internalPtr=nullptr) constsofa::linearalgebra::BaseMatrixinlineprotected; createBlockConstAccessor(Index row, Index col, Index internalData) constsofa::linearalgebra::BaseMatrixinlineprotected; creat",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_diagonal_matrix-members.html:6723,clear,clearRowCol,6723,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_diagonal_matrix-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_diagonal_matrix-members.html,1,['clear'],['clearRowCol']
Usability,"bra::BaseMatrixinlinevirtual; blocElements(Index i, Index j, T *buffer) constsofa::linearalgebra::BaseMatrixinline; blocGet(Index i, Index j) constsofa::linearalgebra::BaseMatrixinlinevirtual; blocGetW(Index i, Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; blocSet(Index i, Index j, const T *buffer)sofa::linearalgebra::BaseMatrixinline; bRowBegin(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowEnd(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowRange(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsBegin() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsEnd() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowSize() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsRange() constsofa::linearalgebra::BaseMatrixinlinevirtual; clear()=0sofa::linearalgebra::BaseMatrixpure virtual; clear(Index i, Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; clearCol(Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; clearCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRow(Index i)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowCol(Index i)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRows(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowsCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; cols(void) constsofa::linearalgebra::BaseMatrixinline; colSize(void) const =0sofa::linearalgebra::BaseMatrixpure virtual; compress()sofa::linearalgebra::BaseMatrixvirtual; createBlockAccessor(Index row, Index col, void *internalPtr=nullptr)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockAccessor(Index row, Index col, Index internalData)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockConstAccessor(Index row, Index col, void *internalPtr=nullptr) constsofa::linearalgebra::BaseMatrixinlineprotected; createBlockConstAccessor(Index row, Index col, Index internalData) constsofa::linearalgebra::BaseMatrixinlinepr",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_matrix-members.html:4903,clear,clearCols,4903,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_matrix-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_matrix-members.html,1,['clear'],['clearCols']
Usability,"bra::SparseMatrix< T >::addMulTranspose ; (; linearalgebra::BaseVector * ; res, . const linearalgebra::BaseVector * ; v . ); const. inline . ◆ addTo(). template<typename T > . template<class Dest > . void sofa::linearalgebra::SparseMatrix< T >::addTo ; (; Dest * ; dest); const. inline . ◆ begin() [1/2]. template<typename T > . LineIterator sofa::linearalgebra::SparseMatrix< T >::begin ; (; ). inline . ◆ begin() [2/2]. template<typename T > . LineConstIterator sofa::linearalgebra::SparseMatrix< T >::begin ; (; ); const. inline . ◆ clear() [1/2]. template<typename T > . void sofa::linearalgebra::SparseMatrix< T >::clear ; (; ). inlineoverridevirtual . Reset all values to 0. ; Implements sofa::linearalgebra::BaseMatrix. ◆ clear() [2/2]. template<typename T > . void sofa::linearalgebra::SparseMatrix< T >::clear ; (; Index ; i, . Index ; j . ). inlineoverridevirtual . Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearCol(). template<typename T > . void sofa::linearalgebra::SparseMatrix< T >::clearCol ; (; Index ; j). inlineoverridevirtual . Reset the all values in column j to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRow(). template<typename T > . void sofa::linearalgebra::SparseMatrix< T >::clearRow ; (; Index ; i). inlineoverridevirtual . Reset all the values in row i to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRowCol(). template<typename T > . void sofa::linearalgebra::SparseMatrix< T >::clearRowCol ; (; Index ; i). inlineoverridevirtual . Reset the value of both row and column i to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ colSize(). template<typename T > . Index sofa::linearalgebra::SparseMatrix< T >::colSize ; (; void ; ); const. inlineoverridevirtual . Number of columns. ; Implements sofa::linearalgebra::BaseMatrix. ◆ element(). template<typename T > . SReal sofa::linearalgebra::SparseMatrix< T >::element ; (; Index ; i, . Index ; j . ); const. inlineoverridevirtual . Read the value of the eleme",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_sparse_matrix.html:21896,clear,clearCol,21896,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_sparse_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_sparse_matrix.html,1,['clear'],['clearCol']
Usability,"bs. protected . ◆ messageEdit. QTextBrowser* sofa::gui::qt::ModifyObject::messageEdit. protected . ◆ messageTab. QWidget* sofa::gui::qt::ModifyObject::messageTab. protected . Constructor details. ◆ ModifyObject(). sofa::gui::qt::ModifyObject::ModifyObject ; (; void * ; Id, . QTreeWidgetItem * ; item_clicked, . QWidget * ; parent, . const ModifyObjectFlags & ; dialogFlags, . const char * ; name = nullptr, . bool ; modal = false, . Qt::WindowFlags ; f = Qt::WindowType::Widget . ). explicit . ◆ ~ModifyObject(). sofa::gui::qt::ModifyObject::~ModifyObject ; (; ). inlineoverride . Function details. ◆ accept. void sofa::gui::qt::ModifyObject::accept ; (; ). overrideslot . ◆ beginDataModification. void sofa::gui::qt::ModifyObject::beginDataModification ; (; sofa::core::objectmodel::BaseData * ; data). signal . ◆ beginObjectModification. void sofa::gui::qt::ModifyObject::beginObjectModification ; (; sofa::core::objectmodel::Base * ; object). signal . ◆ clearMessages. void sofa::gui::qt::ModifyObject::clearMessages ; (; ). protectedslot . ◆ closeEvent. void sofa::gui::qt::ModifyObject::closeEvent ; (; QCloseEvent * ; ). inlineoverrideslot . ◆ closeNow. void sofa::gui::qt::ModifyObject::closeNow ; (; ). inlineslot . ◆ componentDirty. void sofa::gui::qt::ModifyObject::componentDirty ; (; bool ; ). signal . ◆ createDialog() [1/2]. void sofa::gui::qt::ModifyObject::createDialog ; (; core::objectmodel::Base * ; node). ◆ createDialog() [2/2]. void sofa::gui::qt::ModifyObject::createDialog ; (; core::objectmodel::BaseData * ; data). ◆ dataModified. void sofa::gui::qt::ModifyObject::dataModified ; (; QString ; ). signal . ◆ dialogClosed. void sofa::gui::qt::ModifyObject::dialogClosed ; (; void * ; ). signal . ◆ endDataModification. void sofa::gui::qt::ModifyObject::endDataModification ; (; sofa::core::objectmodel::BaseData * ; data). signal . ◆ endObjectModification. void sofa::gui::qt::ModifyObject::endObjectModification ; (; sofa::core::objectmodel::Base * ; object). signal . ◆ get",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_modify_object.html:4030,clear,clearMessages,4030,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_modify_object.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_modify_object.html,1,['clear'],['clearMessages']
Usability,"bugNodeGraph;  parameter to activate graph logs. False by default. More...;  . Public Member Functions;  SofaWindowDataGraph (QWidget *parent, sofa::simulation::Node *scene);  Default constructor of the Widget, given a QWidget as parent and a pointer to the current simulation scene. More...;  ;  ~SofaWindowDataGraph ();  ; void resetNodeGraph (sofa::simulation::Node *scene);  Method to be called when graph need to be recomputed (like reloading scene). Take a pointer to the root node of the scene. More...;  . Protected Member Functions; void parseSimulationNode (sofa::simulation::Node *node, int posX=0);  Internal method to parse all Sofa component inside a Sofa simulation Node. Will call. More...;  ; size_t addSimulationObject (sofa::core::objectmodel::BaseObject *bObject);  Internal method to create a Node for this sofa BaseObject. More...;  ; void connectNodeData ();  Internal method to create all connection between component on the graph. More...;  ; void clearNodeData ();  Internal method to clear the graph structures. More...;  . Attribute details. ◆ debugNodeGraph. bool sofa::gui::qt::SofaWindowDataGraph::debugNodeGraph. protected . parameter to activate graph logs. False by default. . ◆ m_exceptions. std::vector<std::string> sofa::gui::qt::SofaWindowDataGraph::m_exceptions. protected . List of component name not to be display in the graph. . ◆ m_graphScene. QtNodes::FlowScene* sofa::gui::qt::SofaWindowDataGraph::m_graphScene. protected . Pointer to the graphScene used to store nodes. . ◆ m_graphView. QtNodes::FlowView* sofa::gui::qt::SofaWindowDataGraph::m_graphView. protected . Pointer to the view of the graph. . ◆ m_posX. int sofa::gui::qt::SofaWindowDataGraph::m_posX. protected . Increment position counter on abscissa for Node display. . ◆ m_posY. int sofa::gui::qt::SofaWindowDataGraph::m_posY. protected . Increment position counter on ordinate for Node display. . ◆ m_rootNode. sofa::simulation::Node* sofa::gui::qt::SofaWindowDataGraph::m_rootNode. protecte",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_window_data_graph.html:2392,clear,clearNodeData,2392,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_window_data_graph.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_window_data_graph.html,2,['clear'],"['clear', 'clearNodeData']"
Usability,"c constexpr sofa::Size total_size = 7;  Compile-time constant specifying the number of scalars within this vector (equivalent to the size() method) More...;  ; static constexpr sofa::Size spatial_dimensions = 3;  Compile-time constant specifying the number of dimensions of space (NOT equivalent to total_size for rigids) More...;  . Protected Attributes; Vec3 center;  ; Quat orientation;  . Public Member Functions; constexpr RigidCoord (const Vec3 &posCenter, const Quat &orient);  ; constexpr RigidCoord ();  ; template<typename real2 > ; constexpr RigidCoord (const RigidCoord< 3, real2 > &c);  ; constexpr void clear ();  ; template<typename real2 > ; constexpr void operator= (const RigidCoord< 3, real2 > &c);  ; constexpr void operator= (const Vec3 &p);  ; void operator+= (const Deriv &dg);  ; constexpr RigidCoord< 3, real > operator+ (const Deriv &dg) const;  ; constexpr RigidCoord< 3, real > operator- (const RigidCoord< 3, real > &a) const;  ; constexpr RigidCoord< 3, real > operator+ (const RigidCoord< 3, real > &a) const;  ; constexpr RigidCoord< 3, real > operator- () const;  ; constexpr void operator+= (const RigidCoord< 3, real > &a);  ; template<typename real2 > ; constexpr void operator*= (real2 a);  ; template<typename real2 > ; constexpr void operator/= (real2 a);  ; template<typename real2 > ; constexpr RigidCoord< 3, real > operator* (real2 a) const;  ; template<typename real2 > ; constexpr RigidCoord< 3, real > operator/ (real2 a) const;  ; constexpr Real operator* (const RigidCoord< 3, real > &a) const;  dot product, mostly used to compute residuals as sqrt(x*x) More...;  ; constexpr real norm2 () const;  ; real norm () const;  Euclidean norm. More...;  ; constexpr Vec3 & getCenter ();  ; constexpr Quat & getOrientation ();  ; constexpr const Vec3 & getCenter () const;  ; constexpr const Quat & getOrientation () const;  ; constexpr Vec3 rotate (const Vec3 &v) const;  ; constexpr RigidCoord< 3, real > rotate (const RigidCoord< 3, real > &c) const;  ; co",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1defaulttype_1_1_rigid_coord_3_013_00_01real_01_4.html:1041,clear,clear,1041,api/master/sofa/html/classsofa_1_1defaulttype_1_1_rigid_coord_3_013_00_01real_01_4.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1defaulttype_1_1_rigid_coord_3_013_00_01real_01_4.html,1,['clear'],['clear']
Usability,"cGetW(Index i, Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; blocSet(Index i, Index j, const T *buffer)sofa::linearalgebra::BaseMatrixinline; bRowBegin(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowEnd(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowRange(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsBegin() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsEnd() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowSize() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsRange() constsofa::linearalgebra::BaseMatrixinlinevirtual; clear() overridesofa::core::behavior::ApplyConstraintCompatinlinevirtual; sofa::linearalgebra::BaseMatrix::clear(Index i, Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; clearCol(Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; clearCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRow(Index i)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowCol(Index i) overridesofa::core::behavior::ApplyConstraintCompatinlinevirtual; clearRows(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowsCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; cols(void) constsofa::linearalgebra::BaseMatrixinline; colSize() const overridesofa::core::behavior::ApplyConstraintCompatinlinevirtual; componentsofa::core::behavior::ApplyConstraintCompat; compress()sofa::linearalgebra::BaseMatrixvirtual; createBlockAccessor(Index row, Index col, void *internalPtr=nullptr)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockAccessor(Index row, Index col, Index internalData)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockConstAccessor(Index row, Index col, void *internalPtr=nullptr) constsofa::linearalgebra::BaseMatrixinlineprotected; createBlockConstAccessor(Index row, Index col, Index internalData) constsofa::linearalgebra::BaseMatrixinlineprotected; createColBlockConstIterator(Index row, void ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_apply_constraint_compat-members.html:5340,clear,clearRowCol,5340,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_apply_constraint_compat-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_apply_constraint_compat-members.html,1,['clear'],['clearRowCol']
Usability,"cSet(Index i, Index j, const T *buffer)sofa::linearalgebra::BaseMatrixinline; bRowBegin(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowEnd(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowRange(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsBegin() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsEnd() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowSize() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsRange() constsofa::linearalgebra::BaseMatrixinlinevirtual; BSIZE enum valuesofa::linearalgebra::BlockFullMatrix< N, T >; clear(Index i, Index j) overridesofa::linearalgebra::BlockFullMatrix< N, T >virtual; clear() overridesofa::linearalgebra::BlockFullMatrix< N, T >virtual; clearCol(Index j) overridesofa::linearalgebra::BlockFullMatrix< N, T >virtual; clearCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRow(Index i) overridesofa::linearalgebra::BlockFullMatrix< N, T >virtual; clearRowCol(Index i) overridesofa::linearalgebra::BlockFullMatrix< N, T >virtual; clearRows(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowsCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; cols(void) constsofa::linearalgebra::BaseMatrixinline; colSize(void) const overridesofa::linearalgebra::BlockFullMatrix< N, T >virtual; compress()sofa::linearalgebra::BaseMatrixvirtual; createBlockAccessor(Index row, Index col, void *internalPtr=nullptr)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockAccessor(Index row, Index col, Index internalData)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockConstAccessor(Index row, Index col, void *internalPtr=nullptr) constsofa::linearalgebra::BaseMatrixinlineprotected; createBlockConstAccessor(Index row, Index col, Index internalData) constsofa::linearalgebra::BaseMatrixinlineprotected; createColBlockConstIterator(Index row, void *internalPtr) constsofa::linearalgebra::BaseMatrixinlineprot",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_full_matrix-members.html:5939,clear,clearRowCol,5939,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_full_matrix-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_full_matrix-members.html,1,['clear'],['clearRowCol']
Usability,"cSet(Index i, Index j, const T *buffer)sofa::linearalgebra::BaseMatrixinline; bRowBegin(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowEnd(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowRange(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsBegin() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsEnd() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowSize() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsRange() constsofa::linearalgebra::BaseMatrixinlinevirtual; clear() overridesofa::core::behavior::AddToMatrixCompatMatrix< c >inlinevirtual; sofa::linearalgebra::BaseMatrix::clear(Index i, Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; clearCol(Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; clearCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRow(Index i)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowCol(Index i)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRows(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowsCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; cols(void) constsofa::linearalgebra::BaseMatrixinline; colSize() const overridesofa::core::behavior::AddToMatrixCompatMatrix< c >inlinevirtual; compatibilityMessagesofa::core::behavior::AddToMatrixCompatMatrix< c >static; componentsofa::core::behavior::AddToMatrixCompatMatrix< c >; compress()sofa::linearalgebra::BaseMatrixvirtual; createBlockAccessor(Index row, Index col, void *internalPtr=nullptr)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockAccessor(Index row, Index col, Index internalData)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockConstAccessor(Index row, Index col, void *internalPtr=nullptr) constsofa::linearalgebra::BaseMatrixinlineprotected; createBlockConstAccessor(Index row, Index col, Index internalData) constsofa::linearalgebra::BaseMatrixinlineprotected; createColBlockConstIterator(Index row,",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_add_to_matrix_compat_matrix-members.html:5436,clear,clearRows,5436,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_add_to_matrix_compat_matrix-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_add_to_matrix_compat_matrix-members.html,1,['clear'],['clearRows']
Usability,"calload::OscillatingTorsionPressureForceField< DataTypes >virtual; buildStiffnessMatrix(core::behavior::StiffnessMatrix *matrix) overridesofa::component::mechanicalload::OscillatingTorsionPressureForceField< DataTypes >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ForceField< DataTypes >inlinestatic; sofa::core::behavior::BaseForceField::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; centersofa::component::mechanicalload::OscillatingTorsionPressureForceField< DataTypes >; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; Coord typedefsofa::component::mechanicalload::OscillatingTorsionPressureForceField< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_axissofa::component::mechanicalload::OscillatingTorsionPressureForceField< DataTypes >; d_centersofa::component::mechanicalload::OscillatingTorsionPressureForceField< DataTypes >; d_componentStatesofa::core::objectmodel::Base; d_dmaxsofa::component::mechanicalload::OscillatingTorsionPressureForceField< DataTypes >; d_dminsofa::component::mechanicalload::OscillatingTorsionPressureForceField< DataTypes >; d_frequencysofa::component::mechanicalload::OscillatingTorsionPressure",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_oscillating_torsion_pressure_force_field-members.html:4931,clear,clearLoggedMessages,4931,api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_oscillating_torsion_pressure_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_oscillating_torsion_pressure_force_field-members.html,1,['clear'],['clearLoggedMessages']
Usability,"ccessor *b);  ; static const InternalBlockAccessor * getInternal (const BlockAccessor *b);  ; static InternalColBlockIterator * getInternal (ColBlockConstIterator *b);  ; static const InternalColBlockIterator * getInternal (const ColBlockConstIterator *b);  ; static InternalRowBlockIterator * getInternal (RowBlockConstIterator *b);  ; static const InternalRowBlockIterator * getInternal (const RowBlockConstIterator *b);  . Attribute details. ◆ component. BaseProjectiveConstraintSet* sofa::core::behavior::ApplyConstraintCompat::component { nullptr }. ◆ zeroDirichletCondition. sofa::core::behavior::ZeroDirichletCondition* sofa::core::behavior::ApplyConstraintCompat::zeroDirichletCondition { nullptr }. Function details. ◆ add(). void sofa::core::behavior::ApplyConstraintCompat::add ; (; Index ; row, . Index ; col, . double ; v . ). inlineoverridevirtual . Add v to the existing value of the element at row i, column j (using 0-based indices) ; Implements sofa::linearalgebra::BaseMatrix. ◆ clear(). void sofa::core::behavior::ApplyConstraintCompat::clear ; (; ). inlineoverridevirtual . Reset all values to 0. ; Implements sofa::linearalgebra::BaseMatrix. ◆ clearRowCol(). void sofa::core::behavior::ApplyConstraintCompat::clearRowCol ; (; Index ; i). inlineoverridevirtual . Reset the value of both row and column i to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ colSize(). Index sofa::core::behavior::ApplyConstraintCompat::colSize ; (; ); const. inlineoverridevirtual . Number of columns. ; Implements sofa::linearalgebra::BaseMatrix. ◆ element(). SReal sofa::core::behavior::ApplyConstraintCompat::element ; (; Index ; i, . Index ; j . ); const. inlineoverridevirtual . Read the value of the element at row i, column j (using 0-based indices) ; Implements sofa::linearalgebra::BaseMatrix. ◆ resize(). void sofa::core::behavior::ApplyConstraintCompat::resize ; (; Index ; nbRow, . Index ; nbCol . ). inlineoverridevirtual . Resize the matrix and reset all values to 0. ; Impl",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_apply_constraint_compat.html:13945,clear,clear,13945,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_apply_constraint_compat.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_apply_constraint_compat.html,1,['clear'],['clear']
Usability,"ce framework for multi-physics simuation. sofa::linearalgebra::matrix_bloc_traits< double, IndexType > Member List . This is the complete list of members for sofa::linearalgebra::matrix_bloc_traits< double, IndexType >, including all inherited members. Block typedefsofa::linearalgebra::matrix_bloc_traits< double, IndexType >; BlockTranspose typedefsofa::linearalgebra::matrix_bloc_traits< double, IndexType >; clear(Block &b)sofa::linearalgebra::matrix_bloc_traits< double, IndexType >inlinestatic; empty(const Block &b)sofa::linearalgebra::matrix_bloc_traits< double, IndexType >inlinestatic; getElementType()sofa::linearalgebra::matrix_bloc_traits< double, IndexType >inlinestatic; invert(Block &result, const Block &b)sofa::linearalgebra::matrix_bloc_traits< double, IndexType >inlinestatic; Name()sofa::linearalgebra::matrix_bloc_traits< double, IndexType >inlinestatic; NC enum valuesofa::linearalgebra::matrix_bloc_traits< double, IndexType >; NL enum valuesofa::linearalgebra::matrix_bloc_traits< double, IndexType >; Real typedefsofa::linearalgebra::matrix_bloc_traits< double, IndexType >; split_col_index(IndexType &index, IndexType &modulo)sofa::linearalgebra::matrix_bloc_traits< double, IndexType >inlinestatic; split_row_index(IndexType &index, IndexType &modulo)sofa::linearalgebra::matrix_bloc_traits< double, IndexType >inlinestatic; subBlock(const Block &b, IndexType row, IndexType col, TSubBlock &subBlock)sofa::linearalgebra::matrix_bloc_traits< double, IndexType >inlinestatic; v(Block &b, IndexType, IndexType)sofa::linearalgebra::matrix_bloc_traits< double, IndexType >inlinestatic; v(const Block &b, IndexType, IndexType)sofa::linearalgebra::matrix_bloc_traits< double, IndexType >inlinestatic; vadd(Block &b, int, int, Real val)sofa::linearalgebra::matrix_bloc_traits< double, IndexType >inlinestatic; vset(Block &b, int, int, Real val)sofa::linearalgebra::matrix_bloc_traits< double, IndexType >inlinestatic. Generated on Mon Nov 11 2024 03:32:16 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1matrix__bloc__traits_3_01double_00_01_index_type_01_4-members.html:470,clear,clear,470,api/master/sofa/html/classsofa_1_1linearalgebra_1_1matrix__bloc__traits_3_01double_00_01_index_type_01_4-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1matrix__bloc__traits_3_01double_00_01_index_type_01_4-members.html,1,['clear'],['clear']
Usability,"ch are displayed. More...;  ; void handleEvent (sofa::core::objectmodel::Event *) override;  Handle an event. More...;  ; virtual bool isPrerendered ();  ; bool hasFilledFbo ();  ; std::string getOutputName ();  ;  Public Member Functions inherited from sofa::core::visual::VisualManager;  SOFA_CLASS (VisualManager, VisualModel);  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_visual_manager_secondary_pass.html:5974,clear,clearVisual,5974,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_visual_manager_secondary_pass.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_visual_manager_secondary_pass.html,2,['clear'],"['clear', 'clearVisual']"
Usability,"changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkConnexity() overridesofa::component::topology::container::dynamic::TriangleSetTopologyContainervirtual; checkTopology() const overridesofa::component::topology::container::dynamic::TriangleSetTopologyContainervirtual; cleanEdgeTopologyFromDirty()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; cleanPointTopologyFromDirty()sofa::component::topology::container::dynamic::PointSetTopologyContainerprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanTriangleTopologyFromDirty()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear() overridesofa::component::topology::container::dynamic::TriangleSetTopologyContainervirtual; clearBorderElementLists()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; clearEdges()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearEdgesAroundVertex()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearEdgesInTriangle()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; clearLoggedMessages() constsofa::core::objectmodel::Base; clearTriangles()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; clearTrianglesAroundEdge()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; clearTrianglesAroundVertex()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) cons",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_container-members.html:4211,clear,clearBorderElementLists,4211,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_container-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_container-members.html,1,['clear'],['clearBorderElementLists']
Usability,"chanicalParams *mparams, DataVecDeriv &vData) override;  ; void projectJacobianMatrix (const core::MechanicalParams *mparams, DataMatrixDeriv &cData) override;  ; void applyConstraint (const core::MechanicalParams *mparams, linearalgebra::BaseVector *vector, const sofa::core::behavior::MultiMatrixAccessor *matrix) override;  Project the global Mechanical Vector to constrained space using offset parameter. More...;  ; void applyConstraint (const core::MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix) override;  Project the global Mechanical Matrix to constrained space using offset parameter. More...;  ; void projectMatrix (sofa::linearalgebra::BaseMatrix *, unsigned) override;  ; void applyConstraint (sofa::core::behavior::ZeroDirichletCondition *matrix) override;  ;  Public Member Functions inherited from sofa::component::constraint::projective::FixedProjectiveConstraint< DataTypes >;  SOFA_CLASS (SOFA_TEMPLATE(FixedProjectiveConstraint, DataTypes), SOFA_TEMPLATE(sofa::core::behavior::ProjectiveConstraintSet, DataTypes));  ;  SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER (Vec3, sofa::type::Vec3);  ; void clearConstraints ();  ; void addConstraint (Index index);  ; void removeConstraint (Index index);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void projectPosition (const core::MechanicalParams *mparams, DataVecCoord &xData) override;  ; void computeBBox (const core::ExecParams *params, bool onlyVisible) override;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; bool fixAllDOFs () const;  ;  Public Member Functions inherited from sofa::core::behavior::ProjectiveConstraintSet< DataTypes >;  SOFA_CLASS2 (SOFA_TEMPLATE(ProjectiveConstraintSet, DataTypes), BaseProjectiveConstraintSet, SOFA_TEMPLATE(SingleStateAccessor, DataTypes));  ; virtual bool isActive () const;  if fa",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_partial_fixed_projective_constraint.html:4701,clear,clearConstraints,4701,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_partial_fixed_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_partial_fixed_projective_constraint.html,1,['clear'],['clearConstraints']
Usability,"char *idStr, const char *objStr);  ; static void stepEnd (const char *idStr, const std::string &objStr);  ; template<class T > ; static void stepEnd (const char *idStr, T *obj);  ; static void stepNext (const char *prevIdStr, const char *nextIdStr);  ; static void step (const char *idStr);  ; static void step (const char *idStr, const char *objStr);  ; static void step (const char *idStr, const std::string &objStr);  ; template<class T > ; static void step (const char *idStr, T *obj);  ; static void valSet (IdVal id, double val);  ; static void valAdd (IdVal id, double val);  ; static void valSet (const char *idStr, double val);  ; static void valAdd (const char *idStr, double val);  ; static std::pair< SyncCallBack, void * > setSyncCallBack (SyncCallBack cb, void *userData=nullptr);  . Function details. ◆ begin() [1/2]. void sofa::helper::AdvancedTimer::begin ; (; const char * ; idStr). static . ◆ begin() [2/2]. void sofa::helper::AdvancedTimer::begin ; (; IdTimer ; id). static . ◆ clear(). void sofa::helper::AdvancedTimer::clear ; (; ). static . ◆ clearData(). void sofa::helper::AdvancedTimer::clearData ; (; IdTimer ; id). static . clearDatato clear a specific Timer Data ; Parameters. idIdTimer, id of the timer . ◆ convertOutputType(). AdvancedTimer::outputType sofa::helper::AdvancedTimer::convertOutputType ; (; std::string ; type). static . convertOutputType convert a string to the output type ; Parameters. typestd::string, output type name (example : ""json"") . ReturnsoutputType, output type enum . ◆ end() [1/4]. void sofa::helper::AdvancedTimer::end ; (; const char * ; idStr). static . ◆ end() [2/4]. void sofa::helper::AdvancedTimer::end ; (; IdTimer ; id). static . ◆ end() [3/4]. std::string sofa::helper::AdvancedTimer::end ; (; IdTimer ; id, . double ; time, . double ; dt . ). static . end Override fo the end method in which you can use JSON or old format ; Parameters. idIdTimer, the id of the used timer ; timedouble, current time (from the context) ; timedt, c",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_advanced_timer.html:3992,clear,clear,3992,api/master/sofa/html/classsofa_1_1helper_1_1_advanced_timer.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_advanced_timer.html,1,['clear'],['clear']
Usability,"ck typedefsofa::linearalgebra::BlockDiagonalMatrix< LC, T >; BlockDiagonalMatrix()sofa::linearalgebra::BlockDiagonalMatrix< LC, T >inline; blocSet(Index i, Index j, const T *buffer)sofa::linearalgebra::BaseMatrixinline; bRowBegin(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowEnd(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowRange(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsBegin() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsEnd() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowSize() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsRange() constsofa::linearalgebra::BaseMatrixinlinevirtual; BSIZE enum valuesofa::linearalgebra::BlockDiagonalMatrix< LC, T >; category enum valuesofa::linearalgebra::BlockDiagonalMatrix< LC, T >; clear(Index i, Index j) overridesofa::linearalgebra::BlockDiagonalMatrix< LC, T >inlinevirtual; clear() overridesofa::linearalgebra::BlockDiagonalMatrix< LC, T >inlinevirtual; clearCol(Index j) overridesofa::linearalgebra::BlockDiagonalMatrix< LC, T >inlinevirtual; clearCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRow(Index i) overridesofa::linearalgebra::BlockDiagonalMatrix< LC, T >inlinevirtual; clearRowCol(Index i) overridesofa::linearalgebra::BlockDiagonalMatrix< LC, T >inlinevirtual; clearRows(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowsCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; colBSize(void) constsofa::linearalgebra::BlockDiagonalMatrix< LC, T >inline; cols(void) constsofa::linearalgebra::BaseMatrixinline; colSize(void) const overridesofa::linearalgebra::BlockDiagonalMatrix< LC, T >inlinevirtual; compress()sofa::linearalgebra::BaseMatrixvirtual; createBlockAccessor(Index row, Index col, void *internalPtr=nullptr)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockAccessor(Index row, Index col, Index internalData)sofa::linearalgebra::BaseMatrixinlinepro",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_diagonal_matrix-members.html:6464,clear,clearCol,6464,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_diagonal_matrix-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_diagonal_matrix-members.html,1,['clear'],['clearCol']
Usability,"ck(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseAddResourceRepository()sofa::component::sceneutility::BaseAddResourceRepositoryprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup() overridesofa::component::sceneutility::BaseAddResourceRepositoryvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; d_repositoryPathsofa::component::sceneutility::BaseAddResourceRepository; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_add_data_repository-members.html:2035,clear,clearLoggedMessages,2035,api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_add_data_repository-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_add_data_repository-members.html,3,['clear'],['clearLoggedMessages']
Usability,"ckType typedefsofa::linearalgebra::BTDMatrix< N, T >; blocSet(Index i, Index j, const T *buffer)sofa::linearalgebra::BaseMatrixinline; bRowBegin(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowEnd(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowRange(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsBegin() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsEnd() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowSize() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsRange() constsofa::linearalgebra::BaseMatrixinlinevirtual; BSIZE enum valuesofa::linearalgebra::BTDMatrix< N, T >; BTDMatrix()sofa::linearalgebra::BTDMatrix< N, T >; BTDMatrix(Index nbRow, Index nbCol)sofa::linearalgebra::BTDMatrix< N, T >; clear(Index i, Index j) overridesofa::linearalgebra::BTDMatrix< N, T >virtual; clear() overridesofa::linearalgebra::BTDMatrix< N, T >virtual; clearCol(Index j) overridesofa::linearalgebra::BTDMatrix< N, T >virtual; clearCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRow(Index i) overridesofa::linearalgebra::BTDMatrix< N, T >virtual; clearRowCol(Index i) overridesofa::linearalgebra::BTDMatrix< N, T >virtual; clearRows(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowsCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; cols(void) constsofa::linearalgebra::BaseMatrixinline; colSize(void) const overridesofa::linearalgebra::BTDMatrix< N, T >virtual; compress()sofa::linearalgebra::BaseMatrixvirtual; createBlockAccessor(Index row, Index col, void *internalPtr=nullptr)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockAccessor(Index row, Index col, Index internalData)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockConstAccessor(Index row, Index col, void *internalPtr=nullptr) constsofa::linearalgebra::BaseMatrixinlineprotected; createBlockConstAccessor(Index row, Index col, Index internalData) constsofa::linea",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_b_t_d_matrix-members.html:5849,clear,clearCols,5849,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_b_t_d_matrix-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_b_t_d_matrix-members.html,1,['clear'],['clearCols']
Usability,"cker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseMatrixProjectionMethod(const PairMechanicalStates &states)sofa::component::linearsystem::BaseMatrixProjectionMethod< TMatrix >explicitprotected; BaseMatrixProjectionMethod()=defaultsofa::component::linearsystem::BaseMatrixProjectionMethod< TMatrix >protected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *link)s",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_base_matrix_projection_method-members.html:2215,clear,clearLoggedMessages,2215,api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_base_matrix_projection_method-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_base_matrix_projection_method-members.html,1,['clear'],['clearLoggedMessages']
Usability,"class In , class Out > . void sofa::component::mapping::linear::BarycentricMapperMeshTopology< In, Out >::apply ; (; typename Out::VecCoord & ; out, . const typename In::VecCoord & ; in . ). override . ◆ applyJ(). template<class In , class Out > . void sofa::component::mapping::linear::BarycentricMapperMeshTopology< In, Out >::applyJ ; (; typename Out::VecDeriv & ; out, . const typename In::VecDeriv & ; in . ). override . ◆ applyJT() [1/2]. template<class In , class Out > . void sofa::component::mapping::linear::BarycentricMapperMeshTopology< In, Out >::applyJT ; (; typename In::MatrixDeriv & ; out, . const typename Out::MatrixDeriv & ; in . ). override . ◆ applyJT() [2/2]. template<class In , class Out > . void sofa::component::mapping::linear::BarycentricMapperMeshTopology< In, Out >::applyJT ; (; typename In::VecDeriv & ; out, . const typename Out::VecDeriv & ; in . ). override . ◆ clear(). template<class In , class Out > . void sofa::component::mapping::linear::BarycentricMapperMeshTopology< In, Out >::clear ; (; std::size_t ; reserve = 0). override . ◆ createPointInLine(). template<class In , class Out > . BarycentricMapperMeshTopology< In, Out >::Index sofa::component::mapping::linear::BarycentricMapperMeshTopology< In, Out >::createPointInLine ; (; const typename Out::Coord & ; p, . Index ; lineIndex, . const typename In::VecCoord * ; points . ). override . ◆ createPointInQuad(). template<class In , class Out > . BarycentricMapperMeshTopology< In, Out >::Index sofa::component::mapping::linear::BarycentricMapperMeshTopology< In, Out >::createPointInQuad ; (; const typename Out::Coord & ; p, . Index ; quadIndex, . const typename In::VecCoord * ; points . ). override . ◆ createPointInTriangle(). template<class In , class Out > . BarycentricMapperMeshTopology< In, Out >::Index sofa::component::mapping::linear::BarycentricMapperMeshTopology< In, Out >::createPointInTriangle ; (; const typename Out::Coord & ; p, . Index ; triangleIndex, . const typename In::VecCoor",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_barycentric_mapper_mesh_topology.html:7097,clear,clear,7097,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_barycentric_mapper_mesh_topology.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_barycentric_mapper_mesh_topology.html,1,['clear'],['clear']
Usability,"cle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addObject(BaseObject::SPtr obj, TypeOfInsertion=TypeOfInsertion::AtEnd)=0sofa::core::objectmodel::BaseNodepure virtual; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseNode()sofa::core::objectmodel::BaseNodeprotected; BaseType typedefsofa::core::objectmodel::Base; Children typedefsofa::core::objectmodel::BaseNode; clearLoggedMessages() constsofa::core::objectmodel::Base; clearObjectContext(BaseObject::SPtr obj)sofa::core::objectmodel::BaseNodeprotected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; detachFromGraph()=0sofa::core::objectmodel::BaseNodepure virtual; f_bboxsofa::core::objectmodel::Base; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Basevirtual; findGlobalField(const std::string &name) constsofa::core::objectmodel::Base; findLink(const std::string &name) constsofa::core::objectmodel::Base; findLinkDest(T *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Baseinline; findLinkDestClass(const BaseClass *destType, const std::string &",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_node-members.html:1631,clear,clearObjectContext,1631,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_node-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_node-members.html,1,['clear'],['clearObjectContext']
Usability,coherent See alsom_hexahedron . m_edgesInHexahedron . m_quadsInHexahedron . m_hexahedraAroundVertex . m_hexahedraAroundEdge . m_hexahedraAroundQuad ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer. ◆ cleanHexahedronTopologyFromDirty(). void sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer::cleanHexahedronTopologyFromDirty ; (; ). protected . ◆ clear(). void sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer::clear ; (; ). overridevirtual . Procedural creation methods ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer.; Reimplemented in sofa::component::topology::container::dynamic::MultilevelHexahedronSetTopologyContainer. ◆ clearEdgesInHexahedron(). void sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer::clearEdgesInHexahedron ; (; ). protected . ◆ clearHexahedra(). void sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer::clearHexahedra ; (; ). protected . ◆ clearHexahedraAroundEdge(). void sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer::clearHexahedraAroundEdge ; (; ). protected . ◆ clearHexahedraAroundQuad(). void sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer::clearHexahedraAroundQuad ; (; ). protected . ◆ clearHexahedraAroundVertex(). void sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer::clearHexahedraAroundVertex ; (; ). protected . ◆ clearQuadsInHexahedron(). void sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer::clearQuadsInHexahedron ; (; ). protected . ◆ createEdgeSetArray(). void sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer::createEdgeSetArray ; (; ). overrideprotectedvirtual . Creates the EdgeSet array. ; Create the set of edges when needed. ; Reimplemented from sofa::component::topology::container::dynamic::Ed,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_topology_container.html:49399,clear,clearHexahedra,49399,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_topology_container.html,1,['clear'],['clearHexahedra']
Usability,"col, . const sofa::type::Mat< 6, 6, double > & ; value . ). virtual . ◆ add() [8/10]. void sofa::core::MatrixAccumulatorInterface::add ; (; sofa::SignedIndex ; row, . sofa::SignedIndex ; col, . const sofa::type::Mat< 6, 6, float > & ; value . ). virtual . ◆ add() [9/10]. virtual void sofa::core::MatrixAccumulatorInterface::add ; (; sofa::SignedIndex ; , . sofa::SignedIndex ; , . double ;  . ). inlinevirtual . Reimplemented in sofa::core::ListMatrixAccumulator< DampingMatrixAccumulator >, sofa::core::ListMatrixAccumulator< StiffnessMatrixAccumulator >, sofa::core::ListMatrixAccumulator< MappingMatrixAccumulator >, and sofa::core::ListMatrixAccumulator< MassMatrixAccumulator >. ◆ add() [10/10]. virtual void sofa::core::MatrixAccumulatorInterface::add ; (; sofa::SignedIndex ; , . sofa::SignedIndex ; , . float ;  . ). inlinevirtual . Reimplemented in sofa::core::ListMatrixAccumulator< DampingMatrixAccumulator >, sofa::core::ListMatrixAccumulator< StiffnessMatrixAccumulator >, sofa::core::ListMatrixAccumulator< MappingMatrixAccumulator >, and sofa::core::ListMatrixAccumulator< MassMatrixAccumulator >. ◆ clear(). virtual void sofa::core::MatrixAccumulatorInterface::clear ; (; ). inlinevirtual . Reimplemented in sofa::core::ListMatrixAccumulator< DampingMatrixAccumulator >, sofa::core::ListMatrixAccumulator< StiffnessMatrixAccumulator >, sofa::core::ListMatrixAccumulator< MappingMatrixAccumulator >, and sofa::core::ListMatrixAccumulator< MassMatrixAccumulator >. ◆ matAdd(). template<sofa::Size L, sofa::Size C, class real > . void sofa::core::MatrixAccumulatorInterface::matAdd ; (; sofa::SignedIndex ; row, . sofa::SignedIndex ; col, . const sofa::type::Mat< L, C, real > & ; value . ). ◆ setIndexCheckerStrategy(). virtual void sofa::core::MatrixAccumulatorInterface::setIndexCheckerStrategy ; (; std::shared_ptr< matrixaccumulator::IndexVerificationStrategy > ; ). inlinevirtual . sofacoreMatrixAccumulatorInterface; Generated on Mon Nov 11 2024 03:14:09 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_matrix_accumulator_interface.html:4836,clear,clear,4836,api/master/sofa/html/classsofa_1_1core_1_1_matrix_accumulator_interface.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_matrix_accumulator_interface.html,2,['clear'],['clear']
Usability,"color) override;  ; virtual void drawHexahedra (const std::vector< type::Vec3 > &points, const type::RGBAColor &color) override;  ; virtual void drawScaledHexahedra (const std::vector< type::Vec3 > &points, const type::RGBAColor &color, const float scale) override;  ; void drawSphere (const type::Vec3 &p, float radius) override;  ; void drawSphere (const type::Vec3 &p, float radius, const type::RGBAColor &color) override;  ; void drawEllipsoid (const type::Vec3 &p, const type::Vec3 &radii) override;  ; void drawBoundingBox (const type::Vec3 &min, const type::Vec3 &max, float size=1.0) override;  ; void draw3DText (const type::Vec3 &p, float scale, const type::RGBAColor &color, const char *text) override;  ; virtual void draw3DText_Indices (const std::vector< type::Vec3 > &positions, float scale, const type::RGBAColor &color) override;  ; void clear () override;  ; void setMaterial (const type::RGBAColor &color) override;  ; void resetMaterial (const type::RGBAColor &color) override;  ; void resetMaterial () override;  ; void pushMatrix () override;  ; void popMatrix () override;  ; void multMatrix (float *glTransform) override;  ; void scale (float s) override;  ; void translate (float x, float y, float z) override;  ; void writeOverlayText (int x, int y, unsigned fontSize, const type::RGBAColor &color, const char *text) override;  draw 2D text at position (x,y) from top-left corner More...;  ; void enablePolygonOffset (float factor, float units) override;  ; void disablePolygonOffset () override;  Remove variable depth offset for polygon drawing. More...;  ; void enableBlending () override;  ; void disableBlending () override;  ; void enableLighting () override;  ; void disableLighting () override;  ; void enableDepthTest () override;  ; void disableDepthTest () override;  ; void saveLastState () override;  ; void restoreLastState () override;  ; void readPixels (int x, int y, int w, int h, float *rgb, float *z=nullptr) override;  ; void internalDrawSpheres (const ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1_draw_tool_g_l.html:9485,clear,clear,9485,api/master/sofa/html/classsofa_1_1gl_1_1_draw_tool_g_l.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1_draw_tool_g_l.html,1,['clear'],['clear']
Usability,"component::topology::container::dynamic::QuadSetTopologyContainer, and sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer. ◆ checkTopology(). bool sofa::component::topology::container::dynamic::EdgeSetTopologyContainer::checkTopology ; (; ); const. overridevirtual . Checks if the topology is coherent. ; Check if the arrays are coherent. See alsom_edgesAroundVertex . m_edge ; Returnsbool true if topology is coherent. ; Reimplemented from sofa::core::topology::BaseMeshTopology.; Reimplemented in sofa::component::topology::container::dynamic::TriangleSetTopologyContainer, sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer, sofa::component::topology::container::dynamic::QuadSetTopologyContainer, and sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer. ◆ cleanEdgeTopologyFromDirty(). void sofa::component::topology::container::dynamic::EdgeSetTopologyContainer::cleanEdgeTopologyFromDirty ; (; ). protected . ◆ clear(). void sofa::component::topology::container::dynamic::EdgeSetTopologyContainer::clear ; (; ). overridevirtual . Procedural creation methods ; Reimplemented from sofa::core::topology::BaseMeshTopology.; Reimplemented in sofa::component::topology::container::dynamic::TriangleSetTopologyContainer, sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer, sofa::component::topology::container::dynamic::QuadSetTopologyContainer, sofa::component::topology::container::dynamic::MultilevelHexahedronSetTopologyContainer, and sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer. ◆ clearEdges(). void sofa::component::topology::container::dynamic::EdgeSetTopologyContainer::clearEdges ; (; ). protected . ◆ clearEdgesAroundVertex(). void sofa::component::topology::container::dynamic::EdgeSetTopologyContainer::clearEdgesAroundVertex ; (; ). protected . ◆ createEdgesAroundVertexArray(). void sofa::component::topology::container::dynamic::EdgeSetTopology",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_container.html:36646,clear,clear,36646,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_container.html,1,['clear'],['clear']
Usability,"component::topology::container::dynamic::QuadSetTopologyContainer, and sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer. ◆ cleanEdgeTopologyFromDirty(). void sofa::component::topology::container::dynamic::EdgeSetTopologyContainer::cleanEdgeTopologyFromDirty ; (; ). protected . ◆ clear(). void sofa::component::topology::container::dynamic::EdgeSetTopologyContainer::clear ; (; ). overridevirtual . Procedural creation methods ; Reimplemented from sofa::core::topology::BaseMeshTopology.; Reimplemented in sofa::component::topology::container::dynamic::TriangleSetTopologyContainer, sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer, sofa::component::topology::container::dynamic::QuadSetTopologyContainer, sofa::component::topology::container::dynamic::MultilevelHexahedronSetTopologyContainer, and sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer. ◆ clearEdges(). void sofa::component::topology::container::dynamic::EdgeSetTopologyContainer::clearEdges ; (; ). protected . ◆ clearEdgesAroundVertex(). void sofa::component::topology::container::dynamic::EdgeSetTopologyContainer::clearEdgesAroundVertex ; (; ). protected . ◆ createEdgesAroundVertexArray(). void sofa::component::topology::container::dynamic::EdgeSetTopologyContainer::createEdgesAroundVertexArray ; (; ). protectedvirtual . Creates the EdgesAroundVertex array. ; This function is only called if EdgesAroundVertex member is required. EdgesAroundVertex[i] contains the indices of all edges having the ith DOF as one of their ends. . ◆ createEdgeSetArray(). void sofa::component::topology::container::dynamic::EdgeSetTopologyContainer::createEdgeSetArray ; (; ). protectedvirtual . Creates the EdgeSet array. ; This function must be implemented by derived classes to create a list of edges from a set of triangles or tetrahedra ; Reimplemented in sofa::component::topology::container::dynamic::TriangleSetTopologyContainer, sofa::component::topology",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_container.html:37368,clear,clearEdges,37368,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_container.html,1,['clear'],['clearEdges']
Usability,componentsTime. protected . ◆ componentsTimeMax. std::vector< dataTime > sofa::gui::qt::WindowVisitor::componentsTimeMax. protected . ◆ componentsTimeTotal. std::vector< dataTime > sofa::gui::qt::WindowVisitor::componentsTimeTotal. protected . ◆ controlPanel. QVisitorControlPanel* sofa::gui::qt::WindowVisitor::controlPanel. protected . ◆ icons. QPixmap * sofa::gui::qt::WindowVisitor::icons. staticprotected . ◆ statsWidget. QWidget* sofa::gui::qt::WindowVisitor::statsWidget. ◆ typeOfCharts. QComboBox* sofa::gui::qt::WindowVisitor::typeOfCharts. protected . ◆ visitorsTime. std::vector< dataTime > sofa::gui::qt::WindowVisitor::visitorsTime. protected . ◆ visitorsTimeMax. std::vector< dataTime > sofa::gui::qt::WindowVisitor::visitorsTimeMax. protected . ◆ visitorsTimeTotal. std::vector< dataTime > sofa::gui::qt::WindowVisitor::visitorsTimeTotal. protected . Constructor details. ◆ WindowVisitor(). sofa::gui::qt::WindowVisitor::WindowVisitor ; (; QWidget * ; parent). Function details. ◆ clearGraph. void sofa::gui::qt::WindowVisitor::clearGraph ; (; ). inlineslot . ◆ closeEvent. void sofa::gui::qt::WindowVisitor::closeEvent ; (; QCloseEvent * ; ). inlineslot . ◆ collapseNode [1/2]. void sofa::gui::qt::WindowVisitor::collapseNode ; (; ). slot . ◆ collapseNode() [2/2]. void sofa::gui::qt::WindowVisitor::collapseNode ; (; QTreeWidgetItem * ; item). ◆ expandNode [1/2]. void sofa::gui::qt::WindowVisitor::expandNode ; (; ). slot . ◆ expandNode() [2/2]. void sofa::gui::qt::WindowVisitor::expandNode ; (; QTreeWidgetItem * ; item). ◆ focusOn. void sofa::gui::qt::WindowVisitor::focusOn ; (; QString ; focus). slot . ◆ getComponentType. static componentType sofa::gui::qt::WindowVisitor::getComponentType ; (; std::string ; name). inlinestaticslot . ◆ getPixmap. static QPixmap* sofa::gui::qt::WindowVisitor::getPixmap ; (; componentType ; t). inlinestaticslot . ◆ rightClick. void sofa::gui::qt::WindowVisitor::rightClick ; (; const QPoint & ; point). slot . ◆ setCharts(). void sofa::gui::,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_window_visitor.html:3099,clear,clearGraph,3099,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_window_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_window_visitor.html,1,['clear'],['clearGraph']
Usability,"const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; beginEdit()sofa::gl::component::shader::OglAttribute< 1, GL_INT, int >; bwdDraw(core::visual::VisualParams *) overridesofa::gl::component::shader::OglAttribute< 1, GL_INT, int >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; DataType typedefsofa::gl::component::shader::OglAttribute< 1, GL_INT, int >; disable()sofa::gl::component::shader::OglAttribute< 1, GL_INT, int >; doInitVisual(const core::visual::VisualParams *vparams) overridesofa::gl::component::shader::OglAttribute< 1, GL_INT, int >virtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; doUpdateVisual(const core::visual::VisualParams *vp",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute-members.html:3096,clear,clearLoggedMessages,3096,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute-members.html,1,['clear'],['clearLoggedMessages']
Usability,"const;  ; Block * wbloc (Index i);  ; Block * wbloc (Index i, Index j);  ; SReal element (Index i, Index j) const override;  Read the value of the element at row i, column j (using 0-based indices) More...;  ; void set (Index i, Index j, double v) override;  Write the value of the element at row i, column j (using 0-based indices) More...;  ; void setB (Index i, const Block &b);  ; void setB (Index i, Index j, const Block &b);  ; void add (Index i, Index j, double v) override;  Add v to the existing value of the element at row i, column j (using 0-based indices) More...;  ; void addB (Index i, const Block &b);  ; void addB (Index i, Index j, const Block &b);  ; void clear (Index i, Index j) override;  ; void clearRow (Index i) override;  Reset all the values in row i to 0. More...;  ; void clearCol (Index j) override;  Reset the all values in column j to 0. More...;  ; void clearRowCol (Index i) override;  Reset the value of both row and column i to 0. More...;  ; void clear () override;  Reset all values to 0. More...;  ; void invert ();  ; template<class Real2 > ; void mul (FullVector< Real2 > &res, const FullVector< Real2 > &v) const;  ; template<class Real2 > ; FullVector< Real2 > operator* (const FullVector< Real2 > &v) const;  ; virtual void add (Index row, Index col, double v)=0;  Add v to the existing value of the element at row i, column j (using 0-based indices) More...;  ; virtual void add (Index row, Index col, const type::Mat3x3d &_M);  Adding values from a 3x3d matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat3x3f &_M);  Adding values from a 3x3f matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat2x2d &_M);  Adding values from a 2x2d matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat2x2f &_M);  Addi",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_diagonal_matrix.html:2201,clear,clear,2201,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_diagonal_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_diagonal_matrix.html,1,['clear'],['clear']
Usability,"constraint::lagrangian::solver::GenericConstraintProblem::m_lam. protected . ◆ m_p. sofa::linearalgebra::FullVector<SReal> sofa::component::constraint::lagrangian::solver::GenericConstraintProblem::m_p. protected . ◆ scaleTolerance. bool sofa::component::constraint::lagrangian::solver::GenericConstraintProblem::scaleTolerance. ◆ sceneTime. SReal sofa::component::constraint::lagrangian::solver::GenericConstraintProblem::sceneTime. ◆ sor. SReal sofa::component::constraint::lagrangian::solver::GenericConstraintProblem::sor. ◆ Wdiag. linearalgebra::SparseMatrix<SReal> sofa::component::constraint::lagrangian::solver::GenericConstraintProblem::Wdiag. Constructor details. ◆ GenericConstraintProblem(). sofa::component::constraint::lagrangian::solver::GenericConstraintProblem::GenericConstraintProblem ; (; ). inline . ◆ ~GenericConstraintProblem(). sofa::component::constraint::lagrangian::solver::GenericConstraintProblem::~GenericConstraintProblem ; (; ). inlineoverride . Function details. ◆ clear(). void sofa::component::constraint::lagrangian::solver::GenericConstraintProblem::clear ; (; int ; nbConstraints). overridevirtual . Reimplemented from sofa::component::constraint::lagrangian::solver::ConstraintProblem. ◆ freeConstraintResolutions(). void sofa::component::constraint::lagrangian::solver::GenericConstraintProblem::freeConstraintResolutions ; (; ). ◆ gaussSeidel(). void sofa::component::constraint::lagrangian::solver::GenericConstraintProblem::gaussSeidel ; (; SReal ; timeout = 0, . GenericConstraintSolver * ; solver = nullptr . ). Projective Gauss Seidel method building the compliance matrix. . ◆ gaussSeidel_increment(). void sofa::component::constraint::lagrangian::solver::GenericConstraintProblem::gaussSeidel_increment ; (; bool ; measureError, . SReal * ; dfree, . SReal * ; force, . SReal ** ; w, . SReal ; tol, . SReal * ; d, . int ; dim, . bool & ; constraintsAreVerified, . SReal & ; error, . sofa::type::vector< SReal > & ; tabErrors . ); const. ◆ getNumConstrain",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_generic_constraint_problem.html:5369,clear,clear,5369,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_generic_constraint_problem.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_generic_constraint_problem.html,1,['clear'],['clear']
Usability,"constraint::projective::LineProjectiveConstraint< DataTypes >::addConstraint ; (; Index ; index). ◆ applyConstraint() [1/2]. template<class DataTypes > . void sofa::component::constraint::projective::LineProjectiveConstraint< DataTypes >::applyConstraint ; (; const core::MechanicalParams * ; , . const sofa::core::behavior::MultiMatrixAccessor * ;  . ). overridevirtual . Project the global Mechanical Matrix to constrained space using offset parameter. ; Reimplemented from sofa::core::behavior::BaseProjectiveConstraintSet. ◆ applyConstraint() [2/2]. template<class DataTypes > . void sofa::component::constraint::projective::LineProjectiveConstraint< DataTypes >::applyConstraint ; (; const core::MechanicalParams * ; , . linearalgebra::BaseVector * ; , . const sofa::core::behavior::MultiMatrixAccessor * ;  . ). overridevirtual . Project the global Mechanical Vector to constrained space using offset parameter. ; Reimplemented from sofa::core::behavior::BaseProjectiveConstraintSet. ◆ clearConstraints(). template<class DataTypes > . void sofa::component::constraint::projective::LineProjectiveConstraint< DataTypes >::clearConstraints. ◆ draw(). template<class DataTypes > . void sofa::component::constraint::projective::LineProjectiveConstraint< DataTypes >::draw ; (; const core::visual::VisualParams * ; ). overridevirtual . Render internal data of this object, for debugging purposes. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ init(). template<class DataTypes > . void sofa::component::constraint::projective::LineProjectiveConstraint< DataTypes >::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ projectJacobianMatrix(). template<class DataTypes > . void sofa::component::constraint::projective::LineProjectiveConstraint< DataTypes >::projectJacobianMatrix ; (; const core::MechanicalParams * ; , . DataMatrixDeriv & ; cData . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_line_projective_constraint.html:24323,clear,clearConstraints,24323,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_line_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_line_projective_constraint.html,1,['clear'],['clearConstraints']
Usability,"core::MechanicalParams *)sofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >inlineprotectedvirtual; Base()sofa::core::objectmodel::Baseprotected; BaseMatrixLinearSystem()sofa::core::behavior::BaseMatrixLinearSystemprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; buildSystemMatrix(const core::MechanicalParams *mparams)sofa::core::behavior::BaseMatrixLinearSystem; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearSystem() overridesofa::component::linearsystem::CompositeLinearSystem< TMatrix, TVector >virtual; CompositeLinearSystem()sofa::component::linearsystem::CompositeLinearSystem< TMatrix, TVector >protected; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; copyLocalVectorToGlobalVector(core::MultiVecDerivId v, TVector *globalVector)sofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >protected; copyLocalVectorToGlobalVector(core::MultiVecDerivId v, GraphScatteredVector *globalVector)sofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >protected; copyLocalVectorToGlobalVector(core::MultiVecDerivId v, GraphScatteredVector *globalVector)sofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >protected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDe",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_composite_linear_system-members.html:2620,clear,clearSystem,2620,api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_composite_linear_system-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_composite_linear_system-members.html,1,['clear'],['clearSystem']
Usability,"core::MechanicalParams *)sofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >inlineprotectedvirtual; Base()sofa::core::objectmodel::Baseprotected; BaseMatrixLinearSystem()sofa::core::behavior::BaseMatrixLinearSystemprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; buildSystemMatrix(const core::MechanicalParams *mparams)sofa::core::behavior::BaseMatrixLinearSystem; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearSystem()sofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >virtual; CompositeLinearSystem classsofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >friend; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; copyLocalVectorToGlobalVector(core::MultiVecDerivId v, TVector *globalVector)sofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >protected; copyLocalVectorToGlobalVector(core::MultiVecDerivId v, GraphScatteredVector *globalVector)sofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >protected; copyLocalVectorToGlobalVector(core::MultiVecDerivId v, GraphScatteredVector *globalVector)sofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >protected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescri",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_typed_matrix_linear_system-members.html:2580,clear,clearSystem,2580,api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_typed_matrix_linear_system-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_typed_matrix_linear_system-members.html,1,['clear'],['clearSystem']
Usability,"core::MechanicalParams *)sofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >inlineprotectedvirtual; Base()sofa::core::objectmodel::Baseprotected; BaseMatrixLinearSystem()sofa::core::behavior::BaseMatrixLinearSystemprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; buildSystemMatrix(const core::MechanicalParams *mparams)sofa::core::behavior::BaseMatrixLinearSystem; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearSystem()sofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >virtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; copyLocalVectorToGlobalVector(core::MultiVecDerivId v, TVector *globalVector)sofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >protected; copyLocalVectorToGlobalVector(core::MultiVecDerivId v, GraphScatteredVector *globalVector)sofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >protected; copyLocalVectorToGlobalVector(core::MultiVecDerivId v, GraphScatteredVector *globalVector)sofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >protected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1preconditioner_1_1_precomputed_matrix_system-members.html:2612,clear,clearSystem,2612,api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1preconditioner_1_1_precomputed_matrix_system-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1preconditioner_1_1_precomputed_matrix_system-members.html,2,['clear'],['clearSystem']
Usability,"core::objectmodel::Base; applyConstraintForce(const sofa::core::ConstraintParams *, sofa::core::MultiVecDerivId, const linearalgebra::BaseVector *)sofa::core::behavior::LinearSolverinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; buildComplianceMatrix(const sofa::core::ConstraintParams *cparams, linearalgebra::BaseMatrix *result, SReal fact)sofa::core::behavior::LinearSolverinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeResidual(const core::ExecParams *, linearalgebra::BaseVector *)sofa::core::behavior::LinearSolverinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectm",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1_base_matrix_linear_solver-members.html:2561,clear,clearLoggedMessages,2561,api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1_base_matrix_linear_solver-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1_base_matrix_linear_solver-members.html,2,['clear'],['clearLoggedMessages']
Usability,"core::objectmodel::BaseContextinlinevirtual; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; animate_sofa::core::objectmodel::Context; animationManagersofa::simulation::Node; Base()sofa::core::objectmodel::Baseprotected; BaseContext()sofa::core::objectmodel::BaseContextprotected; BaseNode()sofa::core::objectmodel::BaseNodeprotected; BaseType typedefsofa::core::objectmodel::Base; behaviorModelsofa::simulation::Node; canChangeSleepingState() const overridesofa::core::objectmodel::Contextvirtual; childsofa::simulation::Node; ChildIterator typedefsofa::simulation::Node; Children typedefsofa::core::objectmodel::BaseNode; clearLoggedMessages() constsofa::core::objectmodel::Base; clearObjectContext(BaseObject::SPtr obj)sofa::core::objectmodel::BaseNodeprotected; collisionModelsofa::simulation::Node; collisionPipelinesofa::simulation::Node; configurationSettingsofa::simulation::Node; constraintSetsofa::simulation::Node; constraintSolversofa::simulation::Node; Context()sofa::core::objectmodel::Contextprotected; contextObjectsofa::simulation::Node; copyContext(const Context &c)sofa::core::objectmodel::Context; copySimulationContext(const Context &c)sofa::core::objectmodel::Context; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(DAGNode *, sofa::core::objectmodel::BaseObjectDescription *arg)sofa::simulation::graph::DAGNodeinlinestatic; sofa::simulation::Node::create(RealObject *, sofa::core::objectmodel::BaseObjectDescription *arg)sofa::simulation::Nodestatic; sofa::simulation::Node::create(const std::string &name)sofa:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1graph_1_1_d_a_g_node-members.html:2401,clear,clearLoggedMessages,2401,api/master/sofa/html/classsofa_1_1simulation_1_1graph_1_1_d_a_g_node-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1graph_1_1_d_a_g_node-members.html,1,['clear'],['clearLoggedMessages']
Usability,"core::objectmodel::BaseContextinlinevirtual; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; animate_sofa::core::objectmodel::Context; animationManagersofa::simulation::Node; Base()sofa::core::objectmodel::Baseprotected; BaseContext()sofa::core::objectmodel::BaseContextprotected; BaseNode()sofa::core::objectmodel::BaseNodeprotected; BaseType typedefsofa::core::objectmodel::Base; behaviorModelsofa::simulation::Node; canChangeSleepingState() const overridesofa::core::objectmodel::Contextvirtual; childsofa::simulation::Node; ChildIterator typedefsofa::simulation::Node; Children typedefsofa::core::objectmodel::BaseNode; clearLoggedMessages() constsofa::core::objectmodel::Base; clearObjectContext(BaseObject::SPtr obj)sofa::core::objectmodel::BaseNodeprotected; collisionModelsofa::simulation::Node; collisionPipelinesofa::simulation::Node; configurationSettingsofa::simulation::Node; constraintSetsofa::simulation::Node; constraintSolversofa::simulation::Node; Context()sofa::core::objectmodel::Contextprotected; contextObjectsofa::simulation::Node; copyContext(const Context &c)sofa::core::objectmodel::Context; copySimulationContext(const Context &c)sofa::core::objectmodel::Context; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(RealObject *, sofa::core::objectmodel::BaseObjectDescription *arg)sofa::simulation::Nodestatic; create(const std::string &name)sofa::simulation::Nodestatic; createChild(const std::string &nodeName)=0sofa::simulation::Nodepure virtual; d_canChangeSleepingStatesofa::core::objectmodel::Context; d_c",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_node-members.html:2257,clear,clearLoggedMessages,2257,api/master/sofa/html/classsofa_1_1simulation_1_1_node-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_node-members.html,1,['clear'],['clearLoggedMessages']
Usability,"core::objectmodel::BaseObjectprotected; BaseProjectiveConstraintSet()sofa::core::behavior::BaseProjectiveConstraintSetinlineprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ProjectiveConstraintSet< TDataTypes >inlinestatic; sofa::core::behavior::BaseProjectiveConstraintSet::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearConstraints()sofa::component::constraint::projective::AffineMovementProjectiveConstraint< TDataTypes >; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; Coord typedefsofa::component::constraint::projective::AffineMovementProjectiveConstraint< TDataTypes >; CoordSizesofa::component::constraint::projective::AffineMovementProjectiveConstraint< TDataTypes >static; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; CPos typedefsofa::component::constraint::projective::AffineMovementProjectiveConstraint< TDataTypes >; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_beginConstraintTimesofa::component::constraint::projective::AffineMovementProjectiveConstraint< TDataTypes >; d_componentStatesofa::core::objectmodel::Base; d_drawConstrainedPointssofa::component::constraint::projective::AffineMovementProjectiveConstraint< TDat",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_affine_movement_projective_constraint-members.html:3381,clear,clearLoggedMessages,3381,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_affine_movement_projective_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_affine_movement_projective_constraint-members.html,1,['clear'],['clearLoggedMessages']
Usability,"core::objectmodel::Baseprotected; BaseCamera()sofa::component::visual::BaseCamera; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit() overridesofa::component::visual::BaseCameravirtual; CAMERA_LOOKAT_PIVOT enum valuesofa::component::visual::InteractiveCamera; CAMERA_POSITION_PIVOT enum valuesofa::component::visual::InteractiveCamera; cameraToWorldCoordinates(const type::Vec3 &p)sofa::component::visual::BaseCamera; cameraToWorldTransform(const type::Vec3 &v)sofa::component::visual::BaseCamera; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeClippingPlane(const core::visual::VisualParams *vp, double &zNear, double &zFar)sofa::component::visual::BaseCamera; computeZ()sofa::component::visual::BaseCamera; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; currentDistancesofa::component::visual::BaseCameraprotected; currentLookAtsofa::component::visual::BaseCameraprotected; currentZFarsofa::component::visual::BaseCameraprotected; currentZNearsofa::component::visual::BaseCameraprotected; d_activatedsofa::component::visual::BaseCamera; d_componentStatesofa::core::objectmodel::Base; d_computeZClipsofa::component::visual::BaseCamera; d_distancesofa::component::visual::BaseCamera; d_fi",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_interactive_camera-members.html:2384,clear,clearLoggedMessages,2384,api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_interactive_camera-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_interactive_camera-members.html,1,['clear'],['clearLoggedMessages']
Usability,"core::visual::VisualModel, Vec3State);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doDrawVisual (const core::visual::VisualParams *vparams) override;  ; void doUpdateVisual (const core::visual::VisualParams *vparams) override;  ; bool insertInNode (core::objectmodel::BaseNode *node) override;  ; bool removeInNode (core::objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virt",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_data_display.html:5460,clear,clearVisual,5460,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_data_display.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_data_display.html,2,['clear'],"['clear', 'clearVisual']"
Usability,creator issues. /qtsofa; . /feed; ; qtSofa – SOFA. SOFA - Topic Tag: qtSofa. /raleigh-damping; . /feed; ; raleigh damping – SOFA. SOFA - Topic Tag: raleigh damping. /rayleigh-damping; . /feed; ; Rayleigh damping – SOFA. SOFA - Topic Tag: Rayleigh damping. /reaction-force; . /feed; ; reaction force – SOFA. SOFA - Topic Tag: reaction force. /realistic; . /feed; ; realistic – SOFA. SOFA - Topic Tag: realistic. /realtime; . /feed; ; realtime – SOFA. SOFA - Topic Tag: realtime. /real-time; . /feed; ; real-time – SOFA. SOFA - Topic Tag: real-time. /record; . /feed; ; record – SOFA. SOFA - Topic Tag: record. /recordedcamera; . /feed; ; RecordedCamera – SOFA. SOFA - Topic Tag: RecordedCamera. /recording; . /feed; ; Recording – SOFA. SOFA - Topic Tag: Recording. /refine-coarse; . /feed; ; refine coarse – SOFA. SOFA - Topic Tag: refine coarse. /registry; . /feed; ; Registry – SOFA. SOFA - Topic Tag: Registry. /reinforcement-learning; . /feed; ; Reinforcement learning – SOFA. SOFA - Topic Tag: Reinforcement learning. /release; . /feed; ; Release – SOFA. SOFA - Topic Tag: Release. /removed-object; . /feed; ; removed object – SOFA. SOFA - Topic Tag: removed object. /removetrianglespostprocessing; . /feed; ; removeTrianglesPostProcessing – SOFA. SOFA - Topic Tag: removeTrianglesPostProcessing. /rendering; . /feed; ; rendering – SOFA. SOFA - Topic Tag: rendering. /rep; . /feed; ; Rep – SOFA. SOFA - Topic Tag: Rep. /reset-sofa-using-code; . /feed; ; Reset SOFA using code. – SOFA. SOFA - Topic Tag: Reset SOFA using code. /rigid; . /feed; ; rigid – SOFA. SOFA - Topic Tag: rigid. /rigid-body; . /feed; ; rigid body – SOFA. SOFA - Topic Tag: rigid body. /rigidify; . /feed; ; rigidify – SOFA. SOFA - Topic Tag: rigidify. /rigidmapping-beamfemforcefield-geomagicdevice; . /feed; ; Rigidmapping BeamFEMForceField GeomagicDevice – SOFA. SOFA - Topic Tag: Rigidmapping BeamFEMForceField GeomagicDevice. /rigif; . /feed; ; rigif – SOFA. SOFA - Topic Tag: rigif. /robots; . /feed; ; Robots – SOFA. S,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:468040,learn,learning,468040,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['learn'],['learning']
Usability,"cs simuation. Static Public Member Functions |; List of all members . sofa::linearalgebra::matrix_bloc_traits< type::Mat< L, C, real >, IndexType > Class Template Reference . #include <matrix_bloc_traits.h>. Static Public Member Functions; static Real & v (Block &b, Index row, Index col);  ; static const Real & v (const Block &b, Index row, Index col);  ; static void vset (Block &b, int row, int col, Real val);  ; static void vadd (Block &b, int row, int col, Real val);  ; static void clear (Block &b);  ; static bool empty (const Block &b);  ; static void invert (Block &result, const Block &b);  ; static void split_row_index (IndexType &index, IndexType &modulo);  ; static void split_col_index (IndexType &index, IndexType &modulo);  ; template<class TSubBlock > ; static void subBlock (const Block &b, IndexType row, IndexType col, TSubBlock &subBlock);  ; static sofa::linearalgebra::BaseMatrix::ElementType getElementType ();  ; static const std::string Name ();  . Function details. ◆ clear(). template<Size L, Size C, class real , typename IndexType > . static void sofa::linearalgebra::matrix_bloc_traits< type::Mat< L, C, real >, IndexType >::clear ; (; Block & ; b). inlinestatic . ◆ empty(). template<Size L, Size C, class real , typename IndexType > . static bool sofa::linearalgebra::matrix_bloc_traits< type::Mat< L, C, real >, IndexType >::empty ; (; const Block & ; b). inlinestatic . ◆ getElementType(). template<Size L, Size C, class real , typename IndexType > . static sofa::linearalgebra::BaseMatrix::ElementType sofa::linearalgebra::matrix_bloc_traits< type::Mat< L, C, real >, IndexType >::getElementType ; (; ). inlinestatic . ◆ invert(). template<Size L, Size C, class real , typename IndexType > . static void sofa::linearalgebra::matrix_bloc_traits< type::Mat< L, C, real >, IndexType >::invert ; (; Block & ; result, . const Block & ; b . ). inlinestatic . ◆ Name(). template<Size L, Size C, class real , typename IndexType > . static const std::string sofa::lineara",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1matrix__bloc__traits_3_01type_1_1_mat_3_01_l_00_01_c_00_01real_01_4_00_01_index_type_01_4.html:1175,clear,clear,1175,api/master/sofa/html/classsofa_1_1linearalgebra_1_1matrix__bloc__traits_3_01type_1_1_mat_3_01_l_00_01_c_00_01real_01_4_00_01_index_type_01_4.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1matrix__bloc__traits_3_01type_1_1_mat_3_01_l_00_01_c_00_01real_01_4_00_01_index_type_01_4.html,1,['clear'],['clear']
Usability,"ct * create (RealObject *, BaseMouseInteractor *interactor);  . Attribute details. ◆ m_flags. template<class DataTypes > . core::visual::DisplayFlags sofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >::m_flags. protected . ◆ m_interactionObject. template<class DataTypes > . sofa::core::objectmodel::BaseObject::SPtr sofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >::m_interactionObject. protected . ◆ m_mapper. template<class DataTypes > . MouseContactMapper* sofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >::m_mapper. protected . Constructor details. ◆ BaseAttachBodyPerformer(). template<class DataTypes > . sofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >::BaseAttachBodyPerformer ; (; BaseMouseInteractor * ; i). explicit . ◆ ~BaseAttachBodyPerformer(). template<class DataTypes > . sofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >::~BaseAttachBodyPerformer. virtual . Function details. ◆ clear(). template<class DataTypes > . void sofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >::clear. virtual . ◆ draw(). template<class DataTypes > . void sofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >::draw ; (; const core::visual::VisualParams * ; vparams). virtual . Reimplemented from sofa::gui::component::performer::InteractionPerformer. ◆ execute(). template<class DataTypes > . void sofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >::execute. virtual . Implements sofa::gui::component::performer::InteractionPerformer. ◆ getInteractionObject(). template<class DataTypes > . sofa::core::objectmodel::BaseObject::SPtr sofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >::getInteractionObject. ◆ start(). template<class DataTypes > . void sofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >::start. virtual . Implements sofa::gui::component::performer::InteractionPerformer. ◆ startPartial(). templa",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_base_attach_body_performer.html:3748,clear,clear,3748,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_base_attach_body_performer.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_base_attach_body_performer.html,1,['clear'],['clear']
Usability,"ct ID available to send the next version More...;  . Public Member Functions;  AspectBuffer (AspectPool &pool);  ;  ~AspectBuffer ();  ; AspectRef allocate ();  Allocate an aspect ID to prepare the next version, reusing a recent one if possible. More...;  ; void push (AspectRef id);  Send a new version, overriding the latest if it was not already received (in which case it can be ""recycled"" using allocate) More...;  ; bool pop (AspectRef &id);  Receive the latest version, return true if one is available, or false otherwise (in which case id is unchanged) More...;  ; void clear ();  . Attribute details. ◆ availableID. AtomicInt sofa::core::objectmodel::AspectBuffer::availableID. protected . -1 or aspect ID available to send the next version . ◆ latestID. AtomicInt sofa::core::objectmodel::AspectBuffer::latestID. protected . -1 or aspect ID of the last version sent . ◆ pool. AspectPool& sofa::core::objectmodel::AspectBuffer::pool. protected . Constructor details. ◆ AspectBuffer(). sofa::core::objectmodel::AspectBuffer::AspectBuffer ; (; AspectPool & ; pool). ◆ ~AspectBuffer(). sofa::core::objectmodel::AspectBuffer::~AspectBuffer ; (; ). Function details. ◆ allocate(). AspectRef sofa::core::objectmodel::AspectBuffer::allocate ; (; ). Allocate an aspect ID to prepare the next version, reusing a recent one if possible. . ◆ clear(). void sofa::core::objectmodel::AspectBuffer::clear ; (; ). Clear the buffers This must be called before either the AspectPool or this buffer is deleted . ◆ pop(). bool sofa::core::objectmodel::AspectBuffer::pop ; (; AspectRef & ; id). Receive the latest version, return true if one is available, or false otherwise (in which case id is unchanged) . ◆ push(). void sofa::core::objectmodel::AspectBuffer::push ; (; AspectRef ; id). Send a new version, overriding the latest if it was not already received (in which case it can be ""recycled"" using allocate) . sofacoreobjectmodelAspectBuffer; Generated on Mon Nov 11 2024 03:15:52 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_aspect_buffer.html:2048,clear,clear,2048,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_aspect_buffer.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_aspect_buffer.html,2,['clear'],['clear']
Usability,"cted Attributes; BaseVectorOperations * vop;  Solver who is using this vector. More...;  ; MyMultiVecId v;  Identifier of this vector. More...;  ; bool dynamic;  Flag indicating if this vector was dynamically allocated. More...;  . Public Member Functions;  TMultiVec (BaseVectorOperations *vop, MyMultiVecId v);  Refers to a state vector with the given ID (VecId::position(), VecId::velocity(), etc). More...;  ;  TMultiVec ();  Refers to a not yet allocated state vector. More...;  ;  TMultiVec (BaseVectorOperations *vop, bool dynamic=true, const VecIdProperties &properties={});  Allocate a new temporary vector with the given type (sofa::core::V_COORD or sofa::core::V_DERIV). More...;  ;  ~TMultiVec ();  ;  operator MyMultiVecId ();  Automatic conversion to the underlying VecId. More...;  ;  operator ConstMyMultiVecId ();  ;  operator AllMultiVecId ();  ;  operator ConstAllMultiVecId ();  ; const MyMultiVecId & id () const;  ; MyMultiVecId & id ();  ; BaseVectorOperations * ops ();  ; void setOps (BaseVectorOperations *op);  ; void realloc (BaseVectorOperations *_vop, bool interactionForceField=false, bool propagate=false, const VecIdProperties &properties={});  ; void clear ();  v = 0 More...;  ; void eq (MyMultiVecId a);  v = a More...;  ; void eq (MyMultiVecId a, SReal f);  v = a*f More...;  ; void peq (AllMultiVecId a, SReal f=1.0);  v += a*f More...;  ; void teq (SReal f);  v *= f More...;  ; void eq (AllMultiVecId a, AllMultiVecId b, SReal f=1.0);  v = a+b*f More...;  ; SReal dot (MyMultiVecId a);  ; void threshold (SReal threshold);  nullify values below given threshold More...;  ; SReal norm ();  ; SReal norm (unsigned l);  ; void operator= (MyMultiVecId a);  v = a More...;  ; void operator= (const TMultiVec< vtype > &a);  v = a More...;  ; void operator+= (MyMultiVecId a);  v += a More...;  ; void operator-= (MyMultiVecId a);  v -= a More...;  ; void operator*= (SReal f);  v *= f More...;  ; void operator/= (SReal f);  v /= f More...;  ; SReal operator* (MyMult",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_t_multi_vec.html:1839,clear,clear,1839,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_t_multi_vec.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_t_multi_vec.html,1,['clear'],['clear']
Usability,"cted; BaseForceField()sofa::core::behavior::BaseForceFieldprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; buildDampingMatrix(core::behavior::DampingMatrix *) finalsofa::component::solidmechanics::spring::GearSpringForceField< DataTypes >virtual; buildStiffnessMatrix(StiffnessMatrix *matrix)sofa::core::behavior::BaseForceFieldvirtual; bwdInit() overridesofa::component::solidmechanics::spring::GearSpringForceField< DataTypes >virtual; canCreate(T *obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::PairInteractionForceField< DataTypes >inlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear(int reserve=0)sofa::component::solidmechanics::spring::GearSpringForceField< DataTypes >inline; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; Coord typedefsofa::component::solidmechanics::spring::GearSpringForceField< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::core::behavior::PairInteractionForceField< DataTypes >inlinestatic; d_componentStatesofa::core::objectmodel::Base; d_filenamesofa::component::solidmechanics::spring::GearSpringForceField< DataTypes >; d_messageLogCountsofa::core::objectmodel::Basemutable; d_periodsofa::component::solidmechanics::spring::GearSpringForceField< DataTypes >; d_reinitsofa::component::solidmechanics::sp",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_gear_spring_force_field-members.html:4734,clear,clear,4734,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_gear_spring_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_gear_spring_force_field-members.html,1,['clear'],['clear']
Usability,"cted; BaseType typedefsofa::core::objectmodel::Base; buildConstraintMatrix(const ConstraintParams *cParams, MultiMatrixDerivId cId, unsigned int &cIndex) overridesofa::core::behavior::MixedInteractionConstraint< TDataTypes1, TDataTypes2 >virtual; buildConstraintMatrix(const ConstraintParams *cParams, DataMatrixDeriv1 &c1, DataMatrixDeriv2 &c2, unsigned int &cIndex, const DataVecCoord1 &x1, const DataVecCoord2 &x2)=0sofa::core::behavior::MixedInteractionConstraint< TDataTypes1, TDataTypes2 >pure virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; sofa::computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; sofa::core::behavior::StateAccessor::computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; ConstArea typedefsofa::core::behavior::BaseConstraint; ConstCoord typedefsofa::core::behavior::BaseConstraint; ConstDeriv typedefsofa::core::behavior::BaseConstraint; Coord1 typedefsofa::core::behavior::MixedInteractionConstraint< TDataTypes1, TDataTypes2 >; Coord2 typedefsofa::core::behavior::MixedInteractionConstraint< TDataTypes1, TDataTypes2 >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *p0, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::core::behavior::MixedInteractionConstraint< TDataTypes1, TDataTypes2 >inlinestatic; d_",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mixed_interaction_constraint-members.html:2652,clear,clearLoggedMessages,2652,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mixed_interaction_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mixed_interaction_constraint-members.html,1,['clear'],['clearLoggedMessages']
Usability,"ction< TDataTypes >pure virtual; Base()sofa::core::objectmodel::Baseprotected; BaseConstraintCorrection()sofa::core::behavior::BaseConstraintCorrectionprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ConstraintCorrection< TDataTypes >inlinestatic; sofa::core::behavior::BaseConstraintCorrection::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup() overridesofa::core::behavior::ConstraintCorrection< TDataTypes >virtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeMotionCorrection(const core::ConstraintParams *cparams, core::MultiVecDerivId dx, core::MultiVecDerivId f)=0sofa::core::behavior::ConstraintCorrection< TDataTypes >pure virtual; computeMotionCorrectionFromLambda(const core::ConstraintParams *cparams, core::MultiVecDerivId dx, const linearalgebra::BaseVector *lambda) overridesofa::core::behavior::ConstraintCorrection< TDataTypes >virtual; computeResidual(const core::ExecParams *, linearalgebra::BaseVector *)sofa::core::behavior::BaseConstraintCorrectionvirtual; ConstraintCorrection(MechanicalState< DataTypes > *ms=nullptr)sofa::core::behavior::ConstraintCorrection< TDataTypes >inlineexplicitprotected; Coord typedefsofa::core::behavior::ConstraintCorrection< TDataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::c",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_constraint_correction-members.html:4312,clear,clearLoggedMessages,4312,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_constraint_correction-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_constraint_correction-members.html,1,['clear'],['clearLoggedMessages']
Usability,"ctmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseMatrixProjectionMethod(const PairMechanicalStates &states)sofa::component::linearsystem::BaseMatrixProjectionMethod< TMatrix >explicitprotected; BaseMatrixProjectionMethod()=defaultsofa::component::linearsystem::BaseMatrixProjectionMethod< TMatrix >protected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; Block typedefsofa::component::linearsystem::MatrixProjectionMethod< TMatrix >; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; computeJacobiansFrom(BaseMechanicalState *mstate, const core::MechanicalParams *mparams, const MappingGraph &mappingGraph, TMatrix *crs)sofa::component::linearsystem::MatrixProjectionMethod< TMatrix >protected; computeMatrixJacobians(const core::MechanicalParams *mparams, const MappingGraph &mappingGraph, TMatrix *matrixToProject)sofa::component::linearsystem::MatrixProjectionMethod< TMatrix >; computeMatrixProduct(const MappingGraph &mappingGraph, TMatrix *matrixToProject, linearalgebra::BaseMatrix *globalMatrix)sofa::component::linearsystem::MatrixProjectionMethod< TMatrix >protectedvirtual; computeProjection(const Eigen::Map< Eigen::SparseMatrix< Block, Eigen::RowMajor > > KMap, const sofa::type::fixed_array< std::shared_ptr< TMatrix >, 2 > J, Eigen::SparseMatrix< Block, Eigen::RowMajor > &JT_K_J)sofa::component",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_matrix_projection_method-members.html:2642,clear,clearLoggedMessages,2642,api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_matrix_projection_method-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_matrix_projection_method-members.html,1,['clear'],['clearLoggedMessages']
Usability,"ctmodel::BaseObjectvirtual; clear() overridesofa::component::topology::container::dynamic::HexahedronSetTopologyContainervirtual; clearEdges()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearEdgesAroundVertex()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearEdgesInHexahedron()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearEdgesInQuad()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; clearHexahedra()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearHexahedraAroundEdge()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearHexahedraAroundQuad()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearHexahedraAroundVertex()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearLoggedMessages() constsofa::core::objectmodel::Base; clearQuads()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; clearQuadsAroundEdge()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; clearQuadsAroundVertex()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; clearQuadsInHexahedron()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createEdgesAroundVertexArray()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotectedvirtual; createEdgeSetArray() overridesofa::component::topology::container::d",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_container-members.html:5241,clear,clearLoggedMessages,5241,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_container-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_container-members.html,2,['clear'],['clearLoggedMessages']
Usability,"cubeIndex, . const SReal * ; baryCoords . ). override . ◆ apply(). template<class In , class Out > . void sofa::component::mapping::linear::BarycentricMapperSparseGridTopology< In, Out >::apply ; (; typename Out::VecCoord & ; out, . const typename In::VecCoord & ; in . ). override . ◆ applyJ(). template<class In , class Out > . void sofa::component::mapping::linear::BarycentricMapperSparseGridTopology< In, Out >::applyJ ; (; typename Out::VecDeriv & ; out, . const typename In::VecDeriv & ; in . ). override . ◆ applyJT() [1/2]. template<class In , class Out > . void sofa::component::mapping::linear::BarycentricMapperSparseGridTopology< In, Out >::applyJT ; (; typename In::MatrixDeriv & ; out, . const typename Out::MatrixDeriv & ; in . ). override . ◆ applyJT() [2/2]. template<class In , class Out > . void sofa::component::mapping::linear::BarycentricMapperSparseGridTopology< In, Out >::applyJT ; (; typename In::VecDeriv & ; out, . const typename Out::VecDeriv & ; in . ). override . ◆ clear(). template<class In , class Out > . void sofa::component::mapping::linear::BarycentricMapperSparseGridTopology< In, Out >::clear ; (; std::size_t ; reserve = 0). override . ◆ draw(). template<class In , class Out > . void sofa::component::mapping::linear::BarycentricMapperSparseGridTopology< In, Out >::draw ; (; const VisualParams * ; vparams, . const typename Out::VecCoord & ; out, . const typename In::VecCoord & ; in . ). override . ◆ getJ(). template<class In , class Out > . const sofa::linearalgebra::BaseMatrix * sofa::component::mapping::linear::BarycentricMapperSparseGridTopology< In, Out >::getJ ; (; int ; outSize, . int ; inSize . ). override . ◆ init(). template<class In , class Out > . void sofa::component::mapping::linear::BarycentricMapperSparseGridTopology< In, Out >::init ; (; const typename Out::VecCoord & ; out, . const typename In::VecCoord & ; in . ). override . ◆ resize(). template<class In , class Out > . void sofa::component::mapping::linear::BarycentricMapperS",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_barycentric_mapper_sparse_grid_topology.html:5106,clear,clear,5106,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_barycentric_mapper_sparse_grid_topology.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_barycentric_mapper_sparse_grid_topology.html,1,['clear'],['clear']
Usability,"cy >inline; clear() overridesofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >inlinevirtual; sofa::linearalgebra::BaseMatrix::clear(Index i, Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; ClearByZerossofa::linearalgebra::CRSDefaultPolicystatic; clearCol(Index j) overridesofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >inline; sofa::linearalgebra::BaseMatrix::clearCol(Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; clearColBlock(Index j)sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSMechanicalPolicy >inline; clearCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRow(Index i) overridesofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >inline; sofa::linearalgebra::BaseMatrix::clearRow(Index i)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowBlock(Index i)sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSMechanicalPolicy >inline; clearRowCol(Index i) overridesofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >inline; sofa::linearalgebra::BaseMatrix::clearRowCol(Index i)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowColBlock(Index i)sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSMechanicalPolicy >inline; clearRows(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowsCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; colBSize() constsofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSMechanicalPolicy >inline; cols(void) constsofa::linearalgebra::BaseMatrixinline; colsIndexsofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSMechanicalPolicy >; colSize() const overridesofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >inlinevirtual; colsValuesofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSMechanicalPolicy >; compress() overridesofa::linearalgebra::Compresse",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical-members.html:15085,clear,clearRowCol,15085,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical-members.html,1,['clear'],['clearRowCol']
Usability,"d ();  ; void clear ();  ; void resize (Size s, bool=true);  ; void reserve (Size s);  ; Index push_back (const_reference v);  . Friends; std::ostream & operator<< (std::ostream &os, const WriteAccessorVectorId< T > &vec);  ; std::istream & operator>> (std::istream &in, WriteAccessorVectorId< T > &vec);  . Attribute details. ◆ vref. template<class T > . container_type& sofa::helper::WriteAccessorVectorId< T >::vref. protected . Constructor details. ◆ WriteAccessorVectorId(). template<class T > . sofa::helper::WriteAccessorVectorId< T >::WriteAccessorVectorId ; (; container_type & ; container). inline . ◆ ~WriteAccessorVectorId(). template<class T > . sofa::helper::WriteAccessorVectorId< T >::~WriteAccessorVectorId ; (; ). inline . Function details. ◆ begin() [1/2]. template<class T > . iterator sofa::helper::WriteAccessorVectorId< T >::begin ; (; ). inline . ◆ begin() [2/2]. template<class T > . const_iterator sofa::helper::WriteAccessorVectorId< T >::begin ; (; ); const. inline . ◆ clear(). template<class T > . void sofa::helper::WriteAccessorVectorId< T >::clear ; (; ). inline . ◆ empty(). template<class T > . bool sofa::helper::WriteAccessorVectorId< T >::empty ; (; ); const. inline . ◆ end() [1/2]. template<class T > . iterator sofa::helper::WriteAccessorVectorId< T >::end ; (; ). inline . ◆ end() [2/2]. template<class T > . const_iterator sofa::helper::WriteAccessorVectorId< T >::end ; (; ); const. inline . ◆ operator()() [1/2]. template<class T > . reference sofa::helper::WriteAccessorVectorId< T >::operator() ; (; Index ; i). inline . ◆ operator()() [2/2]. template<class T > . const_reference sofa::helper::WriteAccessorVectorId< T >::operator() ; (; Index ; i); const. inline . ◆ operator[]() [1/2]. template<class T > . reference sofa::helper::WriteAccessorVectorId< T >::operator[] ; (; Index ; i). inline . ◆ operator[]() [2/2]. template<class T > . const_reference sofa::helper::WriteAccessorVectorId< T >::operator[] ; (; Index ; i); const. inline . ◆ push_back",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_write_accessor_vector_id.html:2157,clear,clear,2157,api/master/sofa/html/classsofa_1_1helper_1_1_write_accessor_vector_id.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_write_accessor_vector_id.html,1,['clear'],['clear']
Usability,"d Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::core::behavior::PairStateAccessor< DataTypes1, DataTypes2 >; SingleLink< PairStateAccessor< DataTypes1, DataTypes2 >, MechanicalState< DataTypes1 >, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > mstate1;  ; SingleLink< PairStateAccessor< DataTypes1, DataTypes2 >, MechanicalState< DataTypes2 >, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > mstate2;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(PenalityContactForceField, DataTypes), SOFA_TEMPLATE(core::behavior::PairInteractionForceField, DataTypes));  ; void clear (sofa::Size reserve=0);  ; void addContact (sofa::Index m1, sofa::Index m2, sofa::Index index1, sofa::Index index2, const Deriv &norm, Real dist, Real ks, Real mu_s=0.0f, Real mu_v=0.0f, sofa::Index oldIndex=0);  ; void addForce (const sofa::core::MechanicalParams *mparams, DataVecDeriv &data_f1, DataVecDeriv &data_f2, const DataVecCoord &data_x1, const DataVecCoord &data_x2, const DataVecDeriv &data_v1, const DataVecDeriv &data_v2) override;  ; void addDForce (const sofa::core::MechanicalParams *mparams, DataVecDeriv &data_df1, DataVecDeriv &data_df2, const DataVecDeriv &data_dx1, const DataVecDeriv &data_dx2) override;  ; void addKToMatrix (const sofa::core::MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix) override;  Compute the system matrix corresponding to . More...;  ; void buildStiffnessMatrix (core::behavior::StiffnessMatrix *matrix) override;  ; void buildDampingMatrix (core::behavior::DampingMatrix *) final;  ; SReal getPotentialEnergy (",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_penality_contact_force_field.html:3733,clear,clear,3733,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_penality_contact_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_penality_contact_force_field.html,1,['clear'],['clear']
Usability,d SOFA without OpenGL support. /how-to-carving-by-phantom-device; ; SOFA - Topic: [SOLVED] HOW TO carving by phantom device ?. /how-to-change-the-texture-of-oglmodel-at-runtime; ; SOFA - Topic: [SOLVED] How to change the texture of OglModel at runtime?. /how-to-close-the-runsofa-window-reinitialize-it-in-python; ; SOFA - Topic: [SOLVED] How to close the runSofa window/reinitialize it in python?. /how-to-completely-prevent-penetration-when-collision-occurs; ; SOFA - Topic: How to completely prevent penetration when collision occurs?. /how-to-connect-two-rigid-parts-while-one-would-separate-from-the-other-halfway; ; SOFA - Topic: How to connect two rigid parts while one would separate from the other halfway?. /how-to-constraint-objects-inside-a-closed-mesh-without-using-collision-models; ; SOFA - Topic: How to constraint objects inside a closed mesh without using collision models?. /how-to-construct-a-grasper-scenewith-force-feedback; . /page; . /15; ; SOFA - Topic: [SOLVED] How to construct a grasper scene(with force feedback) ?. /4; ; SOFA - Topic: [SOLVED] How to construct a grasper scene(with force feedback) ?. SOFA - Topic: [SOLVED] How to construct a grasper scene(with force feedback) ?. /how-to-control-cable-length-in-cable-driven-manipulator; ; SOFA - Topic: How to control cable length in cable-driven manipulator. /how-to-convert-arbitrary-triangular-surface-mesh-to-tetrahedron-mesh; ; SOFA - Topic: [SOLVED] How to convert arbitrary triangular surface mesh to tetrahedron mesh?. /how-to-convert-obj-to-msh-format-file; . /feed; ; [SOLVED] How to convert obj to msh format file? – SOFA. SOFA - Topic: [SOLVED] How to convert obj to msh format file?. /how-to-create-a-coaxial-contraints-between-part-a-and-b; . /feed; ; [SOLVED] How to create a coaxial contraints between part A and B – SOFA. /page; . /15; ; SOFA - Topic: [SOLVED] How to create a coaxial contraints between part A and B. /5; ; SOFA - Topic: [SOLVED] How to create a coaxial contraints between part A and B,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:318166,feedback,feedback,318166,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['feedback'],['feedback']
Usability,"d array. More...;  ; const sofa::type::vector< EdgesInQuad > & getEdgesInQuadArray ();  Returns the EdgesInQuadArray array (i.e. provide the 4 edge indices for each quad) More...;  ; const sofa::type::vector< QuadsAroundVertex > & getQuadsAroundVertexArray ();  Returns the QuadsAroundVertex array (i.e. provide the quad indices adjacent to each vertex). More...;  ; const sofa::type::vector< QuadsAroundEdge > & getQuadsAroundEdgeArray ();  Returns the QuadsAroundEdge array (i.e. provide the quad indices adjacent to each edge). More...;  ; bool hasQuads () const;  ; bool hasEdgesInQuad () const;  ; bool hasQuadsAroundVertex () const;  ; bool hasQuadsAroundEdge () const;  ; sofa::geometry::ElementType getTopologyType () const override;  Returns the type of the topology. More...;  ; bool linkTopologyHandlerToData (core::topology::TopologyHandler *topologyHandler, sofa::geometry::ElementType elementType) override;  ; bool unlinkTopologyHandlerToData (core::topology::TopologyHandler *topologyHandler, sofa::geometry::ElementType elementType) override;  ; void clear () override;  ; void addQuad (Index a, Index b, Index c, Index d) override;  ; const SeqQuads & getQuads () override;  Returns the quad array. More...;  ; const Quad getQuad (QuadID id) override;  Returns the quad corresponding to the QuadID i. More...;  ; QuadID getQuadIndex (PointID v1, PointID v2, PointID v3, PointID v4) override;  ; const EdgesInQuad & getEdgesInQuad (QuadID id) override;  Returns the set of edges adjacent to a given quad. More...;  ; const QuadsAroundVertex & getQuadsAroundVertex (PointID id) override;  Returns the set of quads adjacent to a given vertex. More...;  ; const QuadsAroundEdge & getQuadsAroundEdge (EdgeID id) override;  Returns the set of quads adjacent to a given edge. More...;  ; int getVertexIndexInQuad (const Quad &t, PointID vertexIndex) const override;  Returns the index (either 0, 1, 2, 3) of the vertex whose global index is vertexIndex. More...;  ; int getEdgeIndexInQuad ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_container.html:12839,clear,clear,12839,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_container.html,3,['clear'],['clear']
Usability,"d ignoring outside entries) More...;  ; template<typename real2 > ; constexpr Mat (const real2 *p) noexcept;  Constructor from an array of elements (stored per line). More...;  ; constexpr Size getNbLines () const;  number of lines More...;  ; constexpr Size getNbCols () const;  number of columns More...;  ; constexpr void operator= (const real *p) noexcept;  Assignment from an array of elements (stored per line). More...;  ; template<typename real2 > ; constexpr void operator= (const Mat< L, C, real2 > &m) noexcept;  Assignment from another matrix. More...;  ; template<Size L2, Size C2> ; constexpr void operator= (const Mat< L2, C2, real > &m) noexcept;  Assignment from a matrix of different size. More...;  ; template<Size L2, Size C2> ; constexpr void getsub (Size L0, Size C0, Mat< L2, C2, real > &m) const noexcept;  ; template<Size C2> ; constexpr void getsub (const Size L0, const Size C0, Vec< C2, real > &m) const noexcept;  ; constexpr void getsub (Size L0, Size C0, real &m) const noexcept;  ; template<Size L2, Size C2> ; constexpr void setsub (Size L0, Size C0, const Mat< L2, C2, real > &m) noexcept;  ; template<Size L2> ; constexpr void setsub (Size L0, Size C0, const Vec< L2, real > &v) noexcept;  ; constexpr void clear () noexcept;  Sets each element to 0. More...;  ; constexpr void fill (real r) noexcept;  Sets each element to r. More...;  ; constexpr const Line & line (Size i) const noexcept;  Read-only access to line i. More...;  ; constexpr Col col (Size j) const noexcept;  Copy of column j. More...;  ; constexpr LineNoInit & operator[] (Size i) noexcept;  Write access to line i. More...;  ; constexpr const LineNoInit & operator[] (Size i) const noexcept;  Read-only access to line i. More...;  ; constexpr LineNoInit & operator() (Size i) noexcept;  Write access to line i. More...;  ; constexpr const LineNoInit & operator() (Size i) const noexcept;  Read-only access to line i. More...;  ; constexpr real & operator() (Size i, Size j) noexcept;  Write acce",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_mat.html:2958,clear,clear,2958,api/master/sofa/html/classsofa_1_1type_1_1_mat.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_mat.html,2,['clear'],['clear']
Usability,"d matrix. More...;  ; void copy (const EigenBaseSparseMatrix &m, unsigned nbCol, unsigned shift);  ; void resize (Index nbRow, Index nbCol) override;  Resize the matrix without preserving the data (the matrix is set to zero) More...;  ; Index rowSize (void) const override;  number of rows More...;  ; Index colSize (void) const override;  number of columns More...;  ; void reserve (typename CompressedMatrix::Index reserveSize);  ; SReal element (Index i, Index j) const override;  Read the value of the element at row i, column j (using 0-based indices) More...;  ; void compress () override;  Add the values from the scheduled list, and clears the schedule list. More...;  ; Index * getRowBegin ();  ; Index * getColsIndex ();  ; Real * getColsValue ();  ; void clearRow (Index i) override;  Set all the entries of a row to 0. More...;  ; void clearRows (Index imin, Index imax) override;  Set all the entries of rows imin to imax-1 to 0. More...;  ; void clearCol (Index col) override;  Clears the all the entries of column imin to column imax-1. Not efficient ! More...;  ; void clearCols (Index imin, Index imax) override;  Set all the entries of column i and of row i to 0. Not efficient ! More...;  ; void clearRowCol (Index i) override;  Clears all the entries of rows imin to imax-1 and columns imin to imax-1. More...;  ; void clearRowsCols (Index imin, Index imax) override;  Clears all the values in rows imin to imax-1 and columns imin to imax-1. More...;  ; void clear () override;  Set all values to 0, by resizing to the same size. More...;  ; void mult (VectorEigen &result, const VectorEigen &data);  Matrix-vector product. More...;  ; void mult_MT (VectorEigen &result, const VectorEigen &data);  Matrix-vector product openmp multithreaded. More...;  ; template<class V1 , class V2 > ; void multVector (V1 &output, const V2 &input);  Matrix-Vector product (dense vector with contiguous memory layout) More...;  ; template<class V > ; V operator* (const V &input);  Matrix-Vector p",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_base_sparse_matrix.html:3736,clear,clearCol,3736,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_base_sparse_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_base_sparse_matrix.html,1,['clear'],['clearCol']
Usability,"d matrix. More...;  ; void copy (const EigenBaseSparseMatrix &m, unsigned nbCol, unsigned shift);  ; void resize (Index nbRow, Index nbCol) override;  Resize the matrix without preserving the data (the matrix is set to zero) More...;  ; Index rowSize (void) const override;  number of rows More...;  ; Index colSize (void) const override;  number of columns More...;  ; void reserve (typename CompressedMatrix::Index reserveSize);  ; SReal element (Index i, Index j) const override;  Read the value of the element at row i, column j (using 0-based indices) More...;  ; void compress () override;  Add the values from the scheduled list, and clears the schedule list. More...;  ; Index * getRowBegin ();  ; Index * getColsIndex ();  ; Real * getColsValue ();  ; void clearRow (Index i) override;  Set all the entries of a row to 0. More...;  ; void clearRows (Index imin, Index imax) override;  Set all the entries of rows imin to imax-1 to 0. More...;  ; void clearCol (Index col) override;  Clears the all the entries of column imin to column imax-1. Not efficient ! More...;  ; void clearCols (Index imin, Index imax) override;  Set all the entries of column i and of row i to 0. Not efficient ! More...;  ; void clearRowCol (Index i) override;  Clears all the entries of rows imin to imax-1 and columns imin to imax-1. More...;  ; void clearRowsCols (Index imin, Index imax) override;  Clears all the values in rows imin to imax-1 and columns imin to imax-1. More...;  ; void clear () override;  Set all values to 0, by resizing to the same size. More...;  ; void mult (VectorEigen &result, const VectorEigen &data);  Matrix-vector product. More...;  ; void mult_MT (VectorEigen &result, const VectorEigen &data);  Matrix-vector product openmp multithreaded. More...;  ; void multVector (V1 &output, const V2 &input);  Matrix-Vector product (dense vector with contiguous memory layout) More...;  ; V operator* (const V &input);  Matrix-Vector product (dense vector with contiguous memory layout) Mo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_sparse_matrix.html:5007,clear,clearCol,5007,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_sparse_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_sparse_matrix.html,1,['clear'],['clearCol']
Usability,"d sofa::component::constraint::projective::PointProjectiveConstraint< DataTypes >::applyConstraint ; (; const core::MechanicalParams * ; , . linearalgebra::BaseVector * ; , . const sofa::core::behavior::MultiMatrixAccessor * ;  . ). overridevirtual . Project the global Mechanical Vector to constrained space using offset parameter. ; Reimplemented from sofa::core::behavior::BaseProjectiveConstraintSet. ◆ applyConstraint() [3/3]. template<class DataTypes > . void sofa::component::constraint::projective::PointProjectiveConstraint< DataTypes >::applyConstraint ; (; sofa::core::behavior::ZeroDirichletCondition * ; zeroDirichletCondition). overridevirtual . Project the global matrix to constrained space by using the ZeroDirichletCondition interface It allows to define what rows and columns to discard for the projection. ; Reimplemented from sofa::core::behavior::BaseProjectiveConstraintSet. ◆ clearConstraints(). template<class DataTypes > . void sofa::component::constraint::projective::PointProjectiveConstraint< DataTypes >::clearConstraints. ◆ draw(). template<class DataTypes > . void sofa::component::constraint::projective::PointProjectiveConstraint< DataTypes >::draw ; (; const core::visual::VisualParams * ; ). overridevirtual . Render internal data of this object, for debugging purposes. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ fixAllDOFs(). template<class DataTypes > . bool sofa::component::constraint::projective::PointProjectiveConstraint< DataTypes >::fixAllDOFs ; (; ); const. inline . ◆ init(). template<class DataTypes > . void sofa::component::constraint::projective::PointProjectiveConstraint< DataTypes >::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ projectJacobianMatrix(). template<class DataTypes > . void sofa::component::constraint::projective::PointProjectiveConstraint< DataTypes >::projectJacobia",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_point_projective_constraint.html:24443,clear,clearConstraints,24443,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_point_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_point_projective_constraint.html,1,['clear'],['clearConstraints']
Usability,"d sofa::component::mapping::linear::DeformableOnRigidFrameMapping< TIn, TInRoot, TOut >::applyJT ; (; const core::MechanicalParams * ; , . const type::vector< InDataVecDeriv * > & ; dataVecOutForce, . const type::vector< InRootDataVecDeriv * > & ; dataVecOutRootForce, . const type::vector< const OutDataVecDeriv * > & ; dataVecInForce . ). override . ◆ applyJT() [3/4]. template<class TIn , class TInRoot , class TOut > . void sofa::component::mapping::linear::DeformableOnRigidFrameMapping< TIn, TInRoot, TOut >::applyJT ; (; InMatrixDeriv & ; out, . const OutMatrixDeriv & ; in, . InRootMatrixDeriv * ; outroot . ). ◆ applyJT() [4/4]. template<class TIn , class TInRoot , class TOut > . void sofa::component::mapping::linear::DeformableOnRigidFrameMapping< TIn, TInRoot, TOut >::applyJT ; (; InVecDeriv & ; out, . const OutVecDeriv & ; in, . InRootVecDeriv * ; outroot . ). ◆ clear(). template<class TIn , class TInRoot , class TOut > . void sofa::component::mapping::linear::DeformableOnRigidFrameMapping< TIn, TInRoot, TOut >::clear ; (; int ; reserve = 0). ◆ draw(). template<class TIn , class TInRoot , class TOut > . void sofa::component::mapping::linear::DeformableOnRigidFrameMapping< TIn, TInRoot, TOut >::draw ; (; const core::visual::VisualParams * ; vparams). override . ◆ handleTopologyChange(). template<class TIn , class TInRoot , class TOut > . void sofa::component::mapping::linear::DeformableOnRigidFrameMapping< TIn, TInRoot, TOut >::handleTopologyChange ; (; core::topology::Topology * ; t). override . ◆ init(). template<class TIn , class TInRoot , class TOut > . void sofa::component::mapping::linear::DeformableOnRigidFrameMapping< TIn, TInRoot, TOut >::init ; (; void ; ). override . ◆ recomputeRigidMass(). template<class TIn , class TInRoot , class TOut > . void sofa::component::mapping::linear::DeformableOnRigidFrameMapping< TIn, TInRoot, TOut >::recomputeRigidMass. MAP the mass: this function recompute the rigid mass (gravity center position and inertia) of the objec",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_deformable_on_rigid_frame_mapping.html:12740,clear,clear,12740,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_deformable_on_rigid_frame_mapping.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_deformable_on_rigid_frame_mapping.html,1,['clear'],['clear']
Usability,"d v, core::MultiVecDerivId dv, core::ConstMultiVecDerivId correction) overridesofa::component::constraint::lagrangian::correction::GenericConstraintCorrectionvirtual; Base()sofa::core::objectmodel::Baseprotected; BaseConstraintCorrection()sofa::core::behavior::BaseConstraintCorrectionprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit() overridesofa::component::constraint::lagrangian::correction::GenericConstraintCorrectionvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup() overridesofa::component::constraint::lagrangian::correction::GenericConstraintCorrectionvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeMotionCorrectionFromLambda(const core::ConstraintParams *cparams, core::MultiVecDerivId dx, const linearalgebra::BaseVector *lambda) overridesofa::component::constraint::lagrangian::correction::GenericConstraintCorrectionvirtual; computeResidual(const core::ExecParams *params, linearalgebra::BaseVector *lambda) overridesofa::component::constraint::lagrangian::correction::GenericConstraintCorrectionvirtual; constraintsolverssofa::component::constraint::lagrangian::correction::GenericConstraintCorrectionprotected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_complianceFactorsofa::component::constraint::lagrangian::correction::Generic",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_generic_constraint_correction-members.html:4089,clear,clearLoggedMessages,4089,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_generic_constraint_correction-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_generic_constraint_correction-members.html,1,['clear'],['clearLoggedMessages']
Usability,"d, bool create=false);  Write block method when rowId and colId are known, this is an optimized wblock specification. More...;  ; const Block & getBlock (Index i, Index j) const;  ; const BlockTranspose getSymBlock (Index i, Index j) const;  ; void setBlock (Index i, Index j, const Block &v);  ; void addBlock (Index i, Index j, const Block &v);  ; void setBlock (Index i, Index j, Index &rowId, Index &colId, const Block &v);  ; void addBlock (Index i, Index j, Index &rowId, Index &colId, const Block &v);  ; Block * getWBlock (Index i, Index j, bool create=false);  ; void clearRowBlock (Index i);  Clear row block method. Clear all col of this line. More...;  ; void clearColBlock (Index j);  Clear col block method. Clear this col in all row of matrix. More...;  ; std::size_t countEmptyBlocks () const;  ; template<typename = typename std::enable_if< Policy::IsAlwaysSquare>> ; void clearRowColBlock (Index i);  Clear both row i and column i in a square matrix. More...;  ; void clear ();  Completely clear the matrix. More...;  ; bool check_matrix ();  ; std::ostream & write (std::ostream &os) const;  ; std::istream & read (std::istream &is);  ; BlockMatrixWriter operators; void add (unsigned int bi, unsigned int bj, const Block &b);  ; void add (unsigned int bi, unsigned int bj, int &rowId, int &colId, const Block &b);  ; void addDBlock (unsigned int bi, unsigned int bj, const DBlock &b);  ; void addDValue (unsigned int bi, unsigned int bj, const Real b);  ; void addDValue (unsigned int bi, unsigned int bj, int &rowId, int &colId, const Real b);  ; template<typename = typename std::enable_if< Policy::IsAlwaysSquare>> ; void addDiag (unsigned int bi, const Block &b);  ; template<typename = typename std::enable_if< Policy::IsAlwaysSquare>> ; void addDiag (unsigned int bi, int &rowId, int &colId, const Block &b);  ; template<typename = typename std::enable_if< Policy::IsAlwaysSquare>> ; void addDiagDBlock (unsigned int bi, const DBlock &b);  ; template<typename = typename std:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_generic.html:5655,clear,clear,5655,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_generic.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_generic.html,2,['clear'],['clear']
Usability,"d, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseType typedefsofa::core::objectmodel::Base; clearLoggedMessages() constsofa::core::objectmodel::Base; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; f_bboxsofa::core::objectmodel::Base; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Basevirtual; findGlobalField(const std::string &name) constsofa::core::objectmodel::Base; findLink(const std::string &name) constsofa::core::objectmodel::Base; findLinkDest(T *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Baseinline; findLinkDestClass(const BaseClass *destType, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Basevirtual; findLinks(const std::string",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base-members.html:1262,clear,clearLoggedMessages,1262,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base-members.html,3,['clear'],['clearLoggedMessages']
Usability,"d::ManyThreadsPerEnd Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Protected Member Functions |; List of all members . sofa::helper::system::thread::ManyThreadsPerEnd Class Reference . #include <CircularQueue.h>. Inheritance diagram for sofa::helper::system::thread::ManyThreadsPerEnd:. [legend]; Detailed Description; This is a lock-free (but not wait-free) multi-producer multi-consumer implementation of a circular queue matching the ThreadAccessPolicy of CircularQueue. NotemaxCapacity parameters MUST always be a power of 2. . Protected Attributes; AtomicInt head;  ; AtomicInt tail;  . Protected Member Functions;  ManyThreadsPerEnd ();  ; bool isEmpty (unsigned maxSize) const;  ; bool isFull (unsigned maxSize) const;  ; unsigned size (unsigned maxSize) const;  ; void init (AtomicInt array[], int maxCapacity);  ; bool push (AtomicInt array[], int maxSize, int maxCapacity, const AtomicInt &item);  ; bool pop (AtomicInt array[], int maxSize, int maxCapacity, AtomicInt &item, bool clear=true);  ; unsigned skip (AtomicInt array[], int maxSize, int maxCapacity, unsigned outmaxsize, bool clear=true);  ; template<class OutputIterator > ; unsigned pop (AtomicInt array[], int maxSize, int maxCapacity, OutputIterator out, unsigned outmaxsize, bool clear=true);  . Attribute details. ◆ head. AtomicInt sofa::helper::system::thread::ManyThreadsPerEnd::head. protected . ◆ tail. AtomicInt sofa::helper::system::thread::ManyThreadsPerEnd::tail. protected . Constructor details. ◆ ManyThreadsPerEnd(). SOFA_HELPER_API sofa::helper::system::thread::ManyThreadsPerEnd::ManyThreadsPerEnd ; (; ). inlineprotected . Function details. ◆ init(). SOFA_HELPER_API void sofa::helper::system::thread::ManyThreadsPerEnd::init ; (; AtomicInt ; array[], . int ; maxCapacity . ). inlineprotected . ◆ isEmpty(). SOFA_HELPER_API bool sofa::helper::system::thread::ManyThreadsPerEnd::isEmpty ; (; unsigned ; maxSize); const. inlineprotected . ◆ i",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1system_1_1thread_1_1_many_threads_per_end.html:1100,clear,clear,1100,api/master/sofa/html/classsofa_1_1helper_1_1system_1_1thread_1_1_many_threads_per_end.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1system_1_1thread_1_1_many_threads_per_end.html,3,['clear'],['clear']
Usability,"d::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; beginBroadPhase()sofa::core::collision::Intersectioninlinevirtual; beginNarrowPhase()sofa::core::collision::Intersectioninlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; endBroadPhase()sofa::core::collision::Intersectioninlinevirtual; endNarrowPhase()sofa::core::collision::Intersectioninlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::c",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_intersection-members.html:2020,clear,clearLoggedMessages,2020,api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_intersection-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_intersection-members.html,1,['clear'],['clearLoggedMessages']
Usability,"d::vector< dataTime > sofa::gui::qt::GraphVisitor::visitorsTimeMax. protected . ◆ visitorsTimeTotal. std::vector< dataTime > sofa::gui::qt::GraphVisitor::visitorsTimeTotal. protected . ◆ window. WindowVisitor* sofa::gui::qt::GraphVisitor::window. protected . Constructor details. ◆ GraphVisitor(). sofa::gui::qt::GraphVisitor::GraphVisitor ; (; WindowVisitor * ; w). inline . Function details. ◆ addComment(). QTreeWidgetItem * sofa::gui::qt::GraphVisitor::addComment ; (; QTreeWidgetItem * ; element, . QTreeWidgetItem * ; elementAbove, . std::string ; comment . ). ◆ addInformation(). void sofa::gui::qt::GraphVisitor::addInformation ; (; QTreeWidgetItem * ; element, . std::string ; name, . std::string ; info . ). ◆ addNode(). QTreeWidgetItem * sofa::gui::qt::GraphVisitor::addNode ; (; QTreeWidgetItem * ; parent, . QTreeWidgetItem * ; elementAbove, . std::string ; info . ). ◆ addTime(). void sofa::gui::qt::GraphVisitor::addTime ; (; QTreeWidgetItem * ; element, . std::string ; info . ). ◆ clear(). void sofa::gui::qt::GraphVisitor::clear ; (; ). inline . ◆ getTime(). double sofa::gui::qt::GraphVisitor::getTime ; (; const tinyxml2::XMLAttribute * ; attribute); const. inline . ◆ getTotalTime(). double sofa::gui::qt::GraphVisitor::getTotalTime ; (; tinyxml2::XMLNode * ; node); const. ◆ load(). bool sofa::gui::qt::GraphVisitor::load ; (; std::string & ; file). ◆ openAttribute(). void sofa::gui::qt::GraphVisitor::openAttribute ; (; tinyxml2::XMLElement * ; element, . QTreeWidgetItem * ; item . ). protected . ◆ openNode(). QTreeWidgetItem * sofa::gui::qt::GraphVisitor::openNode ; (; tinyxml2::XMLNode * ; node, . QTreeWidgetItem * ; parent, . QTreeWidgetItem * ; elementAbove . ). protected . ◆ openTime(). void sofa::gui::qt::GraphVisitor::openTime ; (; tinyxml2::XMLNode * ; element, . QTreeWidgetItem * ; item . ). protected . ◆ setGraph(). void sofa::gui::qt::GraphVisitor::setGraph ; (; QTreeWidget * ; g). inline . sofaguiqtGraphVisitor; Generated on Mon Nov 11 2024 03:23:42 for S",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_graph_visitor.html:3738,clear,clear,3738,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_graph_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_graph_visitor.html,1,['clear'],['clear']
Usability,"d; BaseMeshTopology()sofa::core::topology::BaseMeshTopologyprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; beginChange() constsofa::core::topology::BaseMeshTopologyvirtual; beginStateChange() constsofa::core::topology::BaseMeshTopologyvirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkConnexity()sofa::core::topology::BaseMeshTopologyinlinevirtual; checkTopology() constsofa::core::topology::BaseMeshTopologyinlinevirtual; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear()sofa::core::topology::BaseMeshTopologyvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; Edge typedefsofa::core::topology::Topology; EdgeID typedefsofa::core::topology::Topology; EdgesAroundVertex typedefsofa::core::topology::BaseMeshTopology; EdgesInHexahedron typedefsofa::core::topology::BaseMeshTopology; EdgesInQuad typedefsofa::core::topology::BaseMeshTopology; EdgesInTetrahedron typedefsofa::core::topology::BaseMeshTopol",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_base_mesh_topology-members.html:2912,clear,clearLoggedMessages,2912,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_base_mesh_topology-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_base_mesh_topology-members.html,1,['clear'],['clearLoggedMessages']
Usability,"d; BaseType typedefsofa::core::objectmodel::Base; buildGeometricStiffnessMatrix(sofa::core::GeometricStiffnessMatrix *matrices)sofa::core::BaseMappingvirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::core::Mapping< TIn, TOut >inlinestatic; sofa::core::BaseMapping::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkLinearSolverSymmetry(const core::MechanicalParams *mparams) constsofa::component::mapping::nonlinear::NonLinearMappingData< HasStabilizedGeometricStiffness >protected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeAccFromMapping(const MechanicalParams *mparams, MultiVecDerivId outAcc, ConstMultiVecDerivId inVel, ConstMultiVecDerivId inAcc) overridesofa::core::Mapping< TIn, TOut >virtual; computeAccFromMapping(const MechanicalParams *, OutDataVecDeriv &, const InDataVecDeriv &, const InDataVecDeriv &)sofa::core::Mapping< TIn, TOut >inlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::core::Mapping< TIn, TOut >inlinestatic; createMappedMatrix(const behavior::BaseMechanicalState *state1, const behavior::BaseMechanicalState *state2, func_createMappedMatrix) overridesofa::core::Mapping< TIn, TOut >virtual; d_componentStatesofa::core::objectmodel:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_base_non_linear_mapping-members.html:4892,clear,clearLoggedMessages,4892,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_base_non_linear_mapping-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_base_non_linear_mapping-members.html,1,['clear'],['clearLoggedMessages']
Usability,"dDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addObject(sptr< BaseObject >, TypeOfInsertion=TypeOfInsertion::AtEnd)sofa::core::objectmodel::BaseContextinlinevirtual; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseContext()sofa::core::objectmodel::BaseContextprotected; BaseType typedefsofa::core::objectmodel::Base; canChangeSleepingState() constsofa::core::objectmodel::BaseContextvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; executeVisitor(simulation::Visitor *, bool precomputedOrder=false)sofa::core::objectmodel::BaseContextvirtual; f_bboxsofa::core::objectmodel::Base; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Basevirtual; findGlobalField(const std::string &name) constsofa::core::objectmodel::Base; findLink(const std::string &name) constsofa::core::objectmodel::Base; findLinkDest(T *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Baseinline; findLinkDestClass(const BaseClass *destType, ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_context-members.html:1531,clear,clearLoggedMessages,1531,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_context-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_context-members.html,1,['clear'],['clearLoggedMessages']
Usability,"dGeometricStiffnessMatrix(sofa::core::GeometricStiffnessMatrix *matrices) overridesofa::component::mapping::nonlinear::DistanceFromTargetMapping< TIn, TOut >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::core::Mapping< TIn, TOut >inlinestatic; sofa::core::BaseMapping::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkLinearSolverSymmetry(const core::MechanicalParams *mparams) constsofa::component::mapping::nonlinear::NonLinearMappingData< HasStabilizedGeometricStiffness >protected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear()sofa::component::mapping::nonlinear::DistanceFromTargetMapping< TIn, TOut >; clearLoggedMessages() constsofa::core::objectmodel::Base; computeAccFromMapping(const MechanicalParams *mparams, MultiVecDerivId outAcc, ConstMultiVecDerivId inVel, ConstMultiVecDerivId inAcc) overridesofa::core::Mapping< TIn, TOut >virtual; computeAccFromMapping(const MechanicalParams *, OutDataVecDeriv &, const InDataVecDeriv &, const InDataVecDeriv &)sofa::core::Mapping< TIn, TOut >inlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeCoordPositionDifference(Direction &r, const InCoord &a, const InCoord &b)sofa::component::mapping::nonlinear::DistanceFromTargetMapping< TIn, TOut >protected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::core::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_distance_from_target_mapping-members.html:5061,clear,clear,5061,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_distance_from_target_mapping-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_distance_from_target_mapping-members.html,1,['clear'],['clear']
Usability,"dId x, core::MultiVecDerivId v, double time=0.0);  Apply projective constraints to the given position and velocity vectors. More...;  ; void addMdx (core::MultiVecDerivId res, core::MultiVecDerivId dx, SReal factor=1.0);  res += factor M.dx More...;  ; void integrateVelocity (core::MultiVecDerivId res, core::ConstMultiVecCoordId x, core::ConstMultiVecDerivId v, SReal dt);  res = x + v.dt More...;  ; void accFromF (core::MultiVecDerivId a, core::ConstMultiVecDerivId f);  ; void computeEnergy (SReal &kineticEnergy, SReal &potentialEnergy);  Compute Energy. More...;  ; void computeForce (core::MultiVecDerivId result, bool clear=true, bool accumulate=true);  Compute the current force (given the latest propagated position and velocity) More...;  ; void computeDf (core::MultiVecDerivId df, bool clear=true, bool accumulate=true);  Compute the current force delta (given the latest propagated displacement) More...;  ; void computeDfV (core::MultiVecDerivId df, bool clear=true, bool accumulate=true);  Compute the current force delta (given the latest propagated velocity) More...;  ; void addMBKdx (core::MultiVecDerivId df, SReal m, SReal b, SReal k, bool clear=true, bool accumulate=true);  accumulate $ df += (m M + b B + k K) dx $ (given the latest propagated displacement) More...;  ; void addMBKv (core::MultiVecDerivId df, SReal m, SReal b, SReal k, bool clear=true, bool accumulate=true);  accumulate $ df += (m M + b B + k K) velocity $ More...;  ; void addSeparateGravity (SReal dt, core::MultiVecDerivId result=core::VecDerivId::velocity());  Add dt*Gravity to the velocity. More...;  ; void computeContactForce (core::MultiVecDerivId result);  ; void computeContactDf (core::MultiVecDerivId df);  ; void computeAcc (SReal t, core::MultiVecDerivId a, core::MultiVecCoordId x, core::MultiVecDerivId v);  Compute a(x,v) at time t. Parameters x and v not const due to propagation through mappings. More...;  ; void computeForce (SReal t, core::MultiVecDerivId f, core::MultiVecCoordId x,",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1common_1_1_mechanical_operations.html:3528,clear,clear,3528,api/master/sofa/html/classsofa_1_1simulation_1_1common_1_1_mechanical_operations.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1common_1_1_mechanical_operations.html,1,['clear'],['clear']
Usability,"dUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseLoader()sofa::core::loader::BaseLoaderprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; canLoad() overridesofa::core::loader::SceneLoadervirtual; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_filenamesofa::core::loader::BaseLoader; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const B",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_scene_loader-members.html:1988,clear,clearLoggedMessages,1988,api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_scene_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_scene_loader-members.html,1,['clear'],['clearLoggedMessages']
Usability,"datorFn fn);  ; DestType * get () const;  ; void reset ();  ; void set (DestPtr v);  ; void set (DestPtr v, const std::string &path);  ; void setPath (const std::string &path);  ;  operator DestType * () const;  Convenient operators to make a SingleLink appear as a regular pointer. More...;  ; DestType * operator-> () const;  ; DestType & operator* () const;  ; DestPtr operator= (DestPtr v);  ;  Public Member Functions inherited from sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags &~BaseLink::FLAG_MULTILINK >;  TLink ();  ;  TLink (const InitLink< OwnerType > &init);  ;  ~TLink () override;  ; size_t size () const;  ; bool empty () const;  ; const Container & getValue () const;  ; const_iterator begin () const;  ; const_iterator end () const;  ; const_reverse_iterator rbegin () const;  ; const_reverse_iterator rend () const;  ; void clear ();  ; bool addBegin (DestPtr v);  ; bool add (DestPtr v);  ; bool add (DestPtr v, const std::string &path);  ; bool addPath (const std::string &path);  ; bool remove (DestPtr v);  ; bool removeAt (std::size_t index);  ; bool removePath (const std::string &path);  ; const BaseClass * getDestClass () const override;  ; const BaseClass * getOwnerClass () const override;  ; size_t getSize () const override;  ; sofa::core::objectmodel::Base * getOwnerBase () const override;  ; void setOwner (OwnerType *owner);  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseLink;  BaseLink (LinkFlags flags);  ;  BaseLink (const BaseInitLink &init, LinkFlags flags);  ; virtual ~BaseLink ();  ; const std::string & getName () const;  ; void setName (const std::string &name);  ; const std::string & getHelp () const;  Get help message. More...;  ; void setHelp (const std::string &val);  Set help message. More...;  ; void setFlag (LinkFlagsEnum flag, bool b);  Set one of the flags. More...;  ; bool getFlag (LinkFlagsEnum flag) const;  Get one flag. More...;  ; bool isMultiLink () const;  ; bool isStrongLink () const;  ; ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_single_link.html:2395,clear,clear,2395,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_single_link.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_single_link.html,1,['clear'],['clear']
Usability,"de;  Number of columns. More...;  ; void resizeBlock (Index nbBRow, Index nbBCol) override;  This override classic resizeBlock to fill nRow and nCol values. More...;  ; void resize (Index nbRow, Index nbCol) override;  ; void extend (Index nbRow, Index nbCol);  ; SReal element (Index i, Index j) const override;  get scalar element i, j of matrix More...;  ; void set (Index i, Index j, double v) override;  set scalar element i, j of matrix More...;  ; void add (Index i, Index j, double v) override;  add scalar v at element i, j of matrix More...;  ; void set (Index i, Index j, int &rowId, int &colId, double v);  set scalar element i, j of matrix when rowId and colId are known More...;  ; template<typename T = Block, typename std::enable_if_t<!std::is_same_v< T, double > &&!std::is_same_v< T, float >, int > = 0> ; void add (Index i, Index j, int &rowId, int &colId, double v);  add scalar v at element i, j when rowId and colId are known More...;  ; void clear (Index i, Index j) override;  clear scalar at element i, j of matrix More...;  ; void add (Index i, Index j, const type::Mat3x3d &_M) override;  ; void add (Index i, Index j, const type::Mat3x3f &_M) override;  ; void clearRow (Index i) override;  Clear row scalar method. Clear all col of this line. More...;  ; void clearCol (Index j) override;  Clear col scalar method. Clear this col in all row of matrix. More...;  ; void clearRowCol (Index i) override;  Clear both row i and column i in a square matrix. More...;  ; void clear () override;  Completely clear the matrix. More...;  ; template<class M2 > ; bool hasRef (const M2 *m) const;  ; std::string expr () const;  ; bool valid () const;  ; template<class Dest > ; void addTo (Dest *dest) const;  ; template<class TBlock2 , class TPolicy2 > ; void operator= (const CompressedRowSparseMatrixMechanical< TBlock2, TPolicy2 > &m);  ; template<class TBlock2 , class TPolicy2 > ; void operator+= (const CompressedRowSparseMatrixMechanical< TBlock2, TPolicy2 > &m);  ; template",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical.html:5677,clear,clear,5677,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical.html,2,['clear'],['clear']
Usability,"deSPtr node, const std::string &name, const std::map< std::string, std::string > &params=std::map< std::string, std::string >{});  create a child to the provided nodeof given name. The parameter ""params"" is for passing specific data argument to the created object. More...;  ; NodeSPtr SOFA_SIMPLEAPI_API createChild (NodeSPtr node, BaseObjectDescription &desc);  create a child to the provided node. The parameter ""params"" is for passing specific data argument to the created object (including the node name). More...;  ; void SOFA_SIMPLEAPI_API dumpScene (NodeSPtr root);  ; template<class T > ; std::string str (const T &t);  . Function Documentation. ◆ cleanup(). SOFA_SIMPLEAPI_API void sofa::simpleapi::cleanup ; (; ). Clean up the resources used by the SofaSimulationGraph library, as well as its dependencies. . ◆ createChild() [1/4]. Node::SPtr sofa::simpleapi::createChild ; (; Node::SPtr ; node, . BaseObjectDescription & ; desc . ). ◆ createChild() [2/4]. Node::SPtr sofa::simpleapi::createChild ; (; Node::SPtr ; node, . const std::string & ; name, . const std::map< std::string, std::string > & ; params . ). ◆ createChild() [3/4]. NodeSPtr SOFA_SIMPLEAPI_API sofa::simpleapi::createChild ; (; NodeSPtr ; node, . BaseObjectDescription & ; desc . ). create a child to the provided node. The parameter ""params"" is for passing specific data argument to the created object (including the node name). . ◆ createChild() [4/4]. NodeSPtr SOFA_SIMPLEAPI_API sofa::simpleapi::createChild ; (; NodeSPtr ; node, . const std::string & ; name, . const std::map< std::string, std::string > & ; params = std::map< std::string, std::string >{} . ). create a child to the provided nodeof given name. The parameter ""params"" is for passing specific data argument to the created object. . ◆ createNode(). NodeSPtr SOFA_SIMPLEAPI_API sofa::simpleapi::createNode ; (; const std::string & ; name). create a child to the provided node. The parameter ""params"" is for passing specific data argument to the created",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simpleapi.html:3423,simpl,simpleapi,3423,api/master/sofa/html/namespacesofa_1_1simpleapi.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simpleapi.html,1,['simpl'],['simpleapi']
Usability,"defsofa::component::constraint::projective::DirectionProjectiveConstraint< DataTypes >; bsize enum valuesofa::component::constraint::projective::DirectionProjectiveConstraint< DataTypes >; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ProjectiveConstraintSet< DataTypes >inlinestatic; sofa::core::behavior::BaseProjectiveConstraintSet::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearConstraints()sofa::component::constraint::projective::DirectionProjectiveConstraint< DataTypes >; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; Coord typedefsofa::component::constraint::projective::DirectionProjectiveConstraint< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; CPos typedefsofa::component::constraint::projective::DirectionProjectiveConstraint< DataTypes >; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_directionsofa::component::constraint::projective::DirectionProjectiveConstraint< DataTypes >; d_drawSizesofa::component::constraint::projective::DirectionProjectiveConstraint< DataTypes >; d_indicessofa::component::constraint::projective::DirectionProjectiveConstraint< DataTypes >; d_messageLogCountsofa::core::objectmodel::Basemut",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_direction_projective_constraint-members.html:3446,clear,clearLoggedMessages,3446,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_direction_projective_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_direction_projective_constraint-members.html,1,['clear'],['clearLoggedMessages']
Usability,"del::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; beginNarrowPhase()sofa::core::collision::NarrowPhaseDetectionvirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeInstance(Instance inst) overridesofa::core::collision::Detectioninlineprotectedvirtual; changeInstanceBP(Instance)sofa::core::collision::Detectioninlineprotectedvirtual; changeInstanceNP(Instance inst) overridesofa::core::collision::NarrowPhaseDetectionprotectedvirtual; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; CollisionAlgorithm()sofa::core::collision::CollisionAlgorithminlineprotected; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; Detection()sofa::core::collision::Detectioninlineprotected; DetectionOutputMap typedefsofa::core::collision::NarrowPhaseDetection; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *vparams) overridesofa::core::collision::NarrowPhaseDetectionvirtual; endNarrowPhase()sofa::core::collision::NarrowPhaseDetectionvirtual; f_bboxsofa::core::objectmodel::Base; f_listen",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_ray_trace_narrow_phase-members.html:2707,clear,clearLoggedMessages,2707,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_ray_trace_narrow_phase-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_ray_trace_narrow_phase-members.html,2,['clear'],['clearLoggedMessages']
Usability,"del::Baseprotected; BaseConstraint()sofa::core::behavior::BaseConstraintinlineprotected; BaseConstraintSet()sofa::core::behavior::BaseConstraintSetprotected; BaseInteractionConstraint()sofa::core::behavior::BaseInteractionConstraintinlineprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; buildConstraintMatrix(const ConstraintParams *cParams, MultiMatrixDerivId cId, unsigned int &cIndex)=0sofa::core::behavior::BaseConstraintSetpure virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; sofa::computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; sofa::core::behavior::StateAccessor::computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; ConstArea typedefsofa::core::behavior::BaseConstraint; ConstCoord typedefsofa::core::behavior::BaseConstraint; ConstDeriv typedefsofa::core::behavior::BaseConstraint; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_constraintIndexsofa::core::behavior::BaseConstraintSet; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParam",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_interaction_constraint-members.html:2293,clear,clearLoggedMessages,2293,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_interaction_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_interaction_constraint-members.html,1,['clear'],['clearLoggedMessages']
Usability,"devirtual . Set all values to 0, by resizing to the same size. ; Implements sofa::linearalgebra::BaseMatrix. ◆ clearCol(). template<class TReal > . void sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::clearCol ; (; Index ; col). inlineoverridevirtual . Clears the all the entries of column imin to column imax-1. Not efficient ! ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearCols(). template<class TReal > . void sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::clearCols ; (; Index ; imin, . Index ; imax . ). inlineoverridevirtual . Set all the entries of column i and of row i to 0. Not efficient ! ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRow(). template<class TReal > . void sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::clearRow ; (; Index ; i). inlineoverridevirtual . Set all the entries of a row to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRowCol(). template<class TReal > . void sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::clearRowCol ; (; Index ; i). inlineoverridevirtual . Clears all the entries of rows imin to imax-1 and columns imin to imax-1. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRows(). template<class TReal > . void sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::clearRows ; (; Index ; imin, . Index ; imax . ). inlineoverridevirtual . Set all the entries of rows imin to imax-1 to 0. ; Set all the entries of a column to 0. Not efficient ! ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRowsCols(). template<class TReal > . void sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::clearRowsCols ; (; Index ; imin, . Index ; imax . ). inlineoverridevirtual . Clears all the values in rows imin to imax-1 and columns imin to imax-1. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ coeffRef(). template<class TReal > . Real& sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::coeffRef ; (; Index ; i, . Index ; j . ). inline . Return a reference ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_base_sparse_matrix.html:20535,clear,clearRowCol,20535,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_base_sparse_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_base_sparse_matrix.html,1,['clear'],['clearRowCol']
Usability,"dex bj, Index, Index) const;  ; const Block & sub (Index i, Index j, Index, Index) const;  ; Block & asub (Index bi, Index bj, Index, Index);  ; Block & sub (Index i, Index j, Index, Index);  ; template<class B > ; void getSubMatrix (Index i, Index j, Index nrow, Index ncol, B &m);  ; template<class B > ; void getAlignedSubMatrix (Index bi, Index bj, Index nrow, Index ncol, B &m);  ; template<class B > ; void setSubMatrix (Index i, Index j, Index nrow, Index ncol, const B &m);  ; template<class B > ; void setAlignedSubMatrix (Index bi, Index bj, Index nrow, Index ncol, const B &m);  ; void set (Index i, Index j, double v) override;  Write the value of the element at row i, column j (using 0-based indices) More...;  ; void add (Index i, Index j, double v) override;  Add v to the existing value of the element at row i, column j (using 0-based indices) More...;  ; template<std::size_t M = N, std::enable_if_t<(M > 3), int > = 0> ; void add (Index row, Index col, const type::Mat< BSIZE, BSIZE, Real > &v);  ; void clear (Index i, Index j) override;  ; void clearRow (Index i) override;  Reset all the values in row i to 0. More...;  ; void clearCol (Index j) override;  Reset the all values in column j to 0. More...;  ; void clearRowCol (Index i) override;  Reset the value of both row and column i to 0. More...;  ; void clear () override;  Reset all values to 0. More...;  ; template<class Real2 > ; FullVector< Real2 > operator* (const FullVector< Real2 > &v) const;  ;  Public Member Functions inherited from sofa::linearalgebra::BaseMatrix;  BaseMatrix ();  ; virtual ~BaseMatrix ();  ; Index rows (void) const;  Number of rows (Eigen-compatible API) More...;  ; Index cols (void) const;  Number of columns (Eigen-compatible API) More...;  ; SReal operator() (Index i, Index j) const;  Read the value of the element at row i, column j (using 0-based indices). Eigen-compatible API. More...;  ; virtual void add (Index row, Index col, const type::Mat3x3d &_M);  Adding values from a 3x3",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_b_t_d_matrix.html:2470,clear,clear,2470,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_b_t_d_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_b_t_d_matrix.html,2,['clear'],"['clear', 'clearRow']"
Usability,"dex i) const;  ; void resize (Index nbRow, Index) override;  Resize the matrix and reset all values to 0. More...;  ; Index rowSize (void) const override;  Number of rows. More...;  ; Index colSize (void) const override;  Number of columns. More...;  ; SReal element (Index i, Index j) const override;  Read the value of the element at row i, column j (using 0-based indices) More...;  ; void set (Index i, Index j, double v) override;  Write the value of the element at row i, column j (using 0-based indices) More...;  ; void add (Index i, Index j, double v) override;  Add v to the existing value of the element at row i, column j (using 0-based indices) More...;  ; void clear (Index i, Index j) override;  ; void clearRow (Index i) override;  Reset all the values in row i to 0. More...;  ; void clearCol (Index j) override;  Reset the all values in column j to 0. More...;  ; void clearRowCol (Index i) override;  Reset the value of both row and column i to 0. More...;  ; void clear () override;  Reset all values to 0. More...;  ; void resize (Index nbRow);  ; Index size () const;  ; void swap (DiagonalMatrix< T > &v);  ; SReal element (Index i) const;  ; void set (Index i, double v);  ; void add (Index i, double v);  ; void clear (Index i);  ; template<class Real2 > ; FullVector< Real2 > operator* (const FullVector< Real2 > &v) const;  ; void invert ();  ; template<class Real2 > ; void mult (FullVector< Real2 > &z, const FullVector< Real2 > &v) const;  ; template<class M2 > ; bool hasRef (const M2 *m) const;  ; std::string expr () const;  ; bool valid () const;  ; template<class Dest > ; void addTo (Dest *dest) const;  ; template<class Real2 > ; void operator= (const DiagonalMatrix< Real2 > &m);  ; template<class Real2 > ; void operator+= (const DiagonalMatrix< Real2 > &m);  ; template<class Real2 > ; void operator-= (const DiagonalMatrix< Real2 > &m);  ; template<class Expr2 > ; void operator= (const MatrixExpr< Expr2 > &m);  ; template<class Expr2 > ; void operator+= (co",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_diagonal_matrix.html:1944,clear,clear,1944,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_diagonal_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_diagonal_matrix.html,1,['clear'],['clear']
Usability,"dex i, Index j) constsofa::linearalgebra::BaseMatrixinlinevirtual; blocGetW(Index i, Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; blocSet(Index i, Index j, const T *buffer)sofa::linearalgebra::BaseMatrixinline; bRowBegin(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowEnd(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowRange(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsBegin() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsEnd() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowSize() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsRange() constsofa::linearalgebra::BaseMatrixinlinevirtual; clear() overridesofa::linearalgebra::RotationMatrix< TReal >virtual; sofa::linearalgebra::BaseMatrix::clear(Index i, Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; clearCol(Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; clearCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRow(Index i)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowCol(Index i)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRows(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowsCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; cols(void) constsofa::linearalgebra::BaseMatrixinline; colSize(void) const overridesofa::linearalgebra::RotationMatrix< TReal >virtual; compress()sofa::linearalgebra::BaseMatrixvirtual; createBlockAccessor(Index row, Index col, void *internalPtr=nullptr)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockAccessor(Index row, Index col, Index internalData)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockConstAccessor(Index row, Index col, void *internalPtr=nullptr) constsofa::linearalgebra::BaseMatrixinlineprotected; createBlockConstAccessor(Index row, Index col, Index internalData) constsofa::linearalgebra::BaseMatrixinlineprotected; createColBlockConstIterator(Index row, void *internalPtr",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_rotation_matrix-members.html:5948,clear,clearRow,5948,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_rotation_matrix-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_rotation_matrix-members.html,1,['clear'],['clearRow']
Usability,"dex ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowRange(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsBegin() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsEnd() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowSize() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsRange() constsofa::linearalgebra::BaseMatrixinlinevirtual; category enum valuesofa::linearalgebra::SparseMatrix< T >; clear(Index i, Index j) overridesofa::linearalgebra::SparseMatrix< T >inlinevirtual; clear() overridesofa::linearalgebra::SparseMatrix< T >inlinevirtual; clearCol(Index j) overridesofa::linearalgebra::SparseMatrix< T >inlinevirtual; clearCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRow(Index i) overridesofa::linearalgebra::SparseMatrix< T >inlinevirtual; clearRowCol(Index i) overridesofa::linearalgebra::SparseMatrix< T >inlinevirtual; clearRows(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowsCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; cols(void) constsofa::linearalgebra::BaseMatrixinline; colSize(void) const overridesofa::linearalgebra::SparseMatrix< T >inlinevirtual; compress()sofa::linearalgebra::BaseMatrixvirtual; createBlockAccessor(Index row, Index col, void *internalPtr=nullptr)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockAccessor(Index row, Index col, Index internalData)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockConstAccessor(Index row, Index col, void *internalPtr=nullptr) constsofa::linearalgebra::BaseMatrixinlineprotected; createBlockConstAccessor(Index row, Index col, Index internalData) constsofa::linearalgebra::BaseMatrixinlineprotected; createColBlockConstIterator(Index row, void *internalPtr) constsofa::linearalgebra::BaseMatrixinlineprotected; createColBlockConstIterator(Index row, Index internalData) constsofa::linearalgebra::BaseMatrixinlineprotected; createRowBlockConstIterator(void *internalP",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_sparse_matrix-members.html:6940,clear,clearRowsCols,6940,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_sparse_matrix-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_sparse_matrix-members.html,1,['clear'],['clearRowsCols']
Usability,"dex, const SReal *baryCoords) overridesofa::component::mapping::linear::BarycentricMapperSparseGridTopology< In, Out >; apply(typename Out::VecCoord &out, const typename In::VecCoord &in) overridesofa::component::mapping::linear::BarycentricMapperSparseGridTopology< In, Out >; applyJ(typename Out::VecDeriv &out, const typename In::VecDeriv &in) overridesofa::component::mapping::linear::BarycentricMapperSparseGridTopology< In, Out >; applyJT(typename In::VecDeriv &out, const typename Out::VecDeriv &in) overridesofa::component::mapping::linear::BarycentricMapperSparseGridTopology< In, Out >; applyJT(typename In::MatrixDeriv &out, const typename Out::MatrixDeriv &in) overridesofa::component::mapping::linear::BarycentricMapperSparseGridTopology< In, Out >; BarycentricMapperSparseGridTopology(topology::container::grid::SparseGridTopology *fromTopology, core::topology::BaseMeshTopology *_toTopology)sofa::component::mapping::linear::BarycentricMapperSparseGridTopology< In, Out >protected; clear(std::size_t reserve=0) overridesofa::component::mapping::linear::BarycentricMapperSparseGridTopology< In, Out >; CubeData typedefsofa::component::mapping::linear::BarycentricMapperSparseGridTopology< In, Out >; draw(const VisualParams *, const typename Out::VecCoord &out, const typename In::VecCoord &in) overridesofa::component::mapping::linear::BarycentricMapperSparseGridTopology< In, Out >; getJ(int outSize, int inSize) overridesofa::component::mapping::linear::BarycentricMapperSparseGridTopology< In, Out >; InDeriv typedefsofa::component::mapping::linear::BarycentricMapperSparseGridTopology< In, Out >; Index typedefsofa::component::mapping::linear::BarycentricMapperSparseGridTopology< In, Out >; init(const typename Out::VecCoord &out, const typename In::VecCoord &in) overridesofa::component::mapping::linear::BarycentricMapperSparseGridTopology< In, Out >; m_fromTopologysofa::component::mapping::linear::BarycentricMapperSparseGridTopology< In, Out >protected; m_mapsofa::component:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_barycentric_mapper_sparse_grid_topology-members.html:1381,clear,clear,1381,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_barycentric_mapper_sparse_grid_topology-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_barycentric_mapper_sparse_grid_topology-members.html,1,['clear'],['clear']
Usability,"dex ; m, . Index ; n, . Index * ; a_p, . Index * ; a_i, . Block * ; a_x . ). inlinestatic . ◆ clear(). template<typename TBlock , typename TPolicy = CRSDefaultPolicy> . void sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >::clear ; (; ). inline . Completely clear the matrix. ; Warningif ClearByZeros Policy is activated all value in colsValue will be set to zero using default constructor . ◆ clearColBlock(). template<typename TBlock , typename TPolicy = CRSDefaultPolicy> . void sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >::clearColBlock ; (; Index ; j). inline . Clear col block method. Clear this col in all row of matrix. ; Parameters. j: Col index considering size of matrix in block. . Warningif ClearByZeros Policy is activated all col j of each line will be set to zero using default constructor . ◆ clearRowBlock(). template<typename TBlock , typename TPolicy = CRSDefaultPolicy> . void sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >::clearRowBlock ; (; Index ; i). inline . Clear row block method. Clear all col of this line. ; Parameters. i: Line index considering size of matrix in block. . Warningif ClearByZeros Policy is activated all col value of line will be set to zero using default constructor . ◆ clearRowColBlock(). template<typename TBlock , typename TPolicy = CRSDefaultPolicy> . template<typename = typename std::enable_if< Policy::IsAlwaysSquare>> . void sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >::clearRowColBlock ; (; Index ; i). inline . Clear both row i and column i in a square matrix. ; Parameters. i: Row and Col index considering size of matrix in block. . Warningif ClearByZeros Policy is activated all col i and line i values of will be set to zero using default constructor . ◆ colBSize(). template<typename TBlock , typename TPolicy = CRSDefaultPolicy> . Index sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >::colBSize ; (; )",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_generic.html:22090,clear,clearRowBlock,22090,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_generic.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_generic.html,1,['clear'],['clearRowBlock']
Usability,"dge array (i.e. provide the tetrahedron indices adjacent to each edge). More...;  ; const sofa::type::vector< TetrahedraAroundTriangle > & getTetrahedraAroundTriangleArray ();  Returns the TetrahedraAroundTriangle array (i.e. provide the tetrahedron indices adjacent to each triangle). More...;  ; bool hasTetrahedra () const;  ; bool hasEdgesInTetrahedron () const;  ; bool hasTrianglesInTetrahedron () const;  ; bool hasTetrahedraAroundVertex () const;  ; bool hasTetrahedraAroundEdge () const;  ; bool hasTetrahedraAroundTriangle () const;  ; sofa::geometry::ElementType getTopologyType () const override;  Returns the type of the topology. More...;  ; bool linkTopologyHandlerToData (core::topology::TopologyHandler *topologyHandler, sofa::geometry::ElementType elementType) override;  ; bool unlinkTopologyHandlerToData (core::topology::TopologyHandler *topologyHandler, sofa::geometry::ElementType elementType) override;  . void clear () override;  ; void addTriangle (Index, Index, Index) override;  ; void addTetra (Index a, Index b, Index c, Index d) override;  . const SeqTetrahedra & getTetrahedra () override;  Returns the tetrahedra array. More...;  ; const Tetrahedron getTetrahedron (TetraID i) override;  Returns the tetrahedron corresponding to the TetraID i. More...;  ; TetrahedronID getTetrahedronIndex (PointID v1, PointID v2, PointID v3, PointID v4) override;  Returns the indices of a tetrahedron given four vertex indices. More...;  ; const EdgesInTetrahedron & getEdgesInTetrahedron (TetraID id) override;  Returns the 6 edges adjacent to a given tetrahedron. More...;  ; const TrianglesInTetrahedron & getTrianglesInTetrahedron (TetraID id) override;  Returns the 4 triangles adjacent to a given tetrahedron. More...;  ; const TetrahedraAroundVertex & getTetrahedraAroundVertex (PointID id) override;  Returns the set of tetrahedra adjacent to a given vertex. More...;  ; const TetrahedraAroundEdge & getTetrahedraAroundEdge (EdgeID id) override;  Returns the set of tetrahed",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container.html:9171,clear,clear,9171,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container.html,1,['clear'],['clear']
Usability,"dgetItem * ; listItem, . bool ; clear = true . ). ◆ addData(). void sofa::gui::qt::QDisplayPropertyWidget::addData ; (; const QString & ; component, . const QString & ; group, . sofa::core::objectmodel::BaseData * ; data . ). ◆ addDescriptionItem(). void sofa::gui::qt::QDisplayPropertyWidget::addDescriptionItem ; (; QTreeWidgetItem * ; groupItem, . const QString & ; name, . const QString & ; description . ). protected . ◆ addGroup(). void sofa::gui::qt::QDisplayPropertyWidget::addGroup ; (; const QString & ; component, . const QString & ; group . ). ◆ addLink(). void sofa::gui::qt::QDisplayPropertyWidget::addLink ; (; const QString & ; component, . const QString & ; group, . sofa::core::objectmodel::BaseLink * ; link . ). ◆ clear(). void sofa::gui::qt::QDisplayPropertyWidget::clear ; (; ). ◆ clearAll(). void sofa::gui::qt::QDisplayPropertyWidget::clearAll ; (; ). ◆ clearComponentOutput. void sofa::gui::qt::QDisplayPropertyWidget::clearComponentOutput ; (; ). protectedslot . ◆ clearComponentWarning. void sofa::gui::qt::QDisplayPropertyWidget::clearComponentWarning ; (; ). protectedslot . ◆ DefaultDataGroup(). static QString sofa::gui::qt::QDisplayPropertyWidget::DefaultDataGroup ; (; ). inlinestatic . ◆ DefaultInfoGroup(). static QString sofa::gui::qt::QDisplayPropertyWidget::DefaultInfoGroup ; (; ). inlinestatic . ◆ DefaultLinkGroup(). static QString sofa::gui::qt::QDisplayPropertyWidget::DefaultLinkGroup ; (; ). inlinestatic . ◆ DefaultLogGroup(). static QString sofa::gui::qt::QDisplayPropertyWidget::DefaultLogGroup ; (; ). inlinestatic . ◆ findComponent(). QTreeWidgetItem * sofa::gui::qt::QDisplayPropertyWidget::findComponent ; (; const QString & ; component); const. protected . ◆ findGroup(). QTreeWidgetItem * sofa::gui::qt::QDisplayPropertyWidget::findGroup ; (; const QString & ; component, . const QString & ; group . ); const. protected . ◆ setConsoleOutput(). void sofa::gui::qt::QDisplayPropertyWidget::setConsoleOutput ; (; const QString & ; component, . const ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_display_property_widget.html:3367,clear,clearComponentWarning,3367,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_display_property_widget.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_display_property_widget.html,1,['clear'],['clearComponentWarning']
Usability,"dirty. . Constructor details. ◆ PointSetTopologyContainer(). sofa::component::topology::container::dynamic::PointSetTopologyContainer::PointSetTopologyContainer ; (; Size ; nPoints = 0). explicitprotected . ◆ ~PointSetTopologyContainer(). sofa::component::topology::container::dynamic::PointSetTopologyContainer::~PointSetTopologyContainer ; (; ). overrideprotecteddefault . Function details. ◆ addPoint() [1/2]. void sofa::component::topology::container::dynamic::PointSetTopologyContainer::addPoint ; (; ). add one DOF in this topology (simply increment the number of DOF) . ◆ addPoint() [2/2]. void sofa::component::topology::container::dynamic::PointSetTopologyContainer::addPoint ; (; SReal ; px, . SReal ; py, . SReal ; pz . ). overridevirtual . Reimplemented from sofa::core::topology::BaseMeshTopology. ◆ addPoints(). void sofa::component::topology::container::dynamic::PointSetTopologyContainer::addPoints ; (; const Size ; nPoints). add a number of DOFs in this topology (simply increase the number of DOF according to this parameter) ; Parameters. Thenumber of point to add. . ◆ checkTopology(). bool sofa::component::topology::container::dynamic::PointSetTopologyContainer::checkTopology ; (; ); const. overridevirtual . Checks if the Topology is coherent. ; Dynamic Topology API ; Reimplemented from sofa::core::topology::BaseMeshTopology.; Reimplemented in sofa::component::topology::container::dynamic::TriangleSetTopologyContainer, sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer, and sofa::component::topology::container::dynamic::QuadSetTopologyContainer. ◆ cleanPointTopologyFromDirty(). void sofa::component::topology::container::dynamic::PointSetTopologyContainer::cleanPointTopologyFromDirty ; (; ). protected . ◆ clear(). void sofa::component::topology::container::dynamic::PointSetTopologyContainer::clear ; (; ). overridevirtual . Procedural creation methods ; Reimplemented from sofa::core::topology::BaseMeshTopology.; Reimplemented in sofa::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_container.html:31318,simpl,simply,31318,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_container.html,1,['simpl'],['simply']
Usability,"dmechanics::fem::elastic::TetrahedronFEMForceField< DataTypes >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ForceField< DataTypes >inlinestatic; sofa::core::behavior::BaseForceField::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkPoissonRatio()sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >protected; checkYoungModulus()sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >protected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; Col_Value typedefsofa::component::solidmechanics::fem::elastic::TetrahedronFEMForceField< DataTypes >protected; CompressedMatrix typedefsofa::component::solidmechanics::fem::elastic::TetrahedronFEMForceField< DataTypes >protected; CompressedValue typedefsofa::component::solidmechanics::fem::elastic::TetrahedronFEMForceField< DataTypes >protected; computeBBox(const core::ExecParams *params, bool onlyVisible) overridesofa::component::solidmechanics::fem::elastic::TetrahedronFEMForceField< DataTypes >virtual; computeForce(Displacement &F, const Displacement &Depl, VoigtTensor &plasticStrain, const MaterialStiffness &K, const StrainDisplacement &J)sofa::component::solidmechanics::fem::elastic::TetrahedronFEMForceField< DataTypes >inlineprotected; computeForce(Displacement &F, const Displacement &Depl, const MaterialStiffness &K, const StrainDisplacement &J, SReal fact)sofa::component::solidmechanics::fem::elastic::TetrahedronFEMForceField< Da",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_tetrahedron_f_e_m_force_field-members.html:10138,clear,clearLoggedMessages,10138,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_tetrahedron_f_e_m_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_tetrahedron_f_e_m_force_field-members.html,1,['clear'],['clearLoggedMessages']
Usability,"dprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; buildDampingMatrix(core::behavior::DampingMatrix *) finalsofa::component::solidmechanics::spring::FrameSpringForceField< DataTypes >virtual; buildStiffnessMatrix(StiffnessMatrix *matrix)sofa::core::behavior::BaseForceFieldvirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::PairInteractionForceField< DataTypes >inlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear(int reserve=0)sofa::component::solidmechanics::spring::FrameSpringForceField< DataTypes >; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; Coord typedefsofa::component::solidmechanics::spring::FrameSpringForceField< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::core::behavior::PairInteractionForceField< DataTypes >inlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; d_showExtraTorsionsofa::component::solidmechanics::spring::FrameSpringForceField< DataTypes >protected; d_showLawfulTorsionsofa::component::solidmechanics::spring::FrameSpringForceField< DataTypes >protected; d_springssofa::component::solidmechanics::spring::FrameSpringForceField< DataTypes >protected; datasofa::compone",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_frame_spring_force_field-members.html:4730,clear,clearLoggedMessages,4730,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_frame_spring_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_frame_spring_force_field-members.html,1,['clear'],['clearLoggedMessages']
Usability,"dronSetTopologyContainerprotected; cleanPointTopologyFromDirty()sofa::component::topology::container::dynamic::PointSetTopologyContainerprotected; cleanQuadTopologyFromDirty()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear() overridesofa::component::topology::container::dynamic::HexahedronSetTopologyContainervirtual; clearEdges()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearEdgesAroundVertex()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearEdgesInHexahedron()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearEdgesInQuad()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; clearHexahedra()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearHexahedraAroundEdge()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearHexahedraAroundQuad()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearHexahedraAroundVertex()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearLoggedMessages() constsofa::core::objectmodel::Base; clearQuads()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; clearQuadsAroundEdge()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; clearQuadsAroundVertex()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; clearQuadsInHexahedron()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::An",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_container-members.html:4897,clear,clearHexahedraAroundEdge,4897,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_container-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_container-members.html,2,['clear'],['clearHexahedraAroundEdge']
Usability,dynamic::QuadSetTopologyContainer::checkTopology ; (; ); const. overridevirtual . Checks if the topology is coherent. ; Check if the shell arrays are coherent See alsom_quad . m_edgesInQuad . m_quadsAroundVertex . m_quadsAroundEdge ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer. ◆ cleanQuadTopologyFromDirty(). void sofa::component::topology::container::dynamic::QuadSetTopologyContainer::cleanQuadTopologyFromDirty ; (; ). protected . ◆ clear(). void sofa::component::topology::container::dynamic::QuadSetTopologyContainer::clear ; (; ). overridevirtual . Procedural creation methods ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer. ◆ clearEdgesInQuad(). void sofa::component::topology::container::dynamic::QuadSetTopologyContainer::clearEdgesInQuad ; (; ). protected . ◆ clearQuads(). void sofa::component::topology::container::dynamic::QuadSetTopologyContainer::clearQuads ; (; ). protected . ◆ clearQuadsAroundEdge(). void sofa::component::topology::container::dynamic::QuadSetTopologyContainer::clearQuadsAroundEdge ; (; ). protected . ◆ clearQuadsAroundVertex(). void sofa::component::topology::container::dynamic::QuadSetTopologyContainer::clearQuadsAroundVertex ; (; ). protected . ◆ createEdgeSetArray(). void sofa::component::topology::container::dynamic::QuadSetTopologyContainer::createEdgeSetArray ; (; ). overrideprotectedvirtual . Creates the EdgeSet array. ; Create the set of edges when needed. ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer. ◆ createEdgesInQuadArray(). void sofa::component::topology::container::dynamic::QuadSetTopologyContainer::createEdgesInQuadArray ; (; ). protectedvirtual . Creates the array of edge indices for each quad. ; This function is only called if the EdgesInQuad array is required. m_edgesInQuad[i] contains the 4 indices of the 4 edges composing the ith quad. . ◆ createQuadsAroundEdgeArray(). void sofa::comp,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_container.html:40492,clear,clearQuadsAroundEdge,40492,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_container.html,1,['clear'],['clearQuadsAroundEdge']
Usability,"e &r2);  ; static void clear ();  . Constructor details. ◆ Axis() [1/8]. sofa::gl::Axis::Axis ; (; SReal ; len = 1.0_sreal). ◆ Axis() [2/8]. sofa::gl::Axis::Axis ; (; const type::Vec3 & ; len). ◆ Axis() [3/8]. sofa::gl::Axis::Axis ; (; const type::Vec3 & ; center, . const Quaternion & ; orient, . const type::Vec3 & ; length . ). ◆ Axis() [4/8]. sofa::gl::Axis::Axis ; (; const type::Vec3 & ; center, . const double ; orient[4][4], . const type::Vec3 & ; length . ). ◆ Axis() [5/8]. sofa::gl::Axis::Axis ; (; const double * ; mat, . const type::Vec3 & ; length . ). ◆ Axis() [6/8]. sofa::gl::Axis::Axis ; (; const type::Vec3 & ; center, . const Quaternion & ; orient, . SReal ; length = 1.0_sreal . ). ◆ Axis() [7/8]. sofa::gl::Axis::Axis ; (; const type::Vec3 & ; center, . const double ; orient[4][4], . SReal ; length = 1.0_sreal . ). ◆ Axis() [8/8]. sofa::gl::Axis::Axis ; (; const double * ; mat, . SReal ; length = 1.0_sreal . ). ◆ ~Axis(). sofa::gl::Axis::~Axis ; (; ). Function details. ◆ clear(). static void sofa::gl::Axis::clear ; (; ). inlinestatic . ◆ draw() [1/16]. void sofa::gl::Axis::draw ; (; const double * ; mat, . const type::Vec3 & ; length, . const type::RGBAColor & ; colorX = type::RGBAColor::red(), . const type::RGBAColor & ; colorY = type::RGBAColor::green(), . const type::RGBAColor & ; colorZ = type::RGBAColor::red() . ). static . ◆ draw() [2/16]. void sofa::gl::Axis::draw ; (; const double * ; mat, . const type::Vec3 & ; length, . const type::Vec4f & ; colorX = type::Vec4f(1, 0, 0, 1), . const type::Vec4f & ; colorY = type::Vec4f(0, 1, 0, 1), . const type::Vec4f & ; colorZ = type::Vec4f(0, 0, 1, 1) . ). delete . ◆ draw() [3/16]. void sofa::gl::Axis::draw ; (; const double * ; mat, . SReal ; length = 1.0_sreal, . const type::RGBAColor & ; colorX = type::RGBAColor::red(), . const type::RGBAColor & ; colorY = type::RGBAColor::green(), . const type::RGBAColor & ; colorZ = type::RGBAColor::red() . ). static . ◆ draw() [4/16]. static void sofa::gl::Axis::draw ; ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1_axis.html:5786,clear,clear,5786,api/master/sofa/html/classsofa_1_1gl_1_1_axis.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1_axis.html,1,['clear'],['clear']
Usability,"e . #include <CompressedRowSparseMatrixGeneric.h>. Inheritance diagram for sofa::linearalgebra::CRSDefaultPolicy:. [legend]. Static Public Attributes; static constexpr bool IsAlwaysSquare = false;  Set to true if this matrix is always square (must be true for symmetric) More...;  ; static constexpr bool IsAlwaysSymmetric = false;  Set to true if this matrix is always symmetric (IsAlwaysSquare should be true) More...;  ; static constexpr bool AutoSize = false;  Set to true if the size of the matrix should be automatically increased when new blocks are added. More...;  ; static constexpr bool AutoCompress = true;  Set to true if the matrix should be automatically compressed (easier to use, but might cause issues in multithreading) More...;  ; static constexpr bool CompressZeros = true;  Set to true if the blocks that are all zeros should be removed from the matrix when compressing (expensive) More...;  ; static constexpr bool ClearByZeros = true;  Set to true if clear methods will put all concerned value to zero instead of clearing vectors (CompressZeros should be true) More...;  ; static constexpr bool OrderedInsertion = false;  Set to true if insertion in matrix are in most case at last line index or last col index. More...;  ; static constexpr bool StoreLowerTriangularBlock = true;  Set to false to disable storage of blocks on the lower triangular part (IsAlwaysSymmetric must be true) More...;  ; static constexpr int matrixType = 0;  Do not change this value, has to be overrided for all derivated class. More...;  . Attribute details. ◆ AutoCompress. constexpr bool sofa::linearalgebra::CRSDefaultPolicy::AutoCompress = true. staticconstexpr . Set to true if the matrix should be automatically compressed (easier to use, but might cause issues in multithreading) . ◆ AutoSize. constexpr bool sofa::linearalgebra::CRSDefaultPolicy::AutoSize = false. staticconstexpr . Set to true if the size of the matrix should be automatically increased when new blocks are added. . ◆ Clear",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1_c_r_s_default_policy.html:1221,clear,clear,1221,api/master/sofa/html/structsofa_1_1linearalgebra_1_1_c_r_s_default_policy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1_c_r_s_default_policy.html,2,['clear'],"['clear', 'clearing']"
Usability,"e . #include <RigidDeriv.h>. Static Public Attributes; static constexpr sofa::Size total_size = 3;  Compile-time constant specifying the number of scalars within this vector (equivalent to the size() method) More...;  ; static constexpr sofa::Size spatial_dimensions = 2;  Compile-time constant specifying the number of dimensions of space (NOT equivalent to total_size for rigids) More...;  . Public Member Functions; constexpr RigidDeriv (type::NoInit);  ; constexpr RigidDeriv ();  ; template<typename real2 > ; constexpr RigidDeriv (const type::Vec< 2, real2 > &velCenter, const real2 &velOrient);  ; template<typename real2 > ; constexpr RigidDeriv (const type::Vec< 3, real2 > &v);  ; constexpr void clear ();  ; template<typename real2 > ; constexpr void operator= (const RigidDeriv< 2, real2 > &c);  ; template<typename real2 > ; constexpr void operator= (const type::Vec< 2, real2 > &v);  ; template<typename real2 > ; constexpr void operator= (const type::Vec< 3, real2 > &v);  ; constexpr void operator+= (const RigidDeriv< 2, real > &a);  ; constexpr void operator-= (const RigidDeriv< 2, real > &a);  ; constexpr RigidDeriv< 2, real > operator+ (const RigidDeriv< 2, real > &a) const;  ; constexpr RigidDeriv< 2, real > operator- (const RigidDeriv< 2, real > &a) const;  ; template<typename real2 > ; constexpr void operator*= (real2 a);  ; template<typename real2 > ; constexpr void operator/= (real2 a);  ; constexpr RigidDeriv< 2, real > operator- () const;  ; constexpr Real operator* (const RigidDeriv< 2, real > &a) const;  dot product, mostly used to compute residuals as sqrt(x*x) More...;  ; Real norm () const;  Euclidean norm. More...;  ; constexpr Vec2 & getVCenter ();  ; constexpr Real & getVOrientation ();  ; constexpr const Vec2 & getVCenter () const;  ; constexpr const Real & getVOrientation () const;  ; constexpr Vec2 & getLinear ();  ; constexpr Real & getAngular ();  ; constexpr const Vec2 & getLinear () const;  ; constexpr const Real & getAngular () const;  ; c",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1defaulttype_1_1_rigid_deriv_3_012_00_01real_01_4.html:1046,clear,clear,1046,api/master/sofa/html/classsofa_1_1defaulttype_1_1_rigid_deriv_3_012_00_01real_01_4.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1defaulttype_1_1_rigid_deriv_3_012_00_01real_01_4.html,1,['clear'],['clear']
Usability,"e . Function details. ◆ add(). template<typename T > . void sofa::linearalgebra::FullVector< T >::add ; (; Index ; i, . SReal ; v . ). inlineoverridevirtual . Add v to the existing value of element i. ; Implements sofa::linearalgebra::BaseVector. ◆ begin() [1/2]. template<typename T > . Iterator sofa::linearalgebra::FullVector< T >::begin ; (; ). inline . ◆ begin() [2/2]. template<typename T > . ConstIterator sofa::linearalgebra::FullVector< T >::begin ; (; ); const. inline . ◆ capacity(). template<typename T > . Index sofa::linearalgebra::FullVector< T >::capacity ; (; ); const. inline . ◆ checkIndex(). template<typename Real > . void sofa::linearalgebra::FullVector< Real >::checkIndex ; (; Index ; n); const. protected . ◆ clear() [1/2]. template<typename Real > . void sofa::linearalgebra::FullVector< Real >::clear ; (; ). overridevirtual . Reset all values to 0. ; Implements sofa::linearalgebra::BaseVector. ◆ clear() [2/2]. template<typename Real > . void sofa::linearalgebra::FullVector< Real >::clear ; (; Index ; i). overridevirtual . Reset the value of element i to 0. ; Reimplemented from sofa::linearalgebra::BaseVector. ◆ dot(). template<typename Real > . Real sofa::linearalgebra::FullVector< Real >::dot ; (; const FullVector< Real > & ; a); const. Returnsv.a . ◆ element(). template<typename T > . SReal sofa::linearalgebra::FullVector< T >::element ; (; Index ; i); const. inlineoverridevirtual . Read the value of element i. ; Implements sofa::linearalgebra::BaseVector. ◆ end() [1/2]. template<typename T > . Iterator sofa::linearalgebra::FullVector< T >::end ; (; ). inline . ◆ end() [2/2]. template<typename T > . ConstIterator sofa::linearalgebra::FullVector< T >::end ; (; ); const. inline . ◆ eq() [1/2]. template<typename Real > . void sofa::linearalgebra::FullVector< Real >::eq ; (; const FullVector< Real > & ; a, . const FullVector< Real > & ; b, . Real ; f = 1.0 . ). v = a+b*f . ◆ eq() [2/2]. template<typename Real > . void sofa::linearalgebra::FullVector< Re",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_full_vector.html:6813,clear,clear,6813,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_full_vector.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_full_vector.html,1,['clear'],['clear']
Usability,"e <BlockVector.h>. Inheritance diagram for sofa::linearalgebra::BlockVector< N, T >:. [legend]. Classes; class  Block;  . Public Member Functions;  BlockVector ();  ;  BlockVector (Index n);  ; virtual ~BlockVector ();  ; const Block & sub (Index i, Index) const;  ; Block & sub (Index i, Index);  ; const Block & asub (Index bi, Index) const;  ; Block & asub (Index bi, Index);  ;  Public Member Functions inherited from sofa::linearalgebra::FullVector< T >;  FullVector ();  ;  FullVector (const FullVector &vect);  ;  FullVector (Index n);  ;  FullVector (T *ptr, Index n);  ;  FullVector (T *ptr, Index n, Index nmax);  ;  ~FullVector () override;  ; T * ptr ();  ; const T * ptr () const;  ; void setptr (T *p);  ; Index capacity () const;  ; Iterator begin ();  ; Iterator end ();  ; ConstIterator begin () const;  ; ConstIterator end () const;  ; void fastResize (Index dim);  ; void resize (Index dim) override;  Resize the vector, and reset all values to 0. More...;  ; void clear () override;  Reset all values to 0. More...;  ; void swap (FullVector< T > &v);  ; void clear (Index dim) override;  Reset the value of element i to 0. More...;  ; T & operator[] (Index i);  ; const T & operator[] (Index i) const;  ; SReal element (Index i) const override;  Read the value of element i. More...;  ; void set (Index i, SReal v) override;  Write the value of element i. More...;  ; void add (Index i, SReal v) override;  Add v to the existing value of element i. More...;  ; Index size () const override;  Number of elements. More...;  ; FullVector< T > sub (Index i, Index n);  ; template<class TV > ; void getsub (Index i, Index n, TV &v);  ; template<class TV > ; void setsub (Index i, Index n, const TV &v);  ; void operator= (const FullVector< T > &a);  v = a More...;  ; void operator= (const T &a);  ; void operator+= (const FullVector< Real > &a);  v += a More...;  ; void operator-= (const FullVector< Real > &a);  v -= a More...;  ; void eq (const FullVector< Real > &a, Real f);  v =",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_vector.html:1273,clear,clear,1273,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_vector.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_vector.html,1,['clear'],['clear']
Usability,"e C, class real > . constexpr const_reference sofa::type::Mat< L, C, real >::back ; (; ); const. inlineconstexpr . ◆ begin() [1/2]. template<sofa::Size L, sofa::Size C, class real > . constexpr ArrayLineType::const_iterator sofa::type::Mat< L, C, real >::begin ; (; ); const. inlineconstexprnoexcept . ◆ begin() [2/2]. template<sofa::Size L, sofa::Size C, class real > . constexpr ArrayLineType::iterator sofa::type::Mat< L, C, real >::begin ; (; ). inlineconstexprnoexcept . ◆ canSelfTranspose() [1/2]. template<sofa::Size L, sofa::Size C, class real > . template<Size I, Size J> . static bool sofa::type::Mat< L, C, real >::canSelfTranspose ; (; const Mat< I, J, real > & ; , . const Mat< J, I, real > & ;  . ). inlinestaticnoexcept . ◆ canSelfTranspose() [2/2]. template<sofa::Size L, sofa::Size C, class real > . template<Size S> . static bool sofa::type::Mat< L, C, real >::canSelfTranspose ; (; const Mat< S, S, real > & ; lhs, . const Mat< S, S, real > & ; rhs . ). inlinestaticnoexcept . ◆ clear(). template<sofa::Size L, sofa::Size C, class real > . constexpr void sofa::type::Mat< L, C, real >::clear ; (; ). inlineconstexprnoexcept . Sets each element to 0. . ◆ col(). template<sofa::Size L, sofa::Size C, class real > . constexpr Col sofa::type::Mat< L, C, real >::col ; (; Size ; j); const. inlineconstexprnoexcept . Copy of column j. . ◆ data(). template<sofa::Size L, sofa::Size C, class real > . constexpr const real* sofa::type::Mat< L, C, real >::data ; (; ); const. inlineconstexprnoexcept . ◆ end() [1/2]. template<sofa::Size L, sofa::Size C, class real > . constexpr ArrayLineType::const_iterator sofa::type::Mat< L, C, real >::end ; (; ); const. inlineconstexprnoexcept . ◆ end() [2/2]. template<sofa::Size L, sofa::Size C, class real > . constexpr ArrayLineType::iterator sofa::type::Mat< L, C, real >::end ; (; ). inlineconstexprnoexcept . ◆ fill(). template<sofa::Size L, sofa::Size C, class real > . constexpr void sofa::type::Mat< L, C, real >::fill ; (; real ; r). inlineco",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_mat.html:16833,clear,clear,16833,api/master/sofa/html/classsofa_1_1type_1_1_mat.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_mat.html,1,['clear'],['clear']
Usability,"e an attribute given its name. More...;  ; virtual std::string getFullName ();  Get the full name of this object (i.e. concatenation if all the names of its ancestors and itself) More...;  ; virtual void logError (const std::string &s);  ; virtual void logErrors (const std::vector< std::string > &e);  ; std::vector< std::string > const & getErrors () const;  ; virtual void clearErrors ();  . Attribute details. ◆ attributes. AttributeMap sofa::core::objectmodel::BaseObjectDescription::attributes. protected . ◆ errors. std::vector< std::string > sofa::core::objectmodel::BaseObjectDescription::errors. protected . Constructor details. ◆ BaseObjectDescription(). sofa::core::objectmodel::BaseObjectDescription::BaseObjectDescription ; (; const char * ; name = nullptr, . const char * ; type = nullptr . ). ◆ ~BaseObjectDescription(). sofa::core::objectmodel::BaseObjectDescription::~BaseObjectDescription ; (; ). virtual . Function details. ◆ clearErrors(). virtual void sofa::core::objectmodel::BaseObjectDescription::clearErrors ; (; ). inlinevirtual . ◆ find(). BaseObjectDescription * sofa::core::objectmodel::BaseObjectDescription::find ; (; const char * ; nodeName, . bool ; absolute = false . ). virtual . Find an object description given its name (relative to this object) ; Reimplemented in sofa::simulation::xml::BaseElement. ◆ findObject(). Base * sofa::core::objectmodel::BaseObjectDescription::findObject ; (; const char * ; nodeName). virtual . Find an object given its name (relative to this object) ; Find an object given its name. . ◆ getAttribute(). const char * sofa::core::objectmodel::BaseObjectDescription::getAttribute ; (; const std::string & ; attr, . const char * ; defaultVal = nullptr . ). virtual . Get an attribute given its name (return defaultVal if not present) . ◆ getAttributeAsFloat(). float sofa::core::objectmodel::BaseObjectDescription::getAttributeAsFloat ; (; const std::string & ; attr, . const float ; defaultVal = 0.0 . ). virtual . Docs is in .h. ; Get ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_object_description.html:3626,clear,clearErrors,3626,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_object_description.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_object_description.html,1,['clear'],['clearErrors']
Usability,e coherent See alsom_tetrahedron . m_edgesInTetrahedron . m_trianglesInTetrahedron . m_tetrahedraAroundVertex . m_tetrahedraAroundEdge . m_tetrahedraAroundTriangle ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer. ◆ cleanTetrahedronTopologyFromDirty(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::cleanTetrahedronTopologyFromDirty ; (; ). protected . ◆ clear(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::clear ; (; ). overridevirtual . Procedural creation methods ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer. ◆ clearEdgesInTetrahedron(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::clearEdgesInTetrahedron ; (; ). protected . ◆ clearTetrahedra(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::clearTetrahedra ; (; ). protected . ◆ clearTetrahedraAroundEdge(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::clearTetrahedraAroundEdge ; (; ). protected . ◆ clearTetrahedraAroundTriangle(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::clearTetrahedraAroundTriangle ; (; ). protected . ◆ clearTetrahedraAroundVertex(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::clearTetrahedraAroundVertex ; (; ). protected . ◆ clearTrianglesInTetrahedron(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::clearTrianglesInTetrahedron ; (; ). protected . ◆ createEdgeSetArray(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::createEdgeSetArray ; (; ). overrideprotectedvirtual . Creates the EdgeSet array. ; Create the set of edges when needed. ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer. ◆ createEdgesInTetrahedronAr,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container.html:50825,clear,clearTetrahedraAroundEdge,50825,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container.html,1,['clear'],['clearTetrahedraAroundEdge']
Usability,"e complete list of members for sofa::simulation::xml::Element< Object >, including all inherited members. addChild(BaseElement *child)sofa::simulation::xml::BaseElementvirtual; addReplaceAttribute(const std::string &attr, const char *val)sofa::simulation::xml::BaseElementvirtual; AttributeMap typedefsofa::core::objectmodel::BaseObjectDescription; attributessofa::core::objectmodel::BaseObjectDescriptionprotected; BaseElement(const std::string &name, const std::string &type, BaseElement *newParent=nullptr)sofa::simulation::xml::BaseElement; BaseObjectDescription(const char *name=nullptr, const char *type=nullptr)sofa::core::objectmodel::BaseObjectDescription; begin()sofa::simulation::xml::BaseElementinline; begin()sofa::simulation::xml::BaseElementinline; clearErrors()sofa::core::objectmodel::BaseObjectDescriptioninlinevirtual; create(Node *, std::pair< std::string, std::string > arg)sofa::simulation::xml::BaseElementinlinestatic; Create(const std::string &nodeClass, const std::string &name, const std::string &type)sofa::simulation::xml::BaseElementstatic; Element(const std::string &name, const std::string &type, BaseElement *newParent=nullptr)sofa::simulation::xml::Element< Object >; end()sofa::simulation::xml::BaseElementinline; end()sofa::simulation::xml::BaseElementinline; errorssofa::core::objectmodel::BaseObjectDescriptionprotected; Factory typedefsofa::simulation::xml::Element< Object >; find(const char *nodeName, bool absolute=false) overridesofa::simulation::xml::BaseElementinlinevirtual; findNode(const char *nodeName, bool absolute=false)sofa::simulation::xml::BaseElementvirtual; findObject(const char *nodeName)sofa::core::objectmodel::BaseObjectDescriptionvirtual; getAttribute(const std::string &attr, const char *defaultVal=nullptr)sofa::core::objectmodel::BaseObjectDescriptionvirtual; getAttributeAsFloat(const std::string &attr, const float defaultVal=0.0)sofa::core::objectmodel::BaseObjectDescriptionvirtual; getAttributeAsInt(const std::string &attr, const",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1xml_1_1_element-members.html:929,clear,clearErrors,929,api/master/sofa/html/classsofa_1_1simulation_1_1xml_1_1_element-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1xml_1_1_element-members.html,1,['clear'],['clearErrors']
Usability,"e diagram for sofa::core::behavior::ListStiffnessMatrixAccumulator:. [legend]. Additional Inherited Members;  Public Member Functions inherited from sofa::core::ListMatrixAccumulator< StiffnessMatrixAccumulator >; void push_back (StiffnessMatrixAccumulator *m);  ; void remove (StiffnessMatrixAccumulator *m);  ; bool empty () const;  ; void clear () override;  ; InternalListMatrixAccumulator::size_type size () const;  ; void add (sofa::SignedIndex i, sofa::SignedIndex j, float value) override;  ; void add (sofa::SignedIndex i, sofa::SignedIndex j, double value) override;  ; void add (sofa::SignedIndex i, sofa::SignedIndex j, const sofa::type::Mat3x3f &value) override;  ; void add (sofa::SignedIndex i, sofa::SignedIndex j, const sofa::type::Mat3x3d &value) override;  ; const InternalListMatrixAccumulator & getAccumulators () const;  ;  Public Member Functions inherited from sofa::core::MatrixAccumulatorInterface; virtual ~MatrixAccumulatorInterface ()=default;  ; virtual void add (sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 1, 1, float > &value);  ; virtual void add (sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 1, 1, double > &value);  ; virtual void add (sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 2, 2, float > &value);  ; virtual void add (sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 2, 2, double > &value);  ; virtual void add (sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 6, 6, float > &value);  ; virtual void add (sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 6, 6, double > &value);  ; template<sofa::Size L, sofa::Size C, class real > ; void matAdd (sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< L, C, real > &value);  ; virtual void setIndexCheckerStrategy (std::shared_ptr< matrixaccumulator::IndexVerificationStrategy >);  . sofacorebehaviorListStiffnessMatrixAccumulator; Generated on Mon Nov 11 2024 ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_list_stiffness_matrix_accumulator.html:642,clear,clear,642,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_list_stiffness_matrix_accumulator.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_list_stiffness_matrix_accumulator.html,1,['clear'],['clear']
Usability,"e framework for multi-physics simuation. sofa::simulation::xml::BaseElement Member List . This is the complete list of members for sofa::simulation::xml::BaseElement, including all inherited members. addChild(BaseElement *child)sofa::simulation::xml::BaseElementvirtual; addReplaceAttribute(const std::string &attr, const char *val)sofa::simulation::xml::BaseElementvirtual; AttributeMap typedefsofa::core::objectmodel::BaseObjectDescription; attributessofa::core::objectmodel::BaseObjectDescriptionprotected; BaseElement(const std::string &name, const std::string &type, BaseElement *newParent=nullptr)sofa::simulation::xml::BaseElement; BaseObjectDescription(const char *name=nullptr, const char *type=nullptr)sofa::core::objectmodel::BaseObjectDescription; begin()sofa::simulation::xml::BaseElementinline; begin()sofa::simulation::xml::BaseElementinline; clearErrors()sofa::core::objectmodel::BaseObjectDescriptioninlinevirtual; create(Node *, std::pair< std::string, std::string > arg)sofa::simulation::xml::BaseElementinlinestatic; Create(const std::string &nodeClass, const std::string &name, const std::string &type)sofa::simulation::xml::BaseElementstatic; end()sofa::simulation::xml::BaseElementinline; end()sofa::simulation::xml::BaseElementinline; errorssofa::core::objectmodel::BaseObjectDescriptionprotected; find(const char *nodeName, bool absolute=false) overridesofa::simulation::xml::BaseElementinlinevirtual; findNode(const char *nodeName, bool absolute=false)sofa::simulation::xml::BaseElementvirtual; findObject(const char *nodeName)sofa::core::objectmodel::BaseObjectDescriptionvirtual; getAttribute(const std::string &attr, const char *defaultVal=nullptr)sofa::core::objectmodel::BaseObjectDescriptionvirtual; getAttributeAsFloat(const std::string &attr, const float defaultVal=0.0)sofa::core::objectmodel::BaseObjectDescriptionvirtual; getAttributeAsInt(const std::string &attr, const int defaultVal=0.0)sofa::core::objectmodel::BaseObjectDescriptionvirtual; getAttributeList(T ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1xml_1_1_base_element-members.html:917,clear,clearErrors,917,api/master/sofa/html/classsofa_1_1simulation_1_1xml_1_1_base_element-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1xml_1_1_base_element-members.html,1,['clear'],['clearErrors']
Usability,"e linear system is written as Ax=b, it is A. . ◆ rhs. template<typename TMatrix , typename TVector > . StoredVectorType sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >::rhs { nullptr }. The right-hand side of the linear system. If the linear system is written as Ax=b, it is b. . ◆ solution. template<typename TMatrix , typename TVector > . StoredVectorType sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >::solution { nullptr }. The solution of the linear system. If the linear system is written as Ax=b, it is x. . Function details. ◆ allocateSystem(). template<typename TMatrix , typename TVector > . void sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >::allocateSystem. ◆ clearSystem() [1/3]. SOFA_COMPONENT_LINEARSOLVER_ITERATIVE_API void sofa::component::linearsystem::LinearSystemData< GraphScatteredMatrix, GraphScatteredVector >::clearSystem ; (; ). ◆ clearSystem() [2/3]. void sofa::component::linearsystem::LinearSystemData< GraphScatteredMatrix, GraphScatteredVector >::clearSystem ; (; ). ◆ clearSystem() [3/3]. template<typename TMatrix , typename TVector > . void sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >::clearSystem. ◆ createSystemMatrix(). template<typename TMatrix , typename TVector > . void sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >::createSystemMatrix. Allocate the object for the global matrix. . ◆ createSystemRHSVector() [1/3]. SOFA_COMPONENT_LINEARSOLVER_ITERATIVE_API void sofa::component::linearsystem::LinearSystemData< GraphScatteredMatrix, GraphScatteredVector >::createSystemRHSVector ; (; ). ◆ createSystemRHSVector() [2/3]. void sofa::component::linearsystem::LinearSystemData< GraphScatteredMatrix, GraphScatteredVector >::createSystemRHSVector ; (; ). ◆ createSystemRHSVector() [3/3]. template<typename TMatrix , typename TVector > . void sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >::createSystemRHSVector. Allocate the object f",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_linear_system_data.html:2988,clear,clearSystem,2988,api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_linear_system_data.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_linear_system_data.html,1,['clear'],['clearSystem']
Usability,"e result vector appears inside the expression, it must be the first operand. By default this method decompose the computation into multiple vOp calls.; Perform a sequence of linear vector accumulation operation $r_i = sum_j (v_j*f_{ij})$; This is used to compute in on steps operations such as $v = v + a*dt, x = x + v*dt$. Note that if the result vector appears inside the expression, it must be the first operand. By default this method decompose the computation into multiple vOp calls. ; Reimplemented in sofa::component::statecontainer::MechanicalObject< DataTypes >, and sofa::component::statecontainer::MechanicalObject< T >. ◆ vOp(). virtual void sofa::core::behavior::BaseMechanicalState::vOp ; (; const ExecParams * ; params, . VecId ; v, . ConstVecId ; a = ConstVecId::null(), . ConstVecId ; b = ConstVecId::null(), . SReal ; f = 1.0 . ). pure virtual . Initialize an unset vector. ; Compute a linear operation on vectors : v = a + b * f.; This generic operation can be used for many simpler cases : ; v = 0 ; v = a ; v = a + b ; v = b * f . Implemented in sofa::component::statecontainer::MechanicalObject< DataTypes >, and sofa::component::statecontainer::MechanicalObject< T >. ◆ vRealloc() [1/2]. virtual void sofa::core::behavior::BaseMechanicalState::vRealloc ; (; const ExecParams * ; params, . VecCoordId ; v, . const core::VecIdProperties & ; properties = {} . ). pure virtual . Allocate a new temporary vector. ; Reallocate a new temporary vector ; Implemented in sofa::component::statecontainer::MechanicalObject< DataTypes >, and sofa::component::statecontainer::MechanicalObject< T >. ◆ vRealloc() [2/2]. virtual void sofa::core::behavior::BaseMechanicalState::vRealloc ; (; const ExecParams * ; params, . VecDerivId ; v, . const core::VecIdProperties & ; properties = {} . ). pure virtual . Reallocate a new temporary vector. ; Implemented in sofa::component::statecontainer::MechanicalObject< DataTypes >, and sofa::component::statecontainer::MechanicalObject< T >. ◆ vSize()",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_mechanical_state.html:45154,simpl,simpler,45154,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_mechanical_state.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_mechanical_state.html,1,['simpl'],['simpler']
Usability,"e subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (PauseAnimationOnEvent, PauseAnimation);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; bool isPaused () override;  ; void handleEvent (sofa::core::objectmodel::Event *event) override;  Handle an event. More...;  ;  Public Member Functions inherited from sofa::component::sceneutility::PauseAnimation;  SOFA_ABSTRACT_CLASS (PauseAnimation, core::objectmodel::BaseObject);  ; virtual void pause ();  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ;",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_pause_animation_on_event.html:1982,pause,pause,1982,api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_pause_animation_on_event.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_pause_animation_on_event.html,1,['pause'],['pause']
Usability,"e typedefsofa::core::objectmodel::Base; buildDampingMatrix(core::behavior::DampingMatrix *) finalsofa::component::mechanicalload::EdgePressureForceField< DataTypes >virtual; buildStiffnessMatrix(core::behavior::StiffnessMatrix *matrix) finalsofa::component::mechanicalload::EdgePressureForceField< DataTypes >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ForceField< DataTypes >inlinestatic; sofa::core::behavior::BaseForceField::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; Coord typedefsofa::component::mechanicalload::EdgePressureForceField< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_arrowSizeCoefsofa::component::mechanicalload::EdgePressureForceField< DataTypes >protected; d_binormalsofa::component::mechanicalload::EdgePressureForceField< DataTypes >protected; d_componentStatesofa::core::objectmodel::Base; d_dmaxsofa::component::mechanicalload::EdgePressureForceField< DataTypes >protected; d_dminsofa::component::mechanicalload::EdgePressureForceField< DataTypes >protected; d_edgeIndicessofa::component::mechanicalload::EdgePressureForceField< DataTypes >protected; d",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_edge_pressure_force_field-members.html:4859,clear,clearLoggedMessages,4859,api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_edge_pressure_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_edge_pressure_force_field-members.html,1,['clear'],['clearLoggedMessages']
Usability,"e(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; ConfigurationSetting()sofa::core::objectmodel::ConfigurationSettingprotected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_dumpStatesofa::component::setting::StatsSetting; d_exportStatesofa::component::setting::StatsSetting; d_logTimesofa::component::setting::StatsSetting; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; dumpStatesofa::component::setting::StatsSetting; exportStatesofa::component::setting::StatsSetting; f_bboxsof",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_stats_setting-members.html:1891,clear,clearLoggedMessages,1891,api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_stats_setting-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_stats_setting-members.html,1,['clear'],['clearLoggedMessages']
Usability,"e(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; ConfigurationSetting()sofa::core::objectmodel::ConfigurationSettingprotected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_gnuplotPathsofa::component::setting::SofaDefaultPathSetting; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) co",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_sofa_default_path_setting-members.html:1911,clear,clearLoggedMessages,1911,api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_sofa_default_path_setting-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_sofa_default_path_setting-members.html,1,['clear'],['clearLoggedMessages']
Usability,"e(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; ConfigurationSetting()sofa::core::objectmodel::ConfigurationSettingprotected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&p",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_configuration_setting-members.html:1905,clear,clearLoggedMessages,1905,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_configuration_setting-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_configuration_setting-members.html,1,['clear'],['clearLoggedMessages']
Usability,"e(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; Contact()sofa::core::collision::Contactinlineprotected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(RealContact *, std::pair< std::pair< core::CollisionModel *, core::CollisionModel * >, Intersection * > arg)sofa::core::collision::Contactinlinestatic; sofa::core::objectmodel::BaseObject::create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; Create(const std::string &type, core::CollisionModel *model1, core::CollisionModel *model2, Intersection *intersectionMethod, bool verbose=true)sofa::core::collision::Contactstatic; createResponse(objectmodel::BaseContext *group)=0sofa::core::collision::Contactpure virtual; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_contact-members.html:1875,clear,clearLoggedMessages,1875,api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_contact-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_contact-members.html,1,['clear'],['clearLoggedMessages']
Usability,"e(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; Controller()sofa::component::controller::Controllerprotected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_handleEventTriggersUpdatesofa::component::controller::Controllerprotected; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) cons",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1controller_1_1_controller-members.html:1893,clear,clearLoggedMessages,1893,api/master/sofa/html/classsofa_1_1component_1_1controller_1_1_controller-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1controller_1_1_controller-members.html,1,['clear'],['clearLoggedMessages']
Usability,"e(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; Coord typedefsofa::component::topology::utility::TopologyBoundingTrasher< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_borderssofa::component::topology::utility::TopologyBoundingTrasher< DataTypes >; d_componentStatesofa::core::objectmodel::Base; d_drawBoxsofa::component::topology::utility::TopologyBoundingTrasher< DataTypes >; d_messageLogCountsofa::core::objectmodel::Basemutable; d_positionssofa::component::topology::utility::TopologyBoundingTrasher< DataTypes >; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *vparams) overridesofa::component::topology::utility::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1utility_1_1_topology_bounding_trasher-members.html:1959,clear,clearLoggedMessages,1959,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1utility_1_1_topology_bounding_trasher-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1utility_1_1_topology_bounding_trasher-members.html,1,['clear'],['clearLoggedMessages']
Usability,"e(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; Coord typedefsofa::core::behavior::RotationFinder< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; Deriv typedefsofa::core::behavior::RotationFinder< DataTypes >; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_rotation_finder-members.html:1913,clear,clearLoggedMessages,1913,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_rotation_finder-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_rotation_finder-members.html,1,['clear'],['clearLoggedMessages']
Usability,"e(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeForce(SReal x, SReal y, SReal z, SReal u, SReal v, SReal w, SReal q, SReal &fx, SReal &fy, SReal &fz) overridesofa::component::haptics::NullForceFeedbackvirtual; computeWrench(const sofa::type::Transform< SReal > &world_H_tool, const sofa::type::SpatialVector< SReal > &V_tool_world, sofa::type::SpatialVector< SReal > &W_tool_world) overridesofa::component::haptics::NullForceFeedbackvirtual; contextsofa::component::haptics::ForceFeedback; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_activatesofa::component::haptics::ForceFeedback; d_componentStatesofa::core::objectmodel::Base; d_indicesofa::component::haptics::ForceFeedback; d_messa",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_null_force_feedback-members.html:1901,clear,clearLoggedMessages,1901,api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_null_force_feedback-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_null_force_feedback-members.html,1,['clear'],['clearLoggedMessages']
Usability,"e(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeForce(SReal x, SReal y, SReal z, SReal u, SReal v, SReal w, SReal q, SReal &fx, SReal &fy, SReal &fz)=0sofa::component::haptics::ForceFeedbackpure virtual; computeWrench(const sofa::type::Transform< SReal > &, const sofa::type::SpatialVector< SReal > &, sofa::type::SpatialVector< SReal > &)=0sofa::component::haptics::ForceFeedbackpure virtual; contextsofa::component::haptics::ForceFeedback; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_activatesofa::component::haptics::ForceFeedback; d_componentStatesofa::core::objectmodel::Base; d_indicesofa::component::haptics::ForceFeedback; d_messageLogCountsofa::core::objectmodel::Basemutable; ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_force_feedback-members.html:1893,clear,clearLoggedMessages,1893,api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_force_feedback-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_force_feedback-members.html,1,['clear'],['clearLoggedMessages']
Usability,"e(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeForce(SReal, SReal, SReal, SReal, SReal, SReal, SReal, SReal &fx, SReal &fy, SReal &fz) overridesofa::component::haptics::NullForceFeedbackT< TDataTypes >inlinevirtual; computeForce(const VecCoord &, VecDeriv &) overridesofa::component::haptics::NullForceFeedbackT< TDataTypes >inlinevirtual; computeWrench(const sofa::type::Transform< SReal > &, const sofa::type::SpatialVector< SReal > &, sofa::type::SpatialVector< SReal > &W_tool_world) overridesofa::component::haptics::NullForceFeedbackT< TDataTypes >inlinevirtual; contextsofa::component::haptics::ForceFeedback; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_activatesofa::component:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_null_force_feedback_t-members.html:1931,clear,clearLoggedMessages,1931,api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_null_force_feedback_t-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_null_force_feedback_t-members.html,1,['clear'],['clearLoggedMessages']
Usability,"e(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeForce(const VecCoord &state, VecDeriv &forces)=0sofa::component::haptics::MechanicalStateForceFeedback< TDataTypes >pure virtual; computeForce(SReal x, SReal y, SReal z, SReal u, SReal v, SReal w, SReal q, SReal &fx, SReal &fy, SReal &fz) override=0sofa::component::haptics::MechanicalStateForceFeedback< TDataTypes >pure virtual; computeWrench(const sofa::type::Transform< SReal > &, const sofa::type::SpatialVector< SReal > &, sofa::type::SpatialVector< SReal > &) override=0sofa::component::haptics::MechanicalStateForceFeedback< TDataTypes >pure virtual; contextsofa::component::haptics::ForceFeedback; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinl",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_mechanical_state_force_feedback-members.html:1951,clear,clearLoggedMessages,1951,api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_mechanical_state_force_feedback-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_mechanical_state_force_feedback-members.html,1,['clear'],['clearLoggedMessages']
Usability,"e(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeInverseFromPermutation(int matrixSize, const int *inPermutation, int *outInversePermutation)sofa::core::behavior::BaseOrderingMethodstatic; computePermutation(const SparseMatrixPattern &inPattern, int *outPermutation, int *outInversePermutation) overridesofa::component::linearsolver::ordering::BaseEigenOrderingMethod< Eigen::AMDOrdering< int > >virtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::Ba",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1ordering_1_1_a_m_d_ordering_method-members.html:1931,clear,clearLoggedMessages,1931,api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1ordering_1_1_a_m_d_ordering_method-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1ordering_1_1_a_m_d_ordering_method-members.html,1,['clear'],['clearLoggedMessages']
Usability,"e(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeInverseFromPermutation(int matrixSize, const int *inPermutation, int *outInversePermutation)sofa::core::behavior::BaseOrderingMethodstatic; computePermutation(const SparseMatrixPattern &inPattern, int *outPermutation, int *outInversePermutation) overridesofa::component::linearsolver::ordering::BaseEigenOrderingMethod< Eigen::COLAMDOrdering< int > >virtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1ordering_1_1_c_o_l_a_m_d_ordering_method-members.html:1937,clear,clearLoggedMessages,1937,api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1ordering_1_1_c_o_l_a_m_d_ordering_method-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1ordering_1_1_c_o_l_a_m_d_ordering_method-members.html,1,['clear'],['clearLoggedMessages']
Usability,"e(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeInverseFromPermutation(int matrixSize, const int *inPermutation, int *outInversePermutation)sofa::core::behavior::BaseOrderingMethodstatic; computePermutation(const SparseMatrixPattern &inPattern, int *outPermutation, int *outInversePermutation) overridesofa::component::linearsolver::ordering::BaseEigenOrderingMethod< EigenOrderingMethodType >virtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::Base",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1ordering_1_1_base_eigen_ordering_method-members.html:1997,clear,clearLoggedMessages,1997,api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1ordering_1_1_base_eigen_ordering_method-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1ordering_1_1_base_eigen_ordering_method-members.html,1,['clear'],['clearLoggedMessages']
Usability,"e(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeInverseFromPermutation(int matrixSize, const int *inPermutation, int *outInversePermutation)sofa::core::behavior::BaseOrderingMethodstatic; computePermutation(const SparseMatrixPattern &inPattern, int *outPermutation, int *outInversePermutation) overridesofa::component::linearsolver::ordering::NaturalOrderingMethodvirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxso",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1ordering_1_1_natural_ordering_method-members.html:1939,clear,clearLoggedMessages,1939,api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1ordering_1_1_natural_ordering_method-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1ordering_1_1_natural_ordering_method-members.html,1,['clear'],['clearLoggedMessages']
Usability,"e(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeInverseFromPermutation(int matrixSize, const int *inPermutation, int *outInversePermutation)sofa::core::behavior::BaseOrderingMethodstatic; computePermutation(const SparseMatrixPattern &inPattern, int *outPermutation, int *outInversePermutation)=0sofa::core::behavior::BaseOrderingMethodpure virtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::B",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_ordering_method-members.html:1895,clear,clearLoggedMessages,1895,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_ordering_method-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_ordering_method-members.html,1,['clear'],['clearLoggedMessages']
Usability,"e(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeResidual(const core::ExecParams *, SReal, sofa::core::MultiVecCoordId, sofa::core::MultiVecDerivId)sofa::core::behavior::OdeSolverinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; cptsofa::component::odesolver::backward::NewmarkImplicitSolverprotected; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_betasofa::component::odesolver::backward::NewmarkImplicitSolver; d_componentStatesofa::core::objectmodel::Base; d_gammasofa::component::odesolver::backward::NewmarkImplicitSolver; d_messageLogCountsofa::core::objectmodel::Basemutable; d_rayleighMasssofa::component::odesolver::backward::NewmarkImplicitSolver; d_rayleighStiffnesssofa::component::odesolver::backward::NewmarkIm",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1backward_1_1_newmark_implicit_solver-members.html:1933,clear,clearLoggedMessages,1933,api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1backward_1_1_newmark_implicit_solver-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1backward_1_1_newmark_implicit_solver-members.html,1,['clear'],['clearLoggedMessages']
Usability,"e(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeResidual(const core::ExecParams *, SReal, sofa::core::MultiVecCoordId, sofa::core::MultiVecDerivId)sofa::core::behavior::OdeSolverinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; cptsofa::component::odesolver::backward::VariationalSymplecticSolver; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_computeHamiltoniansofa::component::odesolver::backward::VariationalSymplecticSolver; d_explicitsofa::component::odesolver::backward::VariationalSymplecticSolver; d_fileNamesofa::component::odesolver::backward::VariationalSymplecticSolver; d_hamiltonianEnergysofa::component::odesolver::backward::VariationalSymplecticSolver; d_messa",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1backward_1_1_variational_symplectic_solver-members.html:1945,clear,clearLoggedMessages,1945,api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1backward_1_1_variational_symplectic_solver-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1backward_1_1_variational_symplectic_solver-members.html,1,['clear'],['clearLoggedMessages']
Usability,"e(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeResidual(const core::ExecParams *, SReal, sofa::core::MultiVecCoordId, sofa::core::MultiVecDerivId)sofa::core::behavior::OdeSolverinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_absolute_correction_tolerance_thresholdsofa::component::odesolver::backward::StaticSolverprotected; d_absolute_residual_tolerance_thresholdsofa::component::odesolver::backward::StaticSolverprotected; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; d_newton_iterationssofa::component::odesolver::backward::StaticSolverprotected; d_relative_correction_tolerance_thresholdsofa::component::odesolver",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1backward_1_1_static_solver-members.html:1915,clear,clearLoggedMessages,1915,api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1backward_1_1_static_solver-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1backward_1_1_static_solver-members.html,1,['clear'],['clearLoggedMessages']
Usability,"e(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeResidual(const core::ExecParams *, SReal, sofa::core::MultiVecCoordId, sofa::core::MultiVecDerivId)sofa::core::behavior::OdeSolverinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; d_ratesofa::component::odesolver::forward::DampVelocitySolver; d_thresholdsofa::component::odesolver::forward::DampVelocitySolver; DampVelocitySolver()sofa::component::odesolver::forward::DampVelocitySolverprotected; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmod",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1forward_1_1_damp_velocity_solver-members.html:1925,clear,clearLoggedMessages,1925,api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1forward_1_1_damp_velocity_solver-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1forward_1_1_damp_velocity_solver-members.html,1,['clear'],['clearLoggedMessages']
Usability,"e(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeResidual(const core::ExecParams *, SReal, sofa::core::MultiVecCoordId, sofa::core::MultiVecDerivId)sofa::core::behavior::OdeSolverinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::strin",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1forward_1_1_runge_kutta2_solver-members.html:1923,clear,clearLoggedMessages,1923,api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1forward_1_1_runge_kutta2_solver-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1forward_1_1_runge_kutta2_solver-members.html,3,['clear'],['clearLoggedMessages']
Usability,"e(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_aliassofa::component::sceneutility::makealiascomponent::MakeAliasComponent; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; d_targetcomponentsofa::component::sceneutility::makealiascomponent::MakeAliasComponent; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(co",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1makealiascomponent_1_1_make_alias_component-members.html:1953,clear,clearLoggedMessages,1953,api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1makealiascomponent_1_1_make_alias_component-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1makealiascomponent_1_1_make_alias_component-members.html,1,['clear'],['clearLoggedMessages']
Usability,"e(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_aliassofa::component::sceneutility::makedataaliascomponent::MakeDataAliasComponent; d_componentnamesofa::component::sceneutility::makedataaliascomponent::MakeDataAliasComponent; d_componentStatesofa::core::objectmodel::Base; d_datanamesofa::component::sceneutility::makedataaliascomponent::MakeDataAliasComponent; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1makedataaliascomponent_1_1_make_data_alias_component-members.html:1969,clear,clearLoggedMessages,1969,api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1makedataaliascomponent_1_1_make_data_alias_component-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1makedataaliascomponent_1_1_make_data_alias_component-members.html,1,['clear'],['clearLoggedMessages']
Usability,"e(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_filenamesofa::component::sceneutility::FileMessageHandlerComponent; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; FileMessageHandlerComponent()sofa::component::sceneutility::FileMessageHandlerComponent; findData(const std",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_file_message_handler_component-members.html:1931,clear,clearLoggedMessages,1931,api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_file_message_handler_component-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_file_message_handler_component-members.html,1,['clear'],['clearLoggedMessages']
Usability,"e(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_loadedPluginssofa::simulation::RequiredPlugin; d_messageLogCountsofa::core::objectmodel::Basemutable; d_pluginNamesofa::simulation::RequiredPlugin; d_requireAllsofa::simulation::RequiredPlugin; d_requireOnesofa::simulation::RequiredPlugin; d_stopAfterFirstNameFoundsofa::simulation::RequiredPlugin; d_stopAfterFirstSuffixFoundsofa::simulation::RequiredPlugin; d_suffixMapsofa::simulation::RequiredPlugin; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinl",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_required_plugin-members.html:1879,clear,clearLoggedMessages,1879,api/master/sofa/html/classsofa_1_1simulation_1_1_required_plugin-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_required_plugin-members.html,1,['clear'],['clearLoggedMessages']
Usability,"e(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; d_typesofa::component::sceneutility::MessageHandlerComponent; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::s",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_message_handler_component-members.html:1923,clear,clearLoggedMessages,1923,api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_message_handler_component-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_message_handler_component-members.html,1,['clear'],['clearLoggedMessages']
Usability,"e(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; Edge typedefsofa::core::topology::Topology; EdgeID typedefsofa::core::topology::Topology; ElemID typedefsofa::core::topology::Topology; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constso",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology-members.html:1875,clear,clearLoggedMessages,1875,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology-members.html,1,['clear'],['clearLoggedMessages']
Usability,"e(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Bas",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_input_event_reader-members.html:1901,clear,clearLoggedMessages,1901,api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_input_event_reader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_input_event_reader-members.html,13,['clear'],['clearLoggedMessages']
Usability,"e(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, sofa::core::objectmodel::BaseContext *context, sofa::core::objectmodel::BaseObjectDescription *arg)sofa::component::collision::detection::algorithm::DirectSAPinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; DirectSAP()=defaultsofa::component::collision::detection::algorithm::DirectSAPprotected; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p-members.html:1933,clear,clearLoggedMessages,1933,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p-members.html,1,['clear'],['clearLoggedMessages']
Usability,"e(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, sofa::core::objectmodel::BaseContext *context, sofa::core::objectmodel::BaseObjectDescription *arg)sofa::component::collision::detection::algorithm::RayTraceDetectioninlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_ray_trace_detection-members.html:1949,clear,clearLoggedMessages,1949,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_ray_trace_detection-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_ray_trace_detection-members.html,1,['clear'],['clearLoggedMessages']
Usability,"e(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *link)s",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_pair_state_accessor-members.html:1945,clear,clearLoggedMessages,1945,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_pair_state_accessor-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_pair_state_accessor-members.html,3,['clear'],['clearLoggedMessages']
Usability,"e(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsBegin() const overridesofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >inlinevirtual; bRowsEnd() const overridesofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >inlinevirtual; bRowSize() const overridesofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >inlinevirtual; bRowsRange() const overridesofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >inlinevirtual; btempsofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSMechanicalPolicy >; category enum valuesofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >; check_matrix()sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSMechanicalPolicy >inline; check_matrix(Index nzmax, Index m, Index n, Index *a_p, Index *a_i, Block *a_x)sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSMechanicalPolicy >inlinestatic; clear(Index i, Index j) overridesofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >inline; clear() overridesofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >inlinevirtual; sofa::linearalgebra::BaseMatrix::clear(Index i, Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; ClearByZerossofa::linearalgebra::CRSDefaultPolicystatic; clearCol(Index j) overridesofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >inline; sofa::linearalgebra::BaseMatrix::clearCol(Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; clearColBlock(Index j)sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSMechanicalPolicy >inline; clearCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRow(Index i) overridesofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >inline; sofa::linearalgebra::BaseMatrix::clearRow(Index i)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowBlock(Index ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical-members.html:13988,clear,clear,13988,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical-members.html,1,['clear'],['clear']
Usability,"e(const Index cubeIndex, const SReal *baryCoords) overridesofa::component::mapping::linear::BarycentricMapperRegularGridTopology< In, Out >; apply(typename Out::VecCoord &out, const typename In::VecCoord &in) overridesofa::component::mapping::linear::BarycentricMapperRegularGridTopology< In, Out >; applyJ(typename Out::VecDeriv &out, const typename In::VecDeriv &in) overridesofa::component::mapping::linear::BarycentricMapperRegularGridTopology< In, Out >; applyJT(typename In::VecDeriv &out, const typename Out::VecDeriv &in) overridesofa::component::mapping::linear::BarycentricMapperRegularGridTopology< In, Out >; applyJT(typename In::MatrixDeriv &out, const typename Out::MatrixDeriv &in) overridesofa::component::mapping::linear::BarycentricMapperRegularGridTopology< In, Out >; BarycentricMapperRegularGridTopology(RegularGridTopology *fromTopology, core::topology::BaseMeshTopology *toTopology)sofa::component::mapping::linear::BarycentricMapperRegularGridTopology< In, Out >protected; clear(std::size_t reserve=0) overridesofa::component::mapping::linear::BarycentricMapperRegularGridTopology< In, Out >; CubeData typedefsofa::component::mapping::linear::BarycentricMapperRegularGridTopology< In, Out >; draw(const core::visual::VisualParams *, const typename Out::VecCoord &out, const typename In::VecCoord &in) overridesofa::component::mapping::linear::BarycentricMapperRegularGridTopology< In, Out >; getJ(int outSize, int inSize) overridesofa::component::mapping::linear::BarycentricMapperRegularGridTopology< In, Out >; getTopology()sofa::component::mapping::linear::BarycentricMapperRegularGridTopology< In, Out >inline; InDeriv typedefsofa::component::mapping::linear::BarycentricMapperRegularGridTopology< In, Out >; Index typedefsofa::component::mapping::linear::BarycentricMapperRegularGridTopology< In, Out >; init(const typename Out::VecCoord &out, const typename In::VecCoord &in) overridesofa::component::mapping::linear::BarycentricMapperRegularGridTopology< In, Out >; isE",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_barycentric_mapper_regular_grid_topology-members.html:1363,clear,clear,1363,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_barycentric_mapper_regular_grid_topology-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_barycentric_mapper_regular_grid_topology-members.html,1,['clear'],['clear']
Usability,"e(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; buildGrid()sofa::component::visual::VisualGrid; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_colorsofa::component::visual::VisualGrid; d_componentStatesofa::core::objectmodel::Base; d_drawsofa::component::visual::VisualGrid; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; d_nbSubdivsofa::component::visual::VisualGrid; d_planesofa::component::visual::VisualGrid; d_sizesofa::component::visual::VisualGrid; d_thicknesssofa::component::visual::VisualGrid; doDrawVisual(const core::visual::VisualParams *) overridesofa::component::visual::VisualGridvirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; doUpdateVisual",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_grid-members.html:2511,clear,clearVisual,2511,api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_grid-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_grid-members.html,1,['clear'],['clearVisual']
Usability,"e-time constant specifying the number of scalars within this vector (equivalent to the size() method) More...;  ; static constexpr sofa::Size spatial_dimensions = 3;  Compile-time constant specifying the number of dimensions of space (NOT equivalent to total_size for rigids) More...;  . Protected Attributes; Vec3 vCenter;  ; Vec3 vOrientation;  . Public Member Functions; constexpr RigidDeriv ();  ; constexpr RigidDeriv (type::NoInit);  ; constexpr RigidDeriv (const Vec3 &velCenter, const Vec3 &velOrient);  ; template<typename real2 > ; constexpr RigidDeriv (const RigidDeriv< 3, real2 > &c);  ; template<typename real2 > ; constexpr RigidDeriv (const type::Vec< 6, real2 > &v);  ; template<typename real2 > ; constexpr RigidDeriv (const real2 *ptr);  ; constexpr void clear ();  ; template<typename real2 > ; constexpr void operator= (const RigidDeriv< 3, real2 > &c);  ; template<typename real2 > ; constexpr void operator= (const type::Vec< 3, real2 > &v);  ; template<typename real2 > ; constexpr void operator= (const type::Vec< 6, real2 > &v);  ; constexpr void operator+= (const RigidDeriv &a);  ; constexpr void operator-= (const RigidDeriv &a);  ; constexpr RigidDeriv< 3, real > operator+ (const RigidDeriv< 3, real > &a) const;  ; template<typename real2 > ; constexpr void operator*= (real2 a);  ; template<typename real2 > ; constexpr void operator/= (real2 a);  ; constexpr RigidDeriv< 3, real > operator- () const;  ; constexpr RigidDeriv< 3, real > operator- (const RigidDeriv< 3, real > &a) const;  ; constexpr Real operator* (const RigidDeriv< 3, real > &a) const;  dot product, mostly used to compute residuals as sqrt(x*x) More...;  ; real norm () const;  Euclidean norm. More...;  ; constexpr Vec3 & getVCenter ();  ; constexpr Vec3 & getVOrientation ();  ; constexpr const Vec3 & getVCenter () const;  ; constexpr const Vec3 & getVOrientation () const;  ; constexpr Vec3 & getLinear ();  ; constexpr const Vec3 & getLinear () const;  ; constexpr Vec3 & getAngular ();  ; con",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1defaulttype_1_1_rigid_deriv_3_013_00_01real_01_4.html:1244,clear,clear,1244,api/master/sofa/html/classsofa_1_1defaulttype_1_1_rigid_deriv_3_013_00_01real_01_4.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1defaulttype_1_1_rigid_deriv_3_013_00_01real_01_4.html,1,['clear'],['clear']
Usability,"e...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Constructor details. ◆ BaseNode(). sofa::core::objectmodel::BaseNode::BaseNode ; (; ). protected . ◆ ~BaseNode(). sofa::core::objectmodel::BaseNode::~BaseNode ; (; ). overrideprotected . Function details. ◆ addChild(). virtual void sofa::core::objectmodel::BaseNode::addChild ; (; BaseNode::SPtr ; node). pure virtual . Add a child node. ; Implemented in sofa::simulation::Node. ◆ addObject(). virtual bool sofa::core::objectmodel::BaseNode::addObject ; (; BaseObject::SPtr ; obj, . TypeOfInsertion ; = TypeOfInsertion::AtEnd . ). pure virtual . Add a generic object. ; Implemented in sofa::simulation::Node. ◆ clearObjectContext(). void sofa::core::objectmodel::BaseNode::clearObjectContext ; (; BaseObject::SPtr ; obj). protected . Reset the context of an object. . ◆ detachFromGraph(). virtual void sofa::core::objectmodel::BaseNode::detachFromGraph ; (; ). pure virtual . Remove the current node from the graph: depending on the type of Node, it can have one or several parents. WarningYou must have a SPtr on the node you detach if you want to keep it or the smart pointer mechanism will remove it ! ; Implemented in sofa::simulation::graph::DAGNode. ◆ findLinkDestClass(). Base* sofa::core::objectmodel::BaseNode::findLinkDestClass ; (; const BaseClass * ; destType, . const std::string & ; path, . const BaseLink * ; link . ). overridepure virtual . Reimplemented from sofa::core::objectmodel::Base.; Implemented in sofa::simulation::Node. ◆ getAnimationLoop(). core::behavior::BaseAnimationLoop * sofa::core::objectmodel::BaseNode::getAnimationLoop ; (; ); const. virtual . Reimplemented in sofa::simulation::Node. ◆ getChildren(). virtual Children sofa::core::objectmo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_node.html:12529,clear,clearObjectContext,12529,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_node.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_node.html,1,['clear'],['clearObjectContext']
Usability,"e...;  ; virtual void drawStep (sofa::core::visual::VisualParams *);  Render the scene. More...;  ; virtual void computeBBoxStep (sofa::core::visual::VisualParams *, SReal *, SReal *, bool);  Compute the bounding box of the scene. If init is set to ""true"", then minBBox and maxBBox will be initialised to a default value. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virt",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_loop.html:1779,clear,clearVisual,1779,api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_loop.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_loop.html,2,['clear'],"['clear', 'clearVisual']"
Usability,"e...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  ;  Static Protected Member Functions inherited from sofa::core::loader::BaseLoader; static void skipToEOL (FILE *f);  ; static bool readLine (char *buf, int size, FILE *f);  . Constructor details. ◆ OffSequenceLoader(). sofa::component::io::mesh::OffSequenceLoader::OffSequenceLoader ; (; ). protected . Function details. ◆ clear(). void sofa::component::io::mesh::OffSequenceLoader::clear ; (; ). ◆ handleEvent(). void sofa::component::io::mesh::OffSequenceLoader::handleEvent ; (; sofa::core::objectmodel::Event * ; ). overridevirtual . Handle an event. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ init(). void sofa::component::io::mesh::OffSequenceLoader::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ load(). bool sofa::component::io::mesh::OffSequenceLoader::load ; (; const char * ; filename). virtual . ◆ reset(). void sofa::component::io::mesh::OffSequenceLoader::reset ; (; ). overridevirtual . Reset to initial state. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ SOFA_CLASS(). sofa::component::io::mesh::OffSequenceLoader::SOFA_CLASS ; (; OffSequenceLoader ; , . MeshOffLoader ;  . ). sofacomponentiomeshOffSequenceLoader; Generated on Mon Nov 11 2024 02:46:09 for SOFA API by 1.9",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_off_sequence_loader.html:21055,clear,clear,21055,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_off_sequence_loader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_off_sequence_loader.html,1,['clear'],['clear']
Usability,"e::behavior::BaseProjectiveConstraintSetvirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseProjectiveConstraintSet()sofa::core::behavior::BaseProjectiveConstraintSetinlineprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ProjectiveConstraintSet< TDataTypes >inlinestatic; sofa::core::behavior::BaseProjectiveConstraintSet::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearIndices()sofa::component::constraint::projective::LinearVelocityProjectiveConstraint< TDataTypes >; clearKeyVelocities()sofa::component::constraint::projective::LinearVelocityProjectiveConstraint< TDataTypes >; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; Coord typedefsofa::component::constraint::projective::LinearVelocityProjectiveConstraint< TDataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_coordinatessofa::component::constraint::projective::LinearVelocityProjectiveConstraint< TDataTypes >; d_indicessofa::component::constraint::projective::LinearVelocityProjectiveConstraint< TDataTypes >; d_",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_linear_velocity_projective_constraint-members.html:3101,clear,clearIndices,3101,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_linear_velocity_projective_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_linear_velocity_projective_constraint-members.html,1,['clear'],['clearIndices']
Usability,"e::behavior::ProjectiveConstraintSet::projectPosition(const MechanicalParams *mparams, MultiVecCoordId xId) overridesofa::core::behavior::ProjectiveConstraintSet< DataTypes >virtual; projectResponse(const core::MechanicalParams *mparams, DataVecDeriv &resData) overridesofa::component::constraint::projective::HermiteSplineProjectiveConstraint< DataTypes >virtual; sofa::core::behavior::ProjectiveConstraintSet::projectResponse(const MechanicalParams *mparams, MultiVecDerivId dxId) overridesofa::core::behavior::ProjectiveConstraintSet< DataTypes >virtual; sofa::core::behavior::ProjectiveConstraintSet::projectResponse(const MechanicalParams *mparams, MultiVecDerivId dxId)=0sofa::core::behavior::ProjectiveConstraintSet< DataTypes >; sofa::core::behavior::BaseProjectiveConstraintSet::projectResponse(const MechanicalParams *, double **)sofa::core::behavior::BaseProjectiveConstraintSetinlinevirtual; projectResponseT(DataDeriv &dx, const std::function< void(DataDeriv &, const unsigned int)> &clear)sofa::component::constraint::projective::HermiteSplineProjectiveConstraint< DataTypes >protected; projectVelocity(const core::MechanicalParams *mparams, DataVecDeriv &vData) overridesofa::component::constraint::projective::HermiteSplineProjectiveConstraint< DataTypes >virtual; sofa::core::behavior::ProjectiveConstraintSet::projectVelocity(const MechanicalParams *mparams, MultiVecDerivId vId) overridesofa::core::behavior::ProjectiveConstraintSet< DataTypes >virtual; Ptr typedefsofa::core::objectmodel::Base; QuatR typedefsofa::component::constraint::projective::HermiteSplineProjectiveConstraint< DataTypes >; Real typedefsofa::component::constraint::projective::HermiteSplineProjectiveConstraint< DataTypes >; reinit() overridesofa::component::constraint::projective::HermiteSplineProjectiveConstraint< DataTypes >virtual; removeData(BaseData *f)sofa::core::objectmodel::Base; removeInNode(objectmodel::BaseNode *node) overridesofa::core::behavior::BaseProjectiveConstraintSetvirtual; removeS",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_hermite_spline_projective_constraint-members.html:15650,clear,clear,15650,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_hermite_spline_projective_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_hermite_spline_projective_constraint-members.html,1,['clear'],['clear']
Usability,"e::behavior::StiffnessMatrix * ; ). inlineoverridevirtual . Reimplemented from sofa::core::behavior::BaseForceField. ◆ checkMassDensity(). template<class DataTypes , class GeometricalTypes > . bool sofa::component::mass::DiagonalMass< DataTypes, GeometricalTypes >::checkMassDensity. virtual . ◆ checkTopology(). template<class DataTypes , class GeometricalTypes > . bool sofa::component::mass::DiagonalMass< DataTypes, GeometricalTypes >::checkTopology. protected . ◆ checkTotalMass(). template<class DataTypes , class GeometricalTypes > . bool sofa::component::mass::DiagonalMass< DataTypes, GeometricalTypes >::checkTotalMass. virtual . ◆ checkTotalMassInit(). template<class DataTypes , class GeometricalTypes > . void sofa::component::mass::DiagonalMass< DataTypes, GeometricalTypes >::checkTotalMassInit. virtual . ◆ checkVertexMass(). template<class DataTypes , class GeometricalTypes > . bool sofa::component::mass::DiagonalMass< DataTypes, GeometricalTypes >::checkVertexMass. virtual . ◆ clear(). template<class DataTypes , class GeometricalTypes > . void sofa::component::mass::DiagonalMass< DataTypes, GeometricalTypes >::clear. ◆ computeVertexMass(). template<class DataTypes , class GeometricalTypes > . DiagonalMass< DataTypes, GeometricalTypes >::Real sofa::component::mass::DiagonalMass< DataTypes, GeometricalTypes >::computeVertexMass ; (; Real ; density). protected . Compute the vertexMass using input density and return the corresponding full mass. . ◆ doUpdateInternal(). template<class DataTypes , class GeometricalTypes > . void sofa::component::mass::DiagonalMass< DataTypes, GeometricalTypes >::doUpdateInternal. overridevirtual . Implementation of the internal update. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ draw() [1/5]. void sofa::component::mass::DiagonalMass< defaulttype::Rigid3Types >::draw ; (; const core::visual::VisualParams * ; ). virtual . Render internal data of this object, for debugging purposes. ; Reimplemented from sofa::core::object",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_diagonal_mass.html:37679,clear,clear,37679,api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_diagonal_mass.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_diagonal_mass.html,1,['clear'],['clear']
Usability,"e::objectmodel::Base; baseWrite(VecId v) overridesofa::core::State< TDataTypes >virtual; bboxsofa::component::visual::VisualModelImpl; blendEqsofa::gl::component::rendering3d::OglModelprotected; blendEquationsofa::gl::component::rendering3d::OglModelprotected; blendTransparencysofa::gl::component::rendering3d::OglModel; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; canUsePatchessofa::gl::component::rendering3d::OglModelprotected; castShadowsofa::component::visual::VisualModelImpl; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *params, bool=false) overridesofa::component::visual::VisualModelImplvirtual; VisualState< defaulttype::Vec3Types >::computeBBox() constsofa::core::State< TDataTypes >; computeBitangent(const Coord &v1, const Coord &v2, const Coord &v3, const TexCoord &t1, const TexCoord &t2, const TexCoord &t3)sofa::component::visual::VisualModelImplstatic; computeMesh()sofa::component::visual::VisualModelImplvirtual; computeNormals()sofa::component::visual::VisualModelImplvirtual; computePositions()sofa::component::visual::VisualModelImplvirtual; computeTangent(const Coord &v1, const Coord &v2, const Coord &v3, const TexCoord &t1, const TexCoord &t2, const TexCoord &t3)sofa::component::visual::VisualModelImplstatic; computeTangents()sofa::component::visual::VisualModelImplvirtual; computeUVSphereProjection()sofa::component::visual::VisualModelImplvirtual; Coord",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_merge_visual_models-members.html:3519,clear,clearLoggedMessages,3519,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_merge_visual_models-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_merge_visual_models-members.html,2,['clear'],['clearLoggedMessages']
Usability,"e::objectmodel::BaseObjectprotected; BaseProjectiveConstraintSet()sofa::core::behavior::BaseProjectiveConstraintSetinlineprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ProjectiveConstraintSet< TDataTypes >inlinestatic; sofa::core::behavior::BaseProjectiveConstraintSet::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearConstraints()sofa::component::constraint::projective::PatchTestMovementProjectiveConstraint< TDataTypes >; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; Coord typedefsofa::component::constraint::projective::PatchTestMovementProjectiveConstraint< TDataTypes >; CoordSizesofa::component::constraint::projective::PatchTestMovementProjectiveConstraint< TDataTypes >static; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_beginConstraintTimesofa::component::constraint::projective::PatchTestMovementProjectiveConstraint< TDataTypes >; d_componentStatesofa::core::objectmodel::Base; d_constrainedPointssofa::component::constraint::projective::PatchTestMovementProjectiveConstraint< TDataTypes >; d_cornerMovementssofa::component::constraint::projective::PatchTestMovementProjective",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_patch_test_movement_projective_constraint-members.html:3095,clear,clearLoggedMessages,3095,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_patch_test_movement_projective_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_patch_test_movement_projective_constraint-members.html,1,['clear'],['clearLoggedMessages']
Usability,"e::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkConnexity() overridesofa::component::topology::container::dynamic::EdgeSetTopologyContainervirtual; checkTopology() const overridesofa::component::topology::container::dynamic::EdgeSetTopologyContainervirtual; cleanEdgeTopologyFromDirty()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; cleanPointTopologyFromDirty()sofa::component::topology::container::dynamic::PointSetTopologyContainerprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear() overridesofa::component::topology::container::dynamic::EdgeSetTopologyContainervirtual; clearEdges()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearEdgesAroundVertex()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createEdgesAroundVertexArray()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotectedvirtual; createEdgeSetArray()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotectedvirtual; d_checkConnexitysofa::component::topology::container::dynamic::EdgeSetTopologyContainer; d_checkTopologysofa::component::topology::container::dynamic::PointSetTopologyContainer; d_componentStatesofa::core::objectmodel::Base; d_edgesofa::component::topology::container::dynamic::EdgeSetTopologyContainer; d_initPointssofa::component::topology::container::dynamic::PointSetTopo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_container-members.html:4221,clear,clearLoggedMessages,4221,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_container-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_container-members.html,1,['clear'],['clearLoggedMessages']
Usability,"e::topology::TopologyContainervirtual; beginStateChange() const overridesofa::core::topology::TopologyContainervirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkConnexity()sofa::core::topology::BaseMeshTopologyinlinevirtual; checkTopology() const overridesofa::component::topology::container::dynamic::PointSetTopologyContainervirtual; cleanPointTopologyFromDirty()sofa::component::topology::container::dynamic::PointSetTopologyContainerprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear() overridesofa::component::topology::container::dynamic::PointSetTopologyContainervirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_checkTopologysofa::component::topology::container::dynamic::PointSetTopologyContainer; d_componentStatesofa::core::objectmodel::Base; d_initPointssofa::component::topology::container::dynamic::PointSetTopologyContainer; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; Edge typedefsofa::core::topology::Topology; EdgeID typedefsofa::core::topology::Topology; EdgesAroundVertex typedefsofa::core::topology::BaseMeshTopology; EdgesInHex",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_container-members.html:3837,clear,clearLoggedMessages,3837,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_container-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_container-members.html,1,['clear'],['clearLoggedMessages']
Usability,e; . /10; ; SOFA - Topic: [SOLVED] How to incise 3d object. /11; ; SOFA - Topic: [SOLVED] How to incise 3d object. /3; ; SOFA - Topic: [SOLVED] How to incise 3d object. /5; ; SOFA - Topic: [SOLVED] How to incise 3d object. SOFA - Topic: [SOLVED] How to incise 3d object. /how-to-increase-fps-of-a-scene-including-more-than-20000-tetrahedral-mesh; ; SOFA - Topic: [SOLVED] How to increase FPS of a scene including more than 20000 tetrahedral mesh. /how-to-integrate-the-new-fem-methods-into-sofa-engine; ; SOFA - Topic: How to integrate the new FEM methods into SOFA engine. /how-to-interact-with-3d-deformable-objects-in-sofa; ; SOFA - Topic: How to interact with 3D deformable objects in SOFA. /how-to-know-the-collision-force-or-energy; ; SOFA - Topic: How to know the collision force or energy. /how-to-learn-mesh-editing-programming; . /feed; ; [SOLVED] How to learn mesh editing programming? – SOFA. SOFA - Topic: [SOLVED] How to learn mesh editing programming?. /how-to-learn-using-sofa; ; SOFA - Topic: How to learn using SOFA. /how-to-look-at-the-example-of-the-source-codec; ; SOFA - Topic: [SOLVED] How to look at the example of the source code(c++) ?. /how-to-make-a-6dof-simulation-act-like-a-4dof-make-3d-act-like-2d-simulation; ; SOFA - Topic: How to make a 6DOF simulation act like a 4DOF (make 3d act like 2d simulation)?. /how-to-make-a-modal-analysis; ; SOFA - Topic: how to: Make a modal analysis. /how-to-make-a-pythonscript-controller-with-sofapython3; ; SOFA - Topic: [SOLVED] How to make a PythonScript controller with SofaPython3. /how-to-make-local-refined-tetrahedral-mesh; ; SOFA - Topic: How to make local refined tetrahedral mesh?. /how-to-make-some-part-of-an-object-elastic-and-other-part-plastic; ; SOFA - Topic: How to make some part of an object elastic and other part plastic. /how-to-make-tetrahedron-msh-file-with-meshlab; . /embed; ; SOFA - Topic: how to make tetrahedron msh file with meshlab?. SOFA - Topic: how to make tetrahedron msh file with meshlab?. /how-,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:325228,learn,learn-using-sofa,325228,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,2,['learn'],"['learn', 'learn-using-sofa']"
Usability,"e; BarycentricPenalityContact(CollisionModel1 *model1, CollisionModel2 *model2, Intersection *intersectionMethod)sofa::component::collision::response::contact::BarycentricPenalityContact< TCollisionModel1, TCollisionModel2, ResponseDataTypes >protected; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup() overridesofa::component::collision::response::contact::BarycentricPenalityContact< TCollisionModel1, TCollisionModel2, ResponseDataTypes >virtual; clearLoggedMessages() constsofa::core::objectmodel::Base; CollisionElement1 typedefsofa::component::collision::response::contact::BarycentricPenalityContact< TCollisionModel1, TCollisionModel2, ResponseDataTypes >; CollisionElement2 typedefsofa::component::collision::response::contact::BarycentricPenalityContact< TCollisionModel1, TCollisionModel2, ResponseDataTypes >; CollisionModel1 typedefsofa::component::collision::response::contact::BarycentricPenalityContact< TCollisionModel1, TCollisionModel2, ResponseDataTypes >; CollisionModel2 typedefsofa::component::collision::response::contact::BarycentricPenalityContact< TCollisionModel1, TCollisionModel2, ResponseDataTypes >; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; Contact()sofa::core::collision::Contactinlineprotected; contactIndexsofa::component::collision::response::contact::BarycentricPenalityContact< TCollisionModel1, TCollisionModel2, ResponseDataTypes >protected; ContactIndexMap type",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_barycentric_penality_contact-members.html:2430,clear,clearLoggedMessages,2430,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_barycentric_penality_contact-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_barycentric_penality_contact-members.html,1,['clear'],['clearLoggedMessages']
Usability,"e; buildGeometricStiffnessMatrix(sofa::core::GeometricStiffnessMatrix *matrices) overridesofa::component::mapping::nonlinear::AreaMapping< TIn, TOut >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::core::Mapping< TIn, TOut >inlinestatic; sofa::core::BaseMapping::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkLinearSolverSymmetry(const core::MechanicalParams *mparams) constsofa::component::mapping::nonlinear::NonLinearMappingData< HasStabilizedGeometricStiffness >protected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeAccFromMapping(const MechanicalParams *mparams, MultiVecDerivId outAcc, ConstMultiVecDerivId inVel, ConstMultiVecDerivId inAcc) overridesofa::core::Mapping< TIn, TOut >virtual; computeAccFromMapping(const MechanicalParams *, OutDataVecDeriv &, const InDataVecDeriv &, const InDataVecDeriv &)sofa::core::Mapping< TIn, TOut >inlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeSecondDerivativeArea(const sofa::type::fixed_array< sofa::type::Vec3, 3 > &triangleVertices)sofa::component::mapping::nonlinear::AreaMapping< TIn, TOut >static; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::core::Mapping< TIn, TOut >inlinestatic; createMappedMatrix(const behavior::BaseMechanicalState ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_area_mapping-members.html:5090,clear,clearLoggedMessages,5090,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_area_mapping-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_area_mapping-members.html,1,['clear'],['clearLoggedMessages']
Usability,"e;  . Size getNbPoints () const override;  Returns the number of vertices in this topology. More...;  ; virtual Size getNumberOfElements () const;  Returns the number of topological element of the current topology. This function avoids to know which topological container is in used. More...;  ; void setNbPoints (Size n) override;  Set the number of vertices in this topology. More...;  ; bool hasPos () const override;  check if vertices in this topology have positions. More...;  ; SReal getPX (Index i) const override;  Returns the X coordinate of the ith DOF. More...;  ; SReal getPY (Index i) const override;  Returns the Y coordinate of the ith DOF. More...;  ; SReal getPZ (Index i) const override;  Returns the Z coordinate of the ith DOF. More...;  ; sofa::geometry::ElementType getTopologyType () const override;  Returns the type of the topology. More...;  . bool checkTopology () const override;  Checks if the Topology is coherent. More...;  ; void addPoint ();  add one DOF in this topology (simply increment the number of DOF) More...;  ; void addPoints (const Size nPoints);  add a number of DOFs in this topology (simply increase the number of DOF according to this parameter) More...;  ; void removePoint ();  remove one DOF in this topology (simply decrement the number of DOF) More...;  ; void removePoints (const Size nPoints);  remove a number of DOFs in this topology (simply decrease the number of DOF according to this parameter) More...;  ;  Public Member Functions inherited from sofa::core::topology::TopologyContainer;  SOFA_CLASS2 (TopologyContainer, BaseTopologyObject, BaseMeshTopology);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; const SeqEdges & getEdges () override;  ; const SeqTriangles & getTriangles () override;  ; const SeqQuads & getQuads () override;  ; const SeqTetrahedra & getTetrahedra () override;  ; const SeqHexahedra & getHexahedra () override;  ; int getRevisi",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_container.html:5106,simpl,simply,5106,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_container.html,1,['simpl'],['simply']
Usability,"eContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkConnexity() overridesofa::component::topology::container::dynamic::TetrahedronSetTopologyContainervirtual; checkTopology() const overridesofa::component::topology::container::dynamic::TetrahedronSetTopologyContainervirtual; cleanEdgeTopologyFromDirty()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; cleanPointTopologyFromDirty()sofa::component::topology::container::dynamic::PointSetTopologyContainerprotected; cleanTetrahedronTopologyFromDirty()sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainerprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanTriangleTopologyFromDirty()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear() overridesofa::component::topology::container::dynamic::TetrahedronSetTopologyContainervirtual; clearBorderElementLists()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; clearEdges()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearEdgesAroundVertex()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearEdgesInTetrahedron()sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainerprotected; clearEdgesInTriangle()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; clearLoggedMessages() constsofa::core::objectmodel::Base; clearTetrahedra()sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainerprotected; clearTetrahedraAroundEdge()sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainerprotected; clearTetrahedraAroundTriangle()sofa::component::topology::container::dynamic::Tetrahedr",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container-members.html:4448,clear,clear,4448,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container-members.html,1,['clear'],['clear']
Usability,"eMatrixinline; blocGet(Index i, Index j) constsofa::linearalgebra::BaseMatrixinlinevirtual; blocGetW(Index i, Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; blocSet(Index i, Index j, const T *buffer)sofa::linearalgebra::BaseMatrixinline; bRowBegin(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowEnd(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowRange(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsBegin() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsEnd() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowSize() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsRange() constsofa::linearalgebra::BaseMatrixinlinevirtual; clear(Index i, Index j) overridesofa::linearalgebra::FullMatrix< T >virtual; clear() overridesofa::linearalgebra::FullMatrix< T >virtual; clearCol(Index j) overridesofa::linearalgebra::FullMatrix< T >virtual; clearCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRow(Index i) overridesofa::linearalgebra::FullMatrix< T >virtual; clearRowCol(Index i) overridesofa::linearalgebra::FullMatrix< T >virtual; clearRows(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowsCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; cols(void) constsofa::linearalgebra::BaseMatrixinline; colSize(void) const overridesofa::linearalgebra::FullMatrix< T >inlinevirtual; compress()sofa::linearalgebra::BaseMatrixvirtual; createBlockAccessor(Index row, Index col, void *internalPtr=nullptr)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockAccessor(Index row, Index col, Index internalData)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockConstAccessor(Index row, Index col, void *internalPtr=nullptr) constsofa::linearalgebra::BaseMatrixinlineprotected; createBlockConstAccessor(Index row, Index col, Index internalData) constsofa::linearalgebra::BaseMatrixinlineprotected; createColBlockConstIterator(Index row, voi",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_full_matrix-members.html:5971,clear,clearRow,5971,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_full_matrix-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_full_matrix-members.html,2,['clear'],['clearRow']
Usability,"eObjectprotected; BaseType typedefsofa::core::objectmodel::Base; buildDampingMatrix(core::behavior::DampingMatrix *) finalsofa::component::solidmechanics::spring::GearSpringForceField< DataTypes >virtual; buildStiffnessMatrix(StiffnessMatrix *matrix)sofa::core::behavior::BaseForceFieldvirtual; bwdInit() overridesofa::component::solidmechanics::spring::GearSpringForceField< DataTypes >virtual; canCreate(T *obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::PairInteractionForceField< DataTypes >inlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear(int reserve=0)sofa::component::solidmechanics::spring::GearSpringForceField< DataTypes >inline; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; Coord typedefsofa::component::solidmechanics::spring::GearSpringForceField< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::core::behavior::PairInteractionForceField< DataTypes >inlinestatic; d_componentStatesofa::core::objectmodel::Base; d_filenamesofa::component::solidmechanics::spring::GearSpringForceField< DataTypes >; d_messageLogCountsofa::core::objectmodel::Basemutable; d_periodsofa::component::solidmechanics::spring::GearSpringForceField< DataTypes >; d_reinitsofa::component::solidmechanics::spring::GearSpringForceField< DataTypes >; d_showFactorSizesofa::component::solidmechanics::spring::GearSpringF",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_gear_spring_force_field-members.html:4836,clear,clearLoggedMessages,4836,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_gear_spring_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_gear_spring_force_field-members.html,1,['clear'],['clearLoggedMessages']
Usability,"ead::CircularQueue< T, StoragePolicy, ThreadAccessPolicy >::CircularQueue. ◆ ~CircularQueue(). template<class T , template< class U > class StoragePolicy, class ThreadAccessPolicy > . sofa::helper::system::thread::CircularQueue< T, StoragePolicy, ThreadAccessPolicy >::~CircularQueue. Function details. ◆ isEmpty(). template<class T , template< class U > class StoragePolicy, class ThreadAccessPolicy > . bool sofa::helper::system::thread::CircularQueue< T, StoragePolicy, ThreadAccessPolicy >::isEmpty. ◆ isFull(). template<class T , template< class U > class StoragePolicy, class ThreadAccessPolicy > . bool sofa::helper::system::thread::CircularQueue< T, StoragePolicy, ThreadAccessPolicy >::isFull. ◆ pop() [1/2]. template<class T , template< class U > class StoragePolicy, class ThreadAccessPolicy > . template<class OutputIterator > . unsigned sofa::helper::system::thread::CircularQueue< T, StoragePolicy, ThreadAccessPolicy >::pop ; (; OutputIterator ; out, . unsigned ; maxsize, . bool ; clear = true . ). ◆ pop() [2/2]. template<class T , template< class U > class StoragePolicy, class ThreadAccessPolicy > . bool sofa::helper::system::thread::CircularQueue< T, StoragePolicy, ThreadAccessPolicy >::pop ; (; T & ; item, . bool ; clear = true . ). ◆ push(). template<class T , template< class U > class StoragePolicy, class ThreadAccessPolicy > . bool sofa::helper::system::thread::CircularQueue< T, StoragePolicy, ThreadAccessPolicy >::push ; (; const T & ; item). ◆ size(). template<class T , template< class U > class StoragePolicy, class ThreadAccessPolicy > . unsigned sofa::helper::system::thread::CircularQueue< T, StoragePolicy, ThreadAccessPolicy >::size. ◆ skip(). template<class T , template< class U > class StoragePolicy, class ThreadAccessPolicy > . unsigned sofa::helper::system::thread::CircularQueue< T, StoragePolicy, ThreadAccessPolicy >::skip ; (; unsigned ; maxsize, . bool ; clear = true . ). sofahelpersystemthreadCircularQueue; Generated on Mon Nov 11 2024 03:31:03 f",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1system_1_1thread_1_1_circular_queue.html:2412,clear,clear,2412,api/master/sofa/html/classsofa_1_1helper_1_1system_1_1thread_1_1_circular_queue.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1system_1_1thread_1_1_circular_queue.html,1,['clear'],['clear']
Usability,"eal > . void sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::addToBaseMatrix ; (; BaseMatrix * ; matrix, . SReal ; factor, . Index ; offset . ); const. inline . add this EigenBaseSparseMatrix to a BaseMatrix at the offset and multiplied by factor . ◆ beginRow(). template<class TReal > . void sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::beginRow ; (; Index ; index). inline . ◆ choleskyDecompose(). template<class TReal > . bool sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::choleskyDecompose ; (; ). inline . Try to compute the LDLT decomposition, and return true if success. The matrix is unchanged. . ◆ choleskySolve(). template<class TReal > . void sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::choleskySolve ; (; VectorEigen & ; x, . const VectorEigen & ; b . ); const. inline . Solve Ax=b, where A is this matrix. WARNING: ldltDecompose() must be called first. x and b can be the same vector. . ◆ clear(). template<class TReal > . void sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::clear ; (; ). inlineoverridevirtual . Set all values to 0, by resizing to the same size. ; Implements sofa::linearalgebra::BaseMatrix. ◆ clearCol(). template<class TReal > . void sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::clearCol ; (; Index ; col). inlineoverridevirtual . Clears the all the entries of column imin to column imax-1. Not efficient ! ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearCols(). template<class TReal > . void sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::clearCols ; (; Index ; imin, . Index ; imax . ). inlineoverridevirtual . Set all the entries of column i and of row i to 0. Not efficient ! ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRow(). template<class TReal > . void sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::clearRow ; (; Index ; i). inlineoverridevirtual . Set all the entries of a row to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRowCol(). template<class TRe",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_base_sparse_matrix.html:19493,clear,clear,19493,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_base_sparse_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_base_sparse_matrix.html,1,['clear'],['clear']
Usability,"eal dt, core::MultiVecDerivId result=core::VecDerivId::velocity())sofa::simulation::common::MechanicalOperations; baseVector2MultiVector(const linearalgebra::BaseVector *src, core::MultiVecId dest, const sofa::core::behavior::MultiMatrixAccessor *matrix)sofa::simulation::common::MechanicalOperations; bFactsofa::simulation::common::MechanicalOperations; computeAcc(SReal t, core::MultiVecDerivId a, core::MultiVecCoordId x, core::MultiVecDerivId v)sofa::simulation::common::MechanicalOperations; computeContactAcc(SReal t, core::MultiVecDerivId a, core::MultiVecCoordId x, core::MultiVecDerivId v)sofa::simulation::common::MechanicalOperations; computeContactDf(core::MultiVecDerivId df)sofa::simulation::common::MechanicalOperations; computeContactForce(core::MultiVecDerivId result)sofa::simulation::common::MechanicalOperations; computeDf(core::MultiVecDerivId df, bool clear=true, bool accumulate=true)sofa::simulation::common::MechanicalOperations; computeDfV(core::MultiVecDerivId df, bool clear=true, bool accumulate=true)sofa::simulation::common::MechanicalOperations; computeEnergy(SReal &kineticEnergy, SReal &potentialEnergy)sofa::simulation::common::MechanicalOperations; computeForce(core::MultiVecDerivId result, bool clear=true, bool accumulate=true)sofa::simulation::common::MechanicalOperations; computeForce(SReal t, core::MultiVecDerivId f, core::MultiVecCoordId x, core::MultiVecDerivId v)sofa::simulation::common::MechanicalOperations; cparamssofa::simulation::common::MechanicalOperations; ctxsofa::simulation::common::MechanicalOperations; executeVisitorsofa::simulation::common::MechanicalOperationsprotected; getMatrixDimension(sofa::Size *const, sofa::Size *const, sofa::core::behavior::MultiMatrixAccessor *matrix=nullptr)sofa::simulation::common::MechanicalOperations; getMatrixDimension(sofa::core::behavior::MultiMatrixAccessor *matrix)sofa::simulation::common::MechanicalOperationsinline; hasShownMissingLinearSolverMapsofa::simulation::common::MechanicalOperationspro",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1common_1_1_mechanical_operations-members.html:1991,clear,clear,1991,api/master/sofa/html/classsofa_1_1simulation_1_1common_1_1_mechanical_operations-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1common_1_1_mechanical_operations-members.html,1,['clear'],['clear']
Usability,"eal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; beginEdit()sofa::gl::component::shader::OglAttribute< 1, GL_FLOAT, float >; bwdDraw(core::visual::VisualParams *) overridesofa::gl::component::shader::OglAttribute< 1, GL_FLOAT, float >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; DataType typedefsofa::gl::component::shader::OglAttribute< 1, GL_FLOAT, float >; disable()sofa::gl::component::shader::OglAttribute< 1, GL_FLOAT, float >; doInitVisual(const core::visual::VisualParams *vparams) overridesofa::gl::component::shader::OglAttribute< 1, GL_FLOAT, float >virtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; doUpdateVisual(const core::visual::Visu",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_attribute-members.html:3136,clear,clearLoggedMessages,3136,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_attribute-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_attribute-members.html,1,['clear'],['clearLoggedMessages']
Usability,"earalgebra::BaseMatrix. ◆ clear() [1/2]. template<typename TBlock , typename TPolicy = CRSMechanicalPolicy> . void sofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >::clear ; (; ). inlineoverridevirtual . Completely clear the matrix. ; Need implement clear to override BaseMatrix one. ; Implements sofa::linearalgebra::BaseMatrix. ◆ clear() [2/2]. template<typename TBlock , typename TPolicy = CRSMechanicalPolicy> . void sofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >::clear ; (; Index ; i, . Index ; j . ). inlineoverride . clear scalar at element i, j of matrix . ◆ clearCol(). template<typename TBlock , typename TPolicy = CRSMechanicalPolicy> . void sofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >::clearCol ; (; Index ; j). inlineoverride . Clear col scalar method. Clear this col in all row of matrix. ; Parameters. j: Col index considering size of matrix in scalar. . WarningIf you want to clear all value of a block, it is better to call clearColBlock . ◆ clearRow(). template<typename TBlock , typename TPolicy = CRSMechanicalPolicy> . void sofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >::clearRow ; (; Index ; i). inlineoverride . Clear row scalar method. Clear all col of this line. ; Parameters. i: Line index considering size of matrix in scalar. . WarningIf you want to clear all value of a block, it is better to call clearRowBlock . ◆ clearRowCol(). template<typename TBlock , typename TPolicy = CRSMechanicalPolicy> . void sofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >::clearRowCol ; (; Index ; i). inlineoverride . Clear both row i and column i in a square matrix. ; Parameters. i: Row and Col index considering size of matrix in scalar. . ◆ colSize(). template<typename TBlock , typename TPolicy = CRSMechanicalPolicy> . Index sofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >::colSize ; (; ); const. inlineoverrid",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical.html:49070,clear,clear,49070,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical.html,2,['clear'],"['clear', 'clearColBlock']"
Usability,"earalgebra::BaseMatrix::add. Adding values from a 6x6d matrix. This function may be overload to obtain better performances. . ◆ add() [8/9]. template<typename T > . void sofa::linearalgebra::BaseMatrix::add. Adding values from a 6x6f matrix. This function may be overload to obtain better performances. . ◆ add() [9/9]. template<typename T > . virtual void sofa::linearalgebra::BaseMatrix::add. Add v to the existing value of the element at row i, column j (using 0-based indices) . ◆ addEqual(). template<typename T > . template<class M > . void sofa::linearalgebra::DiagonalMatrix< T >::addEqual ; (; const M & ; m). inlineprotected . this += m . ◆ addTo(). template<typename T > . template<class Dest > . void sofa::linearalgebra::DiagonalMatrix< T >::addTo ; (; Dest * ; dest); const. inline . ◆ clear() [1/3]. template<typename T > . void sofa::linearalgebra::DiagonalMatrix< T >::clear ; (; ). inlineoverridevirtual . Reset all values to 0. ; Implements sofa::linearalgebra::BaseMatrix. ◆ clear() [2/3]. template<typename T > . void sofa::linearalgebra::DiagonalMatrix< T >::clear ; (; Index ; i). inline . ◆ clear() [3/3]. template<typename T > . void sofa::linearalgebra::DiagonalMatrix< T >::clear ; (; Index ; i, . Index ; j . ). inlineoverridevirtual . Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearCol(). template<typename T > . void sofa::linearalgebra::DiagonalMatrix< T >::clearCol ; (; Index ; j). inlineoverridevirtual . Reset the all values in column j to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRow(). template<typename T > . void sofa::linearalgebra::DiagonalMatrix< T >::clearRow ; (; Index ; i). inlineoverridevirtual . Reset all the values in row i to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRowCol(). template<typename T > . void sofa::linearalgebra::DiagonalMatrix< T >::clearRowCol ; (; Index ; i). inlineoverridevirtual . Reset the value of both row and column i to 0. ; Reimplemented from sofa::linearalgebra::Ba",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_diagonal_matrix.html:19736,clear,clear,19736,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_diagonal_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_diagonal_matrix.html,1,['clear'],['clear']
Usability,"earalgebra::BaseMatrixinline; blocCreate(Index i, Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; blocElements(Index i, Index j, T *buffer) constsofa::linearalgebra::BaseMatrixinline; blocGet(Index i, Index j) constsofa::linearalgebra::BaseMatrixinlinevirtual; blocGetW(Index i, Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; blocSet(Index i, Index j, const T *buffer)sofa::linearalgebra::BaseMatrixinline; bRowBegin(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowEnd(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowRange(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsBegin() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsEnd() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowSize() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsRange() constsofa::linearalgebra::BaseMatrixinlinevirtual; clear() overridesofa::core::behavior::AddToMatrixCompatMatrix< c >inlinevirtual; sofa::linearalgebra::BaseMatrix::clear(Index i, Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; clearCol(Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; clearCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRow(Index i)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowCol(Index i)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRows(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowsCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; cols(void) constsofa::linearalgebra::BaseMatrixinline; colSize() const overridesofa::core::behavior::AddToMatrixCompatMatrix< c >inlinevirtual; compatibilityMessagesofa::core::behavior::AddToMatrixCompatMatrix< c >static; componentsofa::core::behavior::AddToMatrixCompatMatrix< c >; compress()sofa::linearalgebra::BaseMatrixvirtual; createBlockAccessor(Index row, Index col, void *internalPtr=nullptr)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockAccessor(Index row, Index col, Index inte",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_add_to_matrix_compat_matrix-members.html:5096,clear,clear,5096,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_add_to_matrix_compat_matrix-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_add_to_matrix_compat_matrix-members.html,1,['clear'],['clear']
Usability,"earalgebra::BaseMatrixinlinevirtual; bRowsBegin() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsEnd() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowSize() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsRange() constsofa::linearalgebra::BaseMatrixinlinevirtual; BSIZE enum valuesofa::linearalgebra::BTDMatrix< N, T >; BTDMatrix()sofa::linearalgebra::BTDMatrix< N, T >; BTDMatrix(Index nbRow, Index nbCol)sofa::linearalgebra::BTDMatrix< N, T >; clear(Index i, Index j) overridesofa::linearalgebra::BTDMatrix< N, T >virtual; clear() overridesofa::linearalgebra::BTDMatrix< N, T >virtual; clearCol(Index j) overridesofa::linearalgebra::BTDMatrix< N, T >virtual; clearCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRow(Index i) overridesofa::linearalgebra::BTDMatrix< N, T >virtual; clearRowCol(Index i) overridesofa::linearalgebra::BTDMatrix< N, T >virtual; clearRows(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowsCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; cols(void) constsofa::linearalgebra::BaseMatrixinline; colSize(void) const overridesofa::linearalgebra::BTDMatrix< N, T >virtual; compress()sofa::linearalgebra::BaseMatrixvirtual; createBlockAccessor(Index row, Index col, void *internalPtr=nullptr)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockAccessor(Index row, Index col, Index internalData)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockConstAccessor(Index row, Index col, void *internalPtr=nullptr) constsofa::linearalgebra::BaseMatrixinlineprotected; createBlockConstAccessor(Index row, Index col, Index internalData) constsofa::linearalgebra::BaseMatrixinlineprotected; createColBlockConstIterator(Index row, void *internalPtr) constsofa::linearalgebra::BaseMatrixinlineprotected; createColBlockConstIterator(Index row, Index internalData) constsofa::linearalgebra::BaseMatrixinlineprotected; createRowBlockConstIterator(void *internalPtr) co",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_b_t_d_matrix-members.html:6156,clear,clearRowsCols,6156,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_b_t_d_matrix-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_b_t_d_matrix-members.html,1,['clear'],['clearRowsCols']
Usability,"earalgebra::BlockDiagonalMatrix< LC, T >inline; blocSet(Index i, Index j, const T *buffer)sofa::linearalgebra::BaseMatrixinline; bRowBegin(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowEnd(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowRange(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsBegin() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsEnd() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowSize() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsRange() constsofa::linearalgebra::BaseMatrixinlinevirtual; BSIZE enum valuesofa::linearalgebra::BlockDiagonalMatrix< LC, T >; category enum valuesofa::linearalgebra::BlockDiagonalMatrix< LC, T >; clear(Index i, Index j) overridesofa::linearalgebra::BlockDiagonalMatrix< LC, T >inlinevirtual; clear() overridesofa::linearalgebra::BlockDiagonalMatrix< LC, T >inlinevirtual; clearCol(Index j) overridesofa::linearalgebra::BlockDiagonalMatrix< LC, T >inlinevirtual; clearCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRow(Index i) overridesofa::linearalgebra::BlockDiagonalMatrix< LC, T >inlinevirtual; clearRowCol(Index i) overridesofa::linearalgebra::BlockDiagonalMatrix< LC, T >inlinevirtual; clearRows(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowsCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; colBSize(void) constsofa::linearalgebra::BlockDiagonalMatrix< LC, T >inline; cols(void) constsofa::linearalgebra::BaseMatrixinline; colSize(void) const overridesofa::linearalgebra::BlockDiagonalMatrix< LC, T >inlinevirtual; compress()sofa::linearalgebra::BaseMatrixvirtual; createBlockAccessor(Index row, Index col, void *internalPtr=nullptr)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockAccessor(Index row, Index col, Index internalData)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockConstAccessor(Index row, Index col, void *internalPtr=nullptr) constsof",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_diagonal_matrix-members.html:6554,clear,clearCols,6554,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_diagonal_matrix-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_diagonal_matrix-members.html,1,['clear'],['clearCols']
Usability,"earalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >; block(Index i, Index j) constsofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >inline; blockMultTranspose(const TBlock &blockA, const TBlock &blockB)sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >inlinestatic; BlockTranspose typedefsofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >; btempsofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >; category enum valuesofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >; check_matrix()sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >inline; check_matrix(Index nzmax, Index m, Index n, Index *a_p, Index *a_i, Block *a_x)sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >inlinestatic; clear()sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >inline; ClearByZerossofa::linearalgebra::CRSDefaultPolicystatic; clearColBlock(Index j)sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >inline; clearRowBlock(Index i)sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >inline; clearRowColBlock(Index i)sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >inline; colBSize() constsofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >inline; colsIndexsofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >; colsValuesofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >; compress()sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >inline; compressBtemp()sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >inlineprotected; compressCSR()sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >inlineprotected; CompressedRowSparseMatrixGeneric()sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >inline; CompressedRowSparseMatrixG",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_generic-members.html:4020,clear,clearColBlock,4020,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_generic-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_generic-members.html,1,['clear'],['clearColBlock']
Usability,"earsystem::LocalMatrixMaps< c, Real > Struct Template Reference . #include <MatrixLinearSystem.h>; Detailed Description; template<Contribution c, class Real>; struct sofa::component::linearsystem::LocalMatrixMaps< c, Real >; Data structure storing local matrix components created during the matrix assembly and associated to each component contributing to the global matrix . Public Attributes; std::map< ComponentType *, std::map< PairMechanicalStates, AssemblingMappedMatrixAccumulator< c, Real > * > > mappedLocalMatrix;  The local matrix (value) that has been created and associated to a mapped component (key) More...;  ; std::map< ComponentType *, std::shared_ptr< core::matrixaccumulator::IndexVerificationStrategy > > indexVerificationStrategy;  A verification strategy allowing to verify that the matrix indices provided are valid. More...;  ; std::map< ComponentType *, std::map< PairMechanicalStates, BaseAssemblingMatrixAccumulator< c > * > > componentLocalMatrix;  . Public Member Functions; void clear ();  . Attribute details. ◆ componentLocalMatrix. template<Contribution c, class Real > . std::map< ComponentType*, std::map<PairMechanicalStates, BaseAssemblingMatrixAccumulator<c>* > > sofa::component::linearsystem::LocalMatrixMaps< c, Real >::componentLocalMatrix. ◆ indexVerificationStrategy. template<Contribution c, class Real > . std::map< ComponentType*, std::shared_ptr<core::matrixaccumulator::IndexVerificationStrategy> > sofa::component::linearsystem::LocalMatrixMaps< c, Real >::indexVerificationStrategy. A verification strategy allowing to verify that the matrix indices provided are valid. . ◆ mappedLocalMatrix. template<Contribution c, class Real > . std::map< ComponentType*, std::map<PairMechanicalStates, AssemblingMappedMatrixAccumulator<c, Real>*> > sofa::component::linearsystem::LocalMatrixMaps< c, Real >::mappedLocalMatrix. The local matrix (value) that has been created and associated to a mapped component (key) . Function details. ◆ clear(). template<Cont",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_local_matrix_maps.html:1272,clear,clear,1272,api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_local_matrix_maps.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_local_matrix_maps.html,1,['clear'],['clear']
Usability,"ebra::BlockDiagonalMatrix< LC, T >::clear ; (; ). inlineoverridevirtual . Reset all values to 0. ; Implements sofa::linearalgebra::BaseMatrix. ◆ clear() [2/2]. template<std::size_t LC, typename T = SReal> . void sofa::linearalgebra::BlockDiagonalMatrix< LC, T >::clear ; (; Index ; i, . Index ; j . ). inlineoverridevirtual . Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearCol(). template<std::size_t LC, typename T = SReal> . void sofa::linearalgebra::BlockDiagonalMatrix< LC, T >::clearCol ; (; Index ; j). inlineoverridevirtual . Reset the all values in column j to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRow(). template<std::size_t LC, typename T = SReal> . void sofa::linearalgebra::BlockDiagonalMatrix< LC, T >::clearRow ; (; Index ; i). inlineoverridevirtual . Reset all the values in row i to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRowCol(). template<std::size_t LC, typename T = SReal> . void sofa::linearalgebra::BlockDiagonalMatrix< LC, T >::clearRowCol ; (; Index ; i). inlineoverridevirtual . Reset the value of both row and column i to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ colBSize(). template<std::size_t LC, typename T = SReal> . Index sofa::linearalgebra::BlockDiagonalMatrix< LC, T >::colBSize ; (; void ; ); const. inline . ◆ colSize(). template<std::size_t LC, typename T = SReal> . Index sofa::linearalgebra::BlockDiagonalMatrix< LC, T >::colSize ; (; void ; ); const. inlineoverridevirtual . Number of columns. ; Implements sofa::linearalgebra::BaseMatrix. ◆ element(). template<std::size_t LC, typename T = SReal> . SReal sofa::linearalgebra::BlockDiagonalMatrix< LC, T >::element ; (; Index ; i, . Index ; j . ); const. inlineoverridevirtual . Read the value of the element at row i, column j (using 0-based indices) ; Implements sofa::linearalgebra::BaseMatrix. ◆ invert(). template<std::size_t LC, typename T = SReal> . void sofa::linearalgebra::BlockDiagonalMatrix< LC, T >::invert ; (; ). ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_diagonal_matrix.html:19976,clear,clearRowCol,19976,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_diagonal_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_diagonal_matrix.html,1,['clear'],['clearRowCol']
Usability,"ec & getForce ();  ; const Vec & getForce () const;  ; void setForce (const Vec &v);  . Friends; std::ostream & operator<< (std::ostream &out, const SpatialVector &t);  write to an output stream More...;  ; std::istream & operator>> (std::istream &in, SpatialVector &t);  read from an input stream More...;  . Attribute details. ◆ freeVec. template<class TReal > . Vec sofa::type::SpatialVector< TReal >::freeVec { type::NOINIT }. ◆ lineVec. template<class TReal > . Vec sofa::type::SpatialVector< TReal >::lineVec { type::NOINIT }. Constructor details. ◆ SpatialVector() [1/2]. template<class TReal > . sofa::type::SpatialVector< TReal >::SpatialVector ; (; ). default . ◆ SpatialVector() [2/2]. template<class TReal > . sofa::type::SpatialVector< TReal >::SpatialVector ; (; const Vec & ; l, . const Vec & ; f . ). Parameters. lThe line vector: angular velocity, or force ; fThe free vector: linear velocity, or torque . Function details. ◆ clear(). template<class TReal > . void sofa::type::SpatialVector< TReal >::clear. ◆ cross(). template<class TReal > . SpatialVector< TReal > sofa::type::SpatialVector< TReal >::cross ; (; const SpatialVector< TReal > & ; v); const. Spatial cross product. . ◆ getAngularVelocity() [1/2]. template<class TReal > . Vec& sofa::type::SpatialVector< TReal >::getAngularVelocity ; (; ). inline . If the SpatialVector models a spatial velocity, then the angular velocity is the lineVec. Otherwise, the SpatialVector models a spatial force, and this method returns a force. . ◆ getAngularVelocity() [2/2]. template<class TReal > . const Vec& sofa::type::SpatialVector< TReal >::getAngularVelocity ; (; ); const. inline . ◆ getForce() [1/2]. template<class TReal > . Vec& sofa::type::SpatialVector< TReal >::getForce ; (; ). inline . If the SpatialVector models a spatial force, then the torque is the lineVec. Otherwise, the SpatialVector models a spatial velocity, and this method returns an angular velocity. . ◆ getForce() [2/2]. template<class TReal > . const Ve",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_spatial_vector.html:2794,clear,clear,2794,api/master/sofa/html/classsofa_1_1type_1_1_spatial_vector.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_spatial_vector.html,1,['clear'],['clear']
Usability,eckTopology(). bool sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer::checkTopology ; (; ); const. overridevirtual . Checks if the topology is coherent. ; Check if the shell arrays are coherent See alsom_hexahedron . m_edgesInHexahedron . m_quadsInHexahedron . m_hexahedraAroundVertex . m_hexahedraAroundEdge . m_hexahedraAroundQuad ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer. ◆ cleanHexahedronTopologyFromDirty(). void sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer::cleanHexahedronTopologyFromDirty ; (; ). protected . ◆ clear(). void sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer::clear ; (; ). overridevirtual . Procedural creation methods ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer.; Reimplemented in sofa::component::topology::container::dynamic::MultilevelHexahedronSetTopologyContainer. ◆ clearEdgesInHexahedron(). void sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer::clearEdgesInHexahedron ; (; ). protected . ◆ clearHexahedra(). void sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer::clearHexahedra ; (; ). protected . ◆ clearHexahedraAroundEdge(). void sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer::clearHexahedraAroundEdge ; (; ). protected . ◆ clearHexahedraAroundQuad(). void sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer::clearHexahedraAroundQuad ; (; ). protected . ◆ clearHexahedraAroundVertex(). void sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer::clearHexahedraAroundVertex ; (; ). protected . ◆ clearQuadsInHexahedron(). void sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer::clearQuadsInHexahedron ; (; ). protected . ◆ createEdgeSetArray(). void sofa::component::topology::container::dynamic::Hexahed,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_topology_container.html:49142,clear,clearEdgesInHexahedron,49142,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_topology_container.html,1,['clear'],['clearEdgesInHexahedron']
Usability,"econstexprnoexcept . ◆ MatSym() [2/5]. template<sofa::Size D, class real = SReal> . constexpr sofa::type::MatSym< D, real >::MatSym ; (; NoInit ; ). inlineexplicitconstexprnoexcept . ◆ MatSym() [3/5]. template<sofa::Size D, class real = SReal> . template<sofa::Size TD = D, typename = std::enable_if_t<TD == 3>> . constexpr sofa::type::MatSym< D, real >::MatSym ; (; const real & ; v1, . const real & ; v2, . const real & ; v3, . const real & ; v4, . const real & ; v5, . const real & ; v6 . ). inlineconstexpr . Constructor from 6 elements. . ◆ MatSym() [4/5]. template<sofa::Size D, class real = SReal> . constexpr sofa::type::MatSym< D, real >::MatSym ; (; const sofa::Size ; sizeM, . const real & ; v . ). inlineconstexpr . Constructor from an element. . ◆ MatSym() [5/5]. template<sofa::Size D, class real = SReal> . template<typename real2 > . sofa::type::MatSym< D, real >::MatSym ; (; const MatSym< D, real2 > & ; m). inlineexplicit . Constructor from another matrix. . Function details. ◆ clear(). template<sofa::Size D, class real = SReal> . void sofa::type::MatSym< D, real >::clear ; (; ). inline . Sets each element to 0. . ◆ fill(). template<sofa::Size D, class real = SReal> . void sofa::type::MatSym< D, real >::fill ; (; real ; r). inline . Sets each element to r. . ◆ getVoigt(). template<sofa::Size D, class real = SReal> . template<sofa::Size TD = D, typename = std::enable_if_t<TD == 3 || TD == 2>> . Vec<NumberStoredValues, real> sofa::type::MatSym< D, real >::getVoigt ; (; ); const. inline . convert to Voigt notation (supported only for D == 2 and D == 3) . ◆ identity(). template<sofa::Size D, class real = SReal> . constexpr void sofa::type::MatSym< D, real >::identity ; (; ). inlineconstexpr . Set matrix to identity. . ◆ invert(). template<sofa::Size D, class real = SReal> . bool sofa::type::MatSym< D, real >::invert ; (; const MatSym< D, real > & ; m). inline . Invert matrix m. . ◆ Mat2Sym(). template<sofa::Size D, class real = SReal> . static void sofa::type::MatSy",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_mat_sym.html:16116,clear,clear,16116,api/master/sofa/html/classsofa_1_1type_1_1_mat_sym.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_mat_sym.html,1,['clear'],['clear']
Usability,"ect()sofa::core::objectmodel::BaseObjectprotected; BaseProjectiveConstraintSet()sofa::core::behavior::BaseProjectiveConstraintSetinlineprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ProjectiveConstraintSet< DataTypes >inlinestatic; sofa::core::behavior::BaseProjectiveConstraintSet::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearConstraints()sofa::component::constraint::projective::PointProjectiveConstraint< DataTypes >; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; Coord typedefsofa::component::constraint::projective::PointProjectiveConstraint< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_drawSizesofa::component::constraint::projective::PointProjectiveConstraint< DataTypes >; d_fixAllsofa::component::constraint::projective::PointProjectiveConstraint< DataTypes >; d_indicessofa::component::constraint::projective::PointProjectiveConstraint< DataTypes >; d_messageLogCountsofa::core::objectmodel::Basemutable; d_pointsofa::component::constraint::projective::PointProjectiveConstraint< DataTypes >; datasofa::component::c",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_point_projective_constraint-members.html:3108,clear,clearLoggedMessages,3108,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_point_projective_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_point_projective_constraint-members.html,1,['clear'],['clearLoggedMessages']
Usability,"ect()sofa::core::objectmodel::BaseObjectprotected; baseRead(ConstVecId v) const =0sofa::core::BaseStatepure virtual; BaseState()sofa::core::BaseStateinlineprotected; BaseType typedefsofa::core::objectmodel::Base; baseWrite(VecId v)=0sofa::core::BaseStatepure virtual; beginIntegration(SReal)sofa::core::behavior::BaseMechanicalStateinlinevirtual; buildIdentityBlocksInJacobian(const sofa::type::vector< unsigned int > &list_n, core::MatrixDerivId &mID)=0sofa::core::behavior::BaseMechanicalStatepure virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; compareVec(ConstVecId v, std::istream &in)=0sofa::core::behavior::BaseMechanicalStatepure virtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; constraintBlocks(const std::list< unsigned int > &) constsofa::core::behavior::BaseMechanicalStateinlinevirtual; copyFromBaseVector(VecId dest, const linearalgebra::BaseVector *src, unsigned int &offset)=0sofa::core::behavior::BaseMechanicalStatepure virtual; copyFromBuffer(VecId dst, const SReal *src, unsigned int n)=0sofa::core::behavior::BaseMechanicalStatepure virtual; copyToBaseMatrix(linearalgebra::BaseMatrix *dest, ConstMatrixDerivId src, unsigned int &offset)=0sofa::core::behavior::BaseMechanicalStatepure virtual; copyToBaseVector(linearalgebra::BaseVector *dest, ConstVecId src, unsigned int &offset)=0sofa::core::behavior::BaseMechanicalStatepure virtual; copyToBuffer(SReal *dst, ConstVecId src, unsigned int n) const =0sofa::core::behav",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_mechanical_state-members.html:3675,clear,clearLoggedMessages,3675,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_mechanical_state-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_mechanical_state-members.html,1,['clear'],['clearLoggedMessages']
Usability,"ect. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::core::State< DataTypes >;  SOFA_CLASS (SOFA_TEMPLATE(State, DataTypes), BaseState);  ; sofa::type::TBoundingBox< Real > computeBBox () const;  Compute the bounding box independently from the visibility parameters. More...;  ; void computeBBox (const core::ExecParams *params, bool onlyVisible=false) override;  ; objectmodel::BaseData * baseWrite (VecId v) override;  ; const objectmodel::BaseData * baseRead (ConstVecId v) const override;  ; ReadVecCoord readPositions () const;  ; WriteVecCoord writePositions ();  ; WriteOnlyVecCoord writeOnlyPositions ();  ; ReadVecCoord readRestPositions () const;  ; WriteVecCoord writeRestPositions ();  ; WriteOnlyVecCoord writeOnlyRestPositions ();  ; ReadVecDeriv readVelocities () const;  ; WriteVecDeriv writeVelocities ();  ; WriteOnlyVecDeriv writeOnlyVelocities ();  ; ReadVecDeriv readForces () const;  ; WriteVecDeriv writeForces ();  ; WriteOnlyVecDeriv writeOnlyForces ();  ; ReadVecDeriv readDx () const;  ; WriteVecDeriv writeDx ();  ; WriteOnlyVecDeriv writeOnlyDx ();  ; ReadVecDeriv readNormals () const;  ; const AccumulationVecId< DataTypes, V_DERIV, V_READ > & readTotalForces () const;  Returns a proxy objects offering simplified access to elements of the cumulative sum of all force containers. More...;  ; void addToTotalForces (core::ConstVecDerivId forceId) override;  The provided VecDerivId will contribute to the sum of all force containers. More...;  ; void removeFromTotalForces (core::ConstVecDerivId forceId) override;  . Protected Member Functions;  MechanicalObject ();  ; virtual ~MechanicalObject ();  ; template<core::VecType vtype> ; void vAvailImpl (core::TVecId< vtype, core::V_WRITE > &v, sofa::type::vector< Data< core::StateVecType_t< DataTypes, vtype > >",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1statecontainer_1_1_mechanical_object.html:28788,simpl,simplified,28788,api/master/sofa/html/classsofa_1_1component_1_1statecontainer_1_1_mechanical_object.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1statecontainer_1_1_mechanical_object.html,1,['simpl'],['simplified']
Usability,"ectinlineprotected; BaseType typedefsofa::core::objectmodel::Base; beginChange() const overridesofa::core::topology::TopologyContainervirtual; beginStateChange() const overridesofa::core::topology::TopologyContainervirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkConnexity()sofa::core::topology::BaseMeshTopologyinlinevirtual; checkTopology() const overridesofa::component::topology::container::dynamic::PointSetTopologyContainervirtual; cleanPointTopologyFromDirty()sofa::component::topology::container::dynamic::PointSetTopologyContainerprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear() overridesofa::component::topology::container::dynamic::PointSetTopologyContainervirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_checkTopologysofa::component::topology::container::dynamic::PointSetTopologyContainer; d_componentStatesofa::core::objectmodel::Base; d_initPointssofa::component::topology::container::dynamic::PointSetTopologyContainer; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; Edge typedefsofa::core::topology::Topology; EdgeID typedefsof",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_container-members.html:3740,clear,clear,3740,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_container-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_container-members.html,1,['clear'],['clear']
Usability,"ectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; BaseVTKDataIO()sofa::component::io::mesh::basevtkreader::BaseVTKReader::BaseVTKDataIOinline; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createSofaData() overridesofa::component::io::mesh::basevtkreader::BaseVTKReader::VTKDataIO< T >virtual; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; datasofa::component::io::mesh::basevtkreader::BaseVTKReader::VTKDataIO< T >; dataSizesofa::component::io::mesh::basevtkreader::BaseVTKReader::BaseVTKDataIO; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseO",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1basevtkreader_1_1_base_v_t_k_reader_1_1_v_t_k_data_i_o-members.html:2050,clear,clearLoggedMessages,2050,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1basevtkreader_1_1_base_v_t_k_reader_1_1_v_t_k_data_i_o-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1basevtkreader_1_1_base_v_t_k_reader_1_1_v_t_k_data_i_o-members.html,1,['clear'],['clearLoggedMessages']
Usability,"ectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; BaseVTKDataIO()sofa::component::io::mesh::basevtkreader::BaseVTKReader::BaseVTKDataIOinline; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createSofaData()=0sofa::component::io::mesh::basevtkreader::BaseVTKReader::BaseVTKDataIOpure virtual; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; dataSizesofa::component::io::mesh::basevtkreader::BaseVTKReader::BaseVTKDataIO; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::B",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1basevtkreader_1_1_base_v_t_k_reader_1_1_base_v_t_k_data_i_o-members.html:2048,clear,clearLoggedMessages,2048,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1basevtkreader_1_1_base_v_t_k_reader_1_1_base_v_t_k_data_i_o-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1basevtkreader_1_1_base_v_t_k_reader_1_1_base_v_t_k_data_i_o-members.html,1,['clear'],['clearLoggedMessages']
Usability,"ectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup() overridesofa::component::collision::response::contact::FrictionContact< TCollisionModel1, TCollisionModel2, ResponseDataTypes >virtual; clearLoggedMessages() constsofa::core::objectmodel::Base; CollisionElement1 typedefsofa::component::collision::response::contact::FrictionContact< TCollisionModel1, TCollisionModel2, ResponseDataTypes >; CollisionElement2 typedefsofa::component::collision::response::contact::FrictionContact< TCollisionModel1, TCollisionModel2, ResponseDataTypes >; CollisionModel1 typedefsofa::component::collision::response::contact::FrictionContact< TCollisionModel1, TCollisionModel2, ResponseDataTypes >; CollisionModel2 typedefsofa::component::collision::response::contact::FrictionContact< TCollisionModel1, TCollisionModel2, ResponseDataTypes >; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; Contact()sofa::core::collision::Contactinlineprotected; ContactIdentifier()sofa::component::collision::response::contact::ContactIdentifier; contactssofa::component::collision::response::contact::FrictionContact< TCollisionModel1, TCollisionModel2, ResponseDataTypes >prote",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_friction_contact-members.html:2300,clear,clearLoggedMessages,2300,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_friction_contact-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_friction_contact-members.html,1,['clear'],['clearLoggedMessages']
Usability,"ectmodel::Base; buildDampingMatrix(core::behavior::DampingMatrix *) finalsofa::component::collision::response::contact::PenalityContactForceField< DataTypes >virtual; buildStiffnessMatrix(core::behavior::StiffnessMatrix *matrix) overridesofa::component::collision::response::contact::PenalityContactForceField< DataTypes >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::PairInteractionForceField< DataTypes >inlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear(sofa::Size reserve=0)sofa::component::collision::response::contact::PenalityContactForceField< DataTypes >; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; Contact typedefsofa::component::collision::response::contact::PenalityContactForceField< DataTypes >; contactssofa::component::collision::response::contact::PenalityContactForceField< DataTypes >; Coord typedefsofa::component::collision::response::contact::PenalityContactForceField< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::core::behavior::PairInteractionForceField< DataTypes >inlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; DataTypes typedefsofa::core::behavior::PairInteractionForceField< DataTypes >; DataTypes1 typedefsofa::component::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_penality_contact_force_field-members.html:4499,clear,clearLoggedMessages,4499,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_penality_contact_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_penality_contact_force_field-members.html,1,['clear'],['clearLoggedMessages']
Usability,"ectmodel::Base; buildDampingMatrix(core::behavior::DampingMatrix *) overridesofa::component::diffusion::TetrahedronDiffusionFEMForceField< DataTypes >inlinevirtual; buildStiffnessMatrix(core::behavior::StiffnessMatrix *matrix) overridesofa::component::diffusion::TetrahedronDiffusionFEMForceField< DataTypes >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ForceField< DataTypes >inlinestatic; sofa::core::behavior::BaseForceField::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; computeEdgeDiffusionCoefficient()sofa::component::diffusion::TetrahedronDiffusionFEMForceField< DataTypes >protected; Coord typedefsofa::component::diffusion::TetrahedronDiffusionFEMForceField< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_1DDiffusionsofa::component::diffusion::TetrahedronDiffusionFEMForceField< DataTypes >; d_componentStatesofa::core::objectmodel::Base; d_constantDiffusionCoefficientsofa::component::diffusion::TetrahedronDiffusionFEMForceField< DataTypes >; d_drawConducsofa::component::diffusion::TetrahedronDiffusionFEMForceField< DataTypes >; d_messageLogCountsofa::core::objectmode",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1diffusion_1_1_tetrahedron_diffusion_f_e_m_force_field-members.html:4772,clear,clearLoggedMessages,4772,api/master/sofa/html/classsofa_1_1component_1_1diffusion_1_1_tetrahedron_diffusion_f_e_m_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1diffusion_1_1_tetrahedron_diffusion_f_e_m_force_field-members.html,1,['clear'],['clearLoggedMessages']
Usability,"ectmodel::Base; buildGeometricStiffnessMatrix(sofa::core::GeometricStiffnessMatrix *matrices) overridesofa::component::mapping::nonlinear::DistanceMultiMapping< TIn, TOut >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::core::MultiMapping< TIn, TOut >inlinestatic; sofa::core::BaseMapping::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkLinearSolverSymmetry(const core::MechanicalParams *mparams) constsofa::component::mapping::nonlinear::NonLinearMappingData< true >protected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeAccFromMapping(const MechanicalParams *mparams, MultiVecDerivId outAcc, ConstMultiVecDerivId inVel, ConstMultiVecDerivId inAcc) overridesofa::core::MultiMapping< TIn, TOut >inlinevirtual; computeAccFromMapping(const MechanicalParams *, const type::vector< OutDataVecDeriv * > &, const type::vector< const InDataVecDeriv * > &, const type::vector< const InDataVecDeriv * > &)sofa::core::MultiMapping< TIn, TOut >inlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeCoordPositionDifference(Direction &r, const InCoord &a, const InCoord &b)sofa::component::mapping::nonlinear::DistanceMultiMapping< TIn, TOut >protected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::core::MultiMap",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_distance_multi_mapping-members.html:7284,clear,clearLoggedMessages,7284,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_distance_multi_mapping-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_distance_multi_mapping-members.html,1,['clear'],['clearLoggedMessages']
Usability,"ectmodel::BaseObjectprotected; BaseTopologyObject()sofa::core::topology::BaseTopologyObjectinlineprotected; BaseType typedefsofa::core::objectmodel::Base; beginChange() const overridesofa::core::topology::TopologyContainervirtual; beginStateChange() const overridesofa::core::topology::TopologyContainervirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkConnexity()sofa::core::topology::BaseMeshTopologyinlinevirtual; checkTopology() constsofa::core::topology::BaseMeshTopologyinlinevirtual; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear()sofa::core::topology::BaseMeshTopologyvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; Edge typedefsofa::core::topology::Topology; EdgeID typedefsofa::core::topology::Topology; EdgesAroundVertex typedefsofa::core::topology::BaseMeshTopology; EdgesInHexahedron typedefsofa::core::topology::BaseMeshTopology; EdgesInQuad typedefsofa::core::topology::BaseMeshTopology; EdgesInTetrahedron typedefsofa::core::topology::BaseMeshTopol",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_container-members.html:3349,clear,clearLoggedMessages,3349,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_container-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_container-members.html,1,['clear'],['clearLoggedMessages']
Usability,"ector >inlinevirtual; associateLocalMatrixToComponents(const core::MechanicalParams *) overridesofa::component::linearsystem::MatrixFreeSystem< TMatrix, TVector >inlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseMatrixLinearSystem()sofa::core::behavior::BaseMatrixLinearSystemprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; buildSystemMatrix(const core::MechanicalParams *mparams)sofa::core::behavior::BaseMatrixLinearSystem; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearSystem()sofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >virtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; copyLocalVectorToGlobalVector(core::MultiVecDerivId v, TVector *globalVector)sofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >protected; copyLocalVectorToGlobalVector(core::MultiVecDerivId v, GraphScatteredVector *globalVector)sofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >protected; copyLocalVectorToGlobalVector(core::MultiVecDerivId v, GraphScatteredVector *globalVector)sofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >protected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinesta",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_matrix_free_system-members.html:2530,clear,clearLoggedMessages,2530,api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_matrix_free_system-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_matrix_free_system-members.html,1,['clear'],['clearLoggedMessages']
Usability,"ectprotected; BaseType typedefsofa::core::objectmodel::Base; buildDampingMatrix(core::behavior::DampingMatrix *) finalsofa::component::solidmechanics::spring::JointSpringForceField< DataTypes >virtual; buildStiffnessMatrix(StiffnessMatrix *matrix)sofa::core::behavior::BaseForceFieldvirtual; bwdInit() overridesofa::component::solidmechanics::spring::JointSpringForceField< DataTypes >virtual; canCreate(T *obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::PairInteractionForceField< DataTypes >inlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear(sofa::Size reserve=0)sofa::component::solidmechanics::spring::JointSpringForceField< DataTypes >; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool) overridesofa::component::solidmechanics::spring::JointSpringForceField< DataTypes >virtual; Coord typedefsofa::component::solidmechanics::spring::JointSpringForceField< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::core::behavior::PairInteractionForceField< DataTypes >inlinestatic; d_componentStatesofa::core::objectmodel::Base; d_infilenamesofa::component::solidmechanics::spring::JointSpringForceField< DataTypes >; d_messageLogCountsofa::core::objectmodel::Basemutable; d_outfilenamesofa::component::solidmechanics::spring::JointSpringForceField< DataTypes >; d_periodsofa::component::solidmechanics::spring::JointSpringForceField< DataTypes >; d_reinitsofa::component::solidmechanics::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_joint_spring_force_field-members.html:4934,clear,clearLoggedMessages,4934,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_joint_spring_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_joint_spring_force_field-members.html,1,['clear'],['clearLoggedMessages']
Usability,"ectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::component::engine::select::ValuesFromPositions< DataTypes >inlinestatic; sofa::core::DataEngine::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanDirty(const core::ExecParams *params=nullptr)sofa::core::DataTrackerDDGNodevirtual; sofa::core::objectmodel::DDGNode::cleanDirty()sofa::core::objectmodel::DDGNode; cleanDirtyOutputsOfInputs()sofa::core::objectmodel::DDGNodeprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; Coord typedefsofa::component::engine::select::ValuesFromPositions< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; CPos typedefsofa::component::engine::select::ValuesFromPositions< DataTypes >; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; DataEngine()sofa::core::DataEngineprotected; DataTrackerDDGNode()sofa::core::DataTrackerDDGNodeinline; DDGLinkContainer typedefsofa::core::objectmodel::DDGNode; DDGLinkIterator typedefsofa::core::objectmodel::DDGNode; DDGNode()sofa::core::objectmodel::DDGNode; delInput(DDGNode *n)sofa::core::objectmodel::DDGNode; delOutput(DDGNode *n)sofa::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_values_from_positions-members.html:2917,clear,clearLoggedMessages,2917,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_values_from_positions-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_values_from_positions-members.html,1,['clear'],['clearLoggedMessages']
Usability,"ed by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ groups. sofa::type::vector<core::objectmodel::BaseContext::SPtr> sofa::core::collision::CollisionGroupManager::groups. protected . integration groups . ◆ storedGroups. std::map<Instance,sofa::type::vector<core::objectmodel::BaseContext::SPtr> > sofa::core::collision::CollisionGroupManager::storedGroups. protected . Constructor details. ◆ ~CollisionGroupManager(). sofa::core::collision::CollisionGroupManager::~CollisionGroupManager ; (; ). inlineoverrideprotected . Destructor. . Function details. ◆ changeInstance(). void sofa::core::collision::CollisionGroupManager::changeInstance ; (; Instance ; inst). inlineoverrideprotectedvirtual . Implements sofa::core::collision::CollisionAlgorithm. ◆ clearGroups(). virtual void sofa::core::collision::CollisionGroupManager::clearGroups ; (; objectmodel::BaseContext * ; scene). pure virtual . Clear the integration groups. . ◆ createGroups(). virtual void sofa::core::collision::CollisionGroupManager::createGroups ; (; objectmodel::BaseContext * ; scene, . const sofa::type::vector< Contact::SPtr > & ; contacts . ). pure virtual . Create the integration groups. . ◆ getGroups(). virtual const sofa::type::vector<objectmodel::BaseContext::SPtr>& sofa::core::collision::CollisionGroupManager::getGroups ; (; ). inlinevirtual . Get the integration groups. . ◆ SOFA_ABSTRACT_CLASS(). sofa::core::collision::CollisionGroupManager::SOFA_ABSTRACT_CLASS ; (; CollisionGroupManager ; , . CollisionAlgorithm ;  . ). sofacorecollisionCollisionGroupManager; Generated on Mon Nov 11 2024 03:15:46 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_collision_group_manager.html:15253,clear,clearGroups,15253,api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_collision_group_manager.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_collision_group_manager.html,2,['clear'],['clearGroups']
Usability,"ed by factor . ◆ beginRow(). template<class TReal > . void sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::beginRow ; (; Index ; index). inline . ◆ choleskyDecompose(). template<class TReal > . bool sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::choleskyDecompose ; (; ). inline . Try to compute the LDLT decomposition, and return true if success. The matrix is unchanged. . ◆ choleskySolve(). template<class TReal > . void sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::choleskySolve ; (; VectorEigen & ; x, . const VectorEigen & ; b . ); const. inline . Solve Ax=b, where A is this matrix. WARNING: ldltDecompose() must be called first. x and b can be the same vector. . ◆ clear(). template<class TReal > . void sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::clear ; (; ). inlineoverridevirtual . Set all values to 0, by resizing to the same size. ; Implements sofa::linearalgebra::BaseMatrix. ◆ clearCol(). template<class TReal > . void sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::clearCol ; (; Index ; col). inlineoverridevirtual . Clears the all the entries of column imin to column imax-1. Not efficient ! ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearCols(). template<class TReal > . void sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::clearCols ; (; Index ; imin, . Index ; imax . ). inlineoverridevirtual . Set all the entries of column i and of row i to 0. Not efficient ! ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRow(). template<class TReal > . void sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::clearRow ; (; Index ; i). inlineoverridevirtual . Set all the entries of a row to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRowCol(). template<class TReal > . void sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::clearRowCol ; (; Index ; i). inlineoverridevirtual . Clears all the entries of rows imin to imax-1 and columns imin to imax-1. ; Reimplemented from sofa::linearalgebra::BaseM",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_base_sparse_matrix.html:19725,clear,clearCol,19725,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_base_sparse_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_base_sparse_matrix.html,1,['clear'],['clearCol']
Usability,"ed from sofa::core::objectmodel::BaseLink; unsigned int m_flags;  ; std::string m_name;  ; std::string m_help;  ; int m_counter;  Number of changes since creation. More...;  . Public Member Functions;  MultiLink ();  ;  MultiLink (const BaseLink::InitLink< OwnerType > &init);  ;  MultiLink (const BaseLink::InitLink< OwnerType > &init, DestPtr val);  ; virtual ~MultiLink ();  ; void setValidator (ValidatorFn fn);  ; DestType * get (std::size_t index) const;  ; DestType * operator[] (std::size_t index) const;  ;  Public Member Functions inherited from sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags|BaseLink::FLAG_MULTILINK >;  TLink ();  ;  TLink (const InitLink< OwnerType > &init);  ;  ~TLink () override;  ; size_t size () const;  ; bool empty () const;  ; const Container & getValue () const;  ; const_iterator begin () const;  ; const_iterator end () const;  ; const_reverse_iterator rbegin () const;  ; const_reverse_iterator rend () const;  ; void clear ();  ; bool addBegin (DestPtr v);  ; bool add (DestPtr v);  ; bool add (DestPtr v, const std::string &path);  ; bool addPath (const std::string &path);  ; bool remove (DestPtr v);  ; bool removeAt (std::size_t index);  ; bool removePath (const std::string &path);  ; const BaseClass * getDestClass () const override;  ; const BaseClass * getOwnerClass () const override;  ; size_t getSize () const override;  ; sofa::core::objectmodel::Base * getOwnerBase () const override;  ; void setOwner (OwnerType *owner);  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseLink;  BaseLink (LinkFlags flags);  ;  BaseLink (const BaseInitLink &init, LinkFlags flags);  ; virtual ~BaseLink ();  ; const std::string & getName () const;  ; void setName (const std::string &name);  ; const std::string & getHelp () const;  Get help message. More...;  ; void setHelp (const std::string &val);  Set help message. More...;  ; void setFlag (LinkFlagsEnum flag, bool b);  Set one of the flags. More...;  ; bool getFlag (",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_multi_link.html:2106,clear,clear,2106,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_multi_link.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_multi_link.html,1,['clear'],['clear']
Usability,"ed from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::core::behavior::SingleStateAccessor< TDataTypes >; SingleLink< SingleStateAccessor< TDataTypes >, MechanicalState< TDataTypes >, BaseLink::FLAG_STRONGLINK > mstate;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(PartialLinearMovementProjectiveConstraint, TDataTypes), SOFA_TEMPLATE(sofa::core::behavior::ProjectiveConstraintSet, TDataTypes));  ; void clearIndices ();  methods to add/remove some indices, keyTimes, keyMovement More...;  ; void addIndex (Index index);  ; void removeIndex (Index index);  ; void clearKeyMovements ();  ; void addKeyMovement (Real time, Deriv movement);  Add a new key movement. More...;  ; void init () override;  – Constraint interface More...;  ; void reset () override;  Reset to initial state. More...;  ; void projectResponse (const core::MechanicalParams *mparams, DataVecDeriv &resData) override;  ; void projectVelocity (const core::MechanicalParams *mparams, DataVecDeriv &vData) override;  ; void projectPosition (const core::MechanicalParams *mparams, DataVecCoord &xData) override;  ; void projectJacobianMatrix (const core::MechanicalParams *mparams, DataMatrixDeriv &cData) override;  ; void applyConstraint (const core::MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix) override;  Project the global Mechanical Matr",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_partial_linear_movement_projective_constraint.html:6929,clear,clearIndices,6929,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_partial_linear_movement_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_partial_linear_movement_projective_constraint.html,1,['clear'],['clearIndices']
Usability,"ed object (including the node name). More...;  ; void SOFA_SIMPLEAPI_API dumpScene (NodeSPtr root);  ; template<class T > ; std::string str (const T &t);  . Function Documentation. ◆ cleanup(). SOFA_SIMPLEAPI_API void sofa::simpleapi::cleanup ; (; ). Clean up the resources used by the SofaSimulationGraph library, as well as its dependencies. . ◆ createChild() [1/4]. Node::SPtr sofa::simpleapi::createChild ; (; Node::SPtr ; node, . BaseObjectDescription & ; desc . ). ◆ createChild() [2/4]. Node::SPtr sofa::simpleapi::createChild ; (; Node::SPtr ; node, . const std::string & ; name, . const std::map< std::string, std::string > & ; params . ). ◆ createChild() [3/4]. NodeSPtr SOFA_SIMPLEAPI_API sofa::simpleapi::createChild ; (; NodeSPtr ; node, . BaseObjectDescription & ; desc . ). create a child to the provided node. The parameter ""params"" is for passing specific data argument to the created object (including the node name). . ◆ createChild() [4/4]. NodeSPtr SOFA_SIMPLEAPI_API sofa::simpleapi::createChild ; (; NodeSPtr ; node, . const std::string & ; name, . const std::map< std::string, std::string > & ; params = std::map< std::string, std::string >{} . ). create a child to the provided nodeof given name. The parameter ""params"" is for passing specific data argument to the created object. . ◆ createNode(). NodeSPtr SOFA_SIMPLEAPI_API sofa::simpleapi::createNode ; (; const std::string & ; name). create a child to the provided node. The parameter ""params"" is for passing specific data argument to the created object (including the node name). . ◆ createObject() [1/4]. BaseObject::SPtr sofa::simpleapi::createObject ; (; Node::SPtr ; parent, . BaseObjectDescription & ; desc . ). ◆ createObject() [2/4]. BaseObject::SPtr sofa::simpleapi::createObject ; (; Node::SPtr ; parent, . const std::string & ; type, . const std::map< std::string, std::string > & ; params . ). ◆ createObject() [3/4]. sofa::core::sptr<BaseObject> SOFA_SIMPLEAPI_API sofa::simpleapi::createObject ; (; NodeSPtr",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simpleapi.html:3907,simpl,simpleapi,3907,api/master/sofa/html/namespacesofa_1_1simpleapi.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simpleapi.html,1,['simpl'],['simpleapi']
Usability,"ed; BaseForceField()sofa::core::behavior::BaseForceFieldprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; buildDampingMatrix(core::behavior::DampingMatrix *) finalsofa::component::solidmechanics::spring::JointSpringForceField< DataTypes >virtual; buildStiffnessMatrix(StiffnessMatrix *matrix)sofa::core::behavior::BaseForceFieldvirtual; bwdInit() overridesofa::component::solidmechanics::spring::JointSpringForceField< DataTypes >virtual; canCreate(T *obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::PairInteractionForceField< DataTypes >inlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear(sofa::Size reserve=0)sofa::component::solidmechanics::spring::JointSpringForceField< DataTypes >; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool) overridesofa::component::solidmechanics::spring::JointSpringForceField< DataTypes >virtual; Coord typedefsofa::component::solidmechanics::spring::JointSpringForceField< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::core::behavior::PairInteractionForceField< DataTypes >inlinestatic; d_componentStatesofa::core::objectmodel::Base; d_infilenamesofa::component::solidmechanics::spring::JointSpringForceField< DataTypes >; d_messageLogCountsofa::core::objectmodel::Basemutable; d_outfilenamesofa::component::solidmechanics::spring::JointSpringForceField< DataTypes >; d_periodsofa::c",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_joint_spring_force_field-members.html:4830,clear,clear,4830,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_joint_spring_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_joint_spring_force_field-members.html,1,['clear'],['clear']
Usability,"ed; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; begin()sofa::core::CollisionModelinline; bMovingsofa::core::CollisionModelprotected; bSelfCollisionsofa::core::CollisionModelprotected; bSimulatedsofa::core::CollisionModelprotected; bwdInit() overridesofa::core::CollisionModelvirtual; canCollideWith(CollisionModel *model)sofa::core::CollisionModelvirtual; canCollideWithElement(Index, CollisionModel *, Index)sofa::core::CollisionModelinlinevirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; CAPSULE_TYPE enum valuesofa::core::CollisionModel; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; CollisionModel()sofa::core::CollisionModelprotected; colorsofa::core::CollisionModelprotected; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeBoundingTree(int maxDepth) overridesofa::component::collision::geometry::RayCollisionModelvirtual; computeContinuousBoundingTree(SReal, int maxDepth=0)sofa::core::CollisionModelinlinevirtual; contactFrictionsofa::core::CollisionModelprotected; contactResponsesofa::core::CollisionModelprotected; contactRestitutionsofa::core::CollisionModelprotected; contactssofa::component::collision::geometry::RayCollisionModelprotected; contactStiffnesssofa::core::CollisionModelprotected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createPrevious()sofa::c",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_ray_collision_model-members.html:2858,clear,clearLoggedMessages,2858,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_ray_collision_model-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_ray_collision_model-members.html,1,['clear'],['clearLoggedMessages']
Usability,"ed; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; begin()sofa::core::CollisionModelinline; bMovingsofa::core::CollisionModelprotected; bSelfCollisionsofa::core::CollisionModelprotected; bSimulatedsofa::core::CollisionModelprotected; bwdInit() overridesofa::core::CollisionModelvirtual; canCollideWith(CollisionModel *model)sofa::core::CollisionModelvirtual; canCollideWithElement(Index, CollisionModel *, Index)sofa::core::CollisionModelinlinevirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; CAPSULE_TYPE enum valuesofa::core::CollisionModel; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; CollisionModel()sofa::core::CollisionModelprotected; colorsofa::core::CollisionModelprotected; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeBoundingTree(int maxDepth=0) overridesofa::component::collision::geometry::TetrahedronCollisionModelvirtual; computeContinuousBoundingTree(SReal, int maxDepth=0)sofa::core::CollisionModelinlinevirtual; contactFrictionsofa::core::CollisionModelprotected; contactResponsesofa::core::CollisionModelprotected; contactRestitutionsofa::core::CollisionModelprotected; contactStiffnesssofa::core::CollisionModelprotected; Coord typedefsofa::component::collision::geometry::TetrahedronCollisionModel; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createPre",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron_collision_model-members.html:2701,clear,clearLoggedMessages,2701,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron_collision_model-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron_collision_model-members.html,1,['clear'],['clearLoggedMessages']
Usability,"ed; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; begin()sofa::core::CollisionModelinline; bMovingsofa::core::CollisionModelprotected; bSelfCollisionsofa::core::CollisionModelprotected; bSimulatedsofa::core::CollisionModelprotected; bwdInit() overridesofa::core::CollisionModelvirtual; canCollideWith(CollisionModel *model)sofa::core::CollisionModelvirtual; canCollideWithElement(Index, CollisionModel *, Index)sofa::core::CollisionModelinlinevirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; CAPSULE_TYPE enum valuesofa::core::CollisionModel; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; CollisionModel()sofa::core::CollisionModelprotected; colorsofa::core::CollisionModelprotected; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeBoundingTree(int maxDepth=0)=0sofa::core::CollisionModelpure virtual; computeContinuousBoundingTree(SReal, int maxDepth=0)sofa::core::CollisionModelinlinevirtual; contactFrictionsofa::core::CollisionModelprotected; contactResponsesofa::core::CollisionModelprotected; contactRestitutionsofa::core::CollisionModelprotected; contactStiffnesssofa::core::CollisionModelprotected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createPrevious()sofa::core::CollisionModelinline; CYLINDER_TYPE enum valuesofa::core::CollisionModel; d_componentStatesofa::co",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_collision_model-members.html:2420,clear,clearLoggedMessages,2420,api/master/sofa/html/classsofa_1_1core_1_1_collision_model-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_collision_model-members.html,1,['clear'],['clearLoggedMessages']
Usability,"eedback Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::component::haptics::NullForceFeedback Class Reference . #include <NullForceFeedback.h>; Null force feedback for haptic feedback device. ; More... Inheritance diagram for sofa::component::haptics::NullForceFeedback:. [legend]; Detailed Description; Null force feedback for haptic feedback device. . Public Member Functions;  SOFA_CLASS (NullForceFeedback, ForceFeedback);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void computeForce (SReal x, SReal y, SReal z, SReal u, SReal v, SReal w, SReal q, SReal &fx, SReal &fy, SReal &fz) override;  ; void computeWrench (const sofa::type::Transform< SReal > &world_H_tool, const sofa::type::SpatialVector< SReal > &V_tool_world, sofa::type::SpatialVector< SReal > &W_tool_world) override;  ;  Public Member Functions inherited from sofa::component::haptics::ForceFeedback;  SOFA_ABSTRACT_CLASS (ForceFeedback, core::behavior::BaseController);  ; virtual void setReferencePosition (sofa::type::Transform< SReal > &referencePosition);  ; virtual bool isEnabled ();  ; virtual void setLock (bool value);  Abstract method to lock or unlock the force feedback computation. To be implemented by child class if needed. More...;  ;  Public Member Functions inherited from sofa::core::behavior::BaseController;  SOFA_ABSTRACT_CLASS (BaseController, core::objectmodel::BaseObject);  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_null_force_feedback.html:1378,feedback,feedback,1378,api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_null_force_feedback.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_null_force_feedback.html,1,['feedback'],['feedback']
Usability,"eeds to be multiplied to each matrix entry. ; offsetStarting index of the submatrix to fill in the global matrix. . Reimplemented from sofa::core::behavior::ForceField< DataTypes >. ◆ addPoint(). template<class DataTypes > . void sofa::component::mechanicalload::LinearForceField< DataTypes >::addPoint ; (; unsigned ; index). methods to add/remove some indices, keyTimes, keyForces . ◆ buildDampingMatrix(). template<class DataTypes > . void sofa::component::mechanicalload::LinearForceField< DataTypes >::buildDampingMatrix ; (; core::behavior::DampingMatrix * ; ). finalvirtual . Reimplemented from sofa::core::behavior::BaseForceField. ◆ buildStiffnessMatrix(). template<class DataTypes > . void sofa::component::mechanicalload::LinearForceField< DataTypes >::buildStiffnessMatrix ; (; core::behavior::StiffnessMatrix * ; matrix). overridevirtual . Reimplemented from sofa::core::behavior::BaseForceField. ◆ clearKeyForces(). template<class DataTypes > . void sofa::component::mechanicalload::LinearForceField< DataTypes >::clearKeyForces. ◆ clearPoints(). template<class DataTypes > . void sofa::component::mechanicalload::LinearForceField< DataTypes >::clearPoints. ◆ getPotentialEnergy() [1/5]. SReal sofa::component::mechanicalload::LinearForceField< Rigid3Types >::getPotentialEnergy ; (; const core::MechanicalParams * ; , . const DataVecCoord & ;  . ); const. virtual . Implements sofa::core::behavior::ForceField< DataTypes >. ◆ getPotentialEnergy() [2/5]. SReal sofa::component::mechanicalload::LinearForceField< Rigid2Types >::getPotentialEnergy ; (; const core::MechanicalParams * ; , . const DataVecCoord & ;  . ); const. virtual . Implements sofa::core::behavior::ForceField< DataTypes >. ◆ getPotentialEnergy() [3/5]. SReal SOFA_COMPONENT_MECHANICALLOAD_API sofa::component::mechanicalload::LinearForceField< defaulttype::Rigid3Types >::getPotentialEnergy ; (; const core::MechanicalParams * ; , . const DataVecCoord & ;  . ); const. virtual . Implements sofa::core::behavior::ForceF",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_linear_force_field.html:25030,clear,clearKeyForces,25030,api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_linear_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_linear_force_field.html,1,['clear'],['clearKeyForces']
Usability,eer-for-the-development-of-rf-ablation-simulator-of-cardiac-arrhythmia; ; SOFA – Software engineer for simulation of cardiac arrhythmia ablation. SOFA – Jobs. /news; . /1000-tests-in-sofa; ; SOFA – 1000 tests in SOFA!. /10-year-birthday; ; SOFA – 10 year birthday !. /2017-publications; ; SOFA – 2017 Publications !. /2018-highlights; ; SOFA – 2018 Highlights. /2nd-sofa-scientific-and-technical-committee; ; SOFA – 2nd SOFA Scientific and Technical Committee. /2-students-accepted-for-the-gsoc-with-sofa; ; SOFA – 2 students accepted for the GSoC. /4-sofa-papers-iros-2016; ; SOFA – 4 SOFA papers @ IROS 2016. /4th-meeting-simforhealth-in-paris; ; SOFA – 4th meeting SimForHealth in Paris. /5th-french-symposium-in-healthcare-simulation; ; SOFA – Participation at 5th French Symposium in Healthcare Simulation. /7-latest-papers-based-on-sofa; ; SOFA – 7 latest papers based on SOFA. /accepted-journal-at-tbme; ; SOFA – Accepted journal at TBME!. /already-experienced-sofa-give-us-some-feedback; ; SOFA – Already experienced SOFA? Give us some feedback!. /article-about-sofa-on-medtech; ; SOFA – Article about SOFA on MedTech. /article-in-science-vie-about-anatoscope; ; SOFA – Article in Science & Vie about Anatoscope. /asan-medical-center-joins-the-sofa-consortium; ; SOFA – Asan Medical Center joins the SOFA Consortium. /attend-the-sofa-week-2018; ; SOFA – Attend the SOFA week 2018. /author; . /guillaumeparan; . /feed; ; Guillaume – SOFA. SOFA – Guillaume. /hugo; . /feed; ; Hugo – SOFA. /page; . /10; ; SOFA – Hugo. /11; ; SOFA – Hugo. /12; ; SOFA – Hugo. /13; ; SOFA – Hugo. /14; ; SOFA – Hugo. /2; ; SOFA – Hugo. /3; ; SOFA – Hugo. /4; ; SOFA – Hugo. /5; ; SOFA – Hugo. /6; ; SOFA – Hugo. /7; ; SOFA – Hugo. /8; ; SOFA – Hugo. /9; ; SOFA – Hugo. SOFA – Hugo. /binaries-for-macos-now-available; ; SOFA – Binaries for MacOS now available!. /binaries-of-sofa; ; SOFA – Beta version of SOFA binaries. /booth-at-i-novia-2016; ; SOFA – Booth at I-Novia 2016. /caeml-a-community-first-cae-model-sh,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:1297,feedback,feedback,1297,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,2,['feedback'],['feedback']
Usability,"efsofa::core::objectmodel::Base; buildDampingMatrix(DampingMatrix *matrix)sofa::core::behavior::BaseForceFieldvirtual; buildMassMatrix(sofa::core::behavior::MassMatrixAccumulator *matrices)sofa::core::behavior::BaseMassvirtual; buildStiffnessMatrix(StiffnessMatrix *matrix)sofa::core::behavior::BaseForceFieldvirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ForceField< DataTypes >inlinestatic; sofa::core::behavior::BaseForceField::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; Coord typedefsofa::core::behavior::Mass< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; DataTypes typedefsofa::core::behavior::ForceField< DataTypes >; DataVecCoord typedefsofa::core::behavior::Mass< DataTypes >; DataVecDeriv typedefsofa::core::behavior::Mass< DataTypes >; Deriv typedefsofa::core::behavior::Mass< DataTypes >; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; exportGnuplot(const",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mass-members.html:5650,clear,clearLoggedMessages,5650,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mass-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mass-members.html,1,['clear'],['clearLoggedMessages']
Usability,"egend]. Classes; class  Block;  . Public Member Functions;  BlockVector ();  ;  BlockVector (Index n);  ; virtual ~BlockVector ();  ; const Block & sub (Index i, Index) const;  ; Block & sub (Index i, Index);  ; const Block & asub (Index bi, Index) const;  ; Block & asub (Index bi, Index);  ;  Public Member Functions inherited from sofa::linearalgebra::FullVector< T >;  FullVector ();  ;  FullVector (const FullVector &vect);  ;  FullVector (Index n);  ;  FullVector (T *ptr, Index n);  ;  FullVector (T *ptr, Index n, Index nmax);  ;  ~FullVector () override;  ; T * ptr ();  ; const T * ptr () const;  ; void setptr (T *p);  ; Index capacity () const;  ; Iterator begin ();  ; Iterator end ();  ; ConstIterator begin () const;  ; ConstIterator end () const;  ; void fastResize (Index dim);  ; void resize (Index dim) override;  Resize the vector, and reset all values to 0. More...;  ; void clear () override;  Reset all values to 0. More...;  ; void swap (FullVector< T > &v);  ; void clear (Index dim) override;  Reset the value of element i to 0. More...;  ; T & operator[] (Index i);  ; const T & operator[] (Index i) const;  ; SReal element (Index i) const override;  Read the value of element i. More...;  ; void set (Index i, SReal v) override;  Write the value of element i. More...;  ; void add (Index i, SReal v) override;  Add v to the existing value of element i. More...;  ; Index size () const override;  Number of elements. More...;  ; FullVector< T > sub (Index i, Index n);  ; template<class TV > ; void getsub (Index i, Index n, TV &v);  ; template<class TV > ; void setsub (Index i, Index n, const TV &v);  ; void operator= (const FullVector< T > &a);  v = a More...;  ; void operator= (const T &a);  ; void operator+= (const FullVector< Real > &a);  v += a More...;  ; void operator-= (const FullVector< Real > &a);  v -= a More...;  ; void eq (const FullVector< Real > &a, Real f);  v = a*f More...;  ; void eq (const FullVector< Real > &a, const FullVector< Real > &b, Real",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_vector.html:1368,clear,clear,1368,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_vector.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_vector.html,1,['clear'],['clear']
Usability,"ehavior::BaseProjectiveConstraintSetvirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseProjectiveConstraintSet()sofa::core::behavior::BaseProjectiveConstraintSetinlineprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ProjectiveConstraintSet< TDataTypes >inlinestatic; sofa::core::behavior::BaseProjectiveConstraintSet::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; Coord typedefsofa::component::constraint::projective::SkeletalMotionProjectiveConstraint< TDataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_activesofa::component::constraint::projective::SkeletalMotionProjectiveConstraint< TDataTypes >protected; d_animationSpeedsofa::component::constraint::projective::SkeletalMotionProjectiveConstraint< TDataTypes >protected; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; d_skeletonBonessofa::component::constraint::projective::SkeletalMotionProjectiveConstraint< TDataTypes >protected; d_skeletonJointssofa::component",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_skeletal_motion_projective_constraint-members.html:3323,clear,clearLoggedMessages,3323,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_skeletal_motion_projective_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_skeletal_motion_projective_constraint-members.html,1,['clear'],['clearLoggedMessages']
Usability,"ehavior::BaseProjectiveConstraintSetvirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseProjectiveConstraintSet()sofa::core::behavior::BaseProjectiveConstraintSetinlineprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ProjectiveConstraintSet< TDataTypes >inlinestatic; sofa::core::behavior::BaseProjectiveConstraintSet::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; constraintssofa::component::constraint::projective::OscillatorProjectiveConstraint< TDataTypes >protected; Coord typedefsofa::component::constraint::projective::OscillatorProjectiveConstraint< TDataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_constraintssofa::component::constraint::projective::OscillatorProjectiveConstraint< TDataTypes >protected; d_messageLogCountsofa::core::objectmodel::Basemutable; DataMatrixDeriv typedefsofa::component::constraint::projective::OscillatorProjectiveConstraint< TDataTypes >; DataTypes typedefsofa::component::constraint::pr",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_oscillator_projective_constraint-members.html:3036,clear,clearLoggedMessages,3036,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_oscillator_projective_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_oscillator_projective_constraint-members.html,1,['clear'],['clearLoggedMessages']
Usability,eimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer. ◆ checkTopology(). bool sofa::component::topology::container::dynamic::TriangleSetTopologyContainer::checkTopology ; (; ); const. overridevirtual . Checks if the topology is coherent. ; Check if the shell arrays are coherent See alsom_triangle . m_edgesInTriangle . m_trianglesAroundVertex . m_trianglesAroundEdge ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer. ◆ cleanTriangleTopologyFromDirty(). void sofa::component::topology::container::dynamic::TriangleSetTopologyContainer::cleanTriangleTopologyFromDirty ; (; ). protected . ◆ clear(). void sofa::component::topology::container::dynamic::TriangleSetTopologyContainer::clear ; (; ). overridevirtual . Procedural creation methods ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer. ◆ clearBorderElementLists(). void sofa::component::topology::container::dynamic::TriangleSetTopologyContainer::clearBorderElementLists ; (; ). protected . ◆ clearEdgesInTriangle(). void sofa::component::topology::container::dynamic::TriangleSetTopologyContainer::clearEdgesInTriangle ; (; ). protected . ◆ clearTriangles(). void sofa::component::topology::container::dynamic::TriangleSetTopologyContainer::clearTriangles ; (; ). protected . ◆ clearTrianglesAroundEdge(). void sofa::component::topology::container::dynamic::TriangleSetTopologyContainer::clearTrianglesAroundEdge ; (; ). protected . ◆ clearTrianglesAroundVertex(). void sofa::component::topology::container::dynamic::TriangleSetTopologyContainer::clearTrianglesAroundVertex ; (; ). protected . ◆ createEdgeSetArray(). void sofa::component::topology::container::dynamic::TriangleSetTopologyContainer::createEdgeSetArray ; (; ). overrideprotectedvirtual . Creates the EdgeSet array. ; Create the set of edges when needed. ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer. ◆ crea,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_container.html:41342,clear,clearBorderElementLists,41342,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_container.html,1,['clear'],['clearBorderElementLists']
Usability,"el::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeInstance(Instance inst) overridesofa::core::collision::ContactManagerinlineprotectedvirtual; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; CollisionAlgorithm()sofa::core::collision::CollisionAlgorithminlineprotected; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; ContactManager()sofa::core::collision::ContactManagerinlineprotected; contactssofa::core::collision::ContactManagerprotected; ContactVector typedefsofa::core::collision::ContactManager; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createContacts(const DetectionOutputMap &outputs)=0sofa::core::collision::ContactManagerpure virtual; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; DetectionOutputMap typedefsofa::core::collision::ContactManager; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual;",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_contact_manager-members.html:1988,clear,clearLoggedMessages,1988,api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_contact_manager-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_contact_manager-members.html,1,['clear'],['clearLoggedMessages']
Usability,"el::Base; beginChange() constsofa::core::topology::BaseMeshTopologyvirtual; beginStateChange() constsofa::core::topology::BaseMeshTopologyvirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeGridResolutionPostProcess()sofa::component::topology::container::grid::GridTopologyinlineprotectedvirtual; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkConnexity() overridesofa::component::topology::container::constant::MeshTopologyvirtual; checkGridResolution()sofa::component::topology::container::grid::GridTopologyprotected; checkTopology() constsofa::core::topology::BaseMeshTopologyinlinevirtual; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear() overridesofa::component::topology::container::constant::MeshTopologyvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeEdgeList()sofa::component::topology::container::grid::GridTopologyprotectedvirtual; computeHexaList()sofa::component::topology::container::grid::GridTopologyprotectedvirtual; computePointList()sofa::component::topology::container::grid::GridTopologyprotectedvirtual; computeQuadList()sofa::component::topology::container::grid::GridTopologyprotectedvirtual; computeRelativeOrientationInQuad(const PointID ind_p0, const PointID ind_p1, const PointID ind_q)sofa::component::topology::container::constant::MeshTopology; computeRelativeOrientationInTri(const PointID ind_p0, const PointID ind_p1, const PointID ind_t)sofa::component::topology::container::constant::MeshTopology; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::log",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_cylinder_grid_topology-members.html:3770,clear,clear,3770,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_cylinder_grid_topology-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_cylinder_grid_topology-members.html,3,['clear'],['clear']
Usability,"el::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; buildDampingMatrix(core::behavior::DampingMatrix *) finalsofa::component::solidmechanics::spring::TriangularQuadraticSpringsForceField< DataTypes >virtual; buildStiffnessMatrix(StiffnessMatrix *matrix)sofa::core::behavior::BaseForceFieldvirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ForceField< DataTypes >inlinestatic; sofa::core::behavior::BaseForceField::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; Coord typedefsofa::component::solidmechanics::spring::TriangularQuadraticSpringsForceField< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_dampingRatiosofa::component::solidmechanics::spring::TriangularQuadraticSpringsForceField< DataTypes >protected; d_edgeInfosofa::component::solidmechanics::spring::TriangularQuadraticSpringsForceField< DataTypes >protected; d_initialPointssofa::component::solidmechanics::spring::TriangularQuadraticSpringsForceField< DataTypes >protected; d_messageLogCountsofa::core::objectmodel::Basemutable; d_poissonRatiosofa::compone",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangular_quadratic_springs_force_field-members.html:5619,clear,clearLoggedMessages,5619,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangular_quadratic_springs_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangular_quadratic_springs_force_field-members.html,1,['clear'],['clearLoggedMessages']
Usability,"el::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::component::engine::select::PlaneROI< DataTypes >inlinestatic; sofa::core::DataEngine::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanDirty(const core::ExecParams *params=nullptr)sofa::core::DataTrackerDDGNodevirtual; sofa::core::objectmodel::DDGNode::cleanDirty()sofa::core::objectmodel::DDGNode; cleanDirtyOutputsOfInputs()sofa::core::objectmodel::DDGNodeprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computePlane(unsigned int planeIndex)sofa::component::engine::select::PlaneROI< DataTypes >protected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; CPos typedefsofa::component::engine::select::PlaneROI< DataTypes >; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; DataEngine()sofa::core::DataEngineprotected; DataTrackerDDGNode()sofa::core::DataTrackerDDGNodeinline; DDGLinkContainer typedefsofa::core::objectmodel::DDGNode; DDGLinkIterator typedefsofa::core::objectmodel::DDGNode; DDGNode()sofa::core::objectmodel::DDGNode; delInput(DDGNode *n)sofa::core::objectmodel::DDGNode; delOutput(DDGNod",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_plane_r_o_i-members.html:2949,clear,clearLoggedMessages,2949,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_plane_r_o_i-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_plane_r_o_i-members.html,1,['clear'],['clearLoggedMessages']
Usability,"el::BaseObjectprotected; cleanTriangleTopologyFromDirty()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear() overridesofa::component::topology::container::dynamic::TriangleSetTopologyContainervirtual; clearBorderElementLists()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; clearEdges()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearEdgesAroundVertex()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearEdgesInTriangle()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; clearLoggedMessages() constsofa::core::objectmodel::Base; clearTriangles()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; clearTrianglesAroundEdge()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; clearTrianglesAroundVertex()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createEdgesAroundVertexArray()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotectedvirtual; createEdgeSetArray() overridesofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotectedvirtual; createEdgesInTriangleArray()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotectedvirtual; createElementsOnBorder()sofa::component::topology::container::dynamic::TriangleSetTopologyContainer; createTrianglesAroundEdgeArray()sofa::component::topology::container::dynamic::TriangleS",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_container-members.html:4902,clear,clearTrianglesAroundVertex,4902,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_container-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_container-members.html,1,['clear'],['clearTrianglesAroundVertex']
Usability,"el::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::component::haptics::LCPForceFeedback< TDataTypes >inlinestatic; sofa::component::haptics::MechanicalStateForceFeedback::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeForce(SReal x, SReal y, SReal z, SReal u, SReal v, SReal w, SReal q, SReal &fx, SReal &fy, SReal &fz) overridesofa::component::haptics::LCPForceFeedback< TDataTypes >virtual; computeForce(const VecCoord &state, VecDeriv &forces) overridesofa::component::haptics::LCPForceFeedback< TDataTypes >virtual; computeForce(SReal x, SReal y, SReal z, SReal, SReal, SReal, SReal, SReal &fx, SReal &fy, SReal &fz)sofa::component::haptics::LCPForceFeedback< TDataTypes >virtual; computeForce(SReal x, SReal y, SReal z, SReal, SReal, SReal, SReal, SReal &fx, SReal &fy, SReal &fz)sofa::component::haptics::LCPForceFeedback< TDataTypes >virtual; computeWrench(const sofa::type::Transform< SReal > &world_H_tool, const sofa::type::SpatialVector< SReal > &V_tool_world, sofa::type::SpatialVector< SReal > &W_tool_world) overridesofa::component::haptics::LCPForce",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_l_c_p_force_feedback-members.html:2232,clear,clearLoggedMessages,2232,api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_l_c_p_force_feedback-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_l_c_p_force_feedback-members.html,1,['clear'],['clearLoggedMessages']
Usability,"elinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; beginEdit()sofa::gl::component::shader::OglAttribute< 1, GL_INT, int >; bwdDraw(core::visual::VisualParams *) overridesofa::gl::component::shader::OglAttribute< 1, GL_INT, int >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; DataType typedefsofa::gl::component::shader::OglAttribute< 1, GL_INT, int >; disable()sofa::gl::component::shader::OglAttribute< 1, GL_INT, int >; doInitVisual(const core::visual::VisualParams *vparams) overridesofa::gl::component::shader::OglAttribute< 1, GL_INT, int >virtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; doUpdateVisual(const core::visual::VisualParams *vparams) overridesofa::gl::component::shader::OglAttribu",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute-members.html:3154,clear,clearVisual,3154,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute-members.html,1,['clear'],['clearVisual']
Usability,"em::elastic::FastTetrahedralCorotationalForceField< DataTypes >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ForceField< DataTypes >inlinestatic; sofa::core::behavior::BaseForceField::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkPoissonRatio()sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >protected; checkYoungModulus()sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >protected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; computeQRRotation(Mat3x3 &r, const Coord *dp)sofa::component::solidmechanics::fem::elastic::FastTetrahedralCorotationalForceField< DataTypes >protectedstatic; Coord typedefsofa::component::solidmechanics::fem::elastic::FastTetrahedralCorotationalForceField< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createTetrahedronRestInformation(Index, TetrahedronRestInformation &t, const core::topology::BaseMeshTopology::Tetrahedron &, const sofa::type::vector< Index > &, const sofa::type::vector< SReal > &)sofa::component::solidmechanics::fem::elastic::FastTetrahedralCorotationalForceField< DataTypes >protected",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_fast_tetrahedral_corotational_force_field-members.html:5611,clear,clearLoggedMessages,5611,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_fast_tetrahedral_corotational_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_fast_tetrahedral_corotational_force_field-members.html,1,['clear'],['clearLoggedMessages']
Usability,"emove all lights of the LightManager. More...;  ; void restoreDefaultLight (core::visual::VisualParams *vparams);  ; void handleEvent (sofa::core::objectmodel::Event *event) override;  Handle an event. More...;  ;  Public Member Functions inherited from sofa::core::visual::VisualManager;  SOFA_CLASS (VisualManager, VisualModel);  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_light_manager.html:4659,clear,clearVisual,4659,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_light_manager.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_light_manager.html,2,['clear'],"['clear', 'clearVisual']"
Usability,"emoved once the deprecated API applyConstraint is removed . Public Attributes; BaseProjectiveConstraintSet * component { nullptr };  ; sofa::core::behavior::ZeroDirichletCondition * zeroDirichletCondition { nullptr };  . Public Member Functions; Index rowSize () const override;  Number of rows. More...;  ; Index colSize () const override;  Number of columns. More...;  ; SReal element (Index i, Index j) const override;  Read the value of the element at row i, column j (using 0-based indices) More...;  ; void resize (Index nbRow, Index nbCol) override;  Resize the matrix and reset all values to 0. More...;  ; void clear () override;  Reset all values to 0. More...;  ; void set (Index i, Index j, double v) override;  Write the value of the element at row i, column j (using 0-based indices) More...;  ; void add (Index row, Index col, double v) override;  Add v to the existing value of the element at row i, column j (using 0-based indices) More...;  ; void clearRowCol (Index i) override;  Reset the value of both row and column i to 0. More...;  ;  Public Member Functions inherited from sofa::linearalgebra::BaseMatrix;  BaseMatrix ();  ; virtual ~BaseMatrix ();  ; Index rows (void) const;  Number of rows (Eigen-compatible API) More...;  ; Index cols (void) const;  Number of columns (Eigen-compatible API) More...;  ; SReal operator() (Index i, Index j) const;  Read the value of the element at row i, column j (using 0-based indices). Eigen-compatible API. More...;  ; virtual void add (Index row, Index col, const type::Mat3x3d &_M);  Adding values from a 3x3d matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat3x3f &_M);  Adding values from a 3x3f matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat2x2d &_M);  Adding values from a 2x2d matrix. This function may be overload to obtain better performances. More...",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_apply_constraint_compat.html:1529,clear,clearRowCol,1529,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_apply_constraint_compat.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_apply_constraint_compat.html,1,['clear'],['clearRowCol']
Usability,"eneric< TBlock, TPolicy >::rowBSize ; (; ); const. inline . Returnsthe number of row blocks . ◆ setBlock() [1/2]. template<typename TBlock , typename TPolicy = CRSDefaultPolicy> . void sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >::setBlock ; (; Index ; i, . Index ; j, . const Block & ; v . ). inline . ◆ setBlock() [2/2]. template<typename TBlock , typename TPolicy = CRSDefaultPolicy> . void sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >::setBlock ; (; Index ; i, . Index ; j, . Index & ; rowId, . Index & ; colId, . const Block & ; v . ). inline . ◆ shiftIndices(). template<typename TBlock , typename TPolicy = CRSDefaultPolicy> . void sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >::shiftIndices ; (; Index ; base). inline . Add the given base to all indices. Use 1 to convert do Fortran 1-based notation. Note that the matrix will no longer be valid from the point of view of C/C++ codes. You need to call again with -1 as base to undo it. . ◆ sortedFind() [1/2]. template<typename TBlock , typename TPolicy = CRSDefaultPolicy> . static bool sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >::sortedFind ; (; const VecIndex & ; v, . Index ; val, . Index & ; result . ). inlinestatic . ◆ sortedFind() [2/2]. template<typename TBlock , typename TPolicy = CRSDefaultPolicy> . static bool sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >::sortedFind ; (; const VecIndex & ; v, . Range ; in, . Index ; val, . Index & ; result . ). inlinestatic . ◆ swap(). template<typename TBlock , typename TPolicy = CRSDefaultPolicy> . void sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >::swap ; (; Matrix & ; m). inline . ◆ transposeFullRows(). template<typename TBlock , typename TPolicy = CRSDefaultPolicy> . template<typename TBlock2 , typename TPolicy2 > . void sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >::transposeFullRows ;",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_generic.html:31954,undo,undo,31954,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_generic.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_generic.html,1,['undo'],['undo']
Usability,"ent to each vertex). More...;  ; const sofa::type::vector< HexahedraAroundEdge > & getHexahedraAroundEdgeArray ();  Returns the HexahedraAroundEdge array (i.e. provide the hexahedron indices adjacent to each edge). More...;  ; const sofa::type::vector< HexahedraAroundQuad > & getHexahedraAroundQuadArray ();  Returns the HexahedraAroundQuad array (i.e. provide the hexahedron indices adjacent to each quad). More...;  ; bool hasHexahedra () const;  ; bool hasEdgesInHexahedron () const;  ; bool hasQuadsInHexahedron () const;  ; bool hasHexahedraAroundVertex () const;  ; bool hasHexahedraAroundEdge () const;  ; bool hasHexahedraAroundQuad () const;  ; sofa::geometry::ElementType getTopologyType () const override;  Returns the type of the topology. More...;  ; bool linkTopologyHandlerToData (core::topology::TopologyHandler *topologyHandler, sofa::geometry::ElementType elementType) override;  ; bool unlinkTopologyHandlerToData (core::topology::TopologyHandler *topologyHandler, sofa::geometry::ElementType elementType) override;  ; void clear () override;  ; void addHexa (Index a, Index b, Index c, Index d, Index e, Index f, Index g, Index h) override;  ; const SeqHexahedra & getHexahedra () override;  Get the array of hexahedra. More...;  ; const Hexahedron getHexahedron (HexaID i) override;  Get a hexahedron from its index. More...;  ; virtual unsigned int getLocalIndexFromBinaryIndex (const HexahedronBinaryIndex bi) const;  Get the local hexahedron index (0<i<8) from its 3 binary indices. More...;  ; virtual HexahedronBinaryIndex getBinaryIndexFromLocalIndex (const unsigned int li) const;  Get the binary index (array of 3 binary values) from its local index (0<li<8) More...;  ; HexahedronID getHexahedronIndex (PointID v1, PointID v2, PointID v3, PointID v4, PointID v5, PointID v6, PointID v7, PointID v8) override;  Get the index of a hexahedron from the indices of its vertices. More...;  ; const EdgesInHexahedron & getEdgesInHexahedron (HexaID id) override;  Get the 12 ed",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_container.html:7444,clear,clear,7444,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_container.html,1,['clear'],['clear']
Usability,"ent::mapping::linear::BarycentricMapperTetrahedronSetTopologyRigid< In, Out >; apply(typename Out::VecCoord &out, const typename In::VecCoord &in) overridesofa::component::mapping::linear::BarycentricMapperTetrahedronSetTopologyRigid< In, Out >; applyJ(typename Out::VecDeriv &out, const typename In::VecDeriv &in) overridesofa::component::mapping::linear::BarycentricMapperTetrahedronSetTopologyRigid< In, Out >; applyJT(typename In::VecDeriv &out, const typename Out::VecDeriv &in) overridesofa::component::mapping::linear::BarycentricMapperTetrahedronSetTopologyRigid< In, Out >; applyJT(typename In::MatrixDeriv &out, const typename Out::MatrixDeriv &in) overridesofa::component::mapping::linear::BarycentricMapperTetrahedronSetTopologyRigid< In, Out >; BarycentricMapperTetrahedronSetTopologyRigid(core::topology::BaseMeshTopology *fromTopology, core::topology::BaseMeshTopology *_toTopology)sofa::component::mapping::linear::BarycentricMapperTetrahedronSetTopologyRigid< In, Out >protected; clear(std::size_t reserve=0) overridesofa::component::mapping::linear::BarycentricMapperTetrahedronSetTopologyRigid< In, Out >; d_mapsofa::component::mapping::linear::BarycentricMapperTetrahedronSetTopologyRigid< In, Out >protected; d_mapOrientsofa::component::mapping::linear::BarycentricMapperTetrahedronSetTopologyRigid< In, Out >protected; draw(const core::visual::VisualParams *, const typename Out::VecCoord &out, const typename In::VecCoord &in) overridesofa::component::mapping::linear::BarycentricMapperTetrahedronSetTopologyRigid< In, Out >; getJ(int outSize, int inSize) overridesofa::component::mapping::linear::BarycentricMapperTetrahedronSetTopologyRigid< In, Out >; InDeriv typedefsofa::component::mapping::linear::BarycentricMapperTetrahedronSetTopologyRigid< In, Out >; Index typedefsofa::component::mapping::linear::BarycentricMapperTetrahedronSetTopologyRigid< In, Out >; Inherit typedefsofa::component::mapping::linear::BarycentricMapperTetrahedronSetTopologyRigid< In, Out >; init(c",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_barycentric_mapper_tetrahedron_set_topology_rigid-members.html:1967,clear,clear,1967,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_barycentric_mapper_tetrahedron_set_topology_rigid-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_barycentric_mapper_tetrahedron_set_topology_rigid-members.html,1,['clear'],['clear']
Usability,ented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer. ◆ checkTopology(). bool sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::checkTopology ; (; ); const. overridevirtual . Checks if the topology is coherent. ; Check if the shell arrays are coherent See alsom_tetrahedron . m_edgesInTetrahedron . m_trianglesInTetrahedron . m_tetrahedraAroundVertex . m_tetrahedraAroundEdge . m_tetrahedraAroundTriangle ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer. ◆ cleanTetrahedronTopologyFromDirty(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::cleanTetrahedronTopologyFromDirty ; (; ). protected . ◆ clear(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::clear ; (; ). overridevirtual . Procedural creation methods ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer. ◆ clearEdgesInTetrahedron(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::clearEdgesInTetrahedron ; (; ). protected . ◆ clearTetrahedra(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::clearTetrahedra ; (; ). protected . ◆ clearTetrahedraAroundEdge(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::clearTetrahedraAroundEdge ; (; ). protected . ◆ clearTetrahedraAroundTriangle(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::clearTetrahedraAroundTriangle ; (; ). protected . ◆ clearTetrahedraAroundVertex(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::clearTetrahedraAroundVertex ; (; ). protected . ◆ clearTrianglesInTetrahedron(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::clearTrianglesInTetrahedron ; (; ). protected . ◆ createEdgeSetArray(). void sofa::component::topo,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container.html:50525,clear,clearEdgesInTetrahedron,50525,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container.html,1,['clear'],['clearEdgesInTetrahedron']
Usability,"envector of a matrix. . Protected Attributes; VectorEigen eigenVector;  the data More...;  . Public Member Functions; VectorEigen & getVectorEigen ();  ; const VectorEigen & getVectorEigen () const;  ;  EigenVector (Index nbRow=0);  ; Index size () const override;  Number of elements. More...;  ; void resize (Index nbRow) override;  Resize the matrix without preserving the data (the matrix is set to zero) More...;  ; void resizeBlocks (Index nbBlocks);  Resize the matrix without preserving the data (the matrix is set to zero), with the size given in number of blocks. More...;  ; SReal element (Index i) const override;  Read the value of element i. More...;  ; void set (Index i, SReal v) override;  Write the value of element i. More...;  ; void setBlock (Index i, const Block &v);  ; void add (Index i, SReal v) override;  Add v to the existing value of element i. More...;  ; void clear (Index i) override;  Reset the value of element i to 0. More...;  ; void clear () override;  Set all values to 0, by resizing to the same size. More...;  ; const std::string Name ();  ;  Public Member Functions inherited from sofa::linearalgebra::BaseVector; virtual ~BaseVector ();  ; virtual const float * elements (Index i0, Index n, float *src) const;  Get the values of n elements, starting at element i0, into given float buffer, or return the pointer to the data if the in-memory format is compatible. More...;  ; virtual const double * elements (Index i0, Index n, double *src) const;  Get the values of n elements, starting at element i0, into given double buffer, or return the pointer to the data if the in-memory format is compatible. More...;  ; virtual const int * elements (Index i0, Index n, int *src) const;  Get the values of n elements, starting at element i0, into given int buffer, or return the pointer to the data if the in-memory format is compatible. More...;  ; virtual void set (Index i0, Index n, const float *src);  Write the values of n float elements, starting at element ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_vector.html:1640,clear,clear,1640,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_vector.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_vector.html,1,['clear'],['clear']
Usability,"eps;  ; std::map< AdvancedTimer::IdVal, ValData > valData;  ; type::vector< AdvancedTimer::IdVal > vals;  . Public Member Functions;  TimerData ();  ; void init (AdvancedTimer::IdTimer id);  ; void clear ();  ; void process ();  ; void print ();  ; void print (std::ostream &result);  ; json getJson (std::string stepNumber);  ; json getLightJson (std::string stepNumber);  ; json createJSONArray (int s, json jsonObject, StepData &data);  . Attribute details. ◆ defaultInterval. int sofa::helper::TimerData::defaultInterval. ◆ id. AdvancedTimer::IdTimer sofa::helper::TimerData::id. ◆ interval. int sofa::helper::TimerData::interval. ◆ nbIter. int sofa::helper::TimerData::nbIter. ◆ records. type::vector<Record> sofa::helper::TimerData::records. ◆ stepData. std::map<AdvancedTimer::IdStep, StepData> sofa::helper::TimerData::stepData. ◆ steps. type::vector<AdvancedTimer::IdStep> sofa::helper::TimerData::steps. ◆ timerOutputType. AdvancedTimer::outputType sofa::helper::TimerData::timerOutputType. ◆ valData. std::map<AdvancedTimer::IdVal, ValData> sofa::helper::TimerData::valData. ◆ vals. type::vector<AdvancedTimer::IdVal> sofa::helper::TimerData::vals. Constructor details. ◆ TimerData(). sofa::helper::TimerData::TimerData ; (; ). inline . Function details. ◆ clear(). void sofa::helper::TimerData::clear ; (; ). ◆ createJSONArray(). json sofa::helper::TimerData::createJSONArray ; (; int ; s, . json ; jsonObject, . StepData & ; data . ). ◆ getJson(). json sofa::helper::TimerData::getJson ; (; std::string ; stepNumber). ◆ getLightJson(). json sofa::helper::TimerData::getLightJson ; (; std::string ; stepNumber). ◆ init(). void sofa::helper::TimerData::init ; (; AdvancedTimer::IdTimer ; id). inline . ◆ print() [1/2]. void sofa::helper::TimerData::print ; (; ). ◆ print() [2/2]. void sofa::helper::TimerData::print ; (; std::ostream & ; result). ◆ process(). void sofa::helper::TimerData::process ; (; ). sofahelperTimerData; Generated on Mon Nov 11 2024 03:27:38 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_timer_data.html:1830,clear,clear,1830,api/master/sofa/html/classsofa_1_1helper_1_1_timer_data.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_timer_data.html,2,['clear'],['clear']
Usability,"er &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyTransformation(sofa::type::Matrix4 const &T)sofa::core::loader::MeshLoadervirtual; Base()sofa::core::objectmodel::Baseprotected; BaseLoader()sofa::core::loader::BaseLoaderprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; canLoad() overridesofa::core::loader::MeshLoadervirtual; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearBuffers() finalsofa::core::loader::MeshLoaderprotectedvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; copyMeshToData(helper::io::Mesh &_mesh)sofa::core::loader::MeshLoaderprotected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_computeMaterialFacessofa::component::io::mesh::MeshOBJLoader; d_createSubelementssofa::core::loader::MeshLoader; d_edgessofa::core::loader::MeshLoader; d_edgesGroupssofa::core::loader::MeshLoader; d_faceListsofa::component::io::mesh::MeshOBJLoader; d_filenamesofa::core::loader::BaseLoader; d_flipNormalssofa::core::loader::MeshLoader; d_handleSeamssofa::component::io::mesh::MeshOBJLoader; d_hexahedrasofa::core::loader::MeshLoader; d_hexahedraGroupssofa::core::loader::Mes",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_o_b_j_loader-members.html:4906,clear,clearLoggedMessages,4906,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_o_b_j_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_o_b_j_loader-members.html,1,['clear'],['clearLoggedMessages']
Usability,"er &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyTransformation(sofa::type::Matrix4 const &T)sofa::core::loader::MeshLoadervirtual; Base()sofa::core::objectmodel::Baseprotected; BaseLoader()sofa::core::loader::BaseLoaderprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; canLoad() overridesofa::core::loader::MeshLoadervirtual; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearBuffers() finalsofa::core::loader::MeshLoaderprotectedvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; copyMeshToData(helper::io::Mesh &_mesh)sofa::core::loader::MeshLoaderprotected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_createSubelementssofa::core::loader::MeshLoader; d_edgessofa::core::loader::MeshLoader; d_edgesGroupssofa::core::loader::MeshLoader; d_edgesOnBordersofa::component::io::mesh::MeshTrianLoader; d_filenamesofa::core::loader::BaseLoader; d_flipNormalssofa::core::loader::MeshLoader; d_hexahedrasofa::core::loader::MeshLoader; d_hexahedraGroupssofa::core::loader::MeshLoader; d_highOrderEdgePositionssofa::core::loader::MeshLoader; d_highOrderHexahedronPositionssofa::core::loade",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_trian_loader-members.html:4806,clear,clearLoggedMessages,4806,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_trian_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_trian_loader-members.html,1,['clear'],['clearLoggedMessages']
