quality_attribute,sentence,source,author,repo,version,id,keyword,matched_word,match_idx,filename,wiki,url,total_similar,target_keywords,target_matched_words
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Import a RooAbsArg object, e.g. function, p.d.f or variable into the workspace. This import function clones the input argument and will; /// own the clone. If a composite object is offered for import, e.g. a p.d.f with parameters and observables, the; /// complete tree of objects is imported. If any of the _variables_ of a composite object (parameters/observables) are already; /// in the workspace the imported p.d.f. is connected to the already existing variables. If any of the _function_ objects (p.d.f, formulas); /// to be imported already exists in the workspace an error message is printed and the import of the entire tree of objects is cancelled.; /// Several optional arguments can be provided to modify the import procedure.; ///; /// <table>; /// <tr><th> Accepted arguments; /// <tr><td> `RenameConflictNodes(const char* suffix)` <td> Add suffix to branch node name if name conflicts with existing node in workspace; /// <tr><td> `RenameAllNodes(const char* suffix)` <td> Add suffix to all branch node names including top level node.; /// <tr><td> `RenameAllVariables(const char* suffix)` <td> Add suffix to all variables of objects being imported.; /// <tr><td> `RenameAllVariablesExcept(const char* suffix, const char* exceptionList)` <td> Add suffix to all variables names, except ones listed; /// <tr><td> `RenameVariable(const char* inputName, const char* outputName)` <td> Rename a single variable as specified upon import.; /// <tr><td> `RecycleConflictNodes()` <td> If any of the function objects to be imported already exist in the name space, connect the; /// imported expression to the already existing nodes.; /// \attention Use with care! If function definitions do not match, this alters the definition of your function upon import; ///; /// <tr><td> `Silence()` <td> Do not issue any info message; /// </table>; ///; /// The RenameConflictNodes, RenameNodes and RecycleConflictNodes a",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx:667,message,message,667,roofit/roofitcore/src/RooWorkspace.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx,1,['message'],['message']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Init window frame for log messages.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/sessionviewer/src/TProofProgressLog.cxx:112,message,messages,112,gui/sessionviewer/src/TProofProgressLog.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/sessionviewer/src/TProofProgressLog.cxx,1,['message'],['messages']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Initialise the TrueType fonts interface.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/graf/src/TTF.cxx:116,interface,interface,116,graf2d/graf/src/TTF.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/graf/src/TTF.cxx,1,['interface'],['interface']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Initialization routine",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeSQL.cxx:101,rout,routine,101,tree/tree/src/TTreeSQL.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeSQL.cxx,1,['rout'],['routine']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Initialization routine (run from the constructor so do not make this function virtual)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TBranchObject.cxx:101,rout,routine,101,tree/tree/src/TBranchObject.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TBranchObject.cxx,1,['rout'],['routine']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Initialize an accept-reject generator for the specified distribution function,; /// which must be non-negative but does not need to be normalized over the; /// variables to be generated, genVars. The function and its dependents are; /// cloned and so will not be disturbed during the generation process.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsNumGenerator.cxx:303,depend,dependents,303,roofit/roofitcore/src/RooAbsNumGenerator.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsNumGenerator.cxx,2,['depend'],['dependents']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Initialize batch image interface; ///; /// fname : image file name; ///; /// The possible workstation types are:; /// - 111 - Portrait; /// - 112 - Landscape; /// - 114 - preview, keep in memory (do not write on delete)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/postscript/src/TImageDump.cxx:109,interface,interface,109,graf2d/postscript/src/TImageDump.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/postscript/src/TImageDump.cxx,1,['interface'],['interface']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Initialize bin content integrator",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooXYChi2Var.cxx:109,integrat,integrator,109,roofit/roofitcore/src/RooXYChi2Var.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooXYChi2Var.cxx,1,['integrat'],['integrator']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Initialize integrator allocate buffers and setup GSL workspace",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitmore/src/RooAdaptiveGaussKronrodIntegrator1D.cxx:97,integrat,integrator,97,roofit/roofitmore/src/RooAdaptiveGaussKronrodIntegrator1D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitmore/src/RooAdaptiveGaussKronrodIntegrator1D.cxx,1,['integrat'],['integrator']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Initialize operating system interface.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TROOT.cxx:114,interface,interface,114,core/base/src/TROOT.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TROOT.cxx,1,['interface'],['interface']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Initialize parser parameters, such as, disactivate non-standards libxml1; /// features, on/off validation, clear error and warning messages.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/xmlparser/src/TXMLParser.cxx:217,message,messages,217,io/xmlparser/src/TXMLParser.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/xmlparser/src/TXMLParser.cxx,1,['message'],['messages']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Initialize the OS interface.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx:104,interface,interface,104,core/base/src/TSystem.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx,1,['interface'],['interface']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Initialize the PDF interface; ///; /// - fname : PDF file name; /// - wtype : PDF workstation type. Not used in the PDF driver. But as TPDF; /// inherits from TVirtualPS it should be kept. Anyway it is not; /// necessary to specify this parameter at creation time because it; /// has a default value (which is ignore in the PDF case).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/postscript/src/TPDF.cxx:105,interface,interface,105,graf2d/postscript/src/TPDF.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/postscript/src/TPDF.cxx,1,['interface'],['interface']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Initialize the PostScript interface; ///; /// - fname : PostScript file name; /// - wtype : PostScript workstation type; ///; ///; /// The possible workstation types are:; /// - 111 ps Portrait; /// - 112 ps Landscape; /// - 113 eps",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/postscript/src/TPostScript.cxx:112,interface,interface,112,graf2d/postscript/src/TPostScript.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/postscript/src/TPostScript.cxx,1,['interface'],['interface']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Initialize the ROOT system. The creation of the TROOT object initializes; /// the ROOT system. It must be the first ROOT related action that is; /// performed by a program. The TROOT object must be created on the stack; /// (can not be called via new since ""operator new"" is protected). The; /// TROOT object is either created as a global object (outside the main(); /// program), or it is one of the first objects created in main().; /// Make sure that the TROOT object stays in scope for as long as ROOT; /// related actions are performed. TROOT is a so called singleton so; /// only one instance of it can be created. The single TROOT object can; /// always be accessed via the global pointer gROOT.; /// The name and title arguments can be used to identify the running; /// application. The initfunc argument can contain an array of; /// function pointers (last element must be 0). These functions are; /// executed at the end of the constructor. This way one can easily; /// extend the ROOT system without adding permanent dependencies; /// (e.g. the graphics system is initialized via such a function).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TROOT.cxx:1114,depend,dependencies,1114,core/base/src/TROOT.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TROOT.cxx,1,['depend'],['dependencies']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Initialize the SVG interface; ///; /// - fname : SVG file name; /// - wtype : SVG workstation type. Not used in the SVG driver. But as TSVG; /// inherits from TVirtualPS it should be kept. Anyway it is not; /// necessary to specify this parameter at creation time because it; /// has a default value (which is ignore in the SVG case).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/postscript/src/TSVG.cxx:105,interface,interface,105,graf2d/postscript/src/TSVG.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/postscript/src/TSVG.cxx,1,['interface'],['interface']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Initialize the TeX interface; ///; /// --fname : TeX file name; /// - wtype : TeX workstation type. Not used in the TeX driver. But as TTeXDump; /// inherits from TVirtualPS it should be kept. Anyway it is not; /// necessary to specify this parameter at creation time because it; /// has a default value (which is ignore in the TeX case).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/postscript/src/TTeXDump.cxx:105,interface,interface,105,graf2d/postscript/src/TTeXDump.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/postscript/src/TTeXDump.cxx,1,['interface'],['interface']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Initialize the cling interpreter interface.; /// \param name name for TInterpreter; /// \param title title for TInterpreter; /// \param argv - array of arguments passed to the cling::Interpreter constructor; /// e.g. `-DFOO=bar`. The last element of the array must be `nullptr`.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:119,interface,interface,119,core/metacling/src/TCling.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx,1,['interface'],['interface']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Initialize the integrator",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRombergIntegrator.cxx:101,integrat,integrator,101,roofit/roofitcore/src/RooRombergIntegrator.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRombergIntegrator.cxx,1,['integrat'],['integrator']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Initialize the integrator, construct and initialize subintegrators",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooImproperIntegrator1D.cxx:101,integrat,integrator,101,roofit/roofitcore/src/RooImproperIntegrator1D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooImproperIntegrator1D.cxx,1,['integrat'],['integrator']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Initialize the remote process and message passing; /// pipes between current process and remote process",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealMPFE.cxx:120,message,message,120,roofit/roofitcore/src/RooRealMPFE.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealMPFE.cxx,1,['message'],['message']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Initialize the server's end.; /// We are passed a flag that says whether or not we are started; /// by a ""master daemon"" such as inetd. A master daemon will have; /// already waited for a message to arrive for us and will have; /// already set up the connection to the client. If we weren't; /// started by a master daemon, then we must wait for a client's; /// request to arrive.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/rpdutils/src/net.cxx:274,message,message,274,net/rpdutils/src/net.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/rpdutils/src/net.cxx,1,['message'],['message']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Initializes the X system. Returns kFALSE in case of failure.; /// It is implementation dependent.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx:173,depend,dependent,173,core/base/src/TVirtualX.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx,1,['depend'],['dependent']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Inject function as a friend into klass.; /// With function being f in void f() {new N::PrivKlass(); } this enables; /// I/O of non-public classes.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:86,Inject,Inject,86,core/metacling/src/TCling.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx,1,['Inject'],['Inject']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Inject the module named ""modulename"" into cling; load all headers.; /// headers is a 0-terminated array of header files to `#include` after; /// loading the module. The module is searched for in all $LD_LIBRARY_PATH; /// entries (or %PATH% on Windows).; /// This function gets called by the static initialization of dictionary; /// libraries.; /// The payload code is injected ""as is"" in the interpreter.; /// The value of 'triggerFunc' is used to find the shared library location.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:86,Inject,Inject,86,core/metacling/src/TCling.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx,2,"['Inject', 'inject']","['Inject', 'injected']"
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Input:; /// - TLorentzVector &P: decay particle (Momentum, Energy units are Gev/C, GeV); /// - Int_t nt: number of decay products; /// - Double_t *mass: array of decay product masses; /// - Option_t *opt: default -> constant cross section; /// ""Fermi"" -> Fermi energy dependence; /// Return value:; /// - kTRUE: the decay is permitted by kinematics; /// - kFALSE: the decay is forbidden by kinematics; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/physics/src/TGenPhaseSpace.cxx:354,depend,dependence,354,math/physics/src/TGenPhaseSpace.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/physics/src/TGenPhaseSpace.cxx,1,['depend'],['dependence']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Insert a new visualization-parameter database entry. Returns; /// true if the element is inserted successfully.; /// If entry with the same key already exists the behaviour depends on the; /// 'replace' flag:; /// - true - The old model is deleted and new one is inserted (default).; /// Clients of the old model are transferred to the new one and; /// if 'update' flag is true (default), the new model's parameters; /// are assigned to all clients.; /// - false - The old model is kept, false is returned.; ///; /// If insert is successful, the ownership of the model-element is; /// transferred to the manager.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveManager.cxx:259,depend,depends,259,graf3d/eve/src/TEveManager.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveManager.cxx,2,['depend'],['depends']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Inspect PDF to find out if we are doing a binned fit to a 1-dimensional unbinned PDF.; /// If this is the case, enable finer sampling of bins by wrapping PDF into a RooBinSamplingPdf.; /// The member _integrateBinsPrecision decides how we act:; /// - < 0: Don't do anything.; /// - = 0: Only enable feature if fitting unbinned PDF to RooDataHist.; /// - > 0: Enable as requested.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsOptTestStatistic.cxx:231,wrap,wrapping,231,roofit/roofitcore/src/RooAbsOptTestStatistic.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsOptTestStatistic.cxx,1,['wrap'],['wrapping']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Install a new wrapper around 'Merge'.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:100,wrap,wrapper,100,core/meta/src/TClass.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx,1,['wrap'],['wrapper']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Install a new wrapper around 'ResetAfterMerge'.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:100,wrap,wrapper,100,core/meta/src/TClass.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx,1,['wrap'],['wrapper']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Install a new wrapper around 'delete []'.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:100,wrap,wrapper,100,core/meta/src/TClass.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx,1,['wrap'],['wrapper']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Install a new wrapper around 'delete'.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:100,wrap,wrapper,100,core/meta/src/TClass.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx,1,['wrap'],['wrapper']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Install a new wrapper around 'new []'.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:100,wrap,wrapper,100,core/meta/src/TClass.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx,1,['wrap'],['wrapper']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Install a new wrapper around 'new'.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:100,wrap,wrapper,100,core/meta/src/TClass.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx,1,['wrap'],['wrapper']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Install a new wrapper around the destructor.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:100,wrap,wrapper,100,core/meta/src/TClass.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx,1,['wrap'],['wrapper']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Install a new wrapper around the directory auto add function.; /// The function autoAddFunc has the signature void (*)(void *obj, TDirectory dir); /// and should register 'obj' to the directory if dir is not null; /// and unregister 'obj' from its current directory if dir is null",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:100,wrap,wrapper,100,core/meta/src/TClass.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx,1,['wrap'],['wrapper']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Integrate the PDF over all its bins, and return a batch with those values.; /// \param[in,out] evalData Struct with evaluation data.; /// \param[in] normSet Normalisation set that's used to evaluate the PDF.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooBinSamplingPdf.cxx:86,Integrat,Integrate,86,roofit/roofitcore/src/RooBinSamplingPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooBinSamplingPdf.cxx,1,['Integrat'],['Integrate']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Integrate the PDF over the current bin of the observable.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooBinSamplingPdf.cxx:86,Integrat,Integrate,86,roofit/roofitcore/src/RooBinSamplingPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooBinSamplingPdf.cxx,1,['Integrat'],['Integrate']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Integrate the TGraph data within a given (index) range.; /// Note that this function computes the area of the polygon enclosed by the points of the TGraph.; /// The polygon segments, which are defined by the points of the TGraph, do not need to form a closed polygon,; /// since the last polygon segment, which closes the polygon, is taken as the line connecting the last TGraph point; /// with the first one. It is clear that the order of the point is essential in defining the polygon.; /// Also note that the segments should not intersect.; ///; /// NB:; /// - if last=-1 (default) last is set to the last point.; /// - if (first <0) the first point (0) is taken.; ///; /// ### Method:; ///; /// There are many ways to calculate the surface of a polygon. It all depends on what kind of data; /// you have to deal with. The most evident solution would be to divide the polygon in triangles and; /// calculate the surface of them. But this can quickly become complicated as you will have to test; /// every segments of every triangles and check if they are intersecting with a current polygon's; /// segment or if it goes outside the polygon. Many calculations that would lead to many problems...; ///; /// ### The solution (implemented by R.Brun); /// Fortunately for us, there is a simple way to solve this problem, as long as the polygon's; /// segments don't intersect.; /// It takes the x coordinate of the current vertex and multiply it by the y coordinate of the next; /// vertex. Then it subtracts from it the result of the y coordinate of the current vertex multiplied; /// by the x coordinate of the next vertex. Then divide the result by 2 to get the surface/area.; ///; /// ### Sources; /// - http://forums.wolfram.com/mathgroup/archive/1998/Mar/msg00462.html; /// - http://stackoverflow.com/questions/451426/how-do-i-calculate-the-surface-area-of-a-2d-polygon",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraph.cxx:86,Integrat,Integrate,86,hist/hist/src/TGraph.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraph.cxx,2,"['Integrat', 'depend']","['Integrate', 'depends']"
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Integrate the wrapped PDF using our current integrator, with given norm set and limits.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooBinSamplingPdf.cxx:86,Integrat,Integrate,86,roofit/roofitcore/src/RooBinSamplingPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooBinSamplingPdf.cxx,3,"['Integrat', 'integrat', 'wrap']","['Integrate', 'integrator', 'wrapped']"
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Intercept a server redirection all and update list of dependents if necessary; /// Specifically update the set proxy 'deps' which introduces the dependency; /// on server value dirty flags of ourselves",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProjectedPdf.cxx:140,depend,dependents,140,roofit/roofitcore/src/RooProjectedPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProjectedPdf.cxx,2,['depend'],"['dependency', 'dependents']"
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Interface for cache optimization calls. The default implementation is to forward all these; /// calls to all contained RooAbsArg objects as publicized through containedArg()",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsCacheElement.cxx:86,Interface,Interface,86,roofit/roofitcore/src/RooAbsCacheElement.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsCacheElement.cxx,1,['Interface'],['Interface']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Interface for constant term optimization calls. The default implementation is to forward all these; /// calls to all contained RooAbsArg objects as publicized through containedArg()",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsCacheElement.cxx:86,Interface,Interface,86,roofit/roofitcore/src/RooAbsCacheElement.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsCacheElement.cxx,1,['Interface'],['Interface']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Interface for detailed printing of object",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPrintable.cxx:86,Interface,Interface,86,roofit/roofitcore/src/RooPrintable.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPrintable.cxx,1,['Interface'],['Interface']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Interface for direct rendering from classes that include TEveBoxSet; /// as a member.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveBoxSetGL.cxx:86,Interface,Interface,86,graf3d/eve/src/TEveBoxSetGL.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveBoxSetGL.cxx,1,['Interface'],['Interface']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Interface for generation of an event using the algorithm; /// corresponding to the specified code. The meaning of each code is; /// defined by the getGenerator() implementation. The default; /// implementation does nothing.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx:86,Interface,Interface,86,roofit/roofitcore/src/RooAbsPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx,1,['Interface'],['Interface']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Interface for multi-line printing",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsGenContext.cxx:86,Interface,Interface,86,roofit/roofitcore/src/RooAbsGenContext.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsGenContext.cxx,1,['Interface'],['Interface']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Interface for one-time initialization to setup the generator for the specified code.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx:86,Interface,Interface,86,roofit/roofitcore/src/RooAbsPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx,1,['Interface'],['Interface']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Interface for printing of object arguments. Arguments; /// are loosely defined as external server objects; /// in this context",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPrintable.cxx:86,Interface,Interface,86,roofit/roofitcore/src/RooPrintable.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPrintable.cxx,1,['Interface'],['Interface']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Interface for returning an optional hint for initial sampling points when constructing a curve projected on observable `obs`.; /// \param[in] obs Observable to retrieve sampling hint for.; /// \param[in] xlo Beginning of range.; /// \param[in] xhi End of range.; /// \return The caller owns the returned std::list.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx:86,Interface,Interface,86,roofit/roofitcore/src/RooAbsReal.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx,1,['Interface'],['Interface']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Interface for server redirect calls",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsCacheElement.cxx:86,Interface,Interface,86,roofit/roofitcore/src/RooAbsCacheElement.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsCacheElement.cxx,1,['Interface'],['Interface']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Interface for tree structure printing of object",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPrintable.cxx:86,Interface,Interface,86,roofit/roofitcore/src/RooPrintable.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPrintable.cxx,1,['Interface'],['Interface']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Interface function getAnalyticalIntergral advertises the; /// analytical integrals that are supported. 'integSet'; /// is the set of dependents for which integration is requested. The; /// function should copy the subset of dependents it can analytically; /// integrate to anaIntSet and return a unique identification code for; /// this integration configuration. If no integration can be; /// performed, zero should be returned.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx:86,Interface,Interface,86,roofit/roofitcore/src/RooAbsReal.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx,7,"['Interface', 'depend', 'integrat']","['Interface', 'dependents', 'integrate', 'integration']"
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Interface function signaling a request to perform constant term; /// optimization. This default implementation takes no action other than to; /// forward the calls to all servers",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsArg.cxx:86,Interface,Interface,86,roofit/roofitcore/src/RooAbsArg.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsArg.cxx,1,['Interface'],['Interface']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Interface function that allows to defer limit definition to integrand definition",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsIntegrator.cxx:86,Interface,Interface,86,roofit/roofitcore/src/RooAbsIntegrator.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsIntegrator.cxx,1,['Interface'],['Interface']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Interface function to TTree::Fill",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTreeDataStore.cxx:86,Interface,Interface,86,roofit/roofitcore/src/RooTreeDataStore.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTreeDataStore.cxx,3,['Interface'],['Interface']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Interface function to TTree::GetEntries",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTreeDataStore.cxx:86,Interface,Interface,86,roofit/roofitcore/src/RooTreeDataStore.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTreeDataStore.cxx,1,['Interface'],['Interface']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Interface function to TTree::GetEntry",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTreeDataStore.cxx:86,Interface,Interface,86,roofit/roofitcore/src/RooTreeDataStore.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTreeDataStore.cxx,1,['Interface'],['Interface']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Interface function to TTree::Reset",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTreeDataStore.cxx:86,Interface,Interface,86,roofit/roofitcore/src/RooTreeDataStore.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTreeDataStore.cxx,1,['Interface'],['Interface']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Interface function to create a generator context from a p.d.f. This default; /// implementation returns a 'standard' context that works for any p.d.f",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx:86,Interface,Interface,86,roofit/roofitcore/src/RooAbsPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx,1,['Interface'],['Interface']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Interface function to create an internal cache object that represent; /// each cached function configuration. This interface allows to create and; /// return a class derived from RooAbsCachedReal::FuncCacheElem so that; /// a derived class fillCacheObject implementation can utilize extra functionality; /// defined in such a derived cache class",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsCachedReal.cxx:86,Interface,Interface,86,roofit/roofitcore/src/RooAbsCachedReal.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsCachedReal.cxx,4,"['Interface', 'interface']","['Interface', 'interface']"
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Interface function to force use of a given normalization range; /// to interpret function value. Needed for functions or p.d.f.s; /// whose shape depends on the choice of normalization such as; /// RooAddPdf",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx:86,Interface,Interface,86,roofit/roofitcore/src/RooAbsReal.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx,2,"['Interface', 'depend']","['Interface', 'depends']"
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Interface function to force use of a given set of observables; /// to interpret function value. Needed for functions or p.d.f.s; /// whose shape depends on the choice of normalization such as; /// RooAddPdf",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx:86,Interface,Interface,86,roofit/roofitcore/src/RooAbsReal.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx,2,"['Interface', 'depend']","['Interface', 'depends']"
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Interface function to initialize context for generation for given; /// set of observables",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsGenContext.cxx:86,Interface,Interface,86,roofit/roofitcore/src/RooAbsGenContext.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsGenContext.cxx,1,['Interface'],['Interface']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Interface function used by test statistics to freeze choice of observables; /// for interpretation of fraction coefficients",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAddModel.cxx:86,Interface,Interface,86,roofit/roofitcore/src/RooAddModel.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAddModel.cxx,2,['Interface'],['Interface']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Interface function used by test statistics to freeze choice of observables; /// for interpretation of fraction coefficients. Needed here because a RooSimultaneous; /// works like a RooAddPdf when plotted",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimultaneous.cxx:86,Interface,Interface,86,roofit/roofitcore/src/RooSimultaneous.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimultaneous.cxx,1,['Interface'],['Interface']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Interface function used by test statistics to freeze choice of range; /// for interpretation of conditional product terms",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:86,Interface,Interface,86,roofit/roofitcore/src/RooProdPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx,1,['Interface'],['Interface']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Interface function used by test statistics to freeze choice of range; /// for interpretation of fraction coefficients",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAddModel.cxx:86,Interface,Interface,86,roofit/roofitcore/src/RooAddModel.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAddModel.cxx,2,['Interface'],['Interface']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Interface function used by test statistics to freeze choice of range; /// for interpretation of fraction coefficients. Needed here because a RooSimultaneous; /// works like a RooAddPdf when plotted",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimultaneous.cxx:86,Interface,Interface,86,roofit/roofitcore/src/RooSimultaneous.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimultaneous.cxx,1,['Interface'],['Interface']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Interface method for function objects to indicate their preferred order of observables; /// for scanning their values into a (multi-dimensional) histogram or RooDataSet. The observables; /// to be ordered are offered in argument 'obs' and should be copied in their preferred; /// order into argument 'orderedObs', This default implementation indicates no preference; /// and copies the original order of 'obs' into 'orderedObs'",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx:86,Interface,Interface,86,roofit/roofitcore/src/RooAbsReal.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx,1,['Interface'],['Interface']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Interface method to the old browser.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TRootBrowserLite.cxx:86,Interface,Interface,86,gui/gui/src/TRootBrowserLite.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TRootBrowserLite.cxx,2,['Interface'],['Interface']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Interface to ErrorHandler (protected).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TObject.cxx:86,Interface,Interface,86,core/base/src/TObject.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TObject.cxx,1,['Interface'],['Interface']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Interface to ErrorHandler. User has to specify the class name as; /// part of the location, just like for the global Info(), Warning() and; /// Error() functions.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TThread.cxx:86,Interface,Interface,86,core/thread/src/TThread.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TThread.cxx,1,['Interface'],['Interface']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Interface to RootFinder",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodPDERS.cxx:86,Interface,Interface,86,tmva/tmva/src/MethodPDERS.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodPDERS.cxx,1,['Interface'],['Interface']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Interface to TFile::Open",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TDirectoryFile.cxx:86,Interface,Interface,86,io/io/src/TDirectoryFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TDirectoryFile.cxx,1,['Interface'],['Interface']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Interface to TSpectrum::Search.; /// The function finds peaks in this histogram where the width is > sigma; /// and the peak maximum greater than threshold*maximum bin content of this.; /// For more details see TSpectrum::Search.; /// Note the difference in the default value for option compared to TSpectrum::Search; /// option="""" by default (instead of ""goff"").",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:86,Interface,Interface,86,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,1,['Interface'],['Interface']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Interface to TStreamerInfo::ReadBufferClones.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TBufferIO.cxx:86,Interface,Interface,86,io/io/src/TBufferIO.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TBufferIO.cxx,1,['Interface'],['Interface']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Interface to TStreamerInfo::WriteBufferClones.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TBufferIO.cxx:86,Interface,Interface,86,io/io/src/TBufferIO.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TBufferIO.cxx,1,['Interface'],['Interface']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Interface to TTreeCache to set the number of entries for the learning phase",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:86,Interface,Interface,86,tree/tree/src/TTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx,1,['Interface'],['Interface']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Interface to attach given parameters to object in this context",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsGenContext.cxx:86,Interface,Interface,86,roofit/roofitcore/src/RooAbsGenContext.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsGenContext.cxx,1,['Interface'],['Interface']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Interface to cling function",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:86,Interface,Interface,86,core/metacling/src/TCling.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx,8,['Interface'],['Interface']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Interface to insert remote error logging messages received by RooRealMPFE into current error logging stream.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx:86,Interface,Interface,86,roofit/roofitcore/src/RooAbsReal.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx,2,"['Interface', 'message']","['Interface', 'messages']"
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Interface to print extras of object",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPrintable.cxx:86,Interface,Interface,86,roofit/roofitcore/src/RooPrintable.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPrintable.cxx,1,['Interface'],['Interface']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Interface to set limits on integration",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsIntegrator.cxx:86,Interface,Interface,86,roofit/roofitcore/src/RooAbsIntegrator.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsIntegrator.cxx,2,"['Interface', 'integrat']","['Interface', 'integration']"
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Interface to system close. All arguments like in POSIX close().",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TFile.cxx:86,Interface,Interface,86,io/io/src/TFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TFile.cxx,1,['Interface'],['Interface']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Interface to system close. All arguments like in POSIX close.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/dcache/src/TDCacheFile.cxx:86,Interface,Interface,86,io/dcache/src/TDCacheFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/dcache/src/TDCacheFile.cxx,1,['Interface'],['Interface']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Interface to system fsync. All arguments like in POSIX fsync().",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TFile.cxx:86,Interface,Interface,86,io/io/src/TFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TFile.cxx,1,['Interface'],['Interface']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Interface to system lseek.; ///; /// All arguments like in POSIX lseek(); /// except that the offset and return value are of a type which are; /// able to handle 64 bit file systems.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TFile.cxx:86,Interface,Interface,86,io/io/src/TFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TFile.cxx,1,['Interface'],['Interface']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Interface to system open. All arguments like in POSIX open().",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TFile.cxx:86,Interface,Interface,86,io/io/src/TFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TFile.cxx,1,['Interface'],['Interface']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Interface to system open. All arguments like in POSIX open.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/dcache/src/TDCacheFile.cxx:86,Interface,Interface,86,io/dcache/src/TDCacheFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/dcache/src/TDCacheFile.cxx,1,['Interface'],['Interface']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Interface to system read. All arguments like in POSIX read().",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TFile.cxx:86,Interface,Interface,86,io/io/src/TFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TFile.cxx,1,['Interface'],['Interface']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Interface to system read. All arguments like in POSIX read.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/dcache/src/TDCacheFile.cxx:86,Interface,Interface,86,io/dcache/src/TDCacheFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/dcache/src/TDCacheFile.cxx,1,['Interface'],['Interface']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Interface to system seek. All arguments like in POSIX lseek.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/dcache/src/TDCacheFile.cxx:86,Interface,Interface,86,io/dcache/src/TDCacheFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/dcache/src/TDCacheFile.cxx,1,['Interface'],['Interface']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Interface to system sync. All arguments like in POSIX fsync.; /// dCache always keep it's files sync'ed, so there's no need to; /// sync() them manually.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/dcache/src/TDCacheFile.cxx:86,Interface,Interface,86,io/dcache/src/TDCacheFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/dcache/src/TDCacheFile.cxx,1,['Interface'],['Interface']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Interface to system write. All arguments like in POSIX write().",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TFile.cxx:86,Interface,Interface,86,io/io/src/TFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TFile.cxx,1,['Interface'],['Interface']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Interface to system write. All arguments like in POSIX write.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/dcache/src/TDCacheFile.cxx:86,Interface,Interface,86,io/dcache/src/TDCacheFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/dcache/src/TDCacheFile.cxx,1,['Interface'],['Interface']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Interface to the Principal Components Analysis class.; ///; /// Create an instance of TPrincipal; /// Fill it with the selected variables; ///; /// - if option ""n"" is specified, the TPrincipal object is filled with; /// normalized variables.; /// - If option ""p"" is specified, compute the principal components; /// - If option ""p"" and ""d"" print results of analysis; /// - If option ""p"" and ""h"" generate standard histograms; /// - If option ""p"" and ""c"" generate code of conversion functions; ///; /// return a pointer to the TPrincipal object. It is the user responsibility; /// to delete this object.; ///; /// The option default value is ""np""; ///; /// See TTreePlayer::DrawSelect for explanation of the other parameters.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx:86,Interface,Interface,86,tree/treeplayer/src/TTreePlayer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx,1,['Interface'],['Interface']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Interface to the Principal Components Analysis class.; ///; /// Create an instance of TPrincipal; ///; /// Fill it with the selected variables; ///; /// - if option ""n"" is specified, the TPrincipal object is filled with; /// normalized variables.; /// - If option ""p"" is specified, compute the principal components; /// - If option ""p"" and ""d"" print results of analysis; /// - If option ""p"" and ""h"" generate standard histograms; /// - If option ""p"" and ""c"" generate code of conversion functions; /// - return a pointer to the TPrincipal object. It is the user responsibility; /// - to delete this object.; /// - The option default value is ""np""; ///; /// see TTree::Draw for explanation of the other parameters.; ///; /// The created object is named ""principal"" and a reference to it; /// is added to the list of specials Root objects.; /// you can retrieve a pointer to the created object via:; /// ~~~ {.cpp}; /// TPrincipal *principal =; /// (TPrincipal*)gROOT->GetListOfSpecials()->FindObject(""principal"");; /// ~~~",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:86,Interface,Interface,86,tree/tree/src/TTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx,1,['Interface'],['Interface']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Internal constructor.; ///; /// Create a TClass object. This object contains the full dictionary; /// of a class. It has list to baseclasses, datamembers and methods.; /// Use this ctor to create a standalone TClass object. Most useful; /// to get a TClass interface to an interpreted class. Used by TTabCom.; ///; /// This copies the ClassInfo (i.e. does *not* take ownership of it).; ///; /// \note Use `TClass::GetClass(""class"")` to get access to a TClass object for a certain class!",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:343,interface,interface,343,core/meta/src/TClass.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx,1,['interface'],['interface']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Internal implementation of the FlushBaskets algorithm.; /// Unlike the public interface, this does NOT create an explicit event cluster; /// boundary; it is up to the (internal) caller to determine whether that should; /// done.; ///; /// Otherwise, the comments for FlushBaskets applies.; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:164,interface,interface,164,tree/tree/src/TTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx,1,['interface'],['interface']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Internal method used by Initialize.; ///; /// It explores newly defined cell with help of special short MC sampling.; /// As a result, estimates of true and drive volume is defined/determined; /// Average and dispersion of the weight distribution will is found along; /// each edge and the best edge (minimum dispersion, best maximum weight); /// is memorized for future use.; ///; /// The optimal division point for eventual future cell division is; /// determined/recorded. Recorded are also minimum and maximum weight etc.; /// The volume estimate in all (inactive) parent cells is updated.; /// Note that links to parents and initial volume = 1/2 parent has to be; /// already defined prior to calling this routine.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/foam/src/TFoam.cxx:797,rout,routine,797,math/foam/src/TFoam.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/foam/src/TFoam.cxx,1,['rout'],['routine']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Internal routine returning, and creating if necessary, the list; /// of global function.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TROOT.cxx:95,rout,routine,95,core/base/src/TROOT.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TROOT.cxx,1,['rout'],['routine']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Internal routine to add prototype pdf 'pdfName' with list of associated master states 'miStateNameList; /// and split rules 'sr' to configuration",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimWSTool.cxx:95,rout,routine,95,roofit/roofitcore/src/RooSimWSTool.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimWSTool.cxx,1,['rout'],['routine']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Internal routine to set calculate the class properties that can only be; /// known at run-time, for example whether the Hash member function and the; /// destructor are consistent.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:95,rout,routine,95,core/meta/src/TClass.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx,1,['rout'],['routine']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Internal routine to set fStreamerImpl based on the value of; /// fStreamerType.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:95,rout,routine,95,core/meta/src/TClass.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx,1,['rout'],['routine']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Internal subprogram used by Create. It explores newly defined; /// cell with according to the decision tree logic. The separation; /// set via the 'sepType' option in the constructor.; ///; /// The optimal division point for eventual future cell division is; /// determined/recorded. Note that links to parents and initial; /// volume = 1/2 parent has to be already defined prior to calling; /// this routine.; ///; /// Note, that according to the decision tree logic, a cell is only; /// split, if the number of (unweighted) events in each daughter; /// cell is greater than fNmin.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/PDEFoamDecisionTree.cxx:487,rout,routine,487,tmva/tmva/src/PDEFoamDecisionTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/PDEFoamDecisionTree.cxx,1,['rout'],['routine']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Internal subprogram used by Create.; /// It explores newly defined cell with help of special short MC sampling.; /// As a result, estimates of kTRUE and drive volume is defined/determined; /// Average and dispersion of the weight distribution will is found along; /// each edge and the best edge (minimum dispersion, best maximum weight); /// is memorized for future use.; /// The optimal division point for eventual future cell division is; /// determined/recorded. Recorded are also minimum and maximum weight etc.; /// The volume estimate in all (inactive) parent cells is updated.; /// Note that links to parents and initial volume = 1/2 parent has to be; /// already defined prior to calling this routine.; ///; /// If fNmin > 0 then the total number of (training) events found in; /// the cell during the exploration is stored in the cell. This; /// information is used within PeekMax() to avoid splitting cells; /// which contain less than fNmin events.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/PDEFoam.cxx:788,rout,routine,788,tmva/tmva/src/PDEFoam.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/PDEFoam.cxx,1,['rout'],['routine']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Invoke this on EOL. Writes out space backspace, to wrap to the next line.; /// Otherwise, we stay on the same line and the input gets pushed upwards.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/TerminalDisplayUnix.cpp:137,wrap,wrap,137,core/textinput/src/textinput/TerminalDisplayUnix.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/TerminalDisplayUnix.cpp,1,['wrap'],['wrap']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Issue error message. Use ""location"" to specify the method where the; /// error occurred. Accepts standard printf formatting arguments.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TObject.cxx:98,message,message,98,core/base/src/TObject.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TObject.cxx,1,['message'],['message']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Issue fatal error message. Use ""location"" to specify the method where the; /// fatal error occurred. Accepts standard printf formatting arguments.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TObject.cxx:104,message,message,104,core/base/src/TObject.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TObject.cxx,1,['message'],['message']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Issue info message. Use ""location"" to specify the method where the; /// warning occurred. Accepts standard printf formatting arguments.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TObject.cxx:97,message,message,97,core/base/src/TObject.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TObject.cxx,1,['message'],['message']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Issue system error message. Use ""location"" to specify the method where; /// the system error occurred. Accepts standard printf formatting arguments.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TObject.cxx:105,message,message,105,core/base/src/TObject.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TObject.cxx,1,['message'],['message']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Issue warning message. Use ""location"" to specify the method where the; /// warning occurred. Accepts standard printf formatting arguments.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TObject.cxx:100,message,message,100,core/base/src/TObject.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TObject.cxx,1,['message'],['message']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// It calls a ""fantom"" method to synchronize user keyboard input; /// and ROOT prompt line.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:116,synchroniz,synchronize,116,core/metacling/src/TCling.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx,1,['synchroniz'],['synchronize']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Least squares lpolynomial fitting without weights.; ///; /// - m number of parameters; /// - a array of parameters; /// - first 1st point number to fit (default =0); /// - last last point number to fit (default=fNpoints-1); ///; /// based on CERNLIB routine LSQ: Translated to C++ by Rene Brun",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TMultiGraph.cxx:336,rout,routine,336,hist/hist/src/TMultiGraph.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TMultiGraph.cxx,1,['rout'],['routine']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Least squares lpolynomial fitting without weights.; ///; /// \param[in] n number of points to fit; /// \param[in] m number of parameters; /// \param[in] a array of parameters; ///; /// based on CERNLIB routine LSQ: Translated to C++ by Rene Brun; /// (E.Keil. revised by B.Schorr, 23.10.1981.)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:288,rout,routine,288,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,1,['rout'],['routine']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Least squares polynomial fitting without weights.; ///; /// \param [in] m number of parameters; /// \param [in] a array of parameters; /// \param [in] xmin 1st point number to fit (default =0); /// \param [in] xmax last point number to fit (default=fNpoints-1); ///; /// based on CERNLIB routine LSQ: Translated to C++ by Rene Brun",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraph.cxx:374,rout,routine,374,hist/hist/src/TGraph.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraph.cxx,1,['rout'],['routine']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Load plugin handlers specified via macros in a list of plugin; /// directories. The `$ROOTSYS/etc/plugins` is the default top plugin directory; /// specified in `$ROOTSYS/etc/system.rootrc`. The macros must have names; /// like `<BaseClass>/PX0_<PluginClass>.C`, e.g. //`TSQLServer/P20_TMySQLServer.C`,; /// to allow easy sorting and grouping. If the BaseClass is in a namespace; /// the directory must have the name NameSpace@@BaseClass as : is a reserved; /// pathname character on some operating systems. Macros not beginning with; /// 'P' and ending with "".C"" are ignored. If base is specified only plugin; /// macros for that base class are loaded. The macros typically; /// should look like:; /// ~~~ {.cpp}; /// void P10_TDCacheFile(); /// {; /// gPluginMgr->AddHandler(""TFile"", ""^dcache"", ""TDCacheFile"",; /// ""DCache"", ""TDCacheFile(const char*,Option_t*,const char*,Int_t)"");; /// }; /// ~~~; /// In general these macros should not cause side effects, by changing global; /// ROOT state via, e.g. gSystem calls, etc. However, in specific cases; /// this might be useful, e.g. adding a library search path, adding a specific; /// dependency, check on some OS or ROOT capability or downloading; /// of the plugin.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TPluginManager.cxx:1223,depend,dependency,1223,core/base/src/TPluginManager.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TPluginManager.cxx,1,['depend'],['dependency']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Log a message into the appropriate window by emitting a signal.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:92,message,message,92,proof/proof/src/TProof.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx,1,['message'],['message']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Log error message associated with RooAbsArg object self at given level and topic. If skipPrefix; /// is true the standard RooMsgService prefix is not added.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMsgService.cxx:96,message,message,96,roofit/roofitcore/src/RooMsgService.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMsgService.cxx,1,['message'],['message']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Log error message associated with TObject object self at given level and topic. If skipPrefix; /// is true the standard RooMsgService prefix is not added.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMsgService.cxx:96,message,message,96,roofit/roofitcore/src/RooMsgService.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMsgService.cxx,1,['message'],['message']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Log evaluation error message. Evaluation errors may be routed through a different; /// protocol than generic RooFit warning message (which go straight through RooMsgService); /// because evaluation errors can occur in very large numbers in the use of likelihood; /// evaluations. In logEvalError mode, controlled by global method enableEvalErrorLogging(); /// messages reported through this function are not printed but all stored in a list,; /// along with server values at the time of reporting. Error messages logged in this; /// way can be printed in a structured way, eliminating duplicates and with the ability; /// to truncate the list by printEvalErrors. This is the standard mode of error logging; /// during MINUIT operations. If enableEvalErrorLogging() is false, all errors; /// reported through this method are passed for immediate printing through RooMsgService.; /// A string with server names and values is constructed automatically for error logging; /// purposes, unless a custom string with similar information is passed as argument.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx:107,message,message,107,roofit/roofitcore/src/RooAbsReal.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx,6,"['message', 'protocol', 'rout']","['message', 'messages', 'protocol', 'routed']"
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Look for a method in this class that has the interface function; /// address faddr.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:131,interface,interface,131,core/meta/src/TClass.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx,1,['interface'],['interface']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Looks up the string name of a color ""cname"" with respect to the screen; /// associated with the specified colormap. It returns the exact color value.; /// If the color name is not in the Host Portable Character Encoding,; /// the result is implementation dependent.; ///; /// \param [in] cmap the colormap; /// \param [in] cname the color name string; use of uppercase or lowercase; /// does not matter; /// \param [in] color returns the exact color value for later use; ///; /// The ColorStruct_t structure is set to default. Let system think we; /// could parse color.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx:341,depend,dependent,341,core/base/src/TVirtualX.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx,1,['depend'],['dependent']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Lookup libraries in LD_LIBRARY_PATH and DYLD_LIBRARY_PATH with mangled_name,; /// which is extracted by error messages we get from callback from cling. Return true; /// when the missing library was autoloaded.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:196,message,messages,196,core/metacling/src/TCling.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx,1,['message'],['messages']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Loop on all leaves of this branch to back fill Basket buffer.; ///; /// Use this routine instead of TBranch::Fill when filling a branch individually; /// to catch up with the number of entries already in the TTree.; ///; /// First it calls TBranch::Fill and then if the number of entries of the branch; /// reach one of TTree cluster's boundary, the basket is flushed.; ///; /// The function returns the number of bytes committed to the memory basket.; /// If a write error occurs, the number of bytes returned is -1.; /// If no data are written, because e.g. the branch is disabled,; /// the number of bytes returned is 0.; ///; /// To insure that the baskets of each cluster are located close by in the; /// file, when back-filling multiple branches make sure to call BackFill; /// for the same entry for all the branches consecutively; /// ~~~ {.cpp}; /// for( auto e = 0; e < tree->GetEntries(); ++e ) { // loop over entries.; /// for( auto branch : branchCollection) {; /// ... Make change to the data associated with the branch ...; /// branch->BackFill();; /// }; /// }; /// // Since we loop over all the branches for each new entry; /// // all the baskets for a cluster are consecutive in the file.; /// ~~~; /// rather than doing all the entries of one branch at a time.; /// ~~~ {.cpp}; /// // Do NOT do things in the following order, it will lead to; /// // poorly clustered files.; /// for(auto branch : branchCollection) {; /// for( auto e = 0; e < tree->GetEntries(); ++e ) { // loop over entries.; /// ... Make change to the data associated with the branch ...; /// branch->BackFill();; /// }; /// }; /// // Since we loop over all the entries for one branch; /// // all the baskets for that branch are consecutive.; /// ~~~",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TBranch.cxx:167,rout,routine,167,tree/tree/src/TBranch.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TBranch.cxx,1,['rout'],['routine']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Loop-wrapers over Scene children, element type checked on insertion.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/src/REveScene.cxx:91,wrap,wrapers,91,graf3d/eve7/src/REveScene.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/src/REveScene.cxx,1,['wrap'],['wrapers']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Low-level factory interface for creating a RooAbsPdf of a given class with a given list of input variables; /// The variable list varList should be of the form ""a,b,c"" where the interpretation of the argument is; /// dependent on the pdf. Set and List arguments can be passed by substituting a single argument with; /// the form (a,b,c), i.e. one can set varList to ""x,(a0,a1,a2)"" to pass a RooAbsReal and a RooArgSet as arguments.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx:104,interface,interface,104,roofit/roofitcore/src/RooFactoryWSTool.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx,2,"['depend', 'interface']","['dependent', 'interface']"
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Low-level factory interface for creating a RooCategory with a given list of state names. The State name list; /// can be of the form `name1,name2,name3` or of the form `name1=id1,name2=id2,name3=id3`",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx:104,interface,interface,104,roofit/roofitcore/src/RooFactoryWSTool.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx,1,['interface'],['interface']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Low-level factory interface for creating a RooRealVar with a given range and initial value",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx:104,interface,interface,104,roofit/roofitcore/src/RooFactoryWSTool.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx,1,['interface'],['interface']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// MD5 finalization, ends an MD5 message-digest operation, writing the; /// the message digest and zeroizing the context.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TMD5.cxx:116,message,message-digest,116,core/base/src/TMD5.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TMD5.cxx,2,['message'],"['message', 'message-digest']"
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// MD5 finalization, ends an MD5 message-digest operation, writing the; /// the message digest and zeroizing the context.; /// Returns digest.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TMD5.cxx:116,message,message-digest,116,core/base/src/TMD5.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TMD5.cxx,2,['message'],"['message', 'message-digest']"
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Main application eventloop. Calls system dependent eventloop via gSystem.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TApplication.cxx:127,depend,dependent,127,core/base/src/TApplication.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TApplication.cxx,1,['depend'],['dependent']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Main interface to get a HypoTestResult.; /// It does two fits:; /// 1. The first lets the null parameters float, so it's a maximum likelihood estimate.; /// 2. The second is to the null model (fixing null parameters to their specified values): *e.g.* a conditional maximum likelihood.; /// Since not all parameters are floating, this likelihood will be lower than the unconditional model.; ///; /// The ratio of the likelihood obtained from the conditional MLE to the MLE is the profile likelihood ratio.; /// Wilks' theorem is used to get \f$p\f$-values.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/ProfileLikelihoodCalculator.cxx:91,interface,interface,91,roofit/roostats/src/ProfileLikelihoodCalculator.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/ProfileLikelihoodCalculator.cxx,1,['interface'],['interface']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Main interface to get a RooStats::ConfInterval.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/MCMCCalculator.cxx:91,interface,interface,91,roofit/roostats/src/MCMCCalculator.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/MCMCCalculator.cxx,1,['interface'],['interface']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Main interface to get a RooStats::ConfInterval.; /// It constructs a RooStats::PointSetInterval.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/FeldmanCousins.cxx:91,interface,interface,91,roofit/roostats/src/FeldmanCousins.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/FeldmanCousins.cxx,1,['interface'],['interface']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Main interface to get a RooStats::ConfInterval.; /// It constructs a RooStats::SetInterval.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/NeymanConstruction.cxx:91,interface,interface,91,roofit/roostats/src/NeymanConstruction.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/NeymanConstruction.cxx,1,['interface'],['interface']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Main interface to get a RooStats::ConfInterval.; /// It constructs a profile likelihood ratio, and uses that to construct a RooStats::LikelihoodInterval.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/ProfileLikelihoodCalculator.cxx:91,interface,interface,91,roofit/roostats/src/ProfileLikelihoodCalculator.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/ProfileLikelihoodCalculator.cxx,1,['interface'],['interface']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Main routine for solving Ax=b",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/matrix/src/TDecompSparse.cxx:91,rout,routine,91,math/matrix/src/TDecompSparse.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/matrix/src/TDecompSparse.cxx,1,['rout'],['routine']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Make a decision if the frame should be drawn.; /// This depends on the render state (selection / highligt) and; /// on values of members fSelectViaFrame and fHighlightFrame.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveDigitSetGL.cxx:142,depend,depends,142,graf3d/eve/src/TEveDigitSetGL.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveDigitSetGL.cxx,1,['depend'],['depends']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Make a projection of a tree using selections.; ///; /// Depending on the value of varexp (described in Draw) a 1-D, 2-D, etc.,; /// projection of the tree will be filled in histogram hname.; /// Note that the dimension of hname must match with the dimension of varexp.; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:142,Depend,Depending,142,tree/tree/src/TTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx,1,['Depend'],['Depending']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Make histograms of the result of the analysis. This message; /// should be sent after having read all data points, but before; /// finding the parameterization; ///; /// Options:; /// A All the below; /// X Original independent variables; /// D Original dependent variables; /// N Normalised independent variables; /// S Shifted dependent variables; /// R1 Residuals versus normalised independent variables; /// R2 Residuals versus dependent variable; /// R3 Residuals computed on training sample; /// R4 Residuals computed on test sample; ///; /// For a description of these quantities, refer to; /// <a href=""#TMultiDimFit:description"">class description</a>",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TMultiDimFit.cxx:138,message,message,138,hist/hist/src/TMultiDimFit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TMultiDimFit.cxx,4,"['depend', 'message']","['dependent', 'message']"
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Make sure that a call to the Redraw() routine has been queued.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/guihtml/src/TGHtml.cxx:124,rout,routine,124,gui/guihtml/src/TGHtml.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/guihtml/src/TGHtml.cxx,1,['rout'],['routine']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Make the plot of the result of the scan using the observed data.; /// By default plot CLs or CLsb depending if the flag UseCLs is set for the results; /// that are passed to this instance.; ///; /// \param opt Options according to following list:; /// - Empty: Return CLs or CLs+b depending on the value of UseCLs.ƒ; /// - ""CLB"": return CLb plot; /// - ""CLS+B"" / ""CLSPLUSB"": return CLs+b plot independently of the flag; /// - ""CLS"": return CLs plot independently of the flag",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/HypoTestInverterPlot.cxx:184,depend,depending,184,roofit/roostats/src/HypoTestInverterPlot.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/HypoTestInverterPlot.cxx,2,['depend'],['depending']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Make w the window that will receive the generated messages.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGNumberEntry.cxx:136,message,messages,136,gui/gui/src/TGNumberEntry.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGNumberEntry.cxx,1,['message'],['messages']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Map any control that should be visible according to the; /// current scroll position. At the same time, if any controls that; /// should not be visible are mapped, unmap them. After this routine; /// finishes, all `<INPUT>` controls should be in their proper places; /// regardless of where they might have been before.; ///; /// Return the number of controls that are currently visible.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/guihtml/src/TGHtmlForm.cxx:273,rout,routine,273,gui/guihtml/src/TGHtmlForm.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/guihtml/src/TGHtmlForm.cxx,1,['rout'],['routine']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Mark all requested variables as internally integrated",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProjectedPdf.cxx:129,integrat,integrated,129,roofit/roofitcore/src/RooProjectedPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProjectedPdf.cxx,1,['integrat'],['integrated']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Matrix multiplication, with A symmetric and B symmetric.; /// (Actually copied for the moment routine for B general); /// Replace this matrix with C such that C = A * B.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/matrix/src/TMatrixT.cxx:180,rout,routine,180,math/matrix/src/TMatrixT.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/matrix/src/TMatrixT.cxx,1,['rout'],['routine']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Merge all the entries in the chain into a new tree in a new file.; ///; /// See important note in the following function Merge().; ///; /// If the chain is expecting the input tree inside a directory,; /// this directory is NOT created by this routine.; ///; /// So in a case where we have:; /// ~~~ {.cpp}; /// TChain ch(""mydir/mytree"");; /// ch.Merge(""newfile.root"");; /// ~~~; /// The resulting file will have not subdirectory. To recreate; /// the directory structure do:; /// ~~~ {.cpp}; /// TFile* file = TFile::Open(""newfile.root"", ""RECREATE"");; /// file->mkdir(""mydir"")->cd();; /// ch.Merge(file, 0);; /// ~~~",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TChain.cxx:330,rout,routine,330,tree/tree/src/TChain.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TChain.cxx,1,['rout'],['routine']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Merge this HypoTestInverterResult with another; /// HypoTestInverterResult passed as argument; /// The merge is done by combining the HypoTestResult when the same point value exist in both results.; /// If results exist at different points these are added in the new result; /// NOTE: Merging of the expected p-values obtained with pseudo-data.; /// When expected p-values exist in the result (i.e. when rebuild option is used when getting the expected; /// limit distribution in the HYpoTestInverter) then the expected p-values are also merged. This is equivalent; /// at merging the pseudo-data. However there can be an inconsistency if the expected p-values have been; /// obtained with different toys. In this case the merge is done but a warning message is printed.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/HypoTestInverterResult.cxx:837,message,message,837,roofit/roostats/src/HypoTestInverterResult.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/HypoTestInverterResult.cxx,1,['message'],['message']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Message interpreter",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TTVLVContainer.cxx:86,Message,Message,86,tree/treeviewer/src/TTVLVContainer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TTVLVContainer.cxx,1,['Message'],['Message']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Message processing function for the GUI thread.; /// Kicks in once TGWin32 becomes active, and ""replaces"" the dummy one; /// in TWinNTSystem; see TWinNTSystem.cxx's GUIThreadMessageProcessingLoop().",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/src/TGWin32.cxx:86,Message,Message,86,graf2d/win32gdk/src/TGWin32.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/src/TGWin32.cxx,1,['Message'],['Message']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Method accepting registration of a prototype numeric integrator along with a RooArgSet of its; /// default configuration options and an optional list of names of other numeric integrators; /// on which this integrator depends. Returns true if integrator was previously registered",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenFactory.cxx:139,integrat,integrator,139,roofit/roofitcore/src/RooNumGenFactory.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenFactory.cxx,10,"['depend', 'integrat']","['depends', 'integrator', 'integrators']"
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Method invoked when canvas should be updated on the client side; /// Depending from delivered status, each client will received new data",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/canvaspainter/src/RCanvasPainter.cxx:155,Depend,Depending,155,gui/canvaspainter/src/RCanvasPainter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/canvaspainter/src/RCanvasPainter.cxx,1,['Depend'],['Depending']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Normal default constructor; ///; /// rmin[3], rmax[3] are the limits of the lego object depending on; /// the selected coordinate system",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TPainter3dAlgorithms.cxx:174,depend,depending,174,hist/histpainter/src/TPainter3dAlgorithms.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TPainter3dAlgorithms.cxx,1,['depend'],['depending']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Notify error message",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofOutputFile.cxx:99,message,message,99,proof/proof/src/TProofOutputFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofOutputFile.cxx,1,['message'],['message']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Notify setting-up operation message",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx:114,message,message,114,proof/proof/src/TProofLite.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx,1,['message'],['message']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// O.k. you know there are events with negative event weights. This routine will remove; /// them by pairing them with the closest event(s) of the same event class with positive; /// weights; /// A first attempt is ""brute force"", I dont' try to be clever using search trees etc,; /// just quick and dirty to see if the result is any good",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodBDT.cxx:151,rout,routine,151,tmva/tmva/src/MethodBDT.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodBDT.cxx,1,['rout'],['routine']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Objects that should be deleted on exit of the OS interface.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx:135,interface,interface,135,core/base/src/TSystem.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx,1,['interface'],['interface']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Obtain an estimate of the number of parameters of the function and its daughters.; /// Calling `addParameters` for large functions (NLL) can cause many reallocations of; /// `params` due to the recursive behaviour. This utility function aims to pre-compute; /// the total number of parameters, so that enough memory is reserved.; /// The estimate is not fully accurate (overestimate) as there is no equivalent to `getParametersHook`.; /// \param[in] nset Normalisation set (optional). If a value depends on this set, it's not a parameter.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsArg.cxx:582,depend,depends,582,roofit/roofitcore/src/RooAbsArg.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsArg.cxx,1,['depend'],['depends']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Open a connection to a MySQL DB server. The db arguments should be; /// of the form ""mysql://<host>[:<port>][/<database>]"", e.g.:; /// ""mysql://pcroot.cern.ch:3456/test"". The uid is the username and pw; /// the password that should be used for the connection.; ///; /// In addition, several parameters can be specified in url after ""?"" symbol:; /// timeout=N n is connect timeout is seconds; /// socket=socketname socketname should be name of Unix socket, used; /// for connection; /// multi_statements tell the server that the client may send multiple; /// statements in a single string (separated by ;);; /// multi_results tell the server that the client can handle multiple; /// result sets from multiple-statement executions or; /// stored procedures; /// reconnect=0|1 enable or disable automatic reconnection to the server; /// if the connection is found to have been lost; /// compress use the compressed client/server protocol; /// cnf_file=filename Read options from the named option file instead of; /// from my.cnf; /// cnf_group=groupname Read options from the named group from my.cnf or the; /// file specified with cnf_file option; /// If several parameters are specified, they should be separated by ""&"" symbol; /// Example of connection argument:; /// TSQLServer::Connect(""mysql://host.domain/test?timeout=10&multi_statements"");",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/sql/mysql/src/TMySQLServer.cxx:1012,protocol,protocol,1012,sql/mysql/src/TMySQLServer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/sql/mysql/src/TMySQLServer.cxx,1,['protocol'],['protocol']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Open a stager, after having loaded the relevant plug-in.; /// The format of 'stager' depends on the plug-in.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TFileStager.cxx:171,depend,depends,171,net/net/src/TFileStager.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TFileStager.cxx,1,['depend'],['depends']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Open new composite container.; /// TVirtualViewer3D interface overload - see base/src/TVirtualViewer3D.cxx; /// for description of viewer architecture.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLScenePad.cxx:138,interface,interface,138,graf3d/gl/src/TGLScenePad.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLScenePad.cxx,1,['interface'],['interface']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Outputs the contents of a text layout in Postscript format. The set of; /// lines in the text layout will be rendered by the user supplied Postscript; /// function. The function should be of the form:; ///; /// justify x y string function --; ///; /// Justify is -1, 0, or 1, depending on whether the following string should; /// be left, center, or right justified, x and y is the location for the; /// origin of the string, string is the sequence of characters to be printed,; /// and function is the name of the caller-provided function; the function; /// should leave nothing on the stack.; ///; /// The meaning of the origin of the string (x and y) depends on the; /// justification. For left justification, x is where the left edge of the; /// string should appear. For center justification, x is where the center of; /// the string should appear. And for right justification, x is where the; /// right edge of the string should appear. This behavior is necessary; /// because, for example, right justified text on the screen is justified; /// with screen metrics. The same string needs to be justified with printer; /// metrics on the printer to appear in the correct place with respect to; /// other similarly justified strings. In all circumstances, y is the; /// location of the baseline for the string.; ///; /// result is modified to hold the Postscript code that will render the text; /// layout.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGFont.cxx:362,depend,depending,362,gui/gui/src/TGFont.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGFont.cxx,2,['depend'],"['depending', 'depends']"
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Overload TDirectory interface method to prohibit insertion of objects in read-only directory workspace representation",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx:106,interface,interface,106,roofit/roofitcore/src/RooWorkspace.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx,2,['interface'],['interface']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Override setFCN to use the Adapter to Minuit2 FCN interface; /// To set the address of the minimization function",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TBackCompFitter.cxx:113,Adapter,Adapter,113,hist/hist/src/TBackCompFitter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TBackCompFitter.cxx,2,"['Adapter', 'interface']","['Adapter', 'interface']"
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Overwrites TWebFile::SetMsgReadBuffer10() for setting the HTTP GET; /// request compliant to the authentication mechanism used by the S3; /// protocol. The GET request must contain an ""Authorization"" header with; /// the signature of the request, generated using the user's secret access; /// key.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TS3WebFile.cxx:228,protocol,protocol,228,net/net/src/TS3WebFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TS3WebFile.cxx,1,['protocol'],['protocol']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Parse url character string and split in its different subcomponents.; /// Use IsValid() to check if URL is legal.; /// ~~~ {.cpp}; /// url: [proto://][user[:passwd]@]host[:port]/file.ext[?options][#anchor]; /// ~~~; /// Known protocols: http, root, proof, ftp, news and any special protocols; /// defined in the rootrc Url.Special key.; /// The default protocol is ""http"", unless defaultIsFile is true in which; /// case the url is assumed to be of type ""file"".; /// If a passwd contains a @ it must be escaped by a \\, e.g.; /// ""pip@"" becomes ""pip\\@"".; ///; /// Default ports: http=80, root=1094, proof=1093, ftp=20, news=119.; /// Port #1093 has been assigned by IANA (www.iana.org) to proofd.; /// Port #1094 has been assigned by IANA (www.iana.org) to rootd.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TUrl.cxx:312,protocol,protocols,312,core/base/src/TUrl.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TUrl.cxx,3,['protocol'],"['protocol', 'protocols']"
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Parse url character string and split in its different subcomponents.; /// Use IsValid() to check if URL is legal.; ///~~~ {.cpp}; /// url: [proto://][user[:passwd]@]host[:port]/file.ext[?options][#anchor]; ///~~~; /// Known protocols: http, root, proof, ftp, news and any special protocols; /// defined in the rootrc Url.Special key.; /// The default protocol is ""http"", unless defaultIsFile is true in which; /// case the url is assumed to be of type ""file"".; /// If a passwd contains a @ it must be escaped by a \\, e.g.; /// ""pip@"" becomes ""pip\\@"".; ///; /// Default ports: http=80, root=1094, proof=1093, ftp=20, news=119.; /// Port #1093 has been assigned by IANA (www.iana.org) to proofd.; /// Port #1094 has been assigned by IANA (www.iana.org) to rootd.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TUrl.cxx:310,protocol,protocols,310,core/base/src/TUrl.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TUrl.cxx,3,['protocol'],"['protocol', 'protocols']"
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Parses the configuration file. The objects can be specified following; /// the rules of the RooFactoryWSTool, plus some more flexibility.; ///; /// The official format for the datacards is "".rs"".; ///; /// All the instructions end with a "";"" (like in C++).; ///; /// Carriage returns and white lines are irrelevant but advised since they; /// improve readability (like in C++).; ///; /// The `(Roo)ClassName::objname(description)` can be replaced with the more; /// ""pythonic"" `objname = (Roo)ClassName(description)`.; ///; /// The comments can be specified with a ""//"" if on a single line or with; /// ""multiple lines"" in C/C++ like comments.; ///; /// The `""#include path/to/file.rs""` statement triggers the inclusion of a; /// configuration fragment.; ///; /// The `""import myobject:myworkspace:myrootfile""` will add to the Workspace; /// the object myobject located in myworkspace recorded in myrootfile.; /// Alternatively, one could choose the `""import myobject:myrootfile""` in case; /// no Workspace is present.; ///; /// The `""echo""` statement prompts a message on screen.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/HLFactory.cxx:1148,message,message,1148,roofit/roostats/src/HLFactory.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/HLFactory.cxx,1,['message'],['message']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Perform a 2-D \f$ \chi^2 \f$ fit using a series of x and y values stored in the dataset `xydata`.; /// The y values can either be the event weights, or can be another column designated; /// by the YVar() argument. The y value must have errors defined for the \f$ \chi^2 \f$ to; /// be well defined.; ///; /// <table>; /// <tr><th><th> Options to control construction of the chi-square; /// <tr><td> `YVar(RooRealVar& yvar)` <td> Designate given column in dataset as Y value; /// <tr><td> `Integrate(bool flag)` <td> Integrate function over range specified by X errors; /// rather than take value at bin center.; ///; /// <tr><th><th> Options to control flow of fit procedure; /// <tr><td> `InitialHesse(bool flag)` <td> Flag controls if HESSE before MIGRAD as well, off by default; /// <tr><td> `Hesse(bool flag)` <td> Flag controls if HESSE is run after MIGRAD, on by default; /// <tr><td> `Minos(bool flag)` <td> Flag controls if MINOS is run after HESSE, on by default; /// <tr><td> `Minos(const RooArgSet& set)` <td> Only run MINOS on given subset of arguments; /// <tr><td> `Save(bool flag)` <td> Flag controls if RooFitResult object is produced and returned, off by default; /// <tr><td> `Strategy(Int_t flag)` <td> Set Minuit strategy (0 through 2, default is 1); ///; /// <tr><th><th> Options to control informational output; /// <tr><td> `Verbose(bool flag)` <td> Flag controls if verbose output is printed (NLL, parameter changes during fit; /// <tr><td> `Timer(bool flag)` <td> Time CPU and wall clock consumption of fit steps, off by default; /// <tr><td> `PrintLevel(Int_t level)` <td> Set Minuit print level (-1 through 3, default is 1). At -1 all RooFit informational; /// messages are suppressed as well; /// <tr><td> `Warnings(bool flag)` <td> Enable or disable MINUIT warnings (enabled by default); /// <tr><td> `PrintEvalErrors(Int_t numErr)` <td> Control number of p.d.f evaluation errors printe",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx:575,Integrat,Integrate,575,roofit/roofitcore/src/RooAbsReal.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx,2,['Integrat'],['Integrate']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Perform a \f$ \chi^2 \f$ fit to given histogram. By default the fit is executed through the MINUIT; /// commands MIGRAD, HESSE in succession; ///; /// The following named arguments are supported; ///; /// <table>; /// <tr><th> <th> Options to control construction of chi2; /// <tr><td> `Extended(bool flag)` <td> **Only applicable when fitting a RooAbsPdf**. Scale the normalized pdf by the number of events predicted by the model instead of scaling by the total data weight.; /// This imposes a constraint on the predicted number of events analogous to the extended term in a likelihood fit.; /// - If you don't pass this command, an extended fit will be done by default if the pdf makes a prediction on the number of events; /// (in RooFit jargon, ""if the pdf can be extended"").; /// - Passing `Extended(true)` when the the pdf makes no prediction on the expected number of events will result in error messages,; /// and the chi2 will fall back to the total data weight to scale the normalized pdf.; /// - There are cases where the fit **must** be done in extended mode. This happens for example when you have a RooAddPdf; /// where the coefficients represent component yields. If the fit is not extended, these coefficients will not be; /// well-defined, as the RooAddPdf always normalizes itself. If you pass `Extended(false)` in such a case, an error will be; /// printed and you'll most likely get garbage results.; /// <tr><td> `Range(const char* name)` <td> Fit only data inside range with given name; /// <tr><td> `Range(double lo, double hi)` <td> Fit only data inside given range. A range named ""fit"" is created on the fly on all observables.; /// Multiple comma separated range names can be specified.; /// <tr><td> `NumCPU(int num)` <td> Parallelize NLL calculation on num CPUs; /// <tr><td> `Optimize(bool flag)` <td> Activate constant term optimization (on by default); /// <tr><td> `IntegrateBins()`",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx:990,message,messages,990,roofit/roofitcore/src/RooAbsReal.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx,1,['message'],['messages']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Perform hybrid numerical/analytical integration over all real-valued dependents",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:122,integrat,integration,122,roofit/roofitcore/src/RooRealIntegral.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx,2,"['depend', 'integrat']","['dependents', 'integration']"
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Perform one step of Monte Carlo integration using the specified number of iterations; /// with (approximately) the specified number of integrand evaluation calls per iteration.; /// Use the VEGAS algorithm, starting from the specified stage. Returns the best estimate; /// of the integral. Also sets *absError to the estimated absolute error of the integral; /// estimate if absError is non-zero.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCIntegrator.cxx:118,integrat,integration,118,roofit/roofitcore/src/RooMCIntegrator.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCIntegrator.cxx,1,['integrat'],['integration']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Perform one-time initialization of integrator",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitmore/src/RooGaussKronrodIntegrator1D.cxx:121,integrat,integrator,121,roofit/roofitmore/src/RooGaussKronrodIntegrator1D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitmore/src/RooGaussKronrodIntegrator1D.cxx,1,['integrat'],['integrator']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Perform summation of list of category dependents to be integrated",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:124,depend,dependents,124,roofit/roofitcore/src/RooRealIntegral.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx,2,"['depend', 'integrat']","['dependents', 'integrated']"
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Perform the action needed to commence the new session:; /// - set debug flag; /// - check authentication table; /// - Inquire protocol; /// - authenticate the client; /// - login the client; /// Returns 1 for a PROOF master server, 0 otherwise; /// Returns logged-in user and remote process id in rid; /// Called just after opening the connection",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/rpdutils/src/rpdutils.cxx:212,protocol,protocol,212,net/rpdutils/src/rpdutils.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/rpdutils/src/rpdutils.cxx,1,['protocol'],['protocol']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Perform the action needed to commence the new session:; /// - set debug flag; /// - check authentication table; /// - Inquire protocol; /// - authenticate the client; /// - login the client; /// Returns 1 for a PROOF master server, 0 otherwise; /// Returns logged-in user, the remote client procotol cproto, the; /// client kind of user anon and, if anonymous user, the client passwd.; /// If TServerSocket (servtype==kSOCKD), the protocol number is returned; /// in anon.; /// Called just after opening the connection",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/rpdutils/src/rpdutils.cxx:212,protocol,protocol,212,net/rpdutils/src/rpdutils.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/rpdutils/src/rpdutils.cxx,2,['protocol'],['protocol']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Perform the action needed to commence the new session:; /// Version called by TServerSocket.; /// - set debug flag; /// - check authentication table; /// - Inquire protocol; /// - authenticate the client; /// Returns logged-in user, the remote client procotol cproto,; /// the authentication protocol (ROOT internal) number is returned; /// in meth, type indicates the kind of authentication:; /// 0 = new authentication; /// 1 = existing authentication; /// 2 = existing authentication with updated offset; /// and the crypted-token in ctoken (used later for cleaning).; /// Called just after opening the connection",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/rpdutils/src/rpdutils.cxx:250,protocol,protocol,250,net/rpdutils/src/rpdutils.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/rpdutils/src/rpdutils.cxx,2,['protocol'],['protocol']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Perform the integration and return the result",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:98,integrat,integration,98,roofit/roofitcore/src/RooRealIntegral.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx,1,['integrat'],['integration']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Performs the operation: `this = this + c1*h1`; /// If errors are defined (see TH1::Sumw2), errors are also recalculated.; ///; /// Note that if h1 has Sumw2 set, Sumw2 is automatically called for this; /// if not already set.; ///; /// Note also that adding histogram with labels is not supported, histogram will be; /// added merging them by bin number independently of the labels.; /// For adding histogram with labels one should use TH1::Merge; ///; /// SPECIAL CASE (Average/Efficiency histograms); /// For histograms representing averages or efficiencies, one should compute the average; /// of the two histograms and not the sum. One can mark a histogram to be an average; /// histogram by setting its bit kIsAverage with; /// myhist.SetBit(TH1::kIsAverage);; /// Note that the two histograms must have their kIsAverage bit set; ///; /// IMPORTANT NOTE1: If you intend to use the errors of this histogram later; /// you should call Sumw2 before making this operation.; /// This is particularly important if you fit the histogram after TH1::Add; ///; /// IMPORTANT NOTE2: if h1 has a normalisation factor, the normalisation factor; /// is used , ie this = this + c1*factor*h1; /// Use the other TH1::Add function if you do not want this feature; ///; /// IMPORTANT NOTE3: You should be careful about the statistics of the; /// returned histogram, whose statistics may be binned or unbinned,; /// depending on whether c1 is negative, whether TAxis::kAxisRange is true,; /// and whether TH1::ResetStats has been called on either this or h1.; /// See TH1::GetStats.; ///; /// The function return kFALSE if the Add operation failed",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:1487,depend,depending,1487,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,1,['depend'],['depending']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Plot (project) PDF on specified frame. If a PDF is plotted in an empty frame, it; /// will show a unit normalized curve in the frame variable, taken at the present value; /// of other observables defined for this PDF.; ///; /// \param[in] frame pointer to RooPlot; /// \param[in] arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10 Ordered arguments; ///; /// If a PDF is plotted in a frame in which a dataset has already been plotted, it will; /// show a projected curve integrated over all variables that were present in the shown; /// dataset except for the one on the x-axis. The normalization of the curve will also; /// be adjusted to the event count of the plotted dataset. An informational message; /// will be printed for each projection step that is performed.; ///; /// This function takes the following named arguments; /// <table>; /// <tr><th><th> Projection control; /// <tr><td> `Slice(const RooArgSet& set)` <td> Override default projection behaviour by omitting observables listed; /// in set from the projection, i.e. by not integrating over these.; /// Slicing is usually only sensible in discrete observables, by e.g. creating a slice; /// of the PDF at the current value of the category observable.; ///; /// <tr><td> `Slice(RooCategory& cat, const char* label)` <td> Override default projection behaviour by omitting the specified category; /// observable from the projection, i.e., by not integrating over all states of this category.; /// The slice is positioned at the given label value. To pass multiple Slice() commands, please use the; /// Slice(std::map<RooCategory*, std::string> const&) argument explained below.; ///; /// <tr><td> `Slice(std::map<RooCategory*, std::string> const&)` <td> Omits multiple categories from the projection, as explianed above.; /// Can be used with initializer lists for convenience, e.g.; /// ```{.cpp}; /// pdf.plotOn(frame, Slice({{&tagCategory, ""2tag""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx:557,integrat,integrated,557,roofit/roofitcore/src/RooAbsReal.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx,2,"['integrat', 'message']","['integrated', 'message']"
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Plot (project) PDF on specified frame.; /// - If a PDF is plotted in an empty frame, it; /// will show a unit-normalized curve in the frame variable. When projecting a multi-; /// dimensional PDF onto the frame axis, hidden parameters are taken are taken at; /// their current value.; /// - If a PDF is plotted in a frame in which a dataset has already been plotted, it will; /// show a projection integrated over all variables that were present in the shown; /// dataset (except for the one on the x-axis). The normalization of the curve will; /// be adjusted to the event count of the plotted dataset. An informational message; /// will be printed for each projection step that is performed.; /// - If a PDF is plotted in a frame showing a dataset *after* a fit, the above happens,; /// but the PDF will be drawn and normalised only in the fit range. If this is not desired,; /// plotting and normalisation range can be overridden using Range() and NormRange() as; /// documented in the table below.; ///; /// This function takes the following named arguments (for more arguments, see also; /// RooAbsReal::plotOn(RooPlot*,const RooCmdArg&,const RooCmdArg&,const RooCmdArg&,const RooCmdArg&,; /// const RooCmdArg&,const RooCmdArg&,const RooCmdArg&,const RooCmdArg&,const RooCmdArg&,; /// const RooCmdArg&) const ); ///; ///; /// <table>; /// <tr><th> Type of argument <th> Controlling normalisation; /// <tr><td> `NormRange(const char* name)` <td> Calculate curve normalization w.r.t. specified range[s].; /// See the tutorial rf212_plottingInRanges_blinding.C; /// \note Setting a Range() by default also sets a NormRange() on the same range, meaning that the; /// PDF is plotted and normalised in the same range. Overriding this can be useful if the PDF was fit; /// in limited range[s] such as side bands, `NormRange(""sidebandLeft,sidebandRight"")`, but the PDF; /// should be drawn in the full range, `Range(""""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx:484,integrat,integrated,484,roofit/roofitcore/src/RooAbsPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx,2,"['integrat', 'message']","['integrated', 'message']"
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Populate set impSelSet with derived / dependant elements.; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveCaloData.cxx:124,depend,dependant,124,graf3d/eve/src/TEveCaloData.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveCaloData.cxx,2,['depend'],['dependant']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Populate set impSelSet with derived / dependant elements.; ///; /// If this is a REveProjectable, the projected replicas are added; /// to the set. Thus it does not have to be reimplemented for each; /// sub-class of REveProjected.; ///; /// Note that this also takes care of projections of REveCompound; /// class, which is also a projectable.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/src/REveElement.cxx:124,depend,dependant,124,graf3d/eve7/src/REveElement.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/src/REveElement.cxx,1,['depend'],['dependant']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Populate set impSelSet with derived / dependant elements.; ///; /// If this is a TEveProjectable, the projected replicas are added; /// to the set. Thus it does not have to be reimplemented for each; /// sub-class of TEveProjected.; ///; /// Note that this also takes care of projections of TEveCompound; /// class, which is also a projectable.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveElement.cxx:124,depend,dependant,124,graf3d/eve/src/TEveElement.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveElement.cxx,1,['depend'],['dependant']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Post information about the processed dataset(s). The information is taken; /// from the TDSet object 'dset' and integrated with the missing files; /// information in the list 'missing'. The string 'qid' is the uninque; /// ID of the query; 'begin' the starting time.; ///; /// The record is formatted for the table 'proofquerydsets'.; ///; /// There are two versions of this record, with or without the starting time.; /// The starting time could be looked up from the summary record, if available.; ///; /// The default version 1 corresponds to the table created with the following command:; ///; /// CREATE TABLE proofquerydsets (; /// id int(11) NOT NULL auto_increment,; /// dsn varchar(512) NOT NULL,; /// querytag varchar(64) NOT NULL,; /// querybegin datetime default NULL,; /// numfiles int(11) default NULL,; /// missfiles int(11) default NULL,; /// PRIMARY KEY (id),; /// KEY ix_querytag (querytag) );; ///; /// Version 0 corresponds to the table created with the following command:; /// (no 'querybegin'); ///; /// CREATE TABLE proofquerydsets (; /// id int(11) NOT NULL auto_increment,; /// dsn varchar(512) NOT NULL,; /// querytag varchar(64) NOT NULL,; /// numfiles int(11) default NULL,; /// missfiles int(11) default NULL,; /// PRIMARY KEY (id),; /// KEY ix_querytag (querytag) );; ///; /// The information is posted with a bulk insert.; ///; /// Returns 0 on success, -1 on failure.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofMonSenderSQL.cxx:198,integrat,integrated,198,proof/proofplayer/src/TProofMonSenderSQL.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofMonSenderSQL.cxx,1,['integrat'],['integrated']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Post information about the requested files. The information is taken; /// from the TDSet object 'dset' and integrated with the missing files; /// information in the list 'missing'. The string 'qid' is the unique; /// ID of the query; 'begin' the starting time.; ///; /// The record is formatted for the table 'proofqueryfiles'.; ///; /// There are two versions of this record, with or without the starting time.; /// The starting time could be looked up from the summary record, if available.; ///; /// The default version 1 corresponds to the table created with the following command:; ///; /// CREATE TABLE proofqueryfiles (; /// id int(11) NOT NULL auto_increment,; /// lfn varchar(255) NOT NULL,; /// path varchar(2048) NOT NULL,; /// querytag varchar(64) NOT NULL,; /// querybegin datetime default NULL,; /// status enum('Ok','Failed') NOT NULL default 'Ok',; /// PRIMARY KEY (id),; /// KEY ix_querytag (querytag) );; ///; /// Version 0 corresponds to the table created with the following command:; /// (no 'querybegin'); ///; /// CREATE TABLE proofqueryfiles (; /// id int(11) NOT NULL auto_increment,; /// lfn varchar(255) NOT NULL,; /// path varchar(2048) NOT NULL,; /// querytag varchar(64) NOT NULL,; /// status enum('Ok','Failed') NOT NULL default 'Ok',; /// PRIMARY KEY (id),; /// KEY ix_querytag (querytag) );; ///; /// The information is posted with a bulk insert.; ///; /// Returns 0 on success, -1 on failure.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofMonSenderSQL.cxx:193,integrat,integrated,193,proof/proofplayer/src/TProofMonSenderSQL.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofMonSenderSQL.cxx,1,['integrat'],['integrated']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Print all outstanding logged evaluation error on the given ostream. If maxPerNode; /// is zero, only the number of errors for each source (object with unique name) is listed.; /// If maxPerNode is greater than zero, up to maxPerNode detailed error messages are shown; /// per source of errors. A truncation message is shown if there were more errors logged; /// than shown.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx:334,message,messages,334,roofit/roofitcore/src/RooAbsReal.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx,2,['message'],"['message', 'messages']"
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Print arguments of formula, i.e. dependents that are actually used",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFormula.cxx:119,depend,dependents,119,roofit/roofitcore/src/RooFormula.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFormula.cxx,1,['depend'],['dependents']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Print configuration of message service. If ""v"" option is given also; /// inactive streams are listed",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMsgService.cxx:109,message,message,109,roofit/roofitcore/src/RooMsgService.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMsgService.cxx,1,['message'],['message']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Print description of object on ostream, printing contents set by contents integer,; /// which is interpreted as an OR of 'enum ContentsOptions' values and in the style; /// given by 'enum StyleOption'. Each message is prefixed by string 'indent' when printed",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPrintable.cxx:293,message,message,293,roofit/roofitcore/src/RooPrintable.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPrintable.cxx,1,['message'],['message']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Print error string depending on error code.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/auth/src/TAuthenticate.cxx:105,depend,depending,105,net/auth/src/TAuthenticate.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/auth/src/TAuthenticate.cxx,5,['depend'],['depending']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Print message of the day (in the file pointed by the env PROOFMOTD; /// or from fConfDir/etc/proof/motd). The motd is not shown more than; /// once a day. If the file pointed by env PROOFNOPROOF exists (or the; /// file fConfDir/etc/proof/noproof exists), show its contents and close; /// the connection.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:92,message,message,92,proof/proof/src/TProofServ.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx,1,['message'],['message']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Print one bin. If ""idx"" is != -1 use that to determine the bin,; /// otherwise (if ""idx"" == -1) use the coordinate in ""bin"".; /// If ""options"" contains:; /// - '0': only print bins with an error or content != 0; /// Return whether the bin was printed (depends on options)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/THnBase.cxx:338,depend,depends,338,hist/hist/src/THnBase.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/THnBase.cxx,1,['depend'],['depends']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Print predefined help message of classifier.; /// Iterate over methods and test.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/Factory.cxx:108,message,message,108,tmva/tmva/src/Factory.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/Factory.cxx,1,['message'],['message']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Print statistics for this message handler.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TMessageHandler.cxx:112,message,message,112,core/base/src/TMessageHandler.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TMessageHandler.cxx,1,['message'],['message']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Print welcome message.; /// Options are: kLogoWelcomeMsg, kIsometricWelcomeMsg, kLeanWelcomeMsg",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/Factory.cxx:100,message,message,100,tmva/tmva/src/Factory.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/Factory.cxx,1,['message'],['message']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Printing interface",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFormula.cxx:95,interface,interface,95,roofit/roofitcore/src/RooFormula.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFormula.cxx,3,['interface'],['interface']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Prints Warning messages; ///; /// - If COPT='W', CMES is a WARning message from CORG.; /// - If COPT='D', CMES is a DEBug message from CORG.; /// - If SET WARnings is in effect (the default), this routine; /// prints the warning message CMES coming from CORG.; /// - If SET NOWarnings is in effect, the warning message is; /// stored in a circular buffer of length kMAXMES.; /// - If called with CORG=CMES='SHO', it prints the messages in; /// the circular buffer, FIFO, and empties the buffer.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TMinuit.cxx:101,message,messages,101,math/minuit/src/TMinuit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TMinuit.cxx,7,"['message', 'rout']","['message', 'messages', 'routine']"
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Private function. Set the class version for the 'class' represented by; /// this TClass object. See the public interface:; /// ROOT::ResetClassVersion; /// defined in TClassTable.cxx; ///; /// Note on class version numbers:; /// - If no class number has been specified, TClass::GetVersion will return -1; /// - The Class Version 0 request the whole object to be transient; /// - The Class Version 1, unless specified via ClassDef indicates that the; /// I/O should use the TClass checksum to distinguish the layout of the class",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:197,interface,interface,197,core/meta/src/TClass.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx,1,['interface'],['interface']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Private helper function which will dispatch to; /// TObjectTable::AddObj.; /// Included here to avoid circular dependency between header files.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TObject.cxx:197,depend,dependency,197,core/base/src/TObject.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TObject.cxx,1,['depend'],['dependency']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Process GUI message - deferred back up to TGLSAViewer::ProcessFrameMessage()",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLSAFrame.cxx:98,message,message,98,graf3d/gl/src/TGLSAFrame.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLSAFrame.cxx,1,['message'],['message']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Process GUI message capture by the main GUI frame (TGLSAFrame).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLSAViewer.cxx:98,message,message,98,graf3d/gl/src/TGLSAViewer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLSAViewer.cxx,1,['message'],['message']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Process Message",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/x3d/src/TX3DFrame.cxx:94,Message,Message,94,graf3d/x3d/src/TX3DFrame.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/x3d/src/TX3DFrame.cxx,1,['Message'],['Message']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Process a message of type kPROOF_SUBMERGER",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:96,message,message,96,proof/proof/src/TProof.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx,1,['message'],['message']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Process as much of the input HTML as possible. Construct new; /// TGHtmlElement objects and appended them to the list. Return; /// the number of characters actually processed.; ///; /// This routine may invoke a callback procedure which could delete; /// the HTML widget.; ///; /// This routine is not reentrant for the same HTML widget. To; /// prevent reentrancy (during a callback), the p->fICol field is; /// set to a negative number. This is a flag to future invocations; /// not to reentry this routine. The p->fICol field is restored; /// before exiting, of course.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/guihtml/src/TGHtmlParse.cxx:277,rout,routine,277,gui/guihtml/src/TGHtmlParse.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/guihtml/src/TGHtmlParse.cxx,3,['rout'],['routine']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Process context menu messages.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGTextEdit.cxx:107,message,messages,107,gui/gui/src/TGTextEdit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGTextEdit.cxx,1,['message'],['messages']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Process dockable frame messages.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGDockableFrame.cxx:109,message,messages,109,gui/gui/src/TGDockableFrame.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGDockableFrame.cxx,1,['message'],['messages']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Process goto dialog widget messages.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGTextEditDialogs.cxx:113,message,messages,113,gui/gui/src/TGTextEditDialogs.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGTextEditDialogs.cxx,1,['message'],['messages']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Process input coming from the client or from the master server.; /// If 'all' is kFALSE, process only those messages that can be handled; /// during query processing.; /// Returns -1 if the message could not be processed, <-1 if something went; /// wrong. Returns 1 if the action may have changed the parallel state.; /// Returns 2 if the message has to be enqueued.; /// Returns 0 otherwise",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:194,message,messages,194,proof/proof/src/TProofServ.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx,3,['message'],"['message', 'messages']"
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Process message `mess`.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:94,message,message,94,hist/histpainter/src/THistPainter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx,1,['message'],['message']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Process message according to the user input.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/ged/src/TGedPatternSelect.cxx:94,message,message,94,gui/ged/src/TGedPatternSelect.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/ged/src/TGedPatternSelect.cxx,1,['message'],['message']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Process message dialog box event.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGMsgBox.cxx:94,message,message,94,gui/gui/src/TGMsgBox.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGMsgBox.cxx,1,['message'],['message']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Process message generated by pattern popup window.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/ged/src/TGedPatternSelect.cxx:94,message,message,94,gui/ged/src/TGedPatternSelect.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/ged/src/TGedPatternSelect.cxx,1,['message'],['message']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Process message id called by obj.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TROOT.cxx:94,message,message,94,core/base/src/TROOT.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TROOT.cxx,1,['message'],['message']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Process message.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLHistPainter.cxx:94,message,message,94,graf3d/gl/src/TGLHistPainter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLHistPainter.cxx,2,['message'],['message']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Process messages (GUI events) in the html widget.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/guihtml/src/TGHtmlForm.cxx:94,message,messages,94,gui/guihtml/src/TGHtmlForm.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/guihtml/src/TGHtmlForm.cxx,1,['message'],['messages']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Process messages MDI main frame.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGMdiMainFrame.cxx:94,message,messages,94,gui/gui/src/TGMdiMainFrame.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGMdiMainFrame.cxx,1,['message'],['messages']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Process messages according to the user input.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/ged/src/TGedMarkerSelect.cxx:94,message,messages,94,gui/ged/src/TGedMarkerSelect.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/ged/src/TGedMarkerSelect.cxx,1,['message'],['messages']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Process messages coming from widgets associated with the dialog.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/RootShower/SettingsDlg.cxx:94,message,messages,94,test/RootShower/SettingsDlg.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/RootShower/SettingsDlg.cxx,1,['message'],['messages']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Process messages for TG16ColorSelector.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGColorSelect.cxx:94,message,messages,94,gui/gui/src/TGColorSelect.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGColorSelect.cxx,1,['message'],['messages']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Process messages for TGColorPopup.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGColorSelect.cxx:94,message,messages,94,gui/gui/src/TGColorSelect.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGColorSelect.cxx,1,['message'],['messages']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Process messages for TGColorSelect.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGColorSelect.cxx:94,message,messages,94,gui/gui/src/TGColorSelect.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGColorSelect.cxx,1,['message'],['messages']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Process messages for fire button.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGNumberEntry.cxx:94,message,messages,94,gui/gui/src/TGNumberEntry.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGNumberEntry.cxx,1,['message'],['messages']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Process messages for new chain dialog.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/sessionviewer/src/TSessionDialogs.cxx:94,message,messages,94,gui/sessionviewer/src/TSessionDialogs.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/sessionviewer/src/TSessionDialogs.cxx,1,['message'],['messages']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Process messages for new query dialog.; /// Essentially used to navigate between text entry fields.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/sessionviewer/src/TSessionDialogs.cxx:94,message,messages,94,gui/sessionviewer/src/TSessionDialogs.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/sessionviewer/src/TSessionDialogs.cxx,1,['message'],['messages']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Process messages for session server frame.; /// Used to navigate between text entry fields.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/sessionviewer/src/TSessionViewer.cxx:94,message,messages,94,gui/sessionviewer/src/TSessionViewer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/sessionviewer/src/TSessionViewer.cxx,1,['message'],['messages']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Process messages for the color selection dialog.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGColorDialog.cxx:94,message,messages,94,gui/gui/src/TGColorDialog.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGColorDialog.cxx,1,['message'],['messages']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Process messages for title bar.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGMdiDecorFrame.cxx:94,message,messages,94,gui/gui/src/TGMdiDecorFrame.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGMdiDecorFrame.cxx,1,['message'],['messages']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Process messages for upload dataset dialog.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/sessionviewer/src/TSessionDialogs.cxx:94,message,messages,94,gui/sessionviewer/src/TSessionDialogs.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/sessionviewer/src/TSessionDialogs.cxx,1,['message'],['messages']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Process messages generated by pattern popup window.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/ged/src/TGedPatternSelect.cxx:94,message,messages,94,gui/ged/src/TGedPatternSelect.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/ged/src/TGedPatternSelect.cxx,1,['message'],['messages']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Process messages generated by popup window.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/ged/src/TGedPatternSelect.cxx:94,message,messages,94,gui/ged/src/TGedPatternSelect.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/ged/src/TGedPatternSelect.cxx,1,['message'],['messages']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Process messages generated by the listbox and forward; /// messages to the combobox message handling window. Parm2 contains; /// the id of the selected listbox entry.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGComboBox.cxx:94,message,messages,94,gui/gui/src/TGComboBox.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGComboBox.cxx,3,['message'],"['message', 'messages']"
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Process messages generated by the listbox container and forward; /// messages to the listbox message handling window.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGListBox.cxx:94,message,messages,94,gui/gui/src/TGListBox.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGListBox.cxx,3,['message'],"['message', 'messages']"
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Process messages generated by the marker popup window.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/ged/src/TGedMarkerSelect.cxx:94,message,messages,94,gui/ged/src/TGedMarkerSelect.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/ged/src/TGedMarkerSelect.cxx,1,['message'],['messages']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Process messages generated by the user input in the file dialog.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGFileDialog.cxx:94,message,messages,94,gui/gui/src/TGFileDialog.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGFileDialog.cxx,1,['message'],['messages']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Process messages sent to this dialog.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/RootShower/RSAbout.cxx:94,message,messages,94,test/RootShower/RSAbout.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/RootShower/RSAbout.cxx,2,['message'],['messages']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Process pending events (GUI, timers, sockets). Returns the result of; /// TROOT::IsInterrupted(). The interrupt flag (TROOT::SetInterrupt()); /// can be set during the handling of the events. This mechanism allows; /// macros running in tight calculating loops to be interrupted by some; /// GUI event (depending on the interval with which this method is; /// called). For example hitting ctrl-c in a canvas will set the; /// interrupt flag.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx:389,depend,depending,389,core/base/src/TSystem.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx,1,['depend'],['depending']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Process print dialog widget messages.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGTextEditDialogs.cxx:114,message,messages,114,gui/gui/src/TGTextEditDialogs.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGTextEditDialogs.cxx,1,['message'],['messages']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Process scrollbar messages.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGView.cxx:104,message,messages,104,gui/gui/src/TGView.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGView.cxx,1,['message'],['messages']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Process search dialog widget messages.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGTextEditDialogs.cxx:115,message,messages,115,gui/gui/src/TGTextEditDialogs.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGTextEditDialogs.cxx,1,['message'],['messages']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Process single http request; ///; /// Depending from requested path and filename different actions will be performed.; /// In most cases information is provided by TRootSniffer class",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/src/THttpServer.cxx:124,Depend,Depending,124,net/http/src/THttpServer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/src/THttpServer.cxx,1,['Depend'],['Depending']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Process the up/down button messages. If fButtonToNum is false the; /// following message is sent: kC_COMMAND, kCM_BUTTON, widget id, param; /// param % 100 is the step size; /// param % 10000 / 100 != 0 indicates log step; /// param / 10000 != 0 indicates button down",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGNumberEntry.cxx:113,message,messages,113,gui/gui/src/TGNumberEntry.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGNumberEntry.cxx,2,['message'],"['message', 'messages']"
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Project a 3-D profile into a 2D-profile histogram depending on the option parameter.; ///; /// option may contain a combination of the characters x,y,z:; ///; /// - option = ""xy"" return the x versus y projection into a TProfile2D histogram; /// - option = ""yx"" return the y versus x projection into a TProfile2D histogram; /// - option = ""xz"" return the x versus z projection into a TProfile2D histogram; /// - option = ""zx"" return the z versus x projection into a TProfile2D histogram; /// - option = ""yz"" return the y versus z projection into a TProfile2D histogram; /// - option = ""zy"" return the z versus y projection into a TProfile2D histogram; ///; /// NB: the notation ""a vs b"" means ""a"" vertical and ""b"" horizontal along X; ///; /// The resulting profile contains the combination of all the considered bins along X; /// By default, all bins are included considering also underflow/overflows; ///; /// The option can also be used to specify the projected profile error type.; /// Values which can be used are 's', 'i', or 'g'. See TProfile::BuildOptions for details; ///; /// To select a bin range along an axis, use TAxis::SetRange, eg; /// `h3.GetYaxis()->SetRange(23,56);`",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TProfile3D.cxx:136,depend,depending,136,hist/hist/src/TProfile3D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TProfile3D.cxx,1,['depend'],['depending']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Project a 3-d histogram into 1 or 2-d histograms depending on the; /// option parameter, which may contain a combination of the characters x,y,z,e; /// - option = ""x"" return the x projection into a TH1D histogram; /// - option = ""y"" return the y projection into a TH1D histogram; /// - option = ""z"" return the z projection into a TH1D histogram; /// - option = ""xy"" return the x versus y projection into a TH2D histogram; /// - option = ""yx"" return the y versus x projection into a TH2D histogram; /// - option = ""xz"" return the x versus z projection into a TH2D histogram; /// - option = ""zx"" return the z versus x projection into a TH2D histogram; /// - option = ""yz"" return the y versus z projection into a TH2D histogram; /// - option = ""zy"" return the z versus y projection into a TH2D histogram; ///; /// NB: the notation ""a vs b"" means ""a"" vertical and ""b"" horizontal; ///; /// option = ""o"" original axis range of the target axes will be; /// kept, but only bins inside the selected range will be filled.; ///; /// If option contains the string ""e"", errors are computed; ///; /// The projection is made for the selected bins only.; /// To select a bin range along an axis, use TAxis::SetRange, eg; /// h3.GetYaxis()->SetRange(23,56);; ///; /// NOTE 1: The generated histogram is named th3name + option; /// eg if the TH3* h histogram is named ""myhist"", then; /// h->Project3D(""xy""); produces a TH2D histogram named ""myhist_xy""; /// if a histogram of the same type already exists, it is overwritten.; /// The following sequence; /// h->Project3D(""xy"");; /// h->Project3D(""xy2"");; /// will generate two TH2D histograms named ""myhist_xy"" and ""myhist_xy2""; /// A different name can be generated by attaching a string to the option; /// For example h->Project3D(""name_xy"") will generate an histogram with the name: h3dname_name_xy.; ///; /// NOTE 2: If an histogram of the same type and with the same name already",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH3.cxx:135,depend,depending,135,hist/hist/src/TH3.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH3.cxx,1,['depend'],['depending']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Project a 3-d histogram into a 2-d profile histograms depending; /// on the option parameter; /// option may contain a combination of the characters x,y,z; /// option = ""xy"" return the x versus y projection into a TProfile2D histogram; /// option = ""yx"" return the y versus x projection into a TProfile2D histogram; /// option = ""xz"" return the x versus z projection into a TProfile2D histogram; /// option = ""zx"" return the z versus x projection into a TProfile2D histogram; /// option = ""yz"" return the y versus z projection into a TProfile2D histogram; /// option = ""zy"" return the z versus y projection into a TProfile2D histogram; /// NB: the notation ""a vs b"" means ""a"" vertical and ""b"" horizontal; ///; /// option = ""o"" original axis range of the target axes will be; /// kept, but only bins inside the selected range will be filled.; ///; /// The projection is made for the selected bins only.; /// To select a bin range along an axis, use TAxis::SetRange, eg; /// h3.GetYaxis()->SetRange(23,56);; ///; /// NOTE 1: The generated histogram is named th3name + ""_p"" + option; /// eg if the TH3* h histogram is named ""myhist"", then; /// h->Project3D(""xy""); produces a TProfile2D histogram named ""myhist_pxy"".; /// The following sequence; /// h->Project3DProfile(""xy"");; /// h->Project3DProfile(""xy2"");; /// will generate two TProfile2D histograms named ""myhist_pxy"" and ""myhist_pxy2""; /// So, passing additional characters in the option string one can customize the name.; ///; /// NOTE 2: If a profile of the same type already exists with compatible axes,; /// the profile is reset and filled again with the projected contents of the TH3.; /// In the case of axes incompatibility, an error is reported and a NULL pointer is returned.; ///; /// NOTE 3: The number of entries in the projected profile is estimated from the number of; /// effective entries for all the cells included in the projection.; ///; /// ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH3.cxx:140,depend,depending,140,hist/hist/src/TH3.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH3.cxx,1,['depend'],['depending']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Projects a 2-d graph into 1 or 2-d histograms depending on the option parameter.; /// option may contain a combination of the characters x,y,z:; ///; /// - option = ""x"" return the x projection into a TH1D histogram; /// - option = ""y"" return the y projection into a TH1D histogram; /// - option = ""xy"" return the x versus y projection into a TH2D histogram; /// - option = ""yx"" return the y versus x projection into a TH2D histogram",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraph2D.cxx:132,depend,depending,132,hist/hist/src/TGraph2D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraph2D.cxx,1,['depend'],['depending']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Propagate visualization parameters to dependent elements.; ///; /// MainColor is propagated independently in SetMainColor().; /// In this case, as fMainColor is a pointer to Color_t, it should; /// be set in TProperClass::CopyVizParams().; ///; /// Render state is not propagated. Maybe it should be, at least optionally.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveElement.cxx:124,depend,dependent,124,graf3d/eve/src/TEveElement.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveElement.cxx,2,['depend'],['dependent']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Protected, common message dialog box initialization.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGMsgBox.cxx:104,message,message,104,gui/gui/src/TGMsgBox.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGMsgBox.cxx,1,['message'],['message']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Provides access to the wrapped tbb::task_arena.; ////////////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/imt/src/RTaskArena.cxx:109,wrap,wrapped,109,core/imt/src/RTaskArena.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/src/RTaskArena.cxx,1,['wrap'],['wrapped']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// REveMagField; /// Abstract interface to magnetic field; ////////////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/inc/ROOT/REveTrackPropagator.hxx:113,interface,interface,113,graf3d/eve7/inc/ROOT/REveTrackPropagator.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/inc/ROOT/REveTrackPropagator.hxx,1,['interface'],['interface']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// REveMagFieldConst; /// Interface to constant magnetic field.; ////////////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/inc/ROOT/REveTrackPropagator.hxx:109,Interface,Interface,109,graf3d/eve7/inc/ROOT/REveTrackPropagator.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/inc/ROOT/REveTrackPropagator.hxx,1,['Interface'],['Interface']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// REveMagFieldDuo; /// Interface to magnetic field with two different values depending on radius.; ////////////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/inc/ROOT/REveTrackPropagator.hxx:107,Interface,Interface,107,graf3d/eve7/inc/ROOT/REveTrackPropagator.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/inc/ROOT/REveTrackPropagator.hxx,2,"['Interface', 'depend']","['Interface', 'depending']"
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// REveRefCnt; /// REveRefCnt base-class (interface); ////////////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/inc/ROOT/REveUtil.hxx:125,interface,interface,125,graf3d/eve7/inc/ROOT/REveUtil.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/inc/ROOT/REveUtil.hxx,1,['interface'],['interface']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// REveVectorF wrapper.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/src/REveTrackPropagator.cxx:98,wrap,wrapper,98,graf3d/eve7/src/REveTrackPropagator.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/src/REveTrackPropagator.cxx,4,['wrap'],['wrapper']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// RFIO protocol (no longer supported by ROOT)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/rpdutils/src/rpdutils.cxx:91,protocol,protocol,91,net/rpdutils/src/rpdutils.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/rpdutils/src/rpdutils.cxx,1,['protocol'],['protocol']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Read TObject data members from JSON.; /// Do not call TObject::Streamer() to avoid special tweaking of TBufferJSON interface",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TBufferJSON.cxx:201,interface,interface,201,io/io/src/TBufferJSON.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TBufferJSON.cxx,1,['interface'],['interface']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Read a buffer from the file at the offset 'pos' in the file.; ///; /// Returns kTRUE in case of failure.; /// Compared to ReadBuffer(char*, Int_t), this routine does _not_; /// change the cursor on the physical file representation (fD); /// if the data is in this TFile's cache.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TFile.cxx:239,rout,routine,239,io/io/src/TFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TFile.cxx,1,['rout'],['routine']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Read given list of ascii files, and construct a data set, using the given; /// ArgList as structure definition.; /// \param fileList Multiple file names, comma separated. Each; /// file is optionally prefixed with 'commonPath' if such a path is; /// provided; ///; /// \param varList Specify the dimensions of the dataset to be built.; /// This list describes the order in which these dimensions appear in the; /// ascii files to be read.; /// Each line in the ascii file should contain N white-space separated; /// tokens, with N the number of args in `varList`. Any text beyond; /// N tokens will be ignored with a warning message.; /// (NB: This is the default output of RooArgList::writeToStream()); ///; /// \param verbOpt `Q` be quiet, `D` debug mode (verbose); ///; /// \param commonPath All filenames in `fileList` will be prefixed with this optional path.; ///; /// \param indexCatName Interpret the data as belonging to category `indexCatName`.; /// When multiple files are read, a RooCategory arg in `varList` can; /// optionally be designated to hold information about the source file; /// of each data point. This feature is enabled by giving the name; /// of the (already existing) category variable in `indexCatName`.; ///; /// \attention If the value of any of the variables on a given line exceeds the; /// fit range associated with that dimension, the entire line will be; /// ignored. A warning message is printed in each case, unless the; /// `Q` verbose option is given. The number of events read and skipped; /// is always summarized at the end.; ///; /// If no further information is given a label name 'fileNNN' will; /// be assigned to each event, where NNN is the sequential number of; /// the source file in `fileList`.; ///; /// Alternatively, it is possible to override the default label names; /// of the index category by specifying them in the fileList string:; /// When instead of `",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx:711,message,message,711,roofit/roofitcore/src/RooDataSet.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx,1,['message'],['message']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Read image HDU as a histogram. Return 0 if conversion cannot be done.; /// The returned object can be TH1D, TH2D or TH3D depending on data dimensionality.; /// Please, check condition (returnedValue->IsA() == TH*D::%Class()) to; /// determine the object class.; ///; /// NOTE: do not confuse with image histogram! This function interprets; /// the array as a histogram. It does not compute the histogram of pixel; /// values of an image! Here ""pixels"" are interpreted as number of entries.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/fitsio/src/TFITS.cxx:207,depend,depending,207,graf2d/fitsio/src/TFITS.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/fitsio/src/TFITS.cxx,1,['depend'],['depending']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Read specified byte range from remote file via HTTP 1.0 daemon (without; /// mod-root installed). This routine connects to the remote host, sends the; /// request and returns the buffer. Returns kTRUE in case of error.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TWebFile.cxx:189,rout,routine,189,net/net/src/TWebFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TWebFile.cxx,1,['rout'],['routine']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Read specified byte range from remote file via HTTP daemon. This; /// routine connects to the remote host, sends the request and returns; /// the buffer. Returns kTRUE in case of error.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TWebFile.cxx:156,rout,routine,156,net/net/src/TWebFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TWebFile.cxx,2,['rout'],['routine']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Read the binary tree from an input stream.; /// The input stream format depends on the tree type,; /// it is defined be the node of the tree",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/BinaryTree.cxx:158,depend,depends,158,tmva/tmva/src/BinaryTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/BinaryTree.cxx,1,['depend'],['depends']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Read the contents of the argset in ASCII form from given stream.; ///; /// The stream is read to end-of-file and each line is assumed to be; /// of the form; /// \code; /// <argName> = <argValue>; /// \endcode; /// Lines starting with argNames not matching any element in the list; /// will be ignored with a warning message. In addition limited C++ style; /// preprocessing and flow control is provided. The following constructions; /// are recognized:; /// \code; /// include ""include.file""; /// \endcode; /// Include given file, recursive inclusion OK; /// \code; /// if (<boolean_expression>); /// <name> = <value>; /// ....; /// else if (<boolean_expression>); /// ....; /// else; /// ....; /// endif; /// \endcode; ///; /// All expressions are evaluated by RooFormula, and may involve any of; /// the sets variables.; /// \code; /// echo <Message>; /// \endcode; /// Print console message while reading from stream; /// \code; /// abort; /// \endcode; /// Force termination of read sequence with error status; ///; /// The value of each argument is read by the arguments readFromStream; /// function.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooArgSet.cxx:403,message,message,403,roofit/roofitcore/src/RooArgSet.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooArgSet.cxx,3,"['Message', 'message']","['Message', 'message']"
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Read the list of special protocols from the rootrc files.; /// These protocols will be parsed in a protocol and a file part,; /// no host or other info will be determined. This is typically; /// used for legacy file descriptions like: file:/path/file.root.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TUrl.cxx:111,protocol,protocols,111,core/base/src/TUrl.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TUrl.cxx,3,['protocol'],"['protocol', 'protocols']"
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Recall TBuffer function to avoid gcc warning message",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TBufferJSON.cxx:131,message,message,131,io/io/src/TBufferJSON.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TBufferJSON.cxx,2,['message'],['message']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Receive a TMessage object. The user must delete the TMessage object.; /// Returns length of message in bytes (can be 0 if other side of connection; /// is closed) or -1 in case of error or -4 in case a non-blocking socket would; /// block (i.e. there is nothing to be read). In those case mess == 0.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TPSocket.cxx:178,message,message,178,net/net/src/TPSocket.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TPSocket.cxx,1,['message'],['message']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Receive a TMessage object. The user must delete the TMessage object.; /// Returns length of message in bytes (can be 0 if other side of connection; /// is closed) or -1 in case of error or -4 in case a non-blocking socket; /// would block (i.e. there is nothing to be read) or -5 if pipe broken; /// or reset by peer (EPIPE || ECONNRESET). In those case mess == 0.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TSocket.cxx:178,message,message,178,net/net/src/TSocket.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TSocket.cxx,2,['message'],['message']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Receive a buffer. Returns the newly allocated buffer, the length; /// of the buffer and message type in kind.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/rpdutils/src/DaemonUtils.cxx:174,message,message,174,net/rpdutils/src/DaemonUtils.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/rpdutils/src/DaemonUtils.cxx,2,['message'],['message']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Receive a character string message of maximum max length. Returns in; /// kind the message type. Returns length of received string+4 (can be 0 if; /// other side of connection is closed) or -1 in case of error or -4 in; /// case a non-blocking socket would block (i.e. there is nothing to be read).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TSocket.cxx:113,message,message,113,net/net/src/TSocket.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TSocket.cxx,4,['message'],['message']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Receive a character string message of maximum max length. The expected; /// message must be of type kMESS_STRING. Returns length of received string; /// (can be 0 if otherside of connection is closed) or -1 in case of error; /// or -4 in case a non-blocking socket would block (i.e. there is nothing; /// to be read).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TSocket.cxx:113,message,message,113,net/net/src/TSocket.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TSocket.cxx,4,['message'],['message']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Receive a message containing process ids. In case the message contains; /// process ids they are imported, the message will be deleted and the; /// method returns kTRUE.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TSocket.cxx:96,message,message,96,net/net/src/TSocket.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TSocket.cxx,6,['message'],['message']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Receive a message containing streamer infos. In case the message contains; /// streamer infos they are imported, the message will be deleted and the; /// method returns kTRUE.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TSocket.cxx:96,message,message,96,net/net/src/TSocket.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TSocket.cxx,6,['message'],['message']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Receive a string of maximum len length. Returns message type in kind.; /// Return value is msg length.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/rpdutils/src/DaemonUtils.cxx:134,message,message,134,net/rpdutils/src/DaemonUtils.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/rpdutils/src/DaemonUtils.cxx,2,['message'],['message']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Receive a typed message; /// Return:; /// 0 if OK; /// -1 if invalid descriptor; /// -2 if failed to acquire mutex lock; /// -3 if failed to receive the full message (the partial message; /// is stored in 'msg')",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/rpdutils/src/rpdconn.cxx:102,message,message,102,net/rpdutils/src/rpdconn.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/rpdutils/src/rpdconn.cxx,3,['message'],['message']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Receives a status and a message type. Returns length of received; /// integers, 2*sizeof(Int_t) (can be 0 if other side of connection; /// is closed) or -1 in case of error or -4 in case a non-blocking; /// socket would block (i.e. there is nothing to be read).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TSocket.cxx:110,message,message,110,net/net/src/TSocket.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TSocket.cxx,2,['message'],['message']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Receives client protocol and returns daemon protocol.; /// Returns: 0 if ok; /// -1 if any error occured; /// -2 if special action (e.g. cleanup): no need to continue",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/rpdutils/src/rpdutils.cxx:102,protocol,protocol,102,net/rpdutils/src/rpdutils.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/rpdutils/src/rpdutils.cxx,2,['protocol'],['protocol']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Recombines the dataset. The precise semantics depend on the actual split.; ///; /// Similar to the inverse operation of `MakeKFoldDataSet` but _will_ differ.; /// See documentation for each particular split for more information.; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/DataLoader.cxx:132,depend,depend,132,tmva/tmva/src/DataLoader.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/DataLoader.cxx,1,['depend'],['depend']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Reconstruct the formula expression from the internal TFormula member variables; ///; /// This function uses the internal member variables of TFormula to; /// construct the mathematical expression associated with the TFormula; /// instance. This function can be used to get an expanded version of the; /// expression originally assigned to the TFormula instance, i.e. that; /// the string returned by GetExpFormula() doesn't depend on other; /// TFormula object names.; ///; /// if option contains ""p"" the returned string will contain the formula; /// expression with symbolic parameters, eg [0] replaced by the actual value; /// of the parameter. Example:; /// if expression in formula is: ""[0]*(x>-[1])+[2]*exp(-[3]*x)""; /// and parameters are 3.25,-4.01,4.44,-0.04, GetExpFormula(""p"") will return:; /// ""(3.25*(x>+4.01))+(4.44*exp(+0.04*x))""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TFormula_v5.cxx:510,depend,depend,510,hist/hist/src/TFormula_v5.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TFormula_v5.cxx,1,['depend'],['depend']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Recv message; /// Return:; /// 0 if OK; /// -1 if invalid descriptor; /// -2 if failed to acquire mutex lock",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/rpdutils/src/rpdconn.cxx:91,message,message,91,net/rpdutils/src/rpdconn.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/rpdutils/src/rpdconn.cxx,1,['message'],['message']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Register all known integrators by calling; /// their static registration functions",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntFactory.cxx:105,integrat,integrators,105,roofit/roofitcore/src/RooNumIntFactory.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntFactory.cxx,1,['integrat'],['integrators']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Register another RooAbsArg as a server to us, ie, declare that; /// we depend on it.; /// \param server The server to be registered.; /// \param valueProp In addition to the basic client-server relationship, declare dependence on the server's value.; /// \param shapeProp In addition to the basic client-server relationship, declare dependence on the server's shape.; /// \param refCount Optionally add with higher reference count (if multiple components depend on it)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsArg.cxx:157,depend,depend,157,roofit/roofitcore/src/RooAbsArg.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsArg.cxx,4,['depend'],"['depend', 'dependence']"
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Register command which can be executed from web interface; ///; /// As method one typically specifies string, which is executed with; /// gROOT->ProcessLine() method. For instance:; ///; /// serv->RegisterCommand(""Invoke"",""InvokeFunction()"");; ///; /// Or one could specify any method of the object which is already registered; /// to the server. For instance:; ///; /// serv->Register(""/"", hpx);; /// serv->RegisterCommand(""/ResetHPX"", ""/hpx/->Reset()"");; ///; /// Here symbols '/->' separates item name from method to be executed; ///; /// One could specify additional arguments in the command with; /// syntax like %arg1%, %arg2% and so on. For example:; ///; /// serv->RegisterCommand(""/ResetHPX"", ""/hpx/->SetTitle(\""%arg1%\"")"");; /// serv->RegisterCommand(""/RebinHPXPY"", ""/hpxpy/->Rebin2D(%arg1%,%arg2%)"");; ///; /// Such parameter(s) will be requested when command clicked in the browser.; ///; /// Once command is registered, one could specify icon which will appear in the browser:; ///; /// serv->SetIcon(""/ResetHPX"", ""rootsys/icons/ed_execute.png"");; ///; /// One also can set extra property '_fastcmd', that command appear as; /// tool button on the top of the browser tree:; ///; /// serv->SetItemField(""/ResetHPX"", ""_fastcmd"", ""true"");; ///; /// Or it is equivalent to specifying extra argument when register command:; ///; /// serv->RegisterCommand(""/ResetHPX"", ""/hpx/->Reset()"", ""button;rootsys/icons/ed_delete.png"");",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/src/THttpServer.cxx:134,interface,interface,134,net/http/src/THttpServer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/src/THttpServer.cxx,2,['interface'],['interface']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Register object associated with given name and given associated parameters with given values in cache.; /// The cache will take _ownership_of_object_ and is indexed under the given name (which does not; /// need to be the name of cacheObject and with given set of dependent parameters with validity for the; /// current values of those parameters. It can be retrieved later by callin retrieveObject()",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooExpensiveObjectCache.cxx:350,depend,dependent,350,roofit/roofitcore/src/RooExpensiveObjectCache.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooExpensiveObjectCache.cxx,1,['depend'],['dependent']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Register value as a temporary, extending its lifetime to that of the; /// interpreter. This is needed for TCling's compatibility interfaces; /// returning long - the address of the temporary objects.; /// As such, ""simple"" types don't need to be stored; they are returned by; /// value; only pointers / references / objects need to be stored.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:215,interface,interfaces,215,core/metacling/src/TCling.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx,1,['interface'],['interfaces']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Release ownership of any allocated objects.; ///; /// Note: This interface was added so that clone trees could; /// be told they do not own the allocated objects.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TBranchElement.cxx:151,interface,interface,151,tree/tree/src/TBranchElement.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TBranchElement.cxx,1,['interface'],['interface']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Remove a class from the list and map of classes.; /// This routine is deprecated, use TClass::RemoveClass directly.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TROOT.cxx:145,rout,routine,145,core/base/src/TROOT.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TROOT.cxx,1,['rout'],['routine']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Remove all (key,value) pairs from the map. The keys/values are; /// deleted depending on the state of key-ownership (SetOwner()) and; /// value-ownership (SetOwnerValue()).; ///; /// To delete these objects regardless of the ownership state use:; /// - Delete() to delete only keys;; /// - DeleteValues() to delete only values;; /// - DeleteAll() to delete both keys and values.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TMap.cxx:162,depend,depending,162,core/cont/src/TMap.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TMap.cxx,1,['depend'],['depending']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Remove el as dependent element.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveProjectionManager.cxx:99,depend,dependent,99,graf3d/eve/src/TEveProjectionManager.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveProjectionManager.cxx,2,['depend'],['dependent']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Remove the specialized numeric integration configuration associated; /// with this object",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx:117,integrat,integration,117,roofit/roofitcore/src/RooAbsReal.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx,1,['integrat'],['integration']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Remove this message handler from the list of messages handlers.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TMessageHandler.cxx:98,message,message,98,core/base/src/TMessageHandler.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TMessageHandler.cxx,2,['message'],"['message', 'messages']"
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Replace all direct servers of this object with the new servers in `newServerList`.; /// This substitutes objects that we receive values from with new objects that have the same name.; /// \see recursiveRedirectServers() Use recursive version if servers that are only indirectly serving this object should be replaced as well.; /// \see redirectServers() If only the direct servers of an object need to be replaced.; ///; /// Note that changing the types of objects is generally allowed, but can be wrong if the interface of an object changes.; /// For example, one can reparametrise a model by substituting a variable with a function:; /// \f[; /// f(x\, |\, a) = a \cdot x \rightarrow f(x\, |\, b) = (2.1 \cdot b) \cdot x; /// \f]; /// If an object, however, expects a PDF, and this is substituted with a function that isn't normalised, wrong results might be obtained; /// or it might even crash the program. The types of the objects being substituted are not checked.; ///; /// \param[in] newSetOrig Set of new servers that should be used instead of the current servers.; /// \param[in] mustReplaceAll A warning is printed and error status is returned if not all servers could be; /// substituted successfully.; /// \param[in] nameChange If false, an object named ""x"" is only replaced with an object also named ""x"" in `newSetOrig`.; /// If the object in `newSet` is called differently, set `nameChange` to true and use setAttribute() on the x object:; /// ```; /// objectToReplaceX.setAttribute(""ORIGNAME:x""); /// ```; /// Now, the renamed object will be selected based on the attribute ""ORIGNAME:<name>"".; /// \param[in] isRecursionStep Internal switch used when called from recursiveRedirectServers().",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsArg.cxx:597,interface,interface,597,roofit/roofitcore/src/RooAbsArg.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsArg.cxx,1,['interface'],['interface']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Replace contents of this histogram by the addition of h1 and h2.; ///; /// `this = c1*h1 + c2*h2`; /// if errors are defined (see TH1::Sumw2), errors are also recalculated; ///; /// Note that if h1 or h2 have Sumw2 set, Sumw2 is automatically called for this; /// if not already set.; ///; /// Note also that adding histogram with labels is not supported, histogram will be; /// added merging them by bin number independently of the labels.; /// For adding histogram ith labels one should use TH1::Merge; ///; /// SPECIAL CASE (Average/Efficiency histograms); /// For histograms representing averages or efficiencies, one should compute the average; /// of the two histograms and not the sum. One can mark a histogram to be an average; /// histogram by setting its bit kIsAverage with; /// myhist.SetBit(TH1::kIsAverage);; /// Note that the two histograms must have their kIsAverage bit set; ///; /// IMPORTANT NOTE: If you intend to use the errors of this histogram later; /// you should call Sumw2 before making this operation.; /// This is particularly important if you fit the histogram after TH1::Add; ///; /// IMPORTANT NOTE2: You should be careful about the statistics of the; /// returned histogram, whose statistics may be binned or unbinned,; /// depending on whether c1 is negative, whether TAxis::kAxisRange is true,; /// and whether TH1::ResetStats has been called on either this or h1.; /// See TH1::GetStats.; ///; /// ANOTHER SPECIAL CASE : h1 = h2 and c2 < 0; /// do a scaling this = c1 * h1 / (bin Volume); ///; /// The function returns kFALSE if the Add operation failed",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:1343,depend,depending,1343,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,1,['depend'],['depending']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Replace server nodes with names matching the dataset variable names; /// with those data set variables, making this PDF directly dependent on the dataset",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsArg.cxx:215,depend,dependent,215,roofit/roofitcore/src/RooAbsArg.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsArg.cxx,1,['depend'],['dependent']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Replace server nodes with names matching the dataset variable names; /// with those data set variables, making this PDF directly dependent on the dataset.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsArg.cxx:215,depend,dependent,215,roofit/roofitcore/src/RooAbsArg.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsArg.cxx,1,['depend'],['dependent']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Reposition the read pointer in the log file to the very end.; /// This allows to ""hide"" useful debug messages during normal operations; /// while preserving the possibility to have them in case of problems.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:187,message,messages,187,proof/proof/src/TProofServ.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx,1,['message'],['messages']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Reset error counter to given value, limiting the number; /// of future error messages for this pdf to 'resetValue'",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx:163,message,messages,163,roofit/roofitcore/src/RooAbsPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx,3,['message'],['messages']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Reset the hashtable iterator. Either to beginning or end, depending on; /// the initial iteration direction.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/THashTable.cxx:144,depend,depending,144,core/cont/src/THashTable.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/THashTable.cxx,1,['depend'],['depending']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Reset the iterator on the messages.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TStatus.cxx:112,message,messages,112,proof/proofplayer/src/TStatus.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TStatus.cxx,1,['message'],['messages']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Reset the message buffer so we can use (i.e. fill) it again.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TMessage.cxx:96,message,message,96,net/net/src/TMessage.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TMessage.cxx,1,['message'],['message']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Reset trace counter to given value, limiting the; /// number of future trace messages for this pdf to 'value'",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx:163,message,messages,163,roofit/roofitcore/src/RooAbsPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx,1,['message'],['messages']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Resolve the file type as a function of the protocol field in 'name'; ///; /// If defined, the string 'prefix' is added when testing the locality of; /// a 'name' with network-like structure (i.e. root://host//path); if the file; /// is local, on return 'prefix' will contain the actual local path of the file.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TFile.cxx:129,protocol,protocol,129,io/io/src/TFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TFile.cxx,1,['protocol'],['protocol']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Restore last saved state of message service",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMsgService.cxx:114,message,message,114,roofit/roofitcore/src/RooMsgService.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMsgService.cxx,1,['message'],['message']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Retrieve cache element for the computation of the PDF normalisation.; /// \param[in] nset Current normalisation set (integration over these variables yields 1).; /// \param[in] iset Integration set. Variables to be integrated over (if integrations are performed).; ///; /// If a cache element does not exist, create and fill it on the fly. The cache also contains; /// - Supplemental normalization terms (in case not all added p.d.f.s have the same observables); /// - Projection integrals to calculate transformed fraction coefficients when a frozen reference frame is provided; /// - Projection integrals for similar transformations when a frozen reference range is provided.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAddPdf.cxx:203,integrat,integration,203,roofit/roofitcore/src/RooAddPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAddPdf.cxx,4,"['Integrat', 'integrat']","['Integration', 'integrated', 'integration', 'integrations']"
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Retrieve cache element with for calculation of p.d.f value with normalization set nset and integrated over iset; /// in range 'rangeName'. If cache element does not exist, create and fill it on the fly. The cache contains; /// suplemental normalization terms (in case not all added p.d.f.s have the same observables), projection; /// integrals to calculated transformed fraction coefficients when a frozen reference frame is provided; /// and projection integrals for similar transformations when a frozen reference range is provided.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAddModel.cxx:177,integrat,integrated,177,roofit/roofitcore/src/RooAddModel.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAddModel.cxx,1,['integrat'],['integrated']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Retrieve cache object associated with given choice of observables. If cache object; /// does not exist, create and fill and register it on the fly. If recalculate=false; /// recalculation of cache contents of existing caches that are marked dirty due to; /// dependent parameter changes is suppressed.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsCachedPdf.cxx:345,depend,dependent,345,roofit/roofitcore/src/RooAbsCachedPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsCachedPdf.cxx,1,['depend'],['dependent']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Retrieve configuration information specific to integrator with given name",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenConfig.cxx:133,integrat,integrator,133,roofit/roofitcore/src/RooNumGenConfig.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenConfig.cxx,2,['integrat'],['integrator']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Return 2 random numbers following this function shape; ///; /// The distribution contained in this TF2 function is integrated; /// over the cell contents.; /// It is normalized to 1.; /// Getting the two random numbers implies:; /// - Generating a random number between 0 and 1 (say r1); /// - Look in which cell in the normalized integral r1 corresponds to; /// - make a linear interpolation in the returned cell; ///; ///; /// IMPORTANT NOTE; ///; /// The integral of the function is computed at fNpx * fNpy points.; /// If the function has sharp peaks, you should increase the number of; /// points (SetNpx, SetNpy) such that the peak is correctly tabulated; /// at several points.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TF2.cxx:201,integrat,integrated,201,hist/hist/src/TF2.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TF2.cxx,1,['integrat'],['integrated']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Return 2D array of machine dependent pixel values.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/TASImage.cxx:113,depend,dependent,113,graf2d/asimage/src/TASImage.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/TASImage.cxx,1,['depend'],['dependent']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Return 3 random numbers following this function shape; ///; /// The distribution contained in this TF3 function is integrated; /// over the cell contents.; /// It is normalized to 1.; /// Getting the three random numbers implies:; /// - Generating a random number between 0 and 1 (say r1); /// - Look in which cell in the normalized integral r1 corresponds to; /// - make a linear interpolation in the returned cell; ///; /// IMPORTANT NOTE; ///; /// The integral of the function is computed at fNpx * fNpy * fNpz points.; /// If the function has sharp peaks, you should increase the number of; /// points (SetNpx, SetNpy, SetNpz) such that the peak is correctly tabulated; /// at several points.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TF3.cxx:201,integrat,integrated,201,hist/hist/src/TF3.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TF3.cxx,1,['integrat'],['integrated']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Return Integral of function between a and b using the given parameter values and; /// relative and absolute tolerance.; ///; /// The default integrator defined in ROOT::Math::IntegratorOneDimOptions::DefaultIntegrator() is used; /// If ROOT contains the MathMore library the default integrator is set to be; /// the adaptive ROOT::Math::GSLIntegrator (based on QUADPACK) or otherwise the; /// ROOT::Math::GaussIntegrator is used; /// See the reference documentation of these classes for more information about the; /// integration algorithms; /// To change integration algorithm just do :; /// ROOT::Math::IntegratorOneDimOptions::SetDefaultIntegrator(IntegratorName);; /// Valid integrator names are:; /// - Gauss : for ROOT::Math::GaussIntegrator; /// - GaussLegendre : for ROOT::Math::GaussLegendreIntegrator; /// - Adaptive : for ROOT::Math::GSLIntegrator adaptive method (QAG); /// - AdaptiveSingular : for ROOT::Math::GSLIntegrator adaptive singular method (QAGS); /// - NonAdaptive : for ROOT::Math::GSLIntegrator non adaptive (QNG); ///; /// In order to use the GSL integrators one needs to have the MathMore library installed; ///; /// Note 1:; ///; /// Values of the function f(x) at the interval end-points A and B are not; /// required. The subprogram may therefore be used when these values are; /// undefined.; ///; /// Note 2:; ///; /// Instead of TF1::Integral, you may want to use the combination of; /// TF1::CalcGaussLegendreSamplingPoints and TF1::IntegralFast.; /// See an example with the following script:; ///; /// ~~~ {.cpp}; /// void gint() {; /// TF1 *g = new TF1(""g"",""gaus"",-5,5);; /// g->SetParameters(1,0,1);; /// //default gaus integration method uses 6 points; /// //not suitable to integrate on a large domain; /// double r1 = g->Integral(0,5);; /// double r2 = g->Integral(0,1000);; ///; /// //try with user directives computing more points; /// Int_t np = 1000;; /// double *x=new",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TF1.cxx:227,integrat,integrator,227,hist/hist/src/TF1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TF1.cxx,9,"['Integrat', 'integrat']","['IntegratorName', 'IntegratorOneDimOptions', 'integration', 'integrator', 'integrators']"
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Return TRUE (non-zero) if we are currently wrapping text around; /// one or more images.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/guihtml/src/TGHtmlLayout.cxx:129,wrap,wrapping,129,gui/guihtml/src/TGHtmlLayout.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/guihtml/src/TGHtmlLayout.cxx,1,['wrap'],['wrapping']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Return a p.d.f that represent a projection of this p.d.f integrated over given observables",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx:143,integrat,integrated,143,roofit/roofitcore/src/RooAbsPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx,1,['integrat'],['integrated']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Return a pointer to a newly allocated object of this class.; /// The class must have a default constructor. For meaning of; /// defConstructor, see TClass::IsCallingNew().; ///; /// If quiet is true, do no issue a message via Error on case; /// of problems, just return 0.; ///; /// The constructor actually called here can be customized by; /// using the rootcint pragma:; /// ~~~ {.cpp}; /// #pragma link C++ ioctortype UserClass;; /// ~~~; /// For example, with this pragma and a class named MyClass,; /// this method will called the first of the following 3; /// constructors which exists and is public:; /// ~~~ {.cpp}; /// MyClass(UserClass*);; /// MyClass(TRootIOCtor*);; /// MyClass(); // Or a constructor with all its arguments defaulted.; /// ~~~; ///; /// When more than one pragma ioctortype is used, the first seen as priority; /// For example with:; /// ~~~ {.cpp}; /// #pragma link C++ ioctortype UserClass1;; /// #pragma link C++ ioctortype UserClass2;; /// ~~~; /// We look in the following order:; /// ~~~ {.cpp}; /// MyClass(UserClass1*);; /// MyClass(UserClass2*);; /// MyClass(TRootIOCtor*);; /// MyClass(); // Or a constructor with all its arguments defaulted.; /// ~~~",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:300,message,message,300,core/meta/src/TClass.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx,1,['message'],['message']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Return a pointer to the list of branches of the current tree.; ///; /// Warning: If there is no current TTree yet, this routine will open the; /// first in the chain.; ///; /// Returns 0 on failure.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TChain.cxx:206,rout,routine,206,tree/tree/src/TChain.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TChain.cxx,1,['rout'],['routine']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Return a random number following this function shape in [xmin,xmax]; ///; /// The distribution contained in the function fname (TF1) is integrated; /// over the channel contents.; /// It is normalized to 1.; /// For each bin the integral is approximated by a parabola.; /// The parabola coefficients are stored as non persistent data members; /// Getting one random number implies:; /// - Generating a random number between 0 and 1 (say r1); /// - Look in which bin in the normalized integral r1 corresponds to; /// - Evaluate the parabolic curve in the selected bin to find; /// the corresponding X value.; ///; /// The parabolic approximation is very good as soon as the number; /// of bins is greater than 50.; ///; /// @param xmin minimum value for generated random numbers; /// @param xmax maximum value for generated random numbers; /// @param rng (optional) random number generator pointer; /// @param option (optional) : `LOG` or `LIN` to force the usage of a log or linear scale for computing the cumulative integral table; ///; /// IMPORTANT NOTE; ///; /// The integral of the function is computed at fNpx points. If the function; /// has sharp peaks, you should increase the number of points (SetNpx); /// such that the peak is correctly tabulated at several points.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TF1.cxx:222,integrat,integrated,222,hist/hist/src/TF1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TF1.cxx,1,['integrat'],['integrated']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Return a random number following this function shape.; ///; /// @param rng Random number generator. By default (or when passing a nullptr) the global gRandom is used; /// @param option Option string which controls the binning used to compute the integral. Default mode is automatic depending of; /// xmax, xmin and Npx (function points).; /// Possible values are:; /// - ""LOG"" to force usage of log scale for tabulating the integral; /// - ""LIN"" to force usage of linear scale when tabulating the integral; ///; /// The distribution contained in the function fname (TF1) is integrated; /// over the channel contents.; /// It is normalized to 1.; /// For each bin the integral is approximated by a parabola.; /// The parabola coefficients are stored as non persistent data members; /// Getting one random number implies:; /// - Generating a random number between 0 and 1 (say r1); /// - Look in which bin in the normalized integral r1 corresponds to; /// - Evaluate the parabolic curve in the selected bin to find the corresponding X value.; ///; /// The user can provide as optional parameter a Random number generator.; /// By default gRandom is used; ///; /// If the ratio fXmax/fXmin > fNpx the integral is tabulated in log scale in x; /// A log scale for the intergral is also always used if a user specifies the ""LOG"" option; /// Instead if a user requestes a ""LIN"" option the integral binning is never done in log scale; /// whatever the fXmax/fXmin ratio is; ///; /// Note that the parabolic approximation is very good as soon as the number of bins is greater than 50.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TF1.cxx:368,depend,depending,368,hist/hist/src/TF1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TF1.cxx,2,"['depend', 'integrat']","['depending', 'integrated']"
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Return a reference to the map of state names to index states.; /// This can be used to manipulate the category.; /// \note Calling this function will **always** trigger recomputations of; /// of **everything** that depends on this category, since in case the map gets; /// manipulated, names or indices might change. Also, the order that states have; /// been inserted in gets lost. This changes what is returned by getOrdinal().",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooCategory.cxx:301,depend,depends,301,roofit/roofitcore/src/RooCategory.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooCategory.cxx,1,['depend'],['depends']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Return an object from the list of enums *if and only if* is has already; /// been loaded in the list. This is an internal routine.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfEnums.cxx:208,rout,routine,208,core/meta/src/TListOfEnums.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfEnums.cxx,2,['rout'],['routine']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Return analytical integral defined by given code, which is returned; /// by getAnalyticalIntegralWN(); ///; /// For unnormalized integrals the returned value is; /// \f[; /// \mathrm{PDF} = \sum_k \int \mathrm{coef}_k \; \mathrm{d}\bar{x}; /// \cdot \int \mathrm{basis}_k (x) \mathrm{ResModel} \; \mathrm{d}\bar{y},; /// \f]; /// where \f$ \bar{x} \f$ is the set of coefficient dependents to be integrated,; /// and \f$ \bar{y} \f$ the set of basis function dependents to be integrated.; ///; /// For normalized integrals this becomes; /// \f[; /// \mathrm{PDF} = \frac{\sum_k \int \mathrm{coef}_k \; \mathrm{d}x; /// \cdot \int \mathrm{basis}_k (x) \mathrm{ResModel} \; \mathrm{d}y}; /// {\sum_k \int \mathrm{coef}_k \; \mathrm{d}v; /// \cdot \int \mathrm{basis}_k (x) \mathrm{ResModel} \; \mathrm{d}w},; /// \f]; /// where; /// * \f$ x \f$ is the set of coefficient dependents to be integrated,; /// * \f$ y \f$ the set of basis function dependents to be integrated,; /// * \f$ v \f$ is the set of coefficient dependents over which is normalized and; /// * \f$ w \f$ is the set of basis function dependents over which is normalized.; ///; /// Set \f$ x \f$ must be contained in \f$ v \f$ and set \f$ y \f$ must be contained in \f$ w \f$.; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsAnaConvPdf.cxx:464,depend,dependents,464,roofit/roofitcore/src/RooAbsAnaConvPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsAnaConvPdf.cxx,10,"['depend', 'integrat']","['dependents', 'integrated']"
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Return analytical integration capabilities of chosen coefficient",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooConvCoefVar.cxx:104,integrat,integration,104,roofit/roofitcore/src/RooConvCoefVar.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooConvCoefVar.cxx,1,['integrat'],['integration']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Return analytical integration capabilities of the RooHistFunc that corresponds to the set of observables in allVars",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsCachedReal.cxx:104,integrat,integration,104,roofit/roofitcore/src/RooAbsCachedReal.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsCachedReal.cxx,1,['integrat'],['integration']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Return analytical integration defined by given code",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimultaneous.cxx:104,integrat,integration,104,roofit/roofitcore/src/RooSimultaneous.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimultaneous.cxx,1,['integrat'],['integration']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Return authentication protocol used for the handshake.; /// Used by proofd.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/rpdutils/src/rpdutils.cxx:108,protocol,protocol,108,net/rpdutils/src/rpdutils.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/rpdutils/src/rpdutils.cxx,1,['protocol'],['protocol']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Return average curve value in [xFirst,xLast] by integrating curve between points; /// and dividing by xLast-xFirst",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooCurve.cxx:134,integrat,integrating,134,roofit/roofitcore/src/RooCurve.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooCurve.cxx,1,['integrat'],['integrating']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Return binning definition with name. If binning with 'name' is not found it is created; /// on the fly as a clone of the default binning if createOnTheFly is true, otherwise; /// a reference to the default binning is returned. If verbose is true a message; /// is printed if a binning is created on the fly.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealVar.cxx:334,message,message,334,roofit/roofitcore/src/RooRealVar.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealVar.cxx,2,['message'],['message']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Return counter for message with ID=messid.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TMessageHandler.cxx:105,message,message,105,core/base/src/TMessageHandler.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TMessageHandler.cxx,1,['message'],['message']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Return current value, normalized by integrating over; /// the observables in `nset`. If `nset` is 0, the unnormalized value; /// is returned. All elements of `nset` must be lvalues.; ///; /// Unnormalized values are not cached.; /// Doing so would be complicated as `_norm->getVal()` could; /// spoil the cache and interfere with returning the cached; /// return value. Since unnormalized calls are typically; /// done in integration calls, there is no performance hit.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx:122,integrat,integrating,122,roofit/roofitcore/src/RooAbsPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx,2,['integrat'],"['integrating', 'integration']"
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Return error of standard deviation estimation for Normal distribution; ///; /// Note that the mean value/StdDev is computed using the bins in the currently; /// defined range (see TAxis::SetRange). By default the range includes; /// all bins from 1 to nbins included, excluding underflows and overflows.; /// To force the underflows and overflows in the computation, one must; /// call the static function TH1::StatOverflows(kTRUE) before filling; /// the histogram.; ///; /// Value returned is standard deviation of sample standard deviation.; /// Note that it is an approximated value which is valid only in the case that the; /// original data distribution is Normal. The correct one would require; /// the 4-th momentum value, which cannot be accurately estimated from a histogram since; /// the x-information for all entries is not kept.; ///; /// IMPORTANT NOTE: The returned value depends on how the histogram statistics; /// are calculated. By default, if no range has been set, the returned value is; /// the (unbinned) one calculated at fill time. If a range has been set, however,; /// the value is calculated using the bins in range, as described above; THIS; /// IS TRUE EVEN IF THE RANGE INCLUDES ALL BINS--use TAxis::SetRange(0, 0) to unset; /// the range. To ensure that the returned value (and all other statistics) is; /// always that of the binned data stored in the histogram, call TH1::ResetStats.; /// See TH1::GetStats.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:974,depend,depends,974,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,1,['depend'],['depends']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Return file stat information. The interface and return value is; /// identical to TSystem::GetPathInfo().",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TNetFile.cxx:120,interface,interface,120,net/net/src/TNetFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TNetFile.cxx,1,['interface'],['interface']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Return file stat information.; ///; /// The interface and return value is; /// identical to TSystem::GetPathInfo(). The function returns 0 in; /// case of success and 1 if the file could not be stat'ed.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TFile.cxx:130,interface,interface,130,io/io/src/TFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TFile.cxx,1,['interface'],['interface']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Return file type depending on specified extension.; /// Protected method.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/TASImage.cxx:103,depend,depending,103,graf2d/asimage/src/TASImage.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/TASImage.cxx,1,['depend'],['depending']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Return full URL. If withDflt is kTRUE, explicitly add the port even; /// if it matches the default value for the URL protocol.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TUrl.cxx:203,protocol,protocol,203,core/base/src/TUrl.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TUrl.cxx,1,['protocol'],['protocol']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Return function representing moment of p.d.f (normalized w.r.t given observables) of given order.; /// \param[in] obs Observable to calculate the moments for; /// \param[in] normObs Normalise w.r.t. these observables; /// \param[in] order Order of the moment; /// \param[in] central If true, the central moment is given by \f$ \langle (x- \langle x \rangle )^2 \rangle \f$; /// \param[in] takeRoot Calculate the square root; /// \param[in] intNormObs If true, the moment of the function integrated over all normalization observables is returned.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx:573,integrat,integrated,573,roofit/roofitcore/src/RooAbsReal.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx,1,['integrat'],['integrated']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Return function value requested bu present configuration; ///; /// If integration is required, the function value integrated; /// over the bin volume divided by the bin volume is returned,; /// otherwise the value at the bin center is returned.; /// The bin volume is defined by the error on the 'X' coordinates; ///; /// If an extended p.d.f. is used as function, its value is; /// also multiplied by the expected number of events here",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooXYChi2Var.cxx:156,integrat,integration,156,roofit/roofitcore/src/RooXYChi2Var.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooXYChi2Var.cxx,2,['integrat'],"['integrated', 'integration']"
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Return hash value for this object.; ///; /// Note: If this routine is overloaded in a derived class, this derived class; /// should also add; /// ~~~ {.cpp}; /// ROOT::CallRecursiveRemoveIfNeeded(*this); /// ~~~; /// Otherwise, when RecursiveRemove is called (by ~TObject or example) for this; /// type of object, the transversal of THashList and THashTable containers will; /// will have to be done without call Hash (and hence be linear rather than; /// logarithmic complexity). You will also see warnings like; /// ~~~; /// Error in <ROOT::Internal::TCheckHashRecursiveRemoveConsistency::CheckRecursiveRemove>: The class SomeName overrides TObject::Hash but does not call TROOT::RecursiveRemove in its destructor.; /// ~~~; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TObject.cxx:145,rout,routine,145,core/base/src/TObject.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TObject.cxx,1,['rout'],['routine']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Return icon name depending on type of branch element.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TBranchElement.cxx:103,depend,depending,103,tree/tree/src/TBranchElement.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TBranchElement.cxx,1,['depend'],['depending']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Return icon name depending on type of branch.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TBranch.cxx:103,depend,depending,103,tree/tree/src/TBranch.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TBranch.cxx,1,['depend'],['depending']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Return in buf the message belonging to errno.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/rpdutils/src/DaemonUtils.cxx:104,message,message,104,net/rpdutils/src/DaemonUtils.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/rpdutils/src/DaemonUtils.cxx,2,['message'],['message']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Return index of next dependency or -1 if none (or no more); /// If reset is kTRUE, reset the internal counter before acting.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/stressProof.cxx:107,depend,dependency,107,test/stressProof.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/stressProof.cxx,1,['depend'],['dependency']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Return integral identified by 'code'. The actual integration; /// is deferred to RooDataHist::sum() which implements partial; /// or complete summation over the histograms contents",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHistFunc.cxx:135,integrat,integration,135,roofit/roofitcore/src/RooHistFunc.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHistFunc.cxx,1,['integrat'],['integration']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Return integral identified by 'code'. The actual integration; /// is deferred to RooDataHist::sum() which implements partial; /// or complete summation over the histograms contents.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHistPdf.cxx:135,integrat,integration,135,roofit/roofitcore/src/RooHistPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHistPdf.cxx,1,['integrat'],['integration']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Return kTRUE if 'url' matches the coordinates of this file.; ///; /// The check is implementation dependent and may need to be overload; /// by each TFile implementation relying on this check.; /// The default implementation checks the file name only.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TFile.cxx:184,depend,dependent,184,io/io/src/TFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TFile.cxx,1,['depend'],['dependent']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Return length of string in pixels. Size depends on font",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/x11ttf/src/TGX11TTF.cxx:126,depend,depends,126,graf2d/x11ttf/src/TGX11TTF.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/x11ttf/src/TGX11TTF.cxx,1,['depend'],['depends']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Return length of string in pixels. Size depends on font.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/src/TGWin32.cxx:126,depend,depends,126,graf2d/win32gdk/src/TGWin32.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/src/TGWin32.cxx,2,['depend'],['depends']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Return length of the string ""s"" in pixels. Size depends on font.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx:134,depend,depends,134,core/base/src/TVirtualX.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx,1,['depend'],['depends']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Return list of (partial) integrals of product terms for integration; /// of p.d.f over observables iset while normalization over observables nset.; /// Also return list of normalization sets to be used to evaluate; /// each component in the list correctly.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:142,integrat,integration,142,roofit/roofitcore/src/RooProdPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx,1,['integrat'],['integration']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Return lower error associated to bin number bin.; ///; /// The error will depend on the statistic option used will return; /// the binContent - lower interval value",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:160,depend,depend,160,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,1,['depend'],['depend']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Return message digest as string. Returns """" in case Final() has; /// not yet been called.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TMD5.cxx:93,message,message,93,core/base/src/TMD5.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TMD5.cxx,1,['message'],['message']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Return minimum dimensions of numeric integration for which values are cached.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:123,integrat,integration,123,roofit/roofitcore/src/RooRealIntegral.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx,1,['integrat'],['integration']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Return observable in nset to be cached by RooAbsCachedPdf; /// this is always the x observable that is integrated",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumRunningInt.cxx:189,integrat,integrated,189,roofit/roofitcore/src/RooNumRunningInt.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumRunningInt.cxx,1,['integrat'],['integrated']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Return pointer to cling interface function for a method of a class with; /// a certain name.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:110,interface,interface,110,core/metacling/src/TCling.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx,2,['interface'],['interface']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Return pointer to cling interface function for a method of a class with; /// a certain prototype, i.e. ""char*,int,float"". If the class is 0 the global; /// function list will be searched.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:110,interface,interface,110,core/metacling/src/TCling.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx,2,['interface'],['interface']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Return pointer to cling interface function for a method of a class with; /// parameters params (params is a string of actual arguments, not formal; /// ones). If the class is 0 the global function list will be searched.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:110,interface,interface,110,core/metacling/src/TCling.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx,1,['interface'],['interface']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Return pointer to the interface method. Using this pointer we; /// can find which TFunction belongs to a CINT MethodInfo object.; /// Both need to have the same InterfaceMethod pointer.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TFunction.cxx:108,interface,interface,108,core/meta/src/TFunction.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TFunction.cxx,2,"['Interface', 'interface']","['InterfaceMethod', 'interface']"
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Return product of jacobian terms originating from analytical integration",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:147,integrat,integration,147,roofit/roofitcore/src/RooRealIntegral.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx,1,['integrat'],['integration']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Return proper archive file handler depending on passed url.; ///; /// The handler is loaded via the plugin manager and is triggered by; /// the extension of the archive file. In case no handler is found 0; /// is returned. The file argument is used to access the archive.; /// The archive should be specified as url with the member name as the; /// anchor, e.g. ""root://pcsalo.cern.ch/alice/event_1.zip#tpc.root"",; /// where tpc.root is the file in the archive to be opened.; /// Alternatively the sub-file can be specified via its index number,; /// e.g. ""root://pcsalo.cern.ch/alice/event_1.zip#3"".; /// This function is normally only called via TFile::Open().",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TArchiveFile.cxx:121,depend,depending,121,io/io/src/TArchiveFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TArchiveFile.cxx,1,['depend'],['depending']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Return protocol version run by the client.; /// Used by proofd.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/rpdutils/src/rpdutils.cxx:93,protocol,protocol,93,net/rpdutils/src/rpdutils.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/rpdutils/src/rpdutils.cxx,1,['protocol'],['protocol']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Return prototype integrator with given (class) name",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenFactory.cxx:103,integrat,integrator,103,roofit/roofitcore/src/RooNumGenFactory.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenFactory.cxx,1,['integrat'],['integrator']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Return reference to instance of default numeric integrator configuration object",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenConfig.cxx:134,integrat,integrator,134,roofit/roofitcore/src/RooNumGenConfig.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenConfig.cxx,2,['integrat'],['integrator']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Return section with configuration parameters for integrator with given (class) name",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenConfig.cxx:135,integrat,integrator,135,roofit/roofitcore/src/RooNumGenConfig.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenConfig.cxx,2,['integrat'],['integrator']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Return standard error of mean of this histogram along the X axis.; ///; /// Note that the mean value/StdDev is computed using the bins in the currently; /// defined range (see TAxis::SetRange). By default the range includes; /// all bins from 1 to nbins included, excluding underflows and overflows.; /// To force the underflows and overflows in the computation, one must; /// call the static function TH1::StatOverflows(kTRUE) before filling; /// the histogram.; ///; /// Also note, that although the definition of standard error doesn't include the; /// assumption of normality, many uses of this feature implicitly assume it.; ///; /// IMPORTANT NOTE: The returned value depends on how the histogram statistics; /// are calculated. By default, if no range has been set, the returned value is; /// the (unbinned) one calculated at fill time. If a range has been set, however,; /// the value is calculated using the bins in range, as described above; THIS; /// IS TRUE EVEN IF THE RANGE INCLUDES ALL BINS--use TAxis::SetRange(0, 0) to unset; /// the range. To ensure that the returned value (and all other statistics) is; /// always that of the binned data stored in the histogram, call TH1::ResetStats.; /// See TH1::GetStats.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:760,depend,depends,760,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,1,['depend'],['depends']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Return status from rootd server and message kind. Returns -1 in; /// case of error otherwise 8 (sizeof 2 words, status and kind).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TFTP.cxx:122,message,message,122,net/net/src/TFTP.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TFTP.cxx,2,['message'],['message']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Return the current value: The value of the bin enclosing the current coordinates; /// of the dependents, normalized by the histograms contents. Interpolation; /// is applied if the RooHistFunc is configured to do that",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHistFunc.cxx:179,depend,dependents,179,roofit/roofitcore/src/RooHistFunc.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHistFunc.cxx,1,['depend'],['dependents']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Return the default error level for MINUIT error analysis; /// If the addition contains one or more RooNLLVars and; /// no RooChi2Vars, return the defaultErrorLevel() of; /// RooNLLVar. If the addition contains one ore more RooChi2Vars; /// and no RooNLLVars, return the defaultErrorLevel() of; /// RooChi2Var. If the addition contains neither or both; /// issue a warning message and return a value of 1",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAddition.cxx:458,message,message,458,roofit/roofitcore/src/RooAddition.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAddition.cxx,1,['message'],['message']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Return the default error level for MINUIT error analysis; /// If the formula contains one or more RooNLLVars and; /// no RooChi2Vars, return the defaultErrorLevel() of; /// RooNLLVar. If the addition contains one ore more RooChi2Vars; /// and no RooNLLVars, return the defaultErrorLevel() of; /// RooChi2Var. If the addition contains neither or both; /// issue a warning message and return a value of 1",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFormulaVar.cxx:457,message,message,457,roofit/roofitcore/src/RooFormulaVar.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFormulaVar.cxx,1,['message'],['message']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Return the extended likelihood term (\f$ N_\mathrm{expect} - N_\mathrm{observed} \cdot \log(N_\mathrm{expect} \f$); /// of this PDF for the given number of observed events.; ///; /// This function is a wrapper around; /// RooAbsPdf::extendedTerm(double, RooArgSet const *, double, bool) const,; /// where the number of observed events and observables to be used as the; /// normalization set for the pdf is extracted from a RooAbsData.; ///; /// For successful operation, the PDF implementation must indicate that; /// it is extendable by overloading `canBeExtended()`, and must; /// implement the `expectedEvents()` function.; ///; /// \param[in] data The RooAbsData to retrieve the set of observables and; /// number of expected events.; /// \param[in] weightSquared If set to `true`, the extended term will be scaled by; /// the ratio of squared event weights over event weights:; /// \f$ \sum w_{i}^2 / \sum w_{i} \f$.; /// Intended to be used by fits with the `SumW2Error()` option that; /// can be passed to RooAbsPdf::fitTo(); /// (see the documentation of said function to learn more about the; /// interpretation of fits with squared weights).; /// \param[in] doOffset See RooAbsPdf::extendedTerm(double, RooArgSet const*, double, bool) const.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx:288,wrap,wrapper,288,roofit/roofitcore/src/RooAbsPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx,1,['wrap'],['wrapper']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Return the log of the current value with given normalization; /// An error message is printed if the argument of the log is negative.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx:161,message,message,161,roofit/roofitcore/src/RooAbsPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx,1,['message'],['message']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Return the next message or 0.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TStatus.cxx:102,message,message,102,proof/proofplayer/src/TStatus.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TStatus.cxx,1,['message'],['message']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Return the normalized name. See TMetaUtils::GetNormalizedName.; ///; /// Return the type name normalized for ROOT,; /// keeping only the ROOT opaque typedef (Double32_t, etc.) and; /// removing the STL collections default parameter if any.; ///; /// Compare to TMetaUtils::GetNormalizedName, this routines does not; /// and can not add default template parameters.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TClassEdit.cxx:383,rout,routines,383,core/foundation/src/TClassEdit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TClassEdit.cxx,1,['rout'],['routines']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Return the numeric integration configuration used for this object. If; /// a specialized configuration was associated with this object, that configuration; /// is returned, otherwise the default configuration for all RooAbsReals is returned",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx:105,integrat,integration,105,roofit/roofitcore/src/RooAbsReal.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx,2,['integrat'],['integration']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Return the parameters of the cache created by RooAbsCachedPdf.; /// These are always the input functions parameter, but never the; /// integrated variable x.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumRunningInt.cxx:221,integrat,integrated,221,roofit/roofitcore/src/RooNumRunningInt.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumRunningInt.cxx,1,['integrat'],['integrated']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Return the parameters on which the cache depends given normalization; /// set nset. For this p.d.f these are the parameters of the input p.d.f.; /// but never the convolution variable, in case it is not part of nset.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFFTConvPdf.cxx:127,depend,depends,127,roofit/roofitcore/src/RooFFTConvPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFFTConvPdf.cxx,1,['depend'],['depends']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Return the size of a character string.; /// iw : text width; /// ih : text height; /// mess : message",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/src/TGWin32.cxx:180,message,message,180,graf2d/win32gdk/src/TGWin32.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/src/TGWin32.cxx,1,['message'],['message']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Return the size of a character string.; ///; /// \param [in] w : text width; /// \param [in] h : text height; /// \param [in] mess : message",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/x11/src/TGX11.cxx:219,message,message,219,graf2d/x11/src/TGX11.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/x11/src/TGX11.cxx,1,['message'],['message']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Return the thread local storage for the custom last error message",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx:144,message,message,144,core/base/src/TSystem.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx,2,['message'],['message']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Return the wrapper around Merge.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:97,wrap,wrapper,97,core/meta/src/TClass.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx,2,['wrap'],['wrapper']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Return the wrapper around delete ThiObject.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:97,wrap,wrapper,97,core/meta/src/TClass.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx,1,['wrap'],['wrapper']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Return the wrapper around delete [] ThiObject.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:97,wrap,wrapper,97,core/meta/src/TClass.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx,1,['wrap'],['wrapper']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Return the wrapper around new ThisClass().",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:97,wrap,wrapper,97,core/meta/src/TClass.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx,1,['wrap'],['wrapper']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Return the wrapper around new ThisClass[].",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:97,wrap,wrapper,97,core/meta/src/TClass.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx,1,['wrap'],['wrapper']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Return the wrapper around the destructor",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:97,wrap,wrapper,97,core/meta/src/TClass.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx,1,['wrap'],['wrapper']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Return the wrapper around the directory auto add function.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:97,wrap,wrapper,97,core/meta/src/TClass.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx,1,['wrap'],['wrapper']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Return total number of messages.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TMessageHandler.cxx:109,message,messages,109,core/base/src/TMessageHandler.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TMessageHandler.cxx,1,['message'],['messages']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Return true if we have access to a constructor usable for I/O. This is; /// typically the default constructor but can also be a constructor specifically; /// marked for I/O (for example a constructor taking a TRootIOCtor* as an; /// argument). In other words, if this routine returns true, TClass::New is; /// guarantee to succeed.; /// To know if the class described by this TClass has a default constructor; /// (public or not), use; /// \code{.cpp}; /// cl->GetProperty() & kClassHasDefaultCtor; /// \endcode; /// To know if the class described by this TClass has a public default; /// constructor use:; /// \code{.cpp}; /// gInterpreter->ClassInfo_HasDefaultConstructor(aClass->GetClassInfo());; /// \endcode",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:354,rout,routine,354,core/meta/src/TClass.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx,1,['rout'],['routine']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Return true is the Hash/RecursiveRemove setup is consistent, i.e. when all; /// classes in the class hierarchy that overload TObject::Hash do call; /// ROOT::CallRecursiveRemoveIfNeeded in their destructor.; /// i.e. it is safe to call the Hash virtual function during the RecursiveRemove operation.; /// This routines is used for a small subset of the class for which we need; /// the answer before gROOT is properly initialized.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:396,rout,routines,396,core/meta/src/TClass.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx,1,['rout'],['routines']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Return upper error associated to bin number bin.; ///; /// The error will depend on the statistic option used will return; /// the binContent - upper interval value",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:160,depend,depend,160,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,1,['depend'],['depend']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Returns a pointer to the histogram used to draw the axis.; /// Takes into account the two following cases:; /// 1- option 'A' was specified in THStack::Draw. Return fHistogram; /// 2- user had called TPad::DrawFrame. return pointer to hframe histogram; ///; /// IMPORTANT NOTES; /// - You must call Draw before calling this function. The returned histogram; /// depends on the selected Draw options.; /// - This function returns a pointer to an intermediate fixed bin size; /// histogram used to set the range and for picking.; /// You cannot use this histogram to return the bin information.; /// You must get a pointer to one of the histograms in the stack,; /// the first one, for example.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/THStack.cxx:448,depend,depends,448,hist/hist/src/THStack.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/THStack.cxx,1,['depend'],['depends']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Returns closest distance in pixels from point (px, py) to a polyline.; ///; /// First looks for distances to the points of the polyline. Stops search; /// and returns if a vertex of the polyline is found to be closer than 10; /// pixels. Thus the return value may depend on the ordering of points; /// in the polyline.; ///; /// Then looks for distances to the lines of the polyline. There is no; /// arbitrary cutoff; any distance may be found.; ///; /// Finally checks whether (px, py) is inside a closed and filled polyline.; /// (Must be EXACTLY closed. ""Filled"" means fill color and fill style are; /// both non-zero.) If so, returns zero.; ///; /// Returns 9999 if the polyline has no points.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/graf/src/TPolyLine.cxx:350,depend,depend,350,graf2d/graf/src/TPolyLine.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/graf/src/TPolyLine.cxx,1,['depend'],['depend']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Returns error code. Meaning depends on context where it is called.; /// If no error condition returns 0 else a value < 0.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TPSocket.cxx:114,depend,depends,114,net/net/src/TPSocket.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TPSocket.cxx,1,['depend'],['depends']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Returns error code. Meaning depends on context where it is called.; /// If no error condition returns 0 else a value < 0.; /// For example see TServerSocket ctor.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TSocket.cxx:114,depend,depends,114,net/net/src/TSocket.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TSocket.cxx,2,['depend'],['depends']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Returns handle to colormap (might be useful in some cases where; /// direct X11 manipulation outside of TVirtualX is needed, e.g. GL; /// interface).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/x11/src/GX11Gui.cxx:224,interface,interface,224,graf2d/x11/src/GX11Gui.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/x11/src/GX11Gui.cxx,1,['interface'],['interface']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Returns handle to colormap.; ///; /// Might be useful in some cases where direct X11 manipulation outside; /// of TVirtualX is needed, e.g. GL interface.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx:229,interface,interface,229,core/base/src/TVirtualX.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx,1,['interface'],['interface']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Returns handle to display (might be useful in some cases where; /// direct X11 manipulation outside of TVirtualX is needed, e.g. GL; /// interface).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx:223,interface,interface,223,core/base/src/TVirtualX.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx,2,['interface'],['interface']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Returns handle to visual (might be useful in some cases where; /// direct X11 manipulation outside of TVirtualX is needed, e.g. GL; /// interface).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/x11/src/GX11Gui.cxx:222,interface,interface,222,graf2d/x11/src/GX11Gui.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/x11/src/GX11Gui.cxx,1,['interface'],['interface']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Returns handle to visual.; ///; /// Might be useful in some cases where direct X11 manipulation outside; /// of TVirtualX is needed, e.g. GL interface.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx:227,interface,interface,227,core/base/src/TVirtualX.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx,1,['interface'],['interface']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Returns list of font names matching fontname regexp, like ""-*-times-*"".; /// The pattern string can contain any characters, but each asterisk (*); /// is a wildcard for any number of characters, and each question mark (?); /// is a wildcard for a single character. If the pattern string is not in; /// the Host Portable Character Encoding, the result is implementation; /// dependent. Use of uppercase or lowercase does not matter. Each returned; /// string is null-terminated.; ///; /// \param [in] fontname specifies the null-terminated pattern string that can; /// contain wildcard characters; /// \param [in] max specifies the maximum number of names to be returned; /// \param [in] count returns the actual number of font names",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx:460,depend,dependent,460,core/base/src/TVirtualX.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx,1,['depend'],['dependent']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Returns screen number (might be useful in some cases where; /// direct X11 manipulation outside of TVirtualX is needed, e.g. GL; /// interface).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/x11/src/GX11Gui.cxx:219,interface,interface,219,graf2d/x11/src/GX11Gui.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/x11/src/GX11Gui.cxx,1,['interface'],['interface']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Returns screen number.; ///; /// Might be useful in some cases where direct X11 manipulation outside; /// of TVirtualX is needed, e.g. GL interface.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx:224,interface,interface,224,core/base/src/TVirtualX.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx,1,['interface'],['interface']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Returns the *num*-th variable string; /// in case of an error prints an error message and returns an empty string.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeDrawArgsParser.cxx:164,message,message,164,tree/treeplayer/src/TTreeDrawArgsParser.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeDrawArgsParser.cxx,1,['message'],['message']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Returns the Standard Deviation (Sigma).; /// The Sigma estimate is computed as; /// \f[; /// \sqrt{\frac{1}{N}(\sum(x_i-x_{mean})^2)}; /// \f]; /// For axis = 1,2 or 3 returns the Sigma value of the histogram along; /// X, Y or Z axis; /// For axis = 11, 12 or 13 returns the error of StdDev estimation along; /// X, Y or Z axis for Normal distribution; ///; /// Note that the mean value/sigma is computed using the bins in the currently; /// defined range (see TAxis::SetRange). By default the range includes; /// all bins from 1 to nbins included, excluding underflows and overflows.; /// To force the underflows and overflows in the computation, one must; /// call the static function TH1::StatOverflows(kTRUE) before filling; /// the histogram.; ///; /// IMPORTANT NOTE: The returned value depends on how the histogram statistics; /// are calculated. By default, if no range has been set, the returned standard; /// deviation is the (unbinned) one calculated at fill time. If a range has been; /// set, however, the standard deviation is calculated using the bins in range,; /// as described above; THIS IS TRUE EVEN IF THE RANGE INCLUDES ALL BINS--use; /// TAxis::SetRange(0, 0) to unset the range. To ensure that the returned standard; /// deviation (and all other statistics) is always that of the binned data stored; /// in the histogram, call TH1::ResetStats. See TH1::GetStats.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:880,depend,depends,880,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,1,['depend'],['depends']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Returns the atom identifier associated with the specified ""atom_name""; /// string. If ""only_if_exists"" is False, the atom is created if it does; /// not exist. If the atom name is not in the Host Portable Character; /// Encoding, the result is implementation dependent. Uppercase and; /// lowercase matter; the strings ""thing"", ""Thing"", and ""thinG"" all; /// designate different atoms.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx:345,depend,dependent,345,core/base/src/TVirtualX.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx,1,['depend'],['dependent']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Returns the default numeric integration configuration for all RooAbsReals",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx:114,integrat,integration,114,roofit/roofitcore/src/RooAbsReal.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx,1,['integrat'],['integration']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Returns the efficiency in the given global bin; ///; /// Note:; /// - The estimated efficiency depends on the chosen statistic option:; /// for frequentist ones:; /// \f$ \hat{\varepsilon} = \frac{passed}{total} \f$; /// for bayesian ones the expectation value of the resulting posterior; /// distribution is returned:; /// \f$ \hat{\varepsilon} = \frac{passed + \alpha}{total + \alpha + \beta} \f$; /// If the bit kPosteriorMode is set (or the method TEfficiency::UsePosteriorMode() has been called ) the; /// mode (most probable value) of the posterior is returned:; /// \f$ \hat{\varepsilon} = \frac{passed + \alpha -1}{total + \alpha + \beta -2} \f$; /// - If the denominator is equal to 0, an efficiency of 0 is returned.; /// - When \f$ passed + \alpha < 1 \f$ or \f$ total - passed + \beta < 1 \f$ the above; /// formula for the mode is not valid. In these cases values the estimated efficiency is 0 or 1.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TEfficiency.cxx:181,depend,depends,181,hist/hist/src/TEfficiency.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TEfficiency.cxx,1,['depend'],['depends']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Returns the full name for TTree::Draw to draw *this.; /// Recursively appends, starting at the top TBranch,; /// all method / object names with proper reference operators (->, .); /// depending on fTypeIsPointer.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TBranchBrowsable.cxx:270,depend,depending,270,tree/tree/src/TBranchBrowsable.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TBranchBrowsable.cxx,1,['depend'],['depending']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Returns the lower error on the efficiency in the given global bin; ///; /// The result depends on the current confidence level fConfLevel and the; /// chosen statistic option fStatisticOption. See SetStatisticOption(Int_t) for; /// more details.; ///; /// Note: If the histograms are filled with weights, only bayesian methods and the; /// normal approximation are supported.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TEfficiency.cxx:173,depend,depends,173,hist/hist/src/TEfficiency.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TEfficiency.cxx,1,['depend'],['depends']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Returns the parse code message.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/xmlparser/src/TXMLParser.cxx:109,message,message,109,io/xmlparser/src/TXMLParser.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/xmlparser/src/TXMLParser.cxx,1,['message'],['message']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Returns the root (i.e. desktop) window. Should only be used as parent; /// for frames that will never be embedded, like popups, message boxes,; /// etc. (like TGToolTips, TGMessageBox, etc.).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGClient.cxx:214,message,message,214,gui/gui/src/TGClient.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGClient.cxx,1,['message'],['message']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Returns the specialized integrator configuration for _this_ RooAbsReal.; /// If this object has no specialized configuration, a null pointer is returned",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx:110,integrat,integrator,110,roofit/roofitcore/src/RooAbsPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx,1,['integrat'],['integrator']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Returns the specialized integrator configuration for _this_ RooAbsReal.; /// If this object has no specialized configuration, a null pointer is returned,; /// unless createOnTheFly is true in which case a clone of the default integrator; /// configuration is created, installed as specialized configuration, and returned",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx:110,integrat,integrator,110,roofit/roofitcore/src/RooAbsPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx,4,['integrat'],['integrator']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Returns the specialized integrator configuration for _this_ RooAbsReal.; /// If this object has no specialized configuration, a null pointer is returned.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx:110,integrat,integrator,110,roofit/roofitcore/src/RooAbsReal.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx,1,['integrat'],['integrator']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Returns the upper error on the efficiency in the given global bin; ///; /// The result depends on the current confidence level fConfLevel and the; /// chosen statistic option fStatisticOption. See SetStatisticOption(Int_t) for; /// more details.; ///; /// Note: If the histograms are filled with weights, only bayesian methods and the; /// normal approximation are supported.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TEfficiency.cxx:173,depend,depends,173,hist/hist/src/TEfficiency.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TEfficiency.cxx,1,['depend'],['depends']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Returns true if element el should be imported.; ///; /// Behaviour depends on the value of the fImportEmpty member:; /// false - el or any of its children must be projectable (default);; /// true - always import.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveProjectionManager.cxx:153,depend,depends,153,graf3d/eve/src/TEveProjectionManager.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveProjectionManager.cxx,2,['depend'],['depends']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Returns true if this branch supports bulk IO, false otherwise.; ///; /// This will return true if all the various preconditions necessary hold true; /// to perform bulk IO (reasonable type, single TLeaf, etc); the bulk IO may; /// still fail, depending on the contents of the individual TBaskets loaded.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TBranch.cxx:329,depend,depending,329,tree/tree/src/TBranch.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TBranch.cxx,1,['depend'],['depending']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Routine to mimic `strdup()' (some machines don't have it)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/x11/src/Rotated.cxx:86,Rout,Routine,86,graf2d/x11/src/Rotated.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/x11/src/Rotated.cxx,1,['Rout'],['Routine']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Routine to replace `strtok' : this one returns a zero length string if; /// it encounters two consecutive delimiters",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/x11/src/Rotated.cxx:86,Rout,Routine,86,graf2d/x11/src/Rotated.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/x11/src/Rotated.cxx,1,['Rout'],['Routine']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Routines called by the constructor and Update to reset the member's; /// information.; /// afterReading is set when initializing after reading through Streamer().",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TDataMember.cxx:86,Rout,Routines,86,core/meta/src/TDataMember.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TDataMember.cxx,1,['Rout'],['Routines']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Run a fixed scan or the automatic scan depending on the configuration.; /// Return if needed a copy of the result object which will be managed by the user.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/HypoTestInverter.cxx:125,depend,depending,125,roofit/roostats/src/HypoTestInverter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/HypoTestInverter.cxx,1,['depend'],['depending']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Same as above but does not print the error message.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TTabCom.cxx:129,message,message,129,core/rint/src/TTabCom.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TTabCom.cxx,1,['message'],['message']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Save current state of message service",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMsgService.cxx:108,message,message,108,roofit/roofitcore/src/RooMsgService.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMsgService.cxx,1,['message'],['message']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Save object in filename,; /// if filename is `nullptr` or """", a file with ""<objectname>.root"" is created.; /// The name of the key is the object name.; /// By default new file will be created. Using option ""a"", one can append object; /// to the existing ROOT file.; /// If the operation is successful, it returns the number of bytes written to the file; /// otherwise it returns 0.; /// By default a message is printed. Use option ""q"" to not print the message.; /// If filename contains "".json"" extension, JSON representation of the object; /// will be created and saved in the text file. Such file can be used in; /// JavaScript ROOT (https://root.cern/js/) to display object in web browser; /// When creating JSON file, option string may contain compression level from 0 to 3 (default 0)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TDirectory.cxx:486,message,message,486,core/base/src/TDirectory.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TDirectory.cxx,2,['message'],['message']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Save object in filename.; ///; /// If filename is `nullptr` or """", a file with ""<objectname>.root"" is created.; /// The name of the key is the object name.; /// By default new file will be created. Using option ""a"", one can append object; /// to the existing ROOT file.; /// If the operation is successful, it returns the number of bytes written to the file; /// otherwise it returns 0.; /// By default a message is printed. Use option ""q"" to not print the message.; /// If filename contains "".json"" extension, JSON representation of the object; /// will be created and saved in the text file. Such file can be used in; /// JavaScript ROOT (https://root.cern/js/) to display object in web browser; /// When creating JSON file, option string may contain compression level from 0 to 3 (default 0)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TDirectoryFile.cxx:491,message,message,491,io/io/src/TDirectoryFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TDirectoryFile.cxx,2,['message'],['message']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Saves the frame contents as a ROOT macro or as an image,; /// depending on the extension of the fileName argument.; /// If preexisting, the file is overwritten.; /// Returns kTRUE if something was saved.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGFrame.cxx:148,depend,depending,148,gui/gui/src/TGFrame.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGFrame.cxx,1,['depend'],['depending']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Scans object properties; /// here such fields as _autoload or _icon properties depending on class or object name could be assigned; /// By default properties, coded in the Class title are scanned. Example:; ///; /// ClassDef(UserClassName, 1) // class comments *SNIFF* _field1=value _field2=""string value""; ///; /// Here *SNIFF* mark is important. After it all expressions like field=value are parsed; /// One could use double quotes to code string values with spaces.; /// Fields separated from each other with spaces",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/src/TRootSniffer.cxx:165,depend,depending,165,net/http/src/TRootSniffer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/src/TRootSniffer.cxx,1,['depend'],['depending']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Scans object properties; ///; /// here such fields as `_autoload` or `_icon` properties depending on class or object name could be assigned; /// By default properties, coded in the Class title are scanned. Example:; ///; /// ClassDef(UserClassName, 1) // class comments *SNIFF* _field1=value _field2=""string value""; ///; /// Here *SNIFF* mark is important. After it all expressions like field=value are parsed; /// One could use double quotes to code string values with spaces.; /// Fields separated from each other with spaces",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/httpsniff/src/TRootSnifferFull.cxx:174,depend,depending,174,net/httpsniff/src/TRootSnifferFull.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/httpsniff/src/TRootSnifferFull.cxx,1,['depend'],['depending']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Search for an object at pixel position px,py.; ///; /// Check if point is in this pad.; ///; /// If yes, check if it is in one of the sub-pads; ///; /// If found in the pad, compute closest distance of approach; /// to each primitive.; ///; /// If one distance of approach is found to be within the limit Distancemaximum; /// the corresponding primitive is selected and the routine returns.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TPad.cxx:460,rout,routine,460,graf2d/gpad/src/TPad.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TPad.cxx,1,['rout'],['routine']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Secure Remote Password protocol (no longer supported)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/rpdutils/src/rpdutils.cxx:109,protocol,protocol,109,net/rpdutils/src/rpdutils.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/rpdutils/src/rpdutils.cxx,1,['protocol'],['protocol']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// See more general prototype below.; /// This interface kept for back compatibility; /// It is recommended to use the other interface where one can specify also epsabs and the maximum number of; /// points",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TF1.cxx:130,interface,interface,130,hist/hist/src/TF1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TF1.cxx,2,['interface'],['interface']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Selection method. User can override this method for specialized; /// selection of acceptable functions in fit. Default is to select; /// all. This message is sent during the build-up of the function; /// candidates table once for each set of powers in; /// variables. Notice, that the argument array contains the powers; /// PLUS ONE. For example, to De select the function; /// f = x1^2 * x2^4 * x3^5,; /// this method should return kFALSE if given the argument; /// { 3, 4, 6 }",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TMultiDimFit.cxx:233,message,message,233,hist/hist/src/TMultiDimFit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TMultiDimFit.cxx,1,['message'],['message']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Send DND drop message to target window.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGDNDManager.cxx:100,message,message,100,gui/gui/src/TGDNDManager.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGDNDManager.cxx,1,['message'],['message']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Send DND enter message to target window.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGDNDManager.cxx:101,message,message,101,gui/gui/src/TGDNDManager.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGDNDManager.cxx,1,['message'],['message']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Send DND finished message to source window.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGDNDManager.cxx:104,message,message,104,gui/gui/src/TGDNDManager.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGDNDManager.cxx,1,['message'],['message']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Send DND leave message to target window.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGDNDManager.cxx:101,message,message,101,gui/gui/src/TGDNDManager.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGDNDManager.cxx,1,['message'],['message']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Send DND position message to target window.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGDNDManager.cxx:104,message,message,104,gui/gui/src/TGDNDManager.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGDNDManager.cxx,1,['message'],['message']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Send DND status message to source window.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGDNDManager.cxx:102,message,message,102,gui/gui/src/TGDNDManager.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGDNDManager.cxx,1,['message'],['message']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Send GOASYNC message to the master.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:99,message,message,99,proof/proof/src/TProof.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx,1,['message'],['message']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Send STOPPROCESS message to master and workers.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:103,message,message,103,proof/proof/src/TProof.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx,1,['message'],['message']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Send a message on the status bar.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TTreeViewer.cxx:93,message,message,93,tree/treeviewer/src/TTreeViewer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TTreeViewer.cxx,1,['message'],['message']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Send a message to connected users. Only superusers can do this.; /// The first argument specifies the message or the file from where to take; /// the message.; /// The second argument specifies the user to which to send the message: if; /// empty or null the message is send to all the connected users.; /// return 0 in case of success, -1 in case of error",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofMgr.cxx:93,message,message,93,proof/proof/src/TProofMgr.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofMgr.cxx,5,['message'],['message']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Send a single message opcode. Use kind (opcode) to set the; /// TMessage ""what"" field. Returns the number of bytes that were sent; /// (always sizeof(Int_t)) and -1 in case of error. In case the kind has; /// been or'ed with kMESS_ACK, the call will only return after having; /// received an acknowledgement, making the sending process synchronous.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TSocket.cxx:100,message,message,100,net/net/src/TSocket.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TSocket.cxx,2,['message'],['message']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Send a status and a single message opcode. Use kind (opcode) to set the; /// TMessage ""what"" field. Returns the number of bytes that were sent; /// (always 2*sizeof(Int_t)) and -1 in case of error. In case the kind has; /// been or'ed with kMESS_ACK, the call will only return after having; /// received an acknowledgement, making the sending process synchronous.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TSocket.cxx:113,message,message,113,net/net/src/TSocket.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TSocket.cxx,2,['message'],['message']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Send a string. Message will be of type ""kind"".",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/rpdutils/src/DaemonUtils.cxx:101,Message,Message,101,net/rpdutils/src/DaemonUtils.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/rpdutils/src/DaemonUtils.cxx,2,['Message'],['Message']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Send a typed message; /// Return:; /// 0 if OK; /// -1 if invalid descriptor; /// -2 if failed to acquire mutex lock",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/rpdutils/src/rpdconn.cxx:99,message,message,99,net/rpdutils/src/rpdconn.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/rpdutils/src/rpdconn.cxx,1,['message'],['message']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Send an asychronous message to the master / client .; /// Masters will forward up the message to the client.; /// The client prints 'msg' of stderr and adds a '\\n'/'\\r' depending on; /// 'lf' being kTRUE (default) or kFALSE.; /// Returns the return value from TSocket::Send(TMessage &) .",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:106,message,message,106,proof/proof/src/TProofServ.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx,3,"['depend', 'message']","['depending', 'message']"
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Send buffer of len bytes. Message will be of type ""kind"".",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/rpdutils/src/DaemonUtils.cxx:112,Message,Message,112,net/rpdutils/src/DaemonUtils.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/rpdutils/src/DaemonUtils.cxx,2,['Message'],['Message']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Send button messages to the number field (true) or parent widget (false).; /// When the message is sent to the parent widget, it is responsible to change; /// the numerical value accordingly. This can be useful to implement cursors; /// which move from data point to data point. For the message being sent; /// see ProcessMessage().",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGNumberEntry.cxx:98,message,messages,98,gui/gui/src/TGNumberEntry.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGNumberEntry.cxx,3,['message'],"['message', 'messages']"
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Send close message to self. This method should be called from; /// a button to close this window.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGFrame.cxx:97,message,message,97,gui/gui/src/TGFrame.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGFrame.cxx,1,['message'],['message']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Send command to be executed on the PROOF master and/or slaves.; /// Command can be any legal command line command, however commands; /// like "".x file.C"" or "".L file.C"" will not cause the file.C to be; /// transfered to the PROOF cluster. In that case use TProof::Exec().; /// Returns the status send by the remote server as part of the; /// kPROOF_LOGDONE message. Typically this is the return code of the; /// command on the remote side. Returns -1 in case of error.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:443,message,message,443,proof/proof/src/TProof.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx,1,['message'],['message']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Send integer. Message will be of type ""kind"".",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/rpdutils/src/DaemonUtils.cxx:100,Message,Message,100,net/rpdutils/src/DaemonUtils.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/rpdutils/src/DaemonUtils.cxx,2,['Message'],['Message']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Send mess to syslog daemon. Level is the logging level and mess the; /// message that will be written on the log.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx:159,message,message,159,core/base/src/TSystem.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx,1,['message'],['message']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Send message (i.e. event) to window w. Message is encoded in one long; /// as message type and up to two long parameters.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGEventHandler.cxx:91,message,message,91,gui/gui/src/TGEventHandler.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGEventHandler.cxx,6,"['Message', 'message']","['Message', 'message']"
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Send message to intermediate coordinator. Only meaningful when there is one,; /// i.e. in XPD framework",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TSlave.cxx:91,message,message,91,proof/proof/src/TSlave.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TSlave.cxx,1,['message'],['message']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Send message to server process to retrieve output value; /// If error were logged use logEvalError() on remote side; /// transfer those errors to the local eval error queue.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealMPFE.cxx:91,message,message,91,roofit/roofitcore/src/RooRealMPFE.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealMPFE.cxx,1,['message'],['message']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Send message; /// Return:; /// 0 if OK; /// -1 if invalid descriptor; /// -2 if failed to acquire mutex lock",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/rpdutils/src/rpdconn.cxx:91,message,message,91,net/rpdutils/src/rpdconn.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/rpdutils/src/rpdconn.cxx,1,['message'],['message']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Send print command to master server. Returns number of slaves message; /// was sent to. Returns -1 in case of error.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:148,message,message,148,proof/proof/src/TProof.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx,1,['message'],['message']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Send progress message to client.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TVirtualPacketizer.cxx:100,message,message,100,proof/proof/src/TVirtualPacketizer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TVirtualPacketizer.cxx,1,['message'],['message']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Send startup message.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:99,message,message,99,proof/proof/src/TProof.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx,1,['message'],['message']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Sends a string to master and workers and expect them to echo it back to; /// the client via a message. It is a special case of the generic Echo(); /// that works with TObjects. Returns -1 on error, the number of workers that; /// received the message on success.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:180,message,message,180,proof/proof/src/TProof.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx,2,['message'],['message']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Sends an object to master and workers and expect them to send back a; /// message with the output of its TObject::Print(). Returns -1 on error, the; /// number of workers that received the objects on success.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:160,message,message,160,proof/proof/src/TProof.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx,1,['message'],['message']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Server loop of remote processes. This function will return; /// only when an incoming TERMINATE message is received.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealMPFE.cxx:182,message,message,182,roofit/roofitcore/src/RooRealMPFE.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealMPFE.cxx,1,['message'],['message']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Set a callback to receive error messages.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:118,message,messages,118,core/metacling/src/TCling.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx,1,['message'],['messages']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Set a fit or plotting range.; /// Ranges can be selected for e.g. fitting, plotting or integration. Note that multiple; /// variables can have ranges with the same name, so multi-dimensional PDFs can be sliced.; /// See also the tutorial rf203_ranges.C; /// \param[in] name Name this range (so it can be selected later for fitting or; /// plotting). If the name is `nullptr`, the function sets the limits of the default range.; /// \param[in] min Miniminum of the range.; /// \param[in] max Maximum of the range.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealVar.cxx:173,integrat,integration,173,roofit/roofitcore/src/RooRealVar.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealVar.cxx,1,['integrat'],['integration']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Set a wrapper/accessor function around this class custom conversion streamer.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:92,wrap,wrapper,92,core/meta/src/TClass.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx,1,['wrap'],['wrapper']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Set a wrapper/accessor function around this class custom streamer.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:92,wrap,wrapper,92,core/meta/src/TClass.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx,1,['wrap'],['wrapper']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Set appropriate cache operation mode for integral depending on cache operation; /// mode of server objects",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:136,depend,depending,136,roofit/roofitcore/src/RooRealIntegral.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx,1,['depend'],['depending']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Set branch status to Process or DoNotProcess; ///; /// \param[in] bname is the name of a branch. if bname=""*"", apply to all branches.; /// \param[in] status = 1 branch will be processed,; /// = 0 branch will not be processed; /// \param[out] found; ///; /// See IMPORTANT REMARKS in TTree::SetBranchStatus and TChain::SetBranchAddress; ///; /// If found is not 0, the number of branch(es) found matching the regular; /// expression is returned in *found AND the error message 'unknown branch'; /// is suppressed.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TChain.cxx:554,message,message,554,tree/tree/src/TChain.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TChain.cxx,1,['message'],['message']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Set defaults depending on settings in the user's .rootrc.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TRootBrowserLite.cxx:99,depend,depending,99,gui/gui/src/TRootBrowserLite.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TRootBrowserLite.cxx,1,['depend'],['depending']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Set dimensions of the hyperboloid starting from an array.; /// - param[0] = dz; /// - param[1] = rin; /// - param[2] = stin; /// - param[3] = rout; /// - param[4] = stout",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoHype.cxx:228,rout,rout,228,geom/geom/src/TGeoHype.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoHype.cxx,1,['rout'],['rout']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Set index value of a RooAbsCategoryLValue stored in set with given name to newVal.; /// No error messages are printed unless the verbose flag is set",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsCollection.cxx:183,message,messages,183,roofit/roofitcore/src/RooAbsCollection.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsCollection.cxx,1,['message'],['messages']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Set opacity of a window. This image manipulation routine works; /// by adding to a percent amount of neutral to each pixels RGB.; /// Since it requires quite some additional color map entries is it; /// only supported on displays with more than > 8 color planes (> 256; /// colors)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/src/TGWin32.cxx:135,rout,routine,135,graf2d/win32gdk/src/TGWin32.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/src/TGWin32.cxx,1,['rout'],['routine']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Set opacity of a window. This image manipulation routine works; /// by adding to a percent amount of neutral to each pixels RGB.; /// Since it requires quite some additional color map entries is it; /// only supported on displays with more than > 8 color planes (> 256; /// colors).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/x11/src/TGX11.cxx:135,rout,routine,135,graf2d/x11/src/TGX11.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/x11/src/TGX11.cxx,1,['rout'],['routine']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Set or modify a parameterised range, i.e., a range the varies in dependence; /// of parameters.; /// See setRange() for more details.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealVar.cxx:151,depend,dependence,151,roofit/roofitcore/src/RooRealVar.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealVar.cxx,1,['depend'],['dependence']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Set protocol and, optionally, change the port accordingly.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TUrl.cxx:90,protocol,protocol,90,core/base/src/TUrl.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TUrl.cxx,1,['protocol'],['protocol']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Set state name of a RooAbsCategoryLValue stored in set with given name to newVal.; /// No error messages are printed unless the verbose flag is set",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsCollection.cxx:182,message,messages,182,roofit/roofitcore/src/RooAbsCollection.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsCollection.cxx,1,['message'],['messages']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Set string value of a RooStringVar stored in set with given name to newVal.; /// No error messages are printed unless the verbose flag is set",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsCollection.cxx:176,message,messages,176,roofit/roofitcore/src/RooAbsCollection.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsCollection.cxx,1,['message'],['messages']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Set the THtml object owning this object; if it's already set to; /// a different THtml object than issue an error message and signal to; /// the currently set object that we are not belonging to it anymore.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx:200,message,message,200,html/src/THtml.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx,1,['message'],['message']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Set the given integrator configuration as default numeric integration; /// configuration for this object",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx:100,integrat,integrator,100,roofit/roofitcore/src/RooAbsReal.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx,2,['integrat'],"['integration', 'integrator']"
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Set the interface that the TGTable uses to interface.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGTable.cxx:94,interface,interface,94,gui/gui/src/TGTable.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGTable.cxx,2,['interface'],['interface']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Set the line-width, taking the global scaling into account.; /// Wrapper for glLineWidth.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLUtil.cxx:151,Wrap,Wrapper,151,graf3d/gl/src/TGLUtil.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLUtil.cxx,1,['Wrap'],['Wrapper']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Set the message length at the beginning of the message buffer.; /// This method is only called by TSocket::Send().",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TMessage.cxx:94,message,message,94,net/net/src/TMessage.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TMessage.cxx,2,['message'],['message']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Set the message to be notified in case of exception",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx:94,message,message,94,proof/proofplayer/src/TProofPlayer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx,1,['message'],['message']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Set the message to be sent back in case of exceptions",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:94,message,message,94,proof/proof/src/TProofServ.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx,1,['message'],['message']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Set the point-size, taking the global scaling into account.; /// Wrapper for glPointSize.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLUtil.cxx:151,Wrap,Wrapper,151,graf3d/gl/src/TGLUtil.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLUtil.cxx,1,['Wrap'],['Wrapper']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Set the prefix to be used when printing informational message.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TFileMerger.cxx:140,message,message,140,io/io/src/TFileMerger.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TFileMerger.cxx,1,['message'],['message']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Set the random generator seed. Note that default value is zero, which is; /// different than the default value used when constructing the class.; /// If the seed is zero the seed is set to a random value; /// which in case of TRandom depends on the lowest 4 bytes of TUUID; /// The UUID will be identical if SetSeed(0) is called with time smaller than 100 ns; /// Instead if a different generator implementation is used (TRandom1, 2 or 3); /// the seed is generated using a 128 bit UUID. This results in different seeds; /// and then random sequence for every SetSeed(0) call.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/TRandom.cxx:320,depend,depends,320,math/mathcore/src/TRandom.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/TRandom.cxx,1,['depend'],['depends']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Set the required integration precision, see TF1::Integral()",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TBinomialEfficiencyFitter.cxx:103,integrat,integration,103,hist/hist/src/TBinomialEfficiencyFitter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TBinomialEfficiencyFitter.cxx,1,['integrat'],['integration']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Set title bar color (blue or grey, depends on active state).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGMdiDecorFrame.cxx:121,depend,depends,121,gui/gui/src/TGMdiDecorFrame.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGMdiDecorFrame.cxx,1,['depend'],['depends']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Set total size of this 3D object (used by X3D interface).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TAtt3D.cxx:132,interface,interface,132,core/base/src/TAtt3D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TAtt3D.cxx,1,['interface'],['interface']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Set type id depending on name.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TDataType.cxx:98,depend,depending,98,core/meta/src/TDataType.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TDataType.cxx,2,['depend'],['depending']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Set up the interface. Called by the ctor or by the 'Show' method.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/ged/src/TStyleManager.cxx:97,interface,interface,97,gui/ged/src/TStyleManager.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/ged/src/TStyleManager.cxx,1,['interface'],['interface']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Set value by specifying the index code of the desired state.; /// If printError is set, a message will be printed if; /// the specified index does not represent a valid state.; /// \return bool signalling if an error occurred.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooCategory.cxx:176,message,message,176,roofit/roofitcore/src/RooCategory.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooCategory.cxx,1,['message'],['message']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Set value by specifying the name of the desired state.; /// If printError is set, a message will be printed if; /// the specified label does not represent a valid state.; /// \return false on success.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooCategory.cxx:170,message,message,170,roofit/roofitcore/src/RooCategory.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooCategory.cxx,1,['message'],['message']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Set value of a RooAbsRealLValue stored in set with given name to newVal; /// No error messages are printed unless the verbose flag is set",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsCollection.cxx:172,message,messages,172,roofit/roofitcore/src/RooAbsCollection.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsCollection.cxx,1,['message'],['messages']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Set verbosity level (static function).; /// - 0 - suppress messages related to geom-painter visibility level; /// - 1 - default value",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx:145,message,messages,145,geom/geom/src/TGeoManager.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx,1,['message'],['messages']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Set visualization-parameter model element.; /// Calling of this function from outside of EVE should in principle; /// be avoided as it can lead to dis-synchronization of viz-tag and; /// viz-model.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/src/REveElement.cxx:237,synchroniz,synchronization,237,graf3d/eve7/src/REveElement.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/src/REveElement.cxx,1,['synchroniz'],['synchronization']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Set whether this collection is the owner (enable==true); /// of its content. If it is the owner of its contents,; /// these objects will be deleted whenever the collection itself; /// is deleted. The objects might also be deleted or destructed when Clear; /// is called (depending on the collection).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TCollection.cxx:357,depend,depending,357,core/cont/src/TCollection.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TCollection.cxx,1,['depend'],['depending']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Set whether this map is the owner (enable==true); /// of its values. If it is the owner of its contents,; /// these objects will be deleted whenever the collection itself; /// is deleted. The objects might also be deleted or destructed when Clear; /// is called (depending on the collection).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TMap.cxx:349,depend,depending,349,core/cont/src/TMap.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TMap.cxx,1,['depend'],['depending']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Sets a new buffer in an existing TBuffer object. If newsiz=0 then the; /// new buffer is expected to have the same size as the previous buffer.; /// The current buffer position is reset to the start of the buffer.; /// If the TBuffer owned the previous buffer, it will be deleted prior; /// to accepting the new buffer. By default the new buffer will be; /// adopted unless adopt is false.; ///; /// If the new buffer is _not_ adopted and no memory allocation routine; /// is provided, a Fatal error will be issued if the Buffer attempts to; /// expand.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TBuffer.cxx:546,rout,routine,546,core/base/src/TBuffer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TBuffer.cxx,1,['rout'],['routine']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Sets opacity of the current window. This image manipulation routine; /// works by adding to a percent amount of neutral to each pixels RGB.; /// Since it requires quite some additional color map entries is it; /// only supported on displays with more than > 8 color planes (> 256; /// colors).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx:146,rout,routine,146,core/base/src/TVirtualX.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx,1,['rout'],['routine']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Sets the histogram to be filled.; /// If the 2D graph needs to be save in a TFile the following set should be; /// followed to read it back:; /// 1. Create TGraph2D; /// 2. Call g->SetHistogram(h), and do whatever you need to do; /// 3. Save g and h to the TFile, exit; /// 4. Open the TFile, retrieve g and h; /// 5. Call h->SetDirectory(0); /// 6. Call g->SetHistogram(h) again; /// 7. Carry on as normal; ///; /// By default use the new interpolation routine based on Triangles; /// If the option ""old"" the old interpolation is used",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraph2D.cxx:540,rout,routine,540,hist/hist/src/TGraph2D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraph2D.cxx,1,['rout'],['routine']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Sets the value of any argument in our set that also appears in the other set.; /// \param[in] other Collection holding the arguments to synchronize values with.; /// \param[in] forceIfSizeOne If set to true and both our collection; /// and the other collection have a size of one, the arguments are; /// always synchronized without checking if they have the same name.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsCollection.cxx:222,synchroniz,synchronize,222,roofit/roofitcore/src/RooAbsCollection.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsCollection.cxx,2,['synchroniz'],"['synchronize', 'synchronized']"
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Sets up the matrix for the main linear system in ""augmented system"" form. The; /// actual factorization is performed by a routine specific to either the sparse; /// or dense case",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/quadp/src/TQpLinSolverBase.cxx:208,rout,routine,208,math/quadp/src/TQpLinSolverBase.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/quadp/src/TQpLinSolverBase.cxx,1,['rout'],['routine']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Setup LOD-dependant values in scene-info.; /// We have to perform LOD quantization for all draw-elements.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLScene.cxx:96,depend,dependant,96,graf3d/gl/src/TGLScene.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLScene.cxx,1,['depend'],['dependant']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Setup LOD-dependant values in scene-info.; ///; /// Nothing to be done here but to store the last LOD.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLSceneBase.cxx:96,depend,dependant,96,graf3d/gl/src/TGLSceneBase.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLSceneBase.cxx,1,['depend'],['dependant']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Setup reporting of feedback objects and progress messages.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx:135,message,messages,135,proof/proofplayer/src/TProofPlayer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx,1,['message'],['messages']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Show/hide interface for material selection.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/geombuilder/src/TGeoManagerEditor.cxx:96,interface,interface,96,geom/geombuilder/src/TGeoManagerEditor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geombuilder/src/TGeoManagerEditor.cxx,1,['interface'],['interface']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Show/hide interface for matrix selection.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/geombuilder/src/TGeoManagerEditor.cxx:96,interface,interface,96,geom/geombuilder/src/TGeoManagerEditor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geombuilder/src/TGeoManagerEditor.cxx,1,['interface'],['interface']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Show/hide interface for medium selection.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/geombuilder/src/TGeoManagerEditor.cxx:96,interface,interface,96,geom/geombuilder/src/TGeoManagerEditor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geombuilder/src/TGeoManagerEditor.cxx,1,['interface'],['interface']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Show/hide interface for shape selection.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/geombuilder/src/TGeoManagerEditor.cxx:96,interface,interface,96,geom/geombuilder/src/TGeoManagerEditor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geombuilder/src/TGeoManagerEditor.cxx,1,['interface'],['interface']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Show/hide interface for volume selection.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/geombuilder/src/TGeoManagerEditor.cxx:96,interface,interface,96,geom/geombuilder/src/TGeoManagerEditor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geombuilder/src/TGeoManagerEditor.cxx,1,['interface'],['interface']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Simple recursive algorithm to find the permutations of; /// n natural numbers, not necessarily all distinct; /// adapted from CERNLIB routine PERMU.; /// The input array has to be initialised with a non descending; /// sequence. The method returns kFALSE when; /// all combinations are exhausted.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/TMath.cxx:220,rout,routine,220,math/mathcore/src/TMath.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/TMath.cxx,1,['rout'],['routine']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Single interface to get element properties.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoMaterial.cxx:93,interface,interface,93,geom/geom/src/TGeoMaterial.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoMaterial.cxx,1,['interface'],['interface']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Slot called every time the name is changed. Provide some protection; /// to avoid letting the user use an empty name or an already used one.; /// A warning message can be shown and the OK button disabled.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/ged/src/TStyleDialog.cxx:242,message,message,242,gui/ged/src/TStyleDialog.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/ged/src/TStyleDialog.cxx,1,['message'],['message']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Slot for Rout.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/geombuilder/src/TGeoHypeEditor.cxx:95,Rout,Rout,95,geom/geombuilder/src/TGeoHypeEditor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geombuilder/src/TGeoHypeEditor.cxx,1,['Rout'],['Rout']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Smooth a curve given by N points.; ///; /// The original code is from an underlaying routine for Draw based on the; /// CERN GD3 routine TVIPTE:; ///; /// Author - Marlow etc. Modified by - P. Ward Date - 3.10.1973; ///; /// This method draws a smooth tangentially continuous curve through; /// the sequence of data points P(I) I=1,N where P(I)=(X(I),Y(I)).; /// The curve is approximated by a polygonal arc of short vectors.; /// The data points can represent open curves, P(1) != P(N) or closed; /// curves P(2) == P(N). If a tangential discontinuity at P(I) is; /// required, then set P(I)=P(I+1). Loops are also allowed.; ///; /// Reference Marlow and Powell, Harwell report No.R.7092.1972; /// MCCONALOGUE, Computer Journal VOL.13, NO4, NOV1970P p392 6; ///; /// - npoints : Number of data points.; /// - x : Abscissa; /// - y : Ordinate",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:171,rout,routine,171,hist/histpainter/src/TGraphPainter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx,2,['rout'],['routine']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Smooth array xx, translation of Hbook routine `hsmoof.F`.; /// Based on algorithm 353QH twice presented by J. Friedman; /// in [Proc. of the 1974 CERN School of Computing, Norway, 11-24 August, 1974](https://cds.cern.ch/record/186223).; /// See also Section 4.2 in [J. Friedman, Data Analysis Techniques for High Energy Physics](https://www.slac.stanford.edu/pubs/slacreports/reports16/slac-r-176.pdf).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:124,rout,routine,124,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,1,['rout'],['routine']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Sort icons, and send message to browser with number of objects; /// in box.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TRootBrowserLite.cxx:107,message,message,107,gui/gui/src/TRootBrowserLite.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TRootBrowserLite.cxx,1,['message'],['message']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Special generator interface for generation of 'global observables' -- for RooStats tools",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx:104,interface,interface,104,roofit/roofitcore/src/RooAbsPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx,2,['interface'],['interface']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Special version of RooAbsReal::createProjection that deals with; /// projections of projections. Instead of integrating twice, a new; /// RooProjectedPdf is returned that is configured to perform the; /// complete integration in one step",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProjectedPdf.cxx:194,integrat,integrating,194,roofit/roofitcore/src/RooProjectedPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProjectedPdf.cxx,2,['integrat'],"['integrating', 'integration']"
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Static function to paint special objects like vectors and matrices.; /// This function is called via `gROOT->ProcessLine` to paint these objects; /// without having a direct dependency of the graphics or histogramming; /// system.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:260,depend,dependency,260,hist/histpainter/src/THistPainter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx,1,['depend'],['dependency']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Static function, interface to TSpectrum::Background.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum.cxx:103,interface,interface,103,hist/spectrum/src/TSpectrum.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum.cxx,1,['interface'],['interface']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Static function, interface to TSpectrum::Search.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum.cxx:103,interface,interface,103,hist/spectrum/src/TSpectrum.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum.cxx,1,['interface'],['interface']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Static method returning color number for color specified by; /// system dependent pixel value. Pixel values can be obtained, e.g.,; /// from the GUI color picker.; ///; /// The color retrieval is done using a threshold defined by SetColorThreshold.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TColor.cxx:158,depend,dependent,158,core/base/src/TColor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TColor.cxx,1,['depend'],['dependent']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Static method returning supported client protocol.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/auth/src/TAuthenticate.cxx:127,protocol,protocol,127,net/auth/src/TAuthenticate.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/auth/src/TAuthenticate.cxx,2,['protocol'],['protocol']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Statistical test of compatibility in shape between; /// THIS histogram and h2, using Kolmogorov test.; /// Default: Ignore under- and overflow bins in comparison; ///; /// option is a character string to specify options; /// - ""U"" include Underflows in test; /// - ""O"" include Overflows; /// - ""N"" include comparison of normalizations; /// - ""D"" Put out a line of ""Debug"" printout; /// - ""M"" Return the Maximum Kolmogorov distance instead of prob; ///; /// The returned function value is the probability of test; /// (much less than one means NOT compatible); ///; /// The KS test uses the distance between the pseudo-CDF's obtained; /// from the histogram. Since in 2D the order for generating the pseudo-CDF is; /// arbitrary, two pairs of pseudo-CDF are used, one starting from the x axis the; /// other from the y axis and the maximum distance is the average of the two maximum; /// distances obtained.; ///; /// Code adapted by Rene Brun from original HBOOK routine HDIFF",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH2.cxx:1049,rout,routine,1049,hist/hist/src/TH2.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH2.cxx,1,['rout'],['routine']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Store message origin, keep statistics and call Notify().",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TMessageHandler.cxx:92,message,message,92,core/base/src/TMessageHandler.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TMessageHandler.cxx,1,['message'],['message']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Strip off protocol string from specified path",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx:96,protocol,protocol,96,core/base/src/TSystem.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx,1,['protocol'],['protocol']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Switch ON/OFF the real-time logging facility. When this option is; /// ON, log messages from processing are sent back as they come, instead of; /// being sent back at the end in one go. This may help debugging or monitoring; /// in some cases, but, depending on the amount of log, it may have significant; /// consequencies on the load over the network, so it must be used with care.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:165,message,messages,165,proof/proof/src/TProof.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx,2,"['depend', 'message']","['depending', 'messages']"
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Synchronize a file's in-memory and on-disk states.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TFile.cxx:86,Synchroniz,Synchronize,86,io/io/src/TFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TFile.cxx,1,['Synchroniz'],['Synchronize']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Synchronize all the formulae.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormulaManager.cxx:86,Synchroniz,Synchronize,86,tree/treeplayer/src/TTreeFormulaManager.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormulaManager.cxx,1,['Synchroniz'],['Synchronize']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// TAttImage normal constructor.; /// Image attributes are taken from the argument list; ///; /// \param[in] lquality must be one of EImageQuality (kImgDefault is same as; /// kImgGood in the current implementation); /// \param[in] lcompression defines the compression rate of the color data in the; /// image. Speed and memory depends on this rate, but not; /// the image display itself; /// 0: no compression; 100: max compression; /// \param[in] constRatio keeps the aspect ratio of the image constant on the; /// screen (in pixel units)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/graf/src/TAttImage.cxx:411,depend,depends,411,graf2d/graf/src/TAttImage.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/graf/src/TAttImage.cxx,1,['depend'],['depends']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// TEveVectorF wrapper.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveTrackPropagator.cxx:98,wrap,wrapper,98,graf3d/eve/src/TEveTrackPropagator.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveTrackPropagator.cxx,4,['wrap'],['wrapper']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// TFTP dtor. Send close message and close socket.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TFTP.cxx:108,message,message,108,net/net/src/TFTP.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TFTP.cxx,1,['message'],['message']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// TFractionFitter constructor. Does a complete initialisation (including; /// consistency checks, default fit range as the whole histogram but without; /// under- and overflows, and declaration of the fit parameters). Note that; /// the histograms are not copied, only references are used.; /// \param[in] data histogram to be fitted; /// \param[in] MCs array of TH1* corresponding template distributions; /// \param[in] option can be used to control the print level of the minimization algorithm; /// - option = ""Q"" : quite - no message is printed; /// - option = ""V"" : verbose - max print out; /// - option = """" : default: print initial fraction values and result",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TFractionFitter.cxx:614,message,message,614,hist/hist/src/TFractionFitter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TFractionFitter.cxx,1,['message'],['message']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// TNetFile dtor. Send close message and close socket.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TNetFile.cxx:112,message,message,112,net/net/src/TNetFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TNetFile.cxx,1,['message'],['message']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// TObject constructor. It sets the two data words of TObject to their; /// initial values. The unique ID is set to 0 and the status word is; /// set depending if the object is created on the stack or allocated; /// on the heap. Depending on the ROOT environment variable ""Root.ObjStat""; /// (see TEnv) the object is added to the global TObjectTable for; /// bookkeeping.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/TObject.h:233,depend,depending,233,core/base/inc/TObject.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/TObject.h,2,"['Depend', 'depend']","['Depending', 'depending']"
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// TView3D constructor; ///; /// Creates a 3-D view in the current pad; /// rmin[3], rmax[3] are the limits of the object depending on; /// the selected coordinate system; ///; /// Before drawing a 3-D object in a pad, a 3-D view must be created.; /// Note that a view is automatically created when drawing legos or surfaces.; ///; /// The coordinate system is selected via system:; /// - system = 1 Cartesian; /// - system = 2 Polar; /// - system = 3 Cylindrical; /// - system = 4 Spherical; /// - system = 5 PseudoRapidity/Phi",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/g3d/src/TView3D.cxx:205,depend,depending,205,graf3d/g3d/src/TView3D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/g3d/src/TView3D.cxx,1,['depend'],['depending']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Take a snap shot of current collection contents.; /// An owning collection is returned containing clones of; /// - Elements in this collection; /// - External dependents of all elements and recursively any dependents of those dependents; /// (if deepCopy flag is set); ///; /// This is useful to save the values of variables or parameters. It doesn't require; /// deep copying if the parameters are direct members of the collection.; ///; /// If deepCopy is specified, the client-server links between the cloned; /// list elements and the cloned external dependents are reconnected to; /// each other, making the snapshot a completely self-contained entity.; ///; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsCollection.cxx:245,depend,dependents,245,roofit/roofitcore/src/RooAbsCollection.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsCollection.cxx,4,['depend'],['dependents']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Take a snap shot of current collection contents:; /// A collection that owns its elements is returned containing clones of; /// - Elements in this collection; /// - External dependents of those elements; /// and recursively any dependents of those dependents; /// (if deepCopy flag is set); ///; /// If deepCopy is specified, the client-server links between the cloned; /// list elements and the cloned external dependents are reconnected to; /// each other, making the snapshot a completely self-contained entity.; ///; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsCollection.cxx:260,depend,dependents,260,roofit/roofitcore/src/RooAbsCollection.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsCollection.cxx,4,['depend'],['dependents']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Tell WM to send message when window is closed via WM.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/src/TGWin32.cxx:102,message,message,102,graf2d/win32gdk/src/TGWin32.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/src/TGWin32.cxx,2,['message'],['message']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Tells WM to send message when window is closed via WM.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx:103,message,message,103,core/base/src/TVirtualX.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx,1,['message'],['message']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Test if any of the dependents of the arg tree (as determined by getObservables); /// overlaps with those of the testArg.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsArg.cxx:105,depend,dependents,105,roofit/roofitcore/src/RooAbsArg.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsArg.cxx,2,['depend'],['dependents']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Test whether we depend on (ie, are served by) an object with a specific name.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsArg.cxx:102,depend,depend,102,roofit/roofitcore/src/RooAbsArg.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsArg.cxx,1,['depend'],['depend']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Test whether we depend on (ie, are served by) any object in the; /// specified collection. Uses the dependsOn(RooAbsArg&) member function.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsArg.cxx:102,depend,depend,102,roofit/roofitcore/src/RooAbsArg.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsArg.cxx,2,['depend'],"['depend', 'dependsOn']"
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Tests for termination. Unless the user supplies a specific termination; /// routine, this method calls another method defaultStatus, which returns; /// a code indicating the current convergence status.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/quadp/src/TQpSolverBase.cxx:162,rout,routine,162,math/quadp/src/TQpSolverBase.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/quadp/src/TQpSolverBase.cxx,1,['rout'],['routine']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Text has changed message.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGNumberEntry.cxx:103,message,message,103,gui/gui/src/TGNumberEntry.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGNumberEntry.cxx,1,['message'],['message']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// The ""p"" argument points to a `<select>`. This routine scans all; /// subsequent elements (up to the next `</select>`) looking for; /// `<option>` tags. For each option tag, it appends the corresponding; /// entry to the ""lb"" listbox element.; ///; /// lb -- An TGListBox object; /// p -- The `<SELECT>` markup; /// pEnd -- The `</SELECT>` markup",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/guihtml/src/TGHtmlForm.cxx:132,rout,routine,132,gui/guihtml/src/TGHtmlForm.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/guihtml/src/TGHtmlForm.cxx,1,['rout'],['routine']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// The 'name' is known to the interpreter, this function returns; /// the internal version of this name (usually just resolving typedefs); /// This is used in particular to synchronize between the name used; /// by rootcling and by the run-time environment (TClass); /// Return 0 if the name is not known.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:256,synchroniz,synchronize,256,core/metacling/src/TCling.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx,1,['synchroniz'],['synchronize']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// The Init() function is called when the selector needs to initialize; /// a new tree or chain. Typically here the branch addresses and branch; /// pointers of the tree will be set.; /// It is normally not necessary to make changes to the generated; /// code, but the routine can be extended by the user if needed.; /// Init() will be called many times when running on PROOF; /// (once per file to be processed).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TSelectorEntries.cxx:352,rout,routine,352,tree/treeplayer/src/TSelectorEntries.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TSelectorEntries.cxx,1,['rout'],['routine']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// The LANDAU function.; ///; /// mu is a location parameter and correspond approximately to the most probable value; /// and sigma is a scale parameter (not the sigma of the full distribution which is not defined); /// Note that for mu=0 and sigma=1 (default values) the exact location of the maximum of the distribution; /// (most proper value) is at x = -0.22278; /// This function has been adapted from the CERNLIB routine G110 denlan.; /// If norm=kTRUE (default is kFALSE) the result is divided by sigma",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/TMath.cxx:502,rout,routine,502,math/mathcore/src/TMath.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/TMath.cxx,1,['rout'],['routine']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// The PROOF error handler function. It prints the message on fgErrorHandlerFile and; /// if abort is set it aborts the application.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:134,message,message,134,proof/proof/src/TProofServ.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx,1,['message'],['message']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// The computation routine of the Chisquare test. For the method description,; /// see Chi2Test() function.; ///; /// \return p-value; /// \param[in] h2 the second histogram; /// \param[in] option; /// - ""UU"" = experiment experiment comparison (unweighted-unweighted); /// - ""UW"" = experiment MC comparison (unweighted-weighted). Note that the first; /// histogram should be unweighted; /// - ""WW"" = MC MC comparison (weighted-weighted); /// - ""NORM"" = if one or both histograms is scaled; /// - ""OF"" = overflows included; /// - ""UF"" = underflows included; /// by default underflows and overflows are not included; /// \param[out] igood test output; /// - igood=0 - no problems; /// - For unweighted unweighted comparison; /// - igood=1'There is a bin in the 1st histogram with less than 1 event'; /// - igood=2'There is a bin in the 2nd histogram with less than 1 event'; /// - igood=3'when the conditions for igood=1 and igood=2 are satisfied'; /// - For unweighted weighted comparison; /// - igood=1'There is a bin in the 1st histogram with less then 1 event'; /// - igood=2'There is a bin in the 2nd histogram with less then 10 effective number of events'; /// - igood=3'when the conditions for igood=1 and igood=2 are satisfied'; /// - For weighted weighted comparison; /// - igood=1'There is a bin in the 1st histogram with less then 10 effective; /// number of events'; /// - igood=2'There is a bin in the 2nd histogram with less then 10 effective; /// number of events'; /// - igood=3'when the conditions for igood=1 and igood=2 are satisfied'; /// \param[out] chi2 chisquare of the test; /// \param[out] ndf number of degrees of freedom (important, when both histograms have the same empty bins); /// \param[out] res normalized residuals for further analysis",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:102,rout,routine,102,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,1,['rout'],['routine']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// The core of the MD5 algorithm, this alters an existing MD5 hash to; /// reflect the addition of 16 longwords of new data. Update() blocks; /// the data and converts bytes into longwords for this routine.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TMD5.cxx:281,rout,routine,281,core/base/src/TMD5.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TMD5.cxx,1,['rout'],['routine']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// The db should be of the form: `<dbms>://<host>[:<port>][/<database>]`,; /// e.g.: `mysql://pcroot.cern.ch:3456/test`, `oracle://srv1.cern.ch/main`,; /// `pgsql://...` or `sqlite://<database>...`; /// The uid is the username and pw the password that should be used for; /// the connection. Depending on the `<dbms>` the shared library (plugin); /// for the selected system will be loaded. When the connection could not; /// be opened 0 is returned.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TSQLServer.cxx:375,Depend,Depending,375,net/net/src/TSQLServer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TSQLServer.cxx,1,['Depend'],['Depending']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// The error handler function. It prints the message on stderr and; /// if abort is set it aborts the application.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TApplicationServer.cxx:128,message,message,128,net/net/src/TApplicationServer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TApplicationServer.cxx,1,['message'],['message']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// The fPSelStartBlock and fPSelEndBlock values have been changed.; /// This routine's job is to loop over all TGHtmlBlocks and either; /// set or clear the HTML_Selected bits in the .fFlags field; /// as appropriate. For every TGHtmlBlock where the bit changes,; /// mark that block for redrawing.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/guihtml/src/TGHtml.cxx:160,rout,routine,160,gui/guihtml/src/TGHtml.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/guihtml/src/TGHtml.cxx,1,['rout'],['routine']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// The grid should be of the form: `<grid>://<host>[:<port>]`,; /// e.g.: alien://alice.cern.ch; /// The uid is the username and pw the password that should be used for; /// the connection. Depending on the `<grid>` the shared library (plugin); /// for the selected system will be loaded. When the connection could not; /// be opened 0 is returned. For AliEn the supported options are:; /// -domain=`<domain name>`; /// -debug=`<debug level from 1 to 10>`; /// Example: ""-domain=cern.ch -debug=5""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TGrid.cxx:273,Depend,Depending,273,net/net/src/TGrid.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TGrid.cxx,1,['Depend'],['Depending']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// The number of matches is returned, this equals the full match +; /// sub-pattern matches.; /// nMaxMatch is the maximum allowed number of matches.; /// pos contains the string indices of the matches. Its usage is; /// shown in the routine MatchS.; /// For meaning of mods see ParseMods().",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TPRegexp.cxx:317,rout,routine,317,core/base/src/TPRegexp.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TPRegexp.cxx,1,['rout'],['routine']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// The rendering and layout routines should call this routine in order to; /// get a font structure. The iFont parameter specifies which of the N_FONT; /// fonts should be obtained. The font is allocated if necessary.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/guihtml/src/TGHtml.cxx:111,rout,routines,111,gui/guihtml/src/TGHtml.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/guihtml/src/TGHtml.cxx,2,['rout'],"['routine', 'routines']"
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// The result depends on the fStrategy",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerAdaptive.cxx:97,depend,depends,97,proof/proofplayer/src/TPacketizerAdaptive.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerAdaptive.cxx,1,['depend'],['depends']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// This a private API function.; /// It checks whether the connection string contains a PoD cluster protocol.; /// If it does, then the connection string will be changed to reflect; /// a real PROOF connection string for a PROOF cluster managed by PoD.; /// PoD: http://pod.gsi.de .; /// Return -1 if the PoD request failed; return 0 otherwise.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:183,protocol,protocol,183,proof/proof/src/TProof.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx,1,['protocol'],['protocol']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// This function builds the class charts for one class in GraphViz/Dot format,; /// i.e. the inheritance diagram, the include dependencies, and the library; /// dependency.; ///; /// Input: out - output file stream",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/html/src/TClassDocOutput.cxx:209,depend,dependencies,209,html/src/TClassDocOutput.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/TClassDocOutput.cxx,2,['depend'],"['dependencies', 'dependency']"
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// This function computes, to an attempted specified accuracy, the value of; /// the integral; ///; /// \param[in] n Number of dimensions [2,15]; /// \param[in] a,b One-dimensional arrays of length >= N . On entry A[i], and B[i],; /// contain the lower and upper limits of integration, respectively.; /// \param[in] maxpts Maximum number of function evaluations to be allowed.; /// maxpts >= 2^n +2*n*(n+1) +1; /// if maxpts<minpts, maxpts is set to 10*minpts; /// \param[in] epsrel Specified relative accuracy.; /// \param[in] epsabs Specified absolute accuracy.; /// The integration algorithm will attempt to reach either the relative or the absolute accuracy.; /// In case the maximum function called is reached the algorithm will stop earlier without having reached; /// the desired accuracy; ///; /// \param[out] relerr Contains, on exit, an estimation of the relative accuracy of the result.; /// \param[out] nfnevl number of function evaluations performed.; /// \param[out] ifail; /// \parblock; /// 0 Normal exit. At least minpts and at most maxpts calls to the function were performed.; ///; /// 1 maxpts is too small for the specified accuracy eps. The result and relerr contain the values obtainable for the; /// specified value of maxpts.; ///; /// 3 n<2 or n>15; /// \endparblock; ///; /// Method:; ///; /// The default method used is the Genz-Mallik adaptive multidimensional algorithm; /// using the class ROOT::Math::AdaptiveIntegratorMultiDim (see the reference documentation of the class); ///; /// Other methods can be used by setting ROOT::Math::IntegratorMultiDimOptions::SetDefaultIntegrator(); /// to different integrators.; /// Other possible integrators are MC integrators based on the ROOT::Math::GSLMCIntegrator class; /// Possible methods are : Vegas, Miser or Plain; /// IN case of MC integration the accuracy is determined by the number of function calls, one should be; /// careful not t",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TF1.cxx:356,integrat,integration,356,hist/hist/src/TF1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TF1.cxx,2,['integrat'],['integration']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// This function forces RooRealIntegral to offer all integration dependents; /// to RooAbsAnaConvPdf::getAnalyticalIntegralWN() for consideration for; /// internal integration, if RooRealIntegral considers this to be unsafe (e.g. due; /// to hidden Jacobian terms).; ///; /// RooAbsAnaConvPdf will not attempt to actually integrate all these dependents; /// but feed them to the resolution models integration interface, which will; /// make the final determination on how to integrate these dependents.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsAnaConvPdf.cxx:136,integrat,integration,136,roofit/roofitcore/src/RooAbsAnaConvPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsAnaConvPdf.cxx,9,"['depend', 'integrat', 'interface']","['dependents', 'integrate', 'integration', 'interface']"
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// This function is called when a warning from the parser has occurred.; /// Message is the parse error.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/xmlparser/src/TXMLParser.cxx:160,Message,Message,160,io/xmlparser/src/TXMLParser.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/xmlparser/src/TXMLParser.cxx,1,['Message'],['Message']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// This function is called when an error from the parser has occurred.; /// Message is the parse error.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/xmlparser/src/TXMLParser.cxx:159,Message,Message,159,io/xmlparser/src/TXMLParser.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/xmlparser/src/TXMLParser.cxx,1,['Message'],['Message']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// This functions implements the ""remove_dot_segments"" routine; /// of chapter 5.2.4 ""for interpreting and removing the; /// special '.' and '..' complete path segments from a; /// referenced path"".",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TUri.cxx:138,rout,routine,138,core/base/src/TUri.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TUri.cxx,1,['rout'],['routine']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// This is the core of the Collector rank which listens for incoming; /// messages from Worker ranks. The Collector",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/mpi/src/TMPIFile.cxx:157,message,messages,157,io/mpi/src/TMPIFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/mpi/src/TMPIFile.cxx,1,['message'],['messages']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// This is the main method to satisfy the RooStats::ConfInterval interface.; /// It returns true if the parameter point is in the interval.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/LikelihoodInterval.cxx:148,interface,interface,148,roofit/roostats/src/LikelihoodInterval.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/LikelihoodInterval.cxx,1,['interface'],['interface']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// This method changes the value caching logic for all nodes that depends on any of the observables; /// as defined by the given dataset. When evaluating a test statistic constructed from the RooAbsReal; /// with a dataset the observables are guaranteed to change with every call, thus there is no point; /// in tracking these changes which result in a net overhead. Thus for observable-dependent nodes,; /// the evaluation mechanism is changed from being dependent on a 'valueDirty' flag to guaranteed evaluation.; /// On the dataset side, the observables objects are modified to no longer send valueDirty messages; /// to their client",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsOptTestStatistic.cxx:149,depend,depends,149,roofit/roofitcore/src/RooAbsOptTestStatistic.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsOptTestStatistic.cxx,4,"['depend', 'message']","['dependent', 'depends', 'messages']"
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// This method specifies the color threshold used by GetColor to retrieve a color.; ///; /// \param[in] t Color threshold. By default is equal to 1./31. or 1./255.; /// depending on the number of available color planes.; ///; /// When GetColor is called, it scans the defined colors and compare them to the; /// requested color.; /// If the Red Green and Blue values passed to GetColor are Rr Gr Br; /// and Rd Gd Bd the values of a defined color. These two colors are considered equal; /// if (abs(Rr-Rd) < t & abs(Br-Bd) < t & abs(Br-Bd) < t). If this test passes,; /// the color defined by Rd Gd Bd is returned by GetColor.; ///; /// To make sure GetColor will return a color having exactly the requested; /// R G B values it is enough to specify a nul :; /// ~~~ {.cpp}; /// TColor::SetColorThreshold(0.);; /// ~~~; ///; /// To reset the color threshold to its default value it is enough to do:; /// ~~~ {.cpp}; /// TColor::SetColorThreshold(-1.);; /// ~~~",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TColor.cxx:252,depend,depending,252,core/base/src/TColor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TColor.cxx,1,['depend'],['depending']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// This routine adds information to the input texts that doesn't change; /// when the display is resized or when new fonts are selected, etc.; /// Mostly this means adding style attributes. But other constant; /// information (such as numbering on `<li>` and images used for `<IMG>`); /// is also obtained. The key is that this routine is only called; /// once, where the sizer and layout routines can be called many times.; ///; /// This routine is called whenever the list of elements grows. The; /// style stack is stored as part of the HTML widget so that we can; /// always continue where we left off the last time.; ///; /// In addition to adding style, this routine will invoke methods; /// needed to acquire information about a markup. The IsVisitied(); /// method is called for each `<a>` and the GetImage() is called; /// for each `<IMG>` or for each `<LI>` that has a `SRC=` field.; ///; /// When a markup is inserted or deleted from the token list, the; /// style routine must be completely rerun from the beginning. So; /// what we said above, that this routine is only run once, is not; /// strictly true.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/guihtml/src/TGHtmlSizer.cxx:91,rout,routine,91,gui/guihtml/src/TGHtmlSizer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/guihtml/src/TGHtmlSizer.cxx,7,['rout'],"['routine', 'routines']"
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// This routine calculates the absolute (!) value of the determinant; /// |det| = d1*TMath::Power(2.,d2)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/matrix/src/TDecompQRH.cxx:91,rout,routine,91,math/matrix/src/TDecompQRH.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/matrix/src/TDecompQRH.cxx,1,['rout'],['routine']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// This routine computes the X and Y coordinates for all elements of; /// a line that has been gathered using GetLine() above. It also figures; /// the ascent and descent for in-line images.; ///; /// The value returned is the Y coordinate of the bottom edge of the; /// new line. The X coordinates are computed by adding the left margin; /// plus any extra space needed for centering or right-justification.; ///; /// p_start - Start of tokens for this line; /// p_end - First token past end of this line. Maybe NULL; /// mbottom - Put the top of this line here; /// width - This is the space available to the line; /// actualWidth - This is the actual width needed by the line; /// lMargin - The current left margin; /// max_x - Write maximum X coordinate of ink here",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/guihtml/src/TGHtmlLayout.cxx:91,rout,routine,91,gui/guihtml/src/TGHtmlLayout.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/guihtml/src/TGHtmlLayout.cxx,1,['rout'],['routine']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// This routine decodes a complete index specification. A complete; /// index consists of the base specification followed by modifiers.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/guihtml/src/TGHtmlIndex.cxx:91,rout,routine,91,gui/guihtml/src/TGHtmlIndex.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/guihtml/src/TGHtmlIndex.cxx,1,['rout'],['routine']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// This routine draw hatches inclined with the; /// angle ""angle"" and spaced of ""dy"" in normalized device; /// coordinates in the surface defined by n,xx,yy.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TPad.cxx:91,rout,routine,91,graf2d/gpad/src/TPad.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TPad.cxx,1,['rout'],['routine']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// This routine gathers as many tokens as will fit on one line.; ///; /// The candidate tokens begin with fPStart and go thru the end of; /// the list or to fPEnd, whichever comes first. The first token; /// at the start of the next line is returned. NULL is returned if; /// we exhaust data.; ///; /// ""width"" is the maximum allowed width of the line. The actual; /// width is returned in *actualWidth. The actual width does not; /// include any trailing spaces. Sometimes the actual width will; /// be greater than the maximum width. This will happen, for example,; /// for text enclosed in <pre>..</pre> that has lines longer than; /// the width of the page.; ///; /// If the list begins with text, at least one token is returned,; /// even if that one token is longer than the allowed line length.; /// But if the list begins with some kind of break markup (possibly; /// preceded by white space) then the returned list may be empty.; ///; /// The ""x"" coordinates of all elements are set assuming that the line; /// begins at 0. The calling routine should adjust these coordinates; /// to position the line horizontally. (The FixLine() procedure does; /// this.) Note that the ""x"" coordinate of `<li>` elements will be negative.; /// Text within `<dt>..</dt>` might also have a negative ""x"" coordinate.; /// But in no case will the x coordinate every be less than ""minX"".; ///; /// p_start - First token on new line; /// p_end - End of line. Might be NULL; /// width - How much space is on this line; /// minX - The minimum value of the X coordinate; /// actualWidth - Return space actually required",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/guihtml/src/TGHtmlLayout.cxx:91,rout,routine,91,gui/guihtml/src/TGHtmlLayout.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/guihtml/src/TGHtmlLayout.cxx,2,['rout'],['routine']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// This routine implements the Sizer() function for `<INPUT>`,; /// `<SELECT>` and `<TEXTAREA>` markup.; ///; /// A side effect of sizing these markups is that widgets are; /// created to represent the corresponding input controls.; ///; /// The function normally returns 0. But if it is dealing with; /// a `<SELECT>` or `<TEXTAREA>` that is incomplete, 1 is returned.; /// In that case, the sizer will be called again at some point in; /// the future when more information is available.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/guihtml/src/TGHtmlForm.cxx:91,rout,routine,91,gui/guihtml/src/TGHtmlForm.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/guihtml/src/TGHtmlForm.cxx,1,['rout'],['routine']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// This routine is called when an image changes. If the size of the; /// images changes, then we need to completely redo the layout. If; /// only the appearance changes, then this works like an expose event.; ///; /// pImage - Pointer to an TGHtmlImage object; /// newWidth - New width of the image; /// newHeight - New height of the image",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/guihtml/src/TGHtmlImage.cxx:91,rout,routine,91,gui/guihtml/src/TGHtmlImage.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/guihtml/src/TGHtmlImage.cxx,1,['rout'],['routine']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// This routine is invoked in order to redraw all or part of the HTML; /// widget. This might happen because the display has changed, or in; /// response to an expose event. In all cases, though, this routine; /// is called by an idle handler.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/guihtml/src/TGHtml.cxx:91,rout,routine,91,gui/guihtml/src/TGHtml.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/guihtml/src/TGHtml.cxx,2,['rout'],['routine']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// This routine returns an index between 0 and N_COLOR-1 which indicates; /// which ColorStruct_t structure in the fApColor[] array should be used to describe; /// the color specified by the given name.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/guihtml/src/TGHtml.cxx:91,rout,routine,91,gui/guihtml/src/TGHtml.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/guihtml/src/TGHtml.cxx,1,['rout'],['routine']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// This routine searches for a hyperlink beneath the coordinates x,y; /// and returns a pointer to the HREF for that hyperlink. The text; /// is held in one of the markup argv[] fields of the <a> markup.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/guihtml/src/TGHtml.cxx:91,rout,routine,91,gui/guihtml/src/TGHtml.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/guihtml/src/TGHtml.cxx,2,['rout'],['routine']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// This routine searchs for an image beneath the coordinates x,y; /// and returns the token number of the image, or -1 if no; /// image found.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/guihtml/src/TGHtmlImage.cxx:91,rout,routine,91,gui/guihtml/src/TGHtmlImage.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/guihtml/src/TGHtmlImage.cxx,1,['rout'],['routine']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// This routine takes a text representation of a token, converts it into an; /// TGHtmlElement object and inserts it immediately prior to pToken. If pToken; /// is 0, then the newly created TGHtmlElement is appended.; ///; /// This routine does nothing to resize, restyle, relayout or redisplay; /// the HTML. That is the calling routines responsibility.; ///; /// Return the new TGHtmlElement object if successful. Return zero if; /// zType is not a known markup name.; ///; /// pToken - Insert before this. Append if pToken == 0; /// zType - Type of markup. Ex: ""/a"" or ""table""; /// zArgs - List of arguments; /// offs - Calculate offset, and insert changed text into fZText!",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/guihtml/src/TGHtmlParse.cxx:91,rout,routine,91,gui/guihtml/src/TGHtmlParse.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/guihtml/src/TGHtmlParse.cxx,3,['rout'],"['routine', 'routines']"
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// This routine transforms a wildcarding regular expression into; /// a general regular expression used for pattern matching.; /// When using wildcards the regular expression is assumed to be; /// preceded by a ""^"" (BOL) and terminated by a ""$"" (EOL). Also, all; /// ""*""'s and ""?""'s (closures) are assumed to be preceded by a ""."" (i.e. any; /// character, except ""/""'s) and all .'s are escaped (so *.ps is different; /// from *.eps). The special treatment of ""/"" allows the easy matching of; /// pathnames, e.g. ""*.root"" will match ""aap.root"", but not ""pipo/aap.root"".",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TRegexp.cxx:91,rout,routine,91,core/base/src/TRegexp.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TRegexp.cxx,1,['rout'],['routine']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// This routines used to return the address of the internal wrapper; /// function (of the interpreter) that was used to call *all* the; /// interpreted functions that were bytecode compiled (no longer; /// interpreted line by line). In Cling, there is no such; /// wrapper function.; /// In practice this routines was use to decipher whether the; /// pointer returns by InterfaceMethod could be used to uniquely; /// represent the function. In Cling if the function is in a; /// useable state (its compiled version is available), this is; /// always the case.; /// See TClass::GetMethod.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:91,rout,routines,91,core/metacling/src/TCling.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx,5,"['Interface', 'rout', 'wrap']","['InterfaceMethod', 'routines', 'wrapper']"
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// To be able to re-localize the entry-list we identify the file by just the; /// name and the anchor, i.e. we drop protocol, host, options, ...; /// The result in the form 'file#anchor' (or 'file', if no anchor is present); /// is saved in 'fn'.; /// The function optionally (is 'local' is defined) checks file locality (i.e.; /// protocol 'file://') returning the result in '*local' .",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TEntryList.cxx:199,protocol,protocol,199,tree/tree/src/TEntryList.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TEntryList.cxx,2,['protocol'],['protocol']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// To be used by GetNextPacket but also in reaction to kPROOF_STOPPROCESS; /// message (when the worker was asked to stop processing during a packet).; /// returns the #%entries intended in the last packet - #%processed entries",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerAdaptive.cxx:162,message,message,162,proof/proofplayer/src/TPacketizerAdaptive.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerAdaptive.cxx,1,['message'],['message']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Train PDE-Foam depending on the set options",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodPDEFoam.cxx:101,depend,depending,101,tmva/tmva/src/MethodPDEFoam.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodPDEFoam.cxx,1,['depend'],['depending']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Transforms from internal coordinates (PINT) to external (U); ///; /// The minimising routines which work in; /// internal coordinates call this routine before calling FCN.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TMinuit.cxx:171,rout,routines,171,math/minuit/src/TMinuit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TMinuit.cxx,2,['rout'],"['routine', 'routines']"
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Translate the arguments of genreflex into rootcling ones and forward them; /// to the RootCling function.; /// These are two typical genreflex and rootcling commandlines; /// 1) genreflex header1.h [header2.h ...] [options] [preprocessor options]; /// 2) rootcling [-v] [-v0-4] [-f] [out.cxx] [-s sharedlib.so] [-m pcmfilename]; /// header1.h[{+,-}][!] ..headerN.h[{+,-}][!] [{LinkDef.h,selectionRules.xml}]; /// The rules with which the arguments are translated are (1st column genreflex):; /// --debug -v4; /// --quiet -v0; /// -o ofile positional arg after -f; /// -s selection file Last argument of the call; /// --fail_on_warning Wrap ROOT::TMetaUtils::Warning and throw if selected; ///; /// New arguments:; /// -l --library targetLib name (new) -s targetLib name; /// -m pcmname (can be many -m) (new) -m pcmname (can be many -m); /// --rootmap -rmf (new); /// --rootmap-lib -rml (new); ///; /// genreflex options which rise warnings (feedback is desirable); /// --no_membertypedefs (it should be irrelevant); /// --no_templatetypedefs (it should be irrelevant); ///; /// genreflex options which are ignored (know for sure they are not needed); /// --pool, --dataonly; /// --interpreteronly; /// --gccxml{path,opt,post}; ///; ///; /// Exceptions; /// The --deep option of genreflex is passed as function parameter to rootcling; /// since it's not needed at the moment there.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx:721,Wrap,Wrap,721,core/dictgen/src/rootcling_impl.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx,1,['Wrap'],['Wrap']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Try a guess of the client protocol from what they sent over; /// the net ...",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/rpdutils/src/rpdutils.cxx:112,protocol,protocol,112,net/rpdutils/src/rpdutils.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/rpdutils/src/rpdutils.cxx,1,['protocol'],['protocol']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Try to get user name and passwd from the ~/.rootnetrc or; /// ~/.netrc files. First ~/.rootnetrc is tried, after that ~/.netrc.; /// These files will only be used when their access masks are 0600.; /// Returns kTRUE if user and passwd were found for the machine; /// specified in the URL. If kFALSE, user and passwd are """".; /// The boolean pwhash is set to kTRUE if the returned passwd is to; /// be understood as password hash, i.e. if the 'password-hash' keyword; /// is found in the 'machine' lines; not implemented for 'secure'; /// and the .netrc file.; /// The format of these files are:; ///; /// # this is a comment line; /// machine `<machine fqdn>` login `<user>` password `<passwd>`; /// machine `<machine fqdn>` login `<user>` password-hash `<passwd>`; ///; /// and in addition ~/.rootnetrc also supports:; ///; /// secure `<machine fqdn>` login `<user>` password `<passwd>`; ///; /// `<machine fqdn>` may be a domain name or contain the wild card '*'.; ///; /// for the secure protocols. All lines must start in the first column.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/auth/src/TAuthenticate.cxx:1077,protocol,protocols,1077,net/auth/src/TAuthenticate.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/auth/src/TAuthenticate.cxx,1,['protocol'],['protocols']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Type safe interface (static method); /// A TGraph is created with new with num points and the pointer to the; /// graph is returned by the function. It is the responsibility of the; /// user to delete the object.; /// if num is invalid (<=0) NULL is returned",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TF1.cxx:96,interface,interface,96,hist/hist/src/TF1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TF1.cxx,1,['interface'],['interface']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Type: unsafe but fast interface filling the arrays x and w (static method); ///; /// Given the number of sampling points this routine fills the arrays x and w; /// of length num, containing the abscissa and weight of the Gauss-Legendre; /// n-point quadrature formula.; ///; /// Gauss-Legendre:; /** \f[; W(x)=1 -1<x<1 \\; (j+1)P_{j+1} = (2j+1)xP_j-jP_{j-1}; \f]; **/; /// num is the number of sampling points (>0); /// x and w are arrays of size num; /// eps is the relative precision; ///; /// If num<=0 or eps<=0 no action is done.; ///; /// Reference: Numerical Recipes in C, Second Edition",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TF1.cxx:108,interface,interface,108,hist/hist/src/TF1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TF1.cxx,2,"['interface', 'rout']","['interface', 'routine']"
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Uncompress the message. The message will only be uncompressed when; /// kMESS_ZIP is set. Returns -1 in case of error, 0 otherwise.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TMessage.cxx:101,message,message,101,net/net/src/TMessage.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TMessage.cxx,2,['message'],['message']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Unregister another RooAbsArg as a server to us, ie, declare that; /// we no longer depend on its value and shape.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsArg.cxx:169,depend,depend,169,roofit/roofitcore/src/RooAbsArg.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsArg.cxx,1,['depend'],['depend']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Update dependent elements' bounding box and mark scenes; /// containing element root or its children as requiring a repaint.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveProjectionManager.cxx:93,depend,dependent,93,graf3d/eve/src/TEveProjectionManager.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveProjectionManager.cxx,1,['depend'],['dependent']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Update dependent elements' bounding boxes.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/src/REveProjectionManager.cxx:93,depend,dependent,93,graf3d/eve7/src/REveProjectionManager.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/src/REveProjectionManager.cxx,1,['depend'],['dependent']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Upload a PROOF archive (PAR file). A PAR file is a compressed; /// tar file with one special additional directory, PROOF-INF; /// (blatantly copied from Java's jar format). It must have the extension; /// .par. A PAR file can be directly a binary or a source with a build; /// procedure. In the PROOF-INF directory there can be a build script:; /// BUILD.sh to be called to build the package, in case of a binary PAR; /// file don't specify a build script or make it a no-op. Then there is; /// SETUP.C which sets the right environment variables to use the package,; /// like LD_LIBRARY_PATH, etc.; /// The 'opt' allows to specify whether the .PAR should be just unpacked; /// in the existing dir (opt = kUntar, default) or a remove of the existing; /// directory should be executed (opt = kRemoveOld), so triggering a full; /// re-build. The option if effective only for PROOF protocol > 8 .; /// The lab 'dirlab' (e.g. 'G0') indicates that the package is to uploaded to; /// an alternative global directory for global usage. This may require special; /// privileges.; /// If download is kTRUE and the package is not found locally, then it is downloaded; /// from the master repository.; /// Returns 0 in case of success and -1 in case of error.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:964,protocol,protocol,964,proof/proof/src/TProof.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx,1,['protocol'],['protocol']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Use this function for informational messages.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TError.cxx:122,message,messages,122,core/foundation/src/TError.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TError.cxx,1,['message'],['messages']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Used for shuting down the workres after a query is finished.; /// Sends each of the workers from the workerList, a kPROOF_STOP message.; /// If the workerList == 0, shutdown all the workers.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:213,message,message,213,proof/proof/src/TProof.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx,1,['message'],['message']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Used to allocate a TObject on the heap (via TObject::operator new()).; /// Directly after this routine one can call (in the TObject ctor); /// TStorage::FilledByObjectAlloc() to find out if the just created object is on; /// the heap. This technique is necessary as there is one stack per thread; /// and we can not rely on comparison with the current stack memory position.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TStorage.cxx:181,rout,routine,181,core/base/src/TStorage.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TStorage.cxx,1,['rout'],['routine']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Uses the components of the specified GC to draw a line between the; /// specified set of points (x1, y1) and (x2, y2).; ///; /// GC components in use: function, plane-mask, line-width, line-style,; /// cap-style, fill-style, subwindow-mode, clip-x-origin, clip-y-origin,; /// and clip-mask.; ///; /// GC mode-dependent components: foreground, background, tile, stipple,; /// tile-stipple-x-origin, tile-stipple-y-origin, dash-offset, dash-list.; /// (see also the GCValues_t structure)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx:395,depend,dependent,395,core/base/src/TVirtualX.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx,1,['depend'],['dependent']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Using this method one can change the message type a-posteriori; /// In case you OR ""what"" with kMESS_ACK, the message will wait for; /// an acknowledgment from the remote side. This makes the sending; /// process synchronous.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TMessage.cxx:123,message,message,123,net/net/src/TMessage.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TMessage.cxx,2,['message'],['message']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Utility function for createIntObj() that aids in the construct of recursive integrals; /// over functions with multiple observables with parameterized ranges. This function; /// finds in a given set allObs over which integration is requested the largeset subset; /// of observables that can be integrated simultaneously. This subset consists of; /// observables with fixed ranges and observables with parameterized ranges whose; /// parameterization does not depend on any observable that is also integrated.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx:303,integrat,integration,303,roofit/roofitcore/src/RooAbsReal.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx,4,"['depend', 'integrat']","['depend', 'integrated', 'integration']"
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Utility function for createRunningIntegral. It creates an; /// object implementing the standard (analytical) integration; /// technique for calculating the running integral.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx:195,integrat,integration,195,roofit/roofitcore/src/RooAbsReal.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx,1,['integrat'],['integration']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Utility function for plotOn() that constructs the set of; /// observables to project when plotting ourselves as function of; /// 'plotVar'. 'allVars' is the list of variables that must be; /// projected, but may contain variables that we do not depend on. If; /// 'silent' is cleared, warnings about inconsistent input parameters; /// will be printed.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx:331,depend,depend,331,roofit/roofitcore/src/RooAbsReal.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx,1,['depend'],['depend']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Utility function for plotOn() that creates a projection of a function or p.d.f; /// to be plotted on a RooPlot.; /// \anchor createPlotProjAnchor; ///; /// Create a new object \f$ G \f$ that represents the normalized projection:; /// \f[; /// G[x,p] = \frac{\int F[x,y,p] \; \mathrm{d}\{y\}}; /// {\int F[x,y,p] \; \mathrm{d}\{x\} \, \mathrm{d}\{y\}}; /// \f]; /// where \f$ F[x,y,p] \f$ is the function we represent, and; /// \f$ \{ p \} \f$ are the remaining variables (""parameters"").; ///; /// \param[in] dependentVars Dependent variables over which to normalise, \f$ \{x\} \f$.; /// \param[in] projectedVars Variables to project out, \f$ \{ y \} \f$.; /// \param[out] cloneSet Will be set to a RooArgSet*, which will contain a clone of *this plus its projection integral object.; /// The latter will also be returned. The caller takes ownership of this set.; /// \param[in] rangeName Optional range for projection integrals; /// \param[in] condObs Conditional observables, which are not integrated for normalisation, even if they; /// are in `dependentVars` or `projectedVars`.; /// \return A pointer to the newly created object, or zero in case of an; /// error. The caller is responsible for deleting the `cloneSet` (which includes the returned projection object).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx:594,depend,dependentVars,594,roofit/roofitcore/src/RooAbsReal.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx,4,"['Depend', 'depend', 'integrat']","['Dependent', 'dependentVars', 'integrated']"
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Utility function to create integral for product over certain observables.; /// \param[in] name Name of integral to be created.; /// \param[in] compSet All components of the product.; /// \param[in] intSet Observables to be integrated.; /// \param[out] saveSet All component objects needed to represent the product integral are added as owned members to saveSet.; /// \note The set owns new components that are created for the integral.; /// \param[in] isetRangeName Integral range.; /// \param[in] doFactorize; ///; /// \return A RooAbsReal object representing the requested integral. The object is owned by `saveSet`.; ///; /// The integration is factorized into components as much as possible and done analytically as far as possible.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGenProdProj.cxx:309,integrat,integrated,309,roofit/roofitcore/src/RooGenProdProj.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGenProdProj.cxx,2,['integrat'],"['integrated', 'integration']"
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Utility function to trigger dumping of callgrind counters.; ///; /// Note that this function does _not_ do anything, other than optionally printing this message; /// To trigger callgrind dumping action, run callgrind with; /// argument '--dump-before=RooTrace::callgrind_dump()' (include single quotes in cmdline)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTrace.cxx:239,message,message,239,roofit/roofitcore/src/RooTrace.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTrace.cxx,1,['message'],['message']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Utility function to trigger zeroing of callgrind counters.; ///; /// Note that this function does _not_ do anything, other than optionally printing this message; /// To trigger callgrind zero counter action, run callgrind with; /// argument '--zero-before=RooTrace::callgrind_zero()' (include single quotes in cmdline)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTrace.cxx:239,message,message,239,roofit/roofitcore/src/RooTrace.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTrace.cxx,1,['message'],['message']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Utility function to update the z-values of the bounding-box.; /// As this is an abstract interface, the element and bbox pointers; /// must be passed from outside.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveProjectionBases.cxx:175,interface,interface,175,graf3d/eve/src/TEveProjectionBases.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveProjectionBases.cxx,2,['interface'],['interface']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Utility routine to get MINOS errors; ///; /// Called by user.; ///; /// NUMBER is the parameter number; ///; /// values returned by MNERRS:; /// - EPLUS, EMINUS are MINOS errors of parameter NUMBER,; /// - EPARAB is 'parabolic' error (from error matrix).; /// (Errors not calculated are set = 0); /// - GCC is global correlation coefficient from error matrix",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TMinuit.cxx:94,rout,routine,94,math/minuit/src/TMinuit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TMinuit.cxx,1,['rout'],['routine']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Utility routine to issue a Fatal error is the Value object is not valid",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TGenCollectionProxy.cxx:94,rout,routine,94,io/io/src/TGenCollectionProxy.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TGenCollectionProxy.cxx,1,['rout'],['routine']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Virtual method that is called on any change in the dependent frames.; /// This implementation simply calls fPad Modified()/Update().",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/ged/src/TGedEditor.cxx:137,depend,dependent,137,gui/ged/src/TGedEditor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/ged/src/TGedEditor.cxx,1,['depend'],['dependent']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// We can safely assume that the std::vector layout does not really depend on; /// the content!",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TGenCollectionProxy.cxx:151,depend,depend,151,io/io/src/TGenCollectionProxy.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TGenCollectionProxy.cxx,1,['depend'],['depend']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// When clicking in the browser, the following action is performed; /// on this macro, depending the content of the variable TMacro.Browse.; /// TMacro.Browse can be set in the system.rootrc or .rootrc file like:; /// ~~~ {.cpp}; /// TMacro.Browse : Action; /// ~~~; /// or set via gEnv->SetValue, eg; /// ~~~ {.cpp}; /// gEnv->SetValue(""TMacro.Browse"",""Print"");; /// ~~~; /// By default TMacro.Browse=""""; /// -if TMacro.Browse ="""" the macro is executed; /// -if TMacro.Browse =""Print"" the macro is printed in stdout; /// -if TMacro.Browse is of the form ""mymacro.C""; /// the macro void mymacro.C(TMacro *m) is called where m=this macro; /// An example of macro.C saving the macro into a file and viewing it; /// with emacs is shown below:; /// ~~~ {.cpp}; /// void mymacro(TMacro *m) {; /// m->SaveSource(""xx.log"");; /// gSystem->Exec(""emacs xx.log&"");; /// }; /// ~~~",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TMacro.cxx:170,depend,depending,170,core/base/src/TMacro.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TMacro.cxx,1,['depend'],['depending']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// When using the 'divide' process in the geometry this function; /// sets the variable 'axis' depending on what is specified.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/gdml/src/TGDMLParse.cxx:178,depend,depending,178,geom/gdml/src/TGDMLParse.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/gdml/src/TGDMLParse.cxx,1,['depend'],['depending']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Wrapper around TProofMgr::Reset(...).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:86,Wrap,Wrapper,86,proof/proof/src/TProof.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx,1,['Wrap'],['Wrapper']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Wrapper for glColor3f.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLUtil.cxx:86,Wrap,Wrapper,86,graf3d/gl/src/TGLUtil.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLUtil.cxx,1,['Wrap'],['Wrapper']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Wrapper for glColor3fv.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLUtil.cxx:86,Wrap,Wrapper,86,graf3d/gl/src/TGLUtil.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLUtil.cxx,1,['Wrap'],['Wrapper']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Wrapper for glColor3ub.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLUtil.cxx:86,Wrap,Wrapper,86,graf3d/gl/src/TGLUtil.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLUtil.cxx,1,['Wrap'],['Wrapper']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Wrapper for glColor3ubv.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLUtil.cxx:86,Wrap,Wrapper,86,graf3d/gl/src/TGLUtil.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLUtil.cxx,1,['Wrap'],['Wrapper']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Wrapper for glColor4f.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLUtil.cxx:86,Wrap,Wrapper,86,graf3d/gl/src/TGLUtil.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLUtil.cxx,1,['Wrap'],['Wrapper']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Wrapper for glColor4fv.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLUtil.cxx:86,Wrap,Wrapper,86,graf3d/gl/src/TGLUtil.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLUtil.cxx,1,['Wrap'],['Wrapper']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Wrapper for glColor4ub.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLUtil.cxx:86,Wrap,Wrapper,86,graf3d/gl/src/TGLUtil.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLUtil.cxx,1,['Wrap'],['Wrapper']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Wrapper for glColor4ubv.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLUtil.cxx:86,Wrap,Wrapper,86,graf3d/gl/src/TGLUtil.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLUtil.cxx,1,['Wrap'],['Wrapper']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Wrapper for tbb::task_arena.; ///; /// Necessary in order to keep tbb away from ROOT headers.; /// This class is thought out to be used as a singleton.; ////////////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/RTaskArena.hxx:86,Wrap,Wrapper,86,core/imt/inc/ROOT/RTaskArena.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/RTaskArena.hxx,1,['Wrap'],['Wrapper']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Wrapper for the registration method. Needed against MSVC, which; /// assigned different addr to the same method, depending on what; /// translation unit you're in...",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TBranchBrowsable.cxx:86,Wrap,Wrapper,86,tree/tree/src/TBranchBrowsable.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TBranchBrowsable.cxx,16,"['Wrap', 'depend']","['Wrapper', 'depending']"
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Wrapper of all exporting methods; /// Creates blank GDML file and fills it with gGeoManager structure converted; /// to GDML structure of xml nodes",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/gdml/src/TGDMLWrite.cxx:86,Wrap,Wrapper,86,geom/gdml/src/TGDMLWrite.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/gdml/src/TGDMLWrite.cxx,2,['Wrap'],['Wrapper']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Wrapper to cleanup code",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/rpdutils/src/DaemonUtils.cxx:86,Wrap,Wrapper,86,net/rpdutils/src/DaemonUtils.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/rpdutils/src/DaemonUtils.cxx,1,['Wrap'],['Wrapper']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Wrapper to notofuer / logger",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TPackMgr.cxx:86,Wrap,Wrapper,86,proof/proof/src/TPackMgr.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TPackMgr.cxx,1,['Wrap'],['Wrapper']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Wrapper to step helix.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveTrackPropagator.cxx:86,Wrap,Wrapper,86,graf3d/eve/src/TEveTrackPropagator.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveTrackPropagator.cxx,2,['Wrap'],['Wrapper']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Wrapper to step with method RungeKutta.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveTrackPropagator.cxx:86,Wrap,Wrapper,86,graf3d/eve/src/TEveTrackPropagator.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveTrackPropagator.cxx,2,['Wrap'],['Wrapper']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Wraps the socket with OpenSSL.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TSSLSocket.cxx:86,Wrap,Wraps,86,net/net/src/TSSLSocket.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TSSLSocket.cxx,1,['Wrap'],['Wraps']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Write HTML footer; ///; ///; /// Input: out - output file stream; /// dir - usually equal to """" or ""../"", depends of; /// current file directory position, i.e. if; /// file is in the fHtml->GetOutputDir(), then dir will be """"; /// lastUpdate - last update string; /// author - author's name; /// copyright - copyright note; ///; /// Allows optional user provided footer to be written. Root.Html.Footer holds; /// the file name for this footer. For details see THtml::WriteHtmlHeader (here,; /// the ""+"" means the user's footer is written in front of Root's!) Occurrences; /// of %AUTHOR%, %CHANGED%, %GENERATED%, and %COPYRIGHT% in the user's file are replaced by; /// their corresponding values (author, lastUpdate, today, and copyright) before; /// written to out.; /// If no author is set (author == """", e.g. for ClassIndex.html"") skip the whole; /// line of the footer template containing %AUTHOR%. Accordingly for %COPYRIGHT%.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/html/src/TDocOutput.cxx:192,depend,depends,192,html/src/TDocOutput.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/TDocOutput.cxx,1,['depend'],['depends']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Write a Double32_t to the buffer.; ///; /// The following cases are supported for streaming a Double32_t type; /// depending on the range declaration in the comment field of the data member:; /// Case | Example |; /// -----|---------|; /// A | Double32_t fNormal; |; /// B | Double32_t fTemperature; //[0,100]|; /// C | Double32_t fCharge; //[-1,1,2]|; /// D | Double32_t fVertex[3]; //[-30,30,10]|; /// E | Double32_t fChi2; //[0,0,6]|; /// F | Int_t fNsp;<br>Double32_t* fPointValue; //[fNsp][0,3]|; ///; /// In case A fNormal is converted from a Double_t to a Float_t; /// In case B fTemperature is converted to a 32 bit unsigned integer; /// In case C fCharge is converted to a 2 bits unsigned integer; /// In case D the array elements of fVertex are converted to an unsigned 10 bits integer; /// In case E fChi2 is converted to a Float_t with mantissa truncated precision at 6 bits; /// In case F the fNsp elements of array fPointvalue are converted to an unsigned 32 bit integer; /// Note that the range specifier must follow the dimension specifier.; /// Case B has more precision (9 to 10 significative digits than case A (6 to 7 digits).; /// See TBufferFile::WriteFloat16 for more information.; ///; /// see example of use of the Double32_t data type in tutorial double32.C; /// \image html tbufferfile_double32.gif",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TBufferFile.cxx:201,depend,depending,201,io/io/src/TBufferFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TBufferFile.cxx,1,['depend'],['depending']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Write a Float16_t to the buffer.; ///; /// The following cases are supported for streaming a Float16_t type; /// depending on the range declaration in the comment field of the data member:; /// Case | Example |; /// -----|---------|; /// A | Float16_t fNormal; |; /// B | Float16_t fTemperature; //[0,100]|; /// C | Float16_t fCharge; //[-1,1,2]|; /// D | Float16_t fVertex[3]; //[-30,30,10]|; /// E | Float16_t fChi2; //[0,0,6]|; /// F | Int_t fNsp;<br>Float16_t* fPointValue; //[fNsp][0,3]|; ///; /// - In case A fNormal is converted from a Float_t to a Float_t with mantissa truncated to 12 bits; /// - In case B fTemperature is converted to a 32 bit unsigned integer; /// - In case C fCharge is converted to a 2 bits unsigned integer; /// - In case D the array elements of fVertex are converted to an unsigned 10 bits integer; /// - In case E fChi2 is converted to a Float_t with truncated precision at 6 bits; /// - In case F the fNsp elements of array fPointvalue are converted to an unsigned 32 bit integer; /// Note that the range specifier must follow the dimension specifier.; /// Case B has more precision (9 to 10 significative digits than case A (6 to 7 digits).; /// In Case A and E, the exponent is stored as is (8 bits), for a total of 21 bits (including 1 bit for sign); ///; /// The range specifier has the general format: [xmin,xmax] or [xmin,xmax,nbits]; /// - [0,1];; /// - [-10,100];; /// - [-pi,pi], [-pi/2,pi/4],[-2pi,2*pi]; /// - [-10,100,16]; /// - [0,0,8]; /// if nbits is not specified, or nbits <2 or nbits>16 it is set to 16. If; /// (xmin==0 and xmax==0 and nbits <=14) the float word will have; /// its mantissa truncated to nbits significative bits.; ///; /// ## IMPORTANT NOTE; /// ### NOTE 1; /// Lets assume an original variable float x:; /// When using the format [0,0,8] (ie range not specified) you get the best; /// relative precision when storing and reading back the trunca",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TBufferFile.cxx:199,depend,depending,199,io/io/src/TBufferFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TBufferFile.cxx,1,['depend'],['depending']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Write code for a RooAbsReal implementation with class name 'name',; /// taking RooAbsReal arguments with names listed in argNames and; /// RooAbsCategory arguments with names listed in catArgNames as; /// constructor arguments (use a comma separated list for multiple; /// arguments). The initial value expression is taken to be; /// 'expression' which can be any one-line C++ expression in terms of; /// variables that occur in 'vars'. Skeleton code for handling of; /// analytical integrals is added if hasAnaInt is true. You can add; /// optional expressions for analytical integrals to be advertised by; /// your class in the syntax; /// ""<intObsName>:<CPPAnaIntExpression>;<intObsName,intObsName>:<CPPAnaIntExpression>""; /// where ""<intObsName>"" a name of the observable integrated over and; /// ""<CPPAnaIntExpression>"" is the C++ expression that calculates that; /// integral.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooClassFactory.cxx:862,integrat,integrated,862,roofit/roofitcore/src/RooClassFactory.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooClassFactory.cxx,1,['integrat'],['integrated']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Write error message and call a handler, if required",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/rpdutils/src/DaemonUtils.cxx:98,message,message,98,net/rpdutils/src/DaemonUtils.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/rpdutils/src/DaemonUtils.cxx,1,['message'],['message']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Write fatal message to syslog and exit.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/rpdutils/src/error.cxx:98,message,message,98,net/rpdutils/src/error.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/rpdutils/src/error.cxx,1,['message'],['message']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Write info message to syslog.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/rpdutils/src/error.cxx:97,message,message,97,net/rpdutils/src/error.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/rpdutils/src/error.cxx,1,['message'],['message']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Write memory objects to this file and upload them to the parallel merge server.; /// Then reset all the resetable object (those with a ResetAfterMerge routine,; /// like TTree).; ///; /// Loop on all objects in memory (including subdirectories).; /// A new key is created in the KEYS linked list for each object.; /// The list of keys is then saved on the file (via WriteKeys); /// as a single data record.; /// For values of opt see TObject::Write().; /// The directory header info is rewritten on the directory header record.; /// The linked list of FREE segments is written.; /// The file header is written (bytes 1->fBEGIN).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TParallelMergingFile.cxx:237,rout,routine,237,net/net/src/TParallelMergingFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TParallelMergingFile.cxx,1,['rout'],['routine']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Write out wrapped text to the display. Used in WriteWrapped and DisplayInfo; ///; /// \param[in] text text to write out; /// \param[in] TextOffset where to begin writing out text from; /// \param[in] WriteOffset where to begin writing out text at the display; /// \param[in] NumRequested number of text characters requested for output",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/TerminalDisplay.cpp:96,wrap,wrapped,96,core/textinput/src/textinput/TerminalDisplay.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/TerminalDisplay.cpp,1,['wrap'],['wrapped']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Write the class description depending (among others) on fClassDocState.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/html/src/TDocParser.cxx:114,depend,depending,114,html/src/TDocParser.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/TDocParser.cxx,1,['depend'],['depending']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Write the extra header injected into the module:; /// umbrella header if (umbrella) else content header.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx:109,inject,injected,109,core/dictgen/src/rootcling_impl.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx,1,['inject'],['injected']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Write, compile and load code and instantiate object for a; /// RooAbsPdf implementation with class name 'name', taking all; /// elements of 'vars' as constructor arguments. The initial value; /// expression is taken to be 'expression' which can be any one-line; /// C++ expression in terms of variables that occur in 'vars'.; ///; /// The returned object is an instance of the object you just defined; /// connected to the variables listed in 'vars'. The name of the; /// object is 'name', its class name Roo<name>Class.; ///; /// This function is an effective compiled replacement of RooGenericPdf; ///; /// You can add optional expressions for analytical integrals to be; /// advertised by your class in the syntax; /// ""<intObsName>:<CPPAnaIntExpression>;<intObsName,intObsName>:<CPPAnaIntExpression>""; /// where ""<intObsName>"" a name of the observable integrated over and; /// ""<CPPAnaIntExpression>"" is the C++ expression that calculates that; /// integral.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooClassFactory.cxx:942,integrat,integrated,942,roofit/roofitcore/src/RooClassFactory.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooClassFactory.cxx,1,['integrat'],['integrated']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Write, compile and load code and instantiate object for a; /// RooAbsReal implementation with class name 'name', taking all; /// elements of 'vars' as constructor arguments. The initial value; /// expression is taken to be 'expression' which can be any one-line; /// C++ expression in terms of variables that occur in 'vars'.; ///; /// The returned object is an instance of the object you just defined; /// connected to the variables listed in 'vars'. The name of the; /// object is 'name', its class name Roo<name>Class.; ///; /// This function is an effective compiled replacement of RooFormulaVar; ///; /// You can add optional expressions for analytical integrals to be; /// advertised by your class in the syntax; /// ""<intObsName>:<CPPAnaIntExpression>;<intObsName,intObsName>:<CPPAnaIntExpression>""; /// where ""<intObsName>"" a name of the observable integrated over and; /// ""<CPPAnaIntExpression>"" is the C++ expression that calculates that; /// integral.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooClassFactory.cxx:943,integrat,integrated,943,roofit/roofitcore/src/RooClassFactory.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooClassFactory.cxx,2,['integrat'],['integrated']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// Write, compile and load code for a RooAbsReal implementation with; /// class name 'name', taking all elements of 'vars' as constructor; /// arguments. The initial value expression is taken to be; /// 'expression' which can be any one-line C++ expression in terms of; /// variables that occur in 'vars'. You can add optional expressions; /// for analytical integrals to be advertised by your class in the; /// syntax; /// ""<intObsName>:<CPPAnaIntExpression>;<intObsName,intObsName>:<CPPAnaIntExpression>""; /// where ""<intObsName>"" a name of the observable integrated over and; /// ""<CPPAnaIntExpression>"" is the C++ expression that calculates that; /// integral.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooClassFactory.cxx:641,integrat,integrated,641,roofit/roofitcore/src/RooClassFactory.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooClassFactory.cxx,1,['integrat'],['integrated']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// [Control routine to draw 1D histograms](\ref HP01b)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:95,rout,routine,95,hist/histpainter/src/THistPainter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx,1,['rout'],['routine']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// [Control routine to paint any kind of histograms](\ref HP00)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:95,rout,routine,95,hist/histpainter/src/THistPainter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx,1,['rout'],['routine']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// \brief Add a directory to the already set include path.; /// \param[in] includePath The path to the directory.; /// \note This interface is mostly relevant for ACLiC and it does *not* inform; /// gInterpreter for this include path. If the TInterpreter needs to know; /// about the include path please use TInterpreter::AddIncludePath() .; /// \warning The path should start with the \c -I prefix, i.e.; /// <tt>gSystem->AddIncludePath(""-I /path/to/my/includes"")</tt>.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx:213,interface,interface,213,core/base/src/TSystem.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx,1,['interface'],['interface']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// \brief Loop on Tree and print entries passing selection. Interactive ; /// pagination break is on by default.; /// \param varexp If varexp is 0 (or """") then print only first 8 columns.; /// If varexp = ""*"" print all columns. Otherwise a columns selection can; /// be made using ""var1:var2:var3"".; /// \param selection a text formula selecting which entries to scan; /// \param firstentry first entry to scan; /// \param nentries total number of entries to scan (starting from firstentry). Defaults to all entries.; /// \return The function returns the number of entries passing the selection.; ///; /// By default 50 lines are shown and you are asked for `<CR>` or `q`; /// to see the next 50 lines. Depending on the Tree structure, one entry might; /// be printed across several lines, distinguished by the `Instance` column.; /// You can change the default number of lines to be shown before `<CR>` or `q`; /// via mytree->SetScanField(maxlines) where maxlines is 50 by default.; /// If maxlines is set to 0 all entries of the Tree are shown, and you are; /// not prompted to press `<CR>` or `q` to end the loop.; ///; /// This option is interesting when dumping the contents of a Tree to; /// an ascii file, eg from the command line.; /// ### with ROOT 5; /// ~~~{.cpp}; /// root [0] tree->SetScanField(0);; /// root [1] tree->Scan(""*""); >tree.log; /// ~~~; /// ### with ROOT 6; /// ~~~{.cpp}; /// root [0] tree->SetScanField(0);; /// root [1] .> tree.log; /// tree->Scan(""*"");; /// .>; /// ~~~; /// will create a file tree.log; ///; /// Arrays (within an entry) are printed in their linear forms.; /// If several arrays with multiple dimensions are printed together,; /// they will NOT be synchronized. For example print; /// arr1[4][2] and arr2[2][3] will results in a printing similar to:; /// ~~~{.cpp}; /// ***********************************************; /// * Row * Instance * arr1 * arr2 *; /// *********",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx:786,Depend,Depending,786,tree/treeplayer/src/TTreePlayer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx,1,['Depend'],['Depending']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// \brief Luxury level is set in the same way as the original FORTRAN routine.; ///; /// - level 0 (p=24): equivalent to the original RCARRY of Marsaglia; /// and Zaman, very long period, but fails many tests.; /// - level 1 (p=48): considerable improvement in quality over level 0,; /// now passes the gap test, but still fails spectral test.; /// - level 2 (p=97): passes all known tests, but theoretically still; /// defective.; /// - level 3 (p=223): DEFAULT VALUE. Any theoretically possible; /// correlations have very small chance of being observed.; /// - level 4 (p=389): highest possible luxury, all 24 bits chaotic.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/TRandom1.cxx:153,rout,routine,153,math/mathcore/src/TRandom1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/TRandom1.cxx,1,['rout'],['routine']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// \brief Read a basket of events into the given buffer with byte swapping.; ///; /// \return On success, the number of events of the type held by this branch; /// that have been read into the buffer. -1 on failure.; ///; /// On success, the caller should be able to access the contents of buf as they; /// are with:; ///; /// ~~~{.cpp}; /// static_cast<T*>(buf.GetCurrent()); /// ~~~; ///; /// where T is the type stored on this branch.; ///; /// When `count_buf` points to a valid TBuffer and the branch has a branch count,; /// `count_buf` will be filled (via a call to GetEntriesSerialized) with the data; /// from the branchCount. After deserialization those value can be used to calculate; /// the number of elements corresponding to each entries.; ///; /// For each entry the number of elements is the multiplication of; /// ; /// ~~~{.cpp}; /// TLeaf *leaf = static_cast<TLeaf*>(branch->GetListOfLeaves()->At(0));; /// auto len = leaf->GetLen();; /// ~~~; ///; /// and the value in the BranchCount corresponding to that entry (can be obtained; /// from `branch->GetBranchCount()`).; ///; /// \note This interface is not meant to be exposed to end users, but rather it should; /// be wrapped by higher-level interfaces.; ///; /// \note See TBranch::GetEntriesSerialized() for an alternative that does not; /// perform byte swapping (useful to save one pass over data in some cases).; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TBranch.cxx:1194,interface,interface,1194,tree/tree/src/TBranch.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TBranch.cxx,3,"['interface', 'wrap']","['interface', 'interfaces', 'wrapped']"
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// \brief Read a basket of events into the given buffer without byte swapping.; ///; /// \return On success, the number of events of the type held by this branch; /// that have been read into the buffer. -1 on failure.; ///; /// On success, the caller still need to deserialize the content. For example for; /// a scalar branch and `N` the return value (i.e. number of entries); ///; /// ~~~{.cpp}; /// rawdata = static_cast<char*>(buf.GetCurrent());; /// for (std::size_t i = 0u; i < N; ++i, ++target); /// frombuf(rawdata, target); // `frombuf` also advances the `rawdata` pointer; /// ~~~; ///; /// where target is a pointer or array to the type stored on this branch.; ///; /// When `count_buf` points to a valid TBuffer and the branch has a branch count,; /// `count_buf` will be filled (via a call to GetEntriesSerialized()) with the data; /// from the branchCount. After deserialization those value can be used to calculate; /// the number of elements corresponding to each entries.; ///; /// For each entry the number of elements is the multiplication of; ///; /// ~~~{.cpp}; /// TLeaf *leaf = dynamic_cast<TLeaf*>(branch->GetListOfLeaves()->At(0));; /// auto len = leaf->GetLen();; /// ~~~; ///; /// and the value in the BranchCount corresponding to that entry (can be obtained; /// from `branch->GetBranchCount()`).; ///; /// \note This interface is not meant to be exposed to end users, but rather it should; /// be wrapped by higher-level interfaces.; ///; /// \note See TBranch::GetBulkEntries() for an alternative that also performs byte swapping.; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TBranch.cxx:1430,interface,interface,1430,tree/tree/src/TBranch.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TBranch.cxx,3,"['interface', 'wrap']","['interface', 'interfaces', 'wrapped']"
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// \brief Retrieve a mergeable value from an RDataFrame action.; /// \param[in] rptr lvalue reference of an RResultPtr object.; /// \returns An RMergeableValue holding the result of the action, wrapped in an; /// `std::unique_ptr`.; ///; /// This function triggers the execution of the RDataFrame computation graph.; /// Then retrieves an RMergeableValue object created with the result wrapped by; /// the RResultPtr argument. The user obtains ownership of the mergeable, which; /// in turn holds a copy of the result of the action. The RResultPtr is not; /// destroyed in the process and will still retain (shared) ownership of the; /// original result.; ///; /// Example usage:; /// ~~~{.cpp}; /// using namespace ROOT::Detail::RDF;; /// ROOT::RDataFrame d(""myTree"", ""file_*.root"");; /// auto h = d.Histo1D(""Branch_A"");; /// auto mergeablehisto = GetMergeableValue(h);; /// ~~~",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RResultPtr.hxx:277,wrap,wrapped,277,tree/dataframe/inc/ROOT/RResultPtr.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RResultPtr.hxx,2,['wrap'],['wrapped']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// \brief Search a branch the name of which contains a "".""; /// \param[out] myLeaf The leaf identified by the name if found (can be untouched).; /// \param[out] branchActualType Dictionary associated to the type of the leaf (can be untouched).; /// \param[out] errMsg The error message (can be untouched).; /// \return The address of the branch if found, nullptr otherwise; /// This method allows to efficiently search for branches which have names which; /// contain ""dots"", for example ""w.v.a"" or ""v.a"".; /// Therefore, it allows to support names such as v.a where the branch was; /// created with this syntax:; /// ```{.cpp}; /// myTree->Branch(""v"", &v, ""a/I:b:/I""); /// ```; /// The method has some side effects, namely it can modify fSetupStatus, fProxy; /// and fStaticClassOffsets/fHaveStaticClassOffsets.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReaderValue.cxx:361,message,message,361,tree/treeplayer/src/TTreeReaderValue.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReaderValue.cxx,1,['message'],['message']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// \brief Specify where web graphics shall be rendered; ///; /// The input parameter `webdisplay` defines where web graphics is rendered.; /// `webdisplay` parameter may contain:; ///; /// - ""firefox"": select Mozilla Firefox browser for interactive web display; /// - ""chrome"": select Google Chrome browser for interactive web display; /// - ""edge"": select Microsoft Edge browser for interactive web display; /// - ""native"": select one of the natively-supported web browsers firefox/chrome/edge for interactive web display; /// - ""qt5"": uses QWebEngine from Qt5, no real http server started (requires `qt5web` component build for ROOT); /// - ""qt6"": uses QWebEngine from Qt6, no real http server started (requires `qt6web` component build for ROOT); /// - ""cef"": uses Chromium Embeded Framework, no real http server started (requires `cefweb` component build for ROOT); /// - ""local"": select on of available local (without http server) engines like qt5/qt6/cef; /// - ""default"": system default web browser, invoked with `xdg-open` on Linux, `start` on Mac or `open` on Windows; /// - ""on"": try ""local"", then ""native"", then ""default"" option; /// - ""off"": turns off the web display and comes back to normal graphics in; /// interactive mode.; /// - ""server:port"": turns the web display into server mode with specified port. Web widgets will not be displayed,; /// only text message with window URL will be printed on standard output",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TROOT.cxx:1455,message,message,1455,core/base/src/TROOT.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TROOT.cxx,1,['message'],['message']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// \class TLinearMinimizer; /// \see Minuit2 for a newer version of this class; ///; /// TLinearMinimizer, simple class implementing the ROOT::Math::Minimizer; /// interface usingTLinearFitter. This class uses TLinearFitter to find directly; /// (by solving a system of linear equations) the minimum of a least-square; /// function which has a linear dependence in the fit parameters. This class is; /// not used directly, but via the ROOT::Fitter class, when calling the; /// LinearFit method. It is instantiates using the plug-in manager; /// (plug-in name is ""Linear"").; ////////////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TLinearMinimizer.cxx:247,interface,interface,247,math/minuit/src/TLinearMinimizer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TLinearMinimizer.cxx,2,"['depend', 'interface']","['dependence', 'interface']"
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// \class TMinuitMinimizer; /// \see Minuit2 for a newer version of this class; /// TMinuitMinimizer class implementing the ROOT::Math::Minimizer interface; /// using TMinuit. This class is normally instantiated using the plug-in manager; /// (plug-in with name Minuit or TMinuit).; /// In addition the user can choose the minimizer algorithm:; /// Migrad (the default one), Simplex, or Minimize (combined Migrad + Simplex); ////////////////////////////////////////////////////////////////////////////////; // initialize the static instances; // Implement a thread local static member",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TMinuitMinimizer.cxx:229,interface,interface,229,math/minuit/src/TMinuitMinimizer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TMinuitMinimizer.cxx,1,['interface'],['interface']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// \fn RFriendInfo GetFriendInfo(const TTree &tree); /// \ingroup tree; /// \brief Get and store the names, aliases and file names of the direct friends of the tree.; /// \param[in] tree The tree from which friends information will be gathered.; /// \param[in] retrieveEntries Whether to also retrieve the number of entries in; /// each tree of each friend: one if the friend is a TTree, more if; /// the friend is a TChain. In the latter case, this function; /// triggers the opening of all files in the chain.; /// \throws std::runtime_error If the input tree has a list of friends, but any; /// of them could not be associated with any file.; ///; /// Calls TTree::GetListOfFriends and parses its result for the names, aliases; /// and file names, with different methodologies depending on whether the; /// parameter is a TTree or a TChain.; ///; /// \note This function only retrieves information about <b>direct friends</b>; /// of the input tree. It will not recurse through friends of friends and; /// does not take into account circular references in the list of friends; /// of the input tree.; ///; /// \returns An RFriendInfo struct, containing the information parsed from the; /// list of friends. The struct will contain four vectors, which elements at; /// position `i` represent the `i`-th friend of the input tree. If this friend; /// is a TTree, the `i`-th element of each of the three vectors will contain; /// respectively:; ///; /// - A pair with the name and alias of the tree (the alias might not be; /// present, in which case it will be just an empty string).; /// - A vector with a single string representing the path to current file where; /// the tree is stored.; /// - An empty vector.; /// - A vector with a single element, the number of entries in the tree.; ///; /// If the `i`-th friend is a TChain instead, the `i`-th element of each of the; /// three vectors will contain respectively",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/InternalTreeUtils.cxx:863,depend,depending,863,tree/tree/src/InternalTreeUtils.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/InternalTreeUtils.cxx,1,['depend'],['depending']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// algorithm adapted from code example in:; /// Marsaglia, G. and Tsang, W. W.; /// A Simple Method for Generating Gamma Variables; /// ACM Transactions on Mathematical Software, Vol. 26, No. 3, September 2000; ///; /// The speed of this algorithm depends on the speed of generating normal variates.; /// The algorithm is limited to \f$ \gamma \geq 0 \f$ !",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooGamma.cxx:331,depend,depends,331,roofit/roofit/src/RooGamma.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooGamma.cxx,1,['depend'],['depends']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// approximate posterior in nbins using a TF1; /// scan the poi values and evaluate the posterior at each point; /// and save the result in a cloned TF1; /// For each point the posterior is evaluated by integrating the nuisance; /// parameters",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/BayesianCalculator.cxx:286,integrat,integrating,286,roofit/roostats/src/BayesianCalculator.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/BayesianCalculator.cxx,1,['integrat'],['integrating']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// calculate the average response - TODO : rewrite bad dependancy on EvaluateAverage() !; ///; /// note that 0 offset is used",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/RuleFitParams.cxx:138,depend,dependancy,138,tmva/tmva/src/RuleFitParams.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/RuleFitParams.cxx,1,['depend'],['dependancy']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// called when node should be closed; /// depending from number of childs different xml format is applied",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/src/TRootSnifferStore.cxx:125,depend,depending,125,net/http/src/TRootSnifferStore.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/src/TRootSnifferStore.cxx,1,['depend'],['depending']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// compute \f$CL_{b}\f$ error; /// \f$CL_{b}\f$ = 1 - NullPValue(); /// must use opposite condition that routine above",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/HypoTestResult.cxx:188,rout,routine,188,roofit/roostats/src/HypoTestResult.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/HypoTestResult.cxx,1,['rout'],['routine']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// constructor; ///; /// As argument, one specifies engine kind which should be; /// created like ""http:8080"". One could specify several engines; /// at once, separating them with semicolon ("";""). Following engines are supported:; ///; /// http - TCivetweb, civetweb-based implementation of http protocol; /// fastcgi - TFastCgi, special protocol for communicating with web servers; ///; /// For each created engine one should provide socket port number like ""http:8080"" or ""fastcgi:9000"".; /// Additional engine-specific options can be supplied with URL syntax like ""http:8080?thrds=10"".; /// Full list of supported options should be checked in engines docu.; ///; /// One also can configure following options, separated by semicolon:; ///; /// readonly, ro - set read-only mode (default); /// readwrite, rw - allows methods execution of registered objects; /// global - scans global ROOT lists for existing objects (default); /// noglobal - disable scan of global lists; /// cors - enable CORS header with origin=""*""; /// cors=domain - enable CORS header with origin=""domain""; /// basic_sniffer - use basic sniffer without support of hist, gpad, graph classes; ///; /// For example, create http server, which allows cors headers and disable scan of global lists,; /// one should provide ""http:8080;cors;noglobal"" as parameter; ///; /// THttpServer uses JavaScript ROOT (https://root.cern/js) to implement web clients UI.; /// Normally JSROOT sources are used from $ROOTSYS/js directory,; /// but one could set JSROOTSYS shell variable to specify alternative location",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/src/THttpServer.cxx:379,protocol,protocol,379,net/http/src/THttpServer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/src/THttpServer.cxx,2,['protocol'],['protocol']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// create a pdefoam kernel estimator, depending on the current; /// value of fKernel",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodPDEFoam.cxx:121,depend,depending,121,tmva/tmva/src/MethodPDEFoam.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodPDEFoam.cxx,1,['depend'],['depending']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// data interface function",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodCFMlpANN.cxx:91,interface,interface,91,tmva/tmva/src/MethodCFMlpANN.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodCFMlpANN.cxx,1,['interface'],['interface']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// default initialisation routine called by all constructors",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodPDERS.cxx:109,rout,routine,109,tmva/tmva/src/MethodPDERS.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodPDERS.cxx,1,['rout'],['routine']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// define the options (their key words) that can be set in the option string; /// here the options valid for ALL MVA methods are declared.; ///; /// know options:; ///; /// - VariableTransform=None,Decorrelated,PCA to use transformed variables; /// instead of the original ones; /// - VariableTransformType=Signal,Background which decorrelation matrix to use; /// in the method. Only the Likelihood; /// Method can make proper use of independent; /// transformations of signal and background; /// - fNbinsMVAPdf = 50 Number of bins used to create a PDF of MVA; /// - fNsmoothMVAPdf = 2 Number of times a histogram is smoothed before creating the PDF; /// - fHasMVAPdfs create PDFs for the MVA outputs; /// - V for Verbose output (!V) for non verbos; /// - H for Help message",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodBase.cxx:850,message,message,850,tmva/tmva/src/MethodBase.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodBase.cxx,1,['message'],['message']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// estimator function interface for fitting",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/FitterBase.cxx:105,interface,interface,105,tmva/tmva/src/FitterBase.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/FitterBase.cxx,2,['interface'],['interface']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// evaluate the chi2 contribution (residual term) only for data with no coord-errors; /// This function is used in the specialized least square algorithms like FUMILI or L.M.; /// if we have error on the coordinates the residual weight depends on the function value and; /// the approximation used by Fumili and Levenberg-Marquardt cannot be used.; /// Also the expected error and bin integral options should not be used in this case",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/FitUtil.cxx:319,depend,depends,319,math/mathcore/src/FitUtil.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/FitUtil.cxx,1,['depend'],['depends']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// fill the array stats from the contents of this histogram; /// The array stats must be correctly dimensioned in the calling program.; ///; /// ~~~ {.cpp}; /// stats[0] = sumw; /// stats[1] = sumw2; /// stats[2] = sumwx; /// stats[3] = sumwx2; /// ~~~; ///; /// If no axis-subrange is specified (via TAxis::SetRange), the array stats; /// is simply a copy of the statistics quantities computed at filling time.; /// If a sub-range is specified, the function recomputes these quantities; /// from the bin contents in the current axis range.; ///; /// IMPORTANT NOTE: This means that the returned statistics are context-dependent.; /// If TAxis::kAxisRange, the returned statistics are dependent on the binning;; /// otherwise, they are a copy of the histogram statistics computed at fill time,; /// which are unbinned by default (calling TH1::ResetStats forces them to use; /// binned statistics). You can reset TAxis::kAxisRange using TAxis::SetRange(0, 0).; ///; /// Note that the mean value/StdDev is computed using the bins in the currently; /// defined range (see TAxis::SetRange). By default the range includes; /// all bins from 1 to nbins included, excluding underflows and overflows.; /// To force the underflows and overflows in the computation, one must; /// call the static function TH1::StatOverflows(kTRUE) before filling; /// the histogram.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:702,depend,dependent,702,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,2,['depend'],['dependent']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// fill various monitoring histograms from information of the individual classifiers that; /// have been boosted.; /// of course.... this depends very much on the individual classifiers, and so far, only for; /// Decision Trees, this monitoring is actually implemented",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodBoost.cxx:221,depend,depends,221,tmva/tmva/src/MethodBoost.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodBoost.cxx,1,['depend'],['depends']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// get expected limit (lower/upper) depending on the flag; /// for asymptotic is a special case (the distribution is generated an step in sigma values); /// distinguish asymptotic looking at the hypotest results; /// if option = ""P"" get expected limit using directly quantiles of p value distribution; /// else (default) find expected limit by obtaining first a full limit distributions; /// The last one is in general more correct",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/HypoTestInverterResult.cxx:119,depend,depending,119,roofit/roostats/src/HypoTestInverterResult.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/HypoTestInverterResult.cxx,1,['depend'],['depending']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// get help message text; ///; /// typical length of text line:; /// ""|--------------------------------------------------------------|""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodBayesClassifier.cxx:95,message,message,95,tmva/tmva/src/MethodBayesClassifier.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodBayesClassifier.cxx,14,['message'],['message']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// get the limit distribution (lower/upper depending on the flag); /// by interpolating the expected p values for each point",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/HypoTestInverterResult.cxx:126,depend,depending,126,roofit/roostats/src/HypoTestInverterResult.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/HypoTestInverterResult.cxx,1,['depend'],['depending']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// help routine to MakeVisHists() - fills for all correlation plots",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/RuleFit.cxx:91,rout,routine,91,tmva/tmva/src/RuleFit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/RuleFit.cxx,1,['rout'],['routine']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// help routine to MakeVisHists() - fills for all variables",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/RuleFit.cxx:91,rout,routine,91,tmva/tmva/src/RuleFit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/RuleFit.cxx,1,['rout'],['routine']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// howto message",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/RuleFitAPI.cxx:92,message,message,92,tmva/tmva/src/RuleFitAPI.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/RuleFitAPI.cxx,1,['message'],['message']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// if sync is kTRUE:; /// - post message to main thread.; /// - execute callbacks from fListOfCallBacks; /// - wait for response; /// else; /// - add callback to fListOfCallBacks; ///; /// returns kTRUE if callback execution is delayed (batched)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/src/TGWin32ProxyBase.cxx:116,message,message,116,graf2d/win32gdk/src/TGWin32ProxyBase.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/src/TGWin32ProxyBase.cxx,1,['message'],['message']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// initialisation routine",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodBoost.cxx:101,rout,routine,101,tmva/tmva/src/MethodBoost.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodBoost.cxx,1,['rout'],['routine']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// interface to Minuit help",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TMinuit.cxx:86,interface,interface,86,math/minuit/src/TMinuit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TMinuit.cxx,1,['interface'],['interface']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// interface to the estimate",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodMLP.cxx:86,interface,interface,86,tmva/tmva/src/MethodMLP.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodMLP.cxx,1,['interface'],['interface']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// internal function compute the interval using Cdf integration",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/BayesianCalculator.cxx:135,integrat,integration,135,roofit/roostats/src/BayesianCalculator.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/BayesianCalculator.cxx,1,['integrat'],['integration']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// internal function to evaluate test statistics; /// can do depending on type:; /// - type = 0 standard evaluation,; /// - type = 1 find only unconditional NLL minimum,; /// - type = 2 conditional MLL",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/ProfileLikelihoodTestStat.cxx:144,depend,depending,144,roofit/roostats/src/ProfileLikelihoodTestStat.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/ProfileLikelihoodTestStat.cxx,1,['depend'],['depending']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// interpolate to find a limit value; /// Use a linear or a spline interpolation depending on the interpolation option",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/HypoTestInverterResult.cxx:164,depend,depending,164,roofit/roostats/src/HypoTestInverterResult.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/HypoTestInverterResult.cxx,1,['depend'],['depending']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// lock message queue",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/src/TGWin32.cxx:91,message,message,91,graf2d/win32gdk/src/TGWin32.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/src/TGWin32.cxx,1,['message'],['message']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// print message, for debugging",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/TNeuron.cxx:92,message,message,92,tmva/tmva/src/TNeuron.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/TNeuron.cxx,1,['message'],['message']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// print messages, turn off printing by setting verbose and debug flag appropriately",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodANNBase.cxx:92,message,messages,92,tmva/tmva/src/MethodANNBase.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodANNBase.cxx,1,['message'],['messages']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// process civetweb log message, can be used to detect critical errors",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/src/TCivetweb.cxx:107,message,message,107,net/http/src/TCivetweb.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/src/TCivetweb.cxx,1,['message'],['message']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// provide help message",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodPDEFoam.cxx:99,message,message,99,tmva/tmva/src/MethodPDEFoam.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodPDEFoam.cxx,1,['message'],['message']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// putting the output string, the message type, and the color; /// switcher together into a single string",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MsgLogger.cxx:117,message,message,117,tmva/tmva/src/MsgLogger.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MsgLogger.cxx,1,['message'],['message']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// quadratic interpolation; /// Revised and checked by Francois Nov, 16th, 2000; /// Note the beautiful non-spontaneous symmetry breaking ...; /// It was checked that the old routine gave exactly the same answers.; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/TSpline2.cxx:258,rout,routine,258,tmva/tmva/src/TSpline2.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/TSpline2.cxx,1,['rout'],['routine']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// rebuild the sampling distributions by; /// generating some toys and find for each of them a new upper limit; /// Return the upper limit distribution and optionally also the pValue distributions for Cls, Clsb and Clbxs; /// as a TList for each scanned point; /// The method uses the present parameter value. It is user responsibility to give the current parameters to rebuild the distributions; /// It returns a upper or lower limit distribution depending on the isUpper flag, however it computes also the lower limit distribution and it is saved in the; /// output file as an histogram",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/HypoTestInverter.cxx:531,depend,depending,531,roofit/roostats/src/HypoTestInverter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/HypoTestInverter.cxx,1,['depend'],['depending']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// redefined here to avoid warning message from gcc",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TBufferJSON.cxx:118,message,message,118,io/io/src/TBufferJSON.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TBufferJSON.cxx,1,['message'],['message']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// return the estimator (from current FOM) for the fitting interface",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/OptimizeConfigParameters.cxx:142,interface,interface,142,tmva/tmva/src/OptimizeConfigParameters.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/OptimizeConfigParameters.cxx,1,['interface'],['interface']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// return the event weight - depending on whether the flag; /// *IgnoreNegWeightsInTraining* is or not. If it is set AND it is; /// used for training, then negative event weights are set to zero !; /// NOTE! For events used in Testing, the ORIGINAL possibly negative; /// event weight is used no matter what",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/Event.cxx:112,depend,depending,112,tmva/tmva/src/Event.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/Event.cxx,1,['depend'],['depending']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// returns -logL(poi, conditional MLE of nuisance params); /// subtract off the global MLE or not depending on the option; /// It is the numerator or the denominator of the ratio (depending on the pdf); ///; /// L.M. : not sure why this method is needed now",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/RatioOfProfiledLikelihoodsTestStat.cxx:181,depend,depending,181,roofit/roostats/src/RatioOfProfiledLikelihoodsTestStat.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/RatioOfProfiledLikelihoodsTestStat.cxx,2,['depend'],['depending']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// returns error message of last operation; /// if no errors, return 0; /// Each specific implementation of TSQLServer provides its own error messages",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TSQLServer.cxx:100,message,message,100,net/net/src/TSQLServer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TSQLServer.cxx,2,['message'],"['message', 'messages']"
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// returns error message of last operation; /// if no errors, return 0; /// Each specific implementation of TSQLStatement provides its own error messages",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TSQLStatement.cxx:100,message,message,100,net/net/src/TSQLStatement.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TSQLStatement.cxx,2,['message'],"['message', 'messages']"
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// returns read-only flag for current item; /// Depends from default value and current restrictions",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/src/TRootSniffer.cxx:131,Depend,Depends,131,net/http/src/TRootSniffer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/src/TRootSniffer.cxx,1,['Depend'],['Depends']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// returns the inverse of the cumulative distribution function, with variations depending on number of samples",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/SamplingDistribution.cxx:163,depend,depending,163,roofit/roostats/src/SamplingDistribution.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/SamplingDistribution.cxx,1,['depend'],['depending']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// returns true if the *num*-th parameter was specified; /// otherwise returns fFALSE; /// in case of an error (wrong num) prints an error message and; /// returns false.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeDrawArgsParser.cxx:222,message,message,222,tree/treeplayer/src/TTreeDrawArgsParser.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeDrawArgsParser.cxx,1,['message'],['message']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// save current configuration in a Root file; /// if filename is blank, the name of the file will be the current objectname.root; /// all the current settings are preserved; /// the Root file produced can be looked at by a another Root session; /// with no access to the original classes.; /// By default a message is printed. Specify option ""Q"" to remove the message",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TClassTree.cxx:390,message,message,390,graf2d/gpad/src/TClassTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TClassTree.cxx,2,['message'],['message']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// send exit message to server thread",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/src/TGWin32ProxyBase.cxx:96,message,message,96,graf2d/win32gdk/src/TGWin32ProxyBase.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/src/TGWin32ProxyBase.cxx,1,['message'],['message']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// set current http arguments, which then used in different process methods; /// For instance, if user authorized with some user name,; /// depending from restrictions some objects will be invisible; /// or user get full access to the element; /// Returns previous argument which was set before",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/src/TRootSniffer.cxx:223,depend,depending,223,net/http/src/TRootSniffer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/src/TRootSniffer.cxx,1,['depend'],['depending']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// set new values for error fields; /// if method is specified, displays error message",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TSQLServer.cxx:162,message,message,162,net/net/src/TSQLServer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TSQLServer.cxx,1,['message'],['message']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// set new values for error fields; /// if method specified, displays error message",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TSQLStatement.cxx:159,message,message,159,net/net/src/TSQLStatement.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TSQLStatement.cxx,1,['message'],['message']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// set observed value to the expected one; /// works for Gaussian, Poisson or LogNormal; /// assumes mean parameter value is the argument not constant and not depending on observables; /// (if more than two arguments are not constant will use first one but print a warning !); /// need to iterate on the components of the Poisson to get n and nu (nu can be a RooAbsReal); /// (code from G. Petrucciani and extended by L.M.)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/AsymptoticCalculator.cxx:242,depend,depending,242,roofit/roostats/src/AsymptoticCalculator.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/AsymptoticCalculator.cxx,1,['depend'],['depending']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// set the current message type to that of mlog for this class and all other subtools",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/RuleFit.cxx:102,message,message,102,tmva/tmva/src/RuleFit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/RuleFit.cxx,1,['message'],['message']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// set the integration type (possible type are) :; ///; /// - 1D integration ( used when only one nuisance and when the posterior is scanned):; /// adaptive , gauss, nonadaptive; /// - multidim:; /// - ADAPTIVE, adaptive numerical integration; /// The parameter numIters (settable with SetNumIters) is the max number of function calls.; /// It can be reduced to make the integration faster but it will be difficult to reach the required tolerance; /// - VEGAS MC integration method based on importance sampling - numIters is number of function calls; /// Extra Vegas parameter can be set using IntegratorMultiDimOptions class; /// - MISER MC integration method based on stratified sampling; /// See also http://en.wikipedia.org/wiki/Monte_Carlo_integration for VEGAS and MISER description; /// - PLAIN simple MC integration method, where the max number of calls can be specified using SetNumIters(numIters); ///; /// Extra integration types are:; ///; /// - TOYMC:; /// evaluate posterior by generating toy MC for the nuisance parameters. It is a MC; /// integration, where the function is sampled according to the nuisance. It is convenient to use when all; /// the nuisance are uncorrelated and it is efficient to generate them; /// The toy are generated by default for each poi values; /// (this method has been proposed and provided by J.P Chou); /// - 1-TOYMC : same method as before but in this case the toys are generated only one time and then used for; /// each poi value. It can be convenient when the generation time is much larger than the evaluation time,; /// otherwise it is recommended to re-generate the toy for each poi scanned point of the posterior function; /// - ROOFIT:; /// use roofit default integration methods which will produce a nested integral (not recommended for more; /// than 1 nuisance parameters)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/BayesianCalculator.cxx:94,integrat,integration,94,roofit/roostats/src/BayesianCalculator.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/BayesianCalculator.cxx,11,"['Integrat', 'integrat']","['IntegratorMultiDimOptions', 'integration']"
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// static function (called by TH1), interface to TSpectrum2::Background",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2.cxx:119,interface,interface,119,hist/spectrum/src/TSpectrum2.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2.cxx,1,['interface'],['interface']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// static function (called by TH1), interface to TSpectrum2::Search",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2.cxx:119,interface,interface,119,hist/spectrum/src/TSpectrum2.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2.cxx,1,['interface'],['interface']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// static function , interface to InspectObject.; /// Create the InspectCanvas if it does not exist yet.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TInspectCanvas.cxx:104,interface,interface,104,graf2d/gpad/src/TInspectCanvas.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TInspectCanvas.cxx,1,['interface'],['interface']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// the routine that basically ""steers"" the pruning process. Call the calculation of; /// the pruning sequence, the tree quality and alike..",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/CostComplexityPruneTool.cxx:90,rout,routine,90,tmva/tmva/src/CostComplexityPruneTool.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/CostComplexityPruneTool.cxx,1,['rout'],['routine']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// unlock message queue",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/src/TGWin32.cxx:93,message,message,93,graf2d/win32gdk/src/TGWin32.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/src/TGWin32.cxx,1,['message'],['message']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// various kinds of welcome messages; /// ASCII text generated by this site: http://www.network-science.de/ascii/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/Tools.cxx:111,message,messages,111,tmva/tmva/src/Tools.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/Tools.cxx,1,['message'],['messages']
Integrability,"////////////////////////////////////////////////////////////////////////////////; /// welcome message",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/RuleFitAPI.cxx:94,message,message,94,tmva/tmva/src/RuleFitAPI.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/RuleFitAPI.cxx,1,['message'],['message']
Integrability,"////////////////////////////////////////////////////////////////////////////////; ///; /// It reads the /HEPEVT/ common block which has been filled by the; /// GenerateEvent method. If the event generator does not use the; /// HEPEVT common block, This routine has to be overloaded by the; /// subclasses.; ///; /// The default action is to store only the stable particles (ISTHEP =; /// 1) This can be demanded explicitly by setting the option = ""Final""; /// If the option = ""All"", all the particles are stored.; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/montecarlo/eg/src/TGenerator.cxx:253,rout,routine,253,montecarlo/eg/src/TGenerator.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/montecarlo/eg/src/TGenerator.cxx,1,['rout'],['routine']
Integrability,"////////////////////////////////////////////////////////////////////////////////; ///; /// It reads the /HEPEVT/ common block which has been filled by the; /// GenerateEvent method. If the event generator does not use the; /// HEPEVT common block, This routine has to be overloaded by the; /// subclasses.; ///; /// The function loops on the generated particles and store them in; /// the TClonesArray pointed by the argument particles. The default; /// action is to store only the stable particles (ISTHEP = 1) This can; /// be demanded explicitly by setting the option = ""Final"" If the; /// option = ""All"", all the particles are stored.; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/montecarlo/eg/src/TGenerator.cxx:253,rout,routine,253,montecarlo/eg/src/TGenerator.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/montecarlo/eg/src/TGenerator.cxx,1,['rout'],['routine']
Integrability,"////////////////////////////////////////////////////////////////////////////////; ///; /// Note: This file assumes a certain structure on the input file. The structure; /// is as follows:; ///; /// - dataset (TDirectory); /// - ... some variables, plots ...; /// - Method_XXX (TDirectory); /// + XXX (TDirectory); /// * ... some plots ...; /// * MVA_Method_XXX_Test_#classname#; /// * MVA_Method_XXX_Train_#classname#; /// * ... some plots ...; /// - Method_YYY (TDirectory); /// + YYY (TDirectory); /// * ... some plots ...; /// * MVA_Method_YYY_Test_#classname#; /// * MVA_Method_YYY_Train_#classname#; /// * ... some plots ...; /// - TestTree (TTree); /// + ... data...; /// - TrainTree (TTree); /// + ... data...; ///; /// Keeping this in mind makes the main loop in getRocCurves easier to follow :); ///; ////////////////////////////////////////////////////////////////////////////////; /// Private class that simplify drawing plots combining information from; /// several methods.; ///; /// Each wrapper will manage a canvas and a legend and provide convenience; /// functions to add data to these. It also provides a save function for; /// saving an image representation to disk.; ///; /// Feel free to extend this class as you see fit. It is intended as a; /// convenience when showing multiclass roccurves, not a fully general tool.; ///; /// Usage:; /// auto p = new EfficiencyPlotWrapper(name, title, dataset, i):; /// for (TGraph * g : listOfGraphs) {; /// p->AddGraph(g);; /// p->AddLegendEntry(methodName);; /// }; /// p->save();; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmvagui/src/efficienciesMulticlass.cxx:1002,wrap,wrapper,1002,tmva/tmvagui/src/efficienciesMulticlass.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmvagui/src/efficienciesMulticlass.cxx,1,['wrap'],['wrapper']
Integrability,"////////////////////////////////////////////////////////////////////////////////; ///Creates the fftw-plan; ///; ///NOTE: input and output arrays are overwritten during initialisation,; /// so don't set any points, before running this function!!!!!; ///; /// #### 1st parameter:; /// Possible flag_options:; ///; /// - ""ES"" (from ""estimate"") - no time in preparing the transform, but probably sub-optimal; /// performance; /// - ""M"" (from ""measure"") - some time spend in finding the optimal way to do the transform; /// - ""P"" (from ""patient"") - more time spend in finding the optimal way to do the transform; /// - ""EX"" (from ""exhaustive"") - the most optimal way is found; ///; /// This option should be chosen depending on how many transforms of the same size and; /// type are going to be done. Planning is only done once, for the first transform of this; /// size and type.; ///; /// #### 2nd parameter:; /// is dummy and doesn't need to be specified; ///; /// #### 3rd parameter:; /// transform kind for each dimension; /// 4 different kinds of sine and cosine transforms are available; /// - DCT-I - kind=0; /// - DCT-II - kind=1; /// - DCT-III - kind=2; /// - DCT-IV - kind=3; /// - DST-I - kind=4; /// - DST-II - kind=5; /// - DSTIII - kind=6; /// - DSTIV - kind=7",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/fftw/src/TFFTReal.cxx:711,depend,depending,711,math/fftw/src/TFFTReal.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/fftw/src/TFFTReal.cxx,1,['depend'],['depending']
Integrability,"////////////////////////////////////////////////////////////////////////////////; ///Creates the fftw-plan; ///; ///NOTE: input and output arrays are overwritten during initialisation,; /// so don't set any points, before running this function!!!!!; ///; ///2nd parameter: +1; ///; ///Argument kind is dummy and doesn't need to be specified; ///; ///Possible flag_options:; /// - ""ES"" (from ""estimate"") - no time in preparing the transform, but probably sub-optimal; /// performance; /// - ""M"" (from ""measure"") - some time spend in finding the optimal way to do the transform; /// - ""P"" (from ""patient"") - more time spend in finding the optimal way to do the transform; /// - ""EX"" (from ""exhaustive"") - the most optimal way is found; ///This option should be chosen depending on how many transforms of the same size and; ///type are going to be done. Planning is only done once, for the first transform of this; ///size and type.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/fftw/src/TFFTComplex.cxx:766,depend,depending,766,math/fftw/src/TFFTComplex.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/fftw/src/TFFTComplex.cxx,1,['depend'],['depending']
Integrability,"////////////////////////////////////////////////////////////////////////////////; ///Creates the fftw-plan; ///; ///NOTE: input and output arrays are overwritten during initialisation,; /// so don't set any points, before running this function!!!!!; ///; ///Arguments sign and kind are dummy and not need to be specified; ///Possible flag_options:; ///; /// - ""ES"" (from ""estimate"") - no time in preparing the transform, but probably sub-optimal; /// performance; /// - ""M"" (from ""measure"") - some time spend in finding the optimal way to do the transform; /// - ""P"" (from ""patient"") - more time spend in finding the optimal way to do the transform; /// - ""EX"" (from ""exhaustive"") - the most optimal way is found; ///; ///This option should be chosen depending on how many transforms of the same size and; ///type are going to be done. Planning is only done once, for the first transform of this; ///size and type.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/fftw/src/TFFTComplexReal.cxx:751,depend,depending,751,math/fftw/src/TFFTComplexReal.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/fftw/src/TFFTComplexReal.cxx,2,['depend'],['depending']
Integrability,"////////////////////////////////////////////////////////////////////////////////; ///In principle, we can have several conflicting options: ""lego surf pol sph"", surfbb: surf, fb, bb.; ///but only one will be selected, which one - depends on parsing order in this function.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLHistPainter.cxx:230,depend,depends,230,graf3d/gl/src/TGLHistPainter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLHistPainter.cxx,1,['depend'],['depends']
Integrability,"////////////////////////////////////////////////////////////////////////////////; ///Interface to TSpectrum2::Search; ///the function finds peaks in this histogram where the width is > sigma; ///and the peak maximum greater than threshold*maximum bin content of this.; ///for more details see TSpectrum::Search.; ///note the difference in the default value for option compared to TSpectrum2::Search; ///option="""" by default (instead of ""goff"")",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH2.cxx:85,Interface,Interface,85,hist/hist/src/TH2.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH2.cxx,1,['Interface'],['Interface']
Integrability,"////////////////////////////////////////////////////////////////////////////////; ///Returns a pointer to a sine or cosine transform of requested size and kind; ///; ///Parameters:; /// \param [in] ndim number of transform dimensions; /// \param [in] n sizes of each dimension (an array at least ndim long); /// \param [in] r2rkind transform kind for each dimension; /// 4 different kinds of sine and cosine transforms are available; /// - DCT-I - kind=0; /// - DCT-II - kind=1; /// - DCT-III - kind=2; /// - DCT-IV - kind=3; /// - DST-I - kind=4; /// - DST-II - kind=5; /// - DST-III - kind=6; /// - DST-IV - kind=7; /// \param [in] option : consists of 2 parts; /// - flag option and an option to create a new TVirtualFFT; /// - flag option: choosing how much time should be spent in planning the transform:; /// Possible options:; /// - ""ES"" (from ""estimate"") - no time in preparing the transform,; /// but probably sub-optimal performance; /// - ""M"" (from ""measure"") - some time spend in finding the optimal way; /// to do the transform; /// - ""P"" (from ""patient"") - more time spend in finding the optimal way; /// to do the transform; /// - ""EX"" (from ""exhaustive"") - the most optimal way is found; /// This option should be chosen depending on how many transforms of the; /// same size and type are going to be done.; /// Planning is only done once, for the first transform of this size and type.; /// - option allowing to choose between the global fgFFT and a new TVirtualFFT object; /// - """" - default, changes and returns the global fgFFT variable; /// - ""K"" (from ""keep"")- without touching the global fgFFT,; /// creates and returns a new TVirtualFFT*. User is then responsible for deleting it.; /// Examples of valid options: ""ES K"", ""EX"", etc",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualFFT.cxx:1237,depend,depending,1237,core/base/src/TVirtualFFT.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualFFT.cxx,1,['depend'],['depending']
Integrability,"////////////////////////////////////////////////////////////////////////////////; ///Returns a pointer to the FFT of requested size and type.; ///; /// \param[in] ndim number of transform dimensions; /// \param[in] n sizes of each dimension (an array at least ndim long); /// \param [in] option consists of 3 parts - flag option and an option to create a new TVirtualFFT; /// 1. transform type option:; /// Available transform types are:; /// C2CForward, C2CBackward, C2R, R2C, R2HC, HC2R, DHT; /// see class description for details; /// 2. flag option: choosing how much time should be spent in planning the transform:; /// Possible options:; /// - ""ES"" (from ""estimate"") - no time in preparing the transform,; /// but probably sub-optimal performance; /// - ""M"" (from ""measure"") - some time spend in finding the optimal way; /// to do the transform; /// - ""P"" (from ""patient"") - more time spend in finding the optimal way; /// to do the transform; /// - ""EX"" (from ""exhaustive"") - the most optimal way is found; /// This option should be chosen depending on how many transforms of the; /// same size and type are going to be done.; /// Planning is only done once, for the first transform of this size and type.; /// 3. option allowing to choose between the global fgFFT and a new TVirtualFFT object; /// """" - default, changes and returns the global fgFFT variable; /// ""K"" (from ""keep"")- without touching the global fgFFT,; /// creates and returns a new TVirtualFFT*. User is then responsible for deleting it.; ///; /// Examples of valid options: ""R2C ES K"", ""C2CF M"", ""DHT P K"", etc.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualFFT.cxx:1047,depend,depending,1047,core/base/src/TVirtualFFT.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualFFT.cxx,1,['depend'],['depending']
Integrability,"////////////////////////////////////////////////////////////////////////////////; ///Returns the input array// One of the interface classes to the FFTW package, can be used directly; /// or via the TVirtualFFT class. Only the basic interface of FFTW is implemented.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/fftw/src/TFFTRealComplex.cxx:122,interface,interface,122,math/fftw/src/TFFTRealComplex.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/fftw/src/TFFTRealComplex.cxx,2,['interface'],['interface']
Integrability,"////////////////////////////////////////////////////////////////////////////////; ///interface to TTreeCache to set the cache entry range; ///; /// Returns:; /// - 0 entry range set; /// - -1 on error",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:85,interface,interface,85,tree/tree/src/TTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx,1,['interface'],['interface']
Integrability,"////////////////////////////////////////////////////////////////////////////////; //; // Backwards compatibility for old DD4hep version (to be removed in the future); //; ////////////////////////////////////////////////////////////////////////////////; ////////////////////////////////////////////////////////////////////////////////; // Backwards compatibility (to be removed in the future): Wrapper to only selectively write one branch",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/gdml/src/TGDMLWrite.cxx:393,Wrap,Wrapper,393,geom/gdml/src/TGDMLWrite.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/gdml/src/TGDMLWrite.cxx,1,['Wrap'],['Wrapper']
Integrability,"///////////////////////////////////////////////////////////////////////////////; /// Convert strings like the following into byte counts; /// 5MB, 5 MB, 5M, 3.7GB, 123b, 456kB, 3.7GiB, 5MiB; /// with some amount of forgiveness baked into the parsing.; /// For this routine we use the official SI unit where the [i] is reserved; /// for the 'legacy' power of two units. 1KB = 1000 bytes, 1KiB = 1024 bytes.; /// \param str the string to be parsed; /// \param value will be updated with the result if and only if the parse is successful and does not overflow for the type of value.; /// \return return a EFromHumanReadableSize enum value indicating the success or failure of the parse.; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/ROOT/StringConv.hxx:265,rout,routine,265,core/base/inc/ROOT/StringConv.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/ROOT/StringConv.hxx,1,['rout'],['routine']
Integrability,"///////////////////////////////////////////////////////////////////////////////; /// Execute Python code from string; ///; /// \param[in] code Python code as string; /// \param[in] errorMessage Error message which shall be shown if the execution fails; /// \param[in] start Start symbol; ///; /// Helper function to run python code from string in local namespace with; /// error handling; /// `start` defines the start symbol defined in PyRun_String (Py_eval_input,; /// Py_single_input, Py_file_input)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/pymva/src/PyMethodBase.cxx:200,message,message,200,tmva/pymva/src/PyMethodBase.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/pymva/src/PyMethodBase.cxx,1,['message'],['message']
Integrability,"///////////////////////////////////////////////////////////////////////////////; //; // ASYMPTOTIC CALCULATOR VS PROFILE LIKELIHOOD CALCULATOR HYPOTHESIS TEST; //; // This test evaluates the functionality of the AsymptoticCalculator by; // comparing the significance given from a hypothesis test on the on/off model; // with the significance given by the ProfileLikelihoodCalculator. The validity; // of the PLC hypothesis test is evaluated in TestProfileLikelihoodCalculator4.; // If working properly, the two methods should yield identical results.; //; // ModelConfig (explicit) : Poisson On / Off Model; // built in stressRooStats_models.cxx; //; // Input Parameters:; // obsValueOn -> observed value ""n_on"" of sig + bkg; // obsValueOff -> observed value ""n_off"" of tau * bkg; // tau -> parameter of the model (constant with regard to integration); //; // 05/2012 - Ioan Gabriel Bucur; //; ///////////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/test/stressRooStats_tests.h:839,integrat,integration,839,roofit/roostats/test/stressRooStats_tests.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/test/stressRooStats_tests.h,1,['integrat'],['integration']
Integrability,"/////////////////////////////////////////////////////////////////////////////; /// Message processing loop for the TGWin32 related GUI; /// thread for processing windows messages (aka Main/Server thread).; /// We need to start the thread outside the TGWin32 / GUI related; /// dll, because starting threads at DLL init time does not work.; /// Instead, we start an ideling thread at binary startup, and only; /// call the ""real"" message processing function; /// TGWin32::GUIThreadMessageFunc() once gVirtualX comes up.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx:83,Message,Message,83,core/winnt/src/TWinNTSystem.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx,3,"['Message', 'message']","['Message', 'message', 'messages']"
Integrability,"/////////////////////////////////////////////////////////////////////////////; /// \brief Given a IO feature string, set the corresponding feature; /// \param [in] value Feature name to test.; ///; /// This allows one to set a feature given a specific string from the; /// TBasket::EIOBits enum.; ///; /// *NOTE* this function is quite slow and users are strongly encouraged to; /// use the type-safe `Set` version instead. This has been added for better; /// CLI interfaces.; ///; /// Returns true only if a new feature was set; otherwise emits an error message; /// and returns false.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TIOFeatures.cxx:464,interface,interfaces,464,tree/tree/src/TIOFeatures.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TIOFeatures.cxx,2,"['interface', 'message']","['interfaces', 'message']"
Integrability,"/////////////////////////////////////////////////////////////////////////////; /// \brief Retrieve the result wrapped by this mergeable.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RDF/RMergeableValue.hxx:110,wrap,wrapped,110,tree/dataframe/inc/ROOT/RDF/RMergeableValue.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RDF/RMergeableValue.hxx,1,['wrap'],['wrapped']
Integrability,"/////////////////////////////////////////////////////////////////////////////; /// \brief Return information about the dataframe.; /// \return information about the dataframe as RDFDescription object; ///; /// This convenience function describes the dataframe and combines the following information:; /// - Number of event loops run, see GetNRuns(); /// - Number of total and defined columns, see GetColumnNames() and GetDefinedColumnNames(); /// - Column names, see GetColumnNames(); /// - Column types, see GetColumnType(); /// - Number of processing slots, see GetNSlots(); ///; /// This is not an action nor a transformation, just a query to the RDataFrame object.; /// The result is dependent on the node from which this method is called, e.g. the list of; /// defined columns returned by GetDefinedColumnNames().; ///; /// Please note that this is a convenience feature and the layout of the output can be subject; /// to change and should be parsed via RDFDescription methods.; ///; /// ### Example usage:; /// ~~~{.cpp}; /// RDataFrame df(10);; /// auto df2 = df.Define(""x"", ""1.f"").Define(""s"", ""\""myStr\"""");; /// // Describe the dataframe; /// df2.Describe().Print(); /// df2.Describe().Print(/*shortFormat=*/true); /// std::cout << df2.Describe().AsString() << std::endl;; /// std::cout << df2.Describe().AsString(/*shortFormat=*/true) << std::endl;; /// ~~~; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RInterfaceBase.cxx:688,depend,dependent,688,tree/dataframe/src/RInterfaceBase.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RInterfaceBase.cxx,1,['depend'],['dependent']
Integrability,"////////////////////////////////////////////////////////////////////////////; // //; // TGeoVGShape - bridge class for using a VecGeom solid as TGeoShape. //; // //; ////////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/vecgeom/inc/TGeoVGShape.h:102,bridg,bridge,102,geom/vecgeom/inc/TGeoVGShape.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/vecgeom/inc/TGeoVGShape.h,1,['bridg'],['bridge']
Integrability,"////////////////////////////////////////////////////////////////////////////; // //; // TTreeReader //; // //; // A simple interface for reading trees or chains. //; // //; // //; ////////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreeReader.h:123,interface,interface,123,tree/treeplayer/inc/TTreeReader.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreeReader.h,2,['interface'],['interface']
Integrability,"////////////////////////////////////////////////////////////////////////////; // //; // TTreeReaderValue //; // //; // A simple interface for reading data from trees or chains. //; // //; // //; ////////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreeReaderValue.h:128,interface,interface,128,tree/treeplayer/inc/TTreeReaderValue.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreeReaderValue.h,1,['interface'],['interface']
Integrability,"////////////////////////////////////////////////////////////////////////////; // //; // TTreeReaderValueFast //; // //; // A simple interface for reading data from trees or chains. //; // //; // //; ////////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/ROOT/TTreeReaderValueFast.hxx:132,interface,interface,132,tree/treeplayer/inc/ROOT/TTreeReaderValueFast.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/ROOT/TTreeReaderValueFast.hxx,1,['interface'],['interface']
Integrability,"////////////////////////////////////////////////////////////////////////////; // TFeldmanCousins; //; // class to calculate the CL upper limit using; // the Feldman-Cousins method as described in PRD V57 #7, p3873-3889; //; // The default confidence interval calvculated using this method is 90%; // This is set either by having a default the constructor, or using the; // appropriate fraction when instantiating an object of this class (e.g. 0.9); //; // The simple extension to a gaussian resolution function bounded at zero; // has not been addressed as yet -> `time is of the essence' as they write; // on the wall of the maze in that classic game ...; //; // VARIABLES THAT CAN BE ALTERED; // -----------------------------; // => depending on your desired precision: The initial values of fMuMin,; // fMuMax, fMuStep and fNMax are those used in the PRD:; // fMuMin = 0.0; // fMuMax = 50.0; // fMuStep= 0.005; // but there is total flexibility in changing this should you desire.; //; // Author: Adrian Bevan, Liverpool University; //; // Copyright Liverpool University 2001 bevan@slac.stanford.edu; ///////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/physics/inc/TFeldmanCousins.h:735,depend,depending,735,math/physics/inc/TFeldmanCousins.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/physics/inc/TFeldmanCousins.h,1,['depend'],['depending']
Integrability,"////////////////////////////////////////////////////////////////////////////; /// Use ROOT's platform independent sleep wrapper",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RSqliteDS.cxx:120,wrap,wrapper,120,tree/dataframe/src/RSqliteDS.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RSqliteDS.cxx,1,['wrap'],['wrapper']
Integrability,"////////////////////////////////////////////////////////////////////////////; /// Wrapper around VfsRdOnlyCurrentTimeInt64",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RSqliteDS.cxx:82,Wrap,Wrapper,82,tree/dataframe/src/RSqliteDS.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RSqliteDS.cxx,1,['Wrap'],['Wrapper']
Integrability,"////////////////////////////////////////////////////////////////////////////; /// \anchor optimisationInterface; /// \name Optimisation interface; /// These functions allow RooFit to optimise a computation graph, to keep track; /// of cached values, and to invalidate caches.; /// @{; // Cache mode optimization (tracks changes & do lazy evaluation vs evaluate always)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsArg.h:136,interface,interface,136,roofit/roofitcore/inc/RooAbsArg.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsArg.h,1,['interface'],['interface']
Integrability,"////////////////////////////////////////////////////////////////////////////; /// \brief Clear a specific IO feature from this set.; /// \param[in] input_bits The specific feature to disable.; ///; /// Removes a feature from the `TIOFeatures` object; emits an Error message if; /// the IO feature is not supported by this version of ROOT.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TIOFeatures.cxx:266,message,message,266,tree/tree/src/TIOFeatures.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TIOFeatures.cxx,2,['message'],['message']
Integrability,"////////////////////////////////////////////////////////////////////////////; /// \brief Execute a user-defined reduce operation on the values of a column.; /// \tparam F The type of the reduce callable. Automatically deduced.; /// \tparam T The type of the column to apply the reduction to. Automatically deduced.; /// \param[in] f A callable with signature `T(T,T)`; /// \param[in] columnName The column to be reduced. If omitted, the first default column is used instead.; /// \param[in] redIdentity The reduced object of each thread is initialized to this value.; /// \return the reduced quantity wrapped in a RResultPtr.; ///; /// ### Example usage:; /// ~~~{.cpp}; /// auto sumOfIntColWithOffset = d.Reduce([](int x, int y) { return x + y; }, ""intCol"", 42);; /// ~~~; /// See the description of the first Reduce overload for more information.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RDF/RInterface.hxx:601,wrap,wrapped,601,tree/dataframe/inc/ROOT/RDF/RInterface.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RDF/RInterface.hxx,1,['wrap'],['wrapped']
Integrability,"////////////////////////////////////////////////////////////////////////////; /// \brief Fill and return a TGraph object (*lazy action*).; /// \tparam X The type of the column used to fill the x axis.; /// \tparam Y The type of the column used to fill the y axis.; /// \param[in] x The name of the column that will fill the x axis.; /// \param[in] y The name of the column that will fill the y axis.; /// \return the TGraph wrapped in a RResultPtr.; ///; /// Columns can be of a container type (e.g. std::vector<double>), in which case the TGraph; /// is filled with each one of the elements of the container.; /// If Multithreading is enabled, the order in which points are inserted is undefined.; /// If the Graph has to be drawn, it is suggested to the user to sort it on the x before printing.; /// A name and a title to the TGraph is given based on the input column names.; ///; /// This action is *lazy*: upon invocation of this method the calculation is; /// booked but not executed. Also see RResultPtr.; ///; /// ### Example usage:; /// ~~~{.cpp}; /// // Deduce column types (this invocation needs jitting internally); /// auto myGraph1 = myDf.Graph(""xValues"", ""yValues"");; /// // Explicit column types; /// auto myGraph2 = myDf.Graph<int, float>(""xValues"", ""yValues"");; /// ~~~; ///; /// \note Differently from other ROOT interfaces, the returned TGraph is not associated to gDirectory; /// and the caller is responsible for its lifetime (in particular, a typical source of confusion is that; /// if result histograms go out of scope before the end of the program, ROOT might display a blank canvas).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RDF/RInterface.hxx:424,wrap,wrapped,424,tree/dataframe/inc/ROOT/RDF/RInterface.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RDF/RInterface.hxx,2,"['interface', 'wrap']","['interfaces', 'wrapped']"
Integrability,"////////////////////////////////////////////////////////////////////////////; /// \brief Fill and return a TGraphAsymmErrors object (*lazy action*).; /// \param[in] x The name of the column that will fill the x axis.; /// \param[in] y The name of the column that will fill the y axis.; /// \param[in] exl The name of the column of X low errors; /// \param[in] exh The name of the column of X high errors; /// \param[in] eyl The name of the column of Y low errors; /// \param[in] eyh The name of the column of Y high errors; /// \return the TGraphAsymmErrors wrapped in a RResultPtr.; ///; /// Columns can be of a container type (e.g. std::vector<double>), in which case the graph; /// is filled with each one of the elements of the container.; /// If Multithreading is enabled, the order in which points are inserted is undefined.; ///; /// This action is *lazy*: upon invocation of this method the calculation is; /// booked but not executed. Also see RResultPtr.; ///; /// ### Example usage:; /// ~~~{.cpp}; /// // Deduce column types (this invocation needs jitting internally); /// auto myGAE1 = myDf.GraphAsymmErrors(""xValues"", ""yValues"", ""exl"", ""exh"", ""eyl"", ""eyh"");; /// // Explicit column types; /// using f = float; /// auto myGAE2 = myDf.GraphAsymmErrors<f, f, f, f, f, f>(""xValues"", ""yValues"", ""exl"", ""exh"", ""eyl"", ""eyh"");; /// ~~~; ///; /// \note Differently from other ROOT interfaces, the returned TGraphAsymmErrors is not associated to gDirectory; /// and the caller is responsible for its lifetime (in particular, a typical source of confusion is that; /// if result histograms go out of scope before the end of the program, ROOT might display a blank canvas).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RDF/RInterface.hxx:558,wrap,wrapped,558,tree/dataframe/inc/ROOT/RDF/RInterface.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RDF/RInterface.hxx,2,"['interface', 'wrap']","['interfaces', 'wrapped']"
Integrability,"////////////////////////////////////////////////////////////////////////////; /// \brief Fill and return a one-dimensional histogram with the values of a column (*lazy action*).; /// \tparam V The type of the column used to fill the histogram.; /// \param[in] model The returned histogram will be constructed using this as a model.; /// \param[in] vName The name of the column that will fill the histogram.; /// \return the monodimensional histogram wrapped in a RResultPtr.; ///; /// Columns can be of a container type (e.g. `std::vector<double>`), in which case the histogram; /// is filled with each one of the elements of the container. In case multiple columns of container type; /// are provided (e.g. values and weights) they must have the same length for each one of the events (but; /// possibly different lengths between events).; /// This action is *lazy*: upon invocation of this method the calculation is; /// booked but not executed. Also see RResultPtr.; ///; /// ### Example usage:; /// ~~~{.cpp}; /// // Deduce column type (this invocation needs jitting internally); /// auto myHist1 = myDf.Histo1D({""histName"", ""histTitle"", 64u, 0., 128.}, ""myColumn"");; /// // Explicit column type; /// auto myHist2 = myDf.Histo1D<float>({""histName"", ""histTitle"", 64u, 0., 128.}, ""myColumn"");; /// ~~~; ///; /// \note Differently from other ROOT interfaces, the returned histogram is not associated to gDirectory; /// and the caller is responsible for its lifetime (in particular, a typical source of confusion is that; /// if result histograms go out of scope before the end of the program, ROOT might display a blank canvas).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RDF/RInterface.hxx:450,wrap,wrapped,450,tree/dataframe/inc/ROOT/RDF/RInterface.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RDF/RInterface.hxx,2,"['interface', 'wrap']","['interfaces', 'wrapped']"
Integrability,"////////////////////////////////////////////////////////////////////////////; /// \brief Fill and return a one-dimensional histogram with the values of a column (*lazy action*).; /// \tparam V The type of the column used to fill the histogram.; /// \param[in] vName The name of the column that will fill the histogram.; /// \return the monodimensional histogram wrapped in a RResultPtr.; ///; /// This overload uses a default model histogram TH1D(name, title, 128u, 0., 0.).; /// The ""name"" and ""title"" strings are built starting from the input column name.; /// See the description of the first Histo1D() overload for more details.; ///; /// ### Example usage:; /// ~~~{.cpp}; /// // Deduce column type (this invocation needs jitting internally); /// auto myHist1 = myDf.Histo1D(""myColumn"");; /// // Explicit column type; /// auto myHist2 = myDf.Histo1D<float>(""myColumn"");; /// ~~~",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RDF/RInterface.hxx:362,wrap,wrapped,362,tree/dataframe/inc/ROOT/RDF/RInterface.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RDF/RInterface.hxx,1,['wrap'],['wrapped']
Integrability,"////////////////////////////////////////////////////////////////////////////; /// \brief Fill and return a one-dimensional histogram with the weighted values of a column (*lazy action*).; /// \tparam V The type of the column used to fill the histogram.; /// \tparam W The type of the column used as weights.; /// \param[in] model The returned histogram will be constructed using this as a model.; /// \param[in] vName The name of the column that will fill the histogram.; /// \param[in] wName The name of the column that will provide the weights.; /// \return the monodimensional histogram wrapped in a RResultPtr.; ///; /// See the description of the first Histo1D() overload for more details.; ///; /// ### Example usage:; /// ~~~{.cpp}; /// // Deduce column type (this invocation needs jitting internally); /// auto myHist1 = myDf.Histo1D({""histName"", ""histTitle"", 64u, 0., 128.}, ""myValue"", ""myweight"");; /// // Explicit column type; /// auto myHist2 = myDf.Histo1D<float, int>({""histName"", ""histTitle"", 64u, 0., 128.}, ""myValue"", ""myweight"");; /// ~~~",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RDF/RInterface.hxx:590,wrap,wrapped,590,tree/dataframe/inc/ROOT/RDF/RInterface.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RDF/RInterface.hxx,1,['wrap'],['wrapped']
Integrability,"////////////////////////////////////////////////////////////////////////////; /// \brief Fill and return a one-dimensional histogram with the weighted values of a column (*lazy action*).; /// \tparam V The type of the column used to fill the histogram.; /// \tparam W The type of the column used as weights.; /// \param[in] model The returned histogram will be constructed using this as a model.; /// \return the monodimensional histogram wrapped in a RResultPtr.; ///; /// This overload will use the first two default columns as column names.; /// See the description of the first Histo1D() overload for more details.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RDF/RInterface.hxx:439,wrap,wrapped,439,tree/dataframe/inc/ROOT/RDF/RInterface.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RDF/RInterface.hxx,1,['wrap'],['wrapped']
Integrability,"////////////////////////////////////////////////////////////////////////////; /// \brief Fill and return a one-dimensional histogram with the weighted values of a column (*lazy action*).; /// \tparam V The type of the column used to fill the histogram.; /// \tparam W The type of the column used as weights.; /// \param[in] vName The name of the column that will fill the histogram.; /// \param[in] wName The name of the column that will provide the weights.; /// \return the monodimensional histogram wrapped in a RResultPtr.; ///; /// This overload uses a default model histogram TH1D(name, title, 128u, 0., 0.).; /// The ""name"" and ""title"" strings are built starting from the input column names.; /// See the description of the first Histo1D() overload for more details.; ///; /// ### Example usage:; /// ~~~{.cpp}; /// // Deduce column types (this invocation needs jitting internally); /// auto myHist1 = myDf.Histo1D(""myValue"", ""myweight"");; /// // Explicit column types; /// auto myHist2 = myDf.Histo1D<float, int>(""myValue"", ""myweight"");; /// ~~~",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RDF/RInterface.hxx:502,wrap,wrapped,502,tree/dataframe/inc/ROOT/RDF/RInterface.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RDF/RInterface.hxx,1,['wrap'],['wrapped']
Integrability,"////////////////////////////////////////////////////////////////////////////; /// \brief Fill and return a one-dimensional profile (*lazy action*).; /// \tparam V1 The type of the column the values of which are used to fill the profile. Inferred if not present.; /// \tparam V2 The type of the column the values of which are used to fill the profile. Inferred if not present.; /// \param[in] model The model to be considered to build the new return value.; /// \param[in] v1Name The name of the column that will fill the x axis.; /// \param[in] v2Name The name of the column that will fill the y axis.; /// \return the monodimensional profile wrapped in a RResultPtr.; ///; /// This action is *lazy*: upon invocation of this method the calculation is; /// booked but not executed. Also see RResultPtr.; ///; /// ### Example usage:; /// ~~~{.cpp}; /// // Deduce column types (this invocation needs jitting internally); /// auto myProf1 = myDf.Profile1D({""profName"", ""profTitle"", 64u, -4., 4.}, ""xValues"", ""yValues"");; /// // Explicit column types; /// auto myProf2 = myDf.Graph<int, float>({""profName"", ""profTitle"", 64u, -4., 4.}, ""xValues"", ""yValues"");; /// ~~~; ///; /// \note Differently from other ROOT interfaces, the returned profile is not associated to gDirectory; /// and the caller is responsible for its lifetime (in particular, a typical source of confusion is that; /// if result histograms go out of scope before the end of the program, ROOT might display a blank canvas).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RDF/RInterface.hxx:643,wrap,wrapped,643,tree/dataframe/inc/ROOT/RDF/RInterface.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RDF/RInterface.hxx,2,"['interface', 'wrap']","['interfaces', 'wrapped']"
Integrability,"////////////////////////////////////////////////////////////////////////////; /// \brief Fill and return a one-dimensional profile (*lazy action*).; /// \tparam V1 The type of the column the values of which are used to fill the profile. Inferred if not present.; /// \tparam V2 The type of the column the values of which are used to fill the profile. Inferred if not present.; /// \tparam W The type of the column the weights of which are used to fill the profile. Inferred if not present.; /// \param[in] model The model to be considered to build the new return value.; /// \param[in] v1Name The name of the column that will fill the x axis.; /// \param[in] v2Name The name of the column that will fill the y axis.; /// \param[in] wName The name of the column that will provide the weights.; /// \return the monodimensional profile wrapped in a RResultPtr.; ///; /// This action is *lazy*: upon invocation of this method the calculation is; /// booked but not executed. Also see RResultPtr.; ///; /// ### Example usage:; /// ~~~{.cpp}; /// // Deduce column types (this invocation needs jitting internally); /// auto myProf1 = myDf.Profile1D({""profName"", ""profTitle"", 64u, -4., 4.}, ""xValues"", ""yValues"", ""weight"");; /// // Explicit column types; /// auto myProf2 = myDf.Profile1D<int, float, double>({""profName"", ""profTitle"", 64u, -4., 4.},; /// ""xValues"", ""yValues"", ""weight"");; /// ~~~; ///; /// See the first Profile1D() overload for more details.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RDF/RInterface.hxx:833,wrap,wrapped,833,tree/dataframe/inc/ROOT/RDF/RInterface.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RDF/RInterface.hxx,1,['wrap'],['wrapped']
Integrability,"////////////////////////////////////////////////////////////////////////////; /// \brief Fill and return a three-dimensional histogram (*lazy action*).; /// \tparam V1 The type of the column used to fill the x axis of the histogram. Inferred if not present.; /// \tparam V2 The type of the column used to fill the y axis of the histogram. Inferred if not present.; /// \tparam V3 The type of the column used to fill the z axis of the histogram. Inferred if not present.; /// \param[in] model The returned histogram will be constructed using this as a model.; /// \param[in] v1Name The name of the column that will fill the x axis.; /// \param[in] v2Name The name of the column that will fill the y axis.; /// \param[in] v3Name The name of the column that will fill the z axis.; /// \return the tridimensional histogram wrapped in a RResultPtr.; ///; /// This action is *lazy*: upon invocation of this method the calculation is; /// booked but not executed. Also see RResultPtr.; ///; /// ### Example usage:; /// ~~~{.cpp}; /// // Deduce column types (this invocation needs jitting internally); /// auto myHist1 = myDf.Histo3D({""name"", ""title"", 64u, 0., 128., 32u, -4., 4., 8u, -2., 2.},; /// ""myValueX"", ""myValueY"", ""myValueZ"");; /// // Explicit column types; /// auto myHist2 = myDf.Histo3D<double, double, float>({""name"", ""title"", 64u, 0., 128., 32u, -4., 4., 8u, -2., 2.},; /// ""myValueX"", ""myValueY"", ""myValueZ"");; /// ~~~; ///; /// \note Differently from other ROOT interfaces, the returned histogram is not associated to gDirectory; /// and the caller is responsible for its lifetime (in particular, a typical source of confusion is that; /// if result histograms go out of scope before the end of the program, ROOT might display a blank canvas).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RDF/RInterface.hxx:819,wrap,wrapped,819,tree/dataframe/inc/ROOT/RDF/RInterface.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RDF/RInterface.hxx,2,"['interface', 'wrap']","['interfaces', 'wrapped']"
Integrability,"////////////////////////////////////////////////////////////////////////////; /// \brief Fill and return a three-dimensional histogram (*lazy action*).; /// \tparam V1 The type of the column used to fill the x axis of the histogram. Inferred if not present.; /// \tparam V2 The type of the column used to fill the y axis of the histogram. Inferred if not present.; /// \tparam V3 The type of the column used to fill the z axis of the histogram. Inferred if not present.; /// \tparam W The type of the column used for the weights of the histogram. Inferred if not present.; /// \param[in] model The returned histogram will be constructed using this as a model.; /// \param[in] v1Name The name of the column that will fill the x axis.; /// \param[in] v2Name The name of the column that will fill the y axis.; /// \param[in] v3Name The name of the column that will fill the z axis.; /// \param[in] wName The name of the column that will provide the weights.; /// \return the tridimensional histogram wrapped in a RResultPtr.; ///; /// This action is *lazy*: upon invocation of this method the calculation is; /// booked but not executed. Also see RResultPtr.; ///; /// ### Example usage:; /// ~~~{.cpp}; /// // Deduce column types (this invocation needs jitting internally); /// auto myHist1 = myDf.Histo3D({""name"", ""title"", 64u, 0., 128., 32u, -4., 4., 8u, -2., 2.},; /// ""myValueX"", ""myValueY"", ""myValueZ"", ""myWeight"");; /// // Explicit column types; /// using d_t = double;; /// auto myHist2 = myDf.Histo3D<d_t, d_t, float, d_t>({""name"", ""title"", 64u, 0., 128., 32u, -4., 4., 8u, -2., 2.},; /// ""myValueX"", ""myValueY"", ""myValueZ"", ""myWeight"");; /// ~~~; ///; ///; /// See the documentation of the first Histo2D() overload for more details.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RDF/RInterface.hxx:997,wrap,wrapped,997,tree/dataframe/inc/ROOT/RDF/RInterface.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RDF/RInterface.hxx,1,['wrap'],['wrapped']
Integrability,"////////////////////////////////////////////////////////////////////////////; /// \brief Fill and return a two-dimensional histogram (*lazy action*).; /// \tparam V1 The type of the column used to fill the x axis of the histogram.; /// \tparam V2 The type of the column used to fill the y axis of the histogram.; /// \param[in] model The returned histogram will be constructed using this as a model.; /// \param[in] v1Name The name of the column that will fill the x axis.; /// \param[in] v2Name The name of the column that will fill the y axis.; /// \return the bidimensional histogram wrapped in a RResultPtr.; ///; /// Columns can be of a container type (e.g. std::vector<double>), in which case the histogram; /// is filled with each one of the elements of the container. In case multiple columns of container type; /// are provided (e.g. values and weights) they must have the same length for each one of the events (but; /// possibly different lengths between events).; /// This action is *lazy*: upon invocation of this method the calculation is; /// booked but not executed. Also see RResultPtr.; ///; /// ### Example usage:; /// ~~~{.cpp}; /// // Deduce column types (this invocation needs jitting internally); /// auto myHist1 = myDf.Histo2D({""histName"", ""histTitle"", 64u, 0., 128., 32u, -4., 4.}, ""myValueX"", ""myValueY"");; /// // Explicit column types; /// auto myHist2 = myDf.Histo2D<float, float>({""histName"", ""histTitle"", 64u, 0., 128., 32u, -4., 4.}, ""myValueX"", ""myValueY"");; /// ~~~; ///; ///; /// \note Differently from other ROOT interfaces, the returned histogram is not associated to gDirectory; /// and the caller is responsible for its lifetime (in particular, a typical source of confusion is that; /// if result histograms go out of scope before the end of the program, ROOT might display a blank canvas).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RDF/RInterface.hxx:587,wrap,wrapped,587,tree/dataframe/inc/ROOT/RDF/RInterface.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RDF/RInterface.hxx,2,"['interface', 'wrap']","['interfaces', 'wrapped']"
Integrability,"////////////////////////////////////////////////////////////////////////////; /// \brief Fill and return a two-dimensional profile (*lazy action*).; /// \tparam V1 The type of the column used to fill the x axis of the histogram. Inferred if not present.; /// \tparam V2 The type of the column used to fill the y axis of the histogram. Inferred if not present.; /// \tparam V3 The type of the column used to fill the z axis of the histogram. Inferred if not present.; /// \param[in] model The returned profile will be constructed using this as a model.; /// \param[in] v1Name The name of the column that will fill the x axis.; /// \param[in] v2Name The name of the column that will fill the y axis.; /// \param[in] v3Name The name of the column that will fill the z axis.; /// \return the bidimensional profile wrapped in a RResultPtr.; ///; /// This action is *lazy*: upon invocation of this method the calculation is; /// booked but not executed. Also see RResultPtr.; ///; /// ### Example usage:; /// ~~~{.cpp}; /// // Deduce column types (this invocation needs jitting internally); /// auto myProf1 = myDf.Profile2D({""profName"", ""profTitle"", 40, -4, 4, 40, -4, 4, 0, 20},; /// ""xValues"", ""yValues"", ""zValues"");; /// // Explicit column types; /// auto myProf2 = myDf.Profile2D<int, float, double>({""profName"", ""profTitle"", 40, -4, 4, 40, -4, 4, 0, 20},; /// ""xValues"", ""yValues"", ""zValues"");; /// ~~~; ///; /// \note Differently from other ROOT interfaces, the returned profile is not associated to gDirectory; /// and the caller is responsible for its lifetime (in particular, a typical source of confusion is that; /// if result histograms go out of scope before the end of the program, ROOT might display a blank canvas).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RDF/RInterface.hxx:810,wrap,wrapped,810,tree/dataframe/inc/ROOT/RDF/RInterface.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RDF/RInterface.hxx,2,"['interface', 'wrap']","['interfaces', 'wrapped']"
Integrability,"////////////////////////////////////////////////////////////////////////////; /// \brief Fill and return a two-dimensional profile (*lazy action*).; /// \tparam V1 The type of the column used to fill the x axis of the histogram. Inferred if not present.; /// \tparam V2 The type of the column used to fill the y axis of the histogram. Inferred if not present.; /// \tparam V3 The type of the column used to fill the z axis of the histogram. Inferred if not present.; /// \tparam W The type of the column used for the weights of the histogram. Inferred if not present.; /// \param[in] model The returned histogram will be constructed using this as a model.; /// \param[in] v1Name The name of the column that will fill the x axis.; /// \param[in] v2Name The name of the column that will fill the y axis.; /// \param[in] v3Name The name of the column that will fill the z axis.; /// \param[in] wName The name of the column that will provide the weights.; /// \return the bidimensional profile wrapped in a RResultPtr.; ///; /// This action is *lazy*: upon invocation of this method the calculation is; /// booked but not executed. Also see RResultPtr.; ///; /// ### Example usage:; /// ~~~{.cpp}; /// // Deduce column types (this invocation needs jitting internally); /// auto myProf1 = myDf.Profile2D({""profName"", ""profTitle"", 40, -4, 4, 40, -4, 4, 0, 20},; /// ""xValues"", ""yValues"", ""zValues"", ""weight"");; /// // Explicit column types; /// auto myProf2 = myDf.Profile2D<int, float, double, int>({""profName"", ""profTitle"", 40, -4, 4, 40, -4, 4, 0, 20},; /// ""xValues"", ""yValues"", ""zValues"", ""weight"");; /// ~~~; ///; /// See the first Profile2D() overload for more details.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RDF/RInterface.hxx:990,wrap,wrapped,990,tree/dataframe/inc/ROOT/RDF/RInterface.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RDF/RInterface.hxx,1,['wrap'],['wrapped']
Integrability,"////////////////////////////////////////////////////////////////////////////; /// \brief Fill and return a weighted two-dimensional histogram (*lazy action*).; /// \tparam V1 The type of the column used to fill the x axis of the histogram.; /// \tparam V2 The type of the column used to fill the y axis of the histogram.; /// \tparam W The type of the column used for the weights of the histogram.; /// \param[in] model The returned histogram will be constructed using this as a model.; /// \param[in] v1Name The name of the column that will fill the x axis.; /// \param[in] v2Name The name of the column that will fill the y axis.; /// \param[in] wName The name of the column that will provide the weights.; /// \return the bidimensional histogram wrapped in a RResultPtr.; ///; /// This action is *lazy*: upon invocation of this method the calculation is; /// booked but not executed. Also see RResultPtr.; ///; /// ### Example usage:; /// ~~~{.cpp}; /// // Deduce column types (this invocation needs jitting internally); /// auto myHist1 = myDf.Histo2D({""histName"", ""histTitle"", 64u, 0., 128., 32u, -4., 4.}, ""myValueX"", ""myValueY"", ""myWeight"");; /// // Explicit column types; /// auto myHist2 = myDf.Histo2D<float, float, double>({""histName"", ""histTitle"", 64u, 0., 128., 32u, -4., 4.}, ""myValueX"", ""myValueY"", ""myWeight"");; /// ~~~; ///; /// See the documentation of the first Histo2D() overload for more details.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RDF/RInterface.hxx:749,wrap,wrapped,749,tree/dataframe/inc/ROOT/RDF/RInterface.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RDF/RInterface.hxx,1,['wrap'],['wrapped']
Integrability,"////////////////////////////////////////////////////////////////////////////; /// \brief Fill and return an N-dimensional histogram (*lazy action*).; /// \param[in] model The returned histogram will be constructed using this as a model.; /// \param[in] columnList A list containing the names of the columns that will be passed when calling `Fill`; /// (N columns for unweighted filling, or N+1 columns for weighted filling); /// \return the N-dimensional histogram wrapped in a RResultPtr.; ///; /// This action is *lazy*: upon invocation of this method the calculation is; /// booked but not executed. Also see RResultPtr.; ///; /// ### Example usage:; /// ~~~{.cpp}; /// auto myFilledObj = myDf.HistoND({""name"",""title"", 4,; /// {40,40,40,40}, {20.,20.,20.,20.}, {60.,60.,60.,60.}},; /// {""col0"", ""col1"", ""col2"", ""col3""});; /// ~~~; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RDF/RInterface.hxx:465,wrap,wrapped,465,tree/dataframe/inc/ROOT/RDF/RInterface.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RDF/RInterface.hxx,1,['wrap'],['wrapped']
Integrability,"////////////////////////////////////////////////////////////////////////////; /// \brief Fill and return an N-dimensional histogram (*lazy action*).; /// \tparam FirstColumn The first type of the column the values of which are used to fill the object. Inferred if not; /// present.; /// \tparam OtherColumns A list of the other types of the columns the values of which are used to fill the; /// object.; /// \param[in] model The returned histogram will be constructed using this as a model.; /// \param[in] columnList; /// A list containing the names of the columns that will be passed when calling `Fill`.; /// (N columns for unweighted filling, or N+1 columns for weighted filling); /// \return the N-dimensional histogram wrapped in a RResultPtr.; ///; /// This action is *lazy*: upon invocation of this method the calculation is; /// booked but not executed. See RResultPtr documentation.; ///; /// ### Example usage:; /// ~~~{.cpp}; /// auto myFilledObj = myDf.HistoND<float, float, float, float>({""name"",""title"", 4,; /// {40,40,40,40}, {20.,20.,20.,20.}, {60.,60.,60.,60.}},; /// {""col0"", ""col1"", ""col2"", ""col3""});; /// ~~~; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RDF/RInterface.hxx:725,wrap,wrapped,725,tree/dataframe/inc/ROOT/RDF/RInterface.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RDF/RInterface.hxx,1,['wrap'],['wrapped']
Integrability,"////////////////////////////////////////////////////////////////////////////; /// \brief Get the names of all variations that directly or indirectly affect a given column.; ///; /// This list includes variations applied to the column as well as variations applied to other; /// columns on which the value of this column depends (typically via a Define expression).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDFColumnRegister.cxx:320,depend,depends,320,tree/dataframe/src/RDFColumnRegister.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDFColumnRegister.cxx,1,['depend'],['depends']
Integrability,"////////////////////////////////////////////////////////////////////////////; /// \brief Get the names of all variations that directly or indirectly affect the specified columns.; ///; /// This list includes variations applied to the columns as well as variations applied to other; /// columns on which the value of any of these columns depend (typically via Define expressions).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDFColumnRegister.cxx:337,depend,depend,337,tree/dataframe/src/RDFColumnRegister.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDFColumnRegister.cxx,1,['depend'],['depend']
Integrability,"////////////////////////////////////////////////////////////////////////////; /// \brief Install the ROOT message handler which will turn ROOT error; /// messages into Python exceptions.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/src/RPyROOTApplication.cxx:106,message,message,106,bindings/pyroot/pythonizations/src/RPyROOTApplication.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/src/RPyROOTApplication.cxx,2,['message'],"['message', 'messages']"
Integrability,"////////////////////////////////////////////////////////////////////////////; /// \brief Provides a representation of the columns in the dataset.; /// \param[in] columnList Names of the columns to be displayed.; /// \param[in] nRows Number of events for each column to be displayed.; /// \param[in] nMaxCollectionElements Maximum number of collection elements to display per row.; /// \return the `RDisplay` instance wrapped in a RResultPtr.; ///; /// This overload automatically infers the column types.; /// See the previous overloads for further details.; ///; /// Invoked when no types are specified to Display",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RDF/RInterface.hxx:417,wrap,wrapped,417,tree/dataframe/inc/ROOT/RDF/RInterface.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RDF/RInterface.hxx,1,['wrap'],['wrapped']
Integrability,"////////////////////////////////////////////////////////////////////////////; /// \brief Provides a representation of the columns in the dataset.; /// \param[in] columnList Names of the columns to be displayed.; /// \param[in] nRows Number of events for each column to be displayed.; /// \param[in] nMaxCollectionElements Number of maximum elements in collection.; /// \return the `RDisplay` instance wrapped in a RResultPtr.; ///; /// See the previous overloads for further details.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RDF/RInterface.hxx:401,wrap,wrapped,401,tree/dataframe/inc/ROOT/RDF/RInterface.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RDF/RInterface.hxx,1,['wrap'],['wrapped']
Integrability,"////////////////////////////////////////////////////////////////////////////; /// \brief Provides a representation of the columns in the dataset.; /// \param[in] columnNameRegexp A regular expression to select the columns.; /// \param[in] nRows Number of events for each column to be displayed.; /// \param[in] nMaxCollectionElements Maximum number of collection elements to display per row.; /// \return the `RDisplay` instance wrapped in a RResultPtr.; ///; /// The existing columns are matched against the regular expression. If the string provided; /// is empty, all columns are selected.; /// See the previous overloads for further details.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RDF/RInterface.hxx:429,wrap,wrapped,429,tree/dataframe/inc/ROOT/RDF/RInterface.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RDF/RInterface.hxx,1,['wrap'],['wrapped']
Integrability,"////////////////////////////////////////////////////////////////////////////; /// \brief Provides a representation of the columns in the dataset.; /// \tparam ColumnTypes variadic list of branch/column types.; /// \param[in] columnList Names of the columns to be displayed.; /// \param[in] nRows Number of events for each column to be displayed.; /// \param[in] nMaxCollectionElements Maximum number of collection elements to display per row.; /// \return the `RDisplay` instance wrapped in a RResultPtr.; ///; /// This function returns a `RResultPtr<RDisplay>` containing all the entries to be displayed, organized in a tabular; /// form. RDisplay will either print on the standard output a summarized version through `RDisplay::Print()` or will; /// return a complete version through `RDisplay::AsString()`.; ///; /// This action is *lazy*: upon invocation of this method the calculation is booked but not executed. Also see; /// RResultPtr.; ///; /// Example usage:; /// ~~~{.cpp}; /// // Preparing the RResultPtr<RDisplay> object with all columns and default number of entries; /// auto d1 = rdf.Display("""");; /// // Preparing the RResultPtr<RDisplay> object with two columns and 128 entries; /// auto d2 = d.Display({""x"", ""y""}, 128);; /// // Printing the short representations, the event loop will run; /// d1->Print();; /// d2->Print();; /// ~~~",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RDF/RInterface.hxx:480,wrap,wrapped,480,tree/dataframe/inc/ROOT/RDF/RInterface.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RDF/RInterface.hxx,1,['wrap'],['wrapped']
Integrability,"////////////////////////////////////////////////////////////////////////////; /// \brief Return a TStatistic object, filled once per event (*lazy action*).; ///; /// \tparam V The type of the value column; /// \param[in] value The name of the column with the values to fill the statistics with.; /// \return the filled TStatistic object wrapped in a RResultPtr.; ///; /// ### Example usage:; /// ~~~{.cpp}; /// // Deduce column type (this invocation needs jitting internally); /// auto stats0 = myDf.Stats(""values"");; /// // Explicit column type; /// auto stats1 = myDf.Stats<float>(""values"");; /// ~~~; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RDF/RInterface.hxx:337,wrap,wrapped,337,tree/dataframe/inc/ROOT/RDF/RInterface.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RDF/RInterface.hxx,1,['wrap'],['wrapped']
Integrability,"////////////////////////////////////////////////////////////////////////////; /// \brief Return a TStatistic object, filled once per event (*lazy action*).; ///; /// \tparam V The type of the value column; /// \tparam W The type of the weight column; /// \param[in] value The name of the column with the values to fill the statistics with.; /// \param[in] weight The name of the column with the weights to fill the statistics with.; /// \return the filled TStatistic object wrapped in a RResultPtr.; ///; /// ### Example usage:; /// ~~~{.cpp}; /// // Deduce column types (this invocation needs jitting internally); /// auto stats0 = myDf.Stats(""values"", ""weights"");; /// // Explicit column types; /// auto stats1 = myDf.Stats<int, float>(""values"", ""weights"");; /// ~~~; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RDF/RInterface.hxx:474,wrap,wrapped,474,tree/dataframe/inc/ROOT/RDF/RInterface.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RDF/RInterface.hxx,1,['wrap'],['wrapped']
Integrability,"////////////////////////////////////////////////////////////////////////////; /// \brief Return a collection of values of a column (*lazy action*, returns a std::vector by default).; /// \tparam T The type of the column.; /// \tparam COLL The type of collection used to store the values.; /// \param[in] column The name of the column to collect the values of.; /// \return the content of the selected column wrapped in a RResultPtr.; ///; /// The collection type to be specified for C-style array columns is `RVec<T>`:; /// in this case the returned collection is a `std::vector<RVec<T>>`.; /// ### Example usage:; /// ~~~{.cpp}; /// // In this case intCol is a std::vector<int>; /// auto intCol = rdf.Take<int>(""integerColumn"");; /// // Same content as above but in this case taken as a RVec<int>; /// auto intColAsRVec = rdf.Take<int, RVec<int>>(""integerColumn"");; /// // In this case intCol is a std::vector<RVec<int>>, a collection of collections; /// auto cArrayIntCol = rdf.Take<RVec<int>>(""cArrayInt"");; /// ~~~; /// This action is *lazy*: upon invocation of this method the calculation is; /// booked but not executed. Also see RResultPtr.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RDF/RInterface.hxx:408,wrap,wrapped,408,tree/dataframe/inc/ROOT/RDF/RInterface.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RDF/RInterface.hxx,1,['wrap'],['wrapped']
Integrability,"////////////////////////////////////////////////////////////////////////////; /// \brief Return the maximum of processed column values (*lazy action*).; /// \tparam T The type of the branch/column.; /// \param[in] columnName The name of the branch/column to be treated.; /// \return the maximum value of the selected column wrapped in a RResultPtr.; ///; /// If T is not specified, RDataFrame will infer it from the data and just-in-time compile the correct; /// template specialization of this method.; /// If the type of the column is inferred, the return type is `double`, the type of the column otherwise.; ///; /// This action is *lazy*: upon invocation of this method the calculation is; /// booked but not executed. Also see RResultPtr.; ///; /// ### Example usage:; /// ~~~{.cpp}; /// // Deduce column type (this invocation needs jitting internally); /// auto maxVal0 = myDf.Max(""values"");; /// // Explicit column type; /// auto maxVal1 = myDf.Max<double>(""values"");; /// ~~~; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RDF/RInterface.hxx:324,wrap,wrapped,324,tree/dataframe/inc/ROOT/RDF/RInterface.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RDF/RInterface.hxx,1,['wrap'],['wrapped']
Integrability,"////////////////////////////////////////////////////////////////////////////; /// \brief Return the mean of processed column values (*lazy action*).; /// \tparam T The type of the branch/column.; /// \param[in] columnName The name of the branch/column to be treated.; /// \return the mean value of the selected column wrapped in a RResultPtr.; ///; /// If T is not specified, RDataFrame will infer it from the data and just-in-time compile the correct; /// template specialization of this method.; ///; /// This action is *lazy*: upon invocation of this method the calculation is; /// booked but not executed. Also see RResultPtr.; ///; /// ### Example usage:; /// ~~~{.cpp}; /// // Deduce column type (this invocation needs jitting internally); /// auto meanVal0 = myDf.Mean(""values"");; /// // Explicit column type; /// auto meanVal1 = myDf.Mean<double>(""values"");; /// ~~~; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RDF/RInterface.hxx:318,wrap,wrapped,318,tree/dataframe/inc/ROOT/RDF/RInterface.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RDF/RInterface.hxx,1,['wrap'],['wrapped']
Integrability,"////////////////////////////////////////////////////////////////////////////; /// \brief Return the minimum of processed column values (*lazy action*).; /// \tparam T The type of the branch/column.; /// \param[in] columnName The name of the branch/column to be treated.; /// \return the minimum value of the selected column wrapped in a RResultPtr.; ///; /// If T is not specified, RDataFrame will infer it from the data and just-in-time compile the correct; /// template specialization of this method.; /// If the type of the column is inferred, the return type is `double`, the type of the column otherwise.; ///; /// This action is *lazy*: upon invocation of this method the calculation is; /// booked but not executed. Also see RResultPtr.; ///; /// ### Example usage:; /// ~~~{.cpp}; /// // Deduce column type (this invocation needs jitting internally); /// auto minVal0 = myDf.Min(""values"");; /// // Explicit column type; /// auto minVal1 = myDf.Min<double>(""values"");; /// ~~~; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RDF/RInterface.hxx:324,wrap,wrapped,324,tree/dataframe/inc/ROOT/RDF/RInterface.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RDF/RInterface.hxx,1,['wrap'],['wrapped']
Integrability,"////////////////////////////////////////////////////////////////////////////; /// \brief Return the number of entries processed (*lazy action*).; /// \return the number of entries wrapped in a RResultPtr.; ///; /// Useful e.g. for counting the number of entries passing a certain filter (see also `Report`).; /// This action is *lazy*: upon invocation of this method the calculation is; /// booked but not executed. Also see RResultPtr.; ///; /// ### Example usage:; /// ~~~{.cpp}; /// auto nEntriesAfterCuts = myFilteredDf.Count();; /// ~~~; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RDF/RInterface.hxx:180,wrap,wrapped,180,tree/dataframe/inc/ROOT/RDF/RInterface.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RDF/RInterface.hxx,1,['wrap'],['wrapped']
Integrability,"////////////////////////////////////////////////////////////////////////////; /// \brief Return the unbiased standard deviation of processed column values (*lazy action*).; /// \tparam T The type of the branch/column.; /// \param[in] columnName The name of the branch/column to be treated.; /// \return the standard deviation value of the selected column wrapped in a RResultPtr.; ///; /// If T is not specified, RDataFrame will infer it from the data and just-in-time compile the correct; /// template specialization of this method.; ///; /// This action is *lazy*: upon invocation of this method the calculation is; /// booked but not executed. Also see RResultPtr.; ///; /// ### Example usage:; /// ~~~{.cpp}; /// // Deduce column type (this invocation needs jitting internally); /// auto stdDev0 = myDf.StdDev(""values"");; /// // Explicit column type; /// auto stdDev1 = myDf.StdDev<double>(""values"");; /// ~~~; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RDF/RInterface.hxx:355,wrap,wrapped,355,tree/dataframe/inc/ROOT/RDF/RInterface.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RDF/RInterface.hxx,1,['wrap'],['wrapped']
Integrability,"////////////////////////////////////////////////////////////////////////////; /// \brief Save selected columns in memory.; /// \param[in] columnList columns to be cached in memory.; /// \return a `RDataFrame` that wraps the cached dataset.; ///; /// See the previous overloads for more information.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RDF/RInterface.hxx:214,wrap,wraps,214,tree/dataframe/inc/ROOT/RDF/RInterface.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RDF/RInterface.hxx,1,['wrap'],['wraps']
Integrability,"////////////////////////////////////////////////////////////////////////////; /// \brief Save selected columns in memory.; /// \param[in] columnList columns to be cached in memory; /// \return a `RDataFrame` that wraps the cached dataset.; ///; /// See the previous overloads for more information.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RDF/RInterface.hxx:213,wrap,wraps,213,tree/dataframe/inc/ROOT/RDF/RInterface.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RDF/RInterface.hxx,1,['wrap'],['wraps']
Integrability,"////////////////////////////////////////////////////////////////////////////; /// \brief Save selected columns in memory.; /// \param[in] columnNameRegexp The regular expression to match the column names to be selected. The presence of a '^' and a '$' at the end of the string is implicitly assumed if they are not specified. The dialect supported is PCRE via the TPRegexp class. An empty string signals the selection of all columns.; /// \return a `RDataFrame` that wraps the cached dataset.; ///; /// The existing columns are matched against the regular expression. If the string provided; /// is empty, all columns are selected. See the previous overloads for more information.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RDF/RInterface.hxx:467,wrap,wraps,467,tree/dataframe/inc/ROOT/RDF/RInterface.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RDF/RInterface.hxx,1,['wrap'],['wraps']
Integrability,"////////////////////////////////////////////////////////////////////////////; /// \brief Save selected columns to disk, in a new TTree `treename` in file `filename`.; /// \param[in] treename The name of the output TTree.; /// \param[in] filename The name of the output TFile.; /// \param[in] columnList The list of names of the columns/branches to be written.; /// \param[in] options RSnapshotOptions struct with extra options to pass to TFile and TTree.; /// \return a `RDataFrame` that wraps the snapshotted dataset.; ///; /// This function returns a `RDataFrame` built with the output tree as a source.; /// The types of the columns are automatically inferred and do not need to be specified.; ///; /// See above for a more complete description and example usages.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RDF/RInterface.hxx:488,wrap,wraps,488,tree/dataframe/inc/ROOT/RDF/RInterface.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RDF/RInterface.hxx,1,['wrap'],['wraps']
Integrability,"////////////////////////////////////////////////////////////////////////////; /// \brief Save selected columns to disk, in a new TTree `treename` in file `filename`.; /// \tparam ColumnTypes variadic list of branch/column types.; /// \param[in] treename The name of the output TTree.; /// \param[in] filename The name of the output TFile.; /// \param[in] columnList The list of names of the columns/branches to be written.; /// \param[in] options RSnapshotOptions struct with extra options to pass to TFile and TTree.; /// \return a `RDataFrame` that wraps the snapshotted dataset.; ///; /// Support for writing of nested branches is limited (although RDataFrame is able to read them) and dot ('.'); /// characters in input column names will be replaced by underscores ('_') in the branches produced by Snapshot.; /// When writing a variable size array through Snapshot, it is required that the column indicating its size is also; /// written out and it appears before the array in the columnList.; ///; /// By default, in case of TTree or TChain inputs, Snapshot will try to write out all top-level branches. For other; /// types of inputs, all columns returned by GetColumnNames() will be written out. If friend trees or chains are; /// present, by default all friend top-level branches that have names that do not collide with; /// names of branches in the main TTree/TChain will be written out. Since v6.24, Snapshot will also write out; /// friend branches with the same names of branches in the main TTree/TChain with names of the form; /// `<friendname>_<branchname>` in order to differentiate them from the branches in the main tree/chain.; ///; /// ### Writing to a sub-directory; ///; /// Snapshot supports writing the TTree in a sub-directory inside the TFile. It is sufficient to specify the path to; /// the TTree as part of the TTree name, e.g. `df.Snapshot(""subdir/t"", ""f.root"")` write TTree `t` in the; /// sub-directory `subdir` of file `f.root` (creating file and sub-directory as ne",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RDF/RInterface.hxx:551,wrap,wraps,551,tree/dataframe/inc/ROOT/RDF/RInterface.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RDF/RInterface.hxx,1,['wrap'],['wraps']
Integrability,"////////////////////////////////////////////////////////////////////////////; /// \brief Set __reduce__ attribute for CPPInstance objects; /// \param[in] self Always null, since this is a module function.; /// \param[in] args Pointer to a Python tuple object containing the arguments; /// received from Python.; ///; /// The C++ function op_reduce defined above is wrapped in a Python method; /// so that it can be injected in CPPInstance",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/src/CPPInstancePyz.cxx:365,wrap,wrapped,365,bindings/pyroot/pythonizations/src/CPPInstancePyz.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/src/CPPInstancePyz.cxx,2,"['inject', 'wrap']","['injected', 'wrapped']"
Integrability,"////////////////////////////////////////////////////////////////////////////; /// \brief Set a specific IO feature.; /// \param[in] input_bits The specific feature to enable.; ///; /// Sets a feature in the `TIOFeatures` object; emits an Error message if; /// the IO feature is not supported by this version of ROOT.; ///; /// If the feature is supported by ROOT, this function returns true; otherwise,; /// it returns false.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TIOFeatures.cxx:244,message,message,244,tree/tree/src/TIOFeatures.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TIOFeatures.cxx,2,['message'],['message']
Integrability,"///////////////////////////////////////////////////////////////////////////; /// Message handler for the splash screen window.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/Win32Splash.cxx:81,Message,Message,81,core/winnt/src/Win32Splash.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/Win32Splash.cxx,1,['Message'],['Message']
Integrability,"//////////////////////////////////////////////////////////////////////////; // //; // Bswapcpy //; // //; // Initial version: Apr 22, 2000 //; // //; // A set of inline byte swapping routines for arrays. //; // //; // The bswapcpy16() and bswapcpy32() routines are used for packing //; // arrays of basic types into a buffer in a byte swapped order. Use //; // of asm and the `bswap' opcode (available on i486 and up) reduces //; // byte swapping overhead on linux. //; // //; // Use of routines is similar to that of memcpy. //; // //; // ATTENTION: //; // //; // n - is a number of array elements to be copied and byteswapped. //; // (It is not the number of bytes!) //; // //; // Note: It is not safe to call these routines with n == 0. //; // //; // For arrays of short type (2 bytes in size) use bswapcpy16(). //; // For arrays of of 4-byte types (int, float) use bswapcpy32(). //; // //; // //; // Author: Alexandre V. Vaniachine <AVVaniachine@lbl.gov> //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/Bswapcpy.h:183,rout,routines,183,core/base/inc/Bswapcpy.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/Bswapcpy.h,4,['rout'],['routines']
Integrability,"//////////////////////////////////////////////////////////////////////////; // //; // Bytes //; // //; // A set of inline byte handling routines. //; // //; // The set of tobuf() and frombuf() routines take care of packing a //; // basic type value into a buffer in network byte order (i.e. they //; // perform byte swapping when needed). The buffer does not have to //; // start on a machine (long) word boundary. //; // //; // For __GNUC__ on linux on i486 processors and up //; // use the `bswap' opcode provided by the GNU C Library. //; // //; // The set of host2net() and net2host() routines convert a basic type //; // value from host to network byte order and vice versa. On BIG ENDIAN //; // machines this is a no op. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/Bytes.h:136,rout,routines,136,core/base/inc/Bytes.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/Bytes.h,3,['rout'],['routines']
Integrability,"//////////////////////////////////////////////////////////////////////////; // //; // DaemonUtils //; // //; // This file defines wrappers to client utils calls used by server //; // authentication daemons. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/rpdutils/src/DaemonUtils.h:130,wrap,wrappers,130,net/rpdutils/src/DaemonUtils.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/rpdutils/src/DaemonUtils.h,1,['wrap'],['wrappers']
Integrability,"//////////////////////////////////////////////////////////////////////////; // //; // Declarations for regular expression routines. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/Match.h:122,rout,routines,122,core/base/inc/Match.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/Match.h,1,['rout'],['routines']
Integrability,"//////////////////////////////////////////////////////////////////////////; // //; // Error handling routines. //; // //; // This file defines a number of global error handling routines: //; // Warning(), Error(), SysError() and Fatal(). They all take a //; // location string (where the error happened) and a printf style format //; // string plus vararg's. In the end these functions call an //; // errorhanlder function. Initially, a minimal, non thread-safe handler //; // is installed that is supposed to be replaced by the //; // DefaultErrorHandler(), which needs to be implemented and installed //; // by the user of TError. Normally, the default error handler is set //; // during gROOT initialization. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/TError.h:101,rout,routines,101,core/foundation/inc/TError.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/TError.h,2,['rout'],['routines']
Integrability,"//////////////////////////////////////////////////////////////////////////; // //; // IFitterTarget //; // //; // Interface for a fitter ""target"" //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/IFitterTarget.h:114,Interface,Interface,114,tmva/tmva/inc/TMVA/IFitterTarget.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/IFitterTarget.h,1,['Interface'],['Interface']
Integrability,"//////////////////////////////////////////////////////////////////////////; // //; // IMethod //; // //; // Interface for all concrete MVA method implementations //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/IMethod.h:108,Interface,Interface,108,tmva/tmva/inc/TMVA/IMethod.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/IMethod.h,1,['Interface'],['Interface']
Integrability,"//////////////////////////////////////////////////////////////////////////; // //; // MessageTypes //; // //; // System predefined message types. Message types are constants that //; // indicate what kind of message it is. Make sure your own message //; // types don't clash whith the ones defined in this file. ROOT reserves //; // all message ids between 0 - 10000. Make sure your message //; // id < 200000000. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/MessageTypes.h:86,Message,MessageTypes,86,core/base/inc/MessageTypes.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/MessageTypes.h,7,"['Message', 'message']","['Message', 'MessageTypes', 'message']"
Integrability,"//////////////////////////////////////////////////////////////////////////; // //; // MethodCFMlpANN //; // //; // Interface for Clermond-Ferrand artificial neural network //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodCFMlpANN.h:115,Interface,Interface,115,tmva/tmva/inc/TMVA/MethodCFMlpANN.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodCFMlpANN.h,1,['Interface'],['Interface']
Integrability,"//////////////////////////////////////////////////////////////////////////; // //; // MethodTMlpANN //; // //; // Implementation of interface for Root-integrated artificial neural //; // network: TMultiLayerPerceptron //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodTMlpANN.h:132,interface,interface,132,tmva/tmva/inc/TMVA/MethodTMlpANN.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodTMlpANN.h,2,"['integrat', 'interface']","['integrated', 'interface']"
Integrability,"//////////////////////////////////////////////////////////////////////////; // //; // MinuitWrapper //; // //; // Wrapper around MINUIT //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MinuitWrapper.h:114,Wrap,Wrapper,114,tmva/tmva/inc/TMVA/MinuitWrapper.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MinuitWrapper.h,1,['Wrap'],['Wrapper']
Integrability,"//////////////////////////////////////////////////////////////////////////; // //; // Miscellaneous routines for handling numeric values <-> strings //; // //; //////////////////////////////////////////////////////////////////////////; //______________________________________________________________________________",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGNumberEntry.cxx:100,rout,routines,100,gui/gui/src/TGNumberEntry.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGNumberEntry.cxx,1,['rout'],['routines']
Integrability,"//////////////////////////////////////////////////////////////////////////; // //; // PDF //; // //; // PDF wrapper for histograms; uses user-defined spline interpolation //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/PDF.h:108,wrap,wrapper,108,tmva/tmva/inc/TMVA/PDF.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/PDF.h,1,['wrap'],['wrapper']
Integrability,"//////////////////////////////////////////////////////////////////////////; // //; // RRemoteProtocol //; // //; // Protocol and parameters for remote running //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/inc/RRemoteProtocol.h:116,Protocol,Protocol,116,net/net/inc/RRemoteProtocol.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/inc/RRemoteProtocol.h,1,['Protocol'],['Protocol']
Integrability,"//////////////////////////////////////////////////////////////////////////; // //; // Rint //; // //; // Rint is the ROOT Interactive Interface. It allows interactive access //; // to the ROOT system via a C++ interpreter. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/rint/inc/TRint.h:134,Interface,Interface,134,core/rint/inc/TRint.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/rint/inc/TRint.h,1,['Interface'],['Interface']
Integrability,"//////////////////////////////////////////////////////////////////////////; // //; // SeparationBase //; // //; // An interface to calculate the ""SeparationGain"" for different //; // separation criteria used in various training algorithms //; // //; // There are two things: the Separation Index, and the Separation Gain //; // Separation Index: //; // Measure of the ""purity"" of a sample. If all elements (events) in the //; // sample belong to the same class (e.g. signal or background), than the//; // separation index is 0 (meaning 100% purity (or 0% purity as it is //; // symmetric. The index becomes maximal, for perfectly mixed samples //; // eg. purity=50% , N_signal = N_bkg //; // //; // Separation Gain: //; // the measure of how the quality of separation of the sample increases //; // by splitting the sample e.g. into a ""left-node"" and a ""right-node"" //; // (N * Index_parent) - (N_left * Index_left) - (N_right * Index_right) //; // this is then the quality criterion which is optimized for when trying//; // to increase the information in the system (making the best selection //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/SeparationBase.h:118,interface,interface,118,tmva/tmva/inc/TMVA/SeparationBase.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/SeparationBase.h,1,['interface'],['interface']
Integrability,"//////////////////////////////////////////////////////////////////////////; // //; // TASImage //; // //; // Interface to image processing library libAfterImage. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/inc/TASImage.h:109,Interface,Interface,109,graf2d/asimage/inc/TASImage.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/inc/TASImage.h,1,['Interface'],['Interface']
Integrability,"//////////////////////////////////////////////////////////////////////////; // //; // TActivation //; // //; // Interface for TNeuron activation function classes //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/TActivation.h:112,Interface,Interface,112,tmva/tmva/inc/TMVA/TActivation.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/TActivation.h,1,['Interface'],['Interface']
Integrability,"//////////////////////////////////////////////////////////////////////////; // //; // TApplicationImp //; // //; // ABC describing GUI independent application implementation protocol. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/gui/inc/TApplicationImp.h:174,protocol,protocol,174,core/gui/inc/TApplicationImp.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/inc/TApplicationImp.h,1,['protocol'],['protocol']
Integrability,"//////////////////////////////////////////////////////////////////////////; // //; // TBase64 //; // //; // This code implements the Base64 encoding and decoding. //; // Base64 encoded messages are typically used in authentication //; // protocols and to pack binary data in HTTP messages. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/TBase64.h:185,message,messages,185,core/base/inc/TBase64.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/TBase64.h,3,"['message', 'protocol']","['messages', 'protocols']"
Integrability,"//////////////////////////////////////////////////////////////////////////; // //; // TBrowserImp //; // //; // ABC describing GUI independent browser implementation protocol. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/gui/inc/TBrowserImp.h:166,protocol,protocol,166,core/gui/inc/TBrowserImp.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/inc/TBrowserImp.h,1,['protocol'],['protocol']
Integrability,"//////////////////////////////////////////////////////////////////////////; // //; // TClassGenerator //; // //; // Objects following this interface can be passed onto the TROOT object //; // to implement a user customized way to create the TClass objects. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TClassGenerator.h:139,interface,interface,139,core/meta/inc/TClassGenerator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TClassGenerator.h,1,['interface'],['interface']
Integrability,"//////////////////////////////////////////////////////////////////////////; // //; // TCling //; // //; // This class defines an interface to the cling C++ interpreter. //; // //; // Cling is a full ANSI compliant C++ interpreter based on //; // clang/LLVM technology. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.h:129,interface,interface,129,core/metacling/src/TCling.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.h,1,['interface'],['interface']
Integrability,"//////////////////////////////////////////////////////////////////////////; // //; // TClingBaseClassInfo //; // //; // Emulation of the CINT BaseClassInfo class. //; // //; // The CINT C++ interpreter provides an interface to metadata about //; // the base classes of a class through the BaseClassInfo class. This //; // class provides the same functionality, using an interface as close //; // as possible to BaseClassInfo but the base class metadata comes from //; // the Clang C++ compiler, not CINT. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingBaseClassInfo.h:214,interface,interface,214,core/metacling/src/TClingBaseClassInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingBaseClassInfo.h,2,['interface'],['interface']
Integrability,"//////////////////////////////////////////////////////////////////////////; // //; // TClingCallFunc //; // //; // Emulation of the CINT CallFunc class. //; // //; // The CINT C++ interpreter provides an interface for calling //; // functions through the generated wrappers in dictionaries with //; // the CallFunc class. This class provides the same functionality, //; // using an interface as close as possible to CallFunc but the //; // function metadata and calling service comes from the Cling //; // C++ interpreter and the Clang C++ compiler, not CINT. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.h:204,interface,interface,204,core/metacling/src/TClingCallFunc.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.h,3,"['interface', 'wrap']","['interface', 'wrappers']"
Integrability,"//////////////////////////////////////////////////////////////////////////; // //; // TClingClassInfo //; // //; // Emulation of the CINT ClassInfo class. //; // //; // The CINT C++ interpreter provides an interface to metadata about //; // a class through the ClassInfo class. This class provides the same //; // functionality, using an interface as close as possible to ClassInfo //; // but the class metadata comes from the Clang C++ compiler, not CINT. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingClassInfo.h:206,interface,interface,206,core/metacling/src/TClingClassInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingClassInfo.h,2,['interface'],['interface']
Integrability,"//////////////////////////////////////////////////////////////////////////; // //; // TClingDataMemberInfo //; // //; // Emulation of the CINT DataMemberInfo class. //; // //; // The CINT C++ interpreter provides an interface to metadata about //; // the data members of a class through the DataMemberInfo class. This //; // class provides the same functionality, using an interface as close //; // as possible to DataMemberInfo but the data member metadata comes //; // from the Clang C++ compiler, not CINT. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingDataMemberInfo.h:216,interface,interface,216,core/metacling/src/TClingDataMemberInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingDataMemberInfo.h,2,['interface'],['interface']
Integrability,"//////////////////////////////////////////////////////////////////////////; // //; // TClingMethodArgInfo //; // //; // Emulation of the CINT MethodInfo class. //; // //; // The CINT C++ interpreter provides an interface to metadata about //; // the arguments to a function through the MethodArgInfo class. This //; // class provides the same functionality, using an interface as close //; // as possible to MethodArgInfo but the typedef metadata comes from //; // the Clang C++ compiler, not CINT. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingMethodArgInfo.h:211,interface,interface,211,core/metacling/src/TClingMethodArgInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingMethodArgInfo.h,2,['interface'],['interface']
Integrability,"//////////////////////////////////////////////////////////////////////////; // //; // TClingMethodInfo //; // //; // Emulation of the CINT MethodInfo class. //; // //; // The CINT C++ interpreter provides an interface to metadata about //; // a function through the MethodInfo class. This class provides the //; // same functionality, using an interface as close as possible to //; // MethodInfo but the typedef metadata comes from the Clang C++ //; // compiler, not CINT. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingMethodInfo.h:208,interface,interface,208,core/metacling/src/TClingMethodInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingMethodInfo.h,2,['interface'],['interface']
Integrability,"//////////////////////////////////////////////////////////////////////////; // //; // TClingTypeInfo //; // //; // Emulation of the CINT TypeInfo class. //; // //; // The CINT C++ interpreter provides an interface to metadata about //; // a type through the TypeInfo class. This class provides the same //; // functionality, using an interface as close as possible to TypeInfo //; // but the type metadata comes from the Clang C++ compiler, not CINT. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingTypeInfo.h:204,interface,interface,204,core/metacling/src/TClingTypeInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingTypeInfo.h,2,['interface'],['interface']
Integrability,"//////////////////////////////////////////////////////////////////////////; // //; // TClingTypedefInfo //; // //; // Emulation of the CINT TypedefInfo class. //; // //; // The CINT C++ interpreter provides an interface to metadata about //; // a typedef through the TypedefInfo class. This class provides the //; // same functionality, using an interface as close as possible to //; // TypedefInfo but the typedef metadata comes from the Clang C++ //; // compiler, not CINT. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingTypedefInfo.h:210,interface,interface,210,core/metacling/src/TClingTypedefInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingTypedefInfo.h,2,['interface'],['interface']
Integrability,"//////////////////////////////////////////////////////////////////////////; // //; // TConditionImp //; // //; // This class provides an abstract interface to the OS dependent //; // condition classes (TPosixCondition and TWin32Condition). //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/TConditionImp.h:146,interface,interface,146,core/thread/inc/TConditionImp.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/TConditionImp.h,2,"['depend', 'interface']","['dependent', 'interface']"
Integrability,"//////////////////////////////////////////////////////////////////////////; // //; // TCondor //; // //; // Interface to the Condor system. TCondor provides a (partial) API for //; // querying and controlling the Condor system, including experimental //; // extensions like COD (computing on demand) //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/inc/TCondor.h:108,Interface,Interface,108,proof/proof/inc/TCondor.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/inc/TCondor.h,1,['Interface'],['Interface']
Integrability,"//////////////////////////////////////////////////////////////////////////; // //; // TDataMember //; // //; // Dictionary interface for a class data member. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TDataMember.h:123,interface,interface,123,core/meta/inc/TDataMember.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TDataMember.h,1,['interface'],['interface']
Integrability,"//////////////////////////////////////////////////////////////////////////; // //; // TDictionary //; // //; // This class defines an abstract interface that must be implemented //; // by all classes that contain dictionary information. //; // //; // The dictionary is defined by the followling classes: //; // TDataType (typedef definitions) //; // TGlobal (global variables) //; // TFunction (global functions) //; // TClass (classes) //; // TBaseClass (base classes) //; // TDataMember (class datamembers) //; // TMethod (class methods) //; // TMethodArg (method arguments) //; // //; // All the above classes implement the TDictionary abstract interface //; // (note: the indentation shows aggregation not inheritance). //; // The ROOT dictionary system provides a very extensive RTTI //; // environment that facilitates a.o. object inspectors, object I/O, //; // ROOT Trees, etc. Most of the type information is provided by the //; // CINT C++ interpreter. //; // //; // TMethodCall (method call environment) //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TDictionary.h:143,interface,interface,143,core/meta/inc/TDictionary.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TDictionary.h,2,['interface'],['interface']
Integrability,"//////////////////////////////////////////////////////////////////////////; // //; // TFITS //; // //; // Interface to FITS astronomical files. //; // Please, see TFITS.cxx for info about implementation //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/fitsio/inc/TFITS.h:106,Interface,Interface,106,graf2d/fitsio/inc/TFITS.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/fitsio/inc/TFITS.h,1,['Interface'],['Interface']
Integrability,"//////////////////////////////////////////////////////////////////////////; // //; // TFTP //; // //; // This class provides all infrastructure for a performant file //; // transfer protocol. It works in conjuction with the rootd daemon //; // and can use parallel sockets to improve performance over fat pipes. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/inc/TFTP.h:182,protocol,protocol,182,net/net/inc/TFTP.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/inc/TFTP.h,1,['protocol'],['protocol']
Integrability,"//////////////////////////////////////////////////////////////////////////; // //; // TFileStager //; // //; // Abstract base class defining an interface to a stager. //; // //; // To open a connection to a stager use the static method //; // Open(""<stager>""), where <stager> contains a keyword allowing to load //; // the relevant plug-in, e.g. //; // TFileStager::Open(""root://lxb6064.cern.ch"") //; // will load TNetNXGFileStager and initialize it for the redirector at //; // lxb6046.cern.ch . //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/inc/TFileStager.h:144,interface,interface,144,net/net/inc/TFileStager.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/inc/TFileStager.h,1,['interface'],['interface']
Integrability,"//////////////////////////////////////////////////////////////////////////; // //; // TGLCamera //; // //; // Abstract base camera class - concrete classes for orthographic and //; // persepctive cameras derive from it. This class maintains values for //; // the current: //; // i) Viewport //; // ii) Projection, modelview and clip matricies - extracted from GL //; // iii) The 6 frustum planes //; // iv) Expanded frustum interest box //; // //; // It provides methods for various projection, overlap and intersection //; // tests for viewport and world locations, against the true frustum and //; // expanded interest box, and for extracting eye position and direction.//; // //; // It also defines the pure virtual manipulation interface methods the //; // concrete ortho and prespective classes must implement. //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/inc/TGLCamera.h:732,interface,interface,732,graf3d/gl/inc/TGLCamera.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/inc/TGLCamera.h,1,['interface'],['interface']
Integrability,"//////////////////////////////////////////////////////////////////////////; // //; // TGLLine3 //; // //; // 3D space, fixed length, line class, with direction / length 'vector',//; // passing through point 'vertex'. Just wraps a TGLVector3 / TGLVertex3 //; // pair. //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/inc/TGLUtil.h:222,wrap,wraps,222,graf3d/gl/inc/TGLUtil.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/inc/TGLUtil.h,1,['wrap'],['wraps']
Integrability,"//////////////////////////////////////////////////////////////////////////; // //; // TGLOutput //; // //; // Wrapper class for GL capture & output routines //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/inc/TGLOutput.h:110,Wrap,Wrapper,110,graf3d/gl/inc/TGLOutput.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/inc/TGLOutput.h,2,"['Wrap', 'rout']","['Wrapper', 'routines']"
Integrability,"//////////////////////////////////////////////////////////////////////////; // //; // TGLOutput //; // //; // Wrapper class for GLU quadric shape drawing object. Lazy creation of //; // internal GLU raw quadric on first call to TGLQuadric::Get() //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/inc/TGLQuadric.h:110,Wrap,Wrapper,110,graf3d/gl/inc/TGLQuadric.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/inc/TGLQuadric.h,1,['Wrap'],['Wrapper']
Integrability,"//////////////////////////////////////////////////////////////////////////; // //; // TGLUtil //; // //; // Wrapper class for various misc static functions - error checking, //; // draw helpers etc. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/inc/TGLUtil.h:108,Wrap,Wrapper,108,graf3d/gl/inc/TGLUtil.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/inc/TGLUtil.h,1,['Wrap'],['Wrapper']
Integrability,"//////////////////////////////////////////////////////////////////////////; // //; // TGWin32VirtualXProxy //; // //; // This class is the proxy interface to the Win32 graphics system. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/inc/TGWin32VirtualXProxy.h:145,interface,interface,145,graf2d/win32gdk/inc/TGWin32VirtualXProxy.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/inc/TGWin32VirtualXProxy.h,1,['interface'],['interface']
Integrability,"//////////////////////////////////////////////////////////////////////////; // //; // TGeoPainter //; // //; // Painter class utility TGeo geometries. Interfaces visualization //; // queries with the viewers. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/geompainter/inc/TGeoPainter.h:151,Interface,Interfaces,151,geom/geompainter/inc/TGeoPainter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geompainter/inc/TGeoPainter.h,1,['Interface'],['Interfaces']
Integrability,"//////////////////////////////////////////////////////////////////////////; // //; // TGridJob //; // //; // Abstract base class defining interface to a GRID job. //; // //; // Related classes are TGridJobStatus. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/inc/TGridJob.h:138,interface,interface,138,net/net/inc/TGridJob.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/inc/TGridJob.h,1,['interface'],['interface']
Integrability,"//////////////////////////////////////////////////////////////////////////; // //; // TGridResult //; // //; // Abstract base class defining interface to a GRID result. //; // Objects of this class are created by TGrid methods. //; // //; // Related classes are TGrid. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/inc/TGridResult.h:141,interface,interface,141,net/net/inc/TGridResult.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/inc/TGridResult.h,1,['interface'],['interface']
Integrability,"//////////////////////////////////////////////////////////////////////////; // //; // THbookFile //; // //; // ROOT interface to Hbook/PAW files //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hbook/inc/THbookFile.h:116,interface,interface,116,hist/hbook/inc/THbookFile.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hbook/inc/THbookFile.h,1,['interface'],['interface']
Integrability,"//////////////////////////////////////////////////////////////////////////; // //; // THbookTree //; // //; // A wrapper class supporting Hbook ntuples (CWN and RWN). //; // The normal TTree calls can be used, including TTree::Draw(). //; // Data read directly from the Hbook file via THbookFile. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hbook/inc/THbookTree.h:113,wrap,wrapper,113,hist/hbook/inc/THbookTree.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hbook/inc/THbookTree.h,1,['wrap'],['wrapper']
Integrability,"//////////////////////////////////////////////////////////////////////////; // //; // TInetAddress //; // //; // This class represents an Internet Protocol (IP) address. //; // Objects of this class can not be created directly, but only via //; // the TSystem GetHostByName(), GetSockName(), and GetPeerName() //; // members and via members of the TServerSocket and TSocket classes. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/TInetAddress.h:147,Protocol,Protocol,147,core/base/inc/TInetAddress.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/TInetAddress.h,1,['Protocol'],['Protocol']
Integrability,"//////////////////////////////////////////////////////////////////////////; // //; // TInterpreter //; // //; // This class defines an abstract interface to a generic command line //; // interpreter. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TInterpreter.h:144,interface,interface,144,core/meta/inc/TInterpreter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TInterpreter.h,1,['interface'],['interface']
Integrability,"//////////////////////////////////////////////////////////////////////////; // //; // TIter //; // //; // Iterator wrapper. Type of iterator used depends on type of //; // collection. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/TCollection.h:115,wrap,wrapper,115,core/cont/inc/TCollection.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/TCollection.h,2,"['depend', 'wrap']","['depends', 'wrapper']"
Integrability,"//////////////////////////////////////////////////////////////////////////; // //; // TIterator //; // //; // Iterator abstract base class. This base class provides the interface //; // for collection iterators. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/TIterator.h:169,interface,interface,169,core/cont/inc/TIterator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/TIterator.h,1,['interface'],['interface']
Integrability,"//////////////////////////////////////////////////////////////////////////; // //; // TLeaf //; // //; // A TTree object is a list of TBranch. //; // A TBranch object is a list of TLeaf. In most cases, the TBranch //; // will have one TLeaf. //; // A TLeaf describes the branch data types and holds the data. //; // //; // A few notes about the data held by the leaf. It can contain: //; // 1 a single object or primitive (e.g., one float), //; // 2 a fixed-number of objects (e.g., each entry has two floats). //; // The number of elements per entry is saved in `fLen`. //; // 3 a dynamic number of primitives. The number of objects in each //; // entry is saved in the `fLeafCount` branch. //; // //; // Note options (2) and (3) can combined - if fLeafCount says an entry //; // has 3 elements and fLen is 2, then there will be 6 objects in that //; // entry. //; // //; // Additionally, `fNdata` is transient and generated on read to //; // determine the necessary size of a buffer to hold event data; //; // depending on the call-site, it may be sized larger than the number //; // of elements //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/inc/TLeaf.h:1012,depend,depending,1012,tree/tree/inc/TLeaf.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/inc/TLeaf.h,1,['depend'],['depending']
Integrability,"//////////////////////////////////////////////////////////////////////////; // //; // TMD5 //; // //; // This code implements the MD5 message-digest algorithm. //; // The algorithm is due to Ron Rivest. This code was //; // written by Colin Plumb in 1993, no copyright is claimed. //; // This code is in the public domain; do with it what you wish. //; // //; // Equivalent code is available from RSA Data Security, Inc. //; // This code has been tested against that, and is equivalent, //; // except that you don't need to include two pages of legalese //; // with every copy. //; // //; // To compute the message digest of a chunk of bytes, create an //; // TMD5 object, call Update() as needed on buffers full of bytes, and //; // then call Final(), which will, optionally, fill a supplied 16-byte //; // array with the digest. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/TMD5.h:134,message,message-digest,134,core/base/inc/TMD5.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/TMD5.h,2,['message'],"['message', 'message-digest']"
Integrability,"//////////////////////////////////////////////////////////////////////////; // //; // TMatrixTCramerInv //; // //; // Encapsulate templates of Cramer Inversion routines. //; // //; // The 4x4, 5x5 and 6x6 are adapted from routines written by //; // Mark Fischler and Steven Haywood as part of the CLHEP package //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/matrix/inc/TMatrixTCramerInv.h:160,rout,routines,160,math/matrix/inc/TMatrixTCramerInv.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/matrix/inc/TMatrixTCramerInv.h,2,['rout'],['routines']
Integrability,"//////////////////////////////////////////////////////////////////////////; // //; // TMatrixTSymCramerInv //; // //; // Encapsulate templates of Cramer Inversion routines. //; // //; // The 4x4, 5x5 and 6x6 are adapted from routines written by //; // Mark Fischler and Steven Haywood as part of the CLHEP package //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/matrix/inc/TMatrixTSymCramerInv.h:163,rout,routines,163,math/matrix/inc/TMatrixTSymCramerInv.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/matrix/inc/TMatrixTSymCramerInv.h,2,['rout'],['routines']
Integrability,"//////////////////////////////////////////////////////////////////////////; // //; // TMessage //; // //; // Message buffer class used for serializing objects and sending them //; // over the network. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/inc/TMessage.h:109,Message,Message,109,net/net/inc/TMessage.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/inc/TMessage.h,1,['Message'],['Message']
Integrability,"//////////////////////////////////////////////////////////////////////////; // //; // TMessageHandler //; // //; // Handle messages that might be generated by the system. //; // By default a handler only keeps track of the different messages //; // generated for a specific class. By deriving from this class and //; // overriding Notify() one can implement custom message handling. //; // In Notify() one has access to the message id and the object //; // generating the message. One can install more than one message //; // handler per class. A message handler can be removed or again //; // added when needed. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/TMessageHandler.h:123,message,messages,123,core/base/inc/TMessageHandler.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/TMessageHandler.h,7,['message'],"['message', 'messages']"
Integrability,"//////////////////////////////////////////////////////////////////////////; // //; // TMethodArg //; // //; // Dictionary interface for a method argument. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TMethodArg.h:122,interface,interface,122,core/meta/inc/TMethodArg.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TMethodArg.h,1,['interface'],['interface']
Integrability,"//////////////////////////////////////////////////////////////////////////; // //; // TMethodCall //; // //; // Method or function calling interface. Objects of this class contain //; // the (CINT) environment to call a global function or a method for an //; // object of a specific class with the desired arguments. This class is //; // espicially useful when a method has to be called more times for //; // different objects and/or with different arguments. If a function or //; // method needs to be called only once one better uses //; // TInterpreter::Execute(). //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TMethodCall.h:139,interface,interface,139,core/meta/inc/TMethodCall.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TMethodCall.h,1,['interface'],['interface']
Integrability,"//////////////////////////////////////////////////////////////////////////; // //; // TMutexImp //; // //; // This class provides an abstract interface to the OS dependent mutex //; // classes (TPosixMutex and TWin32Mutex). //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/TMutexImp.h:142,interface,interface,142,core/thread/inc/TMutexImp.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/TMutexImp.h,2,"['depend', 'interface']","['dependent', 'interface']"
Integrability,"//////////////////////////////////////////////////////////////////////////; // //; // TMySQLServer //; // //; // MySQL server plugin implementing the TSQLServer interface. //; // //; // To open a connection to a server use the static method Connect(). //; // The db argument of Connect() is of the form: //; // mysql://<host>[:<port>][/<database>], e.g. //; // mysql://pcroot.cern.ch:3456/test //; // //; // As an example of connecting to mysql we assume that the server is //; // running on the local host and that you have access to a database //; // named ""test"" by connecting using an account that has a username and //; // password of ""tuser"" and ""tpass"". You can set up this account //; // by using the ""mysql"" program to connect to the server as the MySQL //; // root user and issuing the following statement: //; // //; // mysql> GRANT ALL ON test.* TO 'tuser'@'localhost' IDENTIFIED BY 'tpass';; // //; // If the test database does not exist, create it with this statement: //; // //; // mysql> CREATE DATABASE test; //; // //; // If you want to use a different server host, username, password, //; // or database name, just substitute the appropriate values. //; // To connect do: //; // //; // TSQLServer *db = TSQLServer::Connect(""mysql://localhost/test"", ""tuser"", ""tpass"");; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/sql/mysql/inc/TMySQLServer.h:161,interface,interface,161,sql/mysql/inc/TMySQLServer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/sql/mysql/inc/TMySQLServer.h,1,['interface'],['interface']
Integrability,"//////////////////////////////////////////////////////////////////////////; // //; // TNeuronInput //; // //; // Interface for TNeuron input calculation classes //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/TNeuronInput.h:113,Interface,Interface,113,tmva/tmva/inc/TMVA/TNeuronInput.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/TNeuronInput.h,1,['Interface'],['Interface']
Integrability,"//////////////////////////////////////////////////////////////////////////; // //; // TPoint //; // //; // TPoint implements a 2D screen (device) point (see also TPoints). //; // //; // Don't add in dictionary since that will add a virtual table pointer //; // and that will destroy the data layout of an array of TPoint's which //; // should match the layout of an array of XPoint's (so no extra copying //; // needs to be done in the X11 drawing routines). //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/TPoint.h:448,rout,routines,448,core/base/inc/TPoint.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/TPoint.h,1,['rout'],['routines']
Integrability,"//////////////////////////////////////////////////////////////////////////; // //; // TPosixCondition //; // //; // This class provides an interface to the posix condition variable //; // routines. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/TPosixCondition.h:139,interface,interface,139,core/thread/inc/TPosixCondition.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/TPosixCondition.h,2,"['interface', 'rout']","['interface', 'routines']"
Integrability,"//////////////////////////////////////////////////////////////////////////; // //; // TPosixMutex //; // //; // This class provides an interface to the posix mutex routines. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/TPosixMutex.h:135,interface,interface,135,core/thread/inc/TPosixMutex.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/TPosixMutex.h,2,"['interface', 'rout']","['interface', 'routines']"
Integrability,"//////////////////////////////////////////////////////////////////////////; // //; // TProof //; // //; // This class controls a Parallel ROOT Facility, PROOF, cluster. //; // It fires the worker servers, it keeps track of how many workers are //; // running, it keeps track of the workers running status, it broadcasts //; // messages to all workers, it collects results, etc. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/inc/TProof.h:327,message,messages,327,proof/proof/inc/TProof.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/inc/TProof.h,1,['message'],['messages']
Integrability,"//////////////////////////////////////////////////////////////////////////; // //; // TProofCondor //; // //; // This class controls a Parallel ROOT Facility, PROOF, cluster. //; // It fires the slave servers, it keeps track of how many slaves are //; // running, it keeps track of the slaves running status, it broadcasts //; // messages to all slaves, it collects results, etc. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/inc/TProofCondor.h:330,message,messages,330,proof/proof/inc/TProofCondor.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/inc/TProofCondor.h,1,['message'],['messages']
Integrability,"//////////////////////////////////////////////////////////////////////////; // //; // TProofLimitsFinder //; // //; // Class to find nice axis limits and synchronize them between workers //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/inc/TProofLimitsFinder.h:154,synchroniz,synchronize,154,proof/proofplayer/inc/TProofLimitsFinder.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/inc/TProofLimitsFinder.h,1,['synchroniz'],['synchronize']
Integrability,"//////////////////////////////////////////////////////////////////////////; // //; // TProofMonSender //; // //; // Provides the interface for PROOF monitoring to different writers. //; // Allows to decouple the information sent from the backend. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/inc/TProofMonSender.h:129,interface,interface,129,proof/proofplayer/inc/TProofMonSender.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/inc/TProofMonSender.h,1,['interface'],['interface']
Integrability,"//////////////////////////////////////////////////////////////////////////; // //; // TProofResourcesStatic //; // //; // Implementation of PROOF static resources. //; // The purpose of this class is to provide a standard interface to //; // static config files. It interprets Proof config files (proof.conf) //; // and sorts the contents into TProofNodeInfo objects. Master info will //; // be placed in fMaster (of type TProofNodeInfo). Submaster info will //; // be put in fSubmasterList (a TList of TProofNodeInfo objects), while //; // workers (and condorworkers) will be placed in fWorkerList (a TList //; // of TProofNodeInfo objects). //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/inc/TProofResourcesStatic.h:222,interface,interface,222,proof/proof/inc/TProofResourcesStatic.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/inc/TProofResourcesStatic.h,1,['interface'],['interface']
Integrability,"//////////////////////////////////////////////////////////////////////////; // //; // TProofServ //; // //; // TProofServ is the PROOF server. It can act either as the master //; // server or as a slave server, depending on its startup arguments. It //; // receives and handles message coming from the client or from the //; // master server. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/inc/TProofServ.h:211,depend,depending,211,proof/proof/inc/TProofServ.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/inc/TProofServ.h,2,"['depend', 'message']","['depending', 'message']"
Integrability,"//////////////////////////////////////////////////////////////////////////; // //; // TProofServLite //; // //; // TProofServLite is the version of the PROOF worker server for local //; // running. The client starts directly the desired number of these //; // workers; the master and daemons are eliminated, optimizing the number//; // of messages exchanged and created / destroyed. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/inc/TProofServLite.h:339,message,messages,339,proof/proof/inc/TProofServLite.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/inc/TProofServLite.h,1,['message'],['messages']
Integrability,"//////////////////////////////////////////////////////////////////////////; // //; // TProofSuperMaster //; // //; // This class controls a Parallel ROOT Facility, PROOF, cluster. //; // It fires the slave servers, it keeps track of how many slaves are //; // running, it keeps track of the slaves running status, it broadcasts //; // messages to all slaves, it collects results, etc. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/inc/TProofSuperMaster.h:335,message,messages,335,proof/proof/inc/TProofSuperMaster.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/inc/TProofSuperMaster.h,1,['message'],['messages']
Integrability,"//////////////////////////////////////////////////////////////////////////; // //; // TRandomGen; // @ingroup Random; // //; // Generic random number generator class which is template on the type //; // of engine. Using this class different random number generator all //; // implementing the TRandom interface can be built. //; // The available random number engine that can be presently used are //; // * ROOT::Math::MixMaxEngine to create random number generators //; // based on the MIXMAX family of generators. Different generators //; // can be created for different state N. //; // * ROOT::MATH::StdEngine to create genersators based on engines //; // provided by the C++ standard libraries; //; // Convenient typedef are defines to define the different types of; // generators. These typedef are; // * TRandomMixMax for the MixMaxEngine<240,0> (MIXMAX with state N=240); // * TRandomMixMax17 for the MixMaxEngine<17,0> (MIXMAX with state N=17); // * TRandomMixMax256 for the MixMaxEngine<256,2> (MIXMAX with state N=256 ); // * TRandomMT64 for the StdEngine<std::mt19937_64> ( MersenneTwister 64 bits); // * TRandomRanlux48 for the StdEngine<std::ranlux48> (Ranlux 48 bits); //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/TRandomGen.h:301,interface,interface,301,math/mathcore/inc/TRandomGen.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/TRandomGen.h,1,['interface'],['interface']
Integrability,"//////////////////////////////////////////////////////////////////////////; // //; // TRemoteObject //; // //; // The TRemoteObject class provides protocol for browsing ROOT objects //; // from a remote ROOT session. //; // It contains information on the real remote object as: //; // - Object Properties (i.e. file stat if the object is a TSystemFile) //; // - Object Name //; // - Class Name //; // - TKey Object Name (if the remote object is a TKey) //; // - TKey Class Name (if the remote object is a TKey) //; // - Remote object address //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/TRemoteObject.h:147,protocol,protocol,147,core/base/inc/TRemoteObject.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/TRemoteObject.h,1,['protocol'],['protocol']
Integrability,"//////////////////////////////////////////////////////////////////////////; // //; // TS3HTTPRequest //; // //; // An object of this class represents an HTTP request extended to be //; // compatible with Amazon's S3 protocol. //; // Specifically, such a request contains an 'Authorization' header with //; // information used by the S3 server for authenticating this request. //; // The authentication information is computed based on a pair of access //; // key and secret key which are both provided to the user by the S3 //; // service provider (e.g. Amazon, Google, etc.). //; // The secret key is used to compute a signature of selected fields in //; // the request. The algorithm for computing the signature is documented //; // in: //; // //; // Google storage: //; // http://code.google.com/apis/storage/docs/reference/v1/developer-guidev1.html#authentication; // //; // Amazon: //; // http://docs.aws.amazon.com/AmazonS3/latest/dev/S3_Authentication2.html; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/inc/TS3HTTPRequest.h:216,protocol,protocol,216,net/net/inc/TS3HTTPRequest.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/inc/TS3HTTPRequest.h,1,['protocol'],['protocol']
Integrability,"//////////////////////////////////////////////////////////////////////////; // //; // TS3WebFile //; // //; // A TS3WebFile is a TWebFile which retrieves the file contents from a //; // web server implementing the REST API of the Amazon S3 protocol. This //; // class is meant to be as generic as possible to be used with files //; // hosted not only by Amazon S3 servers but also by other providers //; // implementing the core of the S3 protocol. //; // //; // The S3 protocol works on top of HTTPS (and HTTP) and imposes that //; // each HTTP request be signed using a specific convention: the request //; // must include an 'Authorization' header which contains the signature //; // of a concatenation of selected request fields. For signing the //; // request, an 'Access Key Id' and a 'Secret Access Key' need to be //; // known. These keys are used by the S3 servers to identify the client //; // and to authenticate the request as genuine. //; // //; // As an end user, you must know the Access Key and Secret Access Key //; // in order to access each S3 file. They are provided to you by your S3 //; // service provider. Those two keys can be provided to ROOT when //; // initializing an object of this class by two means: //; // a) by using the environmental variables S3_ACCESS_KEY and //; // S3_SECRET_KEY, or //; // b) by specifying them as an argument when opening each file. //; // //; // The first method is convenient if all the S3 files you want to //; // access are hosted by a single provider. The second one is more //; // flexible as it allows you to specify which credentials to use //; // on a per-file basis. See the documentation of the constructor of //; // this class for details on the syntax. //; // //; // For generating and signing the HTTP request, this class uses //; // TS3HTTPRequest. //; // //; // For more information on the details of S3 protocol please refer to: //; // ""Amazon Simple Storage Service Developer Guide"": //; // http://docs.amazonwebservices.com/A",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/inc/TS3WebFile.h:240,protocol,protocol,240,net/net/inc/TS3WebFile.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/inc/TS3WebFile.h,3,['protocol'],['protocol']
Integrability,"//////////////////////////////////////////////////////////////////////////; // //; // TSQLResult //; // //; // Abstract base class defining interface to a SQL query result. //; // Objects of this class are created by TSQLServer methods. //; // //; // Related classes are TSQLServer and TSQLRow. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/inc/TSQLResult.h:140,interface,interface,140,net/net/inc/TSQLResult.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/inc/TSQLResult.h,1,['interface'],['interface']
Integrability,"//////////////////////////////////////////////////////////////////////////; // //; // TSQLRow //; // //; // Abstract base class defining interface to a row of a SQL query //; // result. Objects of this class are created by TSQLResult methods. //; // //; // Related classes are TSQLServer and TSQLResult. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/inc/TSQLRow.h:137,interface,interface,137,net/net/inc/TSQLRow.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/inc/TSQLRow.h,1,['interface'],['interface']
Integrability,"//////////////////////////////////////////////////////////////////////////; // //; // TSQLServer //; // //; // Abstract base class defining interface to a SQL server. //; // //; // To open a connection to a server use the static method Connect(). //; // The db argument of Connect() is of the form: //; // <dbms>://<host>[:<port>][/<database>], e.g. //; // mysql://pcroot.cern.ch:3456/test, oracle://srv1.cern.ch/main, ... //; // Depending on the <dbms> specified an appropriate plugin library //; // will be loaded which will provide the real interface. //; // //; // Related classes are TSQLStatement, TSQLResult and TSQLRow. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/inc/TSQLServer.h:140,interface,interface,140,net/net/inc/TSQLServer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/inc/TSQLServer.h,3,"['Depend', 'interface']","['Depending', 'interface']"
Integrability,"//////////////////////////////////////////////////////////////////////////; // //; // TSSLSocket //; // //; // A TSocket wrapped in by SSL. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/inc/TSSLSocket.h:121,wrap,wrapped,121,net/net/inc/TSSLSocket.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/inc/TSSLSocket.h,1,['wrap'],['wrapped']
Integrability,"//////////////////////////////////////////////////////////////////////////; // //; // TSemaphore //; // //; // This class implements a counting semaphore. Use a semaphore //; // to synchronize threads. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/TSemaphore.h:181,synchroniz,synchronize,181,core/thread/inc/TSemaphore.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/TSemaphore.h,1,['synchroniz'],['synchronize']
Integrability,"//////////////////////////////////////////////////////////////////////////; // //; // TStatus //; // //; // This class holds the status of a ongoing operation and collects //; // error messages. It provides a Merge() operation allowing it to //; // be used in PROOF to monitor status in the slaves. //; // No messages indicates success. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/inc/TStatus.h:185,message,messages,185,proof/proofplayer/inc/TStatus.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/inc/TStatus.h,2,['message'],['messages']
Integrability,"//////////////////////////////////////////////////////////////////////////; // //; // TThreadCleaner //; // //; //////////////////////////////////////////////////////////////////////////; ////////////////////////////////////////////////////////////////////////////////; /// Call user clean up routines.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TThread.cxx:293,rout,routines,293,core/thread/src/TThread.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TThread.cxx,1,['rout'],['routines']
Integrability,"//////////////////////////////////////////////////////////////////////////; // //; // TThreadPoolTask //; // This is a supporting class for TThreadPool. //; // It wraps users task objects in order to pass tasks arguments in //; // type-safe way. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/TThreadPool.h:163,wrap,wraps,163,core/thread/inc/TThreadPool.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/TThreadPool.h,1,['wrap'],['wraps']
Integrability,"//////////////////////////////////////////////////////////////////////////; // //; // TTreeReaderGenerator //; // //; // Generate a Selector using the TTreeReader interface //; // (TTreeReaderValue, TTreeReaderArray) to access the data in the tree. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreeReaderGenerator.h:163,interface,interface,163,tree/treeplayer/inc/TTreeReaderGenerator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreeReaderGenerator.h,1,['interface'],['interface']
Integrability,"//////////////////////////////////////////////////////////////////////////; // //; // TTreeResult //; // //; // Class defining interface to a TTree query result with the same //; // interface as for SQL databases. A TTreeResult is returned by //; // TTree::Query() (actually TTreePlayer::Query()). //; // //; // Related classes are TTreeRow. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/inc/TTreeResult.h:127,interface,interface,127,tree/tree/inc/TTreeResult.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/inc/TTreeResult.h,2,['interface'],['interface']
Integrability,"//////////////////////////////////////////////////////////////////////////; // //; // TTreeRow //; // //; // Class defining interface to a row of a TTree query result. //; // Objects of this class are created by TTreeResult methods. //; // //; // Related classes are TTreeResult. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/inc/TTreeRow.h:124,interface,interface,124,tree/tree/inc/TTreeRow.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/inc/TTreeRow.h,1,['interface'],['interface']
Integrability,"//////////////////////////////////////////////////////////////////////////; // //; // TUnixSystem //; // //; // Class providing an interface to the UNIX Operating System. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/unix/inc/TUnixSystem.h:131,interface,interface,131,core/unix/inc/TUnixSystem.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/unix/inc/TUnixSystem.h,1,['interface'],['interface']
Integrability,"//////////////////////////////////////////////////////////////////////////; // //; // TViewerX3D //; // //; // C++ interface to the X3D viewer //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/x3d/inc/TViewerX3D.h:115,interface,interface,115,graf3d/x3d/inc/TViewerX3D.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/x3d/inc/TViewerX3D.h,2,['interface'],['interface']
Integrability,"//////////////////////////////////////////////////////////////////////////; // //; // TVirtualAuth //; // //; // Abstract interface for client authentication code. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/TVirtualAuth.h:122,interface,interface,122,core/base/inc/TVirtualAuth.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/TVirtualAuth.h,1,['interface'],['interface']
Integrability,"//////////////////////////////////////////////////////////////////////////; // //; // TVirtualCollectionProxy //; // //; // Virtual interface of a proxy object for a collection class //; // In particular this is used to implement splitting, emulation, //; // and TTreeFormula access to STL containers. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/TVirtualCollectionProxy.h:132,interface,interface,132,core/cont/inc/TVirtualCollectionProxy.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/TVirtualCollectionProxy.h,1,['interface'],['interface']
Integrability,"//////////////////////////////////////////////////////////////////////////; // //; // TVirtualGL //; // //; // The TVirtualGL class is an abstract base class defining the //; // OpenGL interface protocol. All interactions with OpenGL should be //; // done via the global pointer gVirtualGL. If the OpenGL library is //; // available this pointer is pointing to an instance of the TGLKernel //; // class which provides the actual interface to OpenGL. Using this //; // scheme of ABC we can use OpenGL in other parts of the framework //; // without having to link with the OpenGL library in case we don't //; // use the classes using OpenGL. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/TVirtualGL.h:185,interface,interface,185,core/base/inc/TVirtualGL.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/TVirtualGL.h,3,"['interface', 'protocol']","['interface', 'protocol']"
Integrability,"//////////////////////////////////////////////////////////////////////////; // //; // TVirtualIndex //; // //; // Abstract interface for Tree Index //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/inc/TVirtualIndex.h:123,interface,interface,123,tree/tree/inc/TVirtualIndex.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/inc/TVirtualIndex.h,1,['interface'],['interface']
Integrability,"//////////////////////////////////////////////////////////////////////////; // //; // TVirtualMutex //; // //; // This class implements a mutex interface. The actual work is done via //; // TMutex which is available as soon as the thread library is loaded. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/TVirtualMutex.h:144,interface,interface,144,core/base/inc/TVirtualMutex.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/TVirtualMutex.h,1,['interface'],['interface']
Integrability,"//////////////////////////////////////////////////////////////////////////; // //; // TVirtualPerfStats //; // //; // Provides the interface for the PROOF internal performance measurment //; // and event tracing. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/TVirtualPerfStats.h:131,interface,interface,131,core/base/inc/TVirtualPerfStats.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/TVirtualPerfStats.h,1,['interface'],['interface']
Integrability,"//////////////////////////////////////////////////////////////////////////; // //; // TVirtualProofPlayer //; // //; // Abstract interface for the PROOF player. //; // See the concrete implementations under 'proofplayer' for details. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/inc/TVirtualProofPlayer.h:129,interface,interface,129,proof/proof/inc/TVirtualProofPlayer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/inc/TVirtualProofPlayer.h,1,['interface'],['interface']
Integrability,"//////////////////////////////////////////////////////////////////////////; // //; // TVirtualStreamerInfo Abstract Interface class //; // //; // Abstract Interface describing Streamer information for one class. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TVirtualStreamerInfo.h:116,Interface,Interface,116,core/meta/inc/TVirtualStreamerInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TVirtualStreamerInfo.h,2,['Interface'],['Interface']
Integrability,"//////////////////////////////////////////////////////////////////////////; // //; // TVirtualX //; // //; // Semi-Abstract base class defining a generic interface to the //; // underlying, low level, graphics system (X11, Win32, MacOS). //; // An instance of TVirtualX itself defines a batch interface to the //; // graphics system. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/TVirtualX.h:154,interface,interface,154,core/base/inc/TVirtualX.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/TVirtualX.h,2,['interface'],['interface']
Integrability,"//////////////////////////////////////////////////////////////////////////; // //; // TWin32Condition //; // //; // This class provides an interface to the win32 condition variable //; // routines. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/TWin32Condition.h:139,interface,interface,139,core/thread/inc/TWin32Condition.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/TWin32Condition.h,2,"['interface', 'rout']","['interface', 'routines']"
Integrability,"//////////////////////////////////////////////////////////////////////////; // //; // TWin32Mutex //; // //; // This class provides an interface to the Win32 mutex routines. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/TWin32Mutex.h:135,interface,interface,135,core/thread/inc/TWin32Mutex.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/TWin32Mutex.h,2,"['interface', 'rout']","['interface', 'routines']"
Integrability,"//////////////////////////////////////////////////////////////////////////; // //; // TWinNTSystem //; // //; // Class providing an interface to the Windows NT Operating System. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/winnt/inc/TWinNTSystem.h:132,interface,interface,132,core/winnt/inc/TWinNTSystem.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/winnt/inc/TWinNTSystem.h,1,['interface'],['interface']
Integrability,"//////////////////////////////////////////////////////////////////////////; // //; // Tools (namespace) //; // //; // Global auxiliary applications and data treatment routines //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/Tools.h:167,rout,routines,167,tmva/tmva/inc/TMVA/Tools.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/Tools.h,1,['rout'],['routines']
Integrability,"//////////////////////////////////////////////////////////////////////////; /// An std::pair that wraps the code and optional object contained in a message.; /// \param first message code; /// \param second a smart pointer to a TBufferFile that contains the message object\n; /// The smart pointer is null if the message does not contain an object; /// but only consists of a code. See MPRecv() description on how to; /// retrieve the object from the TBufferFile.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/MPSendRecv.h:98,wrap,wraps,98,core/multiproc/inc/MPSendRecv.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/MPSendRecv.h,5,"['message', 'wrap']","['message', 'wraps']"
Integrability,"//////////////////////////////////////////////////////////////////////////; /// Assert that presumedLocalReadersCount really matches the local read count.; /// Print an error message if not.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TReentrantRWLock.cxx:175,message,message,175,core/thread/src/TReentrantRWLock.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TReentrantRWLock.cxx,1,['message'],['message']
Integrability,"//////////////////////////////////////////////////////////////////////////; /// Handle a message with an EMPCode.; /// This method is called upon receiving a message with a code >= 1000 (i.e.; /// EMPCode). It handles the most generic types of messages.\n; /// Classes inheriting from TMPWorker should implement their own HandleInput; /// function, that should be able to handle codes specific to that application.\n; /// The appropriate version of the HandleInput method (TMPWorker's or the; /// overriding version) is automatically called depending on the message code.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/TMPWorker.cxx:89,message,message,89,core/multiproc/src/TMPWorker.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/TMPWorker.cxx,5,"['depend', 'message']","['depending', 'message', 'messages']"
Integrability,"//////////////////////////////////////////////////////////////////////////; /// Handle message and reply to the worker",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/ROOT/TProcessExecutor.hxx:87,message,message,87,core/multiproc/inc/ROOT/TProcessExecutor.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/ROOT/TProcessExecutor.hxx,2,['message'],['message']
Integrability,"//////////////////////////////////////////////////////////////////////////; /// Handle messages containing an EMPCode.; /// This method should be called upon receiving a message with a code >= 1000; /// (i.e. EMPCode). It handles the most generic types of messages.\n; /// Classes inheriting from TMPClient should implement a similar method; /// to handle message codes specific to the application they're part of.\n; /// \param msg the MPCodeBufPair returned by a MPRecv call; /// \param s; /// \parblock; /// a pointer to the socket from which the message has been received is passed.; /// This way HandleMPCode knows which socket to reply on.; /// \endparblock",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/TMPClient.cxx:87,message,messages,87,core/multiproc/src/TMPClient.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/TMPClient.cxx,5,['message'],"['message', 'messages']"
Integrability,"//////////////////////////////////////////////////////////////////////////; /// Listen for messages sent by the workers and call the appropriate handler function.; /// TProcessExecutor::HandlePoolCode is called on messages with a code < 1000 and; /// TMPClient::HandleMPCode is called on messages with a code >= 1000.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/ROOT/TProcessExecutor.hxx:91,message,messages,91,core/multiproc/inc/ROOT/TProcessExecutor.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/ROOT/TProcessExecutor.hxx,3,['message'],['messages']
Integrability,"//////////////////////////////////////////////////////////////////////////; /// Listen for messages sent by the workers and call the appropriate handler function.; /// TTreeProcessorMP::HandlePoolCode is called on messages with a code < 1000 and; /// TMPClient::HandleMPCode is called on messages with a code >= 1000.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/ROOT/TTreeProcessorMP.hxx:91,message,messages,91,tree/treeplayer/inc/ROOT/TTreeProcessorMP.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/ROOT/TTreeProcessorMP.hxx,3,['message'],['messages']
Integrability,"//////////////////////////////////////////////////////////////////////////; /// Receive message from a socket.; /// This standalone function can be used to read a message that; /// has been sent via MPSend(). The smart pointer contained in the returned; /// ::MPCodeBufPair is null if the message does not contain an object,; /// otherwise it points to a TBufferFile.; /// To retrieve the object from the buffer different methods must be used; /// depending on the type of the object to be read:\n; /// * non-pointer built-in types: TBufferFile::operator>> must be used\n; /// * c-strings: TBufferFile::ReadString must be used\n; /// * class types: TBufferFile::ReadObjectAny must be used\n; /// \param s a pointer to a valid TSocket. No validity checks are performed\n; /// \return ::MPCodeBufPair, i.e. an std::pair containing message code and (possibly) object",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/MPSendRecv.cxx:88,message,message,88,core/multiproc/src/MPSendRecv.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/MPSendRecv.cxx,5,"['depend', 'message']","['depending', 'message']"
Integrability,"//////////////////////////////////////////////////////////////////////////; /// Send a message containing code and obj to each worker, up to a; /// maximum number of nMessages workers. See; /// Broadcast(unsigned code, unsigned nMessages) for more informations.; /// \param code the code of the message to send (e.g. EMPCode); /// \param obj the object to send; /// \param nMessages; /// \parblock; /// the maximum number of messages to send.; /// If nMessages == 0, send a message to every worker.; /// \endparblock; /// \return the number of messages successfully sent",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/TMPClient.h:87,message,message,87,core/multiproc/inc/TMPClient.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/TMPClient.h,5,['message'],"['message', 'messages']"
Integrability,"//////////////////////////////////////////////////////////////////////////; /// Send a message with a different object to each server.; /// See TMPClient::Broadcast(unsigned code, const std::vector<T> &args); /// for more informations.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/TMPClient.h:87,message,message,87,core/multiproc/inc/TMPClient.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/TMPClient.h,1,['message'],['message']
Integrability,"//////////////////////////////////////////////////////////////////////////; /// Send a message with a different object to each server.; /// Sockets can either be in an ""active"" or ""non-active"" state. This method; /// activates all the sockets through which the client is connected to the; /// workers, and deactivates them when a message is sent to the corresponding; /// worker. This way the sockets pertaining to workers who have been left; /// idle will be the only ones in the active list; /// (TSocket::GetMonitor()->GetListOfActives()) after execution.; /// \param code the code of the message to send (e.g. EMPCode); /// \param args; /// \parblock; /// a vector containing the different messages to be sent. If the size of; /// the vector is smaller than the number of workers, a message will be; /// sent only to the first args.size() workers. If the size of the args vector; /// is bigger than the number of workers, only the first fNWorkers arguments; /// will be sent.; /// \endparblock; /// \return the number of messages successfully sent",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/TMPClient.h:87,message,message,87,core/multiproc/inc/TMPClient.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/TMPClient.h,6,['message'],"['message', 'messages']"
Integrability,"//////////////////////////////////////////////////////////////////////////; /// Send a message with the specified code on the specified socket.; /// This standalone function can be used to send a code; /// on a given socket. It does not check whether the socket connection is; /// in a valid state. The message code can then be retrieved via MPRecv().\n; /// **Note:** only objects the headers of which have been parsed by; /// cling can be sent by MPSend(). User-defined types can be made available to; /// cling via a call like `gSystem->ProcessLine(""#include \""header.h\"""")`.; /// Pointer types are not supported (with the exception of const char*),; /// but the user can simply dereference the pointer and send the; /// pointed object instead.\n; /// **Note:** for readability, codes should be enumerated as in EMPCode.\n; /// \param s a pointer to a valid TSocket. No validity checks are performed\n; /// \param code the code to be sent; /// \return the number of bytes sent, as per TSocket::SendRaw",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/MPSendRecv.cxx:87,message,message,87,core/multiproc/src/MPSendRecv.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/MPSendRecv.cxx,2,['message'],['message']
Integrability,"//////////////////////////////////////////////////////////////////////////; /// Send a message with the specified code to at most nMessages workers.; /// Sockets can either be in an ""active"" or ""non-active"" state. This method; /// activates all the sockets through which the client is connected to the; /// workers, and deactivates them when a message is sent to the corresponding; /// worker. This way the sockets pertaining to workers who have been left; /// idle will be the only ones in the active list; /// (TSocket::GetMonitor()->GetListOfActives()) after execution.; /// \param code the code to send (e.g. EMPCode); /// \param nMessages; /// \parblock; /// the maximum number of messages to send.; /// If `nMessages == 0 || nMessage > fNWorkers`, send a message to every worker.; /// \endparblock; /// \return the number of messages successfully sent",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/TMPClient.cxx:87,message,message,87,core/multiproc/src/TMPClient.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/TMPClient.cxx,5,['message'],"['message', 'messages']"
Integrability,"//////////////////////////////////////////////////////////////////////////; /// This method forks the ROOT session into fNWorkers children processes.; /// The ROOT sessions spawned in this way will not have graphical; /// capabilities and will not read from standard input, but will be; /// connected to the original (interactive) session through TSockets.; /// The children processes' PIDs are added to the fWorkerPids vector.; /// The parent session can then communicate with the children using the; /// Broadcast and MPSend methods, and receive messages through MPRecv.\n; /// \param server; /// \parblock; /// A pointer to an instance of the class that will take control; /// of the subprocesses after forking. Applications should implement their; /// own class inheriting from TMPWorker. Behaviour can be customized; /// overriding TMPWorker::HandleInput.; /// \endparblock; /// \return true if Fork succeeded, false otherwise",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/TMPClient.cxx:548,message,messages,548,core/multiproc/src/TMPClient.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/TMPClient.cxx,1,['message'],['messages']
Integrability,"//////////////////////////////////////////////////////////////////////////; /// \brief Execute a function without arguments several times.; ///; /// \param func Function to be executed.; /// \param nTimes Number of times function should be called.; /// \return A vector with the results of the function calls.; /// Functions that take arguments can be executed (with; /// fixed arguments) by wrapping them in a lambda or with std::bind.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/ROOT/TExecutorCRTP.hxx:392,wrap,wrapping,392,core/base/inc/ROOT/TExecutorCRTP.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/ROOT/TExecutorCRTP.hxx,1,['wrap'],['wrapping']
Integrability,"//////////////////////////////////////////////////////////////////////////; ///; /// An enumeration of the message codes handled by TProcessExecutor,; /// TTreeProcessorMP, TMPWorker, TMPWorkerTree and by the low level; /// classes TMPClient and TMPWorker.; ///; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/MPCode.h:107,message,message,107,core/multiproc/inc/MPCode.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/MPCode.h,1,['message'],['message']
Integrability,"//////////////////////////////////////////////////////////////////////////; ///; /// WidgetMessageTypes; ///; /// System predefined widget message types. Message types are constants; /// that indicate which widget sent the message and by which widget; /// function (sub-message). Make sure your own message types don't clash; /// with the ones defined in this file. ROOT reserves all message ids; /// between 0 - 1000. User defined messages should be in the range; /// 1001 - 10000. Sub-messages must always be in the range 1-255.; /// To use MK_MSG() just cast your message id's to an EWidgetMessageType.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/inc/WidgetMessageTypes.h:139,message,message,139,gui/gui/inc/WidgetMessageTypes.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/inc/WidgetMessageTypes.h,9,"['Message', 'message']","['Message', 'message', 'messages']"
Integrability,"//////////////////////////////////////////////////////////////////////////; ///; /// \class ROOT::Internal::RTaskArenaWrapper; /// \ingroup Parallelism; /// \brief Wrapper over tbb::task_arena; ///; /// This class is a wrapper over tbb::task_arena, in order to keep; /// TBB away from ROOT's headers. We keep a single global instance to be; /// used by any parallel ROOT class with TBB as a backend.; ///; /// TThreadExecutor, IMT and any class relying on TBB will get a pointer; /// to the scheduler through `ROOT::Internal::GetGlobalTaskArena()`, which; /// will return areference to the only pointer to the TBB scheduler that; /// will be active in any ROOT Process.; ///; /// #### Examples:; /// ~~~{.cpp}; /// root[] auto gTA = ROOT::Internal::GetGlobalTaskArena(nWorkers) //get a shared_ptr to the global arena and initialize; /// //it with nWorkers. Enable thread safety in ROOT; /// root[] gTA->TaskArenaSize() // Get the current size of the arena (number of worker threads); /// root[] gTA->Access() //std::unique_ptr to the internal tbb::task_arena for interacting directly with it (needed to; /// //call operations such as execute); /// root[] gTA->Access().max_concurrency() // call to tbb::task_arena::max_concurrency(); /// ~~~; ///; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/imt/src/RTaskArena.cxx:164,Wrap,Wrapper,164,core/imt/src/RTaskArena.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/src/RTaskArena.cxx,2,"['Wrap', 'wrap']","['Wrapper', 'wrapper']"
Integrability,"//////////////////////////////////////////////////////////////////////////; ///; /// \class ROOT::Internal::TExecutor; /// \brief This class implements the interface to execute the same task; /// multiple times, sequentially or in parallel depending on the execution policy passed; /// as a first parameter on construction, and possibly with different arguments every time.; ///; /// ###ROOT::Internal::TExecutor::Map; /// The two possible usages of the Map method are:\n; /// * `Map(F func, unsigned nTimes)`: func is executed nTimes with no arguments; /// * `Map(F func, T& args)`: func is executed on each element of the collection of arguments args; ///; /// For either signature, func is executed as many times as needed by a pool of; /// n workers; where n tipically defaults to the number of cores.\n; /// A collection containing the result of each execution is returned.\n; /// **Note:** the user is responsible for the deletion of any object that might; /// be created upon execution of func, returned objects included. ROOT::::Internal::TExecutor never; /// deletes what it returns, it simply forgets it.\n; ///; /// \param func; /// \parblock; /// a callable object, such as a lambda expression, an std::function, a; /// functor object or a function that takes zero arguments (for the first signature); /// or one (for the second signature).; /// \endparblock; /// \param args; /// \parblock; /// a standard vector, a ROOT::TSeq of integer type or an initializer list for the second signature.; /// An integer only for the first.\n; /// \endparblock; ///; /// **Note:** in cases where the function to be executed takes more than; /// zero/one argument but all are fixed except zero/one, the function can be wrapped; /// in a lambda or via std::bind to give it the right signature.\n; ///; /// #### Return value:; /// An std::vector. The elements in the container; /// will be the objects returned by func.; ///; /// ### ROOT::Internal::TExecutor::MapReduce; /// This set of methods behaves ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/imt/src/TExecutor.cxx:156,interface,interface,156,core/imt/src/TExecutor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/src/TExecutor.cxx,2,"['depend', 'interface']","['depending', 'interface']"
Integrability,"//////////////////////////////////////////////////////////////////////////; ///; /// \class ROOT::TExecutorCRTP; /// \brief This class defines an interface to execute the same task; /// multiple times, possibly in parallel and with different arguments every; /// time.; ///; /// ###ROOT::TExecutorCRTP<SubC>::Map; /// The two possible usages of the Map method are:\n; /// * `Map(F func, unsigned nTimes)`: func is executed nTimes with no arguments; /// * `Map(F func, T& args)`: func is executed on each element of the collection of arguments args; ///; /// The Map function forwards the call to MapImpl, to be implemented by the child classes.; ///; /// For either signature, func is executed as many times as needed by a pool of; /// n workers, where n typically defaults to the number of available cores.\n; /// A collection containing the result of each execution is returned.\n; /// **Note:** the user is responsible for the deletion of any object that might; /// be created upon execution of func, returned objects included. ROOT::TExecutorCRTP derived classes; /// never delete what they return, they simply forget it.\n; ///; /// \param func; /// \parblock; /// a callable object, such as a lambda expression, an std::function, a; /// functor object or a function that takes zero arguments (for the first signature); /// or one (for the second signature).; /// \endparblock; /// \param args; /// \parblock; /// a standard vector, a ROOT::TSeq of integer type or an initializer list for the second signature.; /// An integer only for the first.\n; /// \endparblock; ///; /// **Note:** in cases where the function to be executed takes more than; /// zero/one argument but all are fixed except zero/one, the function can be wrapped; /// in a lambda or via std::bind to give it the right signature.\n; ///; /// #### Return value:; /// An std::vector. The elements in the container; /// will be the objects returned by func. The ordering of the elements corresponds to the ordering of; /// the argu",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/ROOT/TExecutorCRTP.hxx:146,interface,interface,146,core/base/inc/ROOT/TExecutorCRTP.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/ROOT/TExecutorCRTP.hxx,1,['interface'],['interface']
Integrability,"//////////////////////////////////////////////////////////////////////////; ///; /// \class ROOT::TProcessExecutor; /// \ingroup Parallelism; /// \brief This class provides a simple interface to execute the same task; /// multiple times in parallel, possibly with different arguments every; /// time.; ///; /// ###ROOT::TProcessExecutor::Map; /// This class inherits its interfaces from ROOT::TExecutor\n.; /// The two possible usages of the Map method are:\n; /// * Map(F func, unsigned nTimes): func is executed nTimes with no arguments; /// * Map(F func, T& args): func is executed on each element of the collection of arguments args; ///; /// For either signature, func is executed as many times as needed by a pool of; /// fNWorkers workers; the number of workers can be passed to the constructor; /// or set via SetNWorkers. It typically defaults to the number of cores.\n; /// A collection containing the result of each execution is returned.\n; /// **Note:** the user is responsible for the deletion of any object that might; /// be created upon execution of func, returned objects included: ROOT::TProcessExecutor never; /// deletes what it returns, it simply forgets it.\n; /// **Note:** that the usage of ROOT::TProcessExecutor::Map is indicated only when the task to be; /// executed takes more than a few seconds, otherwise the overhead introduced; /// by Map will outrun the benefits of parallel execution on most machines.; ///; /// \param func; /// \parblock; /// a callable object, such as a lambda expression, an std::function, a; /// functor object or a function that takes zero arguments (for the first signature); /// or one (for the second signature).; /// \endparblock; /// \param args; /// \parblock; /// a standard vector, a ROOT::TSeq of integer type or an initializer list for the second signature.; /// An integer only for the first.; /// \endparblock; /// **Note:** in cases where the function to be executed takes more than; /// zero/one argument but all are fixed except",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/TProcessExecutor.cxx:182,interface,interface,182,core/multiproc/src/TProcessExecutor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/TProcessExecutor.cxx,2,['interface'],"['interface', 'interfaces']"
Integrability,"//////////////////////////////////////////////////////////////////////////; ///; /// \class ROOT::TThreadExecutor; /// \ingroup Parallelism; /// \brief This class provides a simple interface to execute the same task; /// multiple times in parallel threads, possibly with different arguments every; /// time.; ///; /// ### ROOT::TThreadExecutor::Map; /// This class inherits its interfaces from ROOT::TExecutorCRTP\n, adapting them for multithreaded; /// parallelism and extends them supporting:; /// * Parallel `Foreach` operations.; /// * Custom task granularity and partial reduction, by specifying reduction function; /// and the number of chunks as extra parameters for the Map call. This is specially useful; /// to reduce the size of intermediate results when dealing with a sizeable number of elements; /// in the input data.; ///; /// The two possible usages of the Map method are:\n; /// * Map(F func, unsigned nTimes): func is executed nTimes with no arguments; /// * Map(F func, T& args): func is executed on each element of the collection of arguments args; ///; /// For either signature, func is executed as many times as needed by a pool of; /// nThreads threads, where nThreads typically defaults to the number of cores.\n; /// A collection containing the result of each execution is returned.\n; /// **Note:** the user is responsible for the deletion of any object that might; /// be created upon execution of func, returned objects included: ROOT::TThreadExecutor never; /// deletes what it returns, it simply forgets it.\n; ///; /// \param func; /// \parblock; /// a callable object, such as a lambda expression, an std::function, a; /// functor object or a function that takes zero arguments (for the first signature); /// or one (for the second signature).; /// \endparblock; /// \param args; /// \parblock; /// a standard vector, a ROOT::TSeq of integer type or an initializer list for the second signature.; /// An integer only for the first.; /// \endparblock; /// **Note:** in ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/imt/src/TThreadExecutor.cxx:181,interface,interface,181,core/imt/src/TThreadExecutor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/src/TThreadExecutor.cxx,2,['interface'],"['interface', 'interfaces']"
Integrability,"//////////////////////////////////////////////////////////////////////////; ///; /// \class ROOT::TTreeProcessorMP; /// \ingroup Parallelism; /// \brief This class provides an interface to process a TTree dataset; /// in parallel with multi-process technology; ///; /// ###ROOT::TTreeProcessorMP::Process; /// The possible usages of the Process method are the following:\n; /// * `Process(<dataset>, F func, const std::string& treeName, ULong64_t nToProcess)`:; /// func is executed nToProcess times with argument a TTreeReader&, initialized for; /// the TTree with name treeName, from the dataset `<dataset>`. The dataset can be; /// expressed as:; /// \code{.cpp}; /// const std::string& fileName -> single file name; /// const std::vector<std::string>& fileNames -> vector of file names; /// TFileCollection& files -> collection of TFileInfo objects; /// TChain& files -> TChain with the file paths; /// TTree& tree -> Reference to an existing TTree object; /// \endcode; /// For legacy, the following signature is also supported:; /// * `Process(<dataset>, TSelector& selector, const std::string& treeName, ULong64_t nToProcess)`:; /// where selector is a TSelector derived class describing the analysis and the other arguments; /// have the same meaning as above.; ///; /// For either set of signatures, the processing function is executed as many times as; /// needed by a pool of fNWorkers workers; the number of workers can be passed to the constructor; /// or set via SetNWorkers. It defaults to the number of cores.\n; /// A collection containing the result of each execution is returned.\n; /// **Note:** the user is responsible for the deletion of any object that might; /// be created upon execution of func, returned objects included: ROOT::TTreeProcessorMP never; /// deletes what it returns, it simply forgets it.\n; /// **Note:** that the usage of ROOT::TTreeProcessorMP::Process is indicated only when the task to be; /// executed takes more than a few seconds, otherwise the overhea",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeProcessorMP.cxx:176,interface,interface,176,tree/treeplayer/src/TTreeProcessorMP.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeProcessorMP.cxx,1,['interface'],['interface']
Integrability,"//////////////////////////////////////////////////////////////////////////; ///; /// \class TMPClient; ///; /// Base class for multiprocess applications' clients. It provides a; /// simple interface to fork a ROOT session into server/worker sessions; /// and exchange messages with them. Multiprocessing applications can build; /// on TMPClient and TMPWorker: the class providing multiprocess; /// functionalities to users should inherit (possibly privately) from; /// TMPClient, and the workers executing tasks should inherit from TMPWorker.; ///; //////////////////////////////////////////////////////////////////////////; //////////////////////////////////////////////////////////////////////////; /// Class constructor.; /// \param nWorkers; /// \parblock; /// the number of children processes that will be created by; /// Fork, i.e. the number of workers that will be available after this call.; /// The default value (0) means that a number of workers equal to the number; /// of cores of the machine is going to be spawned. If that information is; /// not available, 2 workers are created instead.; /// \endparblock",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/TMPClient.cxx:189,interface,interface,189,core/multiproc/src/TMPClient.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/TMPClient.cxx,2,"['interface', 'message']","['interface', 'messages']"
Integrability,"//////////////////////////////////////////////////////////////////////////; ///; /// \class TMPWorker; ///; /// This class works in conjuction with TMPClient, reacting to messages; /// received from it as specified by the Notify and HandleInput methods.; /// When TMPClient::Fork is called, a TMPWorker instance is passed to it; /// which will take control of the ROOT session in the children processes.; ///; /// After forking, every time a message is sent or broadcast to the workers,; /// TMPWorker::Notify is called and the message is retrieved.; /// Messages exchanged between TMPClient and TMPWorker should be sent with; /// the MPSend() standalone function.\n; /// If the code of the message received is above 1000 (i.e. it is an MPCode); /// the qualified TMPWorker::HandleInput method is called, that takes care; /// of handling the most generic type of messages. Otherwise the unqualified; /// (possibly overridden) version of HandleInput is called, allowing classes; /// that inherit from TMPWorker to manage their own protocol.\n; /// An application's worker class should inherit from TMPWorker and implement; /// a HandleInput method that overrides TMPWorker's.\n; ///; //////////////////////////////////////////////////////////////////////////; //////////////////////////////////////////////////////////////////////////; /// This method is called by children processes right after forking.; /// Initialization of worker properties that must be delayed until after; /// forking must be done here.\n; /// For example, Init saves the pid into fPid, and adds the TMPWorker to; /// the main eventloop (as a TFileHandler).\n; /// Make sure this operations are performed also by overriding implementations,; /// e.g. by calling TMPWorker::Init explicitly.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/TMPWorker.cxx:171,message,messages,171,core/multiproc/src/TMPWorker.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/TMPWorker.cxx,7,"['Message', 'message', 'protocol']","['Messages', 'message', 'messages', 'protocol']"
Integrability,"//////////////////////////////////////////////////////////////////////////; ///; /// \class TMPWorkerExecutor; ///; /// This class works together with TProcessExecutor to allow the execution of; /// functions in server processes. Depending on the exact task that the; /// worker is required to execute, a different version of the class; /// can be called.; ///; /// ### TMPWorkerExecutor<F, T, R>; /// The most general case, used by; /// TProcessExecutor::MapReduce(F func, T& args, R redfunc).; /// This worker is build with:; /// * a function of signature F (the one to be executed); /// * a collection of arguments of type T on which to apply the function; /// * a reduce function with signature R to be used to squash many; /// returned values together.; ///; /// ### Partial specializations; /// A few partial specializations are provided for less general cases:; /// * TMPWorkerExecutor<F, T, void> handles the case of a function that takes; /// one argument and does not perform reduce operations; /// (TProcessExecutor::Map(F func, T& args)).; /// * TMPWorkerExecutor<F, void, R> handles the case of a function that takes; /// no arguments, to be executed a specified amount of times, which; /// returned values are squashed together (reduced); /// (TProcessExecutor::Map(F func, unsigned nTimes, R redfunc)); /// * TMPWorkerExecutor<F, void, void> handles the case of a function that takes; /// no arguments and whose arguments are not ""reduced""; /// (TProcessExecutor::Map(F func, unsigned nTimes)); ///; /// Since all the important data are passed to TMPWorkerExecutor at construction; /// time, the kind of messages that client and workers have to exchange; /// are usually very simple.; ///; //////////////////////////////////////////////////////////////////////////; // Quick guide to TMPWorkerExecutor:; // For each TProcessExecutor::Map and TProcessExecutor::MapReduce signature; // there's a corresponding; // specialization of TMPWorkerExecutor:; // * Map(func, nTimes) --> TMPWorker",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/TMPWorkerExecutor.h:230,Depend,Depending,230,core/multiproc/inc/TMPWorkerExecutor.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/TMPWorkerExecutor.h,1,['Depend'],['Depending']
Integrability,"//////////////////////////////////////////////////////////////////////////; ///; /// \class TMPWorkerTree; ///; /// This class works in conjunction with TTreeProcessorMP, reacting to messages; /// received from it as specified by the Notify and HandleInput methods.; ///; /// \class TMPWorkerTreeFunc; ///; /// Templated derivation of TMPWorkerTree handlign generic function tree processing.; ///; /// \class TMPWorkerTreeSel; ///; /// Templated derivation of TMPWorkerTree handlign selector tree processing.; ///; //////////////////////////////////////////////////////////////////////////; //////////////////////////////////////////////////////////////////////////; /// Class constructors.; /// Note that this does not set variables like fPid or fS (worker's socket).\n; /// These operations are handled by the Init method, which is called after; /// forking.\n; /// This separation is in place because the instantiation of a worker; /// must be done once _before_ forking, while the initialization of the; /// members must be done _after_ forking by each of the children processes.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TMPWorkerTree.cxx:183,message,messages,183,tree/treeplayer/src/TMPWorkerTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TMPWorkerTree.cxx,1,['message'],['messages']
Integrability,"//////////////////////////////////////////////////////////////////////////; //; // TVirtualFFT; //; // TVirtualFFT is an interface class for Fast Fourier Transforms.; //; //; //; // The default FFT library is FFTW. To use it, FFTW3 library should already; // be installed, and ROOT should be have fftw3 module enabled, with the directories; // of fftw3 include file and library specified (see installation instructions).; // Function SetDefaultFFT() allows to change the default library.; //; // Available transform types:; // FFT:; // - ""C2CFORWARD"" - a complex input/output discrete Fourier transform (DFT); // in one or more dimensions, -1 in the exponent; // - ""C2CBACKWARD""- a complex input/output discrete Fourier transform (DFT); // in one or more dimensions, +1 in the exponent; // - ""R2C"" - a real-input/complex-output discrete Fourier transform (DFT); // in one or more dimensions,; // - ""C2R"" - inverse transforms to ""R2C"", taking complex input; // (storing the non-redundant half of a logically Hermitian array); // to real output; // - ""R2HC"" - a real-input DFT with output in ""halfcomplex"" format,; // i.e. real and imaginary parts for a transform of size n stored as; // r0, r1, r2, ..., rn/2, i(n+1)/2-1, ..., i2, i1; // - ""HC2R"" - computes the reverse of FFTW_R2HC, above; // - ""DHT"" - computes a discrete Hartley transform; //; // Sine/cosine transforms:; // Different types of transforms are specified by parameter kind of the SineCosine() static; // function. 4 different kinds of sine and cosine transforms are available; // DCT-I (REDFT00 in FFTW3 notation)- kind=0; // DCT-II (REDFT10 in FFTW3 notation)- kind=1; // DCT-III(REDFT01 in FFTW3 notation)- kind=2; // DCT-IV (REDFT11 in FFTW3 notation)- kind=3; // DST-I (RODFT00 in FFTW3 notation)- kind=4; // DST-II (RODFT10 in FFTW3 notation)- kind=5; // DST-III(RODFT01 in FFTW3 notation)- kind=6; // DST-IV (RODFT11 in FFTW3 notation)- kind=7; // Formulas and detailed descriptions can be found in the chapter; // ""What FFTW rea",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/TVirtualFFT.h:121,interface,interface,121,core/base/inc/TVirtualFFT.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/TVirtualFFT.h,1,['interface'],['interface']
Integrability,"//////////////////////////////////////////////////////////////////////////; //; // The Linear Fitter - fitting functions that are LINEAR IN PARAMETERS; //; // Linear fitter is used to fit a set of data points with a linear; // combination of specified functions. Note, that ""linear"" in the name; // stands only for the model dependency on parameters, the specified; // functions can be nonlinear.; // The general form of this kind of model is; //; // y(x) = a[0] + a[1]*f[1](x)+...a[n]*f[n](x); //; // Functions f are fixed functions of x. For example, fitting with a; // polynomial is linear fitting in this sense.; //; // The fitting method; //; // The fit is performed using the Normal Equations method with Cholesky; // decomposition.; //; // Why should it be used?; //; // The linear fitter is considerably faster than general non-linear; // fitters and doesn't require to set the initial values of parameters.; //; // Using the fitter:; //; // 1.Adding the data points:; // 1.1 To store or not to store the input data?; // - There are 2 options in the constructor - to store or not; // store the input data. The advantages of storing the data; // are that you'll be able to reset the fitting model without; // adding all the points again, and that for very large sets; // of points the chisquare is calculated more precisely.; // The obvious disadvantage is the amount of memory used to; // keep all the points.; // - Before you start adding the points, you can change the; // store/not store option by StoreData() method.; // 1.2 The data can be added:; // - simply point by point - AddPoint() method; // - an array of points at once:; // If the data is already stored in some arrays, this data; // can be assigned to the linear fitter without physically; // coping bytes, thanks to the Use() method of; // TVector and TMatrix classes - AssignData() method; //; // 2.Setting the formula; // 2.1 The linear formula syntax:; // -Additive parts are separated by 2 plus signs ""++""; // --for example",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit/inc/TLinearFitter.h:325,depend,dependency,325,math/minuit/inc/TLinearFitter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit/inc/TLinearFitter.h,1,['depend'],['dependency']
Integrability,"/////////////////////////////////////////////////////////////////////////; /// Set arbitrary JSON data, which is accessible via conn.getUserArgs() method in JavaScript; /// This JSON code injected into main HTML document into connectWebWindow({}); /// Must be set before RWebWindow::Show() method is called; /// \param args - arbitrary JSON data which can be provided to client side",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/webdisplay/src/RWebWindow.cxx:188,inject,injected,188,gui/webdisplay/src/RWebWindow.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/webdisplay/src/RWebWindow.cxx,1,['inject'],['injected']
Integrability,"////////////////////////////////////////////////////////////////////////; // Integration Tests",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/imt/test/testRTaskArena.cxx:77,Integrat,Integration,77,core/imt/test/testRTaskArena.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/test/testRTaskArena.cxx,1,['Integrat'],['Integration']
Integrability,"////////////////////////////////////////////////////////////////////////; /// fill bin map for a single node; ///; /// \param[in] hist the histogram representing this node (used if nDim>0); /// \param[in] startBin start bin in the bin map; /// \param[in] nDim number of dimensions to resolve; /// \param[in] axisList[3] TUnfoldBinning axis numbers corresponding; /// to the axes of <b>hist</b>; /// \param[in] axisSteering see documentation of CreateHistogram(); /// \param[out] binMap the bin map to fill; ///; /// returns the number of bins mapped.; /// <br>; /// The result depends on the parameter <b>nDim</b> as follows; /// <ul>; /// <li> nDim==nullptr: bins are mapped in linear order, ignore hist and; /// axisList</li>; /// <li> nDim==hist->GetDimension():; /// bins are mapped to ""hist"" bin numbers; /// the corresponding TUnfoldBinning axes are taken from; /// axisList[]</li>; /// <li>nDim=1 and hist->GetDimension()>1:; /// bins are mapped to the x-axis of ""hist""; /// the corresponding TUnfoldBinning axis is taken from; /// axisList[0]</li>; /// </ul>",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldBinning.cxx:577,depend,depends,577,hist/unfold/src/TUnfoldBinning.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldBinning.cxx,1,['depend'],['depends']
Integrability,"////////////////////////////////////////////////////////////////////////; /// return Stein's unbiased risk estimator; /// See e.g. arXiv:1612.09415; ///; /// A minimum in the SURE variable is a good choice of regularisation strength; ///; /// NOTE: the calculation of SURE depends on the calculation of DF.; /// See the method GetDF() for caveats with Poisson-distributed data.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx:273,depend,depends,273,hist/unfold/src/TUnfold.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx,1,['depend'],['depends']
Integrability,"////////////////////////////////////////////////////////////////////////; /// return the effecive number of degrees of freedom; /// See e.g. arXiv:1612.09415 and the references therein; ///; /// Here, DF is calculated using the dependence of; /// the unfolding result x on the data y; ///; /// This calculation is done assuming a CONSTANT data variance.; /// I.e. the uncertainties reported to TUnfold in ""SetInput()""; /// ought to be independent of the measurements.; /// This is *NOT* true for standard Poisson-distributed data.; /// In practice the impact is expected to be small",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx:228,depend,dependence,228,hist/unfold/src/TUnfold.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx,1,['depend'],['dependence']
Integrability,"////////////////////////////////////////////////////////////////////////; /// return the number of histogram bins required when storing; /// this binning in a one-dimensional histogram; ///; /// \param[in] originalAxisBinning if true, try to have the histogram; /// axis reflect precisely the relevant axis of the binnnig scheme; /// \param[in] axisSteering steering to integrate over axis and/or; /// skip underflow and overflow bins; ///; /// returns the number of bins of the TH1, where the underflow/overflow; /// are not used, unless the distribution has only one axis and; /// originalAxisBinning=true); /// <br/>; /// axisSteering is a string as follows:; /// ""axis[options];axis[options];...""; /// where: axis = name or * is an identifier of an axis (* matches all); /// and: options is any combination of the letters C,U,O (other; /// letters are ignored).; /// <br>; /// The letter C means that the corresponding axis is collapsed into; /// one bin, i.e. one dimension is removed from the counting.; /// The letters U,O remove for the matching axis the underflow.overflow; /// bins from the counting",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldBinning.cxx:370,integrat,integrate,370,hist/unfold/src/TUnfoldBinning.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldBinning.cxx,1,['integrat'],['integrate']
Integrability,"////////////////////////////////////////////////////////////////////////; /// set up regularisation conditions; ///; /// \param[in] regmode basic regularisation mode (see class TUnfold); /// \param[in] densityMode how to apply bin-wise factors; /// \param[in] distribution name of the TUnfoldBinning node for which; /// the regularisation conditions shall be set (zero matches all nodes); /// \param[in] axisSteering regularisation fine-tuning; ///; /// <b>axisSteering</b> is a string with several tokens, separated by; /// a semicolon: ""axisName[options];axisName[options];..."".; /// <dl>; /// <dt>axisName</dt>; /// <dd>the name of an axis. The special name * matches all.; /// So the argument <b>distribution</b> selects one (or all); /// distributions. Witin the selected distribution(s), steering options may be; /// specified for each axis (or for all axes) to define the; /// regularisation conditions.</dd>; /// <dt>options</dt>; /// <dd>one or several character as follows<br/>; /// u : exclude underflow bin from derivatives along this axis<br/>; /// o : exclude overflow bin from derivatives along this axis<br/>; /// U : exclude underflow bin<br/>; /// O : exclude overflow bin<br/>; /// b : use bin width for derivative calculation<br/>; /// B : same as 'b', in addition normalize to average bin width<br/>; /// N : completely exclude derivatives along this axis<br/>; /// p : axis is periodic (e.g. azimuthal angle), so; /// include derivatives built from combinations involving bins at; /// both ends of the axis ""wrap around""; /// </dd>; /// </dl>; /// example: <b>axisSteering</b>=""*[UOB]"" uses bin widths to calculate; /// derivatives but underflow/overflow bins are not regularized",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldDensity.cxx:1530,wrap,wrap,1530,hist/unfold/src/TUnfoldDensity.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldDensity.cxx,1,['wrap'],['wrap']
Integrability,"//////////////////////////////////////////////////////////////////; /// This thread id used to identify main application thread, where ROOT event processing runs; /// To inject code in that thread, one should use TTimer (like THttpServer does); /// In other threads special run methods have to be invoked like RWebWindow::Run(); ///; /// TODO: probably detection of main thread should be delivered by central ROOT instances like gApplication or gROOT; /// Main thread can only make sense if special processing runs there and one can inject own functionality there",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/webdisplay/src/RWebWindowsManager.cxx:170,inject,inject,170,gui/webdisplay/src/RWebWindowsManager.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/webdisplay/src/RWebWindowsManager.cxx,2,['inject'],['inject']
Integrability,"/////////////////////////////////////////////////////////////////; // //; // ROOT's GUI depends and relies on X11 XParseColors. //; // Color can be specified by name (found in X11 rgb.txt) //; // or as RGB triplet: #rgb #rrggbb #rrrgggbbb #rrrrggggbbbb. //; // //; /////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/cocoa/inc/X11Colors.h:88,depend,depends,88,graf2d/cocoa/inc/X11Colors.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/cocoa/inc/X11Colors.h,1,['depend'],['depends']
Integrability,"/////////////////////////////////////////////////////////////; // CCTreeNode - a light wrapper of a decision tree node //; // //; /////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/CCTreeWrapper.h:87,wrap,wrapper,87,tmva/tmva/inc/TMVA/CCTreeWrapper.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/CCTreeWrapper.h,1,['wrap'],['wrapper']
Integrability,"/////////////////////////////////////////////////////////////; // Interface",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/mathtext/inc/mathrender.h:66,Interface,Interface,66,graf2d/mathtext/inc/mathrender.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/mathtext/inc/mathrender.h,1,['Interface'],['Interface']
Integrability,"////////////////////////////////////////////////////////////; /// Update setting dependent from object type",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/fitpanelv7/src/RFitPanelModel.cxx:81,depend,dependent,81,gui/fitpanelv7/src/RFitPanelModel.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/fitpanelv7/src/RFitPanelModel.cxx,1,['depend'],['dependent']
Integrability,"/////////////////////////////////////////////////////////; /// Special method to send binary data with text header; /// For normal websocket it is two separated operation, for other engines could be combined together,; /// but emulates as two messages on client side",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/src/TCivetweb.cxx:243,message,messages,243,net/http/src/TCivetweb.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/src/TCivetweb.cxx,1,['message'],['messages']
Integrability,"///////////////////////////////////////////////////////; /// \brief Execute a user-defined accumulation operation on the processed column values in each processing slot.; /// \tparam F The type of the aggregator callable. Automatically deduced.; /// \tparam U The type of the aggregator variable. Must be default-constructible, copy-constructible and copy-assignable. Automatically deduced.; /// \tparam T The type of the column to apply the reduction to. Automatically deduced.; /// \param[in] aggregator A callable with signature `U(U,T)` or `void(U&,T)`, where T is the type of the column, U is the type of the aggregator variable; /// \param[in] merger A callable with signature `U(U,U)` or `void(std::vector<U>&)` used to merge the results of the accumulations of each thread; /// \param[in] columnName The column to be aggregated. If omitted, the first default column is used instead.; /// \param[in] aggIdentity The aggregator variable of each thread is initialized to this value (or is default-constructed if the parameter is omitted); /// \return the result of the aggregation wrapped in a RResultPtr.; ///; /// An aggregator callable takes two values, an aggregator variable and a column value. The aggregator variable is; /// initialized to aggIdentity or default-constructed if aggIdentity is omitted.; /// This action calls the aggregator callable for each processed entry, passing in the aggregator variable and; /// the value of the column columnName.; /// If the signature is `U(U,T)` the aggregator variable is then copy-assigned the result of the execution of the callable.; /// Otherwise the signature of aggregator must be `void(U&,T)`.; ///; /// The merger callable is used to merge the partial accumulation results of each processing thread. It is only called in multi-thread executions.; /// If its signature is `U(U,U)` the aggregator variables of each thread are merged two by two.; /// If its signature is `void(std::vector<U>& a)` it is assumed that it merges all aggregato",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RDF/RInterface.hxx:1128,wrap,wrapped,1128,tree/dataframe/inc/ROOT/RDF/RInterface.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RDF/RInterface.hxx,1,['wrap'],['wrapped']
Integrability,"//////////////////////////////////////////////////////; //Multi-dim integration options implementation; /////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/IntegratorOptions.cxx:68,integrat,integration,68,math/mathcore/src/IntegratorOptions.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/IntegratorOptions.cxx,1,['integrat'],['integration']
Integrability,"/////////////////////////////////////////////////; // //; // TextLine - wrapper class for a CoreText's //; // CTLine: hide all the API, calls, objects, //; // CoreFoundation objects required to draw //; // a simple line of text and be able to //; // calculate text metrics. //; // //; /////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/quartz/inc/QuartzText.h:72,wrap,wrapper,72,graf2d/quartz/inc/QuartzText.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/quartz/inc/QuartzText.h,1,['wrap'],['wrapper']
Integrability,"///////////////////////////////////////////; /// Read a hunk of data from the socket, up until a terminator. The hunk is; /// limited by whatever the TERMINATOR callback chooses as its; /// terminator. For example, if terminator stops at newline, the hunk; /// will consist of a line of data; if terminator stops at two; /// newlines, it can be used to read the head of an HTTP response.; /// Upon determining the boundary, the function returns the data (up to; /// the terminator) in hunk.; ///; /// In case of read error, -1 is returned. In case of having read some; /// data, but encountering EOF before seeing the terminator, the data; /// that has been read is returned, but it will (obviously) not contain the; /// terminator.; ///; /// The TERMINATOR function is called with three arguments: the; /// beginning of the data read so far, the beginning of the current; /// block of peeked-at data, and the length of the current block.; /// Depending on its needs, the function is free to choose whether to; /// analyze all data or just the newly arrived data. If TERMINATOR; /// returns 0, it means that the terminator has not been seen.; /// Otherwise it should return a pointer to the character immediately; /// following the terminator.; ///; /// The idea is to be able to read a line of input, or otherwise a hunk; /// of text, such as the head of an HTTP request, without crossing the; /// boundary, so that the next call to RecvRaw() etc. reads the data; /// after the hunk. To achieve that, this function does the following:; ///; /// 1. Peek at incoming data.; ///; /// 2. Determine whether the peeked data, along with the previously; /// read data, includes the terminator.; ///; /// 3a. If yes, read the data until the end of the terminator, and; /// exit.; ///; /// 3b. If no, read the peeked data and goto 1.; ///; /// The function is careful to assume as little as possible about the; /// implementation of peeking. For example, every peek is followed by; /// a read. If the read retu",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TWebFile.cxx:981,Depend,Depending,981,net/net/src/TWebFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TWebFile.cxx,1,['Depend'],['Depending']
Integrability,"////////////////////////////////////////; /// This function computes, to an attempted specified accuracy, the value of; /// the integral; ///; /// \param[in] n Number of dimensions [2,15]; /// \param[in] a,b One-dimensional arrays of length >= N . On entry A[i], and B[i],; /// contain the lower and upper limits of integration, respectively.; /// \param[in] maxpts Maximum number of function evaluations to be allowed.; /// maxpts >= 2^n +2*n*(n+1) +1; /// if maxpts<minpts, maxpts is set to 10*minpts; /// \param[in] epsrel Specified relative accuracy.; /// \param[in] epsabs Specified absolute accuracy.; /// The integration algorithm will attempt to reach either the relative or the absolute accuracy.; /// In case the maximum function called is reached the algorithm will stop earlier without having reached; /// the desired accuracy; ///; /// \param[out] relerr Contains, on exit, an estimation of the relative accuracy of the result.; /// \param[out] nfnevl number of function evaluations performed.; /// \param[out] ifail; /// \parblock; /// 0 Normal exit. At least minpts and at most maxpts calls to the function were performed.; ///; /// 1 maxpts is too small for the specified accuracy eps. The result and relerr contain the values obtainable for the; /// specified value of maxpts.; ///; /// 3 n<2 or n>15; /// \endparblock; ///; /// Method:; ///; /// The default method used is the Genz-Mallik adaptive multidimensional algorithm; /// using the class ROOT::Math::AdaptiveIntegratorMultiDim (see the reference documentation of the class); ///; /// Other methods can be used by setting ROOT::Math::IntegratorMultiDimOptions::SetDefaultIntegrator(); /// to different integrators.; /// Other possible integrators are MC integrators based on the ROOT::Math::GSLMCIntegrator class; /// Possible methods are : Vegas, Miser or Plain; /// IN case of MC integration the accuracy is determined by the number of function calls, one should be; /// careful not to use a too large value of maxpts; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TF1.cxx:1649,Integrat,IntegratorMultiDimOptions,1649,hist/hist/src/TF1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TF1.cxx,5,"['Integrat', 'integrat']","['IntegratorMultiDimOptions', 'integration', 'integrators']"
Integrability,"////////////////////////////////; /// \brief Append a filter to the call graph.; /// \param[in] f Function, lambda expression, functor class or any other callable object. It must return a `bool`; /// signalling whether the event has passed the selection (true) or not (false).; /// \param[in] columns Names of the columns/branches in input to the filter function.; /// \param[in] name Optional name of this filter. See `Report`.; /// \return the filter node of the computation graph.; ///; /// Append a filter node at the point of the call graph corresponding to the; /// object this method is called on.; /// The callable `f` should not have side-effects (e.g. modification of an; /// external or static variable) to ensure correct results when implicit; /// multi-threading is active.; ///; /// RDataFrame only evaluates filters when necessary: if multiple filters; /// are chained one after another, they are executed in order and the first; /// one returning false causes the event to be discarded.; /// Even if multiple actions or transformations depend on the same filter,; /// it is executed once per entry. If its result is requested more than; /// once, the cached result is served.; ///; /// ### Example usage:; /// ~~~{.cpp}; /// // C++ callable (function, functor class, lambda...) that takes two parameters of the types of ""x"" and ""y""; /// auto filtered = df.Filter(myCut, {""x"", ""y""});; ///; /// // String: it must contain valid C++ except that column names can be used instead of variable names; /// auto filtered = df.Filter(""x*y > 0"");; /// ~~~; ///; /// \note If the body of the string expression contains an explicit `return` statement (even if it is in a nested; /// scope), RDataFrame _will not_ add another one in front of the expression. So this will not work:; /// ~~~{.cpp}; /// df.Filter(""Sum(Map(vec, [](float e) { return e*e > 0.5; }))""); /// ~~~; /// but instead this will:; /// ~~~{.cpp}; /// df.Filter(""return Sum(Map(vec, [](float e) { return e*e > 0.5; }))""); /// ~~~",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RDF/RInterface.hxx:1096,depend,depend,1096,tree/dataframe/inc/ROOT/RDF/RInterface.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RDF/RInterface.hxx,1,['depend'],['depend']
Integrability,"///////////////////////////////; /// \brief Return an object of type T on which `T::Fill` will be called once per event (*lazy action*).; ///; /// Type T must provide at least:; /// - a copy-constructor; /// - a `Fill` method that accepts as many arguments and with same types as the column names passed as columnList; /// (these types can also be passed as template parameters to this method); /// - a `Merge` method with signature `Merge(TCollection *)` or `Merge(const std::vector<T *>&)` that merges the; /// objects passed as argument into the object on which `Merge` was called (an analogous of TH1::Merge). Note that; /// if the signature that takes a `TCollection*` is used, then T must inherit from TObject (to allow insertion in; /// the TCollection*).; ///; /// \tparam FirstColumn The first type of the column the values of which are used to fill the object. Inferred together with OtherColumns if not present.; /// \tparam OtherColumns A list of the other types of the columns the values of which are used to fill the object.; /// \tparam T The type of the object to fill. Automatically deduced.; /// \param[in] model The model to be considered to build the new return value.; /// \param[in] columnList A list containing the names of the columns that will be passed when calling `Fill`; /// \return the filled object wrapped in a RResultPtr.; ///; /// The user gives up ownership of the model object.; /// The list of column names to be used for filling must always be specified.; /// This action is *lazy*: upon invocation of this method the calculation is booked but not executed.; /// Also see RResultPtr.; ///; /// ### Example usage:; /// ~~~{.cpp}; /// MyClass obj;; /// // Deduce column types (this invocation needs jitting internally, and in this case; /// // MyClass needs to be known to the interpreter); /// auto myFilledObj = myDf.Fill(obj, {""col0"", ""col1""});; /// // explicit column types; /// auto myFilledObj = myDf.Fill<float, float>(obj, {""col0"", ""col1""});; /// ~~~; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RDF/RInterface.hxx:1375,wrap,wrapped,1375,tree/dataframe/inc/ROOT/RDF/RInterface.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RDF/RInterface.hxx,1,['wrap'],['wrapped']
Integrability,"////////////; /// Merge all the entries in the chain into a new tree in the current file.; ///; /// Note: The ""file"" parameter is *not* the file where the new; /// tree will be inserted. The new tree is inserted into; /// gDirectory, which is usually the most recently opened; /// file, or the directory most recently cd()'d to.; ///; /// If option = ""C"" is given, the compression level for all branches; /// in the new Tree is set to the file compression level. By default,; /// the compression level of all branches is the original compression; /// level in the old trees.; ///; /// If basketsize > 1000, the basket size for all branches of the; /// new tree will be set to basketsize.; ///; /// Example using the file generated in $ROOTSYS/test/Event; /// merge two copies of Event.root; /// ~~~ {.cpp}; /// gSystem.Load(""libEvent"");; /// TChain ch(""T"");; /// ch.Add(""Event1.root"");; /// ch.Add(""Event2.root"");; /// ch.Merge(""all.root"");; /// ~~~; /// If the chain is expecting the input tree inside a directory,; /// this directory is NOT created by this routine.; ///; /// So if you do:; /// ~~~ {.cpp}; /// TChain ch(""mydir/mytree"");; /// ch.Merge(""newfile.root"");; /// ~~~; /// The resulting file will not have subdirectories. In order to; /// preserve the directory structure do the following instead:; /// ~~~ {.cpp}; /// TFile* file = TFile::Open(""newfile.root"", ""RECREATE"");; /// file->mkdir(""mydir"")->cd();; /// ch.Merge(file, 0);; /// ~~~; /// If 'option' contains the word 'fast' the merge will be done without; /// unzipping or unstreaming the baskets (i.e., a direct copy of the raw; /// bytes on disk).; ///; /// When 'fast' is specified, 'option' can also contains a; /// sorting order for the baskets in the output file.; ///; /// There is currently 3 supported sorting order:; /// ~~~ {.cpp}; /// SortBasketsByOffset (the default); /// SortBasketsByBranch; /// SortBasketsByEntry; /// ~~~; /// When using SortBasketsByOffset the baskets are written in; /// the output file in the ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TChain.cxx:1127,rout,routine,1127,tree/tree/src/TChain.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TChain.cxx,1,['rout'],['routine']
Integrability,"////===- SampleProfileLoadBaseImpl.h - Profile loader base impl --*- C++-*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; /// \file; /// This file provides the interface for the sampled PGO profile loader base; /// implementation.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/SampleProfileLoaderBaseImpl.h:418,interface,interface,418,interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/SampleProfileLoaderBaseImpl.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/SampleProfileLoaderBaseImpl.h,1,['interface'],['interface']
Integrability,///; /// MachinePostDominatorTree - an analysis pass wrapper for DominatorTree; /// used to compute the post-dominator tree for MachineFunctions.; ///,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachinePostDominators.h:53,wrap,wrapper,53,interpreter/llvm-project/llvm/include/llvm/CodeGen/MachinePostDominators.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachinePostDominators.h,1,['wrap'],['wrapper']
Integrability,"///; /// The Input class is used to parse a yaml document into in-memory structs; /// and vectors.; ///; /// It works by using YAMLParser to do a syntax parse of the entire yaml; /// document, then the Input class builds a graph of HNodes which wraps; /// each yaml Node. The extra layer is buffering. The low level yaml; /// parser only lets you look at each node once. The buffering layer lets; /// you search and interate multiple times. This is necessary because; /// the mapRequired() method calls may not be in the same order; /// as the keys in the document.; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/YAMLTraits.h:245,wrap,wraps,245,interpreter/llvm-project/llvm/include/llvm/Support/YAMLTraits.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/YAMLTraits.h,1,['wrap'],['wraps']
Integrability,"///; /// objc-interface:; /// objc-class-interface-attributes[opt] objc-class-interface; /// objc-category-interface; ///; /// objc-class-interface:; /// '@' 'interface' identifier objc-type-parameter-list[opt]; /// objc-superclass[opt] objc-protocol-refs[opt]; /// objc-class-instance-variables[opt]; /// objc-interface-decl-list; /// @end; ///; /// objc-category-interface:; /// '@' 'interface' identifier objc-type-parameter-list[opt]; /// '(' identifier[opt] ')' objc-protocol-refs[opt]; /// objc-interface-decl-list; /// @end; ///; /// objc-superclass:; /// ':' identifier objc-type-arguments[opt]; ///; /// objc-class-interface-attributes:; /// __attribute__((visibility(""default""))); /// __attribute__((visibility(""hidden""))); /// __attribute__((deprecated)); /// __attribute__((unavailable)); /// __attribute__((objc_exception)) - used by NSException on 64-bit; /// __attribute__((objc_root_class)); ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParseObjc.cpp:14,interface,interface,14,interpreter/llvm-project/clang/lib/Parse/ParseObjc.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParseObjc.cpp,13,"['interface', 'protocol']","['interface', 'interface-attributes', 'interface-decl-list', 'protocol-refs']"
Integrability,"///< 5 longs can be used by client message events; ///< NOTE: only [0], [1] and [2] may be used.; ///< [1] and [2] may contain >32 bit quantities; ///< (i.e. pointers on 64 bit machines)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/gui/inc/GuiTypes.h:35,message,message,35,core/gui/inc/GuiTypes.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/inc/GuiTypes.h,1,['message'],['message']
Integrability,///< A non-relocating relocation. Used to prevent the binder; ///< from garbage collecting a csect (such as code used for; ///< dynamic initialization of non-local statics) for which; ///< another csect has an implicit dependency.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/BinaryFormat/XCOFF.h:219,depend,dependency,219,interpreter/llvm-project/llvm/include/llvm/BinaryFormat/XCOFF.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/BinaryFormat/XCOFF.h,1,['depend'],['dependency']
Integrability,///< A register anti-dependence (aka WAR).,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/ScheduleDAG.h:21,depend,dependence,21,interpreter/llvm-project/llvm/include/llvm/CodeGen/ScheduleDAG.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/ScheduleDAG.h,1,['depend'],['dependence']
Integrability,///< A register output-dependence (aka WAW).,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/ScheduleDAG.h:23,depend,dependence,23,interpreter/llvm-project/llvm/include/llvm/CodeGen/ScheduleDAG.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/ScheduleDAG.h,1,['depend'],['dependence']
Integrability,"///< Abstract real-valued function interface",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsFunc.h:35,interface,interface,35,roofit/roofitcore/inc/RooAbsFunc.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsFunc.h,1,['interface'],['interface']
Integrability,///< Add missing headers to dependency list,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Frontend/DependencyOutputOptions.h:28,depend,dependency,28,interpreter/llvm-project/clang/include/clang/Frontend/DependencyOutputOptions.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Frontend/DependencyOutputOptions.h,1,['depend'],['dependency']
Integrability,"///< Additional modifier for linear, map, depend or; ///< lastprivate clause.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Sema/Sema.h:42,depend,depend,42,interpreter/llvm-project/clang/include/clang/Sema/Sema.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Sema/Sema.h,1,['depend'],['depend']
Integrability,///< Any other ordering dependency.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/ScheduleDAG.h:24,depend,dependency,24,interpreter/llvm-project/llvm/include/llvm/CodeGen/ScheduleDAG.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/ScheduleDAG.h,1,['depend'],['dependency']
Integrability,///< Arbitrary strong DAG edge (no real dependence).,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/ScheduleDAG.h:40,depend,dependence,40,interpreter/llvm-project/llvm/include/llvm/CodeGen/ScheduleDAG.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/ScheduleDAG.h,1,['depend'],['dependence']
Integrability,"///< Binding of RooAbsReal to TFoam function interface",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFoamGenerator.h:45,interface,interface,45,roofit/roofitcore/src/RooFoamGenerator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFoamGenerator.h,1,['interface'],['interface']
Integrability,///< Call to data() in a static assert; ///< message.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Sema/Sema.h:45,message,message,45,interpreter/llvm-project/clang/include/clang/Sema/Sema.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Sema/Sema.h,1,['message'],['message']
Integrability,///< Call to size() in a static assert; ///< message.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Sema/Sema.h:45,message,message,45,interpreter/llvm-project/clang/include/clang/Sema/Sema.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Sema/Sema.h,1,['message'],['message']
Integrability,"///< Common category dependents",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooProdGenContext.h:21,depend,dependents,21,roofit/roofitcore/inc/RooProdGenContext.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooProdGenContext.h,1,['depend'],['dependents']
Integrability,"///< Default integrator precision.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooBinSamplingPdf.h:13,integrat,integrator,13,roofit/roofitcore/inc/RooBinSamplingPdf.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooBinSamplingPdf.h,1,['integrat'],['integrator']
Integrability,"///< Dependency cmd list",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooCmdConfig.h:5,Depend,Dependency,5,roofit/roofitcore/inc/RooCmdConfig.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooCmdConfig.h,1,['Depend'],['Dependency']
Integrability,"///< Dependent/convolution variable",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooResolutionModel.h:5,Depend,Dependent,5,roofit/roofitcore/inc/RooResolutionModel.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooResolutionModel.h,1,['Depend'],['Dependent']
Integrability,"///< Dimension of the integration/simulation space",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/foam/inc/TFoam.h:22,integrat,integration,22,math/foam/inc/TFoam.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/foam/inc/TFoam.h,2,['integrat'],['integration']
Integrability,///< Do not track a dependence between source and target.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h:20,depend,dependence,20,interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h,1,['depend'],['dependence']
Integrability,"///< Error message",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/MPCode.h:11,message,message,11,core/multiproc/inc/MPCode.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/MPCode.h,1,['message'],['message']
Integrability,"///< Execute function with the argument contained in the message",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/MPCode.h:57,message,message,57,core/multiproc/inc/MPCode.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/MPCode.h,1,['message'],['message']
Integrability,"///< Fatal error: whoever sends this message is terminating execution",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/MPCode.h:37,message,message,37,core/multiproc/inc/MPCode.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/MPCode.h,1,['message'],['message']
Integrability,"///< Force numerical integration if flag set",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsReal.h:21,integrat,integration,21,roofit/roofitcore/inc/RooAbsReal.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsReal.h,1,['integrat'],['integration']
Integrability,"///< Function being integrated",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooRealIntegral.h:20,integrat,integrated,20,roofit/roofitcore/inc/RooRealIntegral.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooRealIntegral.h,1,['integrat'],['integrated']
Integrability,"///< Gauss-Legendre integration",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/AllIntegrationTypes.h:20,integrat,integration,20,math/mathcore/inc/Math/AllIntegrationTypes.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/AllIntegrationTypes.h,1,['integrat'],['integration']
Integrability,"///< Generic message",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/MPCode.h:13,message,message,13,core/multiproc/inc/MPCode.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/MPCode.h,1,['message'],['message']
Integrability,///< Global Linkage (Interfile Interface Code),MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/BinaryFormat/XCOFF.h:31,Interface,Interface,31,interpreter/llvm-project/llvm/include/llvm/BinaryFormat/XCOFF.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/BinaryFormat/XCOFF.h,1,['Interface'],['Interface']
Integrability,"///< Holder for optional convolution integration window scaling parameter",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooNumConvolution.h:37,integrat,integration,37,roofit/roofitcore/inc/RooNumConvolution.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooNumConvolution.h,1,['integrat'],['integration']
Integrability,"///< If non-zero, provides a pointer to a; ///< string instance in which error messages will be returned. If the; ///< string is non-empty upon return an error occurred while invoking the; ///< program.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/Program.h:79,message,messages,79,interpreter/llvm-project/llvm/include/llvm/Support/Program.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/Program.h,2,['message'],['messages']
Integrability,"///< If true limits of function binding are used; // Integrator configuration",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRombergIntegrator.h:53,Integrat,Integrator,53,roofit/roofitcore/src/RooRombergIntegrator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRombergIntegrator.h,1,['Integrat'],['Integrator']
Integrability,"///< If true print number of function evaluation required for integration",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsIntegrator.h:62,integrat,integration,62,roofit/roofitcore/inc/RooAbsIntegrator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsIntegrator.h,1,['integrat'],['integration']
Integrability,///< Include module file dependencies.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Frontend/DependencyOutputOptions.h:25,depend,dependencies,25,interpreter/llvm-project/clang/include/clang/Frontend/DependencyOutputOptions.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Frontend/DependencyOutputOptions.h,1,['depend'],['dependencies']
Integrability,"///< Include phony targets for each; /// dependency, which can avoid some 'make'; /// problems.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Frontend/DependencyOutputOptions.h:41,depend,dependency,41,interpreter/llvm-project/clang/include/clang/Frontend/DependencyOutputOptions.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Frontend/DependencyOutputOptions.h,1,['depend'],['dependency']
Integrability,///< Include system header dependencies.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Frontend/DependencyOutputOptions.h:27,depend,dependencies,27,interpreter/llvm-project/clang/include/clang/Frontend/DependencyOutputOptions.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Frontend/DependencyOutputOptions.h,1,['depend'],['dependencies']
Integrability,"///< Informational messages; used for instance for tracing",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RLogger.hxx:19,message,messages,19,core/foundation/inc/ROOT/RLogger.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RLogger.hxx,1,['message'],['messages']
Integrability,"///< Integrated observable",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooNumRunningInt.h:5,Integrat,Integrated,5,roofit/roofitcore/inc/RooNumRunningInt.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooNumRunningInt.h,1,['Integrat'],['Integrated']
Integrability,"///< Integrated sum of contents",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/inc/Hparam.h:5,Integrat,Integrated,5,hist/histpainter/inc/Hparam.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/inc/Hparam.h,1,['Integrat'],['Integrated']
Integrability,"///< Integrator type (value converted from enum)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/IntegratorOptions.h:5,Integrat,Integrator,5,math/mathcore/inc/Math/IntegratorOptions.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/IntegratorOptions.h,1,['Integrat'],['Integrator']
Integrability,"///< Interface for tools setting limits (producing confidence intervals)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/NeymanConstruction.h:5,Interface,Interface,5,roofit/roostats/inc/RooStats/NeymanConstruction.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/NeymanConstruction.h,1,['Interface'],['Interface']
Integrability,"///< Is integration over the bin volume requested",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooXYChi2Var.h:8,integrat,integration,8,roofit/roofitcore/src/RooXYChi2Var.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooXYChi2Var.h,1,['integrat'],['integration']
Integrability,"///< Is integrator in valid state?",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsIntegrator.h:8,integrat,integrator,8,roofit/roofitcore/inc/RooAbsIntegrator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsIntegrator.h,1,['integrat'],['integrator']
Integrability,///< K-V bit mask; /// Compare routine for std::lower_bound,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCSubtargetInfo.h:31,rout,routine,31,interpreter/llvm-project/llvm/include/llvm/MC/MCSubtargetInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCSubtargetInfo.h,1,['rout'],['routine']
Integrability,"///< List of configuration sets for individual integration methods",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooNumGenConfig.h:47,integrat,integration,47,roofit/roofitcore/inc/RooNumGenConfig.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooNumGenConfig.h,2,['integrat'],['integration']
Integrability,"///< List of dependents",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooMCStudy.h:13,depend,dependents,13,roofit/roofitcore/inc/RooMCStudy.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooMCStudy.h,1,['depend'],['dependents']
Integrability,"///< List of generate + prototype dependents",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooMCStudy.h:34,depend,dependents,34,roofit/roofitcore/inc/RooMCStudy.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooMCStudy.h,1,['depend'],['dependents']
Integrability,"///< List of message handlers",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/TROOT.h:13,message,message,13,core/base/inc/TROOT.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/TROOT.h,1,['message'],['message']
Integrability,"///< List of projected dependents in fit",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooMCStudy.h:23,depend,dependents,23,roofit/roofitcore/inc/RooMCStudy.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooMCStudy.h,1,['depend'],['dependents']
Integrability,"///< MC integration",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/AllIntegrationTypes.h:8,integrat,integration,8,math/mathcore/inc/Math/AllIntegrationTypes.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/AllIntegrationTypes.h,3,['integrat'],['integration']
Integrability,"///< Max value of dependent quantity",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/TMultiDimFit.h:18,depend,dependent,18,hist/hist/inc/TMultiDimFit.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/TMultiDimFit.h,1,['depend'],['dependent']
Integrability,"///< Mean of dependent quantity",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/TMultiDimFit.h:13,depend,dependent,13,hist/hist/inc/TMultiDimFit.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/TMultiDimFit.h,1,['depend'],['dependent']
Integrability,"///< Min value of dependent quantity",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/TMultiDimFit.h:18,depend,dependent,18,hist/hist/inc/TMultiDimFit.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/TMultiDimFit.h,1,['depend'],['dependent']
Integrability,"///< Number of bin in dependent variables",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/TMultiDimFit.h:22,depend,dependent,22,hist/hist/inc/TMultiDimFit.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/TMultiDimFit.h,1,['depend'],['dependent']
Integrability,"///< Number of integration samplings (per dim)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCIntegrator.h:15,integrat,integration,15,roofit/roofitcore/src/RooMCIntegrator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCIntegrator.h,1,['integrat'],['integration']
Integrability,"///< Numeric integrator configuration for integration of function over bin",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooXYChi2Var.h:13,integrat,integrator,13,roofit/roofitcore/src/RooXYChi2Var.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooXYChi2Var.h,2,['integrat'],"['integration', 'integrator']"
Integrability,"///< Operating System interface",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/TROOT.h:22,interface,interface,22,core/base/inc/TROOT.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/TROOT.h,1,['interface'],['interface']
Integrability,"///< Piece integrator 1",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooImproperIntegrator1D.h:11,integrat,integrator,11,roofit/roofitcore/src/RooImproperIntegrator1D.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooImproperIntegrator1D.h,1,['integrat'],['integrator']
Integrability,"///< Piece integrator 2",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooImproperIntegrator1D.h:11,integrat,integrator,11,roofit/roofitcore/src/RooImproperIntegrator1D.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooImproperIntegrator1D.h,1,['integrat'],['integrator']
Integrability,"///< Piece integrator 3",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooImproperIntegrator1D.h:11,integrat,integrator,11,roofit/roofitcore/src/RooImproperIntegrator1D.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooImproperIntegrator1D.h,1,['integrat'],['integrator']
Integrability,"///< Precision required for function integration (option ""I"")",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/TBinomialEfficiencyFitter.h:37,integrat,integration,37,hist/hist/inc/TBinomialEfficiencyFitter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/TBinomialEfficiencyFitter.h,1,['integrat'],['integration']
Integrability,"///< Prefix to be used when printing informational message (default TFileMerger)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/inc/TFileMerger.h:51,message,message,51,io/io/inc/TFileMerger.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/inc/TFileMerger.h,1,['message'],['message']
Integrability,"///< Proposal function for MCMC integration",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/MCMCCalculator.h:32,integrat,integration,32,roofit/roostats/inc/RooStats/MCMCCalculator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/MCMCCalculator.h,2,['integrat'],['integration']
Integrability,///< Regular data dependence (aka true-dependence).,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/ScheduleDAG.h:18,depend,dependence,18,interpreter/llvm-project/llvm/include/llvm/CodeGen/ScheduleDAG.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/ScheduleDAG.h,2,['depend'],['dependence']
Integrability,"///< Selects integration method for 1D conditional p.d.f.s",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooNumGenConfig.h:13,integrat,integration,13,roofit/roofitcore/inc/RooNumGenConfig.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooNumGenConfig.h,1,['integrat'],['integration']
Integrability,"///< Selects integration method for 1D conditional p.d.f.s with categories",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooNumGenConfig.h:13,integrat,integration,13,roofit/roofitcore/inc/RooNumGenConfig.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooNumGenConfig.h,1,['integrat'],['integration']
Integrability,"///< Selects integration method for 1D integrals",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooNumIntConfig.h:13,integrat,integration,13,roofit/roofitcore/inc/RooNumIntConfig.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooNumIntConfig.h,1,['integrat'],['integration']
Integrability,"///< Selects integration method for 1D p.d.f.s",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooNumGenConfig.h:13,integrat,integration,13,roofit/roofitcore/inc/RooNumGenConfig.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooNumGenConfig.h,1,['integrat'],['integration']
Integrability,"///< Selects integration method for 1D p.d.f.s with categories",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooNumGenConfig.h:13,integrat,integration,13,roofit/roofitcore/inc/RooNumGenConfig.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooNumGenConfig.h,1,['integrat'],['integration']
Integrability,"///< Selects integration method for 2D conditional p.d.f.s",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooNumGenConfig.h:13,integrat,integration,13,roofit/roofitcore/inc/RooNumGenConfig.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooNumGenConfig.h,1,['integrat'],['integration']
Integrability,"///< Selects integration method for 2D conditional p.d.f.s with categories",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooNumGenConfig.h:13,integrat,integration,13,roofit/roofitcore/inc/RooNumGenConfig.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooNumGenConfig.h,1,['integrat'],['integration']
Integrability,"///< Selects integration method for 2D integrals",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooNumIntConfig.h:13,integrat,integration,13,roofit/roofitcore/inc/RooNumIntConfig.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooNumIntConfig.h,1,['integrat'],['integration']
Integrability,"///< Selects integration method for 2D p.d.f.s",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooNumGenConfig.h:13,integrat,integration,13,roofit/roofitcore/inc/RooNumGenConfig.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooNumGenConfig.h,1,['integrat'],['integration']
Integrability,"///< Selects integration method for 2D p.d.f.s with categories",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooNumGenConfig.h:13,integrat,integration,13,roofit/roofitcore/inc/RooNumGenConfig.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooNumGenConfig.h,1,['integrat'],['integration']
Integrability,"///< Selects integration method for ND conditional p.d.f.s",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooNumGenConfig.h:13,integrat,integration,13,roofit/roofitcore/inc/RooNumGenConfig.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooNumGenConfig.h,1,['integrat'],['integration']
Integrability,"///< Selects integration method for ND conditional p.d.f.s with categories",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooNumGenConfig.h:13,integrat,integration,13,roofit/roofitcore/inc/RooNumGenConfig.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooNumGenConfig.h,1,['integrat'],['integration']
Integrability,"///< Selects integration method for ND integrals",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooNumIntConfig.h:13,integrat,integration,13,roofit/roofitcore/inc/RooNumIntConfig.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooNumIntConfig.h,1,['integrat'],['integration']
Integrability,"///< Selects integration method for ND p.d.f.s",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooNumGenConfig.h:13,integrat,integration,13,roofit/roofitcore/inc/RooNumGenConfig.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooNumGenConfig.h,1,['integrat'],['integration']
Integrability,"///< Selects integration method for ND p.d.f.s with categories",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooNumGenConfig.h:13,integrat,integration,13,roofit/roofitcore/inc/RooNumGenConfig.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooNumGenConfig.h,1,['integrat'],['integration']
Integrability,"///< Selects integration method for open ended 1D integrals",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooNumIntConfig.h:13,integrat,integration,13,roofit/roofitcore/inc/RooNumIntConfig.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooNumIntConfig.h,1,['integrat'],['integration']
Integrability,"///< Selects integration method for open ended 2D integrals",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooNumIntConfig.h:13,integrat,integration,13,roofit/roofitcore/inc/RooNumIntConfig.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooNumIntConfig.h,1,['integrat'],['integration']
Integrability,"///< Selects integration method for open ended ND integrals",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooNumIntConfig.h:13,integrat,integration,13,roofit/roofitcore/inc/RooNumIntConfig.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooNumIntConfig.h,1,['integrat'],['integration']
Integrability,"///< Set of continuous observables over which is integrated numerically",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooRealIntegral.h:49,integrat,integrated,49,roofit/roofitcore/inc/RooRealIntegral.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooRealIntegral.h,1,['integrat'],['integrated']
Integrability,"///< Set of lvalue observables over which is analytically integration that have a non-unit Jacobian",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooRealIntegral.h:58,integrat,integration,58,roofit/roofitcore/inc/RooRealIntegral.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooRealIntegral.h,1,['integrat'],['integration']
Integrability,"///< Set of observables on which function does not depends, which are integrated nevertheless",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooRealIntegral.h:51,depend,depends,51,roofit/roofitcore/inc/RooRealIntegral.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooRealIntegral.h,2,"['depend', 'integrat']","['depends', 'integrated']"
Integrability,"///< Set of observables over which is integrated/summed analytically",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooRealIntegral.h:38,integrat,integrated,38,roofit/roofitcore/inc/RooRealIntegral.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooRealIntegral.h,1,['integrat'],['integrated']
Integrability,"///< Shared pointer encapsulating the wrapped result; /// Owning pointer to the action that will produce this result.; /// Ownership is shared with other copies of this ResultPtr.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RResultPtr.hxx:38,wrap,wrapped,38,tree/dataframe/inc/ROOT/RResultPtr.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RResultPtr.hxx,1,['wrap'],['wrapped']
Integrability,"///< Some other error - hopefully the error message helps.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreeReaderValue.h:44,message,message,44,tree/treeplayer/inc/TTreeReaderValue.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreeReaderValue.h,1,['message'],['message']
Integrability,"///< SumSquare of dependent quantity",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/TMultiDimFit.h:18,depend,dependent,18,hist/hist/inc/TMultiDimFit.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/TMultiDimFit.h,1,['depend'],['dependent']
Integrability,"///< SuperCategory of Common category dependents",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooProdGenContext.h:38,depend,dependents,38,roofit/roofitcore/inc/RooProdGenContext.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooProdGenContext.h,1,['depend'],['dependents']
Integrability,"///< TGWin32RefreshTimer for GUI thread message handler",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/inc/TGWin32.h:40,message,message,40,graf2d/win32gdk/inc/TGWin32.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/inc/TGWin32.h,1,['message'],['message']
Integrability,///< Target-dependent index+offset operand.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineOperand.h:12,depend,dependent,12,interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineOperand.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineOperand.h,1,['depend'],['dependent']
Integrability,"///< Tell the client there was an error while processing; /* Generic messages, including errors */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/MPCode.h:69,message,messages,69,core/multiproc/inc/MPCode.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/MPCode.h,1,['message'],['messages']
Integrability,"///< Test sample, dependent quantity",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/TMultiDimFit.h:18,depend,dependent,18,hist/hist/inc/TMultiDimFit.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/TMultiDimFit.h,1,['depend'],['dependent']
Integrability,"///< Text of the error message lead to an 'invalid' state",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/inc/TTreeCloner.h:23,message,message,23,tree/tree/inc/TTreeCloner.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/inc/TTreeCloner.h,1,['message'],['message']
Integrability,///< The message contains the result of a function execution; /* TProcessExecutor::MapReduce */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/MPCode.h:9,message,message,9,core/multiproc/inc/MPCode.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/MPCode.h,1,['message'],['message']
Integrability,"///< The message contains the result of the processing of a TTree",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/MPCode.h:9,message,message,9,core/multiproc/inc/MPCode.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/MPCode.h,1,['message'],['message']
Integrability,"///< To synchronize multi-threads",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/TROOT.h:8,synchroniz,synchronize,8,core/base/inc/TROOT.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/TROOT.h,1,['synchroniz'],['synchronize']
Integrability,"///< Training sample, dependent quantity",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/TMultiDimFit.h:22,depend,dependent,22,hist/hist/inc/TMultiDimFit.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/TMultiDimFit.h,1,['depend'],['dependent']
Integrability,"///< Type erased shared pointer encapsulating the wrapped result; /// Owning pointer to the varied action that will produce these results if any.; /// Null if the RResultHandle was created from a RResultPtr, so no variations were present.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RResultHandle.hxx:50,wrap,wrapped,50,tree/dataframe/inc/ROOT/RResultHandle.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RResultHandle.hxx,1,['wrap'],['wrapped']
Integrability,"///< Type of the wrapped result; // The ROOT::RDF::RunGraphs helper has to access the loop manager to check whether two RResultHandles belong to the same computation graph",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RResultHandle.hxx:17,wrap,wrapped,17,tree/dataframe/inc/ROOT/RResultHandle.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RResultHandle.hxx,1,['wrap'],['wrapped']
Integrability,"///< Use `TH1::GetBinErrorUp` and `TH1::GetBinErrorLow` for the error, depending on y values.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/inc/TRatioPlot.h:71,depend,depending,71,graf2d/gpad/inc/TRatioPlot.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/inc/TRatioPlot.h,1,['depend'],['depending']
Integrability,"///< Use protocol-dependent default block size",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/inc/ROOT/RRawFile.hxx:9,protocol,protocol-dependent,9,io/io/inc/ROOT/RRawFile.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/inc/ROOT/RRawFile.hxx,1,['protocol'],['protocol-dependent']
Integrability,///< Use the ODR while keeping dependents.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/DWARFLinker/Classic/DWARFLinker.h:31,depend,dependents,31,interpreter/llvm-project/llvm/include/llvm/DWARFLinker/Classic/DWARFLinker.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/DWARFLinker/Classic/DWARFLinker.h,2,['depend'],['dependents']
Integrability,///< Walking the dependencies of a kept DIE.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/DWARFLinker/Classic/DWARFLinker.h:17,depend,dependencies,17,interpreter/llvm-project/llvm/include/llvm/DWARFLinker/Classic/DWARFLinker.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/DWARFLinker/Classic/DWARFLinker.h,2,['depend'],['dependencies']
Integrability,"///< adaptive multi-dimensional integration",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/AllIntegrationTypes.h:32,integrat,integration,32,math/mathcore/inc/Math/AllIntegrationTypes.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/AllIntegrationTypes.h,1,['integrat'],['integration']
Integrability,"///< buffer containing the error message; /// for the POSIX version of strerror_r",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/BidirMMapPipe.cxx:33,message,message,33,roofit/roofitcore/src/BidirMMapPipe.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/BidirMMapPipe.cxx,1,['message'],['message']
Integrability,"///< cutoff variable to use for integrating keys pdf",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/MCMCInterval.h:32,integrat,integrating,32,roofit/roostats/inc/RooStats/MCMCInterval.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/MCMCInterval.h,1,['integrat'],['integrating']
Integrability,"///< default adaptive integration type which can be used in the case of the presence of singularities.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/AllIntegrationTypes.h:22,integrat,integration,22,math/mathcore/inc/Math/AllIntegrationTypes.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/AllIntegrationTypes.h,1,['integrat'],['integration']
Integrability,"///< dependents of this p.d.f",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooProjectedPdf.h:5,depend,dependents,5,roofit/roofitcore/inc/RooProjectedPdf.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooProjectedPdf.h,1,['depend'],['dependents']
Integrability,"///< if true interface with J.Friedmans RuleFit module",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodRuleFit.h:13,interface,interface,13,tmva/tmva/inc/TMVA/MethodRuleFit.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodRuleFit.h,1,['interface'],['interface']
Integrability,"///< initial temperature (depends on FCN)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/SimulatedAnnealingFitter.h:26,depend,depends,26,tmva/tmva/inc/TMVA/SimulatedAnnealingFitter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/SimulatedAnnealingFitter.h,1,['depend'],['depends']
Integrability,"///< integrated likelihood function, i.e - unnormalized posterior function",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/BayesianCalculator.h:5,integrat,integrated,5,roofit/roostats/inc/RooStats/BayesianCalculator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/BayesianCalculator.h,1,['integrat'],['integrated']
Integrability,"///< integration error",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/AdaptiveIntegratorMultiDim.h:5,integrat,integration,5,math/mathcore/inc/Math/AdaptiveIntegratorMultiDim.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/AdaptiveIntegratorMultiDim.h,1,['integrat'],['integration']
Integrability,"///< integration interface",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/PDF.h:5,integrat,integration,5,tmva/tmva/inc/TMVA/PDF.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/PDF.h,2,"['integrat', 'interface']","['integration', 'interface']"
Integrability,"///< integration operation mode",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooRealIntegral.h:5,integrat,integration,5,roofit/roofitcore/inc/RooRealIntegral.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooRealIntegral.h,1,['integrat'],['integration']
Integrability,"///< last integration result",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/AdaptiveIntegratorMultiDim.h:10,integrat,integration,10,math/mathcore/inc/Math/AdaptiveIntegratorMultiDim.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/AdaptiveIntegratorMultiDim.h,1,['integrat'],['integration']
Integrability,"///< manual integration (sum over bins) or DGAUSS",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/PDF.h:12,integrat,integration,12,tmva/tmva/inc/TMVA/PDF.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/PDF.h,1,['integrat'],['integration']
Integrability,"///< noexcept(expression), value-dependent",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/ExceptionSpecificationType.h:33,depend,dependent,33,interpreter/llvm-project/clang/include/clang/Basic/ExceptionSpecificationType.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/ExceptionSpecificationType.h,1,['depend'],['dependent']
Integrability,"///< number of events per toy (may be ignored depending on settings)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/ToyMCSampler.h:46,depend,depending,46,roofit/roostats/inc/RooStats/ToyMCSampler.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/ToyMCSampler.h,1,['depend'],['depending']
Integrability,"///< number of points used to scan the PL, default depends if 1D or 2D",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/LikelihoodIntervalPlot.h:51,depend,depends,51,roofit/roostats/inc/RooStats/LikelihoodIntervalPlot.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/LikelihoodIntervalPlot.h,1,['depend'],['depends']
Integrability,"///< observables that p.d.f is integrated over",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooProjectedPdf.h:31,integrat,integrated,31,roofit/roofitcore/inc/RooProjectedPdf.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooProjectedPdf.h,1,['integrat'],['integrated']
Integrability,"///< p.d.f that is integrated",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooProjectedPdf.h:19,integrat,integrated,19,roofit/roofitcore/inc/RooProjectedPdf.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooProjectedPdf.h,1,['integrat'],['integrated']
Integrability,"///< pid of the parent; /// cleanup routine - at exit, we want our children to get a SIGTERM...",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/BidirMMapPipe.h:36,rout,routine,36,roofit/roofitcore/src/BidirMMapPipe.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/BidirMMapPipe.h,1,['rout'],['routine']
Integrability,"///< ping message ID",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/inc/TGWin32ProxyBase.h:10,message,message,10,graf2d/win32gdk/inc/TGWin32ProxyBase.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/inc/TGWin32ProxyBase.h,1,['message'],['message']
Integrability,"///< pointer to integrator interface class",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Integrator.h:16,integrat,integrator,16,math/mathcore/inc/Math/Integrator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Integrator.h,2,"['integrat', 'interface']","['integrator', 'interface']"
Integrability,"///< pointer to multi-dimensional integrator base class",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/IntegratorMultiDim.h:34,integrat,integrator,34,math/mathcore/inc/Math/IntegratorMultiDim.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/IntegratorMultiDim.h,1,['integrat'],['integrator']
Integrability,"///< post message ID",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/inc/TGWin32ProxyBase.h:10,message,message,10,graf2d/win32gdk/inc/TGWin32ProxyBase.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/inc/TGWin32ProxyBase.h,1,['message'],['message']
Integrability,"///< simple Gauss integration method with fixed rule",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/AllIntegrationTypes.h:18,integrat,integration,18,math/mathcore/inc/Math/AllIntegrationTypes.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/AllIntegrationTypes.h,1,['integrat'],['integration']
Integrability,"///< total number of arguments to pass to the workers; /// A collection of the types of tasks that TProcessExecutor can execute.; /// It is used to interpret in the right way and properly reply to the; /// messages received (see, for example, TProcessExecutor::HandleInput)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/ROOT/TProcessExecutor.hxx:206,message,messages,206,core/multiproc/inc/ROOT/TProcessExecutor.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/ROOT/TProcessExecutor.hxx,1,['message'],['messages']
Integrability,"///< total number of arguments to pass to the workers; /// A collection of the types of tasks that TTreeProcessorMP can execute.; /// It is used to interpret in the right way and properly reply to the; /// messages received (see, for example, TTreeProcessorMP::HandleInput)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/ROOT/TTreeProcessorMP.hxx:206,message,messages,206,tree/treeplayer/inc/ROOT/TTreeProcessorMP.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/ROOT/TTreeProcessorMP.hxx,1,['message'],['messages']
Integrability,"///< window handling container messages",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/inc/TGColorSelect.h:31,message,messages,31,gui/gui/inc/TGColorSelect.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/inc/TGColorSelect.h,3,['message'],['messages']
Integrability,"///< wrap length",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/inc/TGLabel.h:5,wrap,wrap,5,gui/gui/inc/TGLabel.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/inc/TGLabel.h,1,['wrap'],['wrap']
Integrability,"///< y drawing position (depending on font)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/inc/TGStatusBar.h:25,depend,depending,25,gui/gui/inc/TGStatusBar.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/inc/TGStatusBar.h,1,['depend'],['depending']
Integrability,"///<! Auxiliary class keeping tracking of analytical integration code",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooHistFunc.h:53,integrat,integration,53,roofit/roofitcore/inc/RooHistFunc.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooHistFunc.h,2,['integrat'],['integration']
Integrability,"///<! Counter to silence error messages when filling dataset.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooDataSet.h:31,message,messages,31,roofit/roofitcore/inc/RooDataSet.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooDataSet.h,1,['message'],['messages']
Integrability,"///<! Functor object to wrap any C++ callable object",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/TF1.h:24,wrap,wrap,24,hist/hist/inc/TF1.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/TF1.h,1,['wrap'],['wrap']
Integrability,"///<! Index category wrapped in a RooArgSet if needed internally",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooSimultaneous.h:21,wrap,wrapped,21,roofit/roofitcore/inc/RooSimultaneous.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooSimultaneous.h,1,['wrap'],['wrapped']
Integrability,"///<! Integrator used to sample bins.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooBinSamplingPdf.h:6,Integrat,Integrator,6,roofit/roofitcore/inc/RooBinSamplingPdf.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooBinSamplingPdf.h,1,['Integrat'],['Integrator']
Integrability,"///<! Integrator workspace",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRombergIntegrator.h:6,Integrat,Integrator,6,roofit/roofitcore/src/RooRombergIntegrator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRombergIntegrator.h,1,['Integrat'],['Integrator']
Integrability,"///<! Lower integration bound",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooBinIntegrator.h:12,integrat,integration,12,roofit/roofitcore/src/RooBinIntegrator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooBinIntegrator.h,1,['integrat'],['integration']
Integrability,"///<! Lower integration bounds",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRombergIntegrator.h:12,integrat,integration,12,roofit/roofitcore/src/RooRombergIntegrator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRombergIntegrator.h,1,['integrat'],['integration']
Integrability,"///<! Map for analytical integration codes",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsCachedPdf.h:25,integrat,integration,25,roofit/roofitcore/inc/RooAbsCachedPdf.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsCachedPdf.h,2,['integrat'],['integration']
Integrability,"///<! Map holding pointers to RooCatType instances. Only for legacy interface. Don't use if possible.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsCategory.h:68,interface,interface,68,roofit/roofitcore/inc/RooAbsCategory.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsCategory.h,1,['interface'],['interface']
Integrability,"///<! Normalization/Integration set manager",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooCacheManager.h:20,Integrat,Integration,20,roofit/roofitcore/inc/RooCacheManager.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooCacheManager.h,1,['Integrat'],['Integration']
Integrability,"///<! Numeric integrator of convolution integrand",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooNumConvolution.h:14,integrat,integrator,14,roofit/roofitcore/inc/RooNumConvolution.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooNumConvolution.h,1,['integrat'],['integrator']
Integrability,"///<! Original list of dependents",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFormula.h:23,depend,dependents,23,roofit/roofitcore/src/RooFormula.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFormula.h,1,['depend'],['dependents']
Integrability,"///<! Registry for analytical integration codes",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsCachedPdf.h:30,integrat,integration,30,roofit/roofitcore/inc/RooAbsCachedPdf.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsCachedPdf.h,1,['integrat'],['integration']
Integrability,"///<! Registry of analytical integration codes",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsAnaConvPdf.h:29,integrat,integration,29,roofit/roofitcore/inc/RooAbsAnaConvPdf.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsAnaConvPdf.h,1,['integrat'],['integration']
Integrability,"///<! Registry of component analytical integration codes",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAddModel.h:39,integrat,integration,39,roofit/roofitcore/inc/RooAddModel.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAddModel.h,2,['integrat'],['integration']
Integrability,"///<! Size of integration range",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooBinIntegrator.h:14,integrat,integration,14,roofit/roofitcore/src/RooBinIntegrator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooBinIntegrator.h,1,['integrat'],['integration']
Integrability,"///<! The integration cache manager",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/inc/RooStats/HistFactory/ParamHistFunc.h:10,integrat,integration,10,roofit/histfactory/inc/RooStats/HistFactory/ParamHistFunc.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/inc/RooStats/HistFactory/ParamHistFunc.h,3,['integrat'],['integration']
Integrability,"///<! Upper integration bound",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooBinIntegrator.h:12,integrat,integration,12,roofit/roofitcore/src/RooBinIntegrator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooBinIntegrator.h,1,['integrat'],['integration']
Integrability,"///<! Upper integration bounds; // Numerical integrator workspace",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRombergIntegrator.h:12,integrat,integration,12,roofit/roofitcore/src/RooRombergIntegrator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRombergIntegrator.h,2,['integrat'],"['integration', 'integrator']"
Integrability,"///<! collection interface (if any)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/inc/TBranchElement.h:17,interface,interface,17,tree/tree/inc/TBranchElement.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/inc/TBranchElement.h,1,['interface'],['interface']
Integrability,"///<! compression factor for messages send to the client",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/webgui6/inc/TWebCanvas.h:29,message,messages,29,gui/webgui6/inc/TWebCanvas.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/webgui6/inc/TWebCanvas.h,1,['message'],['messages']
Integrability,"///<! depending from compression level, "" : "" or "":""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/inc/TBufferJSON.h:6,depend,depending,6,io/io/inc/TBufferJSON.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/inc/TBufferJSON.h,1,['depend'],['depending']
Integrability,"///<! depending from compression level, "", "" or "",""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/inc/TBufferJSON.h:6,depend,depending,6,io/io/inc/TBufferJSON.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/inc/TBufferJSON.h,1,['depend'],['depending']
Integrability,"///<! geometry description, send to the client as first message",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/webviewer/inc/ROOT/RGeomViewer.hxx:56,message,message,56,geom/webviewer/inc/ROOT/RGeomViewer.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/webviewer/inc/ROOT/RGeomViewer.hxx,1,['message'],['message']
Integrability,"///<! hash of last send draw message, avoid looping",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/webgui6/inc/TWebCanvas.h:29,message,message,29,gui/webgui6/inc/TWebCanvas.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/webgui6/inc/TWebCanvas.h,1,['message'],['message']
Integrability,"///<! if server should run only https protocol",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/src/TCivetweb.h:38,protocol,protocol,38,net/http/src/TCivetweb.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/src/TCivetweb.h,1,['protocol'],['protocol']
Integrability,"///<! interface to SQL database",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/sql/inc/TSQLFile.h:6,interface,interface,6,io/sql/inc/TSQLFile.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/sql/inc/TSQLFile.h,1,['interface'],['interface']
Integrability,"///<! message logger",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/ClassInfo.h:6,message,message,6,tmva/tmva/inc/TMVA/ClassInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/ClassInfo.h,33,['message'],['message']
Integrability,"///<! message logger; // variables for JsMVA",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/SVWorkingSet.h:6,message,message,6,tmva/tmva/inc/TMVA/SVWorkingSet.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/SVWorkingSet.h,1,['message'],['message']
Integrability,"///<! message logger; /////////////////////////////////////////////////////////////////; // METHODS //; /////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/PDEFoam.h:6,message,message,6,tmva/tmva/inc/TMVA/PDEFoam.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/PDEFoam.h,1,['message'],['message']
Integrability,"///<! message logging service",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/LDA.h:6,message,message,6,tmva/tmva/inc/TMVA/LDA.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/LDA.h,1,['message'],['message']
Integrability,"///<! postponed messages, handled in timer",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/browserv7/inc/ROOT/RBrowser.hxx:16,message,messages,16,gui/browserv7/inc/ROOT/RBrowser.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/browserv7/inc/ROOT/RBrowser.hxx,1,['message'],['messages']
Integrability,"///<! the root node of the (wrapped) decision Tree",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/CCTreeWrapper.h:28,wrap,wrapped,28,tmva/tmva/inc/TMVA/CCTreeWrapper.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/CCTreeWrapper.h,1,['wrap'],['wrapped']
Integrability,"///<! time when last progress message was send",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/browserv7/inc/ROOT/RBrowser.hxx:30,message,message,30,gui/browserv7/inc/ROOT/RBrowser.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/browserv7/inc/ROOT/RBrowser.hxx,1,['message'],['message']
Integrability,"///<! timer to submit control messages",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/webgui6/inc/TWebCanvas.h:30,message,messages,30,gui/webgui6/inc/TWebCanvas.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/webgui6/inc/TWebCanvas.h,1,['message'],['messages']
Integrability,"///===- MachineOptimizationRemarkEmitter.cpp - Opt Diagnostic -*- C++ -*---===//; ///; /// Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; /// See https://llvm.org/LICENSE.txt for license information.; /// SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; ///; ///===---------------------------------------------------------------------===//; /// \file; /// Optimization diagnostic interfaces for machine passes. It's packaged as an; /// analysis pass so that by using this service passes become dependent on MBFI; /// as well. MBFI is used to compute the ""hotness"" of the diagnostic message.; ///; ///===---------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineOptimizationRemarkEmitter.cpp:420,interface,interfaces,420,interpreter/llvm-project/llvm/lib/CodeGen/MachineOptimizationRemarkEmitter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineOptimizationRemarkEmitter.cpp,3,"['depend', 'interface', 'message']","['dependent', 'interfaces', 'message']"
Integrability,"///===- MachineOptimizationRemarkEmitter.h - Opt Diagnostics -*- C++ -*----===//; ///; /// Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; /// See https://llvm.org/LICENSE.txt for license information.; /// SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; ///; ///===---------------------------------------------------------------------===//; /// \file; /// Optimization diagnostic interfaces for machine passes. It's packaged as an; /// analysis pass so that by using this service passes become dependent on MBFI; /// as well. MBFI is used to compute the ""hotness"" of the diagnostic message.; ///; ///===---------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineOptimizationRemarkEmitter.h:420,interface,interfaces,420,interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineOptimizationRemarkEmitter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineOptimizationRemarkEmitter.h,3,"['depend', 'interface', 'message']","['dependent', 'interfaces', 'message']"
Integrability,///@name Custom Blocks Runtime Interfaces; ///@{,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CodeGenModule.h:31,Interface,Interfaces,31,interpreter/llvm-project/clang/lib/CodeGen/CodeGenModule.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CodeGenModule.h,1,['Interface'],['Interfaces']
Integrability,"///@{; /// \name Mutation APIs; ///; /// These methods provide APIs for submitting updates to the DominatorTree and; /// the PostDominatorTree.; ///; /// Note: There are two strategies to update the DominatorTree and the; /// PostDominatorTree:; /// 1. Eager UpdateStrategy: Updates are submitted and then flushed; /// immediately.; /// 2. Lazy UpdateStrategy: Updates are submitted but only flushed when you; /// explicitly call Flush APIs. It is recommended to use this update strategy; /// when you submit a bunch of updates multiple times which can then; /// add up to a large number of updates between two queries on the; /// DominatorTree. The incremental updater can reschedule the updates or; /// decide to recalculate the dominator tree in order to speedup the updating; /// process depending on the number of updates.; ///; /// Although GenericDomTree provides several update primitives,; /// it is not encouraged to use these APIs directly.; /// Submit updates to all available trees.; /// The Eager Strategy flushes updates immediately while the Lazy Strategy; /// queues the updates.; ///; /// Note: The ""existence"" of an edge in a CFG refers to the CFG which DTU is; /// in sync with + all updates before that single update.; ///; /// CAUTION!; /// 1. It is required for the state of the LLVM IR to be updated; /// *before* submitting the updates because the internal update routine will; /// analyze the current state of the CFG to determine whether an update; /// is valid.; /// 2. It is illegal to submit any update that has already been submitted,; /// i.e., you are supposed not to insert an existent edge or delete a; /// nonexistent edge.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/DomTreeUpdater.h:792,depend,depending,792,interpreter/llvm-project/llvm/include/llvm/Analysis/DomTreeUpdater.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/DomTreeUpdater.h,2,"['depend', 'rout']","['depending', 'routine']"
Integrability,"///@}; ///@{; /// \name General Mutation API; ///; /// There are a very limited set of mutations allowed on the graph as a whole; /// once SCCs have started to be formed. These routines have strict contracts; /// but may be called at any point.; /// Remove a dead function from the call graph (typically to delete it).; ///; /// Note that the function must have an empty use list, and the call graph; /// must be up-to-date prior to calling this. That means it is by itself in; /// a maximal SCC which is by itself in a maximal RefSCC, etc. No structural; /// changes result from calling this routine other than potentially removing; /// entry points into the call graph.; ///; /// If SCC formation has begun, this function must not be part of the current; /// DFS in order to call this safely. Typically, the function will have been; /// fully visited by the DFS prior to calling this routine.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/LazyCallGraph.h:177,rout,routines,177,interpreter/llvm-project/llvm/include/llvm/Analysis/LazyCallGraph.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/LazyCallGraph.h,4,"['contract', 'rout']","['contracts', 'routine', 'routines']"
Integrability,"///@}; //____________________________________________________________________________; //; // Activation Functions; //____________________________________________________________________________; /** @name Activation Functions; * For each activation function, the low-level interface contains two routines.; * One that applies the activation function to a matrix and one that evaluate; * the derivatives of the activation function at the elements of a given matrix; * and writes the results into the result matrix.; */; ///@{",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/Architectures/Reference.h:274,interface,interface,274,tmva/tmva/inc/TMVA/DNN/Architectures/Reference.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/Architectures/Reference.h,2,"['interface', 'rout']","['interface', 'routines']"
Integrability,"///@}; //____________________________________________________________________________; //; // Activation Functions; //____________________________________________________________________________; /** @name Activation Functions; * For each activation function, the low-level interface contains two routines.; * One that applies the activation function to a matrix and one that evaluate; * the derivatives of the activation function at the elements of a given matrix; * and writes the results into the result matrix.; */; ///@{; /* impl using Matrix */; /*inline void evaluate(Matrix_t &A, EActivationFunction f); {; Tensor_t tA(A);; evaluate<TCpu<AReal>>(tA,f);; }*/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/Architectures/Cpu.h:274,interface,interface,274,tmva/tmva/inc/TMVA/DNN/Architectures/Cpu.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/Architectures/Cpu.h,2,"['interface', 'rout']","['interface', 'routines']"
Integrability,"///@}; //____________________________________________________________________________; //; // Activation Functions; //____________________________________________________________________________; /** @name Activation Functions; * For each activation function, the low-level interface contains two routines.; * One that applies the activation function to a matrix and one that evaluate; * the derivatives of the activation function at the elements of a given matrix; * and writes the results into the result matrix.; */; ///@{; /* impl using Matrix */; /*inline void evaluate(Matrix_t &A, EActivationFunction f); {; Tensor_t tA(A);; evaluate<TCuda<AReal>>(tA,f);; }*/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/Architectures/Cuda.h:274,interface,interface,274,tmva/tmva/inc/TMVA/DNN/Architectures/Cuda.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/Architectures/Cuda.h,2,"['interface', 'rout']","['interface', 'routines']"
Integrability,///@}; //____________________________________________________________________________; //; // Additional Arithmetic Functions; //____________________________________________________________________________; /** @name Additional Arithmetic Functions; *; * Additional arithmetic on CUDA matrices used to implement the low-level; * interface.; */; /** In-place Hadamard (element-wise) product of matrices \p A and \p B; * with the result being written into \p A.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/Architectures/TCudnn.h:329,interface,interface,329,tmva/tmva/inc/TMVA/DNN/Architectures/TCudnn.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/Architectures/TCudnn.h,1,['interface'],['interface']
Integrability,///@}; //____________________________________________________________________________; //; // Additional Arithmetic Functions; //____________________________________________________________________________; /** @name Additional Arithmetic Functions; *; * Additional arithmetic on CUDA matrices used to implement the low-level; * interface.; */; ///@{; /** Standard multiplication of two matrices \p A and \p B with the result being; * written into C.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/Architectures/Cpu.h:329,interface,interface,329,tmva/tmva/inc/TMVA/DNN/Architectures/Cpu.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/Architectures/Cpu.h,2,['interface'],['interface']
Integrability,"///@}; //____________________________________________________________________________; //; // Initialization; //____________________________________________________________________________; /** @name Initialization; * For each initialization method, one function in the low-level interface; * is provided. The naming scheme is <p>Initialize<Type></p> for a given; * initialization method Type.; */; ///@{",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/Architectures/Cpu.h:280,interface,interface,280,tmva/tmva/inc/TMVA/DNN/Architectures/Cpu.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/Architectures/Cpu.h,2,['interface'],['interface']
Integrability,"///@}; //____________________________________________________________________________; //; // Initialization; //____________________________________________________________________________; /** @name Initialization; * For each initialization method, one function in the low-level interface; * is provided. The naming scheme is <p>Initialize`<Type>`</p> for a given; * initialization method Type.; */; ///@{",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/Architectures/Cuda.h:280,interface,interface,280,tmva/tmva/inc/TMVA/DNN/Architectures/Cuda.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/Architectures/Cuda.h,1,['interface'],['interface']
Integrability,"///@}; //____________________________________________________________________________; //; // Initialization; //____________________________________________________________________________; /** @name Initialization; * For each initialization method, one function in the low-level interface; * is provided. The naming scheme is `Initialize<Type>` for a given; * initialization method Type.; */; ///@{",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/Architectures/Reference.h:280,interface,interface,280,tmva/tmva/inc/TMVA/DNN/Architectures/Reference.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/Architectures/Reference.h,1,['interface'],['interface']
Integrability,"///@}; //____________________________________________________________________________; //; // Loss Functions; //____________________________________________________________________________; /** @name Loss Functions; * Loss functions compute a scalar value given the \p output of the network; * for a given training input and the expected network prediction \p Y that; * quantifies the quality of the prediction. For each function also a routing; * that computes the gradients (suffixed by Gradients) must be provided for; * the starting of the backpropagation algorithm.; */; ///@{",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/Architectures/Cpu.h:437,rout,routing,437,tmva/tmva/inc/TMVA/DNN/Architectures/Cpu.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/Architectures/Cpu.h,4,['rout'],['routing']
Integrability,///Generates a message send where the super is the receiver. This is a message; ///send to self with special delivery semantics indicating which class's method; ///should be called.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGObjCGNU.cpp:15,message,message,15,interpreter/llvm-project/clang/lib/CodeGen/CGObjCGNU.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGObjCGNU.cpp,2,['message'],['message']
Integrability,"///Helper class used by SOFIEFunctor to wrap the; ///infer signature interface to RDataFrame",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/sofie/inc/TMVA/SOFIEHelpers.hxx:40,wrap,wrap,40,tmva/sofie/inc/TMVA/SOFIEHelpers.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/sofie/inc/TMVA/SOFIEHelpers.hxx,2,"['interface', 'wrap']","['interface', 'wrap']"
Integrability,"///Little adapter that gives a bracket operator to types that don't; ///have one. It completely ignores the index and returns a constant.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitmore/src/BracketAdapters.h:10,adapter,adapter,10,roofit/roofitmore/src/BracketAdapters.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitmore/src/BracketAdapters.h,1,['adapter'],['adapter']
Integrability,"///Wrap Reduce function",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/Executor.h:3,Wrap,Wrap,3,tmva/tmva/inc/TMVA/Executor.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/Executor.h,1,['Wrap'],['Wrap']
Integrability,"///\brief All seen declarations, except the deserialized ones.; /// If we collect the declarations by walking the clang::DeclContext we; /// will miss the injected onces (eg. template instantiations).; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Transaction.h:155,inject,injected,155,interpreter/cling/include/cling/Interpreter/Transaction.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Transaction.h,1,['inject'],['injected']
Integrability,"///\brief Appends a declaration group and source from which consumer; /// interface it came from to the transaction.; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Transaction.h:74,interface,interface,74,interpreter/cling/include/cling/Interpreter/Transaction.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Transaction.h,1,['interface'],['interface']
Integrability,"///\brief Builds the actual call expression, which is put in the place of; /// the dependent AST node.; ///; /// @param[in] InstTy The deduced type used to create instantiation.; /// @param[in] SubTree The AST node or subtree, which is being replaced.; /// @param[in] CallArgs Proper arguments, which the call will use.; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLookup.h:83,depend,dependent,83,interpreter/cling/lib/Interpreter/DynamicLookup.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLookup.h,1,['depend'],['dependent']
Integrability,"///\brief Cache of compiled destructors wrappers.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h:40,wrap,wrappers,40,interpreter/cling/include/cling/Interpreter/Interpreter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h,1,['wrap'],['wrappers']
Integrability,"///\brief Checks if the given node is marked as dependent by us.; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLookup.h:48,depend,dependent,48,interpreter/cling/lib/Interpreter/DynamicLookup.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLookup.h,1,['depend'],['dependent']
Integrability,"///\brief Checks whether the declaration is a interpreter-generated wrapper; /// function.; ///; ///\param[in] ND - The decl being checked. If null returns false.; ///; ///\returns true if the decl is a interpreter-generated wrapper function.; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Utils/AST.h:68,wrap,wrapper,68,interpreter/cling/include/cling/Utils/AST.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Utils/AST.h,2,['wrap'],['wrapper']
Integrability,"///\brief Cling's execution engine - a well wrapped llvm execution engine.; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h:44,wrap,wrapped,44,interpreter/cling/include/cling/Interpreter/Interpreter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h,1,['wrap'],['wrapped']
Integrability,"///\brief Code completes user input.; ///; /// The interface circumvents the most of the extra work necessary to; /// code complete code.; ///; /// @param[in] line - The input containing the string to be completed.; /// @param[in] cursor - The offset for the completion point.; /// @param[out] completions - The results for teh completion; ///; ///\returns Whether the operation was fully successful.; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h:51,interface,interface,51,interpreter/cling/include/cling/Interpreter/Interpreter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h,1,['interface'],['interface']
Integrability,"///\brief Compiles input line and runs.; ///; /// The interface is the fastest way to compile and run a statement or; /// expression. It just wraps the input into a function definition and runs; /// that function, without any other ""magic"".; ///; /// @param[in] input - The input containing only expressions.; ///; ///\returns Whether the operation was fully successful.; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h:54,interface,interface,54,interpreter/cling/include/cling/Interpreter/Interpreter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h,2,"['interface', 'wrap']","['interface', 'wraps']"
Integrability,"///\brief Compiles input line, which contains only expressions and prints; /// out the result of its execution.; ///; /// The interface circumvents the most of the extra work necessary extract; /// the declarations from the input.; ///; /// @param[in] input - The input containing only expressions.; /// @param[in,out] V - The value of the executed input. Must be; /// initialized to point to the return value's location if the; /// expression result is an aggregate.; ///; ///\returns Whether the operation was fully successful.; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h:126,interface,interface,126,interpreter/cling/include/cling/Interpreter/Interpreter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h,1,['interface'],['interface']
Integrability,"///\brief Compiles input line, which contains only expressions.; ///; /// The interface circumvents the most of the extra work necessary extract; /// the declarations from the input.; ///; /// @param[in] input - The input containing only expressions; /// @param[in,out] V - The value of the executed input. Must be; /// initialized to point to the return value's location if the; /// expression result is an aggregate.; ///; ///\returns Whether the operation was fully successful.; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h:78,interface,interface,78,interpreter/cling/include/cling/Interpreter/Interpreter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h,1,['interface'],['interface']
Integrability,"///\brief Compiles input line, which doesn't contain statements.; ///; /// The interface circumvents the most of the extra work necessary to; /// compile and run statements.; ///; /// @param[in] input - The input containing only declarations (aka; /// Top Level Declarations); /// @param[out] T - The cling::Transaction of the input; ///; ///\returns Whether the operation was fully successful.; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h:79,interface,interface,79,interpreter/cling/include/cling/Interpreter/Interpreter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h,1,['interface'],['interface']
Integrability,"///\brief Compiles the given input.; ///; /// This interface helps to run everything that cling can run. From; /// declaring header files to running or evaluating single statements.; /// Note that this should be used when there is no idea of what kind of; /// input is going to be processed. Otherwise if is known, for example; /// only header files are going to be processed it is much faster to run the; /// specific interface for doing that - in the particular case - declare().; ///; ///\param[in] input - The input to be compiled.; ///\param[in,out] V - The result of the evaluation of the input. Must be; /// initialized to point to the return value's location if the; /// expression result is an aggregate.; ///\param[out] T - The cling::Transaction of the compiled input.; ///\param[in] disableValuePrinting - Whether to echo the expression result.; ///; ///\returns Whether the operation was fully successful.; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h:51,interface,interface,51,interpreter/cling/include/cling/Interpreter/Interpreter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h,2,['interface'],['interface']
Integrability,"///\brief Contains the AST transformers operating on the wrapper.; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclCollector.h:57,wrap,wrapper,57,interpreter/cling/lib/Interpreter/DeclCollector.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclCollector.h,1,['wrap'],['wrapper']
Integrability,"///\brief Describes the return result of the different routines that do the; /// incremental compilation.; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h:55,rout,routines,55,interpreter/cling/include/cling/Interpreter/Interpreter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h,1,['rout'],['routines']
Integrability,"///\brief Determine whether the source needs to be moved into a function.; ///; /// If so, move possible includes directives out of the future body of the; /// function and return the position where the function signature should be; /// inserted.; ///; /// \param source - The source code to analyze; out: the source with; /// re-arranged includes.; /// \param LangOpts - LangOptions to use for lexing.; /// \return The position where the function signature and '{' should be; /// inserted; std::string::npos if this source should not be wrapped.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Utils/SourceNormalization.h:538,wrap,wrapped,538,interpreter/cling/include/cling/Utils/SourceNormalization.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Utils/SourceNormalization.h,1,['wrap'],['wrapped']
Integrability,"///\brief Each declaration group came through different interface at; /// different time. We are being conservative and we want to keep all the; /// call sequence that originally occurred in clang.; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Transaction.h:56,interface,interface,56,interpreter/cling/include/cling/Interpreter/Transaction.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Transaction.h,1,['interface'],['interface']
Integrability,"///\brief Each macro pair (is this the same as for decls?)came; /// through different interface at; /// different time. We are being conservative and we want to keep all the; /// call sequence that originally occurred in clang.; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Transaction.h:86,interface,interface,86,interpreter/cling/include/cling/Interpreter/Transaction.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Transaction.h,1,['interface'],['interface']
Integrability,"///\brief Generate an new fatbin file with the path in; /// CudaGpuBinaryFileNames from input line, which doesn't contain; /// statements.; ///; /// The interface circumvents the most of the extra work necessary to; /// compile and run statements.; ///; /// @param[in] input - The input containing only declarations (aka; /// Top Level Declarations); ///; ///\returns true, if all stages of generating fatbin runs right and a new; /// fatbin file is written.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/IncrementalCUDADeviceCompiler.h:153,interface,interface,153,interpreter/cling/include/cling/Interpreter/IncrementalCUDADeviceCompiler.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/IncrementalCUDADeviceCompiler.h,1,['interface'],['interface']
Integrability,"///\brief Generate an new fatbin file with the path in; /// CudaGpuBinaryFileNames.; ///; /// This interface helps to run everything that the device compiler can run.; /// Note that this should be used when there is no idea of what kind of; /// input is going to be processed. Otherwise if is known, for example; /// only header files are going to be processed it is much faster to run the; /// specific interface for doing that - in the particular case - declare().; ///; ///\param [in] input - The input directly from the UI. Attention, the string; /// must not be wrapped or transformed.; ///; ///\returns true, if all stages of generating fatbin runs right and a new; /// fatbin file is written.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/IncrementalCUDADeviceCompiler.h:99,interface,interface,99,interpreter/cling/include/cling/Interpreter/IncrementalCUDADeviceCompiler.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/IncrementalCUDADeviceCompiler.h,3,"['interface', 'wrap']","['interface', 'wrapped']"
Integrability,"///\brief Generates forward declarations for a Decl or Transaction; /// by implementing a DeclVisitor; ///; /// Important Points:; /// 1. Function arguments having an EnumConstant as a default value; /// are printed in the following way:; /// enum E {E_a, E_b};; /// void foo(E e = E_b){}; /// Generates:; /// enum E : unsigned int;; /// void foo(E e = E(1));; /// 1 is the integral value of E_b.; ///; /// 2. Decls, in general, are skipped when they depend on things; /// that were previously skipped.; /// The set of strings, m_IncompatibleNames facilitate this.; /// Examine the shouldSkip functions to see why specific types; /// are skipped.; ///; /// 3. Log file:; /// The name of the file depends on the name of the file where; /// the forward declarations are written.; /// So, fwd.h produces a corresponding fwd.h.skipped, when; /// output logging is enabled.; /// The log messages are written in the shouldSkip functions to; /// simplify the design.; ///; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ForwardDeclPrinter.h:451,depend,depend,451,interpreter/cling/lib/Interpreter/ForwardDeclPrinter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ForwardDeclPrinter.h,3,"['depend', 'message']","['depend', 'depends', 'messages']"
Integrability,"///\brief Generic interface to value printing.; ///; /// Can be re-implemented to print type-specific details, e.g. as; ///\code; /// template <typename POSSIBLYDERIVED>; /// std::string printValue(const MyClass* const p, POSSIBLYDERIVED* ac,; /// const Value& V);; ///\endcode",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Value.h:18,interface,interface,18,interpreter/cling/include/cling/Interpreter/Value.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Value.h,1,['interface'],['interface']
Integrability,"///\brief Get an error message from the last Windows API; ///; /// \param [in] Prefix - Prefix the message with this (ex. API call name); ///; /// \returns true if ::GetLastError returned an error code; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Utils/Platform.h:23,message,message,23,interpreter/cling/include/cling/Utils/Platform.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Utils/Platform.h,2,['message'],['message']
Integrability,"///\brief Interface to support locking the interpreter state in case of; /// concurrent usage.; ///; /// Cling assumes that any of its function is invoked in a locked context,; /// but before invoking user code (e.g. static initialization or value; /// printing) cling will calling `EnteringUserCode()`, and once; /// done call `ReturnedFromUserCode()`. Typically the user provided locks; /// would be unlock by `EnteringUserCode()` and lock back in; /// `ReturnedFromUserCode()`. State can be returned from EnteringUserCode; /// and made use of in ReturnedFromUserCode(), to identify pairs of these; /// calls.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/InterpreterCallbacks.h:10,Interface,Interface,10,interpreter/cling/include/cling/Interpreter/InterpreterCallbacks.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/InterpreterCallbacks.h,1,['Interface'],['Interface']
Integrability,"///\brief Our JIT interface.; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalExecutor.h:18,interface,interface,18,interpreter/cling/lib/Interpreter/IncrementalExecutor.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalExecutor.h,1,['interface'],['interface']
Integrability,"///\brief Performs semantic checking on a newly-extracted tag declaration.; ///; /// This routine performs all of the type-checking required for a tag; /// declaration once it has been built. It is used both to check tags before; /// they have been moved onto the global scope.; ///; /// Sets NewTD->isInvalidDecl if an error was encountered.; ///; ///\returns true if the tag declaration is redeclaration.; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclExtractor.h:90,rout,routine,90,interpreter/cling/lib/Interpreter/DeclExtractor.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclExtractor.h,1,['rout'],['routine']
Integrability,"///\brief Prints out the help message with the description of the meta; /// commands.; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/MetaProcessor/MetaSema.h:30,message,message,30,interpreter/cling/include/cling/MetaProcessor/MetaSema.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/MetaProcessor/MetaSema.h,1,['message'],['message']
Integrability,"///\brief Prompt input can look weird for the compiler, e.g.; /// void __cling_prompt() { sin(0.1); } // warning: unused function call; /// This flag suppresses these warnings; it should be set whenever input; /// is wrapped.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/CompilationOptions.h:217,wrap,wrapped,217,interpreter/cling/include/cling/Interpreter/CompilationOptions.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/CompilationOptions.h,1,['wrap'],['wrapped']
Integrability,"///\brief Reflection information query interface. The class performs lookups; /// in the currently loaded information in the AST, using the same Parser,; /// Sema and Preprocessor objects.; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/LookupHelper.h:39,interface,interface,39,interpreter/cling/include/cling/Interpreter/LookupHelper.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/LookupHelper.h,1,['interface'],['interface']
Integrability,"///\brief Reports the last Windows API error (currently to cling::errs); ///; /// \param [in] Prefix - Prefix the message with this; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Utils/Platform.h:114,message,message,114,interpreter/cling/include/cling/Utils/Platform.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Utils/Platform.h,1,['message'],['message']
Integrability,"///\brief Returns the current or last Transactions source location.; ///; ///\param[in] skipWrapper - skip the length of a cling wrapper; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h:129,wrap,wrapper,129,interpreter/cling/include/cling/Interpreter/Interpreter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h,1,['wrap'],['wrapper']
Integrability,"///\brief Returns the most recent transaction with an input line wrapper,; /// which could well be the current one.; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalParser.h:65,wrap,wrapper,65,interpreter/cling/lib/Interpreter/IncrementalParser.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalParser.h,1,['wrap'],['wrapper']
Integrability,"///\brief Rolls back given transaction from the AST.; ///; /// Removing includes reseting various internal stuctures in the compiler to; /// their previous states. For example it resets the lookup tables if the; /// declaration has name and can be looked up; Unloads the redeclaration; /// chain if the declaration was redeclarable and so on.; /// Note1: that the code generated for the declaration is not removed yet.; /// Note2: does not do dependency analysis.; ///; ///\param[in] T - The transaction to be removed.; ///\returns true on success.; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/TransactionUnloader.h:443,depend,dependency,443,interpreter/cling/lib/Interpreter/TransactionUnloader.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/TransactionUnloader.h,1,['depend'],['dependency']
Integrability,"///\brief Runs a wrapper function.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalExecutor.h:17,wrap,wrapper,17,interpreter/cling/lib/Interpreter/IncrementalExecutor.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalExecutor.h,1,['wrap'],['wrapper']
Integrability,"///\brief Runs given wrapper function.; ///; ///\param [in] fname - The function name.; ///\param [in,out] res - The return result of the run function. Must be; /// initialized to point to the return value's location if the; /// expression result is an aggregate.; ///; ///\returns The result of the execution.; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h:21,wrap,wrapper,21,interpreter/cling/include/cling/Interpreter/Interpreter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h,1,['wrap'],['wrapper']
Integrability,"///\brief STL interface to the stored diagnostics; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Utils/Diagnostics.h:14,interface,interface,14,interpreter/cling/include/cling/Utils/Diagnostics.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Utils/Diagnostics.h,1,['interface'],['interface']
Integrability,"///\brief Scans the wrapper for declarations and extracts them onto the; /// global scope.; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclExtractor.h:20,wrap,wrapper,20,interpreter/cling/lib/Interpreter/DeclExtractor.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclExtractor.h,1,['wrap'],['wrapper']
Integrability,"///\brief Serves as DeclCollector's connector to the PPCallbacks interface.; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclCollector.cpp:65,interface,interface,65,interpreter/cling/lib/Interpreter/DeclCollector.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclCollector.cpp,1,['interface'],['interface']
Integrability,"///\brief Surrounds member accesses into dependent types; remove on; /// subsitution of its child expression.; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLookup.h:41,depend,dependent,41,interpreter/cling/lib/Interpreter/DynamicLookup.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLookup.h,1,['depend'],['dependent']
Integrability,"///\brief The 'stderr' stream. llvm::raw_ostream wrapper of std::cerr; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Utils/Output.h:49,wrap,wrapper,49,interpreter/cling/include/cling/Utils/Output.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Utils/Output.h,1,['wrap'],['wrapper']
Integrability,"///\brief The 'stdout' stream. llvm::raw_ostream wrapper of std::cout; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Utils/Output.h:49,wrap,wrapper,49,interpreter/cling/include/cling/Utils/Output.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Utils/Output.h,1,['wrap'],['wrapper']
Integrability,"///\brief The wrapper function produced by the intepreter if any.; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Transaction.h:14,wrap,wrapper,14,interpreter/cling/include/cling/Interpreter/Transaction.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Transaction.h,1,['wrap'],['wrapper']
Integrability,"///\brief Thin wrapper class for tracking the order of insertion into a; /// std::unordered_map.; ///; /// Only supports 'emplace' and '[Key]' for insertion of values, and adds an; /// additional parameter to 'erase' so that a mapped value can be moved into; /// local storage before erasing the iterator occurs.; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Utils/OrderedMap.h:15,wrap,wrapper,15,interpreter/cling/include/cling/Utils/OrderedMap.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Utils/OrderedMap.h,1,['wrap'],['wrapper']
Integrability,"///\brief Tries to attach a value printing mechanism to the given decl group; /// ref.; ///; ///\param[in] FD - wrapper function that the value printer will attached to.; ///; ///\returns true if the attachment was considered as success. I.e. even if; /// even if the value printer wasn't attached because of the compilation; /// options disallowint it - it will return still true. Returns false on; /// critical error.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ValuePrinterSynthesizer.h:112,wrap,wrapper,112,interpreter/cling/lib/Interpreter/ValuePrinterSynthesizer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ValuePrinterSynthesizer.h,1,['wrap'],['wrapper']
Integrability,"///\brief Unloads a single decl. It must not be in any other transaction.; /// This doesn't do dependency tracking. Use with caution.; ///; ///\param[in] D - The decl to be removed.; ///; ///\returns true on success; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/TransactionUnloader.h:95,depend,dependency,95,interpreter/cling/lib/Interpreter/TransactionUnloader.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/TransactionUnloader.h,1,['depend'],['dependency']
Integrability,"///\brief Worker function, building block for interpreter's public; /// interfaces.; ///; ///\param [in] input - The input being compiled.; ///\param [in] CompilationOptions - The option set driving the compilation.; ///\param [in,out] V - The result of the evaluation of the input. Must be; /// initialized to point to the return value's location if the; /// expression result is an aggregate.; ///\param [out] T - The cling::Transaction of the compiled input.; ///\param [in] wrapPoint - Where in input to begin the wrapper; ///; ///\returns Whether the operation was fully successful.; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h:72,interface,interfaces,72,interpreter/cling/include/cling/Interpreter/Interpreter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h,3,"['interface', 'wrap']","['interfaces', 'wrapPoint', 'wrapper']"
Integrability,"///\brief Worker function, building block for interpreter's public; /// interfaces.; ///; ///\param [in] input - The input being compiled.; ///\param [in] CompilationOptions - The option set driving the compilation.; ///\param [out] T - The cling::Transaction of the compiled input.; ///; ///\returns Whether the operation was fully successful.; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h:72,interface,interfaces,72,interpreter/cling/include/cling/Interpreter/Interpreter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h,1,['interface'],['interfaces']
Integrability,"///\brief Wrap up the ptx_code in the NVIDIA fatbinary format. The fatbin; /// code is written to m_FatbinFilePath.; ///; ///\returns True, if the fatbinary tool returns 0.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/IncrementalCUDADeviceCompiler.h:10,Wrap,Wrap,10,interpreter/cling/include/cling/Interpreter/IncrementalCUDADeviceCompiler.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/IncrementalCUDADeviceCompiler.h,1,['Wrap'],['Wrap']
Integrability,"///\brief Wrappers around buffered llvm::raw_ostreams.; /// outstring<N> with N > 0 are the fastest, using a stack allocated buffer.; /// outstring<0> outputs directly into a std:string.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Utils/Output.h:10,Wrap,Wrappers,10,interpreter/cling/include/cling/Utils/Output.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Utils/Output.h,1,['Wrap'],['Wrappers']
Integrability,"///\brief Wraps a given input.; ///; /// The interpreter must be able to run statements on the fly, which is not; /// C++ standard-compliant operation. In order to do that we must wrap the; /// input into a artificial function, containing the statements and run it.; ///\param [in] Input - The input to wrap.; ///\param [out] Buffer - string to store input if wrapped (can be Input).; ///\param [in/out] WrapPoint - The position in Input to add the wrapper.; /// On exit WrapPoint is updated to the position of Input in Buffer.; ///; ///\returns A reference to Buffer when wrapped, otherwise a ref to Input; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h:10,Wrap,Wraps,10,interpreter/cling/include/cling/Interpreter/Interpreter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h,8,"['Wrap', 'wrap']","['WrapPoint', 'Wraps', 'wrap', 'wrapped', 'wrapper']"
Integrability,"///\brief Wraps the declaration into declaration group and appends it to; /// the transaction as if it was seen through HandleTopLevelDecl, even if; /// it was completed and ready for codegenning.; /// NOTE: Please use with caution!; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Transaction.h:10,Wrap,Wraps,10,interpreter/cling/include/cling/Interpreter/Transaction.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Transaction.h,1,['Wrap'],['Wraps']
Integrability,"///\brief Wraps the declaration into declaration group and appends it to; /// the transaction as if it was seen through HandleTopLevelDecl.; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Transaction.h:10,Wrap,Wraps,10,interpreter/cling/include/cling/Interpreter/Transaction.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Transaction.h,1,['Wrap'],['Wraps']
Integrability,"///\brief \c delete t; \c if t is dependent, the whole stmt must be escaped.; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLookup.h:34,depend,dependent,34,interpreter/cling/lib/Interpreter/DynamicLookup.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLookup.h,1,['depend'],['dependent']
Integrability,"///\brief; /// Here we don't want to depend on the JIT runFunction, because of its; /// limitations, when it comes to return value handling. There it is; /// not clear who provides the storage and who cleans it up in a; /// platform independent way.; //; /// Depending on the type we need to synthesize a call to cling:; /// 0) void : do nothing;; /// 1) enum, integral, float, double, referece, pointer types :; /// call to cling::internal::setValueNoAlloc(...);; /// 2) object type (alloc on the stack) :; /// cling::internal::setValueWithAlloc; /// 2.1) constant arrays:; /// call to cling::runtime::internal::copyArray(...); ///; /// We need to synthesize later:; /// Wrapper has signature: void w(cling::Value V); /// case 1):; /// setValueNoAlloc(gCling, &SVR, lastExprTy, lastExpr()); /// case 2):; /// new (setValueWithAlloc(gCling, &SVR, lastExprTy)) (lastExpr); /// case 2.1):; /// copyArray(src, placement, N); ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ValueExtractionSynthesizer.h:37,depend,depend,37,interpreter/cling/lib/Interpreter/ValueExtractionSynthesizer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ValueExtractionSynthesizer.h,3,"['Depend', 'Wrap', 'depend']","['Depending', 'Wrapper', 'depend']"
Integrability,"///\name Generator functions; ///\{; /// Open a file with `name` for reading.; ///; /// \note: Synchronizes multi-threaded accesses through locks.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/v7/inc/ROOT/RFile.hxx:95,Synchroniz,Synchronizes,95,io/io/v7/inc/ROOT/RFile.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/v7/inc/ROOT/RFile.hxx,1,['Synchroniz'],['Synchronizes']
Integrability,"///\name Iterator interfaces; ///\{; /// Get a const_iterator pointing to the first regular bin.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RAxis.hxx:18,interface,interfaces,18,hist/histv7/inc/ROOT/RAxis.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RAxis.hxx,1,['interface'],['interfaces']
Integrability,"///\returns the path separator slash or backslash depending on the platform.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/foundation/res/ROOT/FoundationUtils.hxx:50,depend,depending,50,core/foundation/res/ROOT/FoundationUtils.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/res/ROOT/FoundationUtils.hxx,1,['depend'],['depending']
Integrability,"///\{; ///\name Global Palettes; /// Register a palette in the set of global palettes, making it available to `GetPalette()`.; /// This function is not thread safe; any concurrent call to global Palette manipulation must be synchronized!",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpadv7/inc/ROOT/RPalette.hxx:224,synchroniz,synchronized,224,graf2d/gpadv7/inc/ROOT/RPalette.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpadv7/inc/ROOT/RPalette.hxx,1,['synchroniz'],['synchronized']
Integrability,"///\}; /// Set the new directory used for cached reads, returns the old directory.; ///; /// \note: Synchronizes multi-threaded accesses through locks.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/v7/inc/ROOT/RFile.hxx:100,Synchroniz,Synchronizes,100,io/io/v7/inc/ROOT/RFile.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/v7/inc/ROOT/RFile.hxx,1,['Synchroniz'],['Synchronizes']
Integrability,///}; /// The data structure for the nodes of a dependency graph,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h:48,depend,dependency,48,interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h,1,['depend'],['dependency']
Integrability,"//3-D View abstract interface for 3-D views",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/inc/TView.h:20,interface,interface,20,graf2d/gpad/inc/TView.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/inc/TView.h,1,['interface'],['interface']
Integrability,"//::Error(""GetServiceByPort"", ""no service \""%d\"" with protocol \""%s\"""",; // port, kProtocolName);",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/unix/src/TUnixSystem.cxx:54,protocol,protocol,54,core/unix/src/TUnixSystem.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/unix/src/TUnixSystem.cxx,1,['protocol'],['protocol']
Integrability,"//; // 'file' protocol",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TFile.cxx:14,protocol,protocol,14,io/io/src/TFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TFile.cxx,1,['protocol'],['protocol']
Integrability,"//; // Attempt to combine actions. If all combining attempts failed, just return; // the tool of the provided action. At the end we attempt to combine the; // action with any preprocessor action it may depend on.; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/Driver.cpp:202,depend,depend,202,interpreter/llvm-project/clang/lib/Driver/Driver.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/Driver.cpp,1,['depend'],['depend']
Integrability,"//; // Author: Sergey Linev 4.03.2014; /*************************************************************************; * Copyright (C) 1995-2019, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /**; \class TBufferJSON; \ingroup IO. Class for serializing object to and from JavaScript Object Notation (JSON) format.; It creates such object representation, which can be directly; used in JavaScript ROOT (JSROOT) for drawing. TBufferJSON implements TBuffer interface, therefore most of; ROOT and user classes can be converted into JSON.; There are certain limitations for classes with custom streamers,; which should be equipped specially for this purposes (see TCanvas::Streamer(); as example). To perform conversion into JSON, one should use TBufferJSON::ToJSON method:; ~~~{.cpp}; TH1 *h1 = new TH1I(""h1"", ""title"", 100, 0, 10);; h1->FillRandom(""gaus"",10000);; TString json = TBufferJSON::ToJSON(h1);; ~~~. To reconstruct object from the JSON string, one should do:; ~~~{.cpp}; TH1 *hnew = nullptr;; TBufferJSON::FromJSON(hnew, json);; if (hnew) hnew->Draw(""hist"");; ~~~; JSON does not include stored class version, therefore schema evolution; (reading of older class versions) is not supported. JSON should not be used as; persistent storage for object data - only for live applications. All STL containers by default converted into JSON Array. Vector of integers:; ~~~{.cpp}; std::vector<int> vect = {1,4,7};; auto json = TBufferJSON::ToJSON(&vect);; ~~~; Will produce JSON code ""[1, 4, 7]"". There are special handling for map classes like `map` and `multimap`.; They will create Array of pair objects with ""first"" and ""second"" as data members. Code:; ~~~{.cpp}; std::map<int,string> m;; m[1] = ""number 1"";; m[2] = ""number 2"";; auto json = TBufferJSON::ToJSON(&m);; ~~~; Will generate json string",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TBufferJSON.cxx:658,interface,interface,658,io/io/src/TBufferJSON.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TBufferJSON.cxx,1,['interface'],['interface']
Integrability,"//; // Class describing a basic message; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/rpdutils/res/rpdconn.h:32,message,message,32,net/rpdutils/res/rpdconn.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/rpdutils/res/rpdconn.h,1,['message'],['message']
Integrability,"//; // Class describing a basic message; //; ////////////////////////////////////////////////////////////////////////////////; /// Add int 'i' to the internal buffer",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/rpdutils/src/rpdconn.cxx:32,message,message,32,net/rpdutils/src/rpdconn.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/rpdutils/src/rpdconn.cxx,1,['message'],['message']
Integrability,"//; // Client ""protocol changes""; //; // This was in TNetFile and TAuthenticate before, but after the introduction; // of TSocket::CreateAuthSocket the common place for all the clients is TSocket,; // so this seems to be the right place for a version number; //; // 7: added support for ReOpen(), kROOTD_BYE and kROOTD_PROTOCOL2; // 8: added support for update being a create (open stat = 2 and not 1); // 9: added new authentication features (see README.AUTH); // 10: added support for authenticated socket via TSocket::CreateAuthSocket(...); // 11: modified SSH protocol + support for server 'no authentication' mode; // 12: add random tags to avoid reply attacks (password+token); // 13: authentication re-organization; cleanup in PROOF; // 14: support for SSH authentication via SSH tunnel; // 15: cope with fixes in TUrl::GetFile; // 16: add env setup message exchange; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TSocket.cxx:15,protocol,protocol,15,net/net/src/TSocket.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TSocket.cxx,3,"['message', 'protocol']","['message', 'protocol']"
Integrability,"//; // Collect information about type type of a function parameter; // needed for building the wrapper function.; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx:95,wrap,wrapper,95,core/metacling/src/TClingCallFunc.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx,1,['wrap'],['wrapper']
Integrability,"//; // Compile the wrapper code.; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/Interpreter.cpp:19,wrap,wrapper,19,interpreter/cling/lib/Interpreter/Interpreter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/Interpreter.cpp,1,['wrap'],['wrapper']
Integrability,"//; // Conversion to unsigned i64 is implemented with a select,; // depending on whether the source value fits in the range; // of a signed i64. Let Thresh be the FP equivalent of; // 0x8000000000000000ULL.; //; // Adjust = (Value >= Thresh) ? 0x80000000 : 0;; // FltOfs = (Value >= Thresh) ? 0x80000000 : 0;; // FistSrc = (Value - FltOfs);; // Fist-to-mem64 FistSrc; // Add 0 or 0x800...0ULL to the 64-bit result, which is equivalent; // to XOR'ing the high 32 bits with Adjust.; //; // Being a power of 2, Thresh is exactly representable in all FP formats.; // For X87 we'd like to use the smallest FP type for this constant, but; // for DAG type consistency we have to match the FP operand type.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp:68,depend,depending,68,interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,1,['depend'],['depending']
Integrability,"//; // For each extra loop iteration, create a copy of the loop's basic blocks; // and generate a condition that branches to the copy depending on the; // number of 'left over' iterations.; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/LoopUnrollRuntime.cpp:134,depend,depending,134,interpreter/llvm-project/llvm/lib/Transforms/Utils/LoopUnrollRuntime.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/LoopUnrollRuntime.cpp,1,['depend'],['depending']
Integrability,"//; // Functions for conveniently building stencils.; //; /// Generates the source of the expression bound to \p Id, wrapping it in; /// parentheses if it may parse differently depending on context. For example, a; /// binary operation is always wrapped, while a variable reference is never; /// wrapped.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Tooling/Transformer/Stencil.h:117,wrap,wrapping,117,interpreter/llvm-project/clang/include/clang/Tooling/Transformer/Stencil.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Tooling/Transformer/Stencil.h,4,"['depend', 'wrap']","['depending', 'wrapped', 'wrapping']"
Integrability,"//; // Here we don't want to depend on the JIT runFunction, because of its; // limitations, when it comes to return value handling. There it is; // not clear who provides the storage and who cleans it up in a; // platform independent way.; //; // Depending on the type we need to synthesize a call to cling:; // 0) void : set the value's type to void;; // 1) enum, integral, float, double, referece, pointer types :; // call to cling::internal::setValueNoAlloc(...);; // 2) object type (alloc on the stack) :; // cling::internal::setValueWithAlloc; // 2.1) constant arrays:; // call to cling::runtime::internal::copyArray(...); //; // We need to synthesize later:; // Wrapper has signature: void w(cling::Value SVR); // case 1):; // setValueNoAlloc(gCling, &SVR, lastExprTy, lastExpr()); // case 2):; // new (setValueWithAlloc(gCling, &SVR, lastExprTy)) (lastExpr); // case 2.1):; // copyArray(src, placement, size)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ValueExtractionSynthesizer.cpp:29,depend,depend,29,interpreter/cling/lib/Interpreter/ValueExtractionSynthesizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ValueExtractionSynthesizer.cpp,3,"['Depend', 'Wrap', 'depend']","['Depending', 'Wrapper', 'depend']"
Integrability,"//; // Iterate over base classes.; //; // ROOT-9808: Here we skip the investigations of the base classes in case; // this is a pair, otherwise, on some STL implementations, it can happen that; // pair has mother classes which are an internal implementation detail and; // would result in bogus messages printed on screen.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TStreamerInfo.cxx:294,message,messages,294,io/io/src/TStreamerInfo.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TStreamerInfo.cxx,1,['message'],['messages']
Integrability,"//; // Loop over all basic blocks and remove KILL pseudo-instructions; // These instructions confuse the dependence analysis. Consider:; // D0 = ... (Insn 0); // R0 = KILL R0, D0 (Insn 1); // R0 = ... (Insn 2); // Here, Insn 1 will result in the dependence graph not emitting an output; // dependence between Insn 0 and Insn 2. This can lead to incorrect; // packetization; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/R600Packetizer.cpp:105,depend,dependence,105,interpreter/llvm-project/llvm/lib/Target/AMDGPU/R600Packetizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/R600Packetizer.cpp,3,['depend'],['dependence']
Integrability,"//; // Make the wrapper name.; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx:16,wrap,wrapper,16,core/metacling/src/TClingCallFunc.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx,3,['wrap'],['wrapper']
Integrability,"//; // New protocol; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/auth/src/TAuthenticate.cxx:11,protocol,protocol,11,net/auth/src/TAuthenticate.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/auth/src/TAuthenticate.cxx,1,['protocol'],['protocol']
Integrability,"//; // Prefixes are attached to stub numbers depending on the return type.; // return type: float sf_; // double df_; // single complex sc_; // double complext dc_; // others NO PREFIX; //; //; // The full name of a helper function is__mips16_call_stub +; // return type dependent prefix + stub number; //; // FIXME: This is something that probably should be in a different source file; // and perhaps done differently but my main purpose is to not waste runtime; // on something that we can enumerate in the source. Another possibility is; // to have a python script to generate these mapping tables. This will do; // for now. There are a whole series of helper function mapping arrays, one; // for each return type class as outlined above. There there are 11 possible; // entries. Ones with 0 are ones which should never be selected.; //; // All the arrays are similar except for ones which return neither; // sf, df, sc, dc, in which we only care about ones which have sf or df as a; // first parameter.; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Mips/Mips16ISelLowering.cpp:45,depend,depending,45,interpreter/llvm-project/llvm/lib/Target/Mips/Mips16ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Mips/Mips16ISelLowering.cpp,2,['depend'],"['dependent', 'depending']"
Integrability,"//; // Test backpropagation for linear net.; //; //Since batch norm is not supported for plain Cuda - the BNOrm layer will be a dummy layer; // and an error message should be produced",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/TestBatchNormalizationCuda.cxx:157,message,message,157,tmva/tmva/test/DNN/TestBatchNormalizationCuda.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/TestBatchNormalizationCuda.cxx,1,['message'],['message']
Integrability,"//; // The ""fitEllipseTGraphRMM"" macro uses the ""ROOT::Math::Minimizer""; // interface for fitting an ellipse to a set of data points from a TGraph; //; // To try this macro, in a ROOT prompt, do:; // .L fitEllipseTGraphRMM.cxx // or "".L fitEllipseTGraphRMM.cxx++""; // fitEllipseTGraphRMM(TestGraphRMM());; // for (int i=0; i<10; i++) { fitEllipseTGraphRMM(); gSystem->Sleep(333); }; //; // Last update: Thu Jul 31 18:00:00 UTC 2014; //; // Changes:; // 2014.07.31 - (initial version); //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/fit/fitEllipseTGraphRMM.cxx:76,interface,interface,76,tutorials/fit/fitEllipseTGraphRMM.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/fit/fitEllipseTGraphRMM.cxx,1,['interface'],['interface']
Integrability,//; // This helper routine returns an expression of End - Start - IntVal .; //,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MC/MCDwarf.cpp:19,rout,routine,19,interpreter/llvm-project/llvm/lib/MC/MCDwarf.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MC/MCDwarf.cpp,1,['rout'],['routine']
Integrability,//; // This helper routine returns an expression of Start + IntVal .; //,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MC/MCDwarf.cpp:19,rout,routine,19,interpreter/llvm-project/llvm/lib/MC/MCDwarf.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MC/MCDwarf.cpp,1,['rout'],['routine']
Integrability,"//; // Those functions may depend on the locale, which may be accessed through; // global memory.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/BuildLibCalls.cpp:27,depend,depend,27,interpreter/llvm-project/llvm/lib/Transforms/Utils/BuildLibCalls.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/BuildLibCalls.cpp,1,['depend'],['depend']
Integrability,"//; // Timeout: we set the method as last one, should the caller; // decide to retry, if it will attempt first something else.; // (We can not retry directly, because the server will not be; // synchronized ...)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/auth/src/TAuthenticate.cxx:194,synchroniz,synchronized,194,net/auth/src/TAuthenticate.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/auth/src/TAuthenticate.cxx,1,['synchroniz'],['synchronized']
Integrability,//; // Utilities for enumerating llvm.dbg.assign intrinsic from an assignment ID.; //; /// High level: this is an iterator for llvm.dbg.assign intrinsics.; /// Implementation details: this is a wrapper around Value's User iterator that; /// dereferences to a DbgAssignIntrinsic ptr rather than a User ptr.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/DebugInfo.h:194,wrap,wrapper,194,interpreter/llvm-project/llvm/include/llvm/IR/DebugInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/DebugInfo.h,1,['wrap'],['wrapper']
Integrability,//; // Utility routine that checks if \param MO is defined by an; // \param CombineOpc instruction in the basic block \param MBB,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64InstrInfo.cpp:15,rout,routine,15,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64InstrInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64InstrInfo.cpp,1,['rout'],['routine']
Integrability,"//; // Write the wrapper code.; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx:17,wrap,wrapper,17,core/metacling/src/TClingCallFunc.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx,2,['wrap'],['wrapper']
Integrability,"//; // Write the wrapper code.; // FIXME: this should be synthesized into the AST!; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx:17,wrap,wrapper,17,core/metacling/src/TClingCallFunc.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx,1,['wrap'],['wrapper']
Integrability,"//; // [2] The actual fixup is LO16 or HI16, depending on the instruction.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/MCTargetDesc/HexagonMCCodeEmitter.cpp:45,depend,depending,45,interpreter/llvm-project/llvm/lib/Target/Hexagon/MCTargetDesc/HexagonMCCodeEmitter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/MCTargetDesc/HexagonMCCodeEmitter.cpp,1,['depend'],['depending']
Integrability,"//; // forward interface; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/inc/Minuit2/MnFcn.h:15,interface,interface,15,math/minuit2/inc/Minuit2/MnFcn.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/inc/Minuit2/MnFcn.h,1,['interface'],['interface']
Integrability,"//; //--------------------------------------------; // read first part of rule info; //--------------------------------------------; //; // 8 <int> 10 ???; // 9 <float> 0.185 support; // 10 <float> 0.051 coefficient; // 11 <float> 2 num of cuts in rule; // 12 <float> 1 ??? not used by this interface; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/RuleFitAPI.cxx:291,interface,interface,291,tmva/tmva/src/RuleFitAPI.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/RuleFitAPI.cxx,1,['interface'],['interface']
Integrability,"//; /// Mangles the name of the declaration D and emits that name to the given; /// output stream.; ///; /// If the declaration D requires a mangled name, this routine will emit that; /// mangled name to \p os and return true. Otherwise, \p os will be unchanged; /// and this routine will return false. In this case, the caller should just; /// emit the identifier of the declaration (\c D->getIdentifier()) as its; /// name.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ItaniumMangle.cpp:160,rout,routine,160,interpreter/llvm-project/clang/lib/AST/ItaniumMangle.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ItaniumMangle.cpp,2,['rout'],['routine']
Integrability,"//; //TGLManager is a legacy interface (gl-context/window management):; //at some point we had to use OpenGL in our TCanvas/TPad classes which do not; //have direct access to low-level APIs + on Windows we had quite tricky; //mt-problems to deal with.; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/cocoa/inc/TGOSXGL.h:29,interface,interface,29,graf2d/cocoa/inc/TGOSXGL.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/cocoa/inc/TGOSXGL.h,1,['interface'],['interface']
Integrability,"//= iterator protocol =======================================================",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.cxx:13,protocol,protocol,13,bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.cxx,1,['protocol'],['protocol']
Integrability,"//= memoryview-like object ===================================================; // This is largely setup just like Python builtin memory view objects, with; // the exceptions that there is no need of a ""base"" object (it views on C++; // memory, not a Python object with a buffer interface), it uses the CPyCppyy; // converters, and typed results and assignments are supported. Code reused; // under PSF License Version 2.; //- helpers ------------------------------------------------------------------",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.cxx:279,interface,interface,279,bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.cxx,1,['interface'],['interface']
Integrability,"//=- LoongArchISelLowering.cpp - LoongArch DAG Lowering Implementation ---===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines the interfaces that LoongArch uses to lower LLVM code into; // a selection DAG.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/LoongArch/LoongArchISelLowering.cpp:404,interface,interfaces,404,interpreter/llvm-project/llvm/lib/Target/LoongArch/LoongArchISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/LoongArch/LoongArchISelLowering.cpp,1,['interface'],['interfaces']
Integrability,"//=- LoongArchISelLowering.h - LoongArch DAG Lowering Interface -*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines the interfaces that LoongArch uses to lower LLVM code into; // a selection DAG.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/LoongArch/LoongArchISelLowering.h:54,Interface,Interface,54,interpreter/llvm-project/llvm/lib/Target/LoongArch/LoongArchISelLowering.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/LoongArch/LoongArchISelLowering.h,2,"['Interface', 'interface']","['Interface', 'interfaces']"
Integrability,"//=- NSAutoreleasePoolChecker.cpp --------------------------------*- C++ -*-==//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines a NSAutoreleasePoolChecker, a small checker that warns; // about subpar uses of NSAutoreleasePool. Note that while the check itself; // (in its current form) could be written as a flow-insensitive check, in; // can be potentially enhanced in the future with flow-sensitive information.; // It is also a good example of the CheckerVisitor interface.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/NSAutoreleasePoolChecker.cpp:739,interface,interface,739,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/NSAutoreleasePoolChecker.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/NSAutoreleasePoolChecker.cpp,1,['interface'],['interface']
Integrability,"//=- NSErrorChecker.cpp - Coding conventions for uses of NSError -*- C++ -*-==//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines a CheckNSError, a flow-insensitive check; // that determines if an Objective-C class interface correctly returns; // a non-void return type.; //; // File under feature request PR 2600.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/NSErrorChecker.cpp:486,interface,interface,486,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/NSErrorChecker.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/NSErrorChecker.cpp,1,['interface'],['interface']
Integrability,"//=- llvm/Analysis/PostDominators.h - Post Dominator Calculation --*- C++ -*-=//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file exposes interfaces to post dominance information.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/PostDominators.h:401,interface,interfaces,401,interpreter/llvm-project/llvm/include/llvm/Analysis/PostDominators.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/PostDominators.h,1,['interface'],['interfaces']
Integrability,"//=- llvm/CodeGen/GlobalISel/RegBankSelect.h - Reg Bank Selector --*- C++ -*-=//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; /// \file; /// This file describes the interface of the MachineFunctionPass; /// responsible for assigning the generic virtual registers to register bank.; ///; /// By default, the reg bank selector relies on local decisions to; /// assign the register bank. In other words, it looks at one instruction; /// at a time to decide where the operand of that instruction should live.; ///; /// At higher optimization level, we could imagine that the reg bank selector; /// would use more global analysis and do crazier thing like duplicating; /// instructions and so on. This is future work.; ///; /// For now, the pass uses a greedy algorithm to decide where the operand; /// of an instruction should live. It asks the target which banks may be; /// used for each operand of the instruction and what is the cost. Then,; /// it chooses the solution which minimize the cost of the instruction plus; /// the cost of any move that may be needed to the values into the right; /// register bank.; /// In other words, the cost for an instruction on a register bank RegBank; /// is: Cost of I on RegBank plus the sum of the cost for bringing the; /// input operands from their current register bank to RegBank.; /// Thus, the following formula:; /// cost(I, RegBank) = cost(I.Opcode, RegBank) +; /// sum(for each arg in I.arguments: costCrossCopy(arg.RegBank, RegBank)); ///; /// E.g., Let say we are assigning the register bank for the instruction; /// defining v2.; /// v0(A_REGBANK) = ...; /// v1(A_REGBANK) = ...; /// v2 = G_ADD i32 v0, v1 <-- MI; ///; /// The target may say it can generate G_ADD i32 on register bank A and B; /",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/GlobalISel/RegBankSelect.h:419,interface,interface,419,interpreter/llvm-project/llvm/include/llvm/CodeGen/GlobalISel/RegBankSelect.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/GlobalISel/RegBankSelect.h,1,['interface'],['interface']
Integrability,"//=- llvm/CodeGen/MultiHazardRecognizer.h - Scheduling Support ----*- C++ -*-=//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements the MultiHazardRecognizer class, which is a wrapper; // for a set of ScheduleHazardRecognizer instances; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MultiHazardRecognizer.h:448,wrap,wrapper,448,interpreter/llvm-project/llvm/include/llvm/CodeGen/MultiHazardRecognizer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MultiHazardRecognizer.h,1,['wrap'],['wrapper']
Integrability,"//=-- Hexagon.h - Top-level interface for Hexagon representation --*- C++ -*-=//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file contains the entry points for global functions defined in the LLVM; // Hexagon back-end.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/Hexagon.h:28,interface,interface,28,interpreter/llvm-project/llvm/lib/Target/Hexagon/Hexagon.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/Hexagon.h,1,['interface'],['interface']
Integrability,"//== MIGChecker.cpp - MIG calling convention checker ------------*- C++ -*--==//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines MIGChecker, a Mach Interface Generator calling convention; // checker. Namely, in MIG callback implementation the following rules apply:; // - When a server routine returns an error code that represents success, it; // must take ownership of resources passed to it (and eventually release; // them).; // - Additionally, when returning success, all out-parameters must be; // initialized.; // - When it returns any other error code, it must not take ownership,; // because the message and its out-of-line parameters will be destroyed; // by the client that called the function.; // For now we only check the last rule, as its violations lead to dangerous; // use-after-free exploits.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/MIGChecker.cpp:420,Interface,Interface,420,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/MIGChecker.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/MIGChecker.cpp,3,"['Interface', 'message', 'rout']","['Interface', 'message', 'routine']"
Integrability,"//== ObjCAtSyncChecker.cpp - nil mutex checker for @synchronized -*- C++ -*--=//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This defines ObjCAtSyncChecker, a builtin check that checks for null pointers; // used as mutexes for @synchronized.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/ObjCAtSyncChecker.cpp:52,synchroniz,synchronized,52,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/ObjCAtSyncChecker.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/ObjCAtSyncChecker.cpp,2,['synchroniz'],['synchronized']
Integrability,"//== ObjCSelfInitChecker.cpp - Checker for 'self' initialization -*- C++ -*--=//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This defines ObjCSelfInitChecker, a builtin check that checks for uses of; // 'self' before proper initialization.; //; //===----------------------------------------------------------------------===//; // This checks initialization methods to verify that they assign 'self' to the; // result of an initialization call (e.g. [super init], or [self initWith..]); // before using 'self' or any instance variable.; //; // To perform the required checking, values are tagged with flags that indicate; // 1) if the object is the one pointed to by 'self', and 2) if the object; // is the result of an initializer (e.g. [super init]).; //; // Uses of an object that is true for 1) but not 2) trigger a diagnostic.; // The uses that are currently checked are:; // - Using instance variables.; // - Returning the object.; //; // Note that we don't check for an invalid 'self' that is the receiver of an; // obj-c message expression to cut down false positives where logging functions; // get information from self (like its class) or doing ""invalidation"" on self; // when the initialization fails.; //; // Because the object that 'self' points to gets invalidated when a call; // receives a reference to 'self', the checker keeps track and passes the flags; // for 1) and 2) to the new object that 'self' points to after the call.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/ObjCSelfInitChecker.cpp:1286,message,message,1286,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/ObjCSelfInitChecker.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/ObjCSelfInitChecker.cpp,1,['message'],['message']
Integrability,"//== RangedConstraintManager.cpp --------------------------------*- C++ -*--==//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines RangedConstraintManager, a class that provides a; // range-based constraint manager interface.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/RangedConstraintManager.cpp:485,interface,interface,485,interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/RangedConstraintManager.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/RangedConstraintManager.cpp,1,['interface'],['interface']
Integrability,"//== SimpleConstraintManager.cpp --------------------------------*- C++ -*--==//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines SimpleConstraintManager, a class that provides a; // simplified constraint manager interface, compared to ConstraintManager.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/SimpleConstraintManager.cpp:484,interface,interface,484,interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/SimpleConstraintManager.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/SimpleConstraintManager.cpp,1,['interface'],['interface']
Integrability,"//== llvm/CodeGen/GlobalISel/InstructionSelect.h -----------------*- C++ -*-==//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; /// \file This file describes the interface of the MachineFunctionPass; /// responsible for selecting (possibly generic) machine instructions to; /// target-specific instructions.; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/GlobalISel/InstructionSelect.h:410,interface,interface,410,interpreter/llvm-project/llvm/include/llvm/CodeGen/GlobalISel/InstructionSelect.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/GlobalISel/InstructionSelect.h,1,['interface'],['interface']
Integrability,"//== llvm/CodeGen/GlobalISel/Localizer.h - Localizer -------------*- C++ -*-==//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; /// \file This file describes the interface of the Localizer pass.; /// This pass moves/duplicates constant-like instructions close to their uses.; /// Its primarily goal is to workaround the deficiencies of the fast register; /// allocator.; /// With GlobalISel constants are all materialized in the entry block of; /// a function. However, the fast allocator cannot rematerialize constants and; /// has a lot more live-ranges to deal with and will most likely end up; /// spilling a lot.; /// By pushing the constants close to their use, we only create small; /// live-ranges.; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/GlobalISel/Localizer.h:414,interface,interface,414,interpreter/llvm-project/llvm/include/llvm/CodeGen/GlobalISel/Localizer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/GlobalISel/Localizer.h,1,['interface'],['interface']
Integrability,"//==- AliasAnalysis.cpp - Generic Alias Analysis Interface Implementation --==//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements the generic AliasAnalysis interface which is used as the; // common interface used by all clients and implementations of alias analysis.; //; // This file also implements the default version of the AliasAnalysis interface; // that is to be used when no other implementation is specified. This does some; // simple tests that detect obvious cases: two different global pointers cannot; // alias, a global cannot alias a malloc, two different mallocs cannot alias,; // etc.; //; // This alias analysis implementation really isn't very good for anything, but; // it is very fast, and makes a nice clean default implementation. Because it; // handles lots of little corner cases, other, more complex, alias analysis; // implementations may choose to rely on this pass to resolve these simple and; // easy cases.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/AliasAnalysis.cpp:49,Interface,Interface,49,interpreter/llvm-project/llvm/lib/Analysis/AliasAnalysis.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/AliasAnalysis.cpp,4,"['Interface', 'interface']","['Interface', 'interface']"
Integrability,"//==- BLAKE3.h - BLAKE3 C++ wrapper for LLVM ---------------------*- C++ -*-==//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This is a C++ wrapper of the BLAKE3 C interface.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/BLAKE3.h:28,wrap,wrapper,28,interpreter/llvm-project/llvm/include/llvm/Support/BLAKE3.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/BLAKE3.h,3,"['interface', 'wrap']","['interface', 'wrapper']"
Integrability,"//==- CGObjCRuntime.cpp - Interface to Shared Objective-C Runtime Features ==//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This abstract class defines the interface for Objective-C runtime-specific; // code generation. It provides some concrete helper methods for functionality; // shared between all (or most) of the Objective-C runtimes supported by clang.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGObjCRuntime.cpp:26,Interface,Interface,26,interpreter/llvm-project/clang/lib/CodeGen/CGObjCRuntime.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGObjCRuntime.cpp,2,"['Interface', 'interface']","['Interface', 'interface']"
Integrability,"//==- CodeGen/TargetRegisterInfo.h - Target Register Information -*- C++ -*-==//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file describes an abstract interface used to get information about a; // target machines register file. This information is used for a variety of; // purposed, especially register allocation.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetRegisterInfo.h:415,interface,interface,415,interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetRegisterInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetRegisterInfo.h,1,['interface'],['interface']
Integrability,"//==- DIAEnumInjectedSources.h - DIA Injected Sources Enumerator -*- C++ -*-==//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/DebugInfo/PDB/DIA/DIAEnumInjectedSources.h:37,Inject,Injected,37,interpreter/llvm-project/llvm/include/llvm/DebugInfo/PDB/DIA/DIAEnumInjectedSources.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/DebugInfo/PDB/DIA/DIAEnumInjectedSources.h,1,['Inject'],['Injected']
Integrability,"//==- DependentDiagnostic.h - Dependently-generated diagnostics --*- C++ -*-==//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines interfaces for diagnostics which may or may; // fire based on how a template is instantiated.; //; // At the moment, the only consumer of this interface is access; // control.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/DependentDiagnostic.h:6,Depend,DependentDiagnostic,6,interpreter/llvm-project/clang/include/clang/AST/DependentDiagnostic.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/DependentDiagnostic.h,4,"['Depend', 'interface']","['DependentDiagnostic', 'Dependently-generated', 'interface', 'interfaces']"
Integrability,"//==- IPDBSectionContrib.h - Interfaces for PDB SectionContribs --*- C++ -*-==//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/DebugInfo/PDB/IPDBSectionContrib.h:29,Interface,Interfaces,29,interpreter/llvm-project/llvm/include/llvm/DebugInfo/PDB/IPDBSectionContrib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/DebugInfo/PDB/IPDBSectionContrib.h,1,['Interface'],['Interfaces']
Integrability,"//==- NativeEnumInjectedSources.cpp - Native Injected Source Enumerator --*-==//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/DebugInfo/PDB/Native/NativeEnumInjectedSources.h:45,Inject,Injected,45,interpreter/llvm-project/llvm/include/llvm/DebugInfo/PDB/Native/NativeEnumInjectedSources.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/DebugInfo/PDB/Native/NativeEnumInjectedSources.h,2,['Inject'],['Injected']
Integrability,"//==- ObjCUnusedIVarsChecker.cpp - Check for unused ivars --------*- C++ -*-==//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines a CheckObjCUnusedIvars, a checker that; // analyzes an Objective-C class's interface/implementation to determine if it; // has any ivars that are never accessed.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/ObjCUnusedIVarsChecker.cpp:476,interface,interface,476,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/ObjCUnusedIVarsChecker.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/ObjCUnusedIVarsChecker.cpp,1,['interface'],['interface']
Integrability,"//==- ProgramPoint.cpp - Program Points for Path-Sensitive Analysis -*- C++ -*-/; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines the interface ProgramPoint, which identifies a; // distinct location in a function.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/ProgramPoint.cpp:405,interface,interface,405,interpreter/llvm-project/clang/lib/Analysis/ProgramPoint.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/ProgramPoint.cpp,1,['interface'],['interface']
Integrability,"//==- ProgramPoint.h - Program Points for Path-Sensitive Analysis --*- C++ -*-//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines the interface ProgramPoint, which identifies a; // distinct location in a function.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/ProgramPoint.h:405,interface,interface,405,interpreter/llvm-project/clang/include/clang/Analysis/ProgramPoint.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/ProgramPoint.h,1,['interface'],['interface']
Integrability,"//==- SHA1.h - SHA1 implementation for LLVM --*- C++ -*-==//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; // This code is taken from public domain; // (http://oauth.googlecode.com/svn/code/c/liboauth/src/sha1.c); // and modified by wrapping it in a C++ interface for LLVM,; // and removing unnecessary code.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/SHA1.h:482,wrap,wrapping,482,interpreter/llvm-project/llvm/include/llvm/Support/SHA1.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/SHA1.h,2,"['interface', 'wrap']","['interface', 'wrapping']"
Integrability,"//==- SIMachineFunctionInfo.h - SIMachineFunctionInfo interface --*- C++ -*-==//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; /// \file; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIMachineFunctionInfo.h:54,interface,interface,54,interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIMachineFunctionInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIMachineFunctionInfo.h,1,['interface'],['interface']
Integrability,"//==- SystemZ.h - Top-Level Interface for SystemZ representation -*- C++ -*-==//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file contains the entry points for global functions defined in; // the LLVM SystemZ backend.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZ.h:28,Interface,Interface,28,interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZ.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZ.h,1,['Interface'],['Interface']
Integrability,"//==- SystemZMachineScheduler.h - SystemZ Scheduler Interface ----*- C++ -*-==//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // -------------------------- Post RA scheduling ---------------------------- //; // SystemZPostRASchedStrategy is a scheduling strategy which is plugged into; // the MachineScheduler. It has a sorted Available set of SUs and a pickNode(); // implementation that looks to optimize decoder grouping and balance the; // usage of processor resources. Scheduler states are saved for the end; // region of each MBB, so that a successor block can learn from it.; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZMachineScheduler.h:52,Interface,Interface,52,interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZMachineScheduler.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZMachineScheduler.h,1,['Interface'],['Interface']
Integrability,"//==- TargetRegisterInfo.cpp - Target Register Information Implementation --==//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements the TargetRegisterInfo interface.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/TargetRegisterInfo.cpp:427,interface,interface,427,interpreter/llvm-project/llvm/lib/CodeGen/TargetRegisterInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/TargetRegisterInfo.cpp,1,['interface'],['interface']
Integrability,"//==- X86IndirectThunks.cpp - Construct indirect call/jump thunks for x86 --=//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; /// \file; ///; /// Pass that injects an MI thunk that is used to lower indirect calls in a way; /// that prevents speculation on some x86 processors and can be used to mitigate; /// security vulnerabilities due to targeted speculative execution and side; /// channels such as CVE-2017-5715.; ///; /// Currently supported thunks include:; /// - Retpoline -- A RET-implemented trampoline that lowers indirect calls; /// - LVI Thunk -- A CALL/JMP-implemented thunk that forces load serialization; /// before making an indirect call/jump; ///; /// Note that the reason that this is implemented as a MachineFunctionPass and; /// not a ModulePass is that ModulePasses at this point in the LLVM X86 pipeline; /// serialize all transformations, which can consume lots of memory.; ///; /// TODO(chandlerc): All of this code could use better comments and; /// documentation.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86IndirectThunks.cpp:405,inject,injects,405,interpreter/llvm-project/llvm/lib/Target/X86/X86IndirectThunks.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86IndirectThunks.cpp,1,['inject'],['injects']
Integrability,"//==- llvm/CodeGen/AggressiveAntiDepBreaker.h - Anti-Dep Support -*- C++ -*-==//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements the AggressiveAntiDepBreaker class, which; // implements register anti-dependence breaking during post-RA; // scheduling. It attempts to break all anti-dependencies within a; // block.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AggressiveAntiDepBreaker.h:475,depend,dependence,475,interpreter/llvm-project/llvm/lib/CodeGen/AggressiveAntiDepBreaker.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AggressiveAntiDepBreaker.h,2,['depend'],"['dependence', 'dependencies']"
Integrability,"//==- llvm/CodeGen/BreakFalseDeps.cpp - Break False Dependency Fix -*- C++ -*==//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; /// \file Break False Dependency pass.; ///; /// Some instructions have false dependencies which cause unnecessary stalls.; /// For example, instructions may write part of a register and implicitly; /// need to read the other parts of the register. This may cause unwanted; /// stalls preventing otherwise unrelated instructions from executing in; /// parallel in an out-of-order CPU.; /// This pass is aimed at identifying and avoiding these dependencies.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/BreakFalseDeps.cpp:52,Depend,Dependency,52,interpreter/llvm-project/llvm/lib/CodeGen/BreakFalseDeps.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/BreakFalseDeps.cpp,4,"['Depend', 'depend']","['Dependency', 'dependencies']"
Integrability,"//==- llvm/CodeGen/MachineMemOperand.h - MachineMemOperand class -*- C++ -*-==//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file contains the declaration of the MachineMemOperand class, which is a; // description of a memory reference. It is used to help track dependencies; // in the backend.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineMemOperand.h:525,depend,dependencies,525,interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineMemOperand.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineMemOperand.h,1,['depend'],['dependencies']
Integrability,"//==-- AArch64.h - Top-level interface for AArch64 --------------*- C++ -*-==//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file contains the entry points for global functions defined in the LLVM; // AArch64 back-end.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64.h:29,interface,interface,29,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64.h,1,['interface'],['interface']
Integrability,"//==-- AArch64ISelLowering.h - AArch64 DAG Lowering Interface ----*- C++ -*-==//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines the interfaces that AArch64 uses to lower LLVM code into a; // selection DAG.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.h:52,Interface,Interface,52,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.h,2,"['Interface', 'interface']","['Interface', 'interfaces']"
Integrability,"//==-- ConstantFold.h - DL-independent Constant Folding Interface -*- C++ -*-=//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines the DataLayout-independent constant folding interface.; // When possible, the DataLayout-aware constant folding interface in; // Analysis/ConstantFolding.h should be preferred.; //; // These interfaces are used by the ConstantExpr::get* methods to automatically; // fold constants when possible.; //; // These operators may return a null object if they don't know how to perform; // the specified operation on the specified constant types.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/ConstantFold.h:56,Interface,Interface,56,interpreter/llvm-project/llvm/include/llvm/IR/ConstantFold.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/ConstantFold.h,4,"['Interface', 'interface']","['Interface', 'interface', 'interfaces']"
Integrability,"//==-- MSP430.h - Top-level interface for MSP430 representation --*- C++ -*-==//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file contains the entry points for global functions defined in; // the LLVM MSP430 backend.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/MSP430/MSP430.h:28,interface,interface,28,interpreter/llvm-project/llvm/lib/Target/MSP430/MSP430.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/MSP430/MSP430.h,1,['interface'],['interface']
Integrability,"//==-- OverflowInstAnalysis.cpp - Utils to fold overflow insts ----*- C++ -*-=//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file holds routines to help analyse overflow instructions; // and fold them into constants or other overflow instructions; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/OverflowInstAnalysis.cpp:399,rout,routines,399,interpreter/llvm-project/llvm/lib/Analysis/OverflowInstAnalysis.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/OverflowInstAnalysis.cpp,1,['rout'],['routines']
Integrability,"//==-- X86LoadValueInjectionLoadHardening.cpp - LVI load hardening for x86 --=//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; ///; /// Description: This pass finds Load Value Injection (LVI) gadgets consisting; /// of a load from memory (i.e., SOURCE), and any operation that may transmit; /// the value loaded from memory over a covert channel, or use the value loaded; /// from memory to determine a branch/call target (i.e., SINK). After finding; /// all such gadgets in a given function, the pass minimally inserts LFENCE; /// instructions in such a manner that the following property is satisfied: for; /// all SOURCE+SINK pairs, all paths in the CFG from SOURCE to SINK contain at; /// least one LFENCE instruction. The algorithm that implements this minimal; /// insertion is influenced by an academic paper that minimally inserts memory; /// fences for high-performance concurrent programs:; /// http://www.cs.ucr.edu/~lesani/companion/oopsla15/OOPSLA15.pdf; /// The algorithm implemented in this pass is as follows:; /// 1. Build a condensed CFG (i.e., a GadgetGraph) consisting only of the; /// following components:; /// - SOURCE instructions (also includes function arguments); /// - SINK instructions; /// - Basic block entry points; /// - Basic block terminators; /// - LFENCE instructions; /// 2. Analyze the GadgetGraph to determine which SOURCE+SINK pairs (i.e.,; /// gadgets) are already mitigated by existing LFENCEs. If all gadgets have been; /// mitigated, go to step 6.; /// 3. Use a heuristic or plugin to approximate minimal LFENCE insertion.; /// 4. Insert one LFENCE along each CFG edge that was cut in step 3.; /// 5. Go to step 2.; /// 6. If any LFENCEs were inserted, return `true` from runOnMachineFunction(); /// to tell",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86LoadValueInjectionLoadHardening.cpp:425,Inject,Injection,425,interpreter/llvm-project/llvm/lib/Target/X86/X86LoadValueInjectionLoadHardening.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86LoadValueInjectionLoadHardening.cpp,1,['Inject'],['Injection']
Integrability,"//==-- loop_proto_to_cxx.cpp - Protobuf-C++ conversion ---------------------==//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // Implements functions for converting between protobufs and C++. Differs from; // proto_to_cxx.cpp by wrapping all the generated C++ code in either a single; // for loop or two nested loops. Also outputs a different function signature; // that includes a size_t parameter for the loop to use. The C++ code generated; // is meant to stress the LLVM loop vectorizer.; //; // Still a work in progress.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/clang-fuzzer/proto-to-cxx/loop_proto_to_cxx.cpp:483,wrap,wrapping,483,interpreter/llvm-project/clang/tools/clang-fuzzer/proto-to-cxx/loop_proto_to_cxx.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/clang-fuzzer/proto-to-cxx/loop_proto_to_cxx.cpp,1,['wrap'],['wrapping']
Integrability,"//==--- CodeGenABITypes.cpp - Convert Clang types to LLVM types for ABI ----==//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // CodeGenABITypes is a simple interface for getting LLVM types for; // the parameters and the return value of a function given the Clang; // types.; //; // The class is implemented as a public wrapper around the private; // CodeGenTypes class in lib/CodeGen.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CodeGenABITypes.cpp:411,interface,interface,411,interpreter/llvm-project/clang/lib/CodeGen/CodeGenABITypes.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CodeGenABITypes.cpp,2,"['interface', 'wrap']","['interface', 'wrapper']"
Integrability,"//==--- ImmutableList.h - Immutable (functional) list interface --*- C++ -*-==//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; ///; /// \file; /// This file defines the ImmutableList class.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/ImmutableList.h:54,interface,interface,54,interpreter/llvm-project/llvm/include/llvm/ADT/ImmutableList.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/ImmutableList.h,1,['interface'],['interface']
Integrability,"//==--- InstrEmitter.cpp - Emit MachineInstrs for the SelectionDAG class ---==//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This implements the Emit routines for the SelectionDAG class, which creates; // MachineInstrs based on the decisions of the SelectionDAG instruction; // selection.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/InstrEmitter.cpp:408,rout,routines,408,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/InstrEmitter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/InstrEmitter.cpp,1,['rout'],['routines']
Integrability,"//==--- InterCheckerAPI.h ---------------------------------------*- C++ -*-==//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; // This file allows introduction of checker dependencies. It contains APIs for; // inter-checker communications.; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/InterCheckerAPI.h:419,depend,dependencies,419,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/InterCheckerAPI.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/InterCheckerAPI.h,1,['depend'],['dependencies']
Integrability,"//==---- CodeGenABITypes.h - Convert Clang types to LLVM types for ABI -----==//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // CodeGenABITypes is a simple interface for getting LLVM types for; // the parameters and the return value of a function given the Clang; // types.; //; // The class is implemented as a public wrapper around the private; // CodeGenTypes class in lib/CodeGen.; //; // It allows other clients, like LLDB, to determine the LLVM types that are; // actually used in function calls, which makes it possible to then determine; // the actual ABI locations (e.g. registers, stack locations, etc.) that; // these parameters are stored in.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/CodeGen/CodeGenABITypes.h:411,interface,interface,411,interpreter/llvm-project/clang/include/clang/CodeGen/CodeGenABITypes.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/CodeGen/CodeGenABITypes.h,2,"['interface', 'wrap']","['interface', 'wrapper']"
Integrability,"//==---------------------------------------------------------------------==//; // Constraints on values.; //==---------------------------------------------------------------------==//; //; // Each ProgramState records constraints on symbolic values. These constraints; // are managed using the ConstraintManager associated with a ProgramStateManager.; // As constraints gradually accrue on symbolic values, added constraints; // may conflict and indicate that a state is infeasible (as no real values; // could satisfy all the constraints). This is the principal mechanism; // for modeling path-sensitivity in ExprEngine/ProgramState.; //; // Various ""assume"" methods form the interface for adding constraints to; // symbolic values. A call to 'assume' indicates an assumption being placed; // on one or symbolic values. 'assume' methods take the following inputs:; //; // (1) A ProgramState object representing the current state.; //; // (2) The assumed constraint (which is specific to a given ""assume"" method).; //; // (3) A binary value ""Assumption"" that indicates whether the constraint is; // assumed to be true or false.; //; // The output of ""assume*"" is a new ProgramState object with the added constraints.; // If no new state is feasible, NULL is returned.; //; /// Assumes that the value of \p cond is zero (if \p assumption is ""false""); /// or non-zero (if \p assumption is ""true"").; ///; /// This returns a new state with the added constraint on \p cond.; /// If no new state is feasible, NULL is returned.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/StaticAnalyzer/Core/PathSensitive/ProgramState.h:677,interface,interface,677,interpreter/llvm-project/clang/include/clang/StaticAnalyzer/Core/PathSensitive/ProgramState.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/StaticAnalyzer/Core/PathSensitive/ProgramState.h,1,['interface'],['interface']
Integrability,"//=== AArch64CallingConvention.cpp - AArch64 CC impl ------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file contains the table-generated and custom routines for the AArch64; // Calling Convention.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64CallingConvention.cpp:433,rout,routines,433,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64CallingConvention.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64CallingConvention.cpp,1,['rout'],['routines']
Integrability,"//=== ARMCallingConv.cpp - ARM Custom CC Routines ---------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file contains the custom routines for the ARM Calling Convention that; // aren't done by tablegen, and includes the table generated implementations.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMCallingConv.cpp:41,Rout,Routines,41,interpreter/llvm-project/llvm/lib/Target/ARM/ARMCallingConv.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMCallingConv.cpp,2,"['Rout', 'rout']","['Routines', 'routines']"
Integrability,"//=== ARMCallingConv.h - ARM Custom Calling Convention Routines -*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file declares the entry points for ARM calling convention analysis.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMCallingConv.h:55,Rout,Routines,55,interpreter/llvm-project/llvm/lib/Target/ARM/ARMCallingConv.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMCallingConv.h,1,['Rout'],['Routines']
Integrability,"//=== CSKYCallingConv.h - CSKY Custom Calling Convention Routines -*-C++-*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file contains the custom routines for the CSKY Calling Convention that; // aren't done by tablegen.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/CSKY/CSKYCallingConv.h:57,Rout,Routines,57,interpreter/llvm-project/llvm/lib/Target/CSKY/CSKYCallingConv.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/CSKY/CSKYCallingConv.h,2,"['Rout', 'rout']","['Routines', 'routines']"
Integrability,"//=== ClangTypeNodesEmitter.cpp - Generate type node tables -----*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This tblgen backend emits the node table (the .def file) for Clang; // type nodes.; //; // This file defines the AST type info database. Each type node is; // enumerated by providing its name (e.g., ""Builtin"" or ""Enum"") and; // base class (e.g., ""Type"" or ""TagType""). Depending on where in the; // abstract syntax tree the type will show up, the enumeration uses; // one of five different macros:; //; // TYPE(Class, Base) - A type that can show up anywhere in the AST,; // and might be dependent, canonical, or non-canonical. All clients; // will need to understand these types.; //; // ABSTRACT_TYPE(Class, Base) - An abstract class that shows up in; // the type hierarchy but has no concrete instances.; //; // NON_CANONICAL_TYPE(Class, Base) - A type that can show up; // anywhere in the AST but will never be a part of a canonical; // type. Clients that only need to deal with canonical types; // (ignoring, e.g., typedefs and other type aliases used for; // pretty-printing) can ignore these types.; //; // DEPENDENT_TYPE(Class, Base) - A type that will only show up; // within a C++ template that has not been instantiated, e.g., a; // type that is always dependent. Clients that do not need to deal; // with uninstantiated C++ templates can ignore these types.; //; // NON_CANONICAL_UNLESS_DEPENDENT_TYPE(Class, Base) - A type that; // is non-canonical unless it is dependent. Defaults to TYPE because; // it is neither reliably dependent nor reliably non-canonical.; //; // There is a sixth macro, independent of the others. Most clients; // will not need to use it.; //; // LEAF_TYPE(Class) - A type that nev",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/TableGen/ClangTypeNodesEmitter.cpp:651,Depend,Depending,651,interpreter/llvm-project/clang/utils/TableGen/ClangTypeNodesEmitter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/TableGen/ClangTypeNodesEmitter.cpp,2,"['Depend', 'depend']","['Depending', 'dependent']"
Integrability,"//=== DependencyTracker.cpp -----------------------------------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DWARFLinker/Parallel/DependencyTracker.cpp:6,Depend,DependencyTracker,6,interpreter/llvm-project/llvm/lib/DWARFLinker/Parallel/DependencyTracker.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DWARFLinker/Parallel/DependencyTracker.cpp,1,['Depend'],['DependencyTracker']
Integrability,"//=== MangleNumberingContext.h - Context for mangling numbers ---*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines the LambdaBlockMangleContext interface, which keeps track; // of the Itanium C++ ABI mangling numbers for lambda expressions and block; // literals.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/MangleNumberingContext.h:430,interface,interface,430,interpreter/llvm-project/clang/include/clang/AST/MangleNumberingContext.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/MangleNumberingContext.h,1,['interface'],['interface']
Integrability,"//=== Move.h - Tracking moved-from objects. ------------------------*- C++ -*-//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // Defines inter-checker API for the use-after-move checker. It allows; // dependent checkers to figure out if an object is in a moved-from state.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/Move.h:455,depend,dependent,455,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/Move.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/Move.h,1,['depend'],['dependent']
Integrability,"//=== PPCCallingConv.h - PPC Custom Calling Convention Routines -*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file contains the custom routines for the PPC Calling Convention that; // aren't done by tablegen.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCCallingConv.h:55,Rout,Routines,55,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCCallingConv.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCCallingConv.h,2,"['Rout', 'rout']","['Routines', 'routines']"
Integrability,"//=== ReplaceWithVeclib.cpp - Replace vector intrinsics with veclib calls -===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // Replaces LLVM IR instructions with vector operands (i.e., the frem; // instruction or calls to LLVM intrinsics) with matching calls to functions; // from a vector library (e.g libmvec, SVML) using TargetLibraryInfo interface.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/ReplaceWithVeclib.cpp:598,interface,interface,598,interpreter/llvm-project/llvm/lib/CodeGen/ReplaceWithVeclib.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/ReplaceWithVeclib.cpp,1,['interface'],['interface']
Integrability,"//=== SmartPtr.h - Tracking smart pointer state. -------------------*- C++ -*-//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // Defines inter-checker API for the smart pointer modeling. It allows; // dependent checkers to figure out if an smart pointer is null or not.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/SmartPtr.h:455,depend,dependent,455,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/SmartPtr.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/SmartPtr.h,1,['depend'],['dependent']
Integrability,"//=== SourceMgrAdapter.cpp - SourceMgr to SourceManager Adapter -----------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements the adapter that maps diagnostics from llvm::SourceMgr; // to Clang's SourceManager.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Basic/SourceMgrAdapter.cpp:56,Adapter,Adapter,56,interpreter/llvm-project/clang/lib/Basic/SourceMgrAdapter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Basic/SourceMgrAdapter.cpp,2,"['Adapter', 'adapter']","['Adapter', 'adapter']"
Integrability,"//=== SourceMgrAdapter.h - SourceMgr to SourceManager Adapter ---*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file provides an adapter that maps diagnostics from llvm::SourceMgr; // to Clang's SourceManager.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/SourceMgrAdapter.h:54,Adapter,Adapter,54,interpreter/llvm-project/clang/include/clang/Basic/SourceMgrAdapter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/SourceMgrAdapter.h,2,"['Adapter', 'adapter']","['Adapter', 'adapter']"
Integrability,"//=== WebAssemblyLowerEmscriptenEHSjLj.cpp - Lower exceptions for Emscripten =//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; ///; /// \file; /// This file lowers exception-related instructions and setjmp/longjmp function; /// calls to use Emscripten's library functions. The pass uses JavaScript's try; /// and catch mechanism in case of Emscripten EH/SjLj and Wasm EH intrinsics in; /// case of Emscripten SjLJ.; ///; /// * Emscripten exception handling; /// This pass lowers invokes and landingpads into library functions in JS glue; /// code. Invokes are lowered into function wrappers called invoke wrappers that; /// exist in JS side, which wraps the original function call with JS try-catch.; /// If an exception occurred, cxa_throw() function in JS side sets some; /// variables (see below) so we can check whether an exception occurred from; /// wasm code and handle it appropriately.; ///; /// * Emscripten setjmp-longjmp handling; /// This pass lowers setjmp to a reasonably-performant approach for emscripten.; /// The idea is that each block with a setjmp is broken up into two parts: the; /// part containing setjmp and the part right after the setjmp. The latter part; /// is either reached from the setjmp, or later from a longjmp. To handle the; /// longjmp, all calls that might longjmp are also called using invoke wrappers; /// and thus JS / try-catch. JS longjmp() function also sets some variables so; /// we can check / whether a longjmp occurred from wasm code. Each block with a; /// function call that might longjmp is also split up after the longjmp call.; /// After the longjmp call, we check whether a longjmp occurred, and if it did,; /// which setjmp it corresponds to, and jump to the right post-setjmp block.; /// We a",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyLowerEmscriptenEHSjLj.cpp:831,wrap,wrappers,831,interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyLowerEmscriptenEHSjLj.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyLowerEmscriptenEHSjLj.cpp,3,['wrap'],"['wrappers', 'wraps']"
Integrability,"//=== X86CallingConv.cpp - X86 Custom Calling Convention Impl -*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file contains the implementation of custom routines for the X86; // Calling Convention that aren't done by tablegen.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86CallingConv.cpp:429,rout,routines,429,interpreter/llvm-project/llvm/lib/Target/X86/X86CallingConv.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86CallingConv.cpp,1,['rout'],['routines']
Integrability,"//=== X86CallingConv.h - X86 Custom Calling Convention Routines -*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file contains the custom routines for the X86 Calling Convention that; // aren't done by tablegen.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86CallingConv.h:55,Rout,Routines,55,interpreter/llvm-project/llvm/lib/Target/X86/X86CallingConv.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86CallingConv.h,2,"['Rout', 'rout']","['Routines', 'routines']"
Integrability,"//===- ""DependencyTracker.h"" ------------------------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DWARFLinker/Parallel/DependencyTracker.h:8,Depend,DependencyTracker,8,interpreter/llvm-project/llvm/lib/DWARFLinker/Parallel/DependencyTracker.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DWARFLinker/Parallel/DependencyTracker.h,1,['Depend'],['DependencyTracker']
Integrability,"//===- AArch64AsmPrinter.cpp - AArch64 LLVM assembly writer ---------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file contains a printer that converts from our internal representation; // of machine-dependent LLVM code to the AArch64 assembly language.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64AsmPrinter.cpp:474,depend,dependent,474,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64AsmPrinter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64AsmPrinter.cpp,1,['depend'],['dependent']
Integrability,"//===- ADCE.h - Aggressive dead code elimination ----------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file provides the interface for the Aggressive Dead Code Elimination; // pass. This pass optimistically assumes that all instructions are dead until; // proven otherwise, allowing it to eliminate dead computations that other DCE; // passes do not catch, particularly involving loop computations.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Scalar/ADCE.h:406,interface,interface,406,interpreter/llvm-project/llvm/include/llvm/Transforms/Scalar/ADCE.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Scalar/ADCE.h,1,['interface'],['interface']
Integrability,"//===- ADT/SCCIterator.h - Strongly Connected Comp. Iter. -------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; /// \file; ///; /// This builds on the llvm/ADT/GraphTraits.h file to find the strongly; /// connected components (SCCs) of a graph in O(N+E) time using Tarjan's DFS; /// algorithm.; ///; /// The SCC iterator has the important property that if a node in SCC S1 has an; /// edge to a node in SCC S2, then it visits S1 *after* S2.; ///; /// To visit S1 *before* S2, use the scc_iterator on the Inverse graph. (NOTE:; /// This requires some simple wrappers and is not supported yet.); ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/SCCIterator.h:821,wrap,wrappers,821,interpreter/llvm-project/llvm/include/llvm/ADT/SCCIterator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/SCCIterator.h,1,['wrap'],['wrappers']
Integrability,"//===- APFixedPoint.cpp - Fixed point constant handling ---------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; /// \file; /// Defines the implementation for the fixed point number interface.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/APFixedPoint.cpp:449,interface,interface,449,interpreter/llvm-project/llvm/lib/Support/APFixedPoint.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/APFixedPoint.cpp,1,['interface'],['interface']
Integrability,"//===- APFixedPoint.h - Fixed point constant handling -----------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; ///; /// \file; /// Defines the fixed point number interface.; /// This is a class for abstracting various operations performed on fixed point; /// types.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/APFixedPoint.h:427,interface,interface,427,interpreter/llvm-project/llvm/include/llvm/ADT/APFixedPoint.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/APFixedPoint.h,1,['interface'],['interface']
Integrability,"//===- ARC.h - Top-level interface for ARC representation -------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file contains the entry points for global functions defined in the LLVM; // ARC back-end.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARC/ARC.h:25,interface,interface,25,interpreter/llvm-project/llvm/lib/Target/ARC/ARC.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARC/ARC.h,1,['interface'],['interface']
Integrability,"//===- ARCAsmPrinter.cpp - ARC LLVM assembly writer -------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file contains a printer that converts from our internal representation; // of machine-dependent LLVM code to GNU format ARC assembly language.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARC/ARCAsmPrinter.cpp:474,depend,dependent,474,interpreter/llvm-project/llvm/lib/Target/ARC/ARCAsmPrinter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARC/ARCAsmPrinter.cpp,1,['depend'],['dependent']
Integrability,"//===- ARCISelLowering.h - ARC DAG Lowering Interface -----------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines the interfaces that ARC uses to lower LLVM code into a; // selection DAG.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARC/ARCISelLowering.h:44,Interface,Interface,44,interpreter/llvm-project/llvm/lib/Target/ARC/ARCISelLowering.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARC/ARCISelLowering.h,2,"['Interface', 'interface']","['Interface', 'interfaces']"
Integrability,"//===- ARMISelLowering.cpp - ARM DAG Lowering Implementation --------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines the interfaces that ARM uses to lower LLVM code into a; // selection DAG.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMISelLowering.cpp:405,interface,interfaces,405,interpreter/llvm-project/llvm/lib/Target/ARM/ARMISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMISelLowering.cpp,1,['interface'],['interfaces']
Integrability,"//===- ARMISelLowering.h - ARM DAG Lowering Interface -----------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines the interfaces that ARM uses to lower LLVM code into a; // selection DAG.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMISelLowering.h:44,Interface,Interface,44,interpreter/llvm-project/llvm/lib/Target/ARM/ARMISelLowering.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMISelLowering.h,2,"['Interface', 'interface']","['Interface', 'interfaces']"
Integrability,"//===- ASTContext.cpp - Context to hold long-lived AST nodes --------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements the ASTContext interface.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ASTContext.cpp:419,interface,interface,419,interpreter/llvm-project/clang/lib/AST/ASTContext.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ASTContext.cpp,1,['interface'],['interface']
Integrability,"//===- ASTContext.h - Context to hold long-lived AST nodes ------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; /// \file; /// Defines the clang::ASTContext interface.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/ASTContext.h:425,interface,interface,425,interpreter/llvm-project/clang/include/clang/AST/ASTContext.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/ASTContext.h,1,['interface'],['interface']
Integrability,"//===- ASTDiff.cpp - AST differencing implementation-----------*- C++ -*- -===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file contains definitons for the AST differencing interface.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Tooling/ASTDiff/ASTDiff.cpp:438,interface,interface,438,interpreter/llvm-project/clang/lib/Tooling/ASTDiff/ASTDiff.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Tooling/ASTDiff/ASTDiff.cpp,1,['interface'],['interface']
Integrability,"//===- ASTDiff.h - AST differencing API -----------------------*- C++ -*- -===//; //; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file specifies an interface that can be used to compare C++ syntax; // trees.; //; // We use the gumtree algorithm which combines a heuristic top-down search that; // is able to match large subtrees that are equivalent, with an optimal; // algorithm to match small subtrees.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Tooling/ASTDiff/ASTDiff.h:410,interface,interface,410,interpreter/llvm-project/clang/include/clang/Tooling/ASTDiff/ASTDiff.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Tooling/ASTDiff/ASTDiff.h,1,['interface'],['interface']
Integrability,"//===- ASTMatchersInternal.h - Structural query framework -------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // Implements the base layer of the matcher framework.; //; // Matchers are methods that return a Matcher<T> which provides a method; // Matches(...) which is a predicate on an AST node. The Matches method's; // parameters define the context of the match, which allows matchers to recurse; // or store the current node as bound to a specific string, so that it can be; // retrieved later.; //; // In general, matchers have two parts:; // 1. A function Matcher<T> MatcherName(<arguments>) which returns a Matcher<T>; // based on the arguments and optionally on template type deduction based; // on the arguments. Matcher<T>s form an implicit reverse hierarchy; // to clang's AST class hierarchy, meaning that you can use a Matcher<Base>; // everywhere a Matcher<Derived> is required.; // 2. An implementation of a class derived from MatcherInterface<T>.; //; // The matcher functions are defined in ASTMatchers.h. To make it possible; // to implement both the matcher function and the implementation of the matcher; // interface in one place, ASTMatcherMacros.h defines macros that allow; // implementing a matcher in a single place.; //; // This file contains the base classes needed to construct the actual matchers.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/ASTMatchers/ASTMatchersInternal.h:1398,interface,interface,1398,interpreter/llvm-project/clang/include/clang/ASTMatchers/ASTMatchersInternal.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/ASTMatchers/ASTMatchersInternal.h,1,['interface'],['interface']
Integrability,"//===- AbstractCallSite.h - Abstract call sites -----------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines the AbstractCallSite class, which is a is a wrapper that; // allows treating direct, indirect, and callback calls the same.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/AbstractCallSite.h:445,wrap,wrapper,445,interpreter/llvm-project/llvm/include/llvm/IR/AbstractCallSite.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/AbstractCallSite.h,1,['wrap'],['wrapper']
Integrability,"//===- AggressiveAntiDepBreaker.cpp - Anti-dep breaker --------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements the AggressiveAntiDepBreaker class, which; // implements register anti-dependence breaking during post-RA; // scheduling. It attempts to break all anti-dependencies within a; // block.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AggressiveAntiDepBreaker.cpp:475,depend,dependence,475,interpreter/llvm-project/llvm/lib/CodeGen/AggressiveAntiDepBreaker.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AggressiveAntiDepBreaker.cpp,2,['depend'],"['dependence', 'dependencies']"
Integrability,"//===- Allocator.h - Simple memory allocation abstraction -------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; /// \file; ///; /// This file defines the BumpPtrAllocator interface. BumpPtrAllocator conforms; /// to the LLVM ""Allocator"" concept and is similar to MallocAllocator, but; /// objects cannot be deallocated. Their lifetime is tied to the lifetime of the; /// allocator.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/Allocator.h:435,interface,interface,435,interpreter/llvm-project/llvm/include/llvm/Support/Allocator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/Allocator.h,1,['interface'],['interface']
Integrability,"//===- ArgumentsAdjusters.cpp - Command line arguments adjuster -----------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file contains definitions of classes which implement ArgumentsAdjuster; // interface.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Tooling/ArgumentsAdjusters.cpp:463,interface,interface,463,interpreter/llvm-project/clang/lib/Tooling/ArgumentsAdjusters.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Tooling/ArgumentsAdjusters.cpp,1,['interface'],['interface']
Integrability,"//===- ArrayRef.h - Array Reference Wrapper ---------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/ArrayRef.h:36,Wrap,Wrapper,36,interpreter/llvm-project/llvm/include/llvm/ADT/ArrayRef.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/ArrayRef.h,1,['Wrap'],['Wrapper']
Integrability,"//===- AsmWriter.cpp - Printing LLVM as an assembly file ------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This library implements `print` family of functions in classes like; // Module, Function, Value, etc. In-memory representation of those classes is; // converted to IR strings.; //; // Note that these routines must be extremely tolerant of various errors in the; // LLVM code, because it can be used for debugging transformations.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/AsmWriter.cpp:583,rout,routines,583,interpreter/llvm-project/llvm/lib/IR/AsmWriter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/AsmWriter.cpp,1,['rout'],['routines']
Integrability,"//===- AttrIterator.h - Classes for attribute iteration ---------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines the Attr vector and specific_attr_iterator interfaces.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/AttrIterator.h:444,interface,interfaces,444,interpreter/llvm-project/clang/include/clang/AST/AttrIterator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/AttrIterator.h,1,['interface'],['interfaces']
Integrability,"//===- AttrVisitor.h - Visitor for Attr subclasses --------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines the AttrVisitor interface.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/AttrVisitor.h:417,interface,interface,417,interpreter/llvm-project/clang/include/clang/AST/AttrVisitor.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/AttrVisitor.h,1,['interface'],['interface']
Integrability,"//===- BTFContext.cpp ---------------------------------------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // Implementation of the BTFContext interface, this is used by; // llvm-objdump tool to print source code alongside disassembly.; // In fact, currently it is a simple wrapper for BTFParser instance.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DebugInfo/BTF/BTFContext.cpp:414,interface,interface,414,interpreter/llvm-project/llvm/lib/DebugInfo/BTF/BTFContext.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DebugInfo/BTF/BTFContext.cpp,2,"['interface', 'wrap']","['interface', 'wrapper']"
Integrability,"//===- BTFContext.h ---------------------------------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // BTFContext interface is used by llvm-objdump tool to print source; // code alongside disassembly.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/DebugInfo/BTF/BTFContext.h:394,interface,interface,394,interpreter/llvm-project/llvm/include/llvm/DebugInfo/BTF/BTFContext.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/DebugInfo/BTF/BTFContext.h,1,['interface'],['interface']
Integrability,"//===- BasicAliasAnalysis.cpp - Stateless Alias Analysis Impl -------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines the primary stateless implementation of the; // Alias Analysis interface that implements identities (two different; // globals cannot alias, etc), but does no stateful analysis.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/BasicAliasAnalysis.cpp:464,interface,interface,464,interpreter/llvm-project/llvm/lib/Analysis/BasicAliasAnalysis.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/BasicAliasAnalysis.cpp,1,['interface'],['interface']
Integrability,"//===- BasicAliasAnalysis.h - Stateless, local Alias Analysis ---*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; /// \file; /// This is the interface for LLVM's primary stateless and local alias analysis.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/BasicAliasAnalysis.h:403,interface,interface,403,interpreter/llvm-project/llvm/include/llvm/Analysis/BasicAliasAnalysis.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/BasicAliasAnalysis.h,1,['interface'],['interface']
Integrability,"//===- BasicTTIImpl.h -------------------------------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; /// \file; /// This file provides a helper that implements much of the TTI interface in; /// terms of the target-independent code generator and TargetLowering; /// interfaces.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/BasicTTIImpl.h:455,interface,interface,455,interpreter/llvm-project/llvm/include/llvm/CodeGen/BasicTTIImpl.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/BasicTTIImpl.h,2,['interface'],"['interface', 'interfaces']"
Integrability,"//===- BasicTargetTransformInfo.cpp - Basic target-independent TTI impl ---===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; /// \file; /// This file provides the implementation of a basic TargetTransformInfo pass; /// predicated on the target abstractions present in the target independent; /// code generator. It uses these (primarily TargetLowering) to model as much; /// of the TTI query interface as possible. It is included by most targets so; /// that they can specialize only a small subset of the query space.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/BasicTargetTransformInfo.cpp:643,interface,interface,643,interpreter/llvm-project/llvm/lib/CodeGen/BasicTargetTransformInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/BasicTargetTransformInfo.cpp,1,['interface'],['interface']
Integrability,"//===- BinaryStream.h - Base interface for a stream of data -----*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/BinaryStream.h:29,interface,interface,29,interpreter/llvm-project/llvm/include/llvm/Support/BinaryStream.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/BinaryStream.h,1,['interface'],['interface']
Integrability,"//===- BitstreamReader.h - Low-level bitstream reader interface -*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This header defines the BitstreamReader class. This class can be used to; // read an arbitrary bitstream, regardless of its contents.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Bitstream/BitstreamReader.h:54,interface,interface,54,interpreter/llvm-project/llvm/include/llvm/Bitstream/BitstreamReader.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Bitstream/BitstreamReader.h,1,['interface'],['interface']
Integrability,"//===- BitstreamWriter.h - Low-level bitstream writer interface -*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This header defines the BitstreamWriter class. This class can be used to; // write an arbitrary bitstream, regardless of its contents.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Bitstream/BitstreamWriter.h:54,interface,interface,54,interpreter/llvm-project/llvm/include/llvm/Bitstream/BitstreamWriter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Bitstream/BitstreamWriter.h,1,['interface'],['interface']
Integrability,"//===- BranchProbability.h - Branch Probability Wrapper ---------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // Definition of BranchProbability shared by IR and Machine Instructions.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/BranchProbability.h:48,Wrap,Wrapper,48,interpreter/llvm-project/llvm/include/llvm/Support/BranchProbability.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/BranchProbability.h,1,['Wrap'],['Wrapper']
Integrability,"//===- BugSuppression.cpp - Suppression interface -------------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/BugSuppression.cpp:40,interface,interface,40,interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/BugSuppression.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/BugSuppression.cpp,1,['interface'],['interface']
Integrability,"//===- BugSuppression.h - Suppression interface -----------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines BugSuppression, a simple interface class encapsulating; // all user provided in-code suppressions.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/StaticAnalyzer/Core/BugReporter/BugSuppression.h:38,interface,interface,38,interpreter/llvm-project/clang/include/clang/StaticAnalyzer/Core/BugReporter/BugSuppression.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/StaticAnalyzer/Core/BugReporter/BugSuppression.h,2,['interface'],['interface']
Integrability,"//===- BuildLibCalls.h - Utility builder for libcalls -----------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file exposes an interface to build some C language libcalls for; // optimization passes that need to call the various functions.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/BuildLibCalls.h:404,interface,interface,404,interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/BuildLibCalls.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/BuildLibCalls.h,1,['interface'],['interface']
Integrability,"//===- CIndexDiagnostic.cpp - Diagnostics C Interface ---------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // Implements the diagnostic functions of the Clang C interface.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/libclang/CIndexDiagnostic.cpp:44,Interface,Interface,44,interpreter/llvm-project/clang/tools/libclang/CIndexDiagnostic.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/libclang/CIndexDiagnostic.cpp,2,"['Interface', 'interface']","['Interface', 'interface']"
Integrability,"//===- CLog.h - Logging Interface -------------------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/libclang/CLog.h:24,Interface,Interface,24,interpreter/llvm-project/clang/tools/libclang/CLog.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/libclang/CLog.h,1,['Interface'],['Interface']
Integrability,"//===- COFFImportFile.h - COFF short import file implementation -*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // COFF short import file is a special kind of file which contains; // only symbol names for DLL-exported symbols. This class implements; // exporting of Symbols to create libraries and a SymbolicFile; // interface for the file type.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Object/COFFImportFile.h:585,interface,interface,585,interpreter/llvm-project/llvm/include/llvm/Object/COFFImportFile.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Object/COFFImportFile.h,1,['interface'],['interface']
Integrability,"//===- CSEConfigBase.h - A CSEConfig interface ------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/CSEConfigBase.h:37,interface,interface,37,interpreter/llvm-project/llvm/include/llvm/CodeGen/CSEConfigBase.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/CSEConfigBase.h,1,['interface'],['interface']
Integrability,"//===- CTagsEmitter.cpp - Generate ctags-compatible index ------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This tablegen backend emits an index of definitions in ctags(1) format.; // A helper script, utils/TableGen/tdtags, provides an easier-to-use; // interface; run 'tdtags -H' for documentation.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/CTagsEmitter.cpp:530,interface,interface,530,interpreter/llvm-project/llvm/utils/TableGen/CTagsEmitter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/CTagsEmitter.cpp,1,['interface'],['interface']
Integrability,"//===- CXComment.h - Routines for manipulating CXComments -----------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines routines for manipulating CXComments.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/libclang/CXComment.h:21,Rout,Routines,21,interpreter/llvm-project/clang/tools/libclang/CXComment.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/libclang/CXComment.h,2,"['Rout', 'rout']","['Routines', 'routines']"
Integrability,"//===- CXCursor.cpp - Routines for manipulating CXCursors -----------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines routines for manipulating CXCursors. It should be the; // only file that has internal knowledge of the encoding of the data in; // CXCursor.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/libclang/CXCursor.cpp:22,Rout,Routines,22,interpreter/llvm-project/clang/tools/libclang/CXCursor.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/libclang/CXCursor.cpp,2,"['Rout', 'rout']","['Routines', 'routines']"
Integrability,"//===- CXCursor.h - Routines for manipulating CXCursors -------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines routines for manipulating CXCursors.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/libclang/CXCursor.h:20,Rout,Routines,20,interpreter/llvm-project/clang/tools/libclang/CXCursor.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/libclang/CXCursor.h,2,"['Rout', 'rout']","['Routines', 'routines']"
Integrability,"//===- CXFile.h - Routines for manipulating CXFile --------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/libclang/CXFile.h:18,Rout,Routines,18,interpreter/llvm-project/clang/tools/libclang/CXFile.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/libclang/CXFile.h,1,['Rout'],['Routines']
Integrability,"//===- CXSourceLocation.cpp - CXSourceLocations APIs ------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines routines for manipulating CXSourceLocations.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/libclang/CXSourceLocation.cpp:401,rout,routines,401,interpreter/llvm-project/clang/tools/libclang/CXSourceLocation.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/libclang/CXSourceLocation.cpp,1,['rout'],['routines']
Integrability,"//===- CXSourceLocation.h - CXSourceLocations Utilities ---------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines routines for manipulating CXSourceLocations.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/libclang/CXSourceLocation.h:401,rout,routines,401,interpreter/llvm-project/clang/tools/libclang/CXSourceLocation.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/libclang/CXSourceLocation.h,1,['rout'],['routines']
Integrability,"//===- CXStoredDiagnostic.cpp - Diagnostics C Interface -------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // Implements part of the diagnostic functions of the Clang C interface.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/libclang/CXStoredDiagnostic.cpp:46,Interface,Interface,46,interpreter/llvm-project/clang/tools/libclang/CXStoredDiagnostic.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/libclang/CXStoredDiagnostic.cpp,2,"['Interface', 'interface']","['Interface', 'interface']"
Integrability,"//===- CXString.cpp - Routines for manipulating CXStrings -----------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines routines for manipulating CXStrings. It should be the; // only file that has internal knowledge of the encoding of the data in; // CXStrings.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/libclang/CXString.cpp:22,Rout,Routines,22,interpreter/llvm-project/clang/tools/libclang/CXString.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/libclang/CXString.cpp,2,"['Rout', 'rout']","['Routines', 'routines']"
Integrability,"//===- CXString.h - Routines for manipulating CXStrings -------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines routines for manipulating CXStrings.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/libclang/CXString.h:20,Rout,Routines,20,interpreter/llvm-project/clang/tools/libclang/CXString.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/libclang/CXString.h,4,"['Rout', 'rout']","['Routines', 'routines']"
Integrability,"//===- CXTranslationUnit.h - Routines for manipulating CXTranslationUnits -===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines routines for manipulating CXTranslationUnits.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/libclang/CXTranslationUnit.h:29,Rout,Routines,29,interpreter/llvm-project/clang/tools/libclang/CXTranslationUnit.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/libclang/CXTranslationUnit.h,2,"['Rout', 'rout']","['Routines', 'routines']"
Integrability,"//===- CXTypes.h - Routines for manipulating CXTypes ----------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines routines for manipulating CXCursors.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/libclang/CXType.h:19,Rout,Routines,19,interpreter/llvm-project/clang/tools/libclang/CXType.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/libclang/CXType.h,2,"['Rout', 'rout']","['Routines', 'routines']"
Integrability,"//===- CXXInheritance.cpp - C++ Inheritance -------------------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file provides routines that help analyzing C++ inheritance hierarchies.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/CXXInheritance.cpp:402,rout,routines,402,interpreter/llvm-project/clang/lib/AST/CXXInheritance.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/CXXInheritance.cpp,1,['rout'],['routines']
Integrability,"//===- CXXInheritance.h - C++ Inheritance -----------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file provides routines that help analyzing C++ inheritance hierarchies.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/CXXInheritance.h:402,rout,routines,402,interpreter/llvm-project/clang/include/clang/AST/CXXInheritance.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/CXXInheritance.h,1,['rout'],['routines']
Integrability,"//===- CallEvent.cpp - Wrapper for all function and method calls ----------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; /// \file This file defines CallEvent and its subclasses, which represent path-; /// sensitive instances of different kinds of function and method calls; /// (C, C++, and Objective-C).; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/CallEvent.cpp:23,Wrap,Wrapper,23,interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/CallEvent.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/CallEvent.cpp,1,['Wrap'],['Wrapper']
Integrability,"//===- CallEvent.h - Wrapper for all function and method calls --*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; /// \file This file defines CallEvent and its subclasses, which represent path-; /// sensitive instances of different kinds of function and method calls; /// (C, C++, and Objective-C).; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/StaticAnalyzer/Core/PathSensitive/CallEvent.h:21,Wrap,Wrapper,21,interpreter/llvm-project/clang/include/clang/StaticAnalyzer/Core/PathSensitive/CallEvent.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/StaticAnalyzer/Core/PathSensitive/CallEvent.h,1,['Wrap'],['Wrapper']
Integrability,"//===- CallGraph.h - Build a Module's call graph ----------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; /// \file; ///; /// This file provides interfaces used to build and manipulate a call graph,; /// which is a very useful tool for interprocedural optimization.; ///; /// Every function in a module is represented as a node in the call graph. The; /// callgraph node keeps track of which functions are called by the function; /// corresponding to the node.; ///; /// A call graph may contain nodes where the function that they correspond to; /// is null. These 'external' nodes are used to represent control flow that is; /// not represented (or analyzable) in the module. In particular, this; /// analysis builds one external node such that:; /// 1. All functions in the module without internal linkage will have edges; /// from this external node, indicating that they could be called by; /// functions outside of the module.; /// 2. All functions whose address is used for something more than a direct; /// call, for example being stored into a memory location will also have; /// an edge from this external node. Since they may be called by an; /// unknown caller later, they must be tracked as such.; ///; /// There is a second external node added for calls that leave this module.; /// Functions have a call edge to the external node iff:; /// 1. The function is external, reflecting the fact that they could call; /// anything without internal linkage or that has its address taken.; /// 2. The function contains an indirect function call.; ///; /// As an extension in the future, there may be multiple nodes with a null; /// function. These will be used when we can prove (through pointer analysis); /// that an indirec",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/CallGraph.h:415,interface,interfaces,415,interpreter/llvm-project/llvm/include/llvm/Analysis/CallGraph.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/CallGraph.h,1,['interface'],['interfaces']
Integrability,"//===- CallGraphUpdater.cpp - A (lazy) call graph update helper -----------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; /// \file; ///; /// This file provides interfaces used to manipulate a call graph, regardless; /// if it is a ""old style"" CallGraph or an ""new style"" LazyCallGraph.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/CallGraphUpdater.cpp:415,interface,interfaces,415,interpreter/llvm-project/llvm/lib/Transforms/Utils/CallGraphUpdater.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/CallGraphUpdater.cpp,1,['interface'],['interfaces']
Integrability,"//===- CallGraphUpdater.h - A (lazy) call graph update helper ---*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; /// \file; ///; /// This file provides interfaces used to manipulate a call graph, regardless; /// if it is a ""old style"" CallGraph or an ""new style"" LazyCallGraph.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/CallGraphUpdater.h:415,interface,interfaces,415,interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/CallGraphUpdater.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/CallGraphUpdater.h,1,['interface'],['interfaces']
Integrability,"//===- CheckerRegistry.h - Maintains all available checkers -----*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // Contains the logic for parsing the TableGen file Checkers.td, and parsing the; // specific invocation of the analyzer (which checker/package is enabled, values; // of their options, etc). This is in the frontend library because checker; // registry functions are called from here but are defined in the dependent; // library libStaticAnalyzerCheckers, but the actual data structure that holds; // the parsed information is in the Core library.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/StaticAnalyzer/Frontend/CheckerRegistry.h:686,depend,dependent,686,interpreter/llvm-project/clang/include/clang/StaticAnalyzer/Frontend/CheckerRegistry.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/StaticAnalyzer/Frontend/CheckerRegistry.h,1,['depend'],['dependent']
Integrability,"//===- CheckerRegistryData.h ------------------------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file contains the data structures to which the TableGen file Checkers.td; // maps to, as well as what was parsed from the the specific invocation (whether; // a checker/package is enabled, their options values, etc).; //; // The parsing of the invocation is done by CheckerRegistry, which is found in; // the Frontend library. This allows the Core and Checkers libraries to utilize; // this information, such as enforcing rules on checker dependency bug emission,; // ensuring all checker options were queried, etc.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/StaticAnalyzer/Core/CheckerRegistryData.h:827,depend,dependency,827,interpreter/llvm-project/clang/include/clang/StaticAnalyzer/Core/CheckerRegistryData.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/StaticAnalyzer/Core/CheckerRegistryData.h,1,['depend'],['dependency']
Integrability,"//===- CloneFunction.cpp - Clone a function into another function ---------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements the CloneFunctionInto interface, which is used as the; // low-level function cloner. This is used by the CloneFunction and function; // inliner to do the dirty work of copying the body of a function around.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/CloneFunction.cpp:426,interface,interface,426,interpreter/llvm-project/llvm/lib/Transforms/Utils/CloneFunction.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/CloneFunction.cpp,1,['interface'],['interface']
Integrability,"//===- CloneModule.cpp - Clone an entire module ---------------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements the CloneModule interface which makes a copy of an; // entire module.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/CloneModule.cpp:420,interface,interface,420,interpreter/llvm-project/llvm/lib/Transforms/Utils/CloneModule.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/CloneModule.cpp,1,['interface'],['interface']
Integrability,"//===- CmpInstAnalysis.cpp - Utils to help fold compares ---------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file holds routines to help analyse compare instructions; // and fold them into constants or other compare instructions; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/CmpInstAnalysis.cpp:396,rout,routines,396,interpreter/llvm-project/llvm/lib/Analysis/CmpInstAnalysis.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/CmpInstAnalysis.cpp,1,['rout'],['routines']
Integrability,"//===- CodeCompleteConsumer.cpp - Code Completion Interface ---------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements the CodeCompleteConsumer class.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/CodeCompleteConsumer.cpp:50,Interface,Interface,50,interpreter/llvm-project/clang/lib/Sema/CodeCompleteConsumer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/CodeCompleteConsumer.cpp,1,['Interface'],['Interface']
Integrability,"//===- CodeCompleteConsumer.h - Code Completion Interface -------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines the CodeCompleteConsumer class.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Sema/CodeCompleteConsumer.h:48,Interface,Interface,48,interpreter/llvm-project/clang/include/clang/Sema/CodeCompleteConsumer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Sema/CodeCompleteConsumer.h,1,['Interface'],['Interface']
Integrability,"//===- CodeEmitterGen.cpp - Code Emitter Generator ------------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // CodeEmitterGen uses the descriptions of instructions and their fields to; // construct an automated code emitter: a function called; // getBinaryCodeForInstr() that, given a MCInst, returns the value of the; // instruction - either as an uint64_t or as an APInt, depending on the; // maximum bit width of all Inst definitions.; //; // In addition, it generates another function called getOperandBitOffset(); // that, given a MCInst and an operand index, returns the minimum of indices of; // all bits that carry some portion of the respective operand. When the target's; // encodeInstruction() stores the instruction in a little-endian byte order, the; // returned value is the offset of the start of the operand in the encoded; // instruction. Other targets might need to adjust the returned value according; // to their encodeInstruction() implementation.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/CodeEmitterGen.cpp:646,depend,depending,646,interpreter/llvm-project/llvm/utils/TableGen/CodeEmitterGen.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/CodeEmitterGen.cpp,1,['depend'],['depending']
Integrability,"//===- CodeExtractor.cpp - Pull code region into a new function -----------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements the interface to tear out a code region, such as an; // individual loop or a parallel section, into a new function, replacing it with; // a call to the new function.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/CodeExtractor.cpp:408,interface,interface,408,interpreter/llvm-project/llvm/lib/Transforms/Utils/CodeExtractor.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/CodeExtractor.cpp,1,['interface'],['interface']
Integrability,"//===- CodeGenInstAlias.cpp - CodeGen InstAlias Class Wrapper -------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements the CodeGenInstAlias class.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/CodeGenInstAlias.cpp:54,Wrap,Wrapper,54,interpreter/llvm-project/llvm/utils/TableGen/CodeGenInstAlias.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/CodeGenInstAlias.cpp,1,['Wrap'],['Wrapper']
Integrability,"//===- CodeGenInstAlias.h - InstAlias Class Wrapper -------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines a wrapper class for the 'InstAlias' TableGen class.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/CodeGenInstAlias.h:44,Wrap,Wrapper,44,interpreter/llvm-project/llvm/utils/TableGen/CodeGenInstAlias.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/CodeGenInstAlias.h,2,"['Wrap', 'wrap']","['Wrapper', 'wrapper']"
Integrability,"//===- CodeGenInstruction.cpp - CodeGen Instruction Class Wrapper ---------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements the CodeGenInstruction class.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/CodeGenInstruction.cpp:58,Wrap,Wrapper,58,interpreter/llvm-project/llvm/utils/TableGen/CodeGenInstruction.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/CodeGenInstruction.cpp,1,['Wrap'],['Wrapper']
Integrability,"//===- CodeGenInstruction.h - Instruction Class Wrapper ---------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines a wrapper class for the 'Instruction' TableGen class.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/CodeGenInstruction.h:48,Wrap,Wrapper,48,interpreter/llvm-project/llvm/utils/TableGen/CodeGenInstruction.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/CodeGenInstruction.h,2,"['Wrap', 'wrap']","['Wrapper', 'wrapper']"
Integrability,"//===- CodeGenIntrinsics.cpp - Intrinsic Class Wrapper --------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines a wrapper class for the 'Intrinsic' TableGen class.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/CodeGenIntrinsics.cpp:47,Wrap,Wrapper,47,interpreter/llvm-project/llvm/utils/TableGen/CodeGenIntrinsics.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/CodeGenIntrinsics.cpp,2,"['Wrap', 'wrap']","['Wrapper', 'wrapper']"
Integrability,"//===- CodeGenIntrinsics.h - Intrinsic Class Wrapper -----------*- C++ -*--===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines a wrapper class for the 'Intrinsic' TableGen class.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/CodeGenIntrinsics.h:45,Wrap,Wrapper,45,interpreter/llvm-project/llvm/utils/TableGen/CodeGenIntrinsics.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/CodeGenIntrinsics.h,2,"['Wrap', 'wrap']","['Wrapper', 'wrapper']"
Integrability,"//===- CodeGenTarget.cpp - CodeGen Target Class Wrapper -------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This class wraps target description classes used by the various code; // generation TableGen backends. This makes it easier to access the data and; // provides a single place that needs to check it for validity. All of these; // classes abort on error conditions.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/CodeGenTarget.cpp:48,Wrap,Wrapper,48,interpreter/llvm-project/llvm/utils/TableGen/CodeGenTarget.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/CodeGenTarget.cpp,2,"['Wrap', 'wrap']","['Wrapper', 'wraps']"
Integrability,"//===- CodeGenTarget.h - Target Class Wrapper -------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines wrappers for the Target class and related global; // functionality. This makes it easier to access the data and provides a single; // place that needs to check it for validity. All of these classes abort; // on error conditions.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/CodeGenTarget.h:38,Wrap,Wrapper,38,interpreter/llvm-project/llvm/utils/TableGen/CodeGenTarget.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/CodeGenTarget.h,2,"['Wrap', 'wrap']","['Wrapper', 'wrappers']"
Integrability,"//===- CombineRuleOperandTypeChecker --------------------------------------===//; /// This is a wrapper around OperandTypeChecker specialized for Combiner Rules.; /// On top of doing the same things as OperandTypeChecker, this also attempts to; /// infer as many types as possible for temporary register defs & immediates in; /// apply patterns.; ///; /// The inference is trivial and leverages the MCOI OperandTypes encoded in; /// CodeGenInstructions to infer types across patterns in a CombineRule. It's; /// thus very limited and only supports CodeGenInstructions (but that's the main; /// use case so it's fine).; ///; /// We only try to infer untyped operands in apply patterns when they're temp; /// reg defs, or immediates. Inference always outputs a `TypeOf<$x>` where $x is; /// a named operand from a match pattern.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/GlobalISelCombinerEmitter.cpp:96,wrap,wrapper,96,interpreter/llvm-project/llvm/utils/TableGen/GlobalISelCombinerEmitter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/GlobalISelCombinerEmitter.cpp,1,['wrap'],['wrapper']
Integrability,"//===- CommentOptions.h - Options for parsing comments ----------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; /// \file; /// Defines the clang::CommentOptions interface.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/CommentOptions.h:429,interface,interface,429,interpreter/llvm-project/clang/include/clang/Basic/CommentOptions.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/CommentOptions.h,1,['interface'],['interface']
Integrability,"//===- CommonOptionsParser.h - common options for clang tools -*- C++ -*-=====//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements the CommonOptionsParser class used to parse common; // command-line options for clang tools, so that they can be run as separate; // command-line applications with a consistent common interface for handling; // compilation database and input files.; //; // It provides a common subset of command-line options, common algorithm; // for locating a compilation database and source files, and help messages; // for the basic command-line interface.; //; // It creates a CompilationDatabase and reads common command-line options.; //; // This class uses the Clang Tooling infrastructure, see; // http://clang.llvm.org/docs/HowToSetupToolingForLLVM.html; // for details on setting it up with LLVM source tree.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Tooling/CommonOptionsParser.h:588,interface,interface,588,interpreter/llvm-project/clang/include/clang/Tooling/CommonOptionsParser.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Tooling/CommonOptionsParser.h,3,"['interface', 'message']","['interface', 'messages']"
Integrability,"//===- CompilationDatabase.h ------------------------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file provides an interface and multiple implementations for; // CompilationDatabases.; //; // While C++ refactoring and analysis tools are not compilers, and thus; // don't run as part of the build system, they need the exact information; // of a build in order to be able to correctly understand the C++ code of; // the project. This information is provided via the CompilationDatabase; // interface.; //; // To create a CompilationDatabase from a build directory one can call; // CompilationDatabase::loadFromDirectory(), which deduces the correct; // compilation database from the root of the build tree.; //; // See the concrete subclasses of CompilationDatabase for currently supported; // formats.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Tooling/CompilationDatabase.h:405,interface,interface,405,interpreter/llvm-project/clang/include/clang/Tooling/CompilationDatabase.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Tooling/CompilationDatabase.h,2,['interface'],['interface']
Integrability,"//===- ConstantFold.cpp - LLVM constant folder ----------------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements folding of constants for LLVM. This implements the; // (internal) ConstantFold.h interface, which is used by the; // ConstantExpr::get* methods to automatically fold constants when possible.; //; // The current constant folding implementation is implemented in two pieces: the; // pieces that don't need DataLayout, and the pieces that do. This is to avoid; // a dependence in IR on Target.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/ConstantFold.cpp:485,interface,interface,485,interpreter/llvm-project/llvm/lib/IR/ConstantFold.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/ConstantFold.cpp,2,"['depend', 'interface']","['dependence', 'interface']"
Integrability,"//===- ConstantFolder.h - Constant folding helper ---------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines the ConstantFolder class, a helper for IRBuilder.; // It provides IRBuilder with a set of methods for creating constants; // with minimal folding. For general constant creation and folding,; // use ConstantExpr and the routines in llvm/Analysis/ConstantFolding.h.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/ConstantFolder.h:620,rout,routines,620,interpreter/llvm-project/llvm/include/llvm/IR/ConstantFolder.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/ConstantFolder.h,1,['rout'],['routines']
Integrability,"//===- ConstantInitBuilder.h - Builder for LLVM IR constants ----*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This class provides a convenient interface for building complex; // global initializers of the sort that are frequently required for; // language ABIs.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/CodeGen/ConstantInitBuilder.h:416,interface,interface,416,interpreter/llvm-project/clang/include/clang/CodeGen/ConstantInitBuilder.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/CodeGen/ConstantInitBuilder.h,1,['interface'],['interface']
Integrability,"//===- ConstantMerge.cpp - Merge duplicate global constants ---------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines the interface to a pass that merges duplicate global; // constants together into a single constant that is shared. This is useful; // because some passes (ie TraceValues) insert a lot of string constants into; // the program, regardless of whether or not an existing string is available.; //; // Algorithm: ConstantMerge is designed to build up a map of available constants; // and eliminate duplicates when it is initialized.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/ConstantMerge.cpp:405,interface,interface,405,interpreter/llvm-project/llvm/lib/Transforms/IPO/ConstantMerge.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/ConstantMerge.cpp,1,['interface'],['interface']
Integrability,"//===- ConstantMerge.h - Merge duplicate global constants -------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines the interface to a pass that merges duplicate global; // constants together into a single constant that is shared. This is useful; // because some passes (ie TraceValues) insert a lot of string constants into; // the program, regardless of whether or not an existing string is available.; //; // Algorithm: ConstantMerge is designed to build up a map of available constants; // and eliminate duplicates when it is initialized.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/ConstantMerge.h:405,interface,interface,405,interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/ConstantMerge.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/ConstantMerge.h,1,['interface'],['interface']
Integrability,"//===- ConstantRange.cpp - ConstantRange implementation -------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // Represent a range of possible values that may occur when the program is run; // for an integral value. This keeps track of a lower and upper bound for the; // constant, which MAY wrap around the end of the numeric range. To do this, it; // keeps track of a [lower, upper) bound, which specifies an interval just like; // STL iterators. When used with boolean values, the following are important; // ranges (other integral ranges use min/max values for special range values):; //; // [F, F) = {} = Empty set; // [T, F) = {T}; // [F, T) = {F}; // [T, T) = {F, T} = Full set; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/ConstantRange.cpp:562,wrap,wrap,562,interpreter/llvm-project/llvm/lib/IR/ConstantRange.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/ConstantRange.cpp,1,['wrap'],['wrap']
Integrability,"//===- ConstantRange.h - Represent a range ----------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // Represent a range of possible values that may occur when the program is run; // for an integral value. This keeps track of a lower and upper bound for the; // constant, which MAY wrap around the end of the numeric range. To do this, it; // keeps track of a [lower, upper) bound, which specifies an interval just like; // STL iterators. When used with boolean values, the following are important; // ranges: :; //; // [F, F) = {} = Empty set; // [T, F) = {T}; // [F, T) = {F}; // [T, T) = {F, T} = Full set; //; // The other integral ranges use min/max values for special range values. For; // example, for 8-bit types, it uses:; // [0, 0) = {} = Empty set; // [255, 255) = {0..255} = Full Set; //; // Note that ConstantRange can be used to represent either signed or; // unsigned ranges.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/ConstantRange.h:562,wrap,wrap,562,interpreter/llvm-project/llvm/include/llvm/IR/ConstantRange.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/ConstantRange.h,1,['wrap'],['wrap']
Integrability,"//===- ConstraintManager.cpp - Constraints on symbolic values. ------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defined the interface to manage constraints on symbolic values.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/ConstraintManager.cpp:405,interface,interface,405,interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/ConstraintManager.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/ConstraintManager.cpp,1,['interface'],['interface']
Integrability,"//===- ConstraintManager.h - Constraints on symbolic values. ----*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defined the interface to manage constraints on symbolic values.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/StaticAnalyzer/Core/PathSensitive/ConstraintManager.h:405,interface,interface,405,interpreter/llvm-project/clang/include/clang/StaticAnalyzer/Core/PathSensitive/ConstraintManager.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/StaticAnalyzer/Core/PathSensitive/ConstraintManager.h,1,['interface'],['interface']
Integrability,"//===- Construction of codegen pass pipelines ------------------*- C++ -*--===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; /// \file; ///; /// Interfaces for registering analysis passes, producing common pass manager; /// configurations, and parsing of pass pipelines.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/CodeGenPassBuilder.h:396,Interface,Interfaces,396,interpreter/llvm-project/llvm/include/llvm/CodeGen/CodeGenPassBuilder.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/CodeGenPassBuilder.h,1,['Interface'],['Interfaces']
Integrability,"//===- CoroInternal.h - Internal Coroutine interfaces ---------*- C++ -*---===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; // Common definitions/declarations used internally by coroutine lowering passes.; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Coroutines/CoroInternal.h:43,interface,interfaces,43,interpreter/llvm-project/llvm/lib/Transforms/Coroutines/CoroInternal.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Coroutines/CoroInternal.h,1,['interface'],['interfaces']
Integrability,"//===- CoverageExporter.h - Code coverage exporter ------------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This class defines a code coverage exporter interface.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-cov/CoverageExporter.h:427,interface,interface,427,interpreter/llvm-project/llvm/tools/llvm-cov/CoverageExporter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-cov/CoverageExporter.h,1,['interface'],['interface']
Integrability,"//===- CriticalAntiDepBreaker.cpp - Anti-dep breaker ----------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements the CriticalAntiDepBreaker class, which; // implements register anti-dependence breaking along a blocks; // critical path during post-RA scheduler.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/CriticalAntiDepBreaker.cpp:473,depend,dependence,473,interpreter/llvm-project/llvm/lib/CodeGen/CriticalAntiDepBreaker.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/CriticalAntiDepBreaker.cpp,1,['depend'],['dependence']
Integrability,"//===- CursorVisitor.h - CursorVisitor interface ----------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/libclang/CursorVisitor.h:39,interface,interface,39,interpreter/llvm-project/clang/tools/libclang/CursorVisitor.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/libclang/CursorVisitor.h,1,['interface'],['interface']
Integrability,"//===- DCE.h - Dead code elimination ----------------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file provides the interface for the Dead Code Elimination pass.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Scalar/DCE.h:406,interface,interface,406,interpreter/llvm-project/llvm/include/llvm/Transforms/Scalar/DCE.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Scalar/DCE.h,1,['interface'],['interface']
Integrability,"//===- DDG.cpp - Data Dependence Graph -------------------------------------==//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // The implementation for the data dependence graph.; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/DDG.cpp:22,Depend,Dependence,22,interpreter/llvm-project/llvm/lib/Analysis/DDG.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/DDG.cpp,2,"['Depend', 'depend']","['Dependence', 'dependence']"
Integrability,"//===- DDGPrinter.cpp - DOT printer for the data dependence graph ----------==//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //===----------------------------------------------------------------------===//; //; // This file defines the `-dot-ddg` analysis pass, which emits DDG in DOT format; // in a file named `ddg.<graph-name>.dot` for each loop in a function.; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/DDGPrinter.cpp:49,depend,dependence,49,interpreter/llvm-project/llvm/lib/Analysis/DDGPrinter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/DDGPrinter.cpp,1,['depend'],['dependence']
Integrability,"//===- DFAJumpThreading.h - Threads a switch statement inside a loop ------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file provides the interface for the DFAJumpThreading pass.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Scalar/DFAJumpThreading.h:406,interface,interface,406,interpreter/llvm-project/llvm/include/llvm/Transforms/Scalar/DFAJumpThreading.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Scalar/DFAJumpThreading.h,1,['interface'],['interface']
Integrability,"//===- DXContainer.h - DXContainer file implementation ----------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file declares the DXContainerFile class, which implements the ObjectFile; // interface for DXContainer files.; //; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Object/DXContainer.h:465,interface,interface,465,interpreter/llvm-project/llvm/include/llvm/Object/DXContainer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Object/DXContainer.h,1,['interface'],['interface']
Integrability,"//===- DataLayout.cpp - Data size & alignment routines ---------------------==//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines layout properties related to datatype size/offset/alignment; // information.; //; // This structure should be created once, filled in if the defaults are not; // correct and then passed around by const&. None of the members functions; // require modification to the object.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/DataLayout.cpp:46,rout,routines,46,interpreter/llvm-project/llvm/lib/IR/DataLayout.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/DataLayout.cpp,1,['rout'],['routines']
Integrability,"//===- DebugInfo.h - Debug Information Helpers ------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines a bunch of datatypes that are useful for creating and; // walking debug info in LLVM IR form. They essentially provide wrappers around; // the information in the global variables that's needed when constructing the; // DWARF information.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/DebugInfo.h:520,wrap,wrappers,520,interpreter/llvm-project/llvm/include/llvm/IR/DebugInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/DebugInfo.h,1,['wrap'],['wrappers']
Integrability,"//===- Debugify.h - Check debug info preservation in optimizations --------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; ///; /// \file Interface to the `debugify` synthetic/original debug info testing; /// utility.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/Debugify.h:391,Interface,Interface,391,interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/Debugify.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/Debugify.h,1,['Interface'],['Interface']
Integrability,"//===- DeclBase.h - Base Classes for representing declarations --*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines the Decl and DeclContext interfaces.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/DeclBase.h:426,interface,interfaces,426,interpreter/llvm-project/clang/include/clang/AST/DeclBase.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/DeclBase.h,1,['interface'],['interfaces']
Integrability,"//===- DeclLookups.h - Low-level interface to all names in a DC -*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines DeclContext::all_lookups_iterator.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/DeclLookups.h:33,interface,interface,33,interpreter/llvm-project/clang/include/clang/AST/DeclLookups.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/DeclLookups.h,1,['interface'],['interface']
Integrability,"//===- DeclObjC.h - Classes for representing declarations -------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines the DeclObjC interface and subclasses.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/DeclObjC.h:414,interface,interface,414,interpreter/llvm-project/clang/include/clang/AST/DeclObjC.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/DeclObjC.h,1,['interface'],['interface']
Integrability,"//===- DeclVisitor.h - Visitor for Decl subclasses --------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines the DeclVisitor interface.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/DeclVisitor.h:417,interface,interface,417,interpreter/llvm-project/clang/include/clang/AST/DeclVisitor.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/DeclVisitor.h,1,['interface'],['interface']
Integrability,"//===- DependenceGraphBuilder.cpp ------------------------------------------==//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; // This file implements common steps of the build algorithm for construction; // of dependence graphs such as DDG and PDG.; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/DependenceGraphBuilder.cpp:7,Depend,DependenceGraphBuilder,7,interpreter/llvm-project/llvm/lib/Analysis/DependenceGraphBuilder.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/DependenceGraphBuilder.cpp,2,"['Depend', 'depend']","['DependenceGraphBuilder', 'dependence']"
Integrability,"//===- DependencyAnalysis.cpp - ObjC ARC Optimization ---------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; /// \file; ///; /// This file defines special dependency analysis routines used in Objective C; /// ARC Optimizations.; ///; /// WARNING: This file knows about certain library functions. It recognizes them; /// by name, and hardwires knowledge of their semantics.; ///; /// WARNING: This file knows about how certain Objective-C library functions are; /// used. Naive LLVM IR transformations which would otherwise be; /// behavior-preserving may break these assumptions.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/ObjCARC/DependencyAnalysis.cpp:7,Depend,DependencyAnalysis,7,interpreter/llvm-project/llvm/lib/Transforms/ObjCARC/DependencyAnalysis.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/ObjCARC/DependencyAnalysis.cpp,3,"['Depend', 'depend', 'rout']","['DependencyAnalysis', 'dependency', 'routines']"
Integrability,"//===- DependencyAnalysis.h - ObjC ARC Optimization ---*- C++ -*-----------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; /// \file; ///; /// This file declares special dependency analysis routines used in Objective C; /// ARC Optimizations.; ///; /// WARNING: This file knows about certain library functions. It recognizes them; /// by name, and hardwires knowledge of their semantics.; ///; /// WARNING: This file knows about how certain Objective-C library functions are; /// used. Naive LLVM IR transformations which would otherwise be; /// behavior-preserving may break these assumptions.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/ObjCARC/DependencyAnalysis.h:7,Depend,DependencyAnalysis,7,interpreter/llvm-project/llvm/lib/Transforms/ObjCARC/DependencyAnalysis.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/ObjCARC/DependencyAnalysis.h,3,"['Depend', 'depend', 'rout']","['DependencyAnalysis', 'dependency', 'routines']"
Integrability,"//===- DependencyDirectivesScanner.cpp ------------------------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; ///; /// \file; /// This is the interface for scanning header and source files to get the; /// minimum necessary preprocessor directives for evaluating includes. It; /// reduces the source down to #define, #include, #import, @import, and any; /// conditional preprocessor logic that contains one of those.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Lex/DependencyDirectivesScanner.cpp:7,Depend,DependencyDirectivesScanner,7,interpreter/llvm-project/clang/lib/Lex/DependencyDirectivesScanner.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Lex/DependencyDirectivesScanner.cpp,2,"['Depend', 'interface']","['DependencyDirectivesScanner', 'interface']"
Integrability,"//===- DependencyScanningFilesystem.cpp - clang-scan-deps fs --------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Tooling/DependencyScanning/DependencyScanningFilesystem.cpp:7,Depend,DependencyScanningFilesystem,7,interpreter/llvm-project/clang/lib/Tooling/DependencyScanning/DependencyScanningFilesystem.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Tooling/DependencyScanning/DependencyScanningFilesystem.cpp,1,['Depend'],['DependencyScanningFilesystem']
Integrability,"//===- DependencyScanningFilesystem.h - clang-scan-deps fs ===---*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Tooling/DependencyScanning/DependencyScanningFilesystem.h:7,Depend,DependencyScanningFilesystem,7,interpreter/llvm-project/clang/include/clang/Tooling/DependencyScanning/DependencyScanningFilesystem.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Tooling/DependencyScanning/DependencyScanningFilesystem.h,1,['Depend'],['DependencyScanningFilesystem']
Integrability,"//===- DependencyScanningService.cpp - clang-scan-deps service ------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Tooling/DependencyScanning/DependencyScanningService.cpp:7,Depend,DependencyScanningService,7,interpreter/llvm-project/clang/lib/Tooling/DependencyScanning/DependencyScanningService.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Tooling/DependencyScanning/DependencyScanningService.cpp,1,['Depend'],['DependencyScanningService']
Integrability,"//===- DependencyScanningService.h - clang-scan-deps service ===-*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Tooling/DependencyScanning/DependencyScanningService.h:7,Depend,DependencyScanningService,7,interpreter/llvm-project/clang/include/clang/Tooling/DependencyScanning/DependencyScanningService.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Tooling/DependencyScanning/DependencyScanningService.h,1,['Depend'],['DependencyScanningService']
Integrability,"//===- DependencyScanningTool.cpp - clang-scan-deps service ---------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Tooling/DependencyScanning/DependencyScanningTool.cpp:7,Depend,DependencyScanningTool,7,interpreter/llvm-project/clang/lib/Tooling/DependencyScanning/DependencyScanningTool.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Tooling/DependencyScanning/DependencyScanningTool.cpp,1,['Depend'],['DependencyScanningTool']
Integrability,"//===- DependencyScanningTool.h - clang-scan-deps service -----------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Tooling/DependencyScanning/DependencyScanningTool.h:7,Depend,DependencyScanningTool,7,interpreter/llvm-project/clang/include/clang/Tooling/DependencyScanning/DependencyScanningTool.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Tooling/DependencyScanning/DependencyScanningTool.h,1,['Depend'],['DependencyScanningTool']
Integrability,"//===- DependencyScanningWorker.cpp - clang-scan-deps worker --------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Tooling/DependencyScanning/DependencyScanningWorker.cpp:7,Depend,DependencyScanningWorker,7,interpreter/llvm-project/clang/lib/Tooling/DependencyScanning/DependencyScanningWorker.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Tooling/DependencyScanning/DependencyScanningWorker.cpp,1,['Depend'],['DependencyScanningWorker']
Integrability,"//===- DependencyScanningWorker.h - clang-scan-deps worker ===---*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Tooling/DependencyScanning/DependencyScanningWorker.h:7,Depend,DependencyScanningWorker,7,interpreter/llvm-project/clang/include/clang/Tooling/DependencyScanning/DependencyScanningWorker.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Tooling/DependencyScanning/DependencyScanningWorker.h,1,['Depend'],['DependencyScanningWorker']
Integrability,"//===- Diagnostic.cpp - C Language Family Diagnostic Handling -------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements the Diagnostic-related interfaces.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Basic/Diagnostic.cpp:427,interface,interfaces,427,interpreter/llvm-project/clang/lib/Basic/Diagnostic.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Basic/Diagnostic.cpp,1,['interface'],['interfaces']
Integrability,"//===- Diagnostic.h - C Language Family Diagnostic Handling -----*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; /// \file; /// Defines the Diagnostic-related interfaces.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/Diagnostic.h:426,interface,interfaces,426,interpreter/llvm-project/clang/include/clang/Basic/Diagnostic.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/Diagnostic.h,1,['interface'],['interfaces']
Integrability,"//===- DiagnosticOptions.cpp - C Language Family Diagnostic Handling ------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements the DiagnosticOptions related interfaces.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Basic/DiagnosticOptions.cpp:434,interface,interfaces,434,interpreter/llvm-project/clang/lib/Basic/DiagnosticOptions.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Basic/DiagnosticOptions.cpp,1,['interface'],['interfaces']
Integrability,"//===- DirectXMCTargetDesc.h - DirectX Target Interface ---------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; ///; /// \file; /// This file contains DirectX target interface.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/DirectX/MCTargetDesc/DirectXMCTargetDesc.h:46,Interface,Interface,46,interpreter/llvm-project/llvm/lib/Target/DirectX/MCTargetDesc/DirectXMCTargetDesc.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/DirectX/MCTargetDesc/DirectXMCTargetDesc.h,2,"['Interface', 'interface']","['Interface', 'interface']"
Integrability,"//===- DlltoolDriver.cpp - dlltool.exe-compatible driver ------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // Defines an interface to a dlltool.exe-compatible driver.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ToolDrivers/llvm-dlltool/DlltoolDriver.cpp:394,interface,interface,394,interpreter/llvm-project/llvm/lib/ToolDrivers/llvm-dlltool/DlltoolDriver.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ToolDrivers/llvm-dlltool/DlltoolDriver.cpp,1,['interface'],['interface']
Integrability,"//===- DlltoolDriver.h - dlltool.exe-compatible driver ----------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // Defines an interface to a dlltool.exe-compatible driver.; // Used by llvm-dlltool.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ToolDrivers/llvm-dlltool/DlltoolDriver.h:394,interface,interface,394,interpreter/llvm-project/llvm/include/llvm/ToolDrivers/llvm-dlltool/DlltoolDriver.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ToolDrivers/llvm-dlltool/DlltoolDriver.h,1,['interface'],['interface']
Integrability,"//===- EarlyCSE.h - Simple and fast CSE pass --------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; /// \file; /// This file provides the interface for a simple, fast CSE pass.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Scalar/EarlyCSE.h:418,interface,interface,418,interpreter/llvm-project/llvm/include/llvm/Transforms/Scalar/EarlyCSE.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Scalar/EarlyCSE.h,1,['interface'],['interface']
Integrability,"//===- Errno.cpp - errno support --------------------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements the errno wrappers.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/Errno.cpp:414,wrap,wrappers,414,interpreter/llvm-project/llvm/lib/Support/Errno.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/Errno.cpp,1,['wrap'],['wrappers']
Integrability,"//===- Error.cpp - tblgen error handling helper routines --------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file contains error handling helper routines to pretty-print diagnostic; // messages from tblgen.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/TableGen/Error.cpp:48,rout,routines,48,interpreter/llvm-project/llvm/lib/TableGen/Error.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/TableGen/Error.cpp,3,"['message', 'rout']","['messages', 'routines']"
Integrability,"//===- ExecutionEngine.h - Abstract Execution Engine Interface --*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines the abstract interface that implements execution support; // for LLVM.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/ExecutionEngine.h:53,Interface,Interface,53,interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/ExecutionEngine.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/ExecutionEngine.h,2,"['Interface', 'interface']","['Interface', 'interface']"
Integrability,"//===- ExprCXX.h - Classes for representing expressions ---------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; /// \file; /// Defines the clang::Expr interface and subclasses for C++ expressions.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/ExprCXX.h:419,interface,interface,419,interpreter/llvm-project/clang/include/clang/AST/ExprCXX.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/ExprCXX.h,1,['interface'],['interface']
Integrability,"//===- ExprObjC.h - Classes for representing ObjC expressions ---*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines the ExprObjC interface and subclasses.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/ExprObjC.h:414,interface,interface,414,interpreter/llvm-project/clang/include/clang/AST/ExprObjC.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/ExprObjC.h,1,['interface'],['interface']
Integrability,"//===- ExternalASTMerger.cpp - Merging External AST Interface ---*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements the ExternalASTMerger, which vends a combination of; // ASTs from several different ASTContext/FileManager pairs; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ExternalASTMerger.cpp:52,Interface,Interface,52,interpreter/llvm-project/clang/lib/AST/ExternalASTMerger.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ExternalASTMerger.cpp,1,['Interface'],['Interface']
Integrability,"//===- ExternalASTSource.cpp - Abstract External AST Interface ------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file provides the default implementation of the ExternalASTSource; // interface, which enables construction of AST nodes from some external; // source.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ExternalASTSource.cpp:53,Interface,Interface,53,interpreter/llvm-project/clang/lib/AST/ExternalASTSource.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ExternalASTSource.cpp,2,"['Interface', 'interface']","['Interface', 'interface']"
Integrability,"//===- ExternalASTSource.h - Abstract External AST Interface ----*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines the ExternalASTSource interface, which enables; // construction of AST nodes from some external source.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/ExternalASTSource.h:51,Interface,Interface,51,interpreter/llvm-project/clang/include/clang/AST/ExternalASTSource.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/ExternalASTSource.h,2,"['Interface', 'interface']","['Interface', 'interface']"
Integrability,"//===- ExternalPreprocessorSource.h - Abstract Macro Interface --*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines the ExternalPreprocessorSource interface, which enables; // construction of macro definitions from some external source.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Lex/ExternalPreprocessorSource.h:53,Interface,Interface,53,interpreter/llvm-project/clang/include/clang/Lex/ExternalPreprocessorSource.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Lex/ExternalPreprocessorSource.h,2,"['Interface', 'interface']","['Interface', 'interface']"
Integrability,"//===- ExtractAPI/ExtractAPIVisitor.h ---------------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; ///; /// \file; /// This file defines the ExtractAPVisitor AST visitation interface.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/ExtractAPI/ExtractAPIVisitor.h:450,interface,interface,450,interpreter/llvm-project/clang/include/clang/ExtractAPI/ExtractAPIVisitor.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/ExtractAPI/ExtractAPIVisitor.h,1,['interface'],['interface']
Integrability,"//===- ExtractAPI/FrontendActions.h -----------------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; ///; /// \file; /// This file defines the ExtractAPIAction and WrappingExtractAPIAction frontend; /// actions.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/ExtractAPI/FrontendActions.h:439,Wrap,WrappingExtractAPIAction,439,interpreter/llvm-project/clang/include/clang/ExtractAPI/FrontendActions.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/ExtractAPI/FrontendActions.h,1,['Wrap'],['WrappingExtractAPIAction']
Integrability,"//===- ExtractAPI/Serialization/SerializerBase.h ----------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; ///; /// \file; /// This file defines the ExtractAPI APISetVisitor interface.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/ExtractAPI/Serialization/SerializerBase.h:443,interface,interface,443,interpreter/llvm-project/clang/include/clang/ExtractAPI/Serialization/SerializerBase.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/ExtractAPI/Serialization/SerializerBase.h,1,['interface'],['interface']
Integrability,"//===- FileSystemStatCache.cpp - Caching for 'stat' calls -----------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines the FileSystemStatCache interface.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Basic/FileSystemStatCache.cpp:425,interface,interface,425,interpreter/llvm-project/clang/lib/Basic/FileSystemStatCache.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Basic/FileSystemStatCache.cpp,1,['interface'],['interface']
Integrability,"//===- FileSystemStatCache.h - Caching for 'stat' calls ---------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; /// \file; /// Defines the FileSystemStatCache interface.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/FileSystemStatCache.h:427,interface,interface,427,interpreter/llvm-project/clang/include/clang/Basic/FileSystemStatCache.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/FileSystemStatCache.h,1,['interface'],['interface']
Integrability,"//===- FrontendPluginRegistry.h ---------------------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // Pluggable Frontend Action Interface; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Frontend/FrontendPluginRegistry.h:409,Interface,Interface,409,interpreter/llvm-project/clang/include/clang/Frontend/FrontendPluginRegistry.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Frontend/FrontendPluginRegistry.h,1,['Interface'],['Interface']
Integrability,"//===- FunctionLoweringInfo.h - Lower functions from LLVM IR ---*- C++ -*--===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This implements routines for translating functions from LLVM IR into; // Machine IR.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/FunctionLoweringInfo.h:399,rout,routines,399,interpreter/llvm-project/llvm/include/llvm/CodeGen/FunctionLoweringInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/FunctionLoweringInfo.h,1,['rout'],['routines']
Integrability,"//===- GCMetadata.h - Garbage collector metadata ----------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file declares the GCFunctionInfo and GCModuleInfo classes, which are; // used as a communication channel from the target code generator to the target; // garbage collectors. This interface allows code generators and garbage; // collectors to be developed independently.; //; // The GCFunctionInfo class logs the data necessary to build a type accurate; // stack map. The code generator outputs:; //; // - Safe points as specified by the GCStrategy's NeededSafePoints.; // - Stack offsets for GC roots, as specified by calls to llvm.gcroot; //; // As a refinement, liveness analysis calculates the set of live roots at each; // safe point. Liveness analysis is not presently performed by the code; // generator, so all roots are assumed live.; //; // GCModuleInfo simply collects GCFunctionInfo instances for each Function as; // they are compiled. This accretion is necessary for collectors which must emit; // a stack map for the compilation unit as a whole. Therefore, GCFunctionInfo; // outlives the MachineFunction from which it is derived and must not refer to; // any code generator data structures.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/GCMetadata.h:567,interface,interface,567,interpreter/llvm-project/llvm/include/llvm/CodeGen/GCMetadata.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/GCMetadata.h,1,['interface'],['interface']
Integrability,"//===- GCOV.cpp - LLVM coverage tool --------------------------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // GCOV implements the interface to read and write coverage files that use; // 'gcov' format.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ProfileData/GCOV.cpp:403,interface,interface,403,interpreter/llvm-project/llvm/lib/ProfileData/GCOV.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ProfileData/GCOV.cpp,1,['interface'],['interface']
Integrability,"//===- GCOV.h - LLVM coverage tool ------------------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This header provides the interface to read and write coverage files that; // use 'gcov' format.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ProfileData/GCOV.h:408,interface,interface,408,interpreter/llvm-project/llvm/include/llvm/ProfileData/GCOV.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ProfileData/GCOV.h,1,['interface'],['interface']
Integrability,"//===- GVMaterializer.h - Interface for GV materializers --------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file provides an abstract interface for loading a module from some; // place. This interface allows incremental or random access loading of; // functions from the file. This is useful for applications like JIT compilers; // or interprocedural optimizers that do not need the entire program in memory; // at the same time.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/GVMaterializer.h:26,Interface,Interface,26,interpreter/llvm-project/llvm/include/llvm/IR/GVMaterializer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/GVMaterializer.h,3,"['Interface', 'interface']","['Interface', 'interface']"
Integrability,"//===- GVN.h - Eliminate redundant values and loads -------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; /// \file; /// This file provides the interface for LLVM's Global Value Numbering pass; /// which eliminates fully redundant instructions. It also does somewhat Ad-Hoc; /// PRE and dead load elimination.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Scalar/GVN.h:414,interface,interface,414,interpreter/llvm-project/llvm/include/llvm/Transforms/Scalar/GVN.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Scalar/GVN.h,1,['interface'],['interface']
Integrability,"//===- GenericConvergenceVerifierImpl.h -----------------------*- C++ -*---===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; ///; /// \file; ///; /// A verifier for the static rules of convergence control tokens that works; /// with both LLVM IR and MIR.; ///; /// This template implementation resides in a separate file so that it does not; /// get injected into every .cpp file that includes the generic header.; ///; /// DO NOT INCLUDE THIS FILE WHEN MERELY USING CYCLEINFO.; ///; /// This file should only be included by files that implement a; /// specialization of the relevant templates. Currently these are:; /// - llvm/lib/IR/Verifier.cpp; /// - llvm/lib/CodeGen/MachineVerifier.cpp; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/GenericConvergenceVerifierImpl.h:601,inject,injected,601,interpreter/llvm-project/llvm/include/llvm/IR/GenericConvergenceVerifierImpl.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/GenericConvergenceVerifierImpl.h,1,['inject'],['injected']
Integrability,"//===- GenericCycleImpl.h -------------------------------------*- C++ -*---===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; ///; /// \file; /// This template implementation resides in a separate file so that it; /// does not get injected into every .cpp file that includes the; /// generic header.; ///; /// DO NOT INCLUDE THIS FILE WHEN MERELY USING CYCLEINFO.; ///; /// This file should only be included by files that implement a; /// specialization of the relevant templates. Currently these are:; /// - llvm/lib/IR/CycleInfo.cpp; /// - llvm/lib/CodeGen/MachineCycleAnalysis.cpp; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/GenericCycleImpl.h:481,inject,injected,481,interpreter/llvm-project/llvm/include/llvm/ADT/GenericCycleImpl.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/GenericCycleImpl.h,1,['inject'],['injected']
Integrability,"//===- GenericCycleInfo.h - Info for Cycles in any IR ------*- C++ -*------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; ///; /// \file; /// \brief Find all cycles in a control-flow graph, including irreducible loops.; ///; /// See docs/CycleTerminology.rst for a formal definition of cycles.; ///; /// Briefly:; /// - A cycle is a generalization of a loop which can represent; /// irreducible control flow.; /// - Cycles identified in a program are implementation defined,; /// depending on the DFS traversal chosen.; /// - Cycles are well-nested, and form a forest with a parent-child; /// relationship.; /// - In any choice of DFS, every natural loop L is represented by a; /// unique cycle C which is a superset of L.; /// - In the absence of irreducible control flow, the cycles are; /// exactly the natural loops in the program.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/GenericCycleInfo.h:734,depend,depending,734,interpreter/llvm-project/llvm/include/llvm/ADT/GenericCycleInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/GenericCycleInfo.h,1,['depend'],['depending']
Integrability,"//===- GenericDomTreeConstruction.h - Dominator Calculation ------*- C++ -*-==//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; /// \file; ///; /// Generic dominator tree construction - this file provides routines to; /// construct immediate dominator information for a flow-graph based on the; /// Semi-NCA algorithm described in this dissertation:; ///; /// [1] Linear-Time Algorithms for Dominators and Related Problems; /// Loukas Georgiadis, Princeton University, November 2005, pp. 21-23:; /// ftp://ftp.cs.princeton.edu/reports/2005/737.pdf; ///; /// Semi-NCA algorithm runs in O(n^2) worst-case time but usually slightly; /// faster than Simple Lengauer-Tarjan in practice.; ///; /// O(n^2) worst cases happen when the computation of nearest common ancestors; /// requires O(n) average time, which is very unlikely in real world. If this; /// ever turns out to be an issue, consider implementing a hybrid algorithm; /// that uses SLT to perform full constructions and SemiNCA for incremental; /// updates.; ///; /// The file uses the Depth Based Search algorithm to perform incremental; /// updates (insertion and deletions). The implemented algorithm is based on; /// this publication:; ///; /// [2] An Experimental Study of Dynamic Dominators; /// Loukas Georgiadis, et al., April 12 2016, pp. 5-7, 9-10:; /// https://arxiv.org/pdf/1604.02711.pdf; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/GenericDomTreeConstruction.h:453,rout,routines,453,interpreter/llvm-project/llvm/include/llvm/Support/GenericDomTreeConstruction.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/GenericDomTreeConstruction.h,1,['rout'],['routines']
Integrability,"//===- GenericUniformityImpl.h -----------------------*- C++ -*------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This template implementation resides in a separate file so that it; // does not get injected into every .cpp file that includes the; // generic header.; //; // DO NOT INCLUDE THIS FILE WHEN MERELY USING UNIFORMITYINFO.; //; // This file should only be included by files that implement a; // specialization of the relvant templates. Currently these are:; // - UniformityAnalysis.cpp; //; // Note: The DEBUG_TYPE macro should be defined before using this; // file so that any use of LLVM_DEBUG is associated with the; // including file rather than this file.; //; //===----------------------------------------------------------------------===//; ///; /// \file; /// \brief Implementation of uniformity analysis.; ///; /// The algorithm is a fixed point iteration that starts with the assumption; /// that all control flow and all values are uniform. Starting from sources of; /// divergence (whose discovery must be implemented by a CFG- or even; /// target-specific derived class), divergence of values is propagated from; /// definition to uses in a straight-forward way. The main complexity lies in; /// the propagation of the impact of divergent control flow on the divergence of; /// values (sync dependencies).; ///; /// NOTE: In general, no interface exists for a transform to update; /// (Machine)UniformityInfo. Additionally, (Machine)CycleAnalysis is a; /// transitive dependence, but it also does not provide an interface for; /// updating itself. Given that, transforms should not preserve uniformity in; /// their getAnalysisUsage() callback.; ///; //===-----------------------------------------------------",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/GenericUniformityImpl.h:467,inject,injected,467,interpreter/llvm-project/llvm/include/llvm/ADT/GenericUniformityImpl.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/GenericUniformityImpl.h,1,['inject'],['injected']
Integrability,"//===- GlobalISelCombinerMatchTableEmitter.cpp - --------------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; /// \file Generate a combiner implementation for GlobalISel from a declarative; /// syntax using GlobalISelMatchTable.; ///; /// Usually, TableGen backends use ""assert is an error"" as a means to report; /// invalid input. They try to diagnose common case but don't try very hard and; /// crashes can be common. This backend aims to behave closer to how a language; /// compiler frontend would behave: we try extra hard to diagnose invalid inputs; /// early, and any crash should be considered a bug (= a feature or diagnostic; /// is missing).; ///; /// While this can make the backend a bit more complex than it needs to be, it; /// pays off because MIR patterns can get complicated. Giving useful error; /// messages to combine writers can help boost their productivity.; ///; /// As with anything, a good balance has to be found. We also don't want to; /// write hundreds of lines of code to detect edge cases. In practice, crashing; /// very occasionally, or giving poor errors in some rare instances, is fine.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/GlobalISelCombinerEmitter.cpp:1090,message,messages,1090,interpreter/llvm-project/llvm/utils/TableGen/GlobalISelCombinerEmitter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/GlobalISelCombinerEmitter.cpp,1,['message'],['messages']
Integrability,"//===- GlobalsModRef.h - Simple Mod/Ref AA for Globals ----------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; /// \file; /// This is the interface for a simple mod/ref and alias analysis over globals.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/GlobalsModRef.h:403,interface,interface,403,interpreter/llvm-project/llvm/include/llvm/Analysis/GlobalsModRef.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/GlobalsModRef.h,1,['interface'],['interface']
Integrability,"//===- GraphWriter.cpp - Implements GraphWriter support routines ----------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements misc. GraphWriter support routines.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/GraphWriter.cpp:56,rout,routines,56,interpreter/llvm-project/llvm/lib/Support/GraphWriter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/GraphWriter.cpp,2,['rout'],['routines']
Integrability,"//===- HeaderSearch.cpp - Resolve Header File Locations -------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements the DirectoryLookup and HeaderSearch interfaces.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Lex/HeaderSearch.cpp:441,interface,interfaces,441,interpreter/llvm-project/clang/lib/Lex/HeaderSearch.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Lex/HeaderSearch.cpp,1,['interface'],['interfaces']
Integrability,"//===- HeaderSearch.h - Resolve Header File Locations -----------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines the HeaderSearch interface.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Lex/HeaderSearch.h:418,interface,interface,418,interpreter/llvm-project/clang/include/clang/Lex/HeaderSearch.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Lex/HeaderSearch.h,1,['interface'],['interface']
Integrability,"//===- HexagonAsmPrinter.cpp - Print machine instrs to Hexagon assembly ---===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file contains a printer that converts from our internal representation; // of machine-dependent LLVM code to Hexagon assembly language. This printer is; // the output mechanism used by `llc'.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonAsmPrinter.cpp:474,depend,dependent,474,interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonAsmPrinter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonAsmPrinter.cpp,1,['depend'],['dependent']
Integrability,"//===- HexagonHardwareLoops.cpp - Identify and generate hardware loops ----===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This pass identifies loops where we can generate the Hexagon hardware; // loop instruction. The hardware loop can perform loop branches with a; // zero-cycle overhead.; //; // The pattern that defines the induction variable can changed depending on; // prior optimizations. For example, the IndVarSimplify phase run by 'opt'; // normalizes induction variables, and the Loop Strength Reduction pass; // run by 'llc' may also make changes to the induction variable.; // The pattern detected by this phase is due to running Strength Reduction.; //; // Criteria for hardware loops:; // - Countable loops (w/ ind. var for a trip count); // - Assumes loops are normalized by IndVarSimplify; // - Try inner-most loops first; // - No function calls in loops.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonHardwareLoops.cpp:619,depend,depending,619,interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonHardwareLoops.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonHardwareLoops.cpp,1,['depend'],['depending']
Integrability,"//===- HexagonPacketizer.cpp - VLIW packetizer ----------------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This implements a simple VLIW packetizer using DFA. The packetizer works on; // machine basic blocks. For each instruction I in BB, the packetizer consults; // the DFA to see if machine resources are available to execute I. If so, the; // packetizer checks if I depends on any instruction J in the current packet.; // If no dependency is found, I is added to current packet and machine resource; // is marked as taken. If any dependency is found, a target API call is made to; // prune the dependence.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonVLIWPacketizer.cpp:645,depend,depends,645,interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonVLIWPacketizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonVLIWPacketizer.cpp,4,['depend'],"['dependence', 'dependency', 'depends']"
Integrability,"//===- HexagonVectorLoopCarriedReuse.cpp ----------------------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This pass removes the computation of provably redundant expressions that have; // been computed earlier in a previous iteration. It relies on the use of PHIs; // to identify loop carried dependences. This is scalar replacement for vector; // types.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonVectorLoopCarriedReuse.cpp:570,depend,dependences,570,interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonVectorLoopCarriedReuse.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonVectorLoopCarriedReuse.cpp,1,['depend'],['dependences']
Integrability,"//===- HexagonVectorLoopCarriedReuse.h ------------------------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This pass removes the computation of provably redundant expressions that have; // been computed earlier in a previous iteration. It relies on the use of PHIs; // to identify loop carried dependences. This is scalar replacement for vector; // types.; //; //-----------------------------------------------------------------------------; // Motivation: Consider the case where we have the following loop structure.; //; // Loop:; // t0 = a[i];; // t1 = f(t0);; // t2 = g(t1);; // ...; // t3 = a[i+1];; // t4 = f(t3);; // t5 = g(t4);; // t6 = op(t2, t5); // cond_branch <Loop>; //; // This can be converted to; // t00 = a[0];; // t10 = f(t00);; // t20 = g(t10);; // Loop:; // t2 = t20;; // t3 = a[i+1];; // t4 = f(t3);; // t5 = g(t4);; // t6 = op(t2, t5); // t20 = t5; // cond_branch <Loop>; //; // SROA does a good job of reusing a[i+1] as a[i] in the next iteration.; // Such a loop comes to this pass in the following form.; //; // LoopPreheader:; // X0 = a[0];; // Loop:; // X2 = PHI<(X0, LoopPreheader), (X1, Loop)>; // t1 = f(X2) <-- I1; // t2 = g(t1); // ...; // X1 = a[i+1]; // t4 = f(X1) <-- I2; // t5 = g(t4); // t6 = op(t2, t5); // cond_branch <Loop>; //; // In this pass, we look for PHIs such as X2 whose incoming values come only; // from the Loop Preheader and over the backedge and additionaly, both these; // values are the results of the same operation in terms of opcode. We call such; // a PHI node a dependence chain or DepChain. In this case, the dependence of X2; // over X1 is carried over only one iteration and so the DepChain is only one; // PHI node long.; //; // Then, we traverse the uses of ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonVectorLoopCarriedReuse.h:570,depend,dependences,570,interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonVectorLoopCarriedReuse.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonVectorLoopCarriedReuse.h,1,['depend'],['dependences']
Integrability,"//===- IFSHandler.h ---------------------------------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===-----------------------------------------------------------------------===/; ///; /// \file; /// This file declares an interface for reading and writing .ifs (text-based; /// InterFace Stub) files.; ///; //===-----------------------------------------------------------------------===/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/InterfaceStub/IFSHandler.h:418,interface,interface,418,interpreter/llvm-project/llvm/include/llvm/InterfaceStub/IFSHandler.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/InterfaceStub/IFSHandler.h,2,"['InterFace', 'interface']","['InterFace', 'interface']"
Integrability,"//===- IFSStub.h ------------------------------------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===-----------------------------------------------------------------------===/; ///; /// \file; /// This file defines an internal representation of an InterFace Stub.; ///; //===-----------------------------------------------------------------------===/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/InterfaceStub/IFSStub.h:447,InterFace,InterFace,447,interpreter/llvm-project/llvm/include/llvm/InterfaceStub/IFSStub.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/InterfaceStub/IFSStub.h,1,['InterFace'],['InterFace']
Integrability,"//===- IPDBDataStream.h - base interface for child enumerator ---*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/DebugInfo/PDB/IPDBDataStream.h:31,interface,interface,31,interpreter/llvm-project/llvm/include/llvm/DebugInfo/PDB/IPDBDataStream.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/DebugInfo/PDB/IPDBDataStream.h,1,['interface'],['interface']
Integrability,"//===- IPDBEnumChildren.h - base interface for child enumerator -*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/DebugInfo/PDB/IPDBEnumChildren.h:33,interface,interface,33,interpreter/llvm-project/llvm/include/llvm/DebugInfo/PDB/IPDBEnumChildren.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/DebugInfo/PDB/IPDBEnumChildren.h,1,['interface'],['interface']
Integrability,"//===- IPDBFrameData.h - base interface for frame data ----------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/DebugInfo/PDB/IPDBFrameData.h:30,interface,interface,30,interpreter/llvm-project/llvm/include/llvm/DebugInfo/PDB/IPDBFrameData.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/DebugInfo/PDB/IPDBFrameData.h,1,['interface'],['interface']
Integrability,"//===- IPDBInjectedSource.h - base class for PDB injected file --*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/DebugInfo/PDB/IPDBInjectedSource.h:49,inject,injected,49,interpreter/llvm-project/llvm/include/llvm/DebugInfo/PDB/IPDBInjectedSource.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/DebugInfo/PDB/IPDBInjectedSource.h,1,['inject'],['injected']
Integrability,"//===- IPDBLineNumber.h - base interface for PDB line no. info ---*- C++-*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/DebugInfo/PDB/IPDBLineNumber.h:31,interface,interface,31,interpreter/llvm-project/llvm/include/llvm/DebugInfo/PDB/IPDBLineNumber.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/DebugInfo/PDB/IPDBLineNumber.h,1,['interface'],['interface']
Integrability,"//===- IPDBRawSymbol.h - base interface for PDB symbol types ----*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/DebugInfo/PDB/IPDBRawSymbol.h:30,interface,interface,30,interpreter/llvm-project/llvm/include/llvm/DebugInfo/PDB/IPDBRawSymbol.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/DebugInfo/PDB/IPDBRawSymbol.h,1,['interface'],['interface']
Integrability,"//===- IPDBSession.h - base interface for a PDB symbol context --*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/DebugInfo/PDB/IPDBSession.h:28,interface,interface,28,interpreter/llvm-project/llvm/include/llvm/DebugInfo/PDB/IPDBSession.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/DebugInfo/PDB/IPDBSession.h,1,['interface'],['interface']
Integrability,"//===- IPDBSourceFile.cpp - base interface for a PDB source file ----------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DebugInfo/PDB/IPDBSourceFile.cpp:33,interface,interface,33,interpreter/llvm-project/llvm/lib/DebugInfo/PDB/IPDBSourceFile.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DebugInfo/PDB/IPDBSourceFile.cpp,1,['interface'],['interface']
Integrability,"//===- IPDBSourceFile.h - base interface for a PDB source file --*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/DebugInfo/PDB/IPDBSourceFile.h:31,interface,interface,31,interpreter/llvm-project/llvm/include/llvm/DebugInfo/PDB/IPDBSourceFile.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/DebugInfo/PDB/IPDBSourceFile.h,1,['interface'],['interface']
Integrability,"//===- IPDBTable.h - Base Interface for a PDB Symbol Context ----*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/DebugInfo/PDB/IPDBTable.h:26,Interface,Interface,26,interpreter/llvm-project/llvm/include/llvm/DebugInfo/PDB/IPDBTable.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/DebugInfo/PDB/IPDBTable.h,1,['Interface'],['Interface']
Integrability,"//===- IRBuilder.cpp - Builder for LLVM Instrs ----------------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements the IRBuilder class, which is used as a convenient way; // to create LLVM instructions with a consistent and simplified interface.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/IRBuilder.cpp:524,interface,interface,524,interpreter/llvm-project/llvm/lib/IR/IRBuilder.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/IRBuilder.cpp,1,['interface'],['interface']
Integrability,"//===- IRBuilderFolder.h - Const folder interface for IRBuilder -*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines for constant folding interface used by IRBuilder.; // It is implemented by ConstantFolder (default), TargetFolder and NoFoler.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/IRBuilderFolder.h:40,interface,interface,40,interpreter/llvm-project/llvm/include/llvm/IR/IRBuilderFolder.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/IRBuilderFolder.h,2,['interface'],['interface']
Integrability,"//===- IROutliner.h - Extract similar IR regions into functions --*- C++ -*-==//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // \file; // The interface file for the IROutliner which is used by the IROutliner Pass.; //; // The outliner uses the IRSimilarityIdentifier to identify the similar regions; // of code. It evaluates each set of IRSimilarityCandidates with an estimate of; // whether it will provide code size reduction. Each region is extracted using; // the code extractor. These extracted functions are consolidated into a single; // function and called from the extracted call site.; //; // For example:; // \code; // %1 = add i32 %a, %b; // %2 = add i32 %b, %a; // %3 = add i32 %b, %a; // %4 = add i32 %a, %b; // \endcode; // would become function; // \code; // define internal void outlined_ir_function(i32 %0, i32 %1) {; // %1 = add i32 %0, %1; // %2 = add i32 %1, %0; // ret void; // }; // \endcode; // with calls:; // \code; // call void outlined_ir_function(i32 %a, i32 %b); // call void outlined_ir_function(i32 %b, i32 %a); // \endcode; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/IROutliner.h:397,interface,interface,397,interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/IROutliner.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/IROutliner.h,1,['interface'],['interface']
Integrability,"//===- IRPrintingPasses.h - Passes to print out IR constructs ---*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; /// \file; ///; /// This file contains an interface for creating legacy passes to print out IR; /// in various granularities.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/IRPrintingPasses.h:418,interface,interface,418,interpreter/llvm-project/llvm/include/llvm/IR/IRPrintingPasses.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/IRPrintingPasses.h,1,['interface'],['interface']
Integrability,"//===- IRSimilarityIdentifier.h - Find similarity in a module --------------==//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // \file; // Interface file for the IRSimilarityIdentifier for identifying similarities in; // IR including the IRInstructionMapper, which maps an Instruction to unsigned; // integers.; //; // Two sequences of instructions are called ""similar"" if they perform the same; // series of operations for all inputs.; //; // \code; // %1 = add i32 %a, 10; // %2 = add i32 %a, %1; // %3 = icmp slt icmp %1, %2; // \endcode; //; // and; //; // \code; // %1 = add i32 11, %a; // %2 = sub i32 %a, %1; // %3 = icmp sgt icmp %2, %1; // \endcode; //; // ultimately have the same result, even if the inputs, and structure are; // slightly different.; //; // For instructions, we do not worry about operands that do not have fixed; // semantic meaning to the program. We consider the opcode that the instruction; // has, the types, parameters, and extra information such as the function name,; // or comparison predicate. These are used to create a hash to map instructions; // to integers to be used in similarity matching in sequences of instructions; //; // Terminology:; // An IRSimilarityCandidate is a region of IRInstructionData (wrapped; // Instructions), usually used to denote a region of similarity has been found.; //; // A SimilarityGroup is a set of IRSimilarityCandidates that are structurally; // similar to one another.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/IRSimilarityIdentifier.h:393,Interface,Interface,393,interpreter/llvm-project/llvm/include/llvm/Analysis/IRSimilarityIdentifier.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/IRSimilarityIdentifier.h,2,"['Interface', 'wrap']","['Interface', 'wrapped']"
Integrability,"//===- IdentifierTable.cpp - Hash table for identifier lookup -------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements the IdentifierInfo, IdentifierVisitor, and; // IdentifierTable interfaces.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Basic/IdentifierTable.cpp:467,interface,interfaces,467,interpreter/llvm-project/clang/lib/Basic/IdentifierTable.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Basic/IdentifierTable.cpp,1,['interface'],['interfaces']
Integrability,"//===- IdentifierTable.h - Hash table for identifier lookup -----*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; /// \file; /// Defines the clang::IdentifierInfo, clang::IdentifierTable, and; /// clang::Selector interfaces.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/IdentifierTable.h:479,interface,interfaces,479,interpreter/llvm-project/clang/include/clang/Basic/IdentifierTable.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/IdentifierTable.h,1,['interface'],['interfaces']
Integrability,"//===- IndVarSimplify.cpp - Induction Variable Elimination ----------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This transformation analyzes and transforms the induction variables (and; // computations derived from them) into simpler forms suitable for subsequent; // analysis and transformation.; //; // If the trip count of a loop is computable, this pass also makes the following; // changes:; // 1. The exit condition for the loop is canonicalized to compare the; // induction value against the exit value. This turns loops like:; // 'for (i = 7; i*i < 1000; ++i)' into 'for (i = 0; i != 25; ++i)'; // 2. Any use outside of the loop of an expression derived from the indvar; // is changed to compute the derived value outside of the loop, eliminating; // the dependence on the exit value of the induction variable. If the only; // purpose of the loop is to compute the exit value of some derived; // expression, this transformation will make the loop dead.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/IndVarSimplify.cpp:1034,depend,dependence,1034,interpreter/llvm-project/llvm/lib/Transforms/Scalar/IndVarSimplify.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/IndVarSimplify.cpp,1,['depend'],['dependence']
Integrability,"//===- IndVarSimplify.h - Induction Variable Simplification -----*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file provides the interface for the Induction Variable; // Simplification pass.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Scalar/IndVarSimplify.h:406,interface,interface,406,interpreter/llvm-project/llvm/include/llvm/Transforms/Scalar/IndVarSimplify.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Scalar/IndVarSimplify.h,1,['interface'],['interface']
Integrability,"//===- IndirectCallPromotionAnalysis.h - Indirect call analysis -*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; /// \file; /// Interface to identify indirect call promotion candidates.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/IndirectCallPromotionAnalysis.h:391,Interface,Interface,391,interpreter/llvm-project/llvm/include/llvm/Analysis/IndirectCallPromotionAnalysis.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/IndirectCallPromotionAnalysis.h,1,['Interface'],['Interface']
Integrability,"//===- InductiveRangeCheckElimination.h - IRCE ------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file provides the interface for the Inductive Range Check Elimination; // loop pass.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Scalar/InductiveRangeCheckElimination.h:406,interface,interface,406,interpreter/llvm-project/llvm/include/llvm/Transforms/Scalar/InductiveRangeCheckElimination.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Scalar/InductiveRangeCheckElimination.h,1,['interface'],['interface']
Integrability,"//===- InjectTLIMAppings.cpp - TLI to VFABI attribute injection ----------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // Populates the VFABI attribute with the scalar-to-vector mappings; // from the TargetLibraryInfo.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/InjectTLIMappings.cpp:7,Inject,InjectTLIMAppings,7,interpreter/llvm-project/llvm/lib/Transforms/Utils/InjectTLIMappings.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/InjectTLIMappings.cpp,2,"['Inject', 'inject']","['InjectTLIMAppings', 'injection']"
Integrability,"//===- InjectTLIMAppings.h - TLI to VFABI attribute injection ------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // Populates the VFABI attribute with the scalar-to-vector mappings; // from the TargetLibraryInfo.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/InjectTLIMappings.h:7,Inject,InjectTLIMAppings,7,interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/InjectTLIMappings.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/InjectTLIMappings.h,2,"['Inject', 'inject']","['InjectTLIMAppings', 'injection']"
Integrability,"//===- InjectedSourceStream.cpp - PDB Headerblock Stream Access -----------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DebugInfo/PDB/Native/InjectedSourceStream.cpp:7,Inject,InjectedSourceStream,7,interpreter/llvm-project/llvm/lib/DebugInfo/PDB/Native/InjectedSourceStream.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DebugInfo/PDB/Native/InjectedSourceStream.cpp,1,['Inject'],['InjectedSourceStream']
Integrability,"//===- InjectedSourceStream.h - PDB Headerblock Stream Access ---*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/DebugInfo/PDB/Native/InjectedSourceStream.h:7,Inject,InjectedSourceStream,7,interpreter/llvm-project/llvm/include/llvm/DebugInfo/PDB/Native/InjectedSourceStream.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/DebugInfo/PDB/Native/InjectedSourceStream.h,1,['Inject'],['InjectedSourceStream']
Integrability,"//===- InstCombine.h - InstCombine pass -------------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; /// \file; ///; /// This file provides the primary interface to the instcombine pass. This pass; /// is suitable for use in the new pass manager. For a pass that works with the; /// legacy pass manager, use \c createInstructionCombiningPass().; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/InstCombine/InstCombine.h:427,interface,interface,427,interpreter/llvm-project/llvm/include/llvm/Transforms/InstCombine/InstCombine.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/InstCombine/InstCombine.h,1,['interface'],['interface']
Integrability,"//===- InstCombineInternal.h - InstCombine pass internals -------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; /// \file; ///; /// This file provides internal interfaces used to implement the InstCombine.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineInternal.h:428,interface,interfaces,428,interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineInternal.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineInternal.h,1,['interface'],['interfaces']
Integrability,"//===- InstCombiner.h - InstCombine implementation --------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; /// \file; ///; /// This file provides the interface for the instcombine pass implementation.; /// The interface is used for generic transformations in this folder and; /// target specific combinations in the targets.; /// The visitor implementation is in \c InstCombinerImpl in; /// \c InstCombineInternal.h.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/InstCombine/InstCombiner.h:419,interface,interface,419,interpreter/llvm-project/llvm/include/llvm/Transforms/InstCombine/InstCombiner.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/InstCombine/InstCombiner.h,2,['interface'],['interface']
Integrability,"//===- InstIterator.h - Classes for inst iteration --------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file contains definitions of two iterators for iterating over the; // instructions in a function. This is effectively a wrapper around a two level; // iterator that can probably be genericized later.; //; // Note that this iterator gets invalidated any time that basic blocks or; // instructions are moved around.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/InstIterator.h:508,wrap,wrapper,508,interpreter/llvm-project/llvm/include/llvm/IR/InstIterator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/InstIterator.h,1,['wrap'],['wrapper']
Integrability,"//===- InstrEmitter.h - Emit MachineInstrs for the SelectionDAG -*- C++ -*--==//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This declares the Emit routines for the SelectionDAG class, which creates; // MachineInstrs based on the decisions of the SelectionDAG instruction; // selection.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/InstrEmitter.h:406,rout,routines,406,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/InstrEmitter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/InstrEmitter.h,1,['rout'],['routines']
Integrability,"//===- InstructionSimplify.cpp - Fold instruction operands ----------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements routines for folding instructions into simpler forms; // that do not require creating new instructions. This does constant folding; // (""add i32 1, 1"" -> ""2"") but can also handle non-constant operands, either; // returning a constant (""and i32 %x, 0"" -> ""0"") or an already existing value; // (""and i32 %x, %x"" -> ""%x""). All operands are assumed to have already been; // simplified: This is usually true and assuming it simplifies the logic (if; // they have not been simplified then results are correct but maybe suboptimal).; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/InstructionSimplify.cpp:404,rout,routines,404,interpreter/llvm-project/llvm/lib/Analysis/InstructionSimplify.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/InstructionSimplify.cpp,1,['rout'],['routines']
Integrability,"//===- InstrumentationMap.h - XRay Instrumentation Map ----------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // Defines the interface for extracting the instrumentation map from an; // XRay-instrumented binary.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/XRay/InstrumentationMap.h:395,interface,interface,395,interpreter/llvm-project/llvm/include/llvm/XRay/InstrumentationMap.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/XRay/InstrumentationMap.h,1,['interface'],['interface']
Integrability,"//===- InterfaceFile.cpp --------------------------------------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // Implements the Interface File.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/TextAPI/InterfaceFile.cpp:7,Interface,InterfaceFile,7,interpreter/llvm-project/llvm/lib/TextAPI/InterfaceFile.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/TextAPI/InterfaceFile.cpp,2,['Interface'],"['Interface', 'InterfaceFile']"
Integrability,"//===- InterpolatingCompilationDatabase.cpp ---------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // InterpolatingCompilationDatabase wraps another CompilationDatabase and; // attempts to heuristically determine appropriate compile commands for files; // that are not included, such as headers or newly created files.; //; // Motivating cases include:; // Header files that live next to their implementation files. These typically; // share a base filename. (libclang/CXString.h, libclang/CXString.cpp).; // Some projects separate headers from includes. Filenames still typically; // match, maybe other path segments too. (include/llvm/IR/Use.h, lib/IR/Use.cc).; // Matches are sometimes only approximate (Sema.h, SemaDecl.cpp). This goes; // for directories too (Support/Unix/Process.inc, lib/Support/Process.cpp).; // Even if we can't find a ""right"" compile command, even a random one from; // the project will tend to get important flags like -I and -x right.; //; // We ""borrow"" the compile command for the closest available file:; // - points are awarded if the filename matches (ignoring extension); // - points are awarded if the directory structure matches; // - ties are broken by length of path prefix match; //; // The compile command is adjusted, replacing the filename and removing output; // file arguments. The -x and -std flags may be affected too.; //; // Source language is a tricky issue: is it OK to use a .c file's command; // for building a .cc file? What language is a .h file in?; // - We only consider compile commands for c-family languages as candidates.; // - For files whose language is implied by the filename (e.g. .m, .hpp); // we prefer candidates from the same language.; // If we must",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Tooling/InterpolatingCompilationDatabase.cpp:416,wrap,wraps,416,interpreter/llvm-project/clang/lib/Tooling/InterpolatingCompilationDatabase.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Tooling/InterpolatingCompilationDatabase.cpp,1,['wrap'],['wraps']
Integrability,"//===- JITEventListener.h - Exposes events from JIT compilation -*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines the JITEventListener interface, which lets users get; // callbacks when significant events happen during the JIT compilation process.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/JITEventListener.h:422,interface,interface,422,interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/JITEventListener.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/JITEventListener.h,1,['interface'],['interface']
Integrability,"//===- JITLoaderGDB.h - Register objects via GDB JIT interface -*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ExecutionEngine/Orc/TargetProcess/JITLoaderGDB.cpp:53,interface,interface,53,interpreter/llvm-project/llvm/lib/ExecutionEngine/Orc/TargetProcess/JITLoaderGDB.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ExecutionEngine/Orc/TargetProcess/JITLoaderGDB.cpp,1,['interface'],['interface']
Integrability,"//===- JITLoaderGDB.h - Register objects via GDB JIT interface -*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // Register objects for access by debuggers via the GDB JIT interface.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/Orc/TargetProcess/JITLoaderGDB.h:53,interface,interface,53,interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/Orc/TargetProcess/JITLoaderGDB.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/Orc/TargetProcess/JITLoaderGDB.h,2,['interface'],['interface']
Integrability,"//===- KillTheDoctor - Prevent Dr. Watson from stopping tests ---*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This program provides an extremely hacky way to stop Dr. Watson from starting; // due to unhandled exceptions in child processes.; //; // This simply starts the program named in the first positional argument with; // the arguments following it under a debugger. All this debugger does is catch; // any unhandled exceptions thrown in the child process and close the program; // (and hopefully tells someone about it).; //; // This also provides another really hacky method to prevent assert dialog boxes; // from popping up. When --no-user32 is passed, if any process loads user32.dll,; // we assume it is trying to call MessageBoxEx and terminate it. The proper way; // to do this would be to actually set a break point, but there's quite a bit; // of code involved to get the address of MessageBoxEx in the remote process's; // address space due to Address space layout randomization (ASLR). This can be; // added if it's ever actually needed.; //; // If the subprocess exits for any reason other than successful termination, -1; // is returned. If the process exits normally the value it returned is returned.; //; // I hate Windows.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/KillTheDoctor/KillTheDoctor.cpp:1003,Message,MessageBoxEx,1003,interpreter/llvm-project/llvm/utils/KillTheDoctor/KillTheDoctor.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/KillTheDoctor/KillTheDoctor.cpp,2,['Message'],['MessageBoxEx']
Integrability,"//===- LangOptions.h - C Language Family Language Options -------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; /// \file; /// Defines the clang::LangOptions interface.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/LangOptions.h:426,interface,interface,426,interpreter/llvm-project/clang/include/clang/Basic/LangOptions.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/LangOptions.h,1,['interface'],['interface']
Integrability,"//===- LazyValueInfo.cpp - Value constraint analysis ------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines the interface for lazy computation of value constraint; // information.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/LazyValueInfo.cpp:405,interface,interface,405,interpreter/llvm-project/llvm/lib/Analysis/LazyValueInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/LazyValueInfo.cpp,1,['interface'],['interface']
Integrability,"//===- LazyValueInfo.h - Value constraint analysis --------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines the interface for lazy computation of value constraint; // information.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/LazyValueInfo.h:405,interface,interface,405,interpreter/llvm-project/llvm/include/llvm/Analysis/LazyValueInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/LazyValueInfo.h,1,['interface'],['interface']
Integrability,"//===- Lexer.cpp - C Language Family Lexer --------------------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements the Lexer and Token interfaces.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Lex/Lexer.cpp:424,interface,interfaces,424,interpreter/llvm-project/clang/lib/Lex/Lexer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Lex/Lexer.cpp,1,['interface'],['interfaces']
Integrability,"//===- Lexer.h - C Language Family Lexer ------------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines the Lexer interface.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Lex/Lexer.h:411,interface,interface,411,interpreter/llvm-project/clang/include/clang/Lex/Lexer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Lex/Lexer.h,1,['interface'],['interface']
Integrability,"//===- LibCallsShrinkWrap.h - Shrink Wrap Library Calls -------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/LibCallsShrinkWrap.h:37,Wrap,Wrap,37,interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/LibCallsShrinkWrap.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/LibCallsShrinkWrap.h,1,['Wrap'],['Wrap']
Integrability,"//===- LibDriver.cpp - lib.exe-compatible driver --------------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // Defines an interface to a lib.exe-compatible driver that also understands; // bitcode files. Used by llvm-lib and lld-link /lib.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ToolDrivers/llvm-lib/LibDriver.cpp:394,interface,interface,394,interpreter/llvm-project/llvm/lib/ToolDrivers/llvm-lib/LibDriver.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ToolDrivers/llvm-lib/LibDriver.cpp,1,['interface'],['interface']
Integrability,"//===- Linker.h - Module Linker Interface -----------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Linker/Linker.h:32,Interface,Interface,32,interpreter/llvm-project/llvm/include/llvm/Linker/Linker.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Linker/Linker.h,1,['Interface'],['Interface']
Integrability,"//===- LiveDebugVariables.h - Tracking debug info variables -----*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file provides the interface to the LiveDebugVariables analysis.; //; // The analysis removes DBG_VALUE instructions for virtual registers and tracks; // live user variables in a data structure that can be updated during register; // allocation.; //; // After register allocation new DBG_VALUE instructions are emitted to reflect; // the new locations of user variables.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugVariables.h:406,interface,interface,406,interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugVariables.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugVariables.h,1,['interface'],['interface']
Integrability,"//===- LiveRangeCalc.h - Calculate live ranges -----------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // The LiveRangeCalc class can be used to implement the computation of; // live ranges from scratch.; // It caches information about values in the CFG to speed up repeated; // operations on the same live range. The cache can be shared by; // non-overlapping live ranges. SplitKit uses that when computing the live; // range of split products.; //; // A low-level interface is available to clients that know where a variable is; // live, but don't know which value it has as every point. LiveRangeCalc will; // propagate values down the dominator tree, and even insert PHI-defs where; // needed. SplitKit uses this faster interface when possible.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/LiveRangeCalc.h:742,interface,interface,742,interpreter/llvm-project/llvm/include/llvm/CodeGen/LiveRangeCalc.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/LiveRangeCalc.h,2,['interface'],['interface']
Integrability,"//===- LoongArchAsmPrinter.cpp - LoongArch LLVM Assembly Printer -*- C++ -*--=//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file contains a printer that converts from our internal representation; // of machine-dependent LLVM code to GAS-format LoongArch assembly language.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/LoongArch/LoongArchAsmPrinter.cpp:474,depend,dependent,474,interpreter/llvm-project/llvm/lib/Target/LoongArch/LoongArchAsmPrinter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/LoongArch/LoongArchAsmPrinter.cpp,1,['depend'],['dependent']
Integrability,"//===- LoopAccessAnalysis.cpp - Loop Access Analysis Implementation --------==//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // The implementation for the loop memory dependence that was originally; // developed for the loop vectorizer.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/LoopAccessAnalysis.cpp:422,depend,dependence,422,interpreter/llvm-project/llvm/lib/Analysis/LoopAccessAnalysis.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/LoopAccessAnalysis.cpp,1,['depend'],['dependence']
Integrability,"//===- LoopDeletion.h - Loop Deletion ---------------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file provides the interface for the Loop Deletion Pass.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Scalar/LoopDeletion.h:406,interface,interface,406,interpreter/llvm-project/llvm/include/llvm/Transforms/Scalar/LoopDeletion.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Scalar/LoopDeletion.h,1,['interface'],['interface']
Integrability,"//===- LoopDistribute.cpp - Loop Distribution Pass --------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements the Loop Distribution Pass. Its main focus is to; // distribute loops that cannot be vectorized due to dependence cycles. It; // tries to isolate the offending dependences into a new loop allowing; // vectorization of the remaining parts.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Scalar/LoopDistribute.h:507,depend,dependence,507,interpreter/llvm-project/llvm/include/llvm/Transforms/Scalar/LoopDistribute.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Scalar/LoopDistribute.h,2,['depend'],"['dependence', 'dependences']"
Integrability,"//===- LoopDistribute.cpp - Loop Distribution Pass ------------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements the Loop Distribution Pass. Its main focus is to; // distribute loops that cannot be vectorized due to dependence cycles. It; // tries to isolate the offending dependences into a new loop allowing; // vectorization of the remaining parts.; //; // For dependence analysis, the pass uses the LoopVectorizer's; // LoopAccessAnalysis. Because this analysis presumes no change in the order of; // memory operations, special care is taken to preserve the lexical order of; // these operations.; //; // Similarly to the Vectorizer, the pass also supports loop versioning to; // run-time disambiguate potentially overlapping arrays.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopDistribute.cpp:507,depend,dependence,507,interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopDistribute.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopDistribute.cpp,3,['depend'],"['dependence', 'dependences']"
Integrability,"//===- LoopExtractor.cpp - Extract each loop into a new function ----------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // A pass wrapper around the ExtractLoop() scalar transformation to extract each; // top-level loop into its own new function. If the loop is the ONLY loop in a; // given function, it is not touched. This is a pass most useful for debugging; // via bugpoint.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/LoopExtractor.cpp:390,wrap,wrapper,390,interpreter/llvm-project/llvm/lib/Transforms/IPO/LoopExtractor.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/LoopExtractor.cpp,1,['wrap'],['wrapper']
Integrability,"//===- LoopExtractor.h - Extract each loop into a new function ------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // A pass wrapper around the ExtractLoop() scalar transformation to extract each; // top-level loop into its own new function. If the loop is the ONLY loop in a; // given function, it is not touched. This is a pass most useful for debugging; // via bugpoint.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/LoopExtractor.h:390,wrap,wrapper,390,interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/LoopExtractor.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/LoopExtractor.h,1,['wrap'],['wrapper']
Integrability,"//===- LoopFlatten.h - Loop Flatten ---------------- -----------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file provides the interface for the Loop Flatten Pass.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Scalar/LoopFlatten.h:405,interface,interface,405,interpreter/llvm-project/llvm/include/llvm/Transforms/Scalar/LoopFlatten.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Scalar/LoopFlatten.h,1,['interface'],['interface']
Integrability,"//===- LoopLoadElimination.cpp - Loop Load Elimination Pass ---------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implement a loop-aware load elimination pass.; //; // It uses LoopAccessAnalysis to identify loop-carried dependences with a; // distance of one between stores and loads. These form the candidates for the; // transformation. The source value of each store then propagated to the user; // of the corresponding load. This makes the load dead.; //; // The pass can also version the loop and add memchecks in order to prove that; // may-aliasing stores can't change the value in memory before it's read by the; // load.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopLoadElimination.cpp:499,depend,dependences,499,interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopLoadElimination.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopLoadElimination.cpp,1,['depend'],['dependences']
Integrability,"//===- LoopRotation.h - Loop Rotation -------------------------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file provides the interface for the Loop Rotation pass.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Scalar/LoopRotation.h:406,interface,interface,406,interpreter/llvm-project/llvm/include/llvm/Transforms/Scalar/LoopRotation.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Scalar/LoopRotation.h,1,['interface'],['interface']
Integrability,"//===- LoopSink.h - Loop Sink Pass ------------------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file provides the interface for the Loop Sink pass.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Scalar/LoopSink.h:406,interface,interface,406,interpreter/llvm-project/llvm/include/llvm/Transforms/Scalar/LoopSink.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Scalar/LoopSink.h,1,['interface'],['interface']
Integrability,"//===- LowerEmuTLS.cpp - Add __emutls_[vt].* variables --------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This transformation is required for targets depending on libgcc style; // emulated thread local storage variables. For every defined TLS variable xyz,; // an __emutls_v.xyz is generated. If there is non-zero initialized value; // an __emutls_t.xyz is also generated.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LowerEmuTLS.cpp:427,depend,depending,427,interpreter/llvm-project/llvm/lib/CodeGen/LowerEmuTLS.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LowerEmuTLS.cpp,1,['depend'],['depending']
Integrability,"//===- LowerGlobalDtors.h - Lower @llvm.global_dtors ----------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This pass lowers @llvm.global_dtors by creating wrapper functions that are; // registered in @llvm.global_ctors and which contain a call to `__cxa_atexit`; // to register their destructor functions.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/LowerGlobalDtors.h:431,wrap,wrapper,431,interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/LowerGlobalDtors.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/LowerGlobalDtors.h,1,['wrap'],['wrapper']
Integrability,"//===- MBFIWrapper.cpp - MachineBlockFrequencyInfo wrapper ----------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This class keeps track of branch frequencies of newly created blocks and; // tail-merged blocks. Used by the TailDuplication and MachineBlockPlacement.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MBFIWrapper.cpp:51,wrap,wrapper,51,interpreter/llvm-project/llvm/lib/CodeGen/MBFIWrapper.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MBFIWrapper.cpp,1,['wrap'],['wrapper']
Integrability,"//===- MC/MCRegisterInfo.h - Target Register Description --------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file describes an abstract interface used to get information about a; // target machines register file. This information is used for a variety of; // purposed, especially register allocation.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCRegisterInfo.h:415,interface,interface,415,interpreter/llvm-project/llvm/include/llvm/MC/MCRegisterInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCRegisterInfo.h,1,['interface'],['interface']
Integrability,"//===- MC/TargetRegistry.h - Target Registration ----------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file exposes the TargetRegistry interface, which tools can use to access; // the appropriate target specific classes (TargetMachine, AsmPrinter, etc.); // which have been registered.; //; // Target specific class implementations should register themselves using the; // appropriate TargetRegistry interfaces.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/TargetRegistry.h:420,interface,interface,420,interpreter/llvm-project/llvm/include/llvm/MC/TargetRegistry.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/TargetRegistry.h,2,['interface'],"['interface', 'interfaces']"
Integrability,"//===- MCAsmLexer.cpp - Abstract Asm Lexer Interface ----------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MC/MCParser/MCAsmLexer.cpp:43,Interface,Interface,43,interpreter/llvm-project/llvm/lib/MC/MCParser/MCAsmLexer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MC/MCParser/MCAsmLexer.cpp,1,['Interface'],['Interface']
Integrability,"//===- MCDXContainerStreamer.h - MCDXContainerStreamer Interface ---*- C++ ===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // Overrides MCObjectStreamer to disable all unnecessary features with stubs.; // The DXContainer format isn't a fully featured object format. It doesn't; // support symbols, and initially it will not support instruction data since it; // is used as a bitcode container for DXIL.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCDXContainerStreamer.h:55,Interface,Interface,55,interpreter/llvm-project/llvm/include/llvm/MC/MCDXContainerStreamer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCDXContainerStreamer.h,1,['Interface'],['Interface']
Integrability,"//===- MCDisassembler.cpp - Disassembler interface ------------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MC/MCDisassembler/MCDisassembler.cpp:41,interface,interface,41,interpreter/llvm-project/llvm/lib/MC/MCDisassembler/MCDisassembler.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MC/MCDisassembler/MCDisassembler.cpp,1,['interface'],['interface']
Integrability,"//===- MCELFStreamer.h - MCStreamer ELF Object File Interface ---*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCELFStreamer.h:52,Interface,Interface,52,interpreter/llvm-project/llvm/include/llvm/MC/MCELFStreamer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCELFStreamer.h,1,['Interface'],['Interface']
Integrability,"//===- MCGOFFStreamer.h - MCStreamer GOFF Object File Interface--*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCGOFFStreamer.h:54,Interface,Interface,54,interpreter/llvm-project/llvm/include/llvm/MC/MCGOFFStreamer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCGOFFStreamer.h,1,['Interface'],['Interface']
Integrability,"//===- MCLinkerOptimizationHint.h - LOH interface ---------------*- C++ -*-===//; //; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file declares some helpers classes to handle Linker Optimization Hint; // (LOH).; //; // FIXME: LOH interface supports only MachO format at the moment.; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCLinkerOptimizationHint.h:40,interface,interface,40,interpreter/llvm-project/llvm/include/llvm/MC/MCLinkerOptimizationHint.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCLinkerOptimizationHint.h,2,['interface'],['interface']
Integrability,"//===- MCObjectStreamer.h - MCStreamer Object File Interface ----*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCObjectStreamer.h:51,Interface,Interface,51,interpreter/llvm-project/llvm/include/llvm/MC/MCObjectStreamer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCObjectStreamer.h,1,['Interface'],['Interface']
Integrability,"//===- MCSPIRVStreamer.h - MCStreamer SPIR-V Object File Interface -*- C++ ===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // Overrides MCObjectStreamer to disable all unnecessary features with stubs.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCSPIRVStreamer.h:57,Interface,Interface,57,interpreter/llvm-project/llvm/include/llvm/MC/MCSPIRVStreamer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCSPIRVStreamer.h,1,['Interface'],['Interface']
Integrability,"//===- MCWasmStreamer.h - MCStreamer Wasm Object File Interface -*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCWasmStreamer.h:54,Interface,Interface,54,interpreter/llvm-project/llvm/include/llvm/MC/MCWasmStreamer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCWasmStreamer.h,1,['Interface'],['Interface']
Integrability,"//===- MCWinCOFFStreamer.h - COFF Object File Interface ---------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCWinCOFFStreamer.h:46,Interface,Interface,46,interpreter/llvm-project/llvm/include/llvm/MC/MCWinCOFFStreamer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCWinCOFFStreamer.h,1,['Interface'],['Interface']
Integrability,"//===- MCXCOFFObjectStreamer.h - MCStreamer XCOFF Object File Interface ---===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCXCOFFStreamer.h:62,Interface,Interface,62,interpreter/llvm-project/llvm/include/llvm/MC/MCXCOFFStreamer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCXCOFFStreamer.h,1,['Interface'],['Interface']
Integrability,"//===- MLInlineAdvisor.cpp - machine learned InlineAdvisor ----------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements the interface between the inliner and a learned model.; // It delegates model evaluation to either the AOT compiled model (the; // 'release' mode) or a runtime-loaded model (the 'development' case).; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/MLInlineAdvisor.cpp:408,interface,interface,408,interpreter/llvm-project/llvm/lib/Analysis/MLInlineAdvisor.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/MLInlineAdvisor.cpp,1,['interface'],['interface']
Integrability,"//===- MLModelRunner.h ---- ML model runner interface -----------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/MLModelRunner.h:44,interface,interface,44,interpreter/llvm-project/llvm/include/llvm/Analysis/MLModelRunner.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/MLModelRunner.h,1,['interface'],['interface']
Integrability,"//===- MLRegAllocEvictAdvisor.cpp - ML eviction advisor -------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // Implementation of the ML eviction advisor and reward injection pass; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MLRegAllocEvictAdvisor.cpp:436,inject,injection,436,interpreter/llvm-project/llvm/lib/CodeGen/MLRegAllocEvictAdvisor.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MLRegAllocEvictAdvisor.cpp,1,['inject'],['injection']
Integrability,"//===- MLRegAllocPriorityAdvisor.cpp - ML priority advisor-----------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // Implementation of the ML priority advisor and reward injection pass; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MLRegAllocPriorityAdvisor.cpp:436,inject,injection,436,interpreter/llvm-project/llvm/lib/CodeGen/MLRegAllocPriorityAdvisor.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MLRegAllocPriorityAdvisor.cpp,1,['inject'],['injection']
Integrability,"//===- MachO.h - MachO object file implementation ---------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file declares the MachOObjectFile class, which implement the ObjectFile; // interface for MachO files.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Object/MachO.h:464,interface,interface,464,interpreter/llvm-project/llvm/include/llvm/Object/MachO.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Object/MachO.h,1,['interface'],['interface']
Integrability,"//===- MachOObjectFile.cpp - Mach-O object file binding -------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines the MachOObjectFile class, which binds the MachOObject; // class to the generic ObjectFile wrapper.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Object/MachOObjectFile.cpp:492,wrap,wrapper,492,interpreter/llvm-project/llvm/lib/Object/MachOObjectFile.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Object/MachOObjectFile.cpp,1,['wrap'],['wrapper']
Integrability,"//===- MachineCycleAnalysis.h - Cycle Info for Machine IR -------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines the MachineCycleInfo class, which is a thin wrapper over; // the Machine IR instance of GenericCycleInfo.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineCycleAnalysis.h:445,wrap,wrapper,445,interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineCycleAnalysis.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineCycleAnalysis.h,1,['wrap'],['wrapper']
Integrability,"//===- MachinePipeliner.cpp - Machine Software Pipeliner Pass -------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // An implementation of the Swing Modulo Scheduling (SMS) software pipeliner.; //; // This SMS implementation is a target-independent back-end pass. When enabled,; // the pass runs just prior to the register allocation pass, while the machine; // IR is in SSA form. If software pipelining is successful, then the original; // loop is replaced by the optimized loop. The optimized loop contains one or; // more prolog blocks, the pipelined kernel, and one or more epilog blocks. If; // the instructions cannot be scheduled in a given MII, we increase the MII by; // one and try again.; //; // The SMS implementation is an extension of the ScheduleDAGInstrs class. We; // represent loop carried dependences in the DAG as order edges to the Phi; // nodes. We also perform several passes over the DAG to eliminate unnecessary; // edges that inhibit the ability to pipeline. The implementation uses the; // DFAPacketizer class to compute the minimum initiation interval and the check; // where an instruction may be inserted in the pipelined schedule.; //; // In order for the SMS pass to work, several target specific hooks need to be; // implemented to get information about the loop structure and to rewrite; // instructions.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachinePipeliner.cpp:1073,depend,dependences,1073,interpreter/llvm-project/llvm/lib/CodeGen/MachinePipeliner.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachinePipeliner.cpp,1,['depend'],['dependences']
Integrability,"//===- MachinePipeliner.h - Machine Software Pipeliner Pass -------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // An implementation of the Swing Modulo Scheduling (SMS) software pipeliner.; //; // Software pipelining (SWP) is an instruction scheduling technique for loops; // that overlap loop iterations and exploits ILP via a compiler transformation.; //; // Swing Modulo Scheduling is an implementation of software pipelining; // that generates schedules that are near optimal in terms of initiation; // interval, register requirements, and stage count. See the papers:; //; // ""Swing Modulo Scheduling: A Lifetime-Sensitive Approach"", by J. Llosa,; // A. Gonzalez, E. Ayguade, and M. Valero. In PACT '96 Proceedings of the 1996; // Conference on Parallel Architectures and Compilation Techiniques.; //; // ""Lifetime-Sensitive Modulo Scheduling in a Production Environment"", by J.; // Llosa, E. Ayguade, A. Gonzalez, M. Valero, and J. Eckhardt. In IEEE; // Transactions on Computers, Vol. 50, No. 3, 2001.; //; // ""An Implementation of Swing Modulo Scheduling With Extensions for; // Superblocks"", by T. Lattner, Master's Thesis, University of Illinois at; // Urbana-Champaign, 2005.; //; //; // The SMS algorithm consists of three main steps after computing the minimal; // initiation interval (MII).; // 1) Analyze the dependence graph and compute information about each; // instruction in the graph.; // 2) Order the nodes (instructions) by priority based upon the heuristics; // described in the algorithm.; // 3) Attempt to schedule the nodes in the specified order using the MII.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachinePipeliner.h:1591,depend,dependence,1591,interpreter/llvm-project/llvm/include/llvm/CodeGen/MachinePipeliner.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachinePipeliner.h,1,['depend'],['dependence']
Integrability,"//===- MachineScheduler.h - MachineInstr Scheduling Pass --------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file provides an interface for customizing the standard MachineScheduler; // pass. Note that the entire pass may be replaced as follows:; //; // <Target>TargetMachine::createPassConfig(PassManagerBase &PM) {; // PM.substitutePass(&MachineSchedulerID, &CustomSchedulerPassID);; // ...}; //; // The MachineScheduler pass is only responsible for choosing the regions to be; // scheduled. Targets can override the DAG builder and scheduler without; // replacing the pass as follows:; //; // ScheduleDAGInstrs *<Target>PassConfig::; // createMachineScheduler(MachineSchedContext *C) {; // return new CustomMachineScheduler(C);; // }; //; // The default scheduler, ScheduleDAGMILive, builds the DAG and drives list; // scheduling while updating the instruction stream, register pressure, and live; // intervals. Most targets don't need to override the DAG builder and list; // scheduler, but subtargets that require custom scheduling heuristics may; // plugin an alternate MachineSchedStrategy. The strategy is responsible for; // selecting the highest priority node from the list:; //; // ScheduleDAGInstrs *<Target>PassConfig::; // createMachineScheduler(MachineSchedContext *C) {; // return new ScheduleDAGMILive(C, CustomStrategy(C));; // }; //; // The DAG builder can also be customized in a sense by adding DAG mutations; // that will run after DAG building and before list scheduling. DAG mutations; // can adjust dependencies based on target-specific knowledge or add weak edges; // to aid heuristics:; //; // ScheduleDAGInstrs *<Target>PassConfig::; // createMachineScheduler(MachineSchedContext *C) {; // Sche",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineScheduler.h:405,interface,interface,405,interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineScheduler.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineScheduler.h,1,['interface'],['interface']
Integrability,"//===- MacroInfo.cpp - Information about #defined identifiers -------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements the MacroInfo interface.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Lex/MacroInfo.cpp:418,interface,interface,418,interpreter/llvm-project/clang/lib/Lex/MacroInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Lex/MacroInfo.cpp,1,['interface'],['interface']
Integrability,"//===- Marshallers.h - Generic matcher function marshallers -----*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; /// \file; /// Functions templates and classes to wrap matcher construct functions.; ///; /// A collection of template function and classes that provide a generic; /// marshalling layer on top of matcher construct functions.; /// These are used by the registry to export all marshaller constructors with; /// the same generic interface.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/ASTMatchers/Dynamic/Marshallers.h:430,wrap,wrap,430,interpreter/llvm-project/clang/lib/ASTMatchers/Dynamic/Marshallers.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/ASTMatchers/Dynamic/Marshallers.h,2,"['interface', 'wrap']","['interface', 'wrap']"
Integrability,"//===- Mem2Reg.cpp - The -mem2reg pass, a wrapper around the Utils lib ----===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This pass is a simple pass wrapper around the PromoteMemToReg function call; // exposed by the Utils library.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/Mem2Reg.cpp:42,wrap,wrapper,42,interpreter/llvm-project/llvm/lib/Transforms/Utils/Mem2Reg.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/Mem2Reg.cpp,2,['wrap'],['wrapper']
Integrability,"//===- Mem2Reg.h - The -mem2reg pass, a wrapper around the Utils lib ------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This pass is a simple pass wrapper around the PromoteMemToReg function call; // exposed by the Utils library.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/Mem2Reg.h:40,wrap,wrapper,40,interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/Mem2Reg.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/Mem2Reg.h,2,['wrap'],['wrapper']
Integrability,"//===- MemoryBufferRef.cpp - Memory Buffer Reference ----------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements the MemoryBufferRef interface.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/MemoryBufferRef.cpp:424,interface,interface,424,interpreter/llvm-project/llvm/lib/Support/MemoryBufferRef.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/MemoryBufferRef.cpp,1,['interface'],['interface']
Integrability,"//===- MemoryBufferRef.h - Memory Buffer Reference --------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines the MemoryBuffer interface.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/MemoryBufferRef.h:418,interface,interface,418,interpreter/llvm-project/llvm/include/llvm/Support/MemoryBufferRef.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/MemoryBufferRef.h,1,['interface'],['interface']
Integrability,"//===- MemoryDependenceAnalysis.cpp - Mem Deps Implementation -------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements an analysis that determines, for a given memory; // operation, what preceding memory operations it depends on. It builds on; // alias analysis information, and tries to provide a lazy, caching interface to; // a common kind of alias information query.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/MemoryDependenceAnalysis.cpp:503,depend,depends,503,interpreter/llvm-project/llvm/lib/Analysis/MemoryDependenceAnalysis.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/MemoryDependenceAnalysis.cpp,2,"['depend', 'interface']","['depends', 'interface']"
Integrability,"//===- MemorySSA.h - Build Memory SSA ---------------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; /// \file; /// This file exposes an interface to building/using memory SSA to; /// walk memory instructions using a use/def graph.; ///; /// Memory SSA class builds an SSA form that links together memory access; /// instructions such as loads, stores, atomics, and calls. Additionally, it; /// does a trivial form of ""heap versioning"" Every time the memory state changes; /// in the program, we generate a new heap version. It generates; /// MemoryDef/Uses/Phis that are overlayed on top of the existing instructions.; ///; /// As a trivial example,; /// define i32 @main() #0 {; /// entry:; /// %call = call noalias i8* @_Znwm(i64 4) #2; /// %0 = bitcast i8* %call to i32*; /// %call1 = call noalias i8* @_Znwm(i64 4) #2; /// %1 = bitcast i8* %call1 to i32*; /// store i32 5, i32* %0, align 4; /// store i32 7, i32* %1, align 4; /// %2 = load i32* %0, align 4; /// %3 = load i32* %1, align 4; /// %add = add nsw i32 %2, %3; /// ret i32 %add; /// }; ///; /// Will become; /// define i32 @main() #0 {; /// entry:; /// ; 1 = MemoryDef(0); /// %call = call noalias i8* @_Znwm(i64 4) #3; /// %2 = bitcast i8* %call to i32*; /// ; 2 = MemoryDef(1); /// %call1 = call noalias i8* @_Znwm(i64 4) #3; /// %4 = bitcast i8* %call1 to i32*; /// ; 3 = MemoryDef(2); /// store i32 5, i32* %2, align 4; /// ; 4 = MemoryDef(3); /// store i32 7, i32* %4, align 4; /// ; MemoryUse(3); /// %7 = load i32* %2, align 4; /// ; MemoryUse(4); /// %8 = load i32* %4, align 4; /// %add = add nsw i32 %7, %8; /// ret i32 %add; /// }; ///; /// Given this form, all the stores that could ever effect the load at %8 can be; /// gotten by using the Mem",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/MemorySSA.h:416,interface,interface,416,interpreter/llvm-project/llvm/include/llvm/Analysis/MemorySSA.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/MemorySSA.h,1,['interface'],['interface']
Integrability,"//===- MemorySSAUpdater.h - Memory SSA Updater-------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // \file; // An automatic updater for MemorySSA that handles arbitrary insertion,; // deletion, and moves. It performs phi insertion where necessary, and; // automatically updates the MemorySSA IR to be correct.; // While updating loads or removing instructions is often easy enough to not; // need this, updating stores should generally not be attemped outside this; // API.; //; // Basic API usage:; // Create the memory access you want for the instruction (this is mainly so; // we know where it is, without having to duplicate the entire set of create; // functions MemorySSA supports).; // Call insertDef or insertUse depending on whether it's a MemoryUse or a; // MemoryDef.; // That's it.; //; // For moving, first, move the instruction itself using the normal SSA; // instruction moving API, then just call moveBefore, moveAfter,or moveTo with; // the right arguments.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/MemorySSAUpdater.h:1003,depend,depending,1003,interpreter/llvm-project/llvm/include/llvm/Analysis/MemorySSAUpdater.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/MemorySSAUpdater.h,1,['depend'],['depending']
Integrability,"//===- MicrosoftDemangle.cpp ----------------------------------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines a demangler for MSVC-style mangled symbols.; //; // This file has no dependencies on the rest of LLVM so that it can be; // easily reused in other programs such as libcxxabi.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Demangle/MicrosoftDemangle.cpp:470,depend,dependencies,470,interpreter/llvm-project/llvm/lib/Demangle/MicrosoftDemangle.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Demangle/MicrosoftDemangle.cpp,1,['depend'],['dependencies']
Integrability,"//===- MipsAsmPrinter.cpp - Mips LLVM Assembly Printer --------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file contains a printer that converts from our internal representation; // of machine-dependent LLVM code to GAS-format MIPS assembly language.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Mips/MipsAsmPrinter.cpp:474,depend,dependent,474,interpreter/llvm-project/llvm/lib/Target/Mips/MipsAsmPrinter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Mips/MipsAsmPrinter.cpp,1,['depend'],['dependent']
Integrability,"//===- MipsISelLowering.cpp - Mips DAG Lowering Implementation ------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines the interfaces that Mips uses to lower LLVM code into a; // selection DAG.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Mips/MipsISelLowering.cpp:405,interface,interfaces,405,interpreter/llvm-project/llvm/lib/Target/Mips/MipsISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Mips/MipsISelLowering.cpp,1,['interface'],['interfaces']
Integrability,"//===- MipsISelLowering.h - Mips DAG Lowering Interface ---------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines the interfaces that Mips uses to lower LLVM code into a; // selection DAG.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Mips/MipsISelLowering.h:46,Interface,Interface,46,interpreter/llvm-project/llvm/lib/Target/Mips/MipsISelLowering.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Mips/MipsISelLowering.h,2,"['Interface', 'interface']","['Interface', 'interfaces']"
Integrability,"//===- MipsSEISelLowering.cpp - MipsSE DAG Lowering Interface -------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // Subclass of MipsTargetLowering specialized for mips32/64.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Mips/MipsSEISelLowering.cpp:52,Interface,Interface,52,interpreter/llvm-project/llvm/lib/Target/Mips/MipsSEISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Mips/MipsSEISelLowering.cpp,1,['Interface'],['Interface']
Integrability,"//===- MipsSEISelLowering.h - MipsSE DAG Lowering Interface -----*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // Subclass of MipsTargetLowering specialized for mips32/64.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Mips/MipsSEISelLowering.h:50,Interface,Interface,50,interpreter/llvm-project/llvm/lib/Target/Mips/MipsSEISelLowering.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Mips/MipsSEISelLowering.h,1,['Interface'],['Interface']
Integrability,"//===- ModuleLoader.h - Module Loader Interface -----------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines the ModuleLoader interface, which is responsible for; // loading named modules.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Lex/ModuleLoader.h:38,Interface,Interface,38,interpreter/llvm-project/clang/include/clang/Lex/ModuleLoader.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Lex/ModuleLoader.h,2,"['Interface', 'interface']","['Interface', 'interface']"
Integrability,"//===- ModuleMap.h - Describe the layout of modules -------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines the ModuleMap interface, which describes the layout of a; // module as it relates to headers.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Lex/ModuleMap.h:415,interface,interface,415,interpreter/llvm-project/clang/include/clang/Lex/ModuleMap.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Lex/ModuleMap.h,1,['interface'],['interface']
Integrability,"//===- ModuleSummaryAnalysis.h - Module summary index builder ---*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; /// \file; /// This is the interface to build a ModuleSummaryIndex for a module.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/ModuleSummaryAnalysis.h:403,interface,interface,403,interpreter/llvm-project/llvm/include/llvm/Analysis/ModuleSummaryAnalysis.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/ModuleSummaryAnalysis.h,1,['interface'],['interface']
Integrability,"//===- MsgPackReader.cpp - Simple MsgPack reader ----------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; ///; /// \file; /// This file implements a MessagePack reader.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/BinaryFormat/MsgPackReader.cpp:419,Message,MessagePack,419,interpreter/llvm-project/llvm/lib/BinaryFormat/MsgPackReader.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/BinaryFormat/MsgPackReader.cpp,1,['Message'],['MessagePack']
Integrability,"//===- MsgPackReader.h - Simple MsgPack reader ------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; ///; /// \file; /// This is a MessagePack reader.; ///; /// See https://github.com/msgpack/msgpack/blob/master/spec.md for the full; /// standard.; ///; /// Typical usage:; /// \code; /// StringRef input = GetInput();; /// msgpack::Reader MPReader(input);; /// msgpack::Object Obj;; ///; /// while (true) {; /// Expected<bool> ReadObj = MPReader.read(&Obj);; /// if (!ReadObj); /// // Handle error...; /// if (!ReadObj.get()); /// break; // Reached end of input; /// switch (Obj.Kind) {; /// case msgpack::Type::Int:; // // Use Obj.Int; /// break;; /// // ...; /// }; /// }; /// \endcode; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/BinaryFormat/MsgPackReader.h:406,Message,MessagePack,406,interpreter/llvm-project/llvm/include/llvm/BinaryFormat/MsgPackReader.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/BinaryFormat/MsgPackReader.h,1,['Message'],['MessagePack']
Integrability,"//===- MsgPackWriter.cpp - Simple MsgPack writer ----------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; ///; /// \file; /// This file implements a MessagePack writer.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/BinaryFormat/MsgPackWriter.cpp:419,Message,MessagePack,419,interpreter/llvm-project/llvm/lib/BinaryFormat/MsgPackWriter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/BinaryFormat/MsgPackWriter.cpp,1,['Message'],['MessagePack']
Integrability,"//===- MsgPackWriter.h - Simple MsgPack writer ------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; ///; /// \file; /// This file contains a MessagePack writer.; ///; /// See https://github.com/msgpack/msgpack/blob/master/spec.md for the full; /// specification.; ///; /// Typical usage:; /// \code; /// raw_ostream output = GetOutputStream();; /// msgpack::Writer MPWriter(output);; /// MPWriter.writeNil();; /// MPWriter.write(false);; /// MPWriter.write(""string"");; /// // ...; /// \endcode; ///; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/BinaryFormat/MsgPackWriter.h:417,Message,MessagePack,417,interpreter/llvm-project/llvm/include/llvm/BinaryFormat/MsgPackWriter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/BinaryFormat/MsgPackWriter.h,1,['Message'],['MessagePack']
Integrability,"//===- MultiHazardRecognizer.cpp - Scheduler Support ----------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements the MultiHazardRecognizer class, which is a wrapper; // for a set of ScheduleHazardRecognizer instances; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MultiHazardRecognizer.cpp:448,wrap,wrapper,448,interpreter/llvm-project/llvm/lib/CodeGen/MultiHazardRecognizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MultiHazardRecognizer.cpp,1,['wrap'],['wrapper']
Integrability,"//===- MustExecute.h - Is an instruction known to execute--------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; /// \file; /// Contains a collection of routines for determining if a given instruction is; /// guaranteed to execute if a given point in control flow is reached. The most; /// common example is an instruction within a loop being provably executed if we; /// branch to the header of it's containing loop.; ///; /// There are two interfaces available to determine if an instruction is; /// executed once a given point in the control flow is reached:; /// 1) A loop-centric one derived from LoopSafetyInfo.; /// 2) A ""must be executed context""-based one implemented in the; /// MustBeExecutedContextExplorer.; /// Please refer to the class comments for more information.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/MustExecute.h:416,rout,routines,416,interpreter/llvm-project/llvm/include/llvm/Analysis/MustExecute.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/MustExecute.h,2,"['interface', 'rout']","['interfaces', 'routines']"
Integrability,"//===- MveEmitter.cpp - Generate arm_mve.h for use with clang -*- C++ -*-=====//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This set of linked tablegen backends is responsible for emitting the bits; // and pieces that implement <arm_mve.h>, which is defined by the ACLE standard; // and provides a set of types and functions for (more or less) direct access; // to the MVE instruction set, including the scalar shifts as well as the; // vector instructions.; //; // MVE's standard intrinsic functions are unusual in that they have a system of; // polymorphism. For example, the function vaddq() can behave like vaddq_u16(),; // vaddq_f32(), vaddq_s8(), etc., depending on the types of the vector; // arguments you give it.; //; // This constrains the implementation strategies. The usual approach to making; // the user-facing functions polymorphic would be to either use; // __attribute__((overloadable)) to make a set of vaddq() functions that are; // all inline wrappers on the underlying clang builtins, or to define a single; // vaddq() macro which expands to an instance of _Generic.; //; // The inline-wrappers approach would work fine for most intrinsics, except for; // the ones that take an argument required to be a compile-time constant,; // because if you wrap an inline function around a call to a builtin, the; // constant nature of the argument is not passed through.; //; // The _Generic approach can be made to work with enough effort, but it takes a; // lot of machinery, because of the design feature of _Generic that even the; // untaken branches are required to pass all front-end validity checks such as; // type-correctness. You can work around that by nesting further _Generics all; // over the place to coerce things",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/TableGen/MveEmitter.cpp:918,depend,depending,918,interpreter/llvm-project/clang/utils/TableGen/MveEmitter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/TableGen/MveEmitter.cpp,1,['depend'],['depending']
Integrability,"//===- NeonEmitter.cpp - Generate arm_neon.h for use with clang -*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This tablegen backend is responsible for emitting arm_neon.h, which includes; // a declaration and definition of each function specified by the ARM NEON; // compiler interface. See ARM document DUI0348B.; //; // Each NEON instruction is implemented in terms of 1 or more functions which; // are suffixed with the element type of the input vectors. Functions may be; // implemented in terms of generic vector operations such as +, *, -, etc. or; // by calling a __builtin_-prefixed function which will be handled by clang's; // CodeGen library.; //; // Additional validation code can be generated by this file when runHeader() is; // called, rather than the normal run() entry point.; //; // See also the documentation in include/clang/Basic/arm_neon.td.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/TableGen/NeonEmitter.cpp:549,interface,interface,549,interpreter/llvm-project/clang/utils/TableGen/NeonEmitter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/TableGen/NeonEmitter.cpp,1,['interface'],['interface']
Integrability,"//===- NewGVN.h - Global Value Numbering Pass -------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; /// \file; /// This file provides the interface for LLVM's Global Value Numbering pass.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Scalar/NewGVN.h:418,interface,interface,418,interpreter/llvm-project/llvm/include/llvm/Transforms/Scalar/NewGVN.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Scalar/NewGVN.h,1,['interface'],['interface']
Integrability,"//===- NewPMDriver.h - Function to drive llc with the new PM ----*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; /// \file; ///; /// A single function which is called to drive the llc behavior for the new; /// PassManager.; ///; /// This is only in a separate TU with a header to avoid including all of the; /// old pass manager headers and the new pass manager headers into the same; /// file. Eventually all of the routines here will get folded back into; /// llc.cpp.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llc/NewPMDriver.h:680,rout,routines,680,interpreter/llvm-project/llvm/tools/llc/NewPMDriver.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llc/NewPMDriver.h,1,['rout'],['routines']
Integrability,"//===- NewPMDriver.h - Function to drive opt with the new PM ----*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; /// \file; ///; /// A single function which is called to drive the opt behavior for the new; /// PassManager.; ///; /// This is only in a separate TU with a header to avoid including all of the; /// old pass manager headers and the new pass manager headers into the same; /// file. Eventually all of the routines here will get folded back into; /// opt.cpp.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/opt/NewPMDriver.h:680,rout,routines,680,interpreter/llvm-project/llvm/tools/opt/NewPMDriver.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/opt/NewPMDriver.h,1,['rout'],['routines']
Integrability,"//===- NoFolder.h - Constant folding helper ---------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines the NoFolder class, a helper for IRBuilder. It provides; // IRBuilder with a set of methods for creating unfolded constants. This is; // useful for learners trying to understand how LLVM IR works, and who don't; // want details to be hidden by the constant folder. For general constant; // creation and folding, use ConstantExpr and the routines in; // llvm/Analysis/ConstantFolding.h.; //; // Note: since it is not actually possible to create unfolded constants, this; // class returns instructions rather than constants.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/NoFolder.h:738,rout,routines,738,interpreter/llvm-project/llvm/include/llvm/IR/NoFolder.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/NoFolder.h,1,['rout'],['routines']
Integrability,"//===- ObjCARCAliasAnalysis.cpp - ObjC ARC Optimization -------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; /// \file; /// This file defines a simple ARC-aware AliasAnalysis using special knowledge; /// of Objective C to enhance other optimization passes which rely on the Alias; /// Analysis infrastructure.; ///; /// WARNING: This file knows about certain library functions. It recognizes them; /// by name, and hardwires knowledge of their semantics.; ///; /// WARNING: This file knows about how certain Objective-C library functions are; /// used. Naive LLVM IR transformations which would otherwise be; /// behavior-preserving may break these assumptions.; ///; /// TODO: Theoretically we could check for dependencies between objc_* calls; /// and FMRB_OnlyAccessesArgumentPointees calls or other well-behaved calls.; ///; /// TODO: The calls here to AAResultBase member functions are all effectively; /// no-ops that just return a conservative result. The original intent was to; /// chain to another analysis for a recursive query, but this was lost in a; /// refactor. These should instead be rephrased in terms of queries to AAQI.AAR.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/ObjCARCAliasAnalysis.cpp:978,depend,dependencies,978,interpreter/llvm-project/llvm/lib/Analysis/ObjCARCAliasAnalysis.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/ObjCARCAliasAnalysis.cpp,1,['depend'],['dependencies']
Integrability,"//===- ObjCARCContract.cpp - ObjC ARC Optimization ------------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; /// \file; /// This file defines late ObjC ARC optimizations. ARC stands for Automatic; /// Reference Counting and is a system for managing reference counts for objects; /// in Objective C.; ///; /// This specific file mainly deals with ``contracting'' multiple lower level; /// operations into singular higher level operations through pattern matching.; ///; /// WARNING: This file knows about certain library functions. It recognizes them; /// by name, and hardwires knowledge of their semantics.; ///; /// WARNING: This file knows about how certain Objective-C library functions are; /// used. Naive LLVM IR transformations which would otherwise be; /// behavior-preserving may break these assumptions.; ///; //===----------------------------------------------------------------------===//; // TODO: ObjCARCContract could insert PHI nodes when uses aren't; // dominated by single calls.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/ObjCARC/ObjCARCContract.cpp:615,contract,contracting,615,interpreter/llvm-project/llvm/lib/Transforms/ObjCARC/ObjCARCContract.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/ObjCARC/ObjCARCContract.cpp,1,['contract'],['contracting']
Integrability,"//===- ObjectYAML.cpp - YAML utilities for object files -------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines a wrapper class for handling tagged YAML input; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ObjectYAML/ObjectYAML.cpp:403,wrap,wrapper,403,interpreter/llvm-project/llvm/lib/ObjectYAML/ObjectYAML.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ObjectYAML/ObjectYAML.cpp,1,['wrap'],['wrapper']
Integrability,"//===- OptimizationRemarkEmitter.cpp - Optimization Diagnostic --*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // Optimization diagnostic interfaces. It's packaged as an analysis pass so; // that by using this service passes become dependent on BFI as well. BFI is; // used to compute the ""hotness"" of the diagnostic message.; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/OptimizationRemarkEmitter.cpp:407,interface,interfaces,407,interpreter/llvm-project/llvm/lib/Analysis/OptimizationRemarkEmitter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/OptimizationRemarkEmitter.cpp,3,"['depend', 'interface', 'message']","['dependent', 'interfaces', 'message']"
Integrability,"//===- OptimizationRemarkEmitter.h - Optimization Diagnostic ----*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // Optimization diagnostic interfaces. It's packaged as an analysis pass so; // that by using this service passes become dependent on BFI as well. BFI is; // used to compute the ""hotness"" of the diagnostic message.; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/OptimizationRemarkEmitter.h:407,interface,interfaces,407,interpreter/llvm-project/llvm/include/llvm/Analysis/OptimizationRemarkEmitter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/OptimizationRemarkEmitter.h,3,"['depend', 'interface', 'message']","['dependent', 'interfaces', 'message']"
Integrability,"//===- OptimizerDriver.cpp - Allow BugPoint to run passes safely ----------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines an interface that allows bugpoint to run various passes; // without the threat of a buggy pass corrupting bugpoint (of course, bugpoint; // may have its own bugs, but that's another story...). It achieves this by; // forking a copy of itself and having the child process do the optimizations.; // If this client dies, we can always fork a new one. :); //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/bugpoint/OptimizerDriver.cpp:404,interface,interface,404,interpreter/llvm-project/llvm/tools/bugpoint/OptimizerDriver.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/bugpoint/OptimizerDriver.cpp,1,['interface'],['interface']
Integrability,"//===- PDBFile.cpp - Low level interface to a PDB file ----------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DebugInfo/PDB/Native/PDBFile.cpp:31,interface,interface,31,interpreter/llvm-project/llvm/lib/DebugInfo/PDB/Native/PDBFile.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DebugInfo/PDB/Native/PDBFile.cpp,1,['interface'],['interface']
Integrability,"//===- PDBFile.h - Low level interface to a PDB file ------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/DebugInfo/PDB/Native/PDBFile.h:29,interface,interface,29,interpreter/llvm-project/llvm/include/llvm/DebugInfo/PDB/Native/PDBFile.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/DebugInfo/PDB/Native/PDBFile.h,1,['interface'],['interface']
Integrability,"//===- PDBSymDumper.h - base interface for PDB symbol dumper *- C++ -----*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/DebugInfo/PDB/PDBSymDumper.h:29,interface,interface,29,interpreter/llvm-project/llvm/include/llvm/DebugInfo/PDB/PDBSymDumper.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/DebugInfo/PDB/PDBSymDumper.h,1,['interface'],['interface']
Integrability,"//===- Parsing, selection, and construction of pass pipelines --*- C++ -*--===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; /// \file; ///; /// Interfaces for registering analysis passes, producing common pass manager; /// configurations, and parsing of pass pipelines.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Passes/PassBuilder.h:396,Interface,Interfaces,396,interpreter/llvm-project/llvm/include/llvm/Passes/PassBuilder.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Passes/PassBuilder.h,1,['Interface'],['Interfaces']
Integrability,"//===- PassInstrumentation.cpp - Pass Instrumentation interface -*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; /// \file; ///; /// This file provides the implementation of PassInstrumentation class.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/PassInstrumentation.cpp:54,interface,interface,54,interpreter/llvm-project/llvm/lib/IR/PassInstrumentation.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/PassInstrumentation.cpp,1,['interface'],['interface']
Integrability,"//===- PassManager internal APIs and implementation details -----*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; /// \file; ///; /// This header provides internal APIs and implementation details used by the; /// pass management interfaces exposed in PassManager.h. To understand more; /// context of why these particular interfaces are needed, see that header; /// file. None of these APIs should be used elsewhere.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/PassManagerInternal.h:491,interface,interfaces,491,interpreter/llvm-project/llvm/include/llvm/IR/PassManagerInternal.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/PassManagerInternal.h,2,['interface'],['interfaces']
Integrability,"//===- PassManager.h - Pass management infrastructure -----------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; /// \file; ///; /// This header defines various interfaces for pass management in LLVM. There; /// is no ""pass"" interface in LLVM per se. Instead, an instance of any class; /// which supports a method to 'run' it over a unit of IR can be used as; /// a pass. A pass manager is generally a tool to collect a sequence of passes; /// which run over a particular IR construct, and run each of them in sequence; /// over each such construct in the containing IR construct. As there is no; /// containing IR construct for a Module, a manager for passes over modules; /// forms the base case which runs its managed passes in sequence over the; /// single module provided.; ///; /// The core IR library provides managers for running passes over; /// modules and functions.; ///; /// * FunctionPassManager can run over a Module, runs each pass over; /// a Function.; /// * ModulePassManager must be directly run, runs each pass over the Module.; ///; /// Note that the implementations of the pass managers use concept-based; /// polymorphism as outlined in the ""Value Semantics and Concept-based; /// Polymorphism"" talk (or its abbreviated sibling ""Inheritance Is The Base; /// Class of Evil"") by Sean Parent:; /// * http://github.com/sean-parent/sean-parent.github.com/wiki/Papers-and-Presentations; /// * http://www.youtube.com/watch?v=_BpMYeUFXv8; /// * http://channel9.msdn.com/Events/GoingNative/2013/Inheritance-Is-The-Base-Class-of-Evil; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/PassManager.h:424,interface,interfaces,424,interpreter/llvm-project/llvm/include/llvm/IR/PassManager.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/PassManager.h,2,['interface'],"['interface', 'interfaces']"
Integrability,"//===- PassManager.h --- Pass management for CodeGen ------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This header defines the pass manager interface for codegen. The codegen; // pipeline consists of only machine function passes. There is no container; // relationship between IR module/function and machine function in terms of pass; // manager organization. So there is no need for adaptor classes (for example; // ModuleToMachineFunctionAdaptor). Since invalidation could only happen among; // machine function passes, there is no proxy classes to handle cross-IR-unit; // invalidation. IR analysis results are provided for machine function passes by; // their respective analysis managers such as ModuleAnalysisManager and; // FunctionAnalysisManager.; //; // TODO: Add MachineFunctionProperties support.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachinePassManager.h:420,interface,interface,420,interpreter/llvm-project/llvm/include/llvm/CodeGen/MachinePassManager.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachinePassManager.h,1,['interface'],['interface']
Integrability,"//===- PassRegistry.cpp - Pass Registration Implementation ----------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements the PassRegistry, with which passes are registered on; // initialization, and supports the PassManager in dependency resolution.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/PassRegistry.cpp:510,depend,dependency,510,interpreter/llvm-project/llvm/lib/IR/PassRegistry.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/PassRegistry.cpp,1,['depend'],['dependency']
Integrability,"//===- PassTimingInfo.h - pass execution timing -----------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; /// \file; ///; /// This header defines classes/functions to handle pass execution timing; /// information with interfaces for both pass managers.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/PassTimingInfo.h:488,interface,interfaces,488,interpreter/llvm-project/llvm/include/llvm/IR/PassTimingInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/PassTimingInfo.h,1,['interface'],['interfaces']
Integrability,"//===- PathDiagnostic.cpp - Path-Specific Diagnostic Handling -------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines the PathDiagnostic-related interfaces.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/PathDiagnostic.cpp:428,interface,interfaces,428,interpreter/llvm-project/clang/lib/Analysis/PathDiagnostic.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/PathDiagnostic.cpp,1,['interface'],['interfaces']
Integrability,"//===- PathDiagnostic.h - Path-Specific Diagnostic Handling -----*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines the PathDiagnostic-related interfaces.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/PathDiagnostic.h:428,interface,interfaces,428,interpreter/llvm-project/clang/include/clang/Analysis/PathDiagnostic.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/PathDiagnostic.h,1,['interface'],['interfaces']
Integrability,"//===- PatternMatch.h - Match on the LLVM IR --------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file provides a simple and efficient mechanism for performing general; // tree-based pattern matches on the LLVM IR. The power of these routines is; // that it allows you to write concise patterns that are expressive and easy to; // understand. The other major advantage of this is that it allows you to; // trivially capture/bind elements in the pattern to variables. For example,; // you can do something like this:; //; // Value *Exp = ...; // Value *X, *Y; ConstantInt *C1, *C2; // (X & C1) | (Y & C2); // if (match(Exp, m_Or(m_And(m_Value(X), m_ConstantInt(C1)),; // m_And(m_Value(Y), m_ConstantInt(C2))))) {; // ... Pattern is matched and variables are bound ...; // }; //; // This is primarily useful to things like the instruction combiner, but can; // also be useful for static analysis tools or code generators.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/PatternMatch.h:524,rout,routines,524,interpreter/llvm-project/llvm/include/llvm/IR/PatternMatch.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/PatternMatch.h,1,['rout'],['routines']
Integrability,"//===- PlaceSafepoints.cpp - Place GC Safepoints --------------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // Place garbage collection safepoints at appropriate locations in the IR. This; // does not make relocation semantics or variable liveness explicit. That's; // done by RewriteStatepointsForGC.; //; // Terminology:; // - A call is said to be ""parseable"" if there is a stack map generated for the; // return PC of the call. A runtime can determine where values listed in the; // deopt arguments and (after RewriteStatepointsForGC) gc arguments are located; // on the stack when the code is suspended inside such a call. Every parse; // point is represented by a call wrapped in an gc.statepoint intrinsic.; // - A ""poll"" is an explicit check in the generated code to determine if the; // runtime needs the generated code to cooperate by calling a helper routine; // and thus suspending its execution at a known state. The call to the helper; // routine will be parseable. The (gc & runtime specific) logic of a poll is; // assumed to be provided in a function of the name ""gc.safepoint_poll"".; //; // We aim to insert polls such that running code can quickly be brought to a; // well defined state for inspection by the collector. In the current; // implementation, this is done via the insertion of poll sites at method entry; // and the backedge of most loops. We try to avoid inserting more polls than; // are necessary to ensure a finite period between poll sites. This is not; // because the poll itself is expensive in the generated code; it's not. Polls; // do tend to impact the optimizer itself in negative ways; we'd like to avoid; // perturbing the optimization of the method as much as we can.; //; // We also ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/PlaceSafepoints.cpp:946,wrap,wrapped,946,interpreter/llvm-project/llvm/lib/Transforms/Scalar/PlaceSafepoints.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/PlaceSafepoints.cpp,1,['wrap'],['wrapped']
Integrability,"//===- PlaceSafepoints.h - Place GC Safepoints ----------------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // Place garbage collection safepoints at appropriate locations in the IR. This; // does not make relocation semantics or variable liveness explicit. That's; // done by RewriteStatepointsForGC.; //; // Terminology:; // - A call is said to be ""parseable"" if there is a stack map generated for the; // return PC of the call. A runtime can determine where values listed in the; // deopt arguments and (after RewriteStatepointsForGC) gc arguments are located; // on the stack when the code is suspended inside such a call. Every parse; // point is represented by a call wrapped in an gc.statepoint intrinsic.; // - A ""poll"" is an explicit check in the generated code to determine if the; // runtime needs the generated code to cooperate by calling a helper routine; // and thus suspending its execution at a known state. The call to the helper; // routine will be parseable. The (gc & runtime specific) logic of a poll is; // assumed to be provided in a function of the name ""gc.safepoint_poll"".; //; // We aim to insert polls such that running code can quickly be brought to a; // well defined state for inspection by the collector. In the current; // implementation, this is done via the insertion of poll sites at method entry; // and the backedge of most loops. We try to avoid inserting more polls than; // are necessary to ensure a finite period between poll sites. This is not; // because the poll itself is expensive in the generated code; it's not. Polls; // do tend to impact the optimizer itself in negative ways; we'd like to avoid; // perturbing the optimization of the method as much as we can.; //; // We also ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Scalar/PlaceSafepoints.h:946,wrap,wrapped,946,interpreter/llvm-project/llvm/include/llvm/Transforms/Scalar/PlaceSafepoints.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Scalar/PlaceSafepoints.h,1,['wrap'],['wrapped']
Integrability,"//===- Pragma.cpp - Pragma registration and handling ----------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements the PragmaHandler/PragmaTable interfaces and implements; // pragma related methods of the Preprocessor class.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Lex/Pragma.cpp:434,interface,interfaces,434,interpreter/llvm-project/clang/lib/Lex/Pragma.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Lex/Pragma.cpp,1,['interface'],['interfaces']
Integrability,"//===- Pragma.h - Pragma registration and handling --------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines the PragmaHandler and PragmaTable interfaces.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Lex/Pragma.h:435,interface,interfaces,435,interpreter/llvm-project/clang/include/clang/Lex/Pragma.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Lex/Pragma.h,1,['interface'],['interfaces']
Integrability,"//===- Preprocessor.cpp - C Language Family Preprocessor Implementation ---===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements the Preprocessor interface.; //; //===----------------------------------------------------------------------===//; //; // Options to support:; // -H - Print the name of each header file used.; // -d[DNI] - Dump various things.; // -fworking-directory - #line's with preprocessor's working dir.; // -fpreprocessed; // -dependency-file,-M,-MM,-MF,-MG,-MP,-MT,-MQ,-MD,-MMD; // -W*; // -w; //; // Messages to emit:; // ""Multiple include guards may be useful for:\n""; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Lex/Preprocessor.cpp:421,interface,interface,421,interpreter/llvm-project/clang/lib/Lex/Preprocessor.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Lex/Preprocessor.cpp,3,"['Message', 'depend', 'interface']","['Messages', 'dependency-file', 'interface']"
Integrability,"//===- Preprocessor.h - C Language Family Preprocessor ----------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; /// \file; /// Defines the clang::Preprocessor interface.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Lex/Preprocessor.h:427,interface,interface,427,interpreter/llvm-project/clang/include/clang/Lex/Preprocessor.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Lex/Preprocessor.h,1,['interface'],['interface']
Integrability,"//===- PreprocessorLexer.cpp - C Language Family Lexer --------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements the PreprocessorLexer and Token interfaces.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Lex/PreprocessorLexer.cpp:436,interface,interfaces,436,interpreter/llvm-project/clang/lib/Lex/PreprocessorLexer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Lex/PreprocessorLexer.cpp,1,['interface'],['interfaces']
Integrability,"//===- PreprocessorLexer.h - C Language Family Lexer ------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; /// \file; /// Defines the PreprocessorLexer interface.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Lex/PreprocessorLexer.h:425,interface,interface,425,interpreter/llvm-project/clang/include/clang/Lex/PreprocessorLexer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Lex/PreprocessorLexer.h,1,['interface'],['interface']
Integrability,"//===- PromoteMemToReg.h - Promote Allocas to Scalars -----------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file exposes an interface to promote alloca instructions to SSA; // registers, by using the SSA construction algorithm.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/PromoteMemToReg.h:404,interface,interface,404,interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/PromoteMemToReg.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/PromoteMemToReg.h,1,['interface'],['interface']
Integrability,"//===- PseudoProbe.h - Pseudo Probe IR Helpers ------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // Pseudo probe IR intrinsic and dwarf discriminator manipulation routines.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/PseudoProbe.h:446,rout,routines,446,interpreter/llvm-project/llvm/include/llvm/IR/PseudoProbe.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/PseudoProbe.h,1,['rout'],['routines']
Integrability,"//===- RISCVOptWInstrs.cpp - MI W instruction optimizations ---------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===---------------------------------------------------------------------===//; //; // This pass does some optimizations for *W instructions at the MI level.; //; // First it removes unneeded sext.w instructions. Either because the sign; // extended bits aren't consumed or because the input was already sign extended; // by an earlier instruction.; //; // Then it removes the -w suffix from opw instructions whenever all users are; // dependent only on the lower word of the result of the instruction.; // The cases handled are:; // * addw because c.add has a larger register encoding than c.addw.; // * addiw because it helps reduce test differences between RV32 and RV64; // w/o being a pessimization.; // * mulw because c.mulw doesn't exist but c.mul does (w/ zcb); // * slliw because c.slliw doesn't exist and c.slli does; //; //===---------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVOptWInstrs.cpp:731,depend,dependent,731,interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVOptWInstrs.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVOptWInstrs.cpp,1,['depend'],['dependent']
Integrability,"//===- Randstruct.h - Interfact for structure randomization -------*- C++ -*-=//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file contains the interface for Clang's structure field layout; // randomization.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/Randstruct.h:406,interface,interface,406,interpreter/llvm-project/clang/include/clang/AST/Randstruct.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/Randstruct.h,1,['interface'],['interface']
Integrability,"//===- RecordLayout.cpp - Layout information for a struct/union -----------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines the RecordLayout interface.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/RecordLayout.cpp:418,interface,interface,418,interpreter/llvm-project/clang/lib/AST/RecordLayout.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/RecordLayout.cpp,1,['interface'],['interface']
Integrability,"//===- RecordLayout.h - Layout information for a struct/union ---*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines the RecordLayout interface.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/RecordLayout.h:418,interface,interface,418,interpreter/llvm-project/clang/include/clang/AST/RecordLayout.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/RecordLayout.h,1,['interface'],['interface']
Integrability,"//===- Redeclarable.h - Base for Decls that can be redeclared --*- C++ -*-====//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines the Redeclarable interface.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/Redeclarable.h:418,interface,interface,418,interpreter/llvm-project/clang/include/clang/AST/Redeclarable.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/Redeclarable.h,1,['interface'],['interface']
Integrability,"//===- ReducerWorkItem.cpp - Wrapper for Module and MachineFunction -------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-reduce/ReducerWorkItem.cpp:29,Wrap,Wrapper,29,interpreter/llvm-project/llvm/tools/llvm-reduce/ReducerWorkItem.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-reduce/ReducerWorkItem.cpp,1,['Wrap'],['Wrapper']
Integrability,"//===- ReducerWorkItem.h - Wrapper for Module -------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-reduce/ReducerWorkItem.h:27,Wrap,Wrapper,27,interpreter/llvm-project/llvm/tools/llvm-reduce/ReducerWorkItem.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-reduce/ReducerWorkItem.h,1,['Wrap'],['Wrapper']
Integrability,"//===- Reg2Mem.h - Convert registers to allocas -----------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file provides the interface for the RegToMem Pass.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Scalar/Reg2Mem.h:406,interface,interface,406,interpreter/llvm-project/llvm/include/llvm/Transforms/Scalar/Reg2Mem.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Scalar/Reg2Mem.h,1,['interface'],['interface']
Integrability,"//===- RegAllocBase.h - basic regalloc interface and driver -----*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines the RegAllocBase class, which is the skeleton of a basic; // register allocation algorithm and interface for extending it. It provides the; // building blocks on which to construct other experimental allocators and test; // the validity of two principles:; //; // - If virtual and physical register liveness is modeled using intervals, then; // on-the-fly interference checking is cheap. Furthermore, interferences can be; // lazily cached and reused.; //; // - Register allocation complexity, and generated code performance is; // determined by the effectiveness of live range splitting rather than optimal; // coloring.; //; // Following the first principle, interfering checking revolves around the; // LiveIntervalUnion data structure.; //; // To fulfill the second principle, the basic allocator provides a driver for; // incremental splitting. It essentially punts on the problem of register; // coloring, instead driving the assignment of virtual to physical registers by; // the cost of splitting. The basic allocator allows for heuristic reassignment; // of registers, if a more sophisticated allocator chooses to do that.; //; // This framework provides a way to engineer the compile time vs. code; // quality trade-off without relying on a particular theoretical solver.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/RegAllocBase.h:39,interface,interface,39,interpreter/llvm-project/llvm/lib/CodeGen/RegAllocBase.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/RegAllocBase.h,2,['interface'],['interface']
Integrability,"//===- RegAllocPBQP.h -------------------------------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines the PBQPBuilder interface, for classes which build PBQP; // instances to represent register allocation problems, and the RegAllocPBQP; // interface.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/RegAllocPBQP.h:417,interface,interface,417,interpreter/llvm-project/llvm/include/llvm/CodeGen/RegAllocPBQP.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/RegAllocPBQP.h,2,['interface'],['interface']
Integrability,"//===- RegisterClassInfo.cpp - Dynamic Register Class Info ----------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements the RegisterClassInfo class which provides dynamic; // information about target register classes. Callee-saved vs. caller-saved and; // reserved registers depend on calling conventions and other dynamic; // information, so some things cannot be determined statically.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/RegisterClassInfo.cpp:559,depend,depend,559,interpreter/llvm-project/llvm/lib/CodeGen/RegisterClassInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/RegisterClassInfo.cpp,1,['depend'],['depend']
Integrability,"//===- RegisterClassInfo.h - Dynamic Register Class Info --------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements the RegisterClassInfo class which provides dynamic; // information about target register classes. Callee saved and reserved; // registers depends on calling conventions and other dynamic information, so; // some things cannot be determined statically.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/RegisterClassInfo.h:542,depend,depends,542,interpreter/llvm-project/llvm/include/llvm/CodeGen/RegisterClassInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/RegisterClassInfo.h,1,['depend'],['depends']
Integrability,"//===- RegisterCoalescer.cpp - Generic Register Coalescing Interface ------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements the generic RegisterCoalescer interface which; // is used as the common interface used by all clients and; // implementations of register coalescing.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/RegisterCoalescer.cpp:59,Interface,Interface,59,interpreter/llvm-project/llvm/lib/CodeGen/RegisterCoalescer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/RegisterCoalescer.cpp,3,"['Interface', 'interface']","['Interface', 'interface']"
Integrability,"//===- RegisterCoalescer.h - Register Coalescing Interface ------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file contains the abstract interface for register coalescers,; // allowing them to interact with and query register allocators.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/RegisterCoalescer.h:49,Interface,Interface,49,interpreter/llvm-project/llvm/lib/CodeGen/RegisterCoalescer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/RegisterCoalescer.h,2,"['Interface', 'interface']","['Interface', 'interface']"
Integrability,"//===- Registry.h - Matcher registry ----------------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; /// \file; /// Registry of all known matchers.; ///; /// The registry provides a generic interface to construct any matcher by name.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/ASTMatchers/Dynamic/Registry.h:469,interface,interface,469,interpreter/llvm-project/clang/include/clang/ASTMatchers/Dynamic/Registry.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/ASTMatchers/Dynamic/Registry.h,1,['interface'],['interface']
Integrability,"//===- ReleaseModeModelRunner.h - Fast, precompiled model runner ---------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements a model runner wrapping an AOT compiled ML model.; // Only inference is supported.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/ReleaseModeModelRunner.h:418,wrap,wrapping,418,interpreter/llvm-project/llvm/include/llvm/Analysis/ReleaseModeModelRunner.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/ReleaseModeModelRunner.h,1,['wrap'],['wrapping']
Integrability,"//===- RelocVisitor.h - Visitor for object file relocations -----*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file provides a wrapper around all the different types of relocations; // in different file formats, such that a client can handle them in a unified; // manner by only implementing a minimal number of functions.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Object/RelocationResolver.h:404,wrap,wrapper,404,interpreter/llvm-project/llvm/include/llvm/Object/RelocationResolver.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Object/RelocationResolver.h,1,['wrap'],['wrapper']
Integrability,"//===- ReplayInlineAdvisor.h - Replay Inline Advisor interface -*- C++ --*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/ReplayInlineAdvisor.h:53,interface,interface,53,interpreter/llvm-project/llvm/include/llvm/Analysis/ReplayInlineAdvisor.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/ReplayInlineAdvisor.h,1,['interface'],['interface']
Integrability,"//===- RewriteBuffer.h - Buffer rewriting interface -------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Rewrite/Core/RewriteBuffer.h:42,interface,interface,42,interpreter/llvm-project/clang/include/clang/Rewrite/Core/RewriteBuffer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Rewrite/Core/RewriteBuffer.h,1,['interface'],['interface']
Integrability,"//===- RewriteStatepointsForGC.h - ------------------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file provides interface to ""Rewrite Statepoints for GC"" pass.; //; // This passe rewrites call/invoke instructions so as to make potential; // relocations performed by the garbage collector explicit in the IR.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Scalar/RewriteStatepointsForGC.h:402,interface,interface,402,interpreter/llvm-project/llvm/include/llvm/Transforms/Scalar/RewriteStatepointsForGC.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Scalar/RewriteStatepointsForGC.h,1,['interface'],['interface']
Integrability,"//===- Rewriter.cpp - Code rewriting interface ----------------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines the Rewriter class, which is used for code; // transformations.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Rewrite/Rewriter.cpp:37,interface,interface,37,interpreter/llvm-project/clang/lib/Rewrite/Rewriter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Rewrite/Rewriter.cpp,1,['interface'],['interface']
Integrability,"//===- Rewriter.h - Code rewriting interface --------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines the Rewriter class, which is used for code; // transformations.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Rewrite/Core/Rewriter.h:35,interface,interface,35,interpreter/llvm-project/clang/include/clang/Rewrite/Core/Rewriter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Rewrite/Core/Rewriter.h,1,['interface'],['interface']
Integrability,"//===- RuntimeDyld.h - Run-time dynamic linker for MC-JIT -------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // Interface for the runtime dynamic linker facilities of the MC-JIT.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/RuntimeDyld.h:383,Interface,Interface,383,interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/RuntimeDyld.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/RuntimeDyld.h,1,['Interface'],['Interface']
Integrability,"//===- SIInstrInfo.h - SI Instruction Info Interface ------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; /// \file; /// Interface definition for SIInstrInfo.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIInstrInfo.h:43,Interface,Interface,43,interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIInstrInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIInstrInfo.h,2,['Interface'],['Interface']
Integrability,"//===- SROA.h - Scalar Replacement Of Aggregates ----------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; /// \file; /// This file provides the interface for LLVM's Scalar Replacement of; /// Aggregates pass. This pass provides both aggregate splitting and the; /// primary SSA formation used in the compiler.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Scalar/SROA.h:414,interface,interface,414,interpreter/llvm-project/llvm/include/llvm/Transforms/Scalar/SROA.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Scalar/SROA.h,1,['interface'],['interface']
Integrability,"//===- SampleProfile.h - SamplePGO pass ---------- --------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; /// \file; /// This file provides the interface for the sampled PGO loader pass.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/SampleProfile.h:418,interface,interface,418,interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/SampleProfile.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/SampleProfile.h,1,['interface'],['interface']
Integrability,"//===- ScalarEvolutionAliasAnalysis.cpp - SCEV-based Alias Analysis -------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines the ScalarEvolutionAliasAnalysis pass, which implements a; // simple alias analysis implemented in terms of ScalarEvolution queries.; //; // This differs from traditional loop dependence analysis in that it tests; // for dependencies within a single iteration of a loop, rather than; // dependencies between different iterations.; //; // ScalarEvolution has a more complete understanding of pointer arithmetic; // than BasicAliasAnalysis' collection of ad-hoc analyses.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/ScalarEvolutionAliasAnalysis.cpp:577,depend,dependence,577,interpreter/llvm-project/llvm/lib/Analysis/ScalarEvolutionAliasAnalysis.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/ScalarEvolutionAliasAnalysis.cpp,3,['depend'],"['dependence', 'dependencies']"
Integrability,"//===- ScalarEvolutionAliasAnalysis.h - SCEV-based AA -----------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; /// \file; /// This is the interface for a SCEV-based alias analysis.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/ScalarEvolutionAliasAnalysis.h:403,interface,interface,403,interpreter/llvm-project/llvm/include/llvm/Analysis/ScalarEvolutionAliasAnalysis.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/ScalarEvolutionAliasAnalysis.h,1,['interface'],['interface']
Integrability,"//===- ScheduleDAGInstrs.h - MachineInstr Scheduling ------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; /// \file Implements the ScheduleDAGInstrs class, which implements scheduling; /// for a MachineInstr-based dependency graph.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/ScheduleDAGInstrs.h:488,depend,dependency,488,interpreter/llvm-project/llvm/include/llvm/CodeGen/ScheduleDAGInstrs.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/ScheduleDAGInstrs.h,1,['depend'],['dependency']
Integrability,"//===- ScheduleDAGMutation.h - MachineInstr Scheduling ----------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements the ScheduleDAGMutation class, which represents; // a target-specific mutation of the dependency graph for scheduling.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/ScheduleDAGMutation.h:490,depend,dependency,490,interpreter/llvm-project/llvm/include/llvm/CodeGen/ScheduleDAGMutation.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/ScheduleDAGMutation.h,1,['depend'],['dependency']
Integrability,"//===- Scope.h - Scope interface --------------------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines the Scope interface.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Sema/Scope.h:23,interface,interface,23,interpreter/llvm-project/clang/include/clang/Sema/Scope.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Sema/Scope.h,2,['interface'],['interface']
Integrability,"//===- ScopedNoAliasAA.h - Scoped No-Alias Alias Analysis -------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; /// \file; /// This is the interface for a metadata-based scoped no-alias analysis.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/ScopedNoAliasAA.h:407,interface,interface,407,interpreter/llvm-project/llvm/include/llvm/Analysis/ScopedNoAliasAA.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/ScopedNoAliasAA.h,1,['interface'],['interface']
Integrability,"//===- SelectionDAGBuilder.cpp - Selection-DAG building -------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This implements routines for translating from LLVM IR into SelectionDAG IR.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAGBuilder.cpp:399,rout,routines,399,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAGBuilder.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAGBuilder.cpp,1,['rout'],['routines']
Integrability,"//===- SelectionDAGBuilder.h - Selection-DAG building -----------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This implements routines for translating from LLVM IR into SelectionDAG IR.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAGBuilder.h:399,rout,routines,399,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAGBuilder.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAGBuilder.h,1,['rout'],['routines']
Integrability,"//===- SimplifyCFG.h - Simplify and canonicalize the CFG --------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; /// \file; /// This file provides the interface for the pass responsible for both; /// simplifying and canonicalizing the CFG.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Scalar/SimplifyCFG.h:414,interface,interface,414,interpreter/llvm-project/llvm/include/llvm/Transforms/Scalar/SimplifyCFG.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Scalar/SimplifyCFG.h,1,['interface'],['interface']
Integrability,"//===- SimplifyCFGOptions.h - Control structure for SimplifyCFG -*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // A set of parameters used to control the transforms in the SimplifyCFG pass.; // Options may change depending on the position in the optimization pipeline.; // For example, canonical form that includes switches and branches may later be; // replaced by lookup tables and selects.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/SimplifyCFGOptions.h:482,depend,depending,482,interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/SimplifyCFGOptions.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/SimplifyCFGOptions.h,1,['depend'],['depending']
Integrability,"//===- SimplifyLibCalls.h - Library call simplifier -------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file exposes an interface to build some C language libcalls for; // optimization passes that need to call the various functions.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/SimplifyLibCalls.h:404,interface,interface,404,interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/SimplifyLibCalls.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/SimplifyLibCalls.h,1,['interface'],['interface']
Integrability,"//===- SmallVectorMemoryBuffer.h --------------------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file declares a wrapper class to hold the memory into which an; // object will be generated.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/SmallVectorMemoryBuffer.h:404,wrap,wrapper,404,interpreter/llvm-project/llvm/include/llvm/Support/SmallVectorMemoryBuffer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/SmallVectorMemoryBuffer.h,1,['wrap'],['wrapper']
Integrability,"//===- Solver.h -------------------------------------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines an interface for a SAT solver that can be used by; // dataflow analyses.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/FlowSensitive/Solver.h:404,interface,interface,404,interpreter/llvm-project/clang/include/clang/Analysis/FlowSensitive/Solver.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/FlowSensitive/Solver.h,1,['interface'],['interface']
Integrability,"//===- SourceCoverageViewHTML.h - A html code coverage view ---------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; ///; /// \file This file defines the interface to the html coverage renderer.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-cov/SourceCoverageViewHTML.h:413,interface,interface,413,interpreter/llvm-project/llvm/tools/llvm-cov/SourceCoverageViewHTML.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-cov/SourceCoverageViewHTML.h,1,['interface'],['interface']
Integrability,"//===- SourceCoverageViewText.h - A text-based code coverage view ---------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; ///; /// \file This file defines the interface to the text-based coverage renderer.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-cov/SourceCoverageViewText.h:413,interface,interface,413,interpreter/llvm-project/llvm/tools/llvm-cov/SourceCoverageViewText.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-cov/SourceCoverageViewText.h,1,['interface'],['interface']
Integrability,"//===- SourceManager.cpp - Track and cache source files -------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements the SourceManager interface.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Basic/SourceManager.cpp:422,interface,interface,422,interpreter/llvm-project/clang/lib/Basic/SourceManager.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Basic/SourceManager.cpp,1,['interface'],['interface']
Integrability,"//===- SourceManager.h - Track and cache source files -----------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; /// \file; /// Defines the SourceManager interface.; ///; /// There are three different types of locations in a %file: a spelling; /// location, an expansion location, and a presumed location.; ///; /// Given an example of:; /// \code; /// #define min(x, y) x < y ? x : y; /// \endcode; ///; /// and then later on a use of min:; /// \code; /// #line 17; /// return min(a, b);; /// \endcode; ///; /// The expansion location is the line in the source code where the macro; /// was expanded (the return statement), the spelling location is the; /// location in the source where the macro was originally defined,; /// and the presumed location is where the line directive states that; /// the line is 17, or any other line.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/SourceManager.h:421,interface,interface,421,interpreter/llvm-project/clang/include/clang/Basic/SourceManager.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/SourceManager.h,1,['interface'],['interface']
Integrability,"//===- Stmt.h - Classes for representing statements -------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines the Stmt interface and subclasses.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/Stmt.h:410,interface,interface,410,interpreter/llvm-project/clang/include/clang/AST/Stmt.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/Stmt.h,1,['interface'],['interface']
Integrability,"//===- StmtVisitor.h - Visitor for Stmt subclasses --------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines the StmtVisitor and ConstStmtVisitor interfaces.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/StmtVisitor.h:438,interface,interfaces,438,interpreter/llvm-project/clang/include/clang/AST/StmtVisitor.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/StmtVisitor.h,1,['interface'],['interfaces']
Integrability,"//===- Store.cpp - Interface for maps from Locations to Values ------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defined the types Store and StoreManager.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/Store.cpp:19,Interface,Interface,19,interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/Store.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/Store.cpp,1,['Interface'],['Interface']
Integrability,"//===- Store.h - Interface for maps from Locations to Values ----*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defined the types Store and StoreManager.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/StaticAnalyzer/Core/PathSensitive/Store.h:17,Interface,Interface,17,interpreter/llvm-project/clang/include/clang/StaticAnalyzer/Core/PathSensitive/Store.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/StaticAnalyzer/Core/PathSensitive/Store.h,1,['Interface'],['Interface']
Integrability,"//===- StringMap.h - String Hash table map interface ------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; ///; /// \file; /// This file defines the StringMap class.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/StringMap.h:43,interface,interface,43,interpreter/llvm-project/llvm/include/llvm/ADT/StringMap.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/StringMap.h,1,['interface'],['interface']
Integrability,"//===- StringMapEntry.h - String Hash table map interface -------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; ///; /// \file; /// This file defines the StringMapEntry class - it is intended to be a low; /// dependency implementation detail of StringMap that is more suitable for; /// inclusion in public headers than StringMap.h itself is.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/StringMapEntry.h:48,interface,interface,48,interpreter/llvm-project/llvm/include/llvm/ADT/StringMapEntry.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/StringMapEntry.h,2,"['depend', 'interface']","['dependency', 'interface']"
Integrability,"//===- StringRef.h - Constant String Reference Wrapper ----------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/StringRef.h:47,Wrap,Wrapper,47,interpreter/llvm-project/llvm/include/llvm/ADT/StringRef.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/StringRef.h,1,['Wrap'],['Wrapper']
Integrability,"//===- StringSet.h - An efficient set built on StringMap --------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; ///; /// \file; /// StringSet - A set-like wrapper for the StringMap.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/StringSet.h:419,wrap,wrapper,419,interpreter/llvm-project/llvm/include/llvm/ADT/StringSet.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/StringSet.h,1,['wrap'],['wrapper']
Integrability,"//===- SubtargetFeature.cpp - CPU characteristics Implementation ----------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; /// \file Implements the SubtargetFeature interface.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/TargetParser/SubtargetFeature.cpp:422,interface,interface,422,interpreter/llvm-project/llvm/lib/TargetParser/SubtargetFeature.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/TargetParser/SubtargetFeature.cpp,1,['interface'],['interface']
Integrability,"//===- SymbolicFile.cpp - Interface that only provides symbols ------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines a file format independent SymbolicFile class.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Object/SymbolicFile.cpp:26,Interface,Interface,26,interpreter/llvm-project/llvm/lib/Object/SymbolicFile.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Object/SymbolicFile.cpp,1,['Interface'],['Interface']
Integrability,"//===- SymbolicFile.h - Interface that only provides symbols ----*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file declares the SymbolicFile interface.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Object/SymbolicFile.h:24,Interface,Interface,24,interpreter/llvm-project/llvm/include/llvm/Object/SymbolicFile.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Object/SymbolicFile.h,2,"['Interface', 'interface']","['Interface', 'interface']"
Integrability,"//===- SymbolizableModule.h -------------------------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file declares the SymbolizableModule interface.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/DebugInfo/Symbolize/SymbolizableModule.h:425,interface,interface,425,interpreter/llvm-project/llvm/include/llvm/DebugInfo/Symbolize/SymbolizableModule.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/DebugInfo/Symbolize/SymbolizableModule.h,1,['interface'],['interface']
Integrability,"//===- TapiFile.h - Text-based Dynamic Library Stub -------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file declares the TapiFile interface.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Object/TapiFile.h:415,interface,interface,415,interpreter/llvm-project/llvm/include/llvm/Object/TapiFile.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Object/TapiFile.h,1,['interface'],['interface']
Integrability,"//===- TargetFrameLoweringImpl.cpp - Implement target frame interface ------==//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // Implements the layout of a stack frame on the target machine.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/TargetFrameLoweringImpl.cpp:60,interface,interface,60,interpreter/llvm-project/llvm/lib/CodeGen/TargetFrameLoweringImpl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/TargetFrameLoweringImpl.cpp,1,['interface'],['interface']
Integrability,"//===- TargetPassConfig.cpp - Target independent code generation passes ---===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines interfaces to access the target independent code; // generation passes provided by the LLVM backend.; //; //===---------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/TargetPassConfig.cpp:401,interface,interfaces,401,interpreter/llvm-project/llvm/lib/CodeGen/TargetPassConfig.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/TargetPassConfig.cpp,1,['interface'],['interfaces']
Integrability,"//===- TargetTransformInfo.h ------------------------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; /// \file; /// This pass exposes codegen information to IR-level passes. Every; /// transformation that uses codegen information is broken into three parts:; /// 1. The IR-level analysis pass.; /// 2. The IR-level transformation interface which provides the needed; /// information.; /// 3. Codegen-level implementation which uses target-specific hooks.; ///; /// This file defines #2, which is the interface that IR-level transformations; /// use for querying the codegen.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/TargetTransformInfo.h:605,interface,interface,605,interpreter/llvm-project/llvm/include/llvm/Analysis/TargetTransformInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/TargetTransformInfo.h,2,['interface'],['interface']
Integrability,"//===- TemplateArgumentVisitor.h - Visitor for TArg subclasses --*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines the TemplateArgumentVisitor interface.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/TemplateArgumentVisitor.h:429,interface,interface,429,interpreter/llvm-project/clang/include/clang/AST/TemplateArgumentVisitor.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/TemplateArgumentVisitor.h,1,['interface'],['interface']
Integrability,"//===- TemplateDeduction.h - C++ template argument deduction ----*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file provides types used with Sema's template argument deduction; // routines.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Sema/TemplateDeduction.h:457,rout,routines,457,interpreter/llvm-project/clang/include/clang/Sema/TemplateDeduction.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Sema/TemplateDeduction.h,1,['rout'],['routines']
Integrability,"//===- TemplateName.cpp - C++ Template Name Representation ----------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines the TemplateName interface and subclasses.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/TemplateName.cpp:418,interface,interface,418,interpreter/llvm-project/clang/lib/AST/TemplateName.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/TemplateName.cpp,1,['interface'],['interface']
Integrability,"//===- TemplateName.h - C++ Template Name Representation --------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines the TemplateName interface and subclasses.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/TemplateName.h:418,interface,interface,418,interpreter/llvm-project/clang/include/clang/AST/TemplateName.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/TemplateName.h,1,['interface'],['interface']
Integrability,"//===- TextDiagnosticBuffer.cpp - Buffer Text Diagnostics -----------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This is a concrete diagnostic client, which buffers the diagnostic messages.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/TextDiagnosticBuffer.cpp:450,message,messages,450,interpreter/llvm-project/clang/lib/Frontend/TextDiagnosticBuffer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/TextDiagnosticBuffer.cpp,1,['message'],['messages']
Integrability,"//===- TextDiagnosticBuffer.h - Buffer Text Diagnostics ---------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This is a concrete diagnostic client, which buffers the diagnostic messages.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Frontend/TextDiagnosticBuffer.h:450,message,messages,450,interpreter/llvm-project/clang/include/clang/Frontend/TextDiagnosticBuffer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Frontend/TextDiagnosticBuffer.h,1,['message'],['messages']
Integrability,"//===- ThreadSafetyCommon.cpp ---------------------------------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // Implementation of the interfaces declared in ThreadSafetyCommon.h; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/ThreadSafetyCommon.cpp:405,interface,interfaces,405,interpreter/llvm-project/clang/lib/Analysis/ThreadSafetyCommon.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/ThreadSafetyCommon.cpp,1,['interface'],['interfaces']
Integrability,"//===- ThreadSafetyTIL.h ----------------------------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines a simple Typed Intermediate Language, or TIL, that is used; // by the thread safety analysis (See ThreadSafety.cpp). The TIL is intended; // to be largely independent of clang, in the hope that the analysis can be; // reused for other non-C++ languages. All dependencies on clang/llvm should; // go in ThreadSafetyUtil.h.; //; // Thread safety analysis works by comparing mutex expressions, e.g.; //; // class A { Mutex mu; int dat GUARDED_BY(this->mu); }; // class B { A a; }; //; // void foo(B* b) {; // (*b).a.mu.lock(); // locks (*b).a.mu; // b->a.dat = 0; // substitute &b->a for 'this';; // // requires lock on (&b->a)->mu; // (b->a.mu).unlock(); // unlocks (b->a.mu); // }; //; // As illustrated by the above example, clang Exprs are not well-suited to; // represent mutex expressions directly, since there is no easy way to compare; // Exprs for equivalence. The thread safety analysis thus lowers clang Exprs; // into a simple intermediate language (IL). The IL supports:; //; // (1) comparisons for semantic equality of expressions; // (2) SSA renaming of variables; // (3) wildcards and pattern matching over expressions; // (4) hash-based expression lookup; //; // The TIL is currently very experimental, is intended only for use within; // the thread safety analysis, and is subject to change without notice.; // After the API stabilizes and matures, it may be appropriate to make this; // more generally available to other analyses.; //; // UNDER CONSTRUCTION. USE AT YOUR OWN RISK.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h:659,depend,dependencies,659,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h,1,['depend'],['dependencies']
Integrability,"//===- TokenLexer.cpp - Lex from a token stream ---------------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements the TokenLexer interface.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Lex/TokenLexer.cpp:419,interface,interface,419,interpreter/llvm-project/clang/lib/Lex/TokenLexer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Lex/TokenLexer.cpp,1,['interface'],['interface']
Integrability,"//===- TokenLexer.h - Lex from a token buffer -------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines the TokenLexer interface.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Lex/TokenLexer.h:416,interface,interface,416,interpreter/llvm-project/clang/include/clang/Lex/TokenLexer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Lex/TokenLexer.h,1,['interface'],['interface']
Integrability,"//===- TokenManager.h - Manage Tokens for syntax-tree ------------*- C++-*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // Defines Token interfaces for the clang syntax-tree. This is the level of; // abstraction that the syntax-tree uses to operate on Token.; //; // TokenManager decouples the syntax-tree from a particular token; // implementation. For example, a TokenBuffer captured from a clang parser may; // track macro expansions and associate tokens with clang's SourceManager, while; // a clang pseudoparser would use a flat array of raw-lexed tokens in memory.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Tooling/Syntax/TokenManager.h:397,interface,interfaces,397,interpreter/llvm-project/clang/include/clang/Tooling/Syntax/TokenManager.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Tooling/Syntax/TokenManager.h,1,['interface'],['interfaces']
Integrability,"//===- TokenRewriter.cpp - Token-based code rewriting interface -----------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements the TokenRewriter class, which is used for code; // transformations.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Rewrite/TokenRewriter.cpp:54,interface,interface,54,interpreter/llvm-project/clang/lib/Rewrite/TokenRewriter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Rewrite/TokenRewriter.cpp,1,['interface'],['interface']
Integrability,"//===- TrainingLogger.h - mlgo feature/reward logging ----------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // The design goals of the logger are:; // - no dependencies that llvm doesn't already have.; // - support streaming, so that we don't need to buffer data during compilation; // - 0-decoding tensor values. Tensor values are potentially very large buffers; // of scalars. Because of their potentially large size, avoiding; // serialization/deserialization overhead is preferred.; //; // The simple logger produces an output of the form (each line item on its line); // - header: a json object describing the data that will follow.; // - context: e.g. function name, for regalloc, or ""default"" for module-wide; // optimizations like the inliner. This is the context to which the subsequent; // data corresponds.; // - observation number.; // - tensor values - raw bytes of the tensors, in the order given in the header.; // The values are in succession, i.e. no separator is found between successive; // tensor values. At the end, there is a new line character.; // - [score] - this is optional, and is present if it was present in the header.; // Currently, for final rewards, we output ""0"" scores after each observation,; // except for the last one.; // <repeat>; // The file should be read as binary, but the reason we use newlines is mostly; // ease of debugging: the log can be opened in a text editor and, while tensor; // values are inscrutable, at least the sequence of data can be easily observed.; // Of course, the buffer of tensor values could contain '\n' bytes. A reader; // should use the header information to know how much data to read for the; // tensor values, and not use line information for that.; //; ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/Utils/TrainingLogger.h:427,depend,dependencies,427,interpreter/llvm-project/llvm/include/llvm/Analysis/Utils/TrainingLogger.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/Utils/TrainingLogger.h,1,['depend'],['dependencies']
Integrability,"//===- Transforms/IPO/SampleContextTracker.h --------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; /// \file; /// This file provides the interface for context-sensitive profile tracker used; /// by CSSPGO.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/SampleContextTracker.h:418,interface,interface,418,interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/SampleContextTracker.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/SampleContextTracker.h,1,['interface'],['interface']
Integrability,"//===- Transforms/IPO/SampleProfileProbe.h ----------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; /// \file; /// This file provides the interface for the pseudo probe implementation for; /// AutoFDO.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/SampleProfileProbe.h:406,interface,interface,406,interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/SampleProfileProbe.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/SampleProfileProbe.h,1,['interface'],['interface']
Integrability,"//===- Transforms/Instrumentation/CGProfile.h -------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; /// \file; /// This file provides the interface for LLVM's Call Graph Profile pass.; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Instrumentation/CGProfile.h:414,interface,interface,414,interpreter/llvm-project/llvm/include/llvm/Transforms/Instrumentation/CGProfile.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Instrumentation/CGProfile.h,1,['interface'],['interface']
Integrability,"//===- Transforms/Instrumentation/GCOVProfiler.h ----------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; /// \file; /// This file provides the interface for the GCOV style profiler pass.; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Instrumentation/GCOVProfiler.h:414,interface,interface,414,interpreter/llvm-project/llvm/include/llvm/Transforms/Instrumentation/GCOVProfiler.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Instrumentation/GCOVProfiler.h,1,['interface'],['interface']
Integrability,"//===- Transforms/Instrumentation/InstrProfiling.h --------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; /// \file; /// This file provides the interface for LLVM's PGO Instrumentation lowering; /// pass.; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Instrumentation/InstrProfiling.h:414,interface,interface,414,interpreter/llvm-project/llvm/include/llvm/Transforms/Instrumentation/InstrProfiling.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Instrumentation/InstrProfiling.h,1,['interface'],['interface']
Integrability,"//===- Transforms/Instrumentation/PGOInstrumentation.h ----------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; /// \file; /// This file provides the interface for IR based instrumentation passes (; /// (profile-gen, and profile-use).; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Instrumentation/PGOInstrumentation.h:418,interface,interface,418,interpreter/llvm-project/llvm/include/llvm/Transforms/Instrumentation/PGOInstrumentation.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Instrumentation/PGOInstrumentation.h,1,['interface'],['interface']
Integrability,"//===- Transforms/Utils/SampleProfileInference.h ----------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; /// \file; /// This file provides the interface for the profile inference algorithm, profi.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/SampleProfileInference.h:412,interface,interface,412,interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/SampleProfileInference.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/SampleProfileInference.h,1,['interface'],['interface']
Integrability,"//===- Type.h - C Language Family Type Representation -----------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; /// \file; /// C Language Family Type Representation; ///; /// This file defines the clang::Type interface and subclasses, used to; /// represent types for languages in the C family.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/Type.h:477,interface,interface,477,interpreter/llvm-project/clang/include/clang/AST/Type.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/Type.h,1,['interface'],['interface']
Integrability,"//===- TypeBasedAliasAnalysis.h - Type-Based Alias Analysis -----*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; /// \file; /// This is the interface for a metadata-based TBAA. See the source file for; /// details on the algorithm.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/TypeBasedAliasAnalysis.h:407,interface,interface,407,interpreter/llvm-project/llvm/include/llvm/Analysis/TypeBasedAliasAnalysis.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/TypeBasedAliasAnalysis.h,1,['interface'],['interface']
Integrability,"//===- TypeLoc.cpp - Type Source Info Wrapper -----------------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines the TypeLoc subclasses implementations.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/TypeLoc.cpp:38,Wrap,Wrapper,38,interpreter/llvm-project/clang/lib/AST/TypeLoc.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/TypeLoc.cpp,1,['Wrap'],['Wrapper']
Integrability,"//===- TypeLoc.h - Type Source Info Wrapper ---------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; /// \file; /// Defines the clang::TypeLoc interface and its subclasses.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/TypeLoc.h:36,Wrap,Wrapper,36,interpreter/llvm-project/clang/include/clang/AST/TypeLoc.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/TypeLoc.h,2,"['Wrap', 'interface']","['Wrapper', 'interface']"
Integrability,"//===- TypeSize.cpp - Wrapper around type sizes------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/TypeSize.cpp:22,Wrap,Wrapper,22,interpreter/llvm-project/llvm/lib/Support/TypeSize.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/TypeSize.cpp,1,['Wrap'],['Wrapper']
Integrability,"//===- TypeSize.h - Wrapper around type sizes -------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file provides a struct that can be used to query the size of IR types; // which may be scalable vectors. It provides convenience operators so that; // it can be used in much the same way as a single scalar value.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/TypeSize.h:20,Wrap,Wrapper,20,interpreter/llvm-project/llvm/include/llvm/Support/TypeSize.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/TypeSize.h,1,['Wrap'],['Wrapper']
Integrability,"//===- USRGeneration.cpp - Routines for USR generation --------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Index/USRGeneration.cpp:27,Rout,Routines,27,interpreter/llvm-project/clang/lib/Index/USRGeneration.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Index/USRGeneration.cpp,1,['Rout'],['Routines']
Integrability,"//===- USRGeneration.h - Routines for USR generation ------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Index/USRGeneration.h:25,Rout,Routines,25,interpreter/llvm-project/clang/include/clang/Index/USRGeneration.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Index/USRGeneration.h,1,['Rout'],['Routines']
Integrability,"//===- VNCoercion.h - Value Numbering Coercion Utilities --------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; /// \file / This file provides routines used by LLVM's value numbering passes to; /// perform various forms of value extraction from memory when the types are not; /// identical. For example, given; ///; /// store i32 8, i32 *%foo; /// %a = bitcast i32 *%foo to i16; /// %val = load i16, i16 *%a; ///; /// It possible to extract the value of the load of %a from the store to %foo.; /// These routines know how to tell whether they can do that (the analyze*; /// routines), and can also insert the necessary IR to do it (the get*; /// routines).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/VNCoercion.h:407,rout,routines,407,interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/VNCoercion.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/VNCoercion.h,4,['rout'],['routines']
Integrability,"//===- ValueMap.h - Safe map from Values to data ----------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines the ValueMap class. ValueMap maps Value* or any subclass; // to an arbitrary other type. It provides the DenseMap interface but updates; // itself to remain safe when keys are RAUWed or deleted. By default, when a; // key is RAUWed from V1 to V2, the old mapping V1->target is removed, and a new; // mapping V2->target is added. If V2 already existed, its old target is; // overwritten. When a key is deleted, its mapping is removed.; //; // You can override a ValueMap's Config parameter to control exactly what; // happens on RAUW and destruction and to get called back on each event. It's; // legal to call back into the ValueMap from a Config's callbacks. Config; // parameters should inherit from ValueMapConfig<KeyT> to get default; // implementations of all the methods ValueMap uses. See ValueMapConfig for; // documentation of the functions you can override.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/ValueMap.h:515,interface,interface,515,interpreter/llvm-project/llvm/include/llvm/IR/ValueMap.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/ValueMap.h,1,['interface'],['interface']
Integrability,"//===- ValueMapper.cpp - Interface shared by lib/Transforms/Utils ---------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines the MapValue function, which is shared by various parts of; // the lib/Transforms/Utils library.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/ValueMapper.cpp:25,Interface,Interface,25,interpreter/llvm-project/llvm/lib/Transforms/Utils/ValueMapper.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/ValueMapper.cpp,1,['Interface'],['Interface']
Integrability,"//===- ValueMapper.h - Remapping for constants and metadata -----*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines the MapValue interface which is used by various parts of; // the Transforms/Utils library to implement cloning and linking facilities.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/ValueMapper.h:414,interface,interface,414,interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/ValueMapper.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/ValueMapper.h,1,['interface'],['interface']
Integrability,"//===- ValueTracking.cpp - Walk computations to compute properties --------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file contains routines that help analyze properties that chains of; // computations have.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/ValueTracking.cpp:402,rout,routines,402,interpreter/llvm-project/llvm/lib/Analysis/ValueTracking.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/ValueTracking.cpp,1,['rout'],['routines']
Integrability,"//===- VectorBuilder.cpp - Builder for VP Intrinsics ----------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements the VectorBuilder class, which is used as a convenient; // way to create VP intrinsics as if they were LLVM instructions with a; // consistent and simplified interface.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/VectorBuilder.cpp:562,interface,interface,562,interpreter/llvm-project/llvm/lib/IR/VectorBuilder.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/VectorBuilder.cpp,1,['interface'],['interface']
Integrability,"//===- Verifier.h - LLVM IR Verifier ----------------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines the function verifier interface, that can be used for; // validation checking of input to the system, and for checking that; // transformations haven't done something bad.; //; // Note that this does not provide full 'java style' security and verifications,; // instead it just tries to ensure that code is well formed.; //; // To see what specifically is checked, look at the top of Verifier.cpp; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/Verifier.h:423,interface,interface,423,interpreter/llvm-project/llvm/include/llvm/IR/Verifier.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/Verifier.h,1,['interface'],['interface']
Integrability,"//===- VerifyDiagnosticConsumer.cpp - Verifying Diagnostic Client ---------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This is a concrete diagnostic client, which buffers the diagnostic messages.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/VerifyDiagnosticConsumer.cpp:450,message,messages,450,interpreter/llvm-project/clang/lib/Frontend/VerifyDiagnosticConsumer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/VerifyDiagnosticConsumer.cpp,1,['message'],['messages']
Integrability,"//===- VirtualFileSystem.cpp - Virtual File System Layer ------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements the VirtualFileSystem interface.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/VirtualFileSystem.cpp:426,interface,interface,426,interpreter/llvm-project/llvm/lib/Support/VirtualFileSystem.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/VirtualFileSystem.cpp,1,['interface'],['interface']
Integrability,"//===- VirtualFileSystem.h - Virtual File System Layer ----------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; /// \file; /// Defines the virtual file system interface vfs::FileSystem.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/VirtualFileSystem.h:427,interface,interface,427,interpreter/llvm-project/llvm/include/llvm/Support/VirtualFileSystem.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/VirtualFileSystem.h,1,['interface'],['interface']
Integrability,"//===- Wasm.h - Wasm object file implementation -----------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file declares the WasmObjectFile class, which implements the ObjectFile; // interface for Wasm files.; //; // See: https://github.com/WebAssembly/design/blob/main/BinaryEncoding.md; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Object/Wasm.h:464,interface,interface,464,interpreter/llvm-project/llvm/include/llvm/Object/Wasm.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Object/Wasm.h,1,['interface'],['interface']
Integrability,"//===- WasmAsmParser.cpp - Wasm Assembly Parser -----------------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; // --; //; // Note, this is for wasm, the binary format (analogous to ELF), not wasm,; // the instruction set (analogous to x86), for which parsing code lives in; // WebAssemblyAsmParser.; //; // This file contains processing for generic directives implemented using; // MCTargetStreamer, the ones that depend on WebAssemblyTargetStreamer are in; // WebAssemblyAsmParser.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MC/MCParser/WasmAsmParser.cpp:599,depend,depend,599,interpreter/llvm-project/llvm/lib/MC/MCParser/WasmAsmParser.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MC/MCParser/WasmAsmParser.cpp,1,['depend'],['depend']
Integrability,"//===- WebAssemblyDisassemblerEmitter.h - Disassembler tables ---*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file is part of the WebAssembly Disassembler Emitter.; // It contains the interface of the disassembler tables.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/WebAssemblyDisassemblerEmitter.h:462,interface,interface,462,interpreter/llvm-project/llvm/utils/TableGen/WebAssemblyDisassemblerEmitter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/WebAssemblyDisassemblerEmitter.h,1,['interface'],['interface']
Integrability,"//===- WindowsSupport.h - Common Windows Include File -----------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines things specific to Windows implementations. In addition to; // providing some helpers for working with win32 APIs, this header wraps; // <windows.h> with some portability macros. Always include WindowsSupport.h; // instead of including <windows.h> directly.; //; //===----------------------------------------------------------------------===//; //===----------------------------------------------------------------------===//; //=== WARNING: Implementation here must contain only generic Win32 code that; //=== is guaranteed to work on *all* Win32 variants.; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/Windows/WindowsSupport.h:528,wrap,wraps,528,interpreter/llvm-project/llvm/include/llvm/Support/Windows/WindowsSupport.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/Windows/WindowsSupport.h,1,['wrap'],['wraps']
Integrability,"//===- WrapperFunctionUtils.h - Utilities for wrapper functions -*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // A buffer for serialized results.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/Orc/Shared/WrapperFunctionUtils.h:7,Wrap,WrapperFunctionUtils,7,interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/Orc/Shared/WrapperFunctionUtils.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/Orc/Shared/WrapperFunctionUtils.h,2,"['Wrap', 'wrap']","['WrapperFunctionUtils', 'wrapper']"
Integrability,"//===- X86DisassemblerTables.h - Disassembler tables ------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file is part of the X86 Disassembler Emitter.; // It contains the interface of the disassembler tables.; // Documentation for the disassembler emitter in general can be found in; // X86DisassemblerEmitter.h.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/X86DisassemblerTables.h:454,interface,interface,454,interpreter/llvm-project/llvm/utils/TableGen/X86DisassemblerTables.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/X86DisassemblerTables.h,1,['interface'],['interface']
Integrability,"//===- X86RecognizableInstr.h - Disassembler instruction spec ----*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file is part of the X86 Disassembler Emitter.; // It contains the interface of a single recognizable instruction.; // Documentation for the disassembler emitter in general can be found in; // X86DisassemblerEmitter.h.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/X86RecognizableInstr.h:455,interface,interface,455,interpreter/llvm-project/llvm/utils/TableGen/X86RecognizableInstr.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/X86RecognizableInstr.h,1,['interface'],['interface']
Integrability,"//===- clang/Basic/DirectoryEntry.h - Directory references ------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; ///; /// \file; /// Defines interfaces for clang::DirectoryEntry and clang::DirectoryEntryRef.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/DirectoryEntry.h:404,interface,interfaces,404,interpreter/llvm-project/clang/include/clang/Basic/DirectoryEntry.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/DirectoryEntry.h,1,['interface'],['interfaces']
Integrability,"//===- clang/Basic/FileEntry.h - File references ----------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; ///; /// \file; /// Defines interfaces for clang::FileEntry and clang::FileEntryRef.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/FileEntry.h:404,interface,interfaces,404,interpreter/llvm-project/clang/include/clang/Basic/FileEntry.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/FileEntry.h,1,['interface'],['interfaces']
Integrability,"//===- clang/Lex/DependencyDirectivesScanner.h ---------------------*- C++ -*-//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; ///; /// \file; /// This is the interface for scanning header and source files to get the; /// minimum necessary preprocessor directives for evaluating includes. It; /// reduces the source down to #define, #include, #import, @import, and any; /// conditional preprocessor logic that contains one of those.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Lex/DependencyDirectivesScanner.h:17,Depend,DependencyDirectivesScanner,17,interpreter/llvm-project/clang/include/clang/Lex/DependencyDirectivesScanner.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Lex/DependencyDirectivesScanner.h,2,"['Depend', 'interface']","['DependencyDirectivesScanner', 'interface']"
Integrability,"//===- iterator_range.h - A range adaptor for iterators ---------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; /// \file; /// This provides a very simple, boring adaptor for a begin and end iterator; /// into a range type. This should be used to build range views that work well; /// with range based for loops and range based constructors.; ///; /// Note that code here follows more standards-based coding conventions as it; /// is mirroring proposed interfaces for standardization.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/iterator_range.h:717,interface,interfaces,717,interpreter/llvm-project/llvm/include/llvm/ADT/iterator_range.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/iterator_range.h,1,['interface'],['interfaces']
Integrability,"//===- lib/CodeGen/GlobalISel/LegacyLegalizerInfo.cpp - Legalizer ---------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // Implement an interface to specify and query how an illegal operation on a; // given type should be expanded.; //; // Issues to be resolved:; // + Make it fast.; // + Support weird types like i3, <7 x i3>, ...; // + Operations with more than one type (ICMP, CMPXCHG, intrinsics, ...); //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/GlobalISel/LegacyLegalizerInfo.cpp:396,interface,interface,396,interpreter/llvm-project/llvm/lib/CodeGen/GlobalISel/LegacyLegalizerInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/GlobalISel/LegacyLegalizerInfo.cpp,1,['interface'],['interface']
Integrability,"//===- lib/CodeGen/GlobalISel/LegalizerInfo.cpp - Legalizer ---------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // Implement an interface to specify and query how an illegal operation on a; // given type should be expanded.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/GlobalISel/LegalizerInfo.cpp:396,interface,interface,396,interpreter/llvm-project/llvm/lib/CodeGen/GlobalISel/LegalizerInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/GlobalISel/LegalizerInfo.cpp,1,['interface'],['interface']
Integrability,"//===- lib/CodeGen/MachineTraceMetrics.h - Super-scalar metrics -*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines the interface for the MachineTraceMetrics analysis pass; // that estimates CPU resource usage and critical data dependency paths through; // preferred traces. This is useful for super-scalar CPUs where execution speed; // can be limited both by data dependencies and by limited execution resources.; //; // Out-of-order CPUs will often be executing instructions from multiple basic; // blocks at the same time. This makes it difficult to estimate the resource; // usage accurately in a single basic block. Resources can be estimated better; // by looking at a trace through the current basic block.; //; // For every block, the MachineTraceMetrics pass will pick a preferred trace; // that passes through the block. The trace is chosen based on loop structure,; // branch probabilities, and resource usage. The intention is to pick likely; // traces that would be the most affected by code transformations.; //; // It is expensive to compute a full arbitrary trace for every block, so to; // save some computations, traces are chosen to be convergent. This means that; // if the traces through basic blocks A and B ever cross when moving away from; // A and B, they never diverge again. This applies in both directions - If the; // traces meet above A and B, they won't diverge when going further back.; //; // Traces tend to align with loops. The trace through a block in an inner loop; // will begin at the loop entry block and end at a back edge. If there are; // nested loops, the trace may begin and end at those instead.; //; // For each trace, we compute the critical path length, which is the",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineTraceMetrics.h:405,interface,interface,405,interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineTraceMetrics.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineTraceMetrics.h,3,"['depend', 'interface']","['dependencies', 'dependency', 'interface']"
Integrability,"//===- lib/MC/MCObjectStreamer.cpp - Object File MCStreamer Interface -----===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MC/MCObjectStreamer.cpp:60,Interface,Interface,60,interpreter/llvm-project/llvm/lib/MC/MCObjectStreamer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MC/MCObjectStreamer.cpp,1,['Interface'],['Interface']
Integrability,"//===- lli.cpp - LLVM Interpreter / Dynamic compiler ----------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This utility provides a simple wrapper around the LLVM Execution Engines,; // which allow the direct execution of LLVM programs through a Just-In-Time; // compiler, or through an interpreter if no JIT is available for this platform.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/lli/lli.cpp:414,wrap,wrapper,414,interpreter/llvm-project/llvm/tools/lli/lli.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/lli/lli.cpp,1,['wrap'],['wrapper']
Integrability,"//===- llvm-jitlink.cpp -- Command line interface/tester for llvm-jitlink -===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This utility provides a simple command line interface to the llvm jitlink; // library, which makes relocatable object files executable in memory. Its; // primary function is as a testing utility for the jitlink library.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-jitlink/llvm-jitlink.cpp:40,interface,interface,40,interpreter/llvm-project/llvm/tools/llvm-jitlink/llvm-jitlink.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-jitlink/llvm-jitlink.cpp,2,['interface'],['interface']
Integrability,"//===- llvm-lib/LibDriver.h - lib.exe-compatible driver ---------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // Defines an interface to a lib.exe-compatible driver that also understands; // bitcode files. Used by llvm-lib and lld-link /lib.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ToolDrivers/llvm-lib/LibDriver.h:394,interface,interface,394,interpreter/llvm-project/llvm/include/llvm/ToolDrivers/llvm-lib/LibDriver.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ToolDrivers/llvm-lib/LibDriver.h,1,['interface'],['interface']
Integrability,"//===- llvm-reduce.cpp - The LLVM Delta Reduction utility -----------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This program tries to reduce an IR test case for a given interesting-ness; // test. It runs multiple delta debugging passes in order to minimize the input; // file. It's worth noting that this is a part of the bugpoint redesign; // proposal, and thus a *temporary* tool that will eventually be integrated; // into the bugpoint tool itself.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-reduce/llvm-reduce.cpp:677,integrat,integrated,677,interpreter/llvm-project/llvm/tools/llvm-reduce/llvm-reduce.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-reduce/llvm-reduce.cpp,1,['integrat'],['integrated']
Integrability,"//===- llvm/ADT/ADL.h - Argument dependent lookup utilities -----*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/ADL.h:33,depend,dependent,33,interpreter/llvm-project/llvm/include/llvm/ADT/ADL.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/ADL.h,1,['depend'],['dependent']
Integrability,"//===- llvm/ADT/DirectedGraph.h - Directed Graph ----------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; ///; /// \file; /// This file defines the interface and a base class implementation for a; /// directed graph.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/DirectedGraph.h:418,interface,interface,418,interpreter/llvm-project/llvm/include/llvm/ADT/DirectedGraph.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/DirectedGraph.h,1,['interface'],['interface']
Integrability,"//===- llvm/ADT/MapVector.h - Map w/ deterministic value order --*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; ///; /// \file; /// This file implements a map that provides insertion order iteration. The; /// interface is purposefully minimal. The key is assumed to be cheap to copy; /// and 2 copies are kept, one for indexing in a DenseMap, one for iteration in; /// a SmallVector.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/MapVector.h:473,interface,interface,473,interpreter/llvm-project/llvm/include/llvm/ADT/MapVector.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/MapVector.h,1,['interface'],['interface']
Integrability,"//===- llvm/ADT/SetVector.h - Set with insert order iteration ---*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; ///; /// \file; /// This file implements a set that has insertion order iteration; /// characteristics. This is useful for keeping a set of things that need to be; /// visited later but in a deterministic order (insertion order). The interface; /// is purposefully minimal.; ///; /// This file defines SetVector and SmallSetVector, which performs no; /// allocations if the SetVector has less than a certain number of elements.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/SetVector.h:610,interface,interface,610,interpreter/llvm-project/llvm/include/llvm/ADT/SetVector.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/SetVector.h,1,['interface'],['interface']
Integrability,"//===- llvm/Analysis/AliasAnalysis.h - Alias Analysis Interface -*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines the generic AliasAnalysis interface, which is used as the; // common interface used by all clients of alias analysis information, and; // implemented by all alias analysis implementations. Mod/Ref information is; // also captured by this interface.; //; // Implementations of this interface must implement the various virtual methods,; // which automatically provides functionality for the entire suite of client; // APIs.; //; // This API identifies memory regions with the MemoryLocation class. The pointer; // component specifies the base memory address of the region. The Size specifies; // the maximum size (in address units) of the memory region, or; // MemoryLocation::UnknownSize if the size is not known. The TBAA tag; // identifies the ""type"" of the memory reference; see the; // TypeBasedAliasAnalysis class for details.; //; // Some non-obvious details include:; // - Pointers that point to two completely different objects in memory never; // alias, regardless of the value of the Size component.; // - NoAlias doesn't imply inequal pointers. The most obvious example of this; // is two pointers to constant memory. Even if they are equal, constant; // memory is never stored to, so there will never be any dependencies.; // In this and other situations, the pointers may be both NoAlias and; // MustAlias at the same time. The current API can only return one result,; // though this is rarely a problem in practice.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h:54,Interface,Interface,54,interpreter/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h,6,"['Interface', 'depend', 'interface']","['Interface', 'dependencies', 'interface']"
Integrability,"//===- llvm/Analysis/AliasSetTracker.h - Build Alias Sets -------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines two classes: AliasSetTracker and AliasSet. These interfaces; // are used to classify a collection of memory locations into a maximal number; // of disjoint sets. Each AliasSet object constructed by the AliasSetTracker; // object refers to memory disjoint from the other sets.; //; // An AliasSetTracker can only be used on immutable IR.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/AliasSetTracker.h:450,interface,interfaces,450,interpreter/llvm-project/llvm/include/llvm/Analysis/AliasSetTracker.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/AliasSetTracker.h,1,['interface'],['interfaces']
Integrability,"//===- llvm/Analysis/DDG.h --------------------------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines the Data-Dependence Graph (DDG).; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/DDG.h:410,Depend,Dependence,410,interpreter/llvm-project/llvm/include/llvm/Analysis/DDG.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/DDG.h,1,['Depend'],['Dependence']
Integrability,"//===- llvm/Analysis/DDGPrinter.h -------------------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //===----------------------------------------------------------------------===//; //; // This file defines the DOT printer for the Data-Dependence Graph (DDG).; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/DDGPrinter.h:512,Depend,Dependence,512,interpreter/llvm-project/llvm/include/llvm/Analysis/DDGPrinter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/DDGPrinter.h,1,['Depend'],['Dependence']
Integrability,"//===- llvm/Analysis/DependenceGraphBuilder.h -------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines a builder interface that can be used to populate dependence; // graphs such as DDG and PDG.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/DependenceGraphBuilder.h:21,Depend,DependenceGraphBuilder,21,interpreter/llvm-project/llvm/include/llvm/Analysis/DependenceGraphBuilder.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/DependenceGraphBuilder.h,3,"['Depend', 'depend', 'interface']","['DependenceGraphBuilder', 'dependence', 'interface']"
Integrability,"//===- llvm/Analysis/LoopAccessAnalysis.h -----------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines the interface for the loop memory dependence framework that; // was originally developed for the Loop Vectorizer.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/LoopAccessAnalysis.h:405,interface,interface,405,interpreter/llvm-project/llvm/include/llvm/Analysis/LoopAccessAnalysis.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/LoopAccessAnalysis.h,2,"['depend', 'interface']","['dependence', 'interface']"
Integrability,"//===- llvm/Analysis/LoopCacheAnalysis.h ------------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; ///; /// \file; /// This file defines the interface for the loop cache analysis.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/LoopCacheAnalysis.h:418,interface,interface,418,interpreter/llvm-project/llvm/include/llvm/Analysis/LoopCacheAnalysis.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/LoopCacheAnalysis.h,1,['interface'],['interface']
Integrability,"//===- llvm/Analysis/LoopNestAnalysis.h -------------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; ///; /// \file; /// This file defines the interface for the loop nest analysis.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/LoopNestAnalysis.h:418,interface,interface,418,interpreter/llvm-project/llvm/include/llvm/Analysis/LoopNestAnalysis.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/LoopNestAnalysis.h,1,['interface'],['interface']
Integrability,"//===- llvm/Analysis/ValueTracking.h - Walk computations --------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file contains routines that help analyze properties that chains of; // computations have.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/ValueTracking.h:402,rout,routines,402,interpreter/llvm-project/llvm/include/llvm/Analysis/ValueTracking.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/ValueTracking.h,1,['rout'],['routines']
Integrability,"//===- llvm/BinaryFormat/ELF.h - ELF constants and structures ---*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This header contains common, non-processor-specific data structures and; // constants for the ELF file format.; //; // The details of the ELF32 bits in this file are largely based on the Tool; // Interface Standard (TIS) Executable and Linking Format (ELF) Specification; // Version 1.2, May 1995. The ELF64 stuff is based on ELF-64 Object File Format; // Version 1.5, Draft 2, May 1998 as well as OpenBSD header files.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/BinaryFormat/ELF.h:579,Interface,Interface,579,interpreter/llvm-project/llvm/include/llvm/BinaryFormat/ELF.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/BinaryFormat/ELF.h,1,['Interface'],['Interface']
Integrability,"//===- llvm/Bitcode/BitcodeAnalyzer.h - Bitcode analyzer --------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This header defines interfaces to analyze LLVM bitcode files/streams.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Bitcode/BitcodeAnalyzer.h:403,interface,interfaces,403,interpreter/llvm-project/llvm/include/llvm/Bitcode/BitcodeAnalyzer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Bitcode/BitcodeAnalyzer.h,1,['interface'],['interfaces']
Integrability,"//===- llvm/Bitcode/BitcodeConvenience.h - Convenience Wrappers -*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; ///; /// \file Convenience wrappers for the LLVM bitcode format and bitstream APIs.; ///; /// This allows you to use a sort of DSL to declare and use bitcode; /// abbreviations and records. Example:; ///; /// \code; /// using Metadata = BCRecordLayout<; /// METADATA_ID, // ID; /// BCFixed<16>, // Module format major version; /// BCFixed<16>, // Module format minor version; /// BCBlob // misc. version information; /// >;; /// Metadata metadata(Out);; /// metadata.emit(ScratchRecord, VERSION_MAJOR, VERSION_MINOR, Data);; /// \endcode; ///; /// For details on the bitcode format, see; /// http://llvm.org/docs/BitCodeFormat.html; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Bitcode/BitcodeConvenience.h:55,Wrap,Wrappers,55,interpreter/llvm-project/llvm/include/llvm/Bitcode/BitcodeConvenience.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Bitcode/BitcodeConvenience.h,2,"['Wrap', 'wrap']","['Wrappers', 'wrappers']"
Integrability,"//===- llvm/Bitcode/BitcodeReader.h - Bitcode reader ------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This header defines interfaces to read LLVM bitcode files/streams.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Bitcode/BitcodeReader.h:403,interface,interfaces,403,interpreter/llvm-project/llvm/include/llvm/Bitcode/BitcodeReader.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Bitcode/BitcodeReader.h,1,['interface'],['interfaces']
Integrability,"//===- llvm/Bitcode/BitcodeWriter.h - Bitcode writers -----------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This header defines interfaces to write LLVM bitcode files/streams.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Bitcode/BitcodeWriter.h:403,interface,interfaces,403,interpreter/llvm-project/llvm/include/llvm/Bitcode/BitcodeWriter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Bitcode/BitcodeWriter.h,1,['interface'],['interfaces']
Integrability,"//===- llvm/CodeGen/AntiDepBreaker.h - Anti-Dependence Breaking -*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements the AntiDepBreaker class, which implements; // anti-dependence breaking heuristics for post-register-allocation scheduling.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/AntiDepBreaker.h:44,Depend,Dependence,44,interpreter/llvm-project/llvm/include/llvm/CodeGen/AntiDepBreaker.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/AntiDepBreaker.h,2,"['Depend', 'depend']","['Dependence', 'dependence']"
Integrability,"//===- llvm/CodeGen/CriticalAntiDepBreaker.h - Anti-Dep Support -*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements the CriticalAntiDepBreaker class, which; // implements register anti-dependence breaking along a blocks; // critical path during post-RA scheduler.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/CriticalAntiDepBreaker.h:473,depend,dependence,473,interpreter/llvm-project/llvm/lib/CodeGen/CriticalAntiDepBreaker.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/CriticalAntiDepBreaker.h,1,['depend'],['dependence']
Integrability,"//===- llvm/CodeGen/GlobalISel/GenericMachineInstrs.h -----------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; /// \file; /// Declares convenience wrapper classes for interpreting MachineInstr instances; /// as specific generic operations.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/GlobalISel/GenericMachineInstrs.h:412,wrap,wrapper,412,interpreter/llvm-project/llvm/include/llvm/CodeGen/GlobalISel/GenericMachineInstrs.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/GlobalISel/GenericMachineInstrs.h,1,['wrap'],['wrapper']
Integrability,"//===- llvm/CodeGen/GlobalISel/LegacyLegalizerInfo.h ------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; /// \file; /// Interface for Targets to specify which operations they can successfully; /// select and how the others should be expanded most efficiently.; /// This implementation has been deprecated for a long time but it still in use; /// in a few places.; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/GlobalISel/LegacyLegalizerInfo.h:391,Interface,Interface,391,interpreter/llvm-project/llvm/include/llvm/CodeGen/GlobalISel/LegacyLegalizerInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/GlobalISel/LegacyLegalizerInfo.h,1,['Interface'],['Interface']
Integrability,"//===- llvm/CodeGen/GlobalISel/LegalizerInfo.h ------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; /// \file; /// Interface for Targets to specify which operations they can successfully; /// select and how the others should be expanded most efficiently.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/GlobalISel/LegalizerInfo.h:391,Interface,Interface,391,interpreter/llvm-project/llvm/include/llvm/CodeGen/GlobalISel/LegalizerInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/GlobalISel/LegalizerInfo.h,1,['Interface'],['Interface']
Integrability,"//===- llvm/CodeGen/MachineInstr.h - MachineInstr class ---------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file contains the declaration of the MachineInstr class, which is the; // basic representation for all target dependent machine instructions used by; // the back end.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineInstr.h:498,depend,dependent,498,interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineInstr.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineInstr.h,1,['depend'],['dependent']
Integrability,"//===- llvm/CodeGen/MachinePostDominators.h ----------------------*- C++ -*-==//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file exposes interfaces to post dominance information for; // target-specific code.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachinePostDominators.h:401,interface,interfaces,401,interpreter/llvm-project/llvm/include/llvm/CodeGen/MachinePostDominators.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachinePostDominators.h,1,['interface'],['interfaces']
Integrability,"//===- llvm/CodeGen/PBQPRAConstraint.h --------------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines the PBQPBuilder interface, for classes which build PBQP; // instances to represent register allocation problems, and the RegAllocPBQP; // interface.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/PBQPRAConstraint.h:417,interface,interface,417,interpreter/llvm-project/llvm/include/llvm/CodeGen/PBQPRAConstraint.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/PBQPRAConstraint.h,2,['interface'],['interface']
Integrability,"//===- llvm/CodeGen/TargetSchedule.h - Sched Machine Model ------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines a wrapper around MCSchedModel that allows the interface to; // benefit from information currently only available in TargetInstrInfo.; // Ideally, the scheduling interface would be fully defined in the MC layer.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetSchedule.h:403,wrap,wrapper,403,interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetSchedule.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetSchedule.h,3,"['interface', 'wrap']","['interface', 'wrapper']"
Integrability,"//===- llvm/CodeGen/TileShapeInfo.h - ---------------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; /// \file Shape utility for AMX.; /// AMX hardware requires to config the shape of tile data register before use.; /// The 2D shape includes row and column. In AMX intrinsics interface the shape; /// is passed as 1st and 2nd parameter and they are lowered as the 1st and 2nd; /// machine operand of AMX pseudo instructions. ShapeT class is to facilitate; /// tile config and register allocator. The row and column are machine operand; /// of AMX pseudo instructions.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/TileShapeInfo.h:555,interface,interface,555,interpreter/llvm-project/llvm/include/llvm/CodeGen/TileShapeInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/TileShapeInfo.h,1,['interface'],['interface']
Integrability,"//===- llvm/CodeGen/VirtRegMap.cpp - Virtual Register Map -----------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements the VirtRegMap class.; //; // It also contains implementations of the Spiller interface, which, given a; // virtual register map and a machine function, eliminates all virtual; // references by replacing them with physical register references - adding spill; // code as necessary.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/VirtRegMap.cpp:482,interface,interface,482,interpreter/llvm-project/llvm/lib/CodeGen/VirtRegMap.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/VirtRegMap.cpp,1,['interface'],['interface']
Integrability,"//===- llvm/IR/DiagnosticPrinter.h - Diagnostic Printer ---------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file declares the main interface for printer backend diagnostic.; //; // Clients of the backend diagnostics should overload this interface based; // on their needs.; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/DiagnosticPrinter.h:411,interface,interface,411,interpreter/llvm-project/llvm/include/llvm/IR/DiagnosticPrinter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/DiagnosticPrinter.h,2,['interface'],['interface']
Integrability,"//===- llvm/IR/OptBisect.h - LLVM Bisect support ----------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; ///; /// \file; /// This file declares the interface for bisecting optimizations.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/OptBisect.h:419,interface,interface,419,interpreter/llvm-project/llvm/include/llvm/IR/OptBisect.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/OptBisect.h,1,['interface'],['interface']
Integrability,"//===- llvm/IR/Statepoint.h - gc.statepoint utilities -----------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file contains utility functions and a wrapper class analogous to; // CallBase for accessing the fields of gc.statepoint, gc.relocate,; // gc.result intrinsics; and some general utilities helpful when dealing with; // gc.statepoint.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/Statepoint.h:426,wrap,wrapper,426,interpreter/llvm-project/llvm/include/llvm/IR/Statepoint.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/Statepoint.h,1,['wrap'],['wrapper']
Integrability,"//===- llvm/IRBuilder.h - Builder for LLVM Instructions ---------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines the IRBuilder class, which is used as a convenient way; // to create LLVM instructions with a consistent and simplified interface.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/IRBuilder.h:521,interface,interface,521,interpreter/llvm-project/llvm/include/llvm/IR/IRBuilder.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/IRBuilder.h,1,['interface'],['interface']
Integrability,"//===- llvm/InitializePasses.h - Initialize All Passes ----------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file contains the declarations for the pass initialization routines; // for the entire LLVM project.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/InitializePasses.h:447,rout,routines,447,interpreter/llvm-project/llvm/include/llvm/InitializePasses.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/InitializePasses.h,1,['rout'],['routines']
Integrability,"//===- llvm/MC/MCAsmLexer.h - Abstract Asm Lexer Interface ------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCParser/MCAsmLexer.h:49,Interface,Interface,49,interpreter/llvm-project/llvm/include/llvm/MC/MCParser/MCAsmLexer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCParser/MCAsmLexer.h,1,['Interface'],['Interface']
Integrability,"//===- llvm/MC/MCAsmParser.h - Abstract Asm Parser Interface ----*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCParser/MCAsmParser.h:51,Interface,Interface,51,interpreter/llvm-project/llvm/include/llvm/MC/MCParser/MCAsmParser.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCParser/MCAsmParser.h,1,['Interface'],['Interface']
Integrability,"//===- llvm/MC/MCDisassembler.h - Disassembler interface --------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCDisassembler/MCDisassembler.h:47,interface,interface,47,interpreter/llvm-project/llvm/include/llvm/MC/MCDisassembler/MCDisassembler.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCDisassembler/MCDisassembler.h,1,['interface'],['interface']
Integrability,"//===- llvm/MC/MCObjectWriter.h - Object File Writer Interface --*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCObjectWriter.h:53,Interface,Interface,53,interpreter/llvm-project/llvm/include/llvm/MC/MCObjectWriter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCObjectWriter.h,1,['Interface'],['Interface']
Integrability,"//===- llvm/Pass.h - Base class for Passes ----------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines a base class that indicates that a specified class is a; // transformation pass implementation.; //; // Passes are designed this way so that it is possible to run passes in a cache; // and organizationally optimal order without having to specify it at the front; // end. This allows arbitrary passes to be strung together and have them; // executed as efficiently as possible.; //; // Passes should extend one of the classes below, depending on the guarantees; // that it can make about what will be modified as it is run. For example, most; // global optimizations should derive from FunctionPass, because they do not add; // or delete functions, they operate on the internals of the function.; //; // Note that this file #includes PassSupport.h and PassAnalysisSupport.h (at the; // bottom), so the APIs exposed by these files are also automatically available; // to all users of this file.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Pass.h:833,depend,depending,833,interpreter/llvm-project/llvm/include/llvm/Pass.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Pass.h,1,['depend'],['depending']
Integrability,"//===- llvm/PassRegistry.h - Pass Information Registry ----------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines PassRegistry, a class that is used in the initialization; // and registration of passes. At application startup, passes are registered; // with the PassRegistry, which is later provided to the PassManager for; // dependency resolution and similar tasks.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/PassRegistry.h:614,depend,dependency,614,interpreter/llvm-project/llvm/include/llvm/PassRegistry.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/PassRegistry.h,1,['depend'],['dependency']
Integrability,"//===- llvm/Remarks/RemarkStreamer.h ----------------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file declares the main interface for streaming remarks.; //; // This is used to stream any llvm::remarks::Remark to an open file taking; // advantage of all the serialization capabilities developed for remarks (e.g.; // metadata in a section, bitstream format, etc.).; //; // Typically, a specialized remark emitter should hold a reference to the main; // remark streamer set up in the LLVMContext, and should convert specialized; // diagnostics to llvm::remarks::Remark objects as they get emitted.; //; // Specialized remark emitters can be components like:; // * Remarks from LLVM (M)IR passes; // * Remarks from the frontend; // * Remarks from an intermediate IR; //; // This allows for composition between specialized remark emitters throughout; // the compilation pipeline, that end up in the same file, using the same format; // and serialization techniques.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Remarks/RemarkStreamer.h:411,interface,interface,411,interpreter/llvm-project/llvm/include/llvm/Remarks/RemarkStreamer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Remarks/RemarkStreamer.h,1,['interface'],['interface']
Integrability,"//===- llvm/Support/CBindingWrapping.h - C Interface Wrapping ---*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file declares the wrapping macros for the C interface.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/CBindingWrapping.h:43,Interface,Interface,43,interpreter/llvm-project/llvm/include/llvm/Support/CBindingWrapping.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/CBindingWrapping.h,4,"['Interface', 'Wrap', 'interface', 'wrap']","['Interface', 'Wrapping', 'interface', 'wrapping']"
Integrability,"//===- llvm/Support/CommandLine.h - Command line handler --------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This class implements a command line argument processor that is useful when; // creating a tool. It provides a simple, minimalistic interface that is easily; // extensible and supports nonlocal (library) command line options.; //; // Note that rather than trying to figure out what this code does, you should; // read the library documentation located in docs/CommandLine.html or looks at; // the many example usages in tools/*/*.cpp; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/CommandLine.h:515,interface,interface,515,interpreter/llvm-project/llvm/include/llvm/Support/CommandLine.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/CommandLine.h,1,['interface'],['interface']
Integrability,"//===- llvm/Support/Debug.h - Easy way to add debug output ------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements a handy way of adding debugging information to your; // code, without it being enabled all of the time, and without having to add; // command line options to enable it.; //; // In particular, just wrap your code with the LLVM_DEBUG() macro, and it will; // be enabled automatically if you specify '-debug' on the command-line.; // LLVM_DEBUG() requires the DEBUG_TYPE macro to be defined. Set it to ""foo""; // specify that your debug code belongs to class ""foo"". Be careful that you only; // do this after including Debug.h and not around any #include of headers.; // Headers should define and undef the macro acround the code that needs to use; // the LLVM_DEBUG() macro. Then, on the command line, you can specify; // '-debug-only=foo' to enable JUST the debug information for the foo class.; //; // When compiling without assertions, the -debug-* options and all code in; // LLVM_DEBUG() statements disappears, so it does not affect the runtime of the; // code.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/Debug.h:601,wrap,wrap,601,interpreter/llvm-project/llvm/include/llvm/Support/Debug.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/Debug.h,1,['wrap'],['wrap']
Integrability,"//===- llvm/Support/GraphWriter.h - Write graph to a .dot file --*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines a simple interface that can be used to print out generic; // LLVM graphs to "".dot"" files. ""dot"" is a tool that is part of the AT&T; // graphviz package (http://www.research.att.com/sw/tools/graphviz/) which can; // be used to turn the files output by this interface into a variety of; // different graphics formats.; //; // Graphs do not need to implement any interface past what is already required; // by the GraphTraits template, but they can choose to implement specializations; // of the DOTGraphTraits template if they want to customize the graphs output in; // any way.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/GraphWriter.h:410,interface,interface,410,interpreter/llvm-project/llvm/include/llvm/Support/GraphWriter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/GraphWriter.h,3,['interface'],['interface']
Integrability,"//===- llvm/Support/HashBuilder.h - Convenient hashing interface-*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements an interface allowing to conveniently build hashes of; // various data types, without relying on the underlying hasher type to know; // about hashed data types.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/HashBuilder.h:55,interface,interface,55,interpreter/llvm-project/llvm/include/llvm/Support/HashBuilder.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/HashBuilder.h,2,['interface'],['interface']
Integrability,"//===- llvm/Support/Process.h -----------------------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; /// \file; ///; /// Provides a library for accessing information about this process and other; /// processes on the operating system. Also provides means of spawning; /// subprocess for commands. The design of this library is modeled after the; /// proposed design of the Boost.Process library, and is design specifically to; /// follow the style of standard libraries and potentially become a proposal; /// for a standard library.; ///; /// This file declares the llvm::sys::Process class which contains a collection; /// of legacy static interfaces for extracting various information about the; /// current process. The goal is to migrate users of this API over to the new; /// interfaces.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/Process.h:916,interface,interfaces,916,interpreter/llvm-project/llvm/include/llvm/Support/Process.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/Process.h,2,['interface'],['interfaces']
Integrability,"//===- llvm/Support/TimeProfiler.h - Hierarchical Time Profiler -*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This provides lightweight and dependency-free machinery to trace execution; // time around arbitrary code. Two API flavors are available.; //; // The primary API uses a RAII object to trigger tracing:; //; // \code; // {; // TimeTraceScope scope(""my_event_name"");; // ...my code...; // }; // \endcode; //; // If the code to be profiled does not have a natural lexical scope then; // it is also possible to start and end events with respect to an implicit; // per-thread stack of profiling entries:; //; // \code; // timeTraceProfilerBegin(""my_event_name"");; // ...my code...; // timeTraceProfilerEnd(); // must be called on all control flow paths; // \endcode; //; // Time profiling entries can be given an arbitrary name and, optionally,; // an arbitrary 'detail' string. The resulting trace will include 'Total'; // entries summing the time spent for each name. Thus, it's best to choose; // names to be fairly generic, and rely on the detail field to capture; // everything else of interest.; //; // To avoid lifetime issues name and detail strings are copied into the event; // entries at their time of creation. Care should be taken to make string; // construction cheap to prevent 'Heisenperf' effects. In particular, the; // 'detail' argument may be a string-returning closure:; //; // \code; // int n;; // {; // TimeTraceScope scope(""my_event_name"",; // [n]() { return (Twine(""x="") + Twine(n)).str(); });; // ...my code...; // }; // \endcode; // The closure will not be called if tracing is disabled. Otherwise, the; // resulting string will be directly moved into the entry.; //; // The main process should be",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/TimeProfiler.h:413,depend,dependency-free,413,interpreter/llvm-project/llvm/include/llvm/Support/TimeProfiler.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/TimeProfiler.h,1,['depend'],['dependency-free']
Integrability,"//===- llvm/TableGen/Error.h - tblgen error handling helpers ----*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file contains error handling helper routines to pretty-print diagnostic; // messages from tblgen.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/TableGen/Error.h:424,rout,routines,424,interpreter/llvm-project/llvm/include/llvm/TableGen/Error.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/TableGen/Error.h,2,"['message', 'rout']","['messages', 'routines']"
Integrability,"//===- llvm/Target/CodeGenCWrappers.h - CodeGen C Wrappers ------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines C bindings wrappers for enums in llvm/Support/CodeGen.h; // that need them. The wrappers are separated to avoid adding an indirect; // dependency on llvm/Config/Targets.def to CodeGen.h.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Target/CodeGenCWrappers.h:50,Wrap,Wrappers,50,interpreter/llvm-project/llvm/include/llvm/Target/CodeGenCWrappers.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Target/CodeGenCWrappers.h,4,"['Wrap', 'depend', 'wrap']","['Wrappers', 'dependency', 'wrappers']"
Integrability,"//===- llvm/Target/TargetSchedule.cpp - Sched Machine Model ---------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements a wrapper around MCSchedModel that allows the interface; // to benefit from information currently only available in TargetInstrInfo.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/TargetSchedule.cpp:406,wrap,wrapper,406,interpreter/llvm-project/llvm/lib/CodeGen/TargetSchedule.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/TargetSchedule.cpp,2,"['interface', 'wrap']","['interface', 'wrapper']"
Integrability,"//===- llvm/TextAPI/InterfaceFile.h - TAPI Interface File -------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // A generic and abstract interface representation for linkable objects. This; // could be an MachO executable, bundle, dylib, or text-based stub file.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/TextAPI/InterfaceFile.h:20,Interface,InterfaceFile,20,interpreter/llvm-project/llvm/include/llvm/TextAPI/InterfaceFile.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/TextAPI/InterfaceFile.h,3,"['Interface', 'interface']","['Interface', 'InterfaceFile', 'interface']"
Integrability,"//===- llvm/Transforms/Vectorize/LoopVectorizationLegality.h ----*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; /// \file; /// This file defines the LoopVectorizationLegality class. Original code; /// in Loop Vectorizer has been moved out to its own file for modularity; /// and reusability.; ///; /// Currently, it works for innermost loop vectorization. Extending this to; /// outer loop vectorization is a TODO item.; ///; /// Also provides:; /// 1) LoopVectorizeHints class which keeps a number of loop annotations; /// locally for easy look up. It has the ability to write them back as; /// loop metadata, upon request.; /// 2) LoopVectorizationRequirements class for lazy bail out for the purpose; /// of reporting useful failure to vectorize message.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Vectorize/LoopVectorizationLegality.h:1017,message,message,1017,interpreter/llvm-project/llvm/include/llvm/Transforms/Vectorize/LoopVectorizationLegality.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Vectorize/LoopVectorizationLegality.h,1,['message'],['message']
Integrability,"//===- llvm/User.h - User class definition ----------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This class defines the interface that one who uses a Value must implement.; // Each instance of the Value class keeps track of what User's have handles; // to it.; //; // * Instructions are the largest class of Users.; // * Constants may be users of other constants (think arrays and stuff); //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/User.h:406,interface,interface,406,interpreter/llvm-project/llvm/include/llvm/IR/User.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/User.h,1,['interface'],['interface']
Integrability,"//===- llvm/VectorBuilder.h - Builder for VP Intrinsics ---------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines the VectorBuilder class, which is used as a convenient way; // to create VP intrinsics as if they were LLVM instructions with a consistent; // and simplified interface.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/VectorBuilder.h:559,interface,interface,559,interpreter/llvm-project/llvm/include/llvm/IR/VectorBuilder.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/VectorBuilder.h,1,['interface'],['interface']
Integrability,"//===- trie-node.h - XRay Call Stack Data Structure -----------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file provides a data structure and routines for working with call stacks; // of instrumented functions.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-xray/trie-node.h:423,rout,routines,423,interpreter/llvm-project/llvm/tools/llvm-xray/trie-node.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-xray/trie-node.h,1,['rout'],['routines']
Integrability,"//===- xray-account.h - XRay Function Call Accounting ---------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines the interface for performing some basic function call; // accounting from an XRay trace.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-xray/xray-account.h:405,interface,interface,405,interpreter/llvm-project/llvm/tools/llvm-xray/xray-account.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-xray/xray-account.h,1,['interface'],['interface']
Integrability,"//===- xray-extract.cpp: XRay Instrumentation Map Extraction --------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // Implementation of the xray-extract.h interface.; //; // FIXME: Support other XRay-instrumented binary formats other than ELF.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-xray/xray-extract.cpp:420,interface,interface,420,interpreter/llvm-project/llvm/tools/llvm-xray/xray-extract.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-xray/xray-extract.cpp,1,['interface'],['interface']
Integrability,"//===-- AMDGPUGlobalISelDivergenceLowering.cpp ----------------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; /// \file; /// GlobalISel pass that selects divergent i1 phis as lane mask phis.; /// Lane mask merging uses same algorithm as SDAG in SILowerI1Copies.; /// Handles all cases of temporal divergence.; /// For divergent non-phi i1 and uniform i1 uses outside of the cycle this pass; /// currently depends on LCSSA to insert phis with one incoming.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUGlobalISelDivergenceLowering.cpp:675,depend,depends,675,interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUGlobalISelDivergenceLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUGlobalISelDivergenceLowering.cpp,1,['depend'],['depends']
Integrability,"//===-- AMDGPUISelLowering.h - AMDGPU Lowering Interface --------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; /// \file; /// Interface definition of the TargetLowering class that is common; /// to all AMD GPUs.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUISelLowering.h:47,Interface,Interface,47,interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUISelLowering.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUISelLowering.h,2,['Interface'],['Interface']
Integrability,"//===-- AMDGPUInstPrinter.h - AMDGPU MC Inst -> ASM interface ---*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; /// \file; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/MCTargetDesc/AMDGPUInstPrinter.h:52,interface,interface,52,interpreter/llvm-project/llvm/lib/Target/AMDGPU/MCTargetDesc/AMDGPUInstPrinter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/MCTargetDesc/AMDGPUInstPrinter.h,1,['interface'],['interface']
Integrability,"//===-- AMDGPUTargetMachine.h - AMDGPU TargetMachine Interface --*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; /// \file; /// The AMDGPU TargetMachine interface definition for hw codegen targets.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUTargetMachine.h:53,Interface,Interface,53,interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUTargetMachine.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUTargetMachine.h,2,"['Interface', 'interface']","['Interface', 'interface']"
Integrability,"//===-- ARM.h - Top-level interface for ARM representation ------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file contains the entry points for global functions defined in the LLVM; // ARM back-end.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARM.h:26,interface,interface,26,interpreter/llvm-project/llvm/lib/Target/ARM/ARM.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARM.h,1,['interface'],['interface']
Integrability,"//===-- ARMAsmPrinter.cpp - Print machine code to an ARM .s file ----------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file contains a printer that converts from our internal representation; // of machine-dependent LLVM code to GAS-format ARM assembly language.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMAsmPrinter.cpp:474,depend,dependent,474,interpreter/llvm-project/llvm/lib/Target/ARM/ARMAsmPrinter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMAsmPrinter.cpp,1,['depend'],['dependent']
Integrability,"//===-- ARMBuildAttributes.h - ARM Build Attributes -------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file contains enumerations and support routines for ARM build attributes; // as defined in ARM ABI addenda document (ABI release 2.08).; //; // ELF for the ARM Architecture r2.09 - November 30, 2012; //; // http://infocenter.arm.com/help/topic/com.arm.doc.ihi0044e/IHI0044E_aaelf.pdf; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/ARMBuildAttributes.h:427,rout,routines,427,interpreter/llvm-project/llvm/include/llvm/Support/ARMBuildAttributes.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/ARMBuildAttributes.h,1,['rout'],['routines']
Integrability,"//===-- AVR.h - Top-level interface for AVR representation ------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file contains the entry points for global functions defined in the LLVM; // AVR back-end.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AVR/AVR.h:26,interface,interface,26,interpreter/llvm-project/llvm/lib/Target/AVR/AVR.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AVR/AVR.h,1,['interface'],['interface']
Integrability,"//===-- AVRAsmPrinter.cpp - AVR LLVM assembly writer ----------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file contains a printer that converts from our internal representation; // of machine-dependent LLVM code to GAS-format AVR assembly language.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AVR/AVRAsmPrinter.cpp:474,depend,dependent,474,interpreter/llvm-project/llvm/lib/Target/AVR/AVRAsmPrinter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AVR/AVRAsmPrinter.cpp,1,['depend'],['dependent']
Integrability,"//===-- AVRISelLowering.cpp - AVR DAG Lowering Implementation -------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines the interfaces that AVR uses to lower LLVM code into a; // selection DAG.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AVR/AVRISelLowering.cpp:405,interface,interfaces,405,interpreter/llvm-project/llvm/lib/Target/AVR/AVRISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AVR/AVRISelLowering.cpp,1,['interface'],['interfaces']
Integrability,"//===-- AVRISelLowering.h - AVR DAG Lowering Interface ----------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines the interfaces that AVR uses to lower LLVM code into a; // selection DAG.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AVR/AVRISelLowering.h:45,Interface,Interface,45,interpreter/llvm-project/llvm/lib/Target/AVR/AVRISelLowering.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AVR/AVRISelLowering.h,2,"['Interface', 'interface']","['Interface', 'interfaces']"
Integrability,"//===-- AbstractCallSite.cpp - Implementation of abstract call sites ------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements abstract call sites which unify the interface for; // direct, indirect, and callback call sites.; //; // For more information see:; // https://llvm.org/devmtg/2018-10/talk-abstracts.html#talk20; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/AbstractCallSite.cpp:440,interface,interface,440,interpreter/llvm-project/llvm/lib/IR/AbstractCallSite.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/AbstractCallSite.cpp,1,['interface'],['interface']
Integrability,"//===-- Address.h - An aligned address -------------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This class provides a simple wrapper for a pair of a pointer and an; // alignment.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/Address.h:411,wrap,wrapper,411,interpreter/llvm-project/clang/lib/CodeGen/Address.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/Address.h,1,['wrap'],['wrapper']
Integrability,"//===-- AssemblyAnnotationWriter.h - Annotation .ll files -------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // Clients of the assembly writer can use this interface to add their own; // special-purpose annotations to LLVM assembly language printouts. Note that; // the assembly parser won't be able to parse these, in general, so; // implementations are advised to print stuff as LLVM comments.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/AssemblyAnnotationWriter.h:427,interface,interface,427,interpreter/llvm-project/llvm/include/llvm/IR/AssemblyAnnotationWriter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/AssemblyAnnotationWriter.h,1,['interface'],['interface']
Integrability,"//===-- BPF.h - Top-level interface for BPF representation ------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/BPF/BPF.h:26,interface,interface,26,interpreter/llvm-project/llvm/lib/Target/BPF/BPF.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/BPF/BPF.h,1,['interface'],['interface']
Integrability,"//===-- BPFAsmPrinter.cpp - BPF LLVM assembly writer ----------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file contains a printer that converts from our internal representation; // of machine-dependent LLVM code to the BPF assembly language.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/BPF/BPFAsmPrinter.cpp:474,depend,dependent,474,interpreter/llvm-project/llvm/lib/Target/BPF/BPFAsmPrinter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/BPF/BPFAsmPrinter.cpp,1,['depend'],['dependent']
Integrability,"//===-- BPFISelLowering.cpp - BPF DAG Lowering Implementation ------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines the interfaces that BPF uses to lower LLVM code into a; // selection DAG.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/BPF/BPFISelLowering.cpp:404,interface,interfaces,404,interpreter/llvm-project/llvm/lib/Target/BPF/BPFISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/BPF/BPFISelLowering.cpp,1,['interface'],['interfaces']
Integrability,"//===-- BPFISelLowering.h - BPF DAG Lowering Interface ----------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines the interfaces that BPF uses to lower LLVM code into a; // selection DAG.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/BPF/BPFISelLowering.h:45,Interface,Interface,45,interpreter/llvm-project/llvm/lib/Target/BPF/BPFISelLowering.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/BPF/BPFISelLowering.h,2,"['Interface', 'interface']","['Interface', 'interfaces']"
Integrability,"//===-- CFGPrinter.h - CFG printer external interface -----------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines a 'dot-cfg' analysis pass, which emits the; // cfg.<fnname>.dot file for each function in the program, with a graph of the; // CFG for that function.; //; // This file defines external functions that can be called to explicitly; // instantiate the CFG printer.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/CFGPrinter.h:44,interface,interface,44,interpreter/llvm-project/llvm/include/llvm/Analysis/CFGPrinter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/CFGPrinter.h,1,['interface'],['interface']
Integrability,"//===-- CGValue.h - LLVM CodeGen wrappers for llvm::Value* ------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // These classes implement wrappers around llvm::Value in order to; // fully represent the range of values for C L- and R- values.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGValue.h:33,wrap,wrappers,33,interpreter/llvm-project/clang/lib/CodeGen/CGValue.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGValue.h,2,['wrap'],['wrappers']
Integrability,"//===-- CSKY.h - Top-level interface for CSKY--------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file contains the entry points for global functions defined in the LLVM; // CSKY back-end.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/CSKY/CSKY.h:27,interface,interface,27,interpreter/llvm-project/llvm/lib/Target/CSKY/CSKY.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/CSKY/CSKY.h,1,['interface'],['interface']
Integrability,"//===-- CSKYAsmPrinter.cpp - CSKY LLVM assembly writer --------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file contains a printer that converts from our internal representation; // of machine-dependent LLVM code to the CSKY assembly language.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/CSKY/CSKYAsmPrinter.cpp:474,depend,dependent,474,interpreter/llvm-project/llvm/lib/Target/CSKY/CSKYAsmPrinter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/CSKY/CSKYAsmPrinter.cpp,1,['depend'],['dependent']
Integrability,"//===-- CSKYISelLowering.cpp - CSKY DAG Lowering Implementation ----------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines the interfaces that CSKY uses to lower LLVM code into a; // selection DAG.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/CSKY/CSKYISelLowering.cpp:404,interface,interfaces,404,interpreter/llvm-project/llvm/lib/Target/CSKY/CSKYISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/CSKY/CSKYISelLowering.cpp,2,['interface'],['interfaces']
Integrability,"//===-- CSKYMCCodeEmitter.cpp - CSKY Code Emitter interface ---------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements the CSKYMCCodeEmitter class.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/CSKY/MCTargetDesc/CSKYMCCodeEmitter.cpp:50,interface,interface,50,interpreter/llvm-project/llvm/lib/Target/CSKY/MCTargetDesc/CSKYMCCodeEmitter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/CSKY/MCTargetDesc/CSKYMCCodeEmitter.cpp,2,['interface'],['interface']
Integrability,"//===-- CallPrinter.h - Call graph printer external interface ----*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines external functions that can be called to explicitly; // instantiate the call graph printer.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/CallPrinter.h:52,interface,interface,52,interpreter/llvm-project/llvm/include/llvm/Analysis/CallPrinter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/CallPrinter.h,1,['interface'],['interface']
Integrability,"//===-- CheckObjCInstMethSignature.cpp - Check ObjC method signatures -----===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines a CheckObjCInstMethSignature, a flow-insensitive check; // that determines if an Objective-C class interface incorrectly redefines; // the method signature in a subclass.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/CheckObjCInstMethSignature.cpp:500,interface,interface,500,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/CheckObjCInstMethSignature.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/CheckObjCInstMethSignature.cpp,1,['interface'],['interface']
Integrability,"//===-- CmpInstAnalysis.h - Utils to help fold compare insts ----*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file holds routines to help analyse compare instructions; // and fold them into constants or other compare instructions; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/CmpInstAnalysis.h:399,rout,routines,399,interpreter/llvm-project/llvm/include/llvm/Analysis/CmpInstAnalysis.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/CmpInstAnalysis.h,1,['rout'],['routines']
Integrability,"//===-- CodeGen.cpp -------------------------------------------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements the common initialization routines for the; // CodeGen library.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/CodeGen.cpp:430,rout,routines,430,interpreter/llvm-project/llvm/lib/CodeGen/CodeGen.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/CodeGen.cpp,1,['rout'],['routines']
Integrability,"//===-- CodeInjector.h ------------------------------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; ///; /// \file; /// Defines the clang::CodeInjector interface which is responsible for; /// injecting AST of function definitions that may not be available in the; /// original source.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/CodeInjector.h:428,interface,interface,428,interpreter/llvm-project/clang/include/clang/Analysis/CodeInjector.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/CodeInjector.h,2,"['inject', 'interface']","['injecting', 'interface']"
Integrability,"//===-- CommandFlags.cpp - Command Line Flags Interface ---------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file contains codegen-specific flags that are shared between different; // command line tools. The tools ""llc"" and ""opt"" both use this file to prevent; // flag duplication.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/CommandFlags.cpp:46,Interface,Interface,46,interpreter/llvm-project/llvm/lib/CodeGen/CommandFlags.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/CommandFlags.cpp,1,['Interface'],['Interface']
Integrability,"//===-- CommandFlags.h - Command Line Flags Interface -----------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file contains codegen-specific flags that are shared between different; // command line tools. The tools ""llc"" and ""opt"" both use this file to prevent; // flag duplication.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/CommandFlags.h:44,Interface,Interface,44,interpreter/llvm-project/llvm/include/llvm/CodeGen/CommandFlags.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/CommandFlags.h,1,['Interface'],['Interface']
Integrability,"//===-- CommandLine.cpp - Command line parser implementation --------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This class implements a command line argument processor that is useful when; // creating a tool. It provides a simple, minimalistic interface that is easily; // extensible and supports nonlocal (library) command line options.; //; // Note that rather than trying to figure out what this code does, you could try; // reading the library documentation located in docs/CommandLine.html; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/CommandLine.cpp:515,interface,interface,515,interpreter/llvm-project/llvm/lib/Support/CommandLine.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/CommandLine.cpp,1,['interface'],['interface']
Integrability,"//===-- ConstantFolding.cpp - Fold instructions into constants ------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines routines for folding instructions into constants.; //; // Also, to supplement the basic IR ConstantExpr simplifications,; // this file defines some additional folding routines that can make use of; // DataLayout information. These functions cannot go in IR due to library; // dependency issues.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/ConstantFolding.cpp:401,rout,routines,401,interpreter/llvm-project/llvm/lib/Analysis/ConstantFolding.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/ConstantFolding.cpp,3,"['depend', 'rout']","['dependency', 'routines']"
Integrability,"//===-- ConstantFolding.h - Fold instructions into constants ----*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file declares routines for folding instructions into constants when all; // operands are constants, for example ""sub i32 1, 0"" -> ""1"".; //; // Also, to supplement the basic VMCore ConstantExpr simplifications,; // this file declares some additional folding routines that can make use of; // DataLayout information. These functions cannot go in VMCore due to library; // dependency issues.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/ConstantFolding.h:402,rout,routines,402,interpreter/llvm-project/llvm/include/llvm/Analysis/ConstantFolding.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/ConstantFolding.h,3,"['depend', 'rout']","['dependency', 'routines']"
Integrability,"//===-- ConvertUTFWrapper.cpp - Wrap ConvertUTF.h with clang data types -----===; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/ConvertUTFWrapper.cpp:32,Wrap,Wrap,32,interpreter/llvm-project/llvm/lib/Support/ConvertUTFWrapper.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/ConvertUTFWrapper.cpp,1,['Wrap'],['Wrap']
Integrability,"//===-- CoroInstr.h - Coroutine Intrinsics Instruction Wrappers -*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; // This file defines classes that make it really easy to deal with intrinsic; // functions with the isa/dyncast family of functions. In particular, this; // allows you to do things like:; //; // if (auto *SF = dyn_cast<CoroSubFnInst>(Inst)); // ... SF->getFrame() ...; //; // All intrinsic function calls are instances of the call instruction, so these; // are all subclasses of the CallInst class. Note that none of these classes; // has state or virtual methods, which is an important part of this gross/neat; // hack working.; //; // The helpful comment above is borrowed from llvm/IntrinsicInst.h, we keep; // coroutine intrinsic wrappers here since they are only used by the passes in; // the Coroutine library.; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Coroutines/CoroInstr.h:55,Wrap,Wrappers,55,interpreter/llvm-project/llvm/lib/Transforms/Coroutines/CoroInstr.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Coroutines/CoroInstr.h,2,"['Wrap', 'wrap']","['Wrappers', 'wrappers']"
Integrability,"//===-- Debug.cpp - An easy way to add debug output to your code ----------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements a handy way of adding debugging information to your; // code, without it being enabled all of the time, and without having to add; // command line options to enable it.; //; // In particular, just wrap your code with the LLVM_DEBUG() macro, and it will; // be enabled automatically if you specify '-debug' on the command-line.; // Alternatively, you can also use the SET_DEBUG_TYPE(""foo"") macro to specify; // that your debug code belongs to class ""foo"". Then, on the command line, you; // can specify '-debug-only=foo' to enable JUST the debug information for the; // foo class.; //; // When compiling without assertions, the -debug-* options and all code in; // LLVM_DEBUG() statements disappears, so it does not affect the runtime of the; // code.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/Debug.cpp:601,wrap,wrap,601,interpreter/llvm-project/llvm/lib/Support/Debug.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/Debug.cpp,1,['wrap'],['wrap']
Integrability,"//===-- DependenceAnalysis.cpp - DA Implementation --------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // DependenceAnalysis is an LLVM pass that analyses dependences between memory; // accesses. Currently, it is an (incomplete) implementation of the approach; // described in; //; // Practical Dependence Testing; // Goff, Kennedy, Tseng; // PLDI 1991; //; // There's a single entry point that analyzes the dependence between a pair; // of memory references in a function, returning either NULL, for no dependence,; // or a more-or-less detailed description of the dependence between them.; //; // Currently, the implementation cannot propagate constraints between; // coupled RDIV subscripts and lacks a multi-subscript MIV test.; // Both of these are conservative weaknesses;; // that is, not a source of correctness problems.; //; // Since Clang linearizes some array subscripts, the dependence; // analysis is using SCEV->delinearize to recover the representation of multiple; // subscripts, and thus avoid the more expensive and less precise MIV tests. The; // delinearization is controlled by the flag -da-delinearize.; //; // We should pay some careful attention to the possibility of integer overflow; // in the implementation of the various tests. This could happen with Add,; // Subtract, or Multiply, with both APInt's and SCEV's.; //; // Some non-linear subscript pairs can be handled by the GCD test; // (and perhaps other tests).; // Should explore how often these things occur.; //; // Finally, it seems like certain test cases expose weaknesses in the SCEV; // simplification, especially in the handling of sign and zero extensions.; // It could be useful to spend time exploring these.; //; // Please note ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/DependenceAnalysis.cpp:8,Depend,DependenceAnalysis,8,interpreter/llvm-project/llvm/lib/Analysis/DependenceAnalysis.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/DependenceAnalysis.cpp,7,"['Depend', 'depend']","['Dependence', 'DependenceAnalysis', 'dependence', 'dependences']"
Integrability,"//===-- DependencyInfo.h --------------------------------------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-libtool-darwin/DependencyInfo.h:8,Depend,DependencyInfo,8,interpreter/llvm-project/llvm/tools/llvm-libtool-darwin/DependencyInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-libtool-darwin/DependencyInfo.h,1,['Depend'],['DependencyInfo']
Integrability,"//===-- DiffConsumer.h - Difference Consumer --------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This header defines the interface to the LLVM difference Consumer; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-diff/lib/DiffConsumer.h:407,interface,interface,407,interpreter/llvm-project/llvm/tools/llvm-diff/lib/DiffConsumer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-diff/lib/DiffConsumer.h,1,['interface'],['interface']
Integrability,"//===-- DiffEngine.h - File comparator --------------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This header defines the interface to the llvm-tapi difference engine,; // which structurally compares two tbd files.; //; //===----------------------------------------------------------------------===/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-readtapi/DiffEngine.h:407,interface,interface,407,interpreter/llvm-project/llvm/tools/llvm-readtapi/DiffEngine.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-readtapi/DiffEngine.h,1,['interface'],['interface']
Integrability,"//===-- DiffLog.h - Difference Log Builder and accessories ------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This header defines the interface to the LLVM difference log builder.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-diff/lib/DiffLog.cpp:407,interface,interface,407,interpreter/llvm-project/llvm/tools/llvm-diff/lib/DiffLog.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-diff/lib/DiffLog.cpp,2,['interface'],['interface']
Integrability,"//===-- DifferenceEngine.h - Module comparator ------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This header defines the interface to the LLVM difference engine,; // which structurally compares functions within a module.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-diff/lib/DifferenceEngine.h:407,interface,interface,407,interpreter/llvm-project/llvm/tools/llvm-diff/lib/DifferenceEngine.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-diff/lib/DifferenceEngine.h,1,['interface'],['interface']
Integrability,"//===-- DomPrinter.h - Dom printer external interface ------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines external functions that can be called to explicitly; // instantiate the dominance tree printer.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/DomPrinter.h:44,interface,interface,44,interpreter/llvm-project/llvm/include/llvm/Analysis/DomPrinter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/DomPrinter.h,1,['interface'],['interface']
Integrability,"//===-- EHScopeStack.h - Stack for cleanup IR generation --------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // These classes should be the minimum interface required for other parts of; // CodeGen to emit cleanups. The implementation is in CGCleanup.cpp and other; // implemenentation details that are not widely needed are in CGCleanup.h.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/EHScopeStack.h:419,interface,interface,419,interpreter/llvm-project/clang/lib/CodeGen/EHScopeStack.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/EHScopeStack.h,1,['interface'],['interface']
Integrability,"//===-- ExecutionEngine.cpp - Common Implementation shared by EEs ---------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines the common interface used by the various execution engine; // subclasses.; //; // FIXME: This file needs to be updated to support scalable vectors; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ExecutionEngine/ExecutionEngine.cpp:412,interface,interface,412,interpreter/llvm-project/llvm/lib/ExecutionEngine/ExecutionEngine.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ExecutionEngine/ExecutionEngine.cpp,1,['interface'],['interface']
Integrability,"//===-- ExternalFunctions.cpp - Implement External Functions --------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file contains both code to deal with invoking ""external"" functions, but; // also contains code that implements ""exported"" external functions.; //; // There are currently two mechanisms for handling external functions in the; // Interpreter. The first is to implement lle_* wrapper functions that are; // specific to well-known library functions which manually translate the; // arguments from GenericValues and make the call. If such a wrapper does; // not exist, and libffi is available, then the Interpreter will attempt to; // invoke the function using libffi, after finding its address.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ExecutionEngine/Interpreter/ExternalFunctions.cpp:661,wrap,wrapper,661,interpreter/llvm-project/llvm/lib/ExecutionEngine/Interpreter/ExternalFunctions.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ExecutionEngine/Interpreter/ExternalFunctions.cpp,2,['wrap'],['wrapper']
Integrability,"//===-- FileCheckImpl.h - Private FileCheck Interface ------------*- C++ -*-==//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines the private interfaces of FileCheck. Its purpose is to; // allow unit testing of FileCheck and to separate the interface from the; // implementation. It is only meant to be used by FileCheck.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/FileCheck/FileCheckImpl.h:44,Interface,Interface,44,interpreter/llvm-project/llvm/lib/FileCheck/FileCheckImpl.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/FileCheck/FileCheckImpl.h,3,"['Interface', 'interface']","['Interface', 'interface', 'interfaces']"
Integrability,"//===-- FindBugs.cpp - Run Many Different Optimizations -------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines an interface that allows bugpoint to choose different; // combinations of optimizations to run on the selected input. Bugpoint will; // run these optimizations and record the success/failure of each. This way; // we can hopefully spot bugs in the optimizations.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/bugpoint/FindBugs.cpp:404,interface,interface,404,interpreter/llvm-project/llvm/tools/bugpoint/FindBugs.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/bugpoint/FindBugs.cpp,1,['interface'],['interface']
Integrability,"//===-- FrontendAction.h - Generic Frontend Action Interface ----*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; ///; /// \file; /// Defines the clang::FrontendAction interface and various convenience; /// abstract classes (clang::ASTFrontendAction, clang::PluginASTAction,; /// clang::PreprocessorFrontendAction, and clang::WrapperFrontendAction); /// derived from it.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Frontend/FrontendAction.h:51,Interface,Interface,51,interpreter/llvm-project/clang/include/clang/Frontend/FrontendAction.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Frontend/FrontendAction.h,3,"['Interface', 'Wrap', 'interface']","['Interface', 'WrapperFrontendAction', 'interface']"
Integrability,"//===-- FunctionLoweringInfo.cpp ------------------------------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This implements routines for translating functions from LLVM IR into; // Machine IR.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/FunctionLoweringInfo.cpp:399,rout,routines,399,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/FunctionLoweringInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/FunctionLoweringInfo.cpp,1,['rout'],['routines']
Integrability,"//===-- GVMaterializer.cpp - Base implementation for GV materializers -----===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // Minimal implementation of the abstract interface for materializing; // GlobalValues.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/GVMaterializer.cpp:422,interface,interface,422,interpreter/llvm-project/llvm/lib/IR/GVMaterializer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/GVMaterializer.cpp,1,['interface'],['interface']
Integrability,"//===-- HexagonISelLowering.cpp - Hexagon DAG Lowering Implementation -----===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements the interfaces that Hexagon uses to lower LLVM code; // into a selection DAG.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonISelLowering.cpp:408,interface,interfaces,408,interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonISelLowering.cpp,1,['interface'],['interfaces']
Integrability,"//===-- HexagonISelLowering.h - Hexagon DAG Lowering Interface --*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines the interfaces that Hexagon uses to lower LLVM code into a; // selection DAG.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonISelLowering.h:53,Interface,Interface,53,interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonISelLowering.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonISelLowering.h,2,"['Interface', 'interface']","['Interface', 'interfaces']"
Integrability,"//===-- InferFunctionAttrs.h - Infer implicit function attributes ---------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; ///; /// \file; /// Interfaces for passes which infer implicit function attributes from the; /// name and signature of function declarations.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/InferFunctionAttrs.h:396,Interface,Interfaces,396,interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/InferFunctionAttrs.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/InferFunctionAttrs.h,1,['Interface'],['Interfaces']
Integrability,"//===-- InstructionSimplify.h - Fold instrs into simpler forms --*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file declares routines for folding instructions into simpler forms; // that do not require creating new instructions. This does constant folding; // (""add i32 1, 1"" -> ""2"") but can also handle non-constant operands, either; // returning a constant (""and i32 %x, 0"" -> ""0"") or an already existing value; // (""and i32 %x, %x"" -> ""%x""). If the simplification is also an instruction; // then it dominates the original instruction.; //; // These routines implicitly resolve undef uses. The easiest way to be safe when; // using these routines to obtain simplified values for existing instructions is; // to always replace all uses of the instructions with the resulting simplified; // values. This will prevent other code from seeing the same undef uses and; // resolving them to different values.; //; // They require that all the IR that they encounter be valid and inserted into a; // parent function.; //; // Additionally, these routines can't simplify to the instructions that are not; // def-reachable, meaning we can't just scan the basic block for instructions; // to simplify to.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/InstructionSimplify.h:402,rout,routines,402,interpreter/llvm-project/llvm/include/llvm/Analysis/InstructionSimplify.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/InstructionSimplify.h,4,['rout'],['routines']
Integrability,"//===-- IntelJITEventsWrapper.h - Intel JIT Events API Wrapper --*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines a wrapper for the Intel JIT Events API. It allows for the; // implementation of the jitprofiling library to be swapped with an alternative; // implementation (for testing). To include this file, you must have the; // jitprofiling.h header available; it is available in Intel(R) VTune(TM); // Amplifier XE 2011.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ExecutionEngine/IntelJITEvents/IntelJITEventsWrapper.h:55,Wrap,Wrapper,55,interpreter/llvm-project/llvm/lib/ExecutionEngine/IntelJITEvents/IntelJITEventsWrapper.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ExecutionEngine/IntelJITEvents/IntelJITEventsWrapper.h,2,"['Wrap', 'wrap']","['Wrapper', 'wrapper']"
Integrability,"//===-- Interpreter.h - Abstract Execution Engine Interface -----*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file forces the interpreter to link in on certain operating systems.; // (Windows).; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/Interpreter.h:50,Interface,Interface,50,interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/Interpreter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/Interpreter.h,1,['Interface'],['Interface']
Integrability,"//===-- IntrinsicInst.cpp - Intrinsic Instruction Wrappers ---------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements methods that make it really easy to deal with intrinsic; // functions.; //; // All intrinsic function calls are instances of the call instruction, so these; // are all subclasses of the CallInst class. Note that none of these classes; // has state or virtual methods, which is an important part of this gross/neat; // hack working.; //; // In some cases, arguments to intrinsics need to be generic and are defined as; // type pointer to empty struct { }*. To access the real item of interest the; // cast instruction needs to be stripped away.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/IntrinsicInst.cpp:50,Wrap,Wrappers,50,interpreter/llvm-project/llvm/lib/IR/IntrinsicInst.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/IntrinsicInst.cpp,1,['Wrap'],['Wrappers']
Integrability,"//===-- IntrinsicLowering.h - Intrinsic Function Lowering -------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines the IntrinsicLowering interface. This interface allows; // addition of domain-specific or front-end specific intrinsics to LLVM without; // having to modify all of the C backend or interpreter.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/IntrinsicLowering.h:423,interface,interface,423,interpreter/llvm-project/llvm/include/llvm/CodeGen/IntrinsicLowering.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/IntrinsicLowering.h,2,['interface'],['interface']
Integrability,"//===-- JITLinkMemoryManager.h - JITLink mem manager interface --*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // Contains the JITLinkMemoryManager interface.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/JITLink/JITLinkMemoryManager.h:53,interface,interface,53,interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/JITLink/JITLinkMemoryManager.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/JITLink/JITLinkMemoryManager.h,2,['interface'],['interface']
Integrability,"//===-- LLVMContext.cpp - Implement LLVMContext ---------------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements LLVMContext, as a wrapper around the opaque; // class LLVMContextImpl.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/LLVMContext.cpp:422,wrap,wrapper,422,interpreter/llvm-project/llvm/lib/IR/LLVMContext.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/LLVMContext.cpp,1,['wrap'],['wrapper']
Integrability,"//===-- LTODisassembler.cpp - LTO Disassembler interface ------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This function provides utility methods used by clients of libLTO that want; // to use the disassembler.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/lto/LTODisassembler.cpp:47,interface,interface,47,interpreter/llvm-project/llvm/tools/lto/LTODisassembler.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/lto/LTODisassembler.cpp,1,['interface'],['interface']
Integrability,"//===-- Lanai.h - Top-level interface for Lanai representation --*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file contains the entry points for global functions defined in the LLVM; // Lanai back-end.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Lanai/Lanai.h:28,interface,interface,28,interpreter/llvm-project/llvm/lib/Target/Lanai/Lanai.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Lanai/Lanai.h,1,['interface'],['interface']
Integrability,"//===-- LanaiAsmPrinter.cpp - Lanai LLVM assembly writer ------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file contains a printer that converts from our internal representation; // of machine-dependent LLVM code to the Lanai assembly language.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Lanai/LanaiAsmPrinter.cpp:474,depend,dependent,474,interpreter/llvm-project/llvm/lib/Target/Lanai/LanaiAsmPrinter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Lanai/LanaiAsmPrinter.cpp,1,['depend'],['dependent']
Integrability,"//===-- LanaiISelLowering.h - Lanai DAG Lowering Interface -....-*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines the interfaces that Lanai uses to lower LLVM code into a; // selection DAG.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Lanai/LanaiISelLowering.h:49,Interface,Interface,49,interpreter/llvm-project/llvm/lib/Target/Lanai/LanaiISelLowering.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Lanai/LanaiISelLowering.h,2,"['Interface', 'interface']","['Interface', 'interfaces']"
Integrability,"//===-- LegalizeTypes.h - DAG Type Legalizer class definition ---*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines the DAGTypeLegalizer class. This is a private interface; // shared between the code that implements the SelectionDAG::LegalizeTypes; // method.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/LegalizeTypes.h:447,interface,interface,447,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/LegalizeTypes.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/LegalizeTypes.h,1,['interface'],['interface']
Integrability,"//===-- LibCallsShrinkWrap.cpp ----------------------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This pass shrink-wraps a call to function if the result is not used.; // The call can set errno but is otherwise side effect free. For example:; // sqrt(val);; // is transformed to; // if (val < 0); // sqrt(val);; // Even if the result of library call is not being used, the compiler cannot; // safely delete the call because the function can set errno on error; // conditions.; // Note in many functions, the error condition solely depends on the incoming; // parameter. In this optimization, we can generate the condition can lead to; // the errno to shrink-wrap the call. Since the chances of hitting the error; // condition is low, the runtime call is effectively eliminated.; //; // These partially dead calls are usually results of C++ abstraction penalty; // exposed by inlining.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/LibCallsShrinkWrap.cpp:400,wrap,wraps,400,interpreter/llvm-project/llvm/lib/Transforms/Utils/LibCallsShrinkWrap.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/LibCallsShrinkWrap.cpp,3,"['depend', 'wrap']","['depends', 'wrap', 'wraps']"
Integrability,"//===-- LoongArch.h - Top-level interface for LoongArch ---------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file contains the entry points for global functions defined in the LLVM; // LoongArch back-end.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/LoongArch/LoongArch.h:32,interface,interface,32,interpreter/llvm-project/llvm/lib/Target/LoongArch/LoongArch.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/LoongArch/LoongArch.h,1,['interface'],['interface']
Integrability,"//===-- LoopUnrollAndJam.cpp - Loop unrolling utilities -------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements loop unroll and jam as a routine, much like; // LoopUnroll.cpp implements loop unroll.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/LoopUnrollAndJam.cpp:429,rout,routine,429,interpreter/llvm-project/llvm/lib/Transforms/Utils/LoopUnrollAndJam.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/LoopUnrollAndJam.cpp,1,['rout'],['routine']
Integrability,"//===-- LowerGlobalDtors.cpp - Lower @llvm.global_dtors -------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; ///; /// \file; /// Lower @llvm.global_dtors.; ///; /// Implement @llvm.global_dtors by creating wrapper functions that are; /// registered in @llvm.global_ctors and which contain a call to; /// `__cxa_atexit` to register their destructor functions.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/LowerGlobalDtors.cpp:473,wrap,wrapper,473,interpreter/llvm-project/llvm/lib/Transforms/Utils/LowerGlobalDtors.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/LowerGlobalDtors.cpp,1,['wrap'],['wrapper']
Integrability,"//===-- M68k.h - Top-level interface for M68k representation ----*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; ///; /// \file; /// This file contains the entry points for global functions defined in the; /// M68k target library, as used by the LLVM JIT.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/M68k/M68k.h:27,interface,interface,27,interpreter/llvm-project/llvm/lib/Target/M68k/M68k.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/M68k/M68k.h,1,['interface'],['interface']
Integrability,"//===-- M68kAsmPrinter.cpp - M68k LLVM Assembly Printer ---------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; ///; /// \file; /// This file contains a printer that converts from our internal representation; /// of machine-dependent LLVM code to GAS-format M68k assembly language.; ///; //===----------------------------------------------------------------------===//; // TODO Conform to Motorola ASM syntax",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/M68k/M68kAsmPrinter.cpp:488,depend,dependent,488,interpreter/llvm-project/llvm/lib/Target/M68k/M68kAsmPrinter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/M68k/M68kAsmPrinter.cpp,1,['depend'],['dependent']
Integrability,"//===-- M68kCallingConv.h - M68k Custom CC Routines -------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; ///; /// \file; /// This file contains the custom routines for the M68k Calling Convention; /// that aren't done by tablegen.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/M68k/M68kCallingConv.h:43,Rout,Routines,43,interpreter/llvm-project/llvm/lib/Target/M68k/M68kCallingConv.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/M68k/M68kCallingConv.h,2,"['Rout', 'rout']","['Routines', 'routines']"
Integrability,"//===-- M68kISelLowering.cpp - M68k DAG Lowering Impl -----------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; ///; /// \file; /// This file defines the interfaces that M68k uses to lower LLVM code into a; /// selection DAG.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/M68k/M68kISelLowering.cpp:418,interface,interfaces,418,interpreter/llvm-project/llvm/lib/Target/M68k/M68kISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/M68k/M68kISelLowering.cpp,1,['interface'],['interfaces']
Integrability,"//===-- M68kISelLowering.h - M68k DAG Lowering Interface --------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; ///; /// \file; /// This file defines the interfaces that M68k uses to lower LLVM code into a; /// selection DAG.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/M68k/M68kISelLowering.h:47,Interface,Interface,47,interpreter/llvm-project/llvm/lib/Target/M68k/M68kISelLowering.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/M68k/M68kISelLowering.h,2,"['Interface', 'interface']","['Interface', 'interfaces']"
Integrability,"//===-- M68kInstPrinter.cpp - Convert M68k MCInst to asm --------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; ///; /// \file; /// This file contains definitions for an M68k MCInst printer.; ///; //===----------------------------------------------------------------------===//; // TODO Conform with all supported Motorola ASM syntax; // Motorola's assembly has several syntax variants, especially on; // addressing modes.; // For example, you can write pc indirect w/ displacement as; // `x(%pc)`, where `x` is the displacement imm, or `(x,%pc)`.; // Currently we're picking the variant that is different from; // GCC, albeit being recognizable by GNU AS.; // Not sure what is the impact now (e.g. some syntax might; // not be recognized by some old consoles' toolchains, in which; // case we can not use our integrated assembler), but either way,; // it will be great to support all of the variants in the future.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/M68k/MCTargetDesc/M68kInstPrinter.cpp:1074,integrat,integrated,1074,interpreter/llvm-project/llvm/lib/Target/M68k/MCTargetDesc/M68kInstPrinter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/M68k/MCTargetDesc/M68kInstPrinter.cpp,1,['integrat'],['integrated']
Integrability,"//===-- M68kInstrBuilder.h - Functions to build M68k insts ------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; ///; /// \file; /// This file exposes functions that may be used with BuildMI from the; /// MachineInstrBuilder.h file to handle M68k'isms in a clean way.; ///; /// TODO The BuildMem function may be used with the BuildMI function to add; /// entire memory references in a single, typed, function call. M68k memory; /// references can be very complex expressions (described in the README), so; /// wrapping them up behind an easier to use interface makes sense.; /// Descriptions of the functions are included below.; ///; /// For reference, the order of operands for memory references is:; /// (Operand), Base, Scale, Index, Displacement.; ///; //===----------------------------------------------------------------------===//; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/M68k/M68kInstrBuilder.h:773,wrap,wrapping,773,interpreter/llvm-project/llvm/lib/Target/M68k/M68kInstrBuilder.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/M68k/M68kInstrBuilder.h,2,"['interface', 'wrap']","['interface', 'wrapping']"
Integrability,"//===-- MCAsmParser.cpp - Abstract Asm Parser Interface -------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MC/MCParser/MCAsmParser.cpp:46,Interface,Interface,46,interpreter/llvm-project/llvm/lib/MC/MCParser/MCAsmParser.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MC/MCParser/MCAsmParser.cpp,1,['Interface'],['Interface']
Integrability,"//===-- MCTargetDesc/AMDGPUMCAsmInfo.h - AMDGPU MCAsm Interface -*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; /// \file; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/MCTargetDesc/AMDGPUMCAsmInfo.h:54,Interface,Interface,54,interpreter/llvm-project/llvm/lib/Target/AMDGPU/MCTargetDesc/AMDGPUMCAsmInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/MCTargetDesc/AMDGPUMCAsmInfo.h,1,['Interface'],['Interface']
Integrability,"//===-- MPITypes.h - Functionality to model MPI concepts --------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; ///; /// \file; /// This file provides definitions to model concepts of MPI. The mpi::Request; /// class defines a wrapper class, in order to make MPI requests trackable for; /// path-sensitive analysis.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/MPI-Checker/MPITypes.h:491,wrap,wrapper,491,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/MPI-Checker/MPITypes.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/MPI-Checker/MPITypes.h,1,['wrap'],['wrapper']
Integrability,"//===-- MSP430AsmPrinter.cpp - MSP430 LLVM assembly writer ----------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file contains a printer that converts from our internal representation; // of machine-dependent LLVM code to the MSP430 assembly language.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/MSP430/MSP430AsmPrinter.cpp:474,depend,dependent,474,interpreter/llvm-project/llvm/lib/Target/MSP430/MSP430AsmPrinter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/MSP430/MSP430AsmPrinter.cpp,1,['depend'],['dependent']
Integrability,"//===-- MSP430AttributeParser.h - MSP430 Attribute Parser -------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; ///; /// \file; /// This file contains support routines for parsing MSP430 ELF build attributes.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/MSP430AttributeParser.h:423,rout,routines,423,interpreter/llvm-project/llvm/include/llvm/Support/MSP430AttributeParser.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/MSP430AttributeParser.h,1,['rout'],['routines']
Integrability,"//===-- MSP430ISelLowering.h - MSP430 DAG Lowering Interface ----*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines the interfaces that MSP430 uses to lower LLVM code into a; // selection DAG.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/MSP430/MSP430ISelLowering.h:51,Interface,Interface,51,interpreter/llvm-project/llvm/lib/Target/MSP430/MSP430ISelLowering.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/MSP430/MSP430ISelLowering.h,2,"['Interface', 'interface']","['Interface', 'interfaces']"
Integrability,"//===-- ManagedStatic.cpp - Static Global wrapper -------------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements the ManagedStatic class and llvm_shutdown().; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/ManagedStatic.cpp:42,wrap,wrapper,42,interpreter/llvm-project/llvm/lib/Support/ManagedStatic.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/ManagedStatic.cpp,1,['wrap'],['wrapper']
Integrability,"//===-- Mips.h - Top-level interface for Mips representation ----*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file contains the entry points for global functions defined in; // the LLVM Mips back-end.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Mips/Mips.h:27,interface,interface,27,interpreter/llvm-project/llvm/lib/Target/Mips/Mips.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Mips/Mips.h,1,['interface'],['interface']
Integrability,"//===-- Mips16ISelLowering.h - Mips16 DAG Lowering Interface ----*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // Subclass of MipsTargetLowering specialized for mips16.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Mips/Mips16ISelLowering.cpp:51,Interface,Interface,51,interpreter/llvm-project/llvm/lib/Target/Mips/Mips16ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Mips/Mips16ISelLowering.cpp,2,['Interface'],['Interface']
Integrability,"//===-- ModelInjector.h -----------------------------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; ///; /// \file; /// This file defines the clang::ento::ModelInjector class which implements the; /// clang::CodeInjector interface. This class is responsible for injecting; /// function definitions that were synthesized from model files.; ///; /// Model files allow definitions of functions to be lazily constituted for functions; /// which lack bodies in the original source code. This allows the analyzer; /// to more precisely analyze code that calls such functions, analyzing the; /// artificial definitions (which typically approximate the semantics of the; /// called function) when called by client code. These definitions are; /// reconstituted lazily, on-demand, by the static analyzer engine.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Frontend/ModelInjector.h:497,interface,interface,497,interpreter/llvm-project/clang/lib/StaticAnalyzer/Frontend/ModelInjector.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Frontend/ModelInjector.h,2,"['inject', 'interface']","['injecting', 'interface']"
Integrability,"//===-- MsgPack.h - MessagePack Constants -----------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; ///; /// \file; /// This file contains constants used for implementing MessagePack support.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/BinaryFormat/MsgPack.h:20,Message,MessagePack,20,interpreter/llvm-project/llvm/include/llvm/BinaryFormat/MsgPack.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/BinaryFormat/MsgPack.h,2,['Message'],['MessagePack']
Integrability,"//===-- MsgPackDocumentYAML.cpp - MsgPack Document YAML interface -------*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; /// This file implements YAMLIO on a msgpack::Document.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/BinaryFormat/MsgPackDocumentYAML.cpp:56,interface,interface,56,interpreter/llvm-project/llvm/lib/BinaryFormat/MsgPackDocumentYAML.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/BinaryFormat/MsgPackDocumentYAML.cpp,1,['interface'],['interface']
Integrability,"//===-- MultiplexConsumer.h - AST Consumer for PCH Generation ---*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file declares the MultiplexConsumer class, which can be used to; // multiplex ASTConsumer and SemaConsumer messages to many consumers.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Frontend/MultiplexConsumer.h:495,message,messages,495,interpreter/llvm-project/clang/include/clang/Frontend/MultiplexConsumer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Frontend/MultiplexConsumer.h,1,['message'],['messages']
Integrability,"//===-- NVPTX.h - Top-level interface for NVPTX representation --*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file contains the entry points for global functions defined in; // the LLVM NVPTX back-end.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/NVPTX/NVPTX.h:28,interface,interface,28,interpreter/llvm-project/llvm/lib/Target/NVPTX/NVPTX.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/NVPTX/NVPTX.h,1,['interface'],['interface']
Integrability,"//===-- NVPTXAsmPrinter.cpp - NVPTX LLVM assembly writer ------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file contains a printer that converts from our internal representation; // of machine-dependent LLVM code to NVPTX assembly language.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/NVPTX/NVPTXAsmPrinter.cpp:474,depend,dependent,474,interpreter/llvm-project/llvm/lib/Target/NVPTX/NVPTXAsmPrinter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/NVPTX/NVPTXAsmPrinter.cpp,1,['depend'],['dependent']
Integrability,"//===-- NVPTXAsmPrinter.h - NVPTX LLVM assembly writer ----------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file contains a printer that converts from our internal representation; // of machine-dependent LLVM code to NVPTX assembly language.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/NVPTX/NVPTXAsmPrinter.h:474,depend,dependent,474,interpreter/llvm-project/llvm/lib/Target/NVPTX/NVPTXAsmPrinter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/NVPTX/NVPTXAsmPrinter.h,1,['depend'],['dependent']
Integrability,"//===-- NVPTXISelLowering.cpp - NVPTX DAG Lowering Implementation ---------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines the interfaces that NVPTX uses to lower LLVM code into a; // selection DAG.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/NVPTX/NVPTXISelLowering.cpp:405,interface,interfaces,405,interpreter/llvm-project/llvm/lib/Target/NVPTX/NVPTXISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/NVPTX/NVPTXISelLowering.cpp,1,['interface'],['interfaces']
Integrability,"//===-- NVPTXISelLowering.h - NVPTX DAG Lowering Interface ------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines the interfaces that NVPTX uses to lower LLVM code into a; // selection DAG.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/NVPTX/NVPTXISelLowering.h:49,Interface,Interface,49,interpreter/llvm-project/llvm/lib/Target/NVPTX/NVPTXISelLowering.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/NVPTX/NVPTXISelLowering.h,2,"['Interface', 'interface']","['Interface', 'interfaces']"
Integrability,"//===-- NVPTXMachineFunctionInfo.h - NVPTX-specific Function Info --------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This class is attached to a MachineFunction instance and tracks target-; // dependent information; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/NVPTX/NVPTXMachineFunctionInfo.h:458,depend,dependent,458,interpreter/llvm-project/llvm/lib/Target/NVPTX/NVPTXMachineFunctionInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/NVPTX/NVPTXMachineFunctionInfo.h,1,['depend'],['dependent']
Integrability,"//===-- OProfileWrapper.cpp - OProfile JIT API Wrapper implementation -----===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements the interface in OProfileWrapper.h. It is responsible; // for loading the opagent dynamic library when the first call to an op_; // function occurs.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ExecutionEngine/OProfileJIT/OProfileWrapper.cpp:47,Wrap,Wrapper,47,interpreter/llvm-project/llvm/lib/ExecutionEngine/OProfileJIT/OProfileWrapper.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ExecutionEngine/OProfileJIT/OProfileWrapper.cpp,2,"['Wrap', 'interface']","['Wrapper', 'interface']"
Integrability,"//===-- OProfileWrapper.h - OProfile JIT API Wrapper ------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; // This file defines a OProfileWrapper object that detects if the oprofile; // daemon is running, and provides wrappers for opagent functions used to; // communicate with the oprofile JIT interface. The dynamic library libopagent; // does not need to be linked directly as this object lazily loads the library; // when the first op_ function is called.; //; // See http://oprofile.sourceforge.net/doc/devel/jit-interface.html for the; // definition of the interface.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/OProfileWrapper.h:45,Wrap,Wrapper,45,interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/OProfileWrapper.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/OProfileWrapper.h,5,"['Wrap', 'interface', 'wrap']","['Wrapper', 'interface', 'wrappers']"
Integrability,"//===-- ObjectFileInterface.h - MU interface utils for objects --*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // Utilities for building MaterializationUnit::Interface objects from; // object files.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/Orc/ObjectFileInterface.h:35,interface,interface,35,interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/Orc/ObjectFileInterface.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/Orc/ObjectFileInterface.h,2,"['Interface', 'interface']","['Interface', 'interface']"
Integrability,"//===-- OptimizedStructLayout.h - Struct layout algorithm ---------*- C++ -*-=//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; ///; /// \file; /// This file provides an interface for laying out a sequence of fields; /// as a struct in a way that attempts to minimizes the total space; /// requirements of the struct while still satisfying the layout; /// requirements of the individual fields. The resulting layout may be; /// substantially more compact than simply laying out the fields in their; /// original order.; ///; /// Fields may be pre-assigned fixed offsets. They may also be given sizes; /// that are not multiples of their alignments. There is no currently no; /// way to describe that a field has interior padding that other fields may; /// be allocated into.; ///; /// This algorithm does not claim to be ""optimal"" for several reasons:; ///; /// - First, it does not guarantee that the result is minimal in size.; /// There is no known efficient algoorithm to achieve minimality for; /// unrestricted inputs. Nonetheless, this algorithm; ///; /// - Second, there are other ways that a struct layout could be optimized; /// besides space usage, such as locality. This layout may have a mixed; /// impact on locality: less overall memory may be used, but adjacent; /// fields in the original array may be moved further from one another.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/OptimizedStructLayout.h:418,interface,interface,418,interpreter/llvm-project/llvm/include/llvm/Support/OptimizedStructLayout.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/OptimizedStructLayout.h,1,['interface'],['interface']
Integrability,"//===-- OverflowInstAnalysis.h - Utils to fold overflow insts ----*- C++ -*-==//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file holds routines to help analyse overflow instructions; // and fold them into constants or other overflow instructions; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/OverflowInstAnalysis.h:399,rout,routines,399,interpreter/llvm-project/llvm/include/llvm/Analysis/OverflowInstAnalysis.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/OverflowInstAnalysis.h,1,['rout'],['routines']
Integrability,"//===-- PPC.h - Top-level interface for PowerPC Target ----------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file contains the entry points for global functions defined in the LLVM; // PowerPC back-end.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPC.h:26,interface,interface,26,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPC.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPC.h,1,['interface'],['interface']
Integrability,"//===-- PPCAsmPrinter.cpp - Print machine instrs to PowerPC assembly ------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file contains a printer that converts from our internal representation; // of machine-dependent LLVM code to PowerPC assembly language. This printer is; // the output mechanism used by `llc'.; //; // Documentation at http://developer.apple.com/documentation/DeveloperTools/; // Reference/Assembler/ASMIntroduction/chapter_1_section_1.html; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCAsmPrinter.cpp:474,depend,dependent,474,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCAsmPrinter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCAsmPrinter.cpp,1,['depend'],['dependent']
Integrability,"//===-- PPCISelLowering.h - PPC32 DAG Lowering Interface --------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines the interfaces that PPC uses to lower LLVM code into a; // selection DAG.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelLowering.h:47,Interface,Interface,47,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelLowering.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelLowering.h,2,"['Interface', 'interface']","['Interface', 'interfaces']"
Integrability,"//===-- PPCTOCRegDeps.cpp - Add Extra TOC Register Dependencies -----------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // When resolving an address using the ELF ABI TOC pointer, two relocations are; // generally required: one for the high part and one for the low part. Only; // the high part generally explicitly depends on r2 (the TOC pointer). And, so,; // we might produce code like this:; //; // .Ltmp526:; // addis 3, 2, .LC12@toc@ha; // .Ltmp1628:; // std 2, 40(1); // ld 5, 0(27); // ld 2, 8(27); // ld 11, 16(27); // ld 3, .LC12@toc@l(3); // rldicl 4, 4, 0, 32; // mtctr 5; // bctrl; // ld 2, 40(1); //; // And there is nothing wrong with this code, as such, but there is a linker bug; // in binutils (https://sourceware.org/bugzilla/show_bug.cgi?id=18414) that will; // misoptimize this code sequence to this:; // nop; // std r2,40(r1); // ld r5,0(r27); // ld r2,8(r27); // ld r11,16(r27); // ld r3,-32472(r2); // clrldi r4,r4,32; // mtctr r5; // bctrl; // ld r2,40(r1); // because the linker does not know (and does not check) that the value in r2; // changed in between the instruction using the .LC12@toc@ha (TOC-relative); // relocation and the instruction using the .LC12@toc@l(3) relocation.; // Because it finds these instructions using the relocations (and not by; // scanning the instructions), it has been asserted that there is no good way; // to detect the change of r2 in between. As a result, this bug may never be; // fixed (i.e. it may become part of the definition of the ABI). GCC was; // updated to add extra dependencies on r2 to instructions using the @toc@l; // relocations to avoid this problem, and we'll do the same here.; //; // This is done as a separate pass because:; // 1. These extra r2 dependencie",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCTOCRegDeps.cpp:51,Depend,Dependencies,51,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCTOCRegDeps.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCTOCRegDeps.cpp,2,"['Depend', 'depend']","['Dependencies', 'depends']"
Integrability,"//===-- Passes.h - Target independent code generation passes ----*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines interfaces to access the target independent code generation; // passes provided by the LLVM backend.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/Passes.h:401,interface,interfaces,401,interpreter/llvm-project/llvm/include/llvm/CodeGen/Passes.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/Passes.h,1,['interface'],['interfaces']
Integrability,"//===-- PerfJITEventListener.cpp - Tell Linux's perf about JITted code ----===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines a JITEventListener object that tells perf about JITted; // functions, including source line information.; //; // Documentation for perf jit integration is available at:; // https://git.kernel.org/cgit/linux/kernel/git/torvalds/linux.git/tree/tools/perf/Documentation/jitdump-specification.txt; // https://git.kernel.org/cgit/linux/kernel/git/torvalds/linux.git/tree/tools/perf/Documentation/jit-interface.txt; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ExecutionEngine/PerfJITEvents/PerfJITEventListener.cpp:541,integrat,integration,541,interpreter/llvm-project/llvm/lib/ExecutionEngine/PerfJITEvents/PerfJITEventListener.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ExecutionEngine/PerfJITEvents/PerfJITEventListener.cpp,2,"['integrat', 'interface']","['integration', 'interface']"
Integrability,"//===-- R600ISelLowering.h - R600 DAG Lowering Interface -*- C++ -*--------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; /// \file; /// R600 DAG Lowering interface definition; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/R600ISelLowering.h:47,Interface,Interface,47,interpreter/llvm-project/llvm/lib/Target/AMDGPU/R600ISelLowering.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/R600ISelLowering.h,2,"['Interface', 'interface']","['Interface', 'interface']"
Integrability,"//===-- R600InstPrinter.h - AMDGPU MC Inst -> ASM interface -----*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/MCTargetDesc/R600InstPrinter.h:50,interface,interface,50,interpreter/llvm-project/llvm/lib/Target/AMDGPU/MCTargetDesc/R600InstPrinter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/MCTargetDesc/R600InstPrinter.h,1,['interface'],['interface']
Integrability,"//===-- R600InstrInfo.h - R600 Instruction Info Interface -------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; /// \file; /// Interface definition for R600InstrInfo; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/R600InstrInfo.h:48,Interface,Interface,48,interpreter/llvm-project/llvm/lib/Target/AMDGPU/R600InstrInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/R600InstrInfo.h,2,['Interface'],['Interface']
Integrability,"//===-- R600MachineScheduler.cpp - R600 Scheduler Interface -*- C++ -*-----===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; /// \file; /// R600 Machine Scheduler interface; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/R600MachineScheduler.cpp:50,Interface,Interface,50,interpreter/llvm-project/llvm/lib/Target/AMDGPU/R600MachineScheduler.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/R600MachineScheduler.cpp,2,"['Interface', 'interface']","['Interface', 'interface']"
Integrability,"//===-- R600MachineScheduler.h - R600 Scheduler Interface -*- C++ -*-------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; /// \file; /// R600 Machine Scheduler interface; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/R600MachineScheduler.h:48,Interface,Interface,48,interpreter/llvm-project/llvm/lib/Target/AMDGPU/R600MachineScheduler.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/R600MachineScheduler.h,2,"['Interface', 'interface']","['Interface', 'interface']"
Integrability,"//===-- R600RegisterInfo.h - R600 Register Info Interface ------*- C++ -*--===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; /// \file; /// Interface definition for R600RegisterInfo; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/R600RegisterInfo.h:48,Interface,Interface,48,interpreter/llvm-project/llvm/lib/Target/AMDGPU/R600RegisterInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/R600RegisterInfo.h,2,['Interface'],['Interface']
Integrability,"//===-- R600TargetMachine.h - AMDGPU TargetMachine Interface ----*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; /// \file; /// The AMDGPU TargetMachine interface definition for hw codegen targets.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/R600TargetMachine.h:51,Interface,Interface,51,interpreter/llvm-project/llvm/lib/Target/AMDGPU/R600TargetMachine.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/R600TargetMachine.h,2,"['Interface', 'interface']","['Interface', 'interface']"
Integrability,"//===-- RISCV.h - Top-level interface for RISC-V ----------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file contains the entry points for global functions defined in the LLVM; // RISC-V back-end.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/RISCV.h:28,interface,interface,28,interpreter/llvm-project/llvm/lib/Target/RISCV/RISCV.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/RISCV.h,1,['interface'],['interface']
Integrability,"//===-- RISCVAsmPrinter.cpp - RISC-V LLVM assembly writer -----------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file contains a printer that converts from our internal representation; // of machine-dependent LLVM code to the RISC-V assembly language.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVAsmPrinter.cpp:474,depend,dependent,474,interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVAsmPrinter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVAsmPrinter.cpp,1,['depend'],['dependent']
Integrability,"//===-- RISCVISelLowering.cpp - RISC-V DAG Lowering Implementation -------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines the interfaces that RISC-V uses to lower LLVM code into a; // selection DAG.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVISelLowering.cpp:404,interface,interfaces,404,interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVISelLowering.cpp,1,['interface'],['interfaces']
Integrability,"//===-- RISCVISelLowering.h - RISC-V DAG Lowering Interface -----*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines the interfaces that RISC-V uses to lower LLVM code into a; // selection DAG.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVISelLowering.h:50,Interface,Interface,50,interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVISelLowering.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVISelLowering.h,2,"['Interface', 'interface']","['Interface', 'interfaces']"
Integrability,"//===-- RTDyldMemoryManager.cpp - Memory manager for MC-JIT -----*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // Interface of the runtime dynamic memory manager base class.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/RTDyldMemoryManager.h:383,Interface,Interface,383,interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/RTDyldMemoryManager.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/RTDyldMemoryManager.h,1,['Interface'],['Interface']
Integrability,"//===-- RegionPrinter.h - Region printer external interface -----*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines external functions that can be called to explicitly; // instantiate the region printer.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/RegionPrinter.h:50,interface,interface,50,interpreter/llvm-project/llvm/include/llvm/Analysis/RegionPrinter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/RegionPrinter.h,1,['interface'],['interface']
Integrability,"//===-- RemarkSerializer.h - Remark serialization interface -----*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file provides an interface for serializing remarks to different formats.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Remarks/RemarkSerializer.h:50,interface,interface,50,interpreter/llvm-project/llvm/include/llvm/Remarks/RemarkSerializer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Remarks/RemarkSerializer.h,2,['interface'],['interface']
Integrability,"//===-- ResourceScriptCppFilter.cpp ----------------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===---------------------------------------------------------------------===//; //; // This file implements an interface defined in ResourceScriptCppFilter.h.; //; //===---------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-rc/ResourceScriptCppFilter.cpp:405,interface,interface,405,interpreter/llvm-project/llvm/tools/llvm-rc/ResourceScriptCppFilter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-rc/ResourceScriptCppFilter.cpp,1,['interface'],['interface']
Integrability,"//===-- ResourceScriptToken.cpp ---------------------------------*- C++-*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===---------------------------------------------------------------------===//; //; // This file implements an interface defined in ResourceScriptToken.h.; // In particular, it defines an .rc script tokenizer.; //; //===---------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-rc/ResourceScriptToken.cpp:405,interface,interface,405,interpreter/llvm-project/llvm/tools/llvm-rc/ResourceScriptToken.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-rc/ResourceScriptToken.cpp,1,['interface'],['interface']
Integrability,"//===-- ResourceScriptToken.h -----------------------------------*- C++-*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===---------------------------------------------------------------------===//; //; // This declares the .rc script tokens and defines an interface for tokenizing; // the input data. The list of available tokens is located at; // ResourceScriptTokenList.def.; //; // Note that the tokenizer does not support preprocessor directives. The; // preprocessor should do its work on the .rc file before running llvm-rc.; //; // As for now, it is possible to parse ASCII files only (the behavior on; // UTF files might be undefined). However, it already consumes UTF-8 BOM, if; // there is any. Thus, ASCII-compatible UTF-8 files are tokenized correctly.; //; // Ref: msdn.microsoft.com/en-us/library/windows/desktop/aa380599(v=vs.85).aspx; //; //===---------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-rc/ResourceScriptToken.h:432,interface,interface,432,interpreter/llvm-project/llvm/tools/llvm-rc/ResourceScriptToken.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-rc/ResourceScriptToken.h,1,['interface'],['interface']
Integrability,"//===-- RuntimeDyldImpl.h - Run-time dynamic linker for MC-JIT --*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // Interface for the implementations of runtime dynamic linker facilities.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldImpl.h:383,Interface,Interface,383,interpreter/llvm-project/llvm/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldImpl.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldImpl.h,1,['Interface'],['Interface']
Integrability,"//===-- SIISelLowering.h - SI DAG Lowering Interface ------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; /// \file; /// SI DAG Lowering interface definition; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIISelLowering.h:43,Interface,Interface,43,interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIISelLowering.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIISelLowering.h,2,"['Interface', 'interface']","['Interface', 'interface']"
Integrability,"//===-- SILowerI1Copies.h --------------------------------------*- C++ -*--===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; /// \file; /// Interface definition of the PhiLoweringHelper class that implements lane; /// mask merging algorithm for divergent i1 phis.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SILowerI1Copies.h:395,Interface,Interface,395,interpreter/llvm-project/llvm/lib/Target/AMDGPU/SILowerI1Copies.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SILowerI1Copies.h,1,['Interface'],['Interface']
Integrability,"//===-- SIMachineScheduler.cpp - SI Scheduler Interface -------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; /// \file; /// SI Machine Scheduler interface; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIMachineScheduler.cpp:46,Interface,Interface,46,interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIMachineScheduler.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIMachineScheduler.cpp,2,"['Interface', 'interface']","['Interface', 'interface']"
Integrability,"//===-- SIMachineScheduler.h - SI Scheduler Interface -----------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; /// \file; /// SI Machine Scheduler interface; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIMachineScheduler.h:44,Interface,Interface,44,interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIMachineScheduler.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIMachineScheduler.h,2,"['Interface', 'interface']","['Interface', 'interface']"
Integrability,"//===-- SIRegisterInfo.h - SI Register Info Interface ----------*- C++ -*--===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; /// \file; /// Interface definition for SIRegisterInfo; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIRegisterInfo.h:44,Interface,Interface,44,interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIRegisterInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIRegisterInfo.h,2,['Interface'],['Interface']
Integrability,"//===-- SPIRV.h - Top-level interface for SPIR-V representation -*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SPIRV/SPIRV.h:28,interface,interface,28,interpreter/llvm-project/llvm/lib/Target/SPIRV/SPIRV.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SPIRV/SPIRV.h,1,['interface'],['interface']
Integrability,"//===-- SPIRVAsmPrinter.cpp - SPIR-V LLVM assembly writer ------*- C++ -*--===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file contains a printer that converts from our internal representation; // of machine-dependent LLVM code to the SPIR-V assembly language.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SPIRV/SPIRVAsmPrinter.cpp:474,depend,dependent,474,interpreter/llvm-project/llvm/lib/Target/SPIRV/SPIRVAsmPrinter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SPIRV/SPIRVAsmPrinter.cpp,1,['depend'],['dependent']
Integrability,"//===-- SPIRVISelLowering.h - SPIR-V DAG Lowering Interface -----*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines the interfaces that SPIR-V uses to lower LLVM code into a; // selection DAG.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SPIRV/SPIRVISelLowering.h:50,Interface,Interface,50,interpreter/llvm-project/llvm/lib/Target/SPIRV/SPIRVISelLowering.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SPIRV/SPIRVISelLowering.h,2,"['Interface', 'interface']","['Interface', 'interfaces']"
Integrability,"//===-- SemaConsumer.cpp - Abstract interface for AST semantics -*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaConsumer.cpp:36,interface,interface,36,interpreter/llvm-project/clang/lib/Sema/SemaConsumer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaConsumer.cpp,1,['interface'],['interface']
Integrability,"//===-- Sparc.h - Top-level interface for Sparc representation --*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file contains the entry points for global functions defined in the LLVM; // Sparc back-end.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Sparc/Sparc.h:28,interface,interface,28,interpreter/llvm-project/llvm/lib/Target/Sparc/Sparc.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Sparc/Sparc.h,1,['interface'],['interface']
Integrability,"//===-- SparcAsmPrinter.cpp - Sparc LLVM assembly writer ------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file contains a printer that converts from our internal representation; // of machine-dependent LLVM code to GAS-format SPARC assembly language.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Sparc/SparcAsmPrinter.cpp:474,depend,dependent,474,interpreter/llvm-project/llvm/lib/Target/Sparc/SparcAsmPrinter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Sparc/SparcAsmPrinter.cpp,1,['depend'],['dependent']
Integrability,"//===-- SparcISelLowering.cpp - Sparc DAG Lowering Implementation ---------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements the interfaces that Sparc uses to lower LLVM code into a; // selection DAG.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Sparc/SparcISelLowering.cpp:408,interface,interfaces,408,interpreter/llvm-project/llvm/lib/Target/Sparc/SparcISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Sparc/SparcISelLowering.cpp,1,['interface'],['interfaces']
Integrability,"//===-- SparcISelLowering.h - Sparc DAG Lowering Interface ------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines the interfaces that Sparc uses to lower LLVM code into a; // selection DAG.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Sparc/SparcISelLowering.h:49,Interface,Interface,49,interpreter/llvm-project/llvm/lib/Target/Sparc/SparcISelLowering.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Sparc/SparcISelLowering.h,2,"['Interface', 'interface']","['Interface', 'interfaces']"
Integrability,"//===-- StackFrameLayoutAnalysisPass.cpp; //------------------------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // StackFrameLayoutAnalysisPass implementation. Outputs information about the; // layout of the stack frame, using the remarks interface. On the CLI it prints; // a textual representation of the stack frame. When possible it prints the; // values that occupy a stack slot using any available debug information. Since; // output is remarks based, it is also available in a machine readable file; // format, such as YAML.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/StackFrameLayoutAnalysisPass.cpp:512,interface,interface,512,interpreter/llvm-project/llvm/lib/CodeGen/StackFrameLayoutAnalysisPass.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/StackFrameLayoutAnalysisPass.cpp,1,['interface'],['interface']
Integrability,"//===-- SystemZISelLowering.h - SystemZ DAG lowering interface --*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines the interfaces that SystemZ uses to lower LLVM code into a; // selection DAG.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZISelLowering.h:53,interface,interface,53,interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZISelLowering.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZISelLowering.h,2,['interface'],"['interface', 'interfaces']"
Integrability,"//===-- TapiUniversal.h - Text-based Dynamic Library Stub -------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file declares the TapiUniversal interface.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Object/TapiUniversal.h:420,interface,interface,420,interpreter/llvm-project/llvm/include/llvm/Object/TapiUniversal.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Object/TapiUniversal.h,1,['interface'],['interface']
Integrability,"//===-- ToolRunner.cpp ----------------------------------------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements the interfaces described in the ToolRunner.h file.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/bugpoint/ToolRunner.cpp:408,interface,interfaces,408,interpreter/llvm-project/llvm/tools/bugpoint/ToolRunner.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/bugpoint/ToolRunner.cpp,1,['interface'],['interfaces']
Integrability,"//===-- VE.h - Top-level interface for VE representation --------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file contains the entry points for global functions defined in the LLVM; // VE back-end.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/VE/VE.h:25,interface,interface,25,interpreter/llvm-project/llvm/lib/Target/VE/VE.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/VE/VE.h,1,['interface'],['interface']
Integrability,"//===-- VEAsmPrinter.cpp - VE LLVM assembly writer ------------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file contains a printer that converts from our internal representation; // of machine-dependent LLVM code to GAS-format VE assembly language.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/VE/VEAsmPrinter.cpp:474,depend,dependent,474,interpreter/llvm-project/llvm/lib/Target/VE/VEAsmPrinter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/VE/VEAsmPrinter.cpp,1,['depend'],['dependent']
Integrability,"//===-- VECustomDAG.h - VE Custom DAG Nodes ------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines the interfaces that VE uses to lower LLVM code into a; // selection DAG.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/VE/VECustomDAG.cpp:396,interface,interfaces,396,interpreter/llvm-project/llvm/lib/Target/VE/VECustomDAG.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/VE/VECustomDAG.cpp,1,['interface'],['interfaces']
Integrability,"//===-- VEISelLowering.cpp - VE DAG Lowering Implementation ---------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements the interfaces that VE uses to lower LLVM code into a; // selection DAG.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/VE/VEISelLowering.cpp:408,interface,interfaces,408,interpreter/llvm-project/llvm/lib/Target/VE/VEISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/VE/VEISelLowering.cpp,1,['interface'],['interfaces']
Integrability,"//===-- VEISelLowering.h - VE DAG Lowering Interface ------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines the interfaces that VE uses to lower LLVM code into a; // selection DAG.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/VE/VEISelLowering.h:43,Interface,Interface,43,interpreter/llvm-project/llvm/lib/Target/VE/VEISelLowering.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/VE/VEISelLowering.h,2,"['Interface', 'interface']","['Interface', 'interfaces']"
Integrability,"//===-- VPlanHCFGBuilder.h --------------------------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; ///; /// \file; /// This file defines the VPlanHCFGBuilder class which contains the public; /// interface (buildHierarchicalCFG) to build a VPlan-based Hierarchical CFG; /// (H-CFG) for an incoming IR.; ///; /// A H-CFG in VPlan is a control-flow graph whose nodes are VPBasicBlocks; /// and/or VPRegionBlocks (i.e., other H-CFGs). The outermost H-CFG of a VPlan; /// consists of a VPRegionBlock, denoted Top Region, which encloses any other; /// VPBlockBase in the H-CFG. This guarantees that any VPBlockBase in the H-CFG; /// other than the Top Region will have a parent VPRegionBlock and allows us; /// to easily add more nodes before/after the main vector loop (such as the; /// reduction epilogue).; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/VPlanHCFGBuilder.h:472,interface,interface,472,interpreter/llvm-project/llvm/lib/Transforms/Vectorize/VPlanHCFGBuilder.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/VPlanHCFGBuilder.h,1,['interface'],['interface']
Integrability,"//===-- Verifier.cpp - Implement the Module Verifier -----------------------==//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines the function verifier interface, that can be used for some; // basic correctness checking of input to the system.; //; // Note that this does not provide full `Java style' security and verifications,; // instead it just tries to ensure that code is well-formed.; //; // * Both of a binary operator's parameters are of the same type; // * Verify that the indices of mem access instructions match other operands; // * Verify that arithmetic and other things are only performed on first-class; // types. Verify that shifts & logicals only happen on integrals f.e.; // * All of the constants in a switch statement are of the correct type; // * The code is in valid SSA form; // * It should be illegal to put a label into any other type (like a structure); // or to return one. [except constant arrays!]; // * Only phi nodes can be self referential: 'add i32 %0, %0 ; <int>:0' is bad; // * PHI nodes must have an entry for each predecessor, with no extras.; // * PHI nodes must be the first thing in a basic block, all grouped together; // * All basic blocks should only end with terminator insts, not contain them; // * The entry node to a function must not have predecessors; // * All Instructions must be embedded into a basic block; // * Functions cannot take a void-typed parameter; // * Verify that a function's argument list agrees with it's declared type.; // * It is illegal to specify a name for a void value.; // * It is illegal to have a internal global value with no initializer; // * It is illegal to have a ret instruction that returns a value that does not; // agree with the function retu",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/Verifier.cpp:423,interface,interface,423,interpreter/llvm-project/llvm/lib/IR/Verifier.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/Verifier.cpp,1,['interface'],['interface']
Integrability,"//===-- WebAssembly.h - Top-level interface for WebAssembly ----*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; ///; /// \file; /// This file contains the entry points for global functions defined in; /// the LLVM WebAssembly back-end.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssembly.h:34,interface,interface,34,interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssembly.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssembly.h,1,['interface'],['interface']
Integrability,"//===-- WebAssemblyAsmPrinter.cpp - WebAssembly LLVM assembly writer ------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; ///; /// \file; /// This file contains a printer that converts from our internal; /// representation of machine-dependent LLVM code to the WebAssembly assembly; /// language.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyAsmPrinter.cpp:488,depend,dependent,488,interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyAsmPrinter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyAsmPrinter.cpp,1,['depend'],['dependent']
Integrability,"//===-- WebAssemblyFixFunctionBitcasts.cpp - Fix function bitcasts --------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; ///; /// \file; /// Fix bitcasted functions.; ///; /// WebAssembly requires caller and callee signatures to match, however in LLVM,; /// some amount of slop is vaguely permitted. Detect mismatch by looking for; /// bitcasts of functions and rewrite them to use wrapper functions instead.; ///; /// This doesn't catch all cases, such as when a function's address is taken in; /// one place and casted in another, but it works for many common cases.; ///; /// Note that LLVM already optimizes away function bitcasts in common cases by; /// dropping arguments as needed, so this pass only ends up getting used in less; /// common cases.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyFixFunctionBitcasts.cpp:637,wrap,wrapper,637,interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyFixFunctionBitcasts.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyFixFunctionBitcasts.cpp,1,['wrap'],['wrapper']
Integrability,"//===-- Wrapper for C standard assert.h declarations on the GPU ------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/llvm_libc_wrappers/assert.h:8,Wrap,Wrapper,8,interpreter/llvm-project/clang/lib/Headers/llvm_libc_wrappers/assert.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/llvm_libc_wrappers/assert.h,1,['Wrap'],['Wrapper']
Integrability,"//===-- Wrapper for C standard ctype.h declarations on the GPU ------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/llvm_libc_wrappers/ctype.h:8,Wrap,Wrapper,8,interpreter/llvm-project/clang/lib/Headers/llvm_libc_wrappers/ctype.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/llvm_libc_wrappers/ctype.h,1,['Wrap'],['Wrapper']
Integrability,"//===-- Wrapper for C standard inttypes.h declarations on the GPU ---------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/llvm_libc_wrappers/inttypes.h:8,Wrap,Wrapper,8,interpreter/llvm-project/clang/lib/Headers/llvm_libc_wrappers/inttypes.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/llvm_libc_wrappers/inttypes.h,1,['Wrap'],['Wrapper']
Integrability,"//===-- Wrapper for C standard stdio.h declarations on the GPU ------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/llvm_libc_wrappers/stdio.h:8,Wrap,Wrapper,8,interpreter/llvm-project/clang/lib/Headers/llvm_libc_wrappers/stdio.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/llvm_libc_wrappers/stdio.h,1,['Wrap'],['Wrapper']
Integrability,"//===-- Wrapper for C standard stdlib.h declarations on the GPU -----------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/llvm_libc_wrappers/stdlib.h:8,Wrap,Wrapper,8,interpreter/llvm-project/clang/lib/Headers/llvm_libc_wrappers/stdlib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/llvm_libc_wrappers/stdlib.h,1,['Wrap'],['Wrapper']
Integrability,"//===-- Wrapper for C standard string.h declarations on the GPU -----------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/llvm_libc_wrappers/string.h:8,Wrap,Wrapper,8,interpreter/llvm-project/clang/lib/Headers/llvm_libc_wrappers/string.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/llvm_libc_wrappers/string.h,1,['Wrap'],['Wrapper']
Integrability,"//===-- Wrapper for C standard time.h declarations on the GPU -------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/llvm_libc_wrappers/time.h:8,Wrap,Wrapper,8,interpreter/llvm-project/clang/lib/Headers/llvm_libc_wrappers/time.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/llvm_libc_wrappers/time.h,1,['Wrap'],['Wrapper']
Integrability,"//===-- X86.h - Top-level interface for X86 representation ------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file contains the entry points for global functions defined in the x86; // target library, as used by the LLVM JIT.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86.h:26,interface,interface,26,interpreter/llvm-project/llvm/lib/Target/X86/X86.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86.h,1,['interface'],['interface']
Integrability,"//===-- X86AsmPrinter.cpp - Convert X86 LLVM code to AT&T assembly --------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file contains a printer that converts from our internal representation; // of machine-dependent LLVM code to X86 machine code.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86AsmPrinter.cpp:474,depend,dependent,474,interpreter/llvm-project/llvm/lib/Target/X86/X86AsmPrinter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86AsmPrinter.cpp,1,['depend'],['dependent']
Integrability,"//===-- X86DisassemblerDecoderInternal.h - Disassembler decoder -*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file is part of the X86 Disassembler.; // It contains the public interface of the instruction decoder.; // Documentation for the disassembler can be found in X86Disassembler.h.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/Disassembler/X86DisassemblerDecoder.h:453,interface,interface,453,interpreter/llvm-project/llvm/lib/Target/X86/Disassembler/X86DisassemblerDecoder.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/Disassembler/X86DisassemblerDecoder.h,1,['interface'],['interface']
Integrability,"//===-- X86FixupBWInsts.cpp - Fixup Byte or Word instructions -----------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; /// \file; /// This file defines the pass that looks through the machine instructions; /// late in the compilation, and finds byte or word instructions that; /// can be profitably replaced with 32 bit instructions that give equivalent; /// results for the bits of the results that are used. There are two possible; /// reasons to do this.; ///; /// One reason is to avoid false-dependences on the upper portions; /// of the registers. Only instructions that have a destination register; /// which is not in any of the source registers can be affected by this.; /// Any instruction where one of the source registers is also the destination; /// register is unaffected, because it has a true dependence on the source; /// register already. So, this consideration primarily affects load; /// instructions and register-to-register moves. It would; /// seem like cmov(s) would also be affected, but because of the way cmov is; /// really implemented by most machines as reading both the destination and; /// and source registers, and then ""merging"" the two based on a condition,; /// it really already should be considered as having a true dependence on the; /// destination register as well.; ///; /// The other reason to do this is for potential code size savings. Word; /// operations need an extra override byte compared to their 32 bit; /// versions. So this can convert many word operations to their larger; /// size, saving a byte in encoding. This could introduce partial register; /// dependences where none existed however. As an example take:; /// orw ax, $0x1000; /// addw ax, $3; /// now if this were to get transformed",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86FixupBWInsts.cpp:752,depend,dependences,752,interpreter/llvm-project/llvm/lib/Target/X86/X86FixupBWInsts.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86FixupBWInsts.cpp,1,['depend'],['dependences']
Integrability,"//===-- X86ISelLowering.cpp - X86 DAG Lowering Implementation -------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines the interfaces that X86 uses to lower LLVM code into a; // selection DAG.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp:405,interface,interfaces,405,interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,1,['interface'],['interfaces']
Integrability,"//===-- X86ISelLowering.h - X86 DAG Lowering Interface ----------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines the interfaces that X86 uses to lower LLVM code into a; // selection DAG.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.h:45,Interface,Interface,45,interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.h,2,"['Interface', 'interface']","['Interface', 'interfaces']"
Integrability,"//===-- X86InstrBuilder.h - Functions to aid building x86 insts -*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file exposes functions that may be used with BuildMI from the; // MachineInstrBuilder.h file to handle X86'isms in a clean way.; //; // The BuildMem function may be used with the BuildMI function to add entire; // memory references in a single, typed, function call. X86 memory references; // can be very complex expressions (described in the README), so wrapping them; // up behind an easier to use interface makes sense. Descriptions of the; // functions are included below.; //; // For reference, the order of operands for memory references is:; // (Operand), Base, Scale, Index, Displacement.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86InstrBuilder.h:743,wrap,wrapping,743,interpreter/llvm-project/llvm/lib/Target/X86/X86InstrBuilder.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86InstrBuilder.h,2,"['interface', 'wrap']","['interface', 'wrapping']"
Integrability,"//===-- X86InstrFoldTables.h - X86 Instruction Folding Tables ---*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file contains the interface to query the X86 memory folding tables.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86InstrFoldTables.h:406,interface,interface,406,interpreter/llvm-project/llvm/lib/Target/X86/X86InstrFoldTables.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86InstrFoldTables.h,1,['interface'],['interface']
Integrability,"//===-- X86LowerAMXIntrinsics.cpp -X86 Scalarize AMX Intrinsics------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; /// \file Pass to transform amx intrinsics to scalar operations.; /// This pass is always enabled and it skips when it is not -O0 and has no; /// optnone attributes. With -O0 or optnone attribute, the def of shape to amx; /// intrinsics is near the amx intrinsics code. We are not able to find a; /// point which post-dominate all the shape and dominate all amx intrinsics.; /// To decouple the dependency of the shape, we transform amx intrinsics; /// to scalar operation, so that compiling doesn't fail. In long term, we; /// should improve fast register allocation to allocate amx register.; //===----------------------------------------------------------------------===//; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86LowerAMXIntrinsics.cpp:775,depend,dependency,775,interpreter/llvm-project/llvm/lib/Target/X86/X86LowerAMXIntrinsics.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86LowerAMXIntrinsics.cpp,1,['depend'],['dependency']
Integrability,"//===-- XCore.h - Top-level interface for XCore representation --*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file contains the entry points for global functions defined in the LLVM; // XCore back-end.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/XCore/XCore.h:28,interface,interface,28,interpreter/llvm-project/llvm/lib/Target/XCore/XCore.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/XCore/XCore.h,1,['interface'],['interface']
Integrability,"//===-- XCoreAsmPrinter.cpp - XCore LLVM assembly writer ------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file contains a printer that converts from our internal representation; // of machine-dependent LLVM code to the XAS-format XCore assembly language.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/XCore/XCoreAsmPrinter.cpp:474,depend,dependent,474,interpreter/llvm-project/llvm/lib/Target/XCore/XCoreAsmPrinter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/XCore/XCoreAsmPrinter.cpp,1,['depend'],['dependent']
Integrability,"//===-- XCoreISelLowering.h - XCore DAG Lowering Interface ------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines the interfaces that XCore uses to lower LLVM code into a; // selection DAG.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/XCore/XCoreISelLowering.h:49,Interface,Interface,49,interpreter/llvm-project/llvm/lib/Target/XCore/XCoreISelLowering.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/XCore/XCoreISelLowering.h,2,"['Interface', 'interface']","['Interface', 'interfaces']"
Integrability,"//===-- YAMLRemarkSerializer.h - YAML Remark serialization ---*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file provides an interface for serializing remarks to YAML.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Remarks/YAMLRemarkSerializer.h:402,interface,interface,402,interpreter/llvm-project/llvm/include/llvm/Remarks/YAMLRemarkSerializer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Remarks/YAMLRemarkSerializer.h,1,['interface'],['interface']
Integrability,"//===-- cc1as_main.cpp - Clang Assembler ---------------------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This is the entry point to the clang -cc1as functionality, which implements; // the direct interface to the LLVM MC based assembler.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/driver/cc1as_main.cpp:473,interface,interface,473,interpreter/llvm-project/clang/tools/driver/cc1as_main.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/driver/cc1as_main.cpp,1,['interface'],['interface']
Integrability,"//===-- clang-linker-wrapper/ClangLinkerWrapper.cpp - wrapper over linker-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===---------------------------------------------------------------------===//; //; // This tool works as a wrapper over a linking job. This tool is used to create; // linked device images for offloading. It scans the linker's input for embedded; // device offloading data stored in sections `.llvm.offloading` and extracts it; // as a temporary file. The extracted device files will then be passed to a; // device linking job to create a final device image.; //; //===---------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/clang-linker-wrapper/ClangLinkerWrapper.cpp:21,wrap,wrapper,21,interpreter/llvm-project/clang/tools/clang-linker-wrapper/ClangLinkerWrapper.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/clang-linker-wrapper/ClangLinkerWrapper.cpp,3,['wrap'],['wrapper']
Integrability,"//===-- driver.cpp - Clang GCC-Compatible Driver --------------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This is the entry point to the clang driver; it is a thin wrapper; // for functionality in the Driver clang library.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/driver/driver.cpp:441,wrap,wrapper,441,interpreter/llvm-project/clang/tools/driver/driver.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/driver/driver.cpp,1,['wrap'],['wrapper']
Integrability,"//===-- gold-plugin.cpp - Plugin to gold for Link Time Optimization ------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This is a gold plugin for LLVM. It provides an LLVM implementation of the; // interface described in http://gcc.gnu.org/wiki/whopr/driver .; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/gold/gold-plugin.cpp:460,interface,interface,460,interpreter/llvm-project/llvm/tools/gold/gold-plugin.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/gold/gold-plugin.cpp,1,['interface'],['interface']
Integrability,"//===-- lib/MC/Disassembler.cpp - Disassembler Public C Interface ---------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MC/MCDisassembler/Disassembler.cpp:56,Interface,Interface,56,interpreter/llvm-project/llvm/lib/MC/MCDisassembler/Disassembler.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MC/MCDisassembler/Disassembler.cpp,1,['Interface'],['Interface']
Integrability,"//===-- llc.cpp - Implement the LLVM Native Code Generator ----------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This is the llc code generator driver. It provides a convenient; // command-line interface for generating an assembly file or a relocatable file,; // given LLVM bitcode.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llc/llc.cpp:464,interface,interface,464,interpreter/llvm-project/llvm/tools/llc/llc.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llc/llc.cpp,1,['interface'],['interface']
Integrability,"//===-- llvm-debuginfod.cpp - federating debuginfod server ----------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; ///; /// \file; /// This file contains the llvm-debuginfod tool, which serves the debuginfod; /// protocol over HTTP. The tool periodically scans zero or more filesystem; /// directories for ELF binaries to serve, and federates requests for unknown; /// build IDs to the debuginfod servers set in the DEBUGINFOD_URLS environment; /// variable.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-debuginfod/llvm-debuginfod.cpp:474,protocol,protocol,474,interpreter/llvm-project/llvm/tools/llvm-debuginfod/llvm-debuginfod.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-debuginfod/llvm-debuginfod.cpp,1,['protocol'],['protocol']
Integrability,"//===-- llvm-jitlistener.cpp - Utility for testing MCJIT event listener ---===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This program is a used by lit tests to verify the MCJIT JITEventListener; // interface. It registers a mock JIT event listener, generates a module from; // an input IR file and dumps the reported event information to stdout.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-jitlistener/llvm-jitlistener.cpp:460,interface,interface,460,interpreter/llvm-project/llvm/tools/llvm-jitlistener/llvm-jitlistener.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-jitlistener/llvm-jitlistener.cpp,1,['interface'],['interface']
Integrability,"//===-- llvm-lto2: test harness for the resolution-based LTO interface ----===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This program takes in a list of bitcode files, links them and performs; // link-time optimization according to the provided symbol resolutions using the; // resolution-based LTO interface, and outputs one or more object files.; //; // This program is intended to eventually replace llvm-lto which uses the legacy; // LTO interface.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-lto2/llvm-lto2.cpp:61,interface,interface,61,interpreter/llvm-project/llvm/tools/llvm-lto2/llvm-lto2.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-lto2/llvm-lto2.cpp,3,['interface'],['interface']
Integrability,"//===-- llvm-objdump.cpp - Object file dumping utility for llvm -----------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This program is a utility that works like binutils ""objdump"", that is, it; // dumps out a plethora of information about an object file depending on the; // flags.; //; // The flags and output of this program should be near identical to those of; // binutils objdump.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-objdump/llvm-objdump.cpp:518,depend,depending,518,interpreter/llvm-project/llvm/tools/llvm-objdump/llvm-objdump.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-objdump/llvm-objdump.cpp,1,['depend'],['depending']
Integrability,"//===-- llvm/ADT/CombinationGenerator.h ------------------------*- C++ -*--===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; ///; /// \file; /// Combination generator.; ///; /// Example: given input {{0, 1}, {2}, {3, 4}} it will produce the following; /// combinations: {0, 2, 3}, {0, 2, 4}, {1, 2, 3}, {1, 2, 4}.; ///; /// It is useful to think of input as vector-of-vectors, where the; /// outer vector is the variable space, and inner vector is choice space.; /// The number of choices for each variable can be different.; ///; /// As for implementation, it is useful to think of this as a weird number,; /// where each digit (==variable) may have different base (==number of choices).; /// Thus modelling of 'produce next combination' is exactly analogous to the; /// incrementing of an number - increment lowest digit (pick next choice for the; /// variable), and if it wrapped to the beginning then increment next digit.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/CombinationGenerator.h:1126,wrap,wrapped,1126,interpreter/llvm-project/llvm/include/llvm/ADT/CombinationGenerator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/CombinationGenerator.h,1,['wrap'],['wrapped']
Integrability,"//===-- llvm/ADT/Hashing.h - Utilities for hashing --------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements the newly proposed standard C++ interfaces for hashing; // arbitrary data and building hash functions for user-defined types. This; // interface was originally proposed in N3333[1] and is currently under review; // for inclusion in a future TR and/or standard.; //; // The primary interfaces provide are comprised of one type and three functions:; //; // -- 'hash_code' class is an opaque type representing the hash code for some; // data. It is the intended product of hashing, and can be used to implement; // hash tables, checksumming, and other common uses of hashes. It is not an; // integer type (although it can be converted to one) because it is risky; // to assume much about the internals of a hash_code. In particular, each; // execution of the program has a high probability of producing a different; // hash_code for a given input. Thus their values are not stable to save or; // persist, and should only be used during the execution for the; // construction of hashing datastructures.; //; // -- 'hash_value' is a function designed to be overloaded for each; // user-defined type which wishes to be used within a hashing context. It; // should be overloaded within the user-defined type's namespace and found; // via ADL. Overloads for primitive types are provided by this library.; //; // -- 'hash_combine' and 'hash_combine_range' are functions designed to aid; // programmers in easily and intuitively combining a set of data into; // a single hash_code for their object. They should only logically be used; // within the implementation of a 'hash_value' routine or similar contex",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/Hashing.h:436,interface,interfaces,436,interpreter/llvm-project/llvm/include/llvm/ADT/Hashing.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/Hashing.h,3,['interface'],"['interface', 'interfaces']"
Integrability,"//===-- llvm/Analysis/DependenceAnalysis.h -------------------- -*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // DependenceAnalysis is an LLVM pass that analyses dependences between memory; // accesses. Currently, it is an implementation of the approach described in; //; // Practical Dependence Testing; // Goff, Kennedy, Tseng; // PLDI 1991; //; // There's a single entry point that analyzes the dependence between a pair; // of memory references in a function, returning either NULL, for no dependence,; // or a more-or-less detailed description of the dependence between them.; //; // This pass exists to support the DependenceGraph pass. There are two separate; // passes because there's a useful separation of concerns. A dependence exists; // if two conditions are met:; //; // 1) Two instructions reference the same memory location, and; // 2) There is a flow of control leading from one instruction to the other.; //; // DependenceAnalysis attacks the first condition; DependenceGraph will attack; // the second (it's not yet ready).; //; // Please note that this is work in progress and the interface is subject to; // change.; //; // Plausible changes:; // Return a set of more precise dependences instead of just one dependence; // summarizing all.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/DependenceAnalysis.h:22,Depend,DependenceAnalysis,22,interpreter/llvm-project/llvm/include/llvm/Analysis/DependenceAnalysis.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/DependenceAnalysis.h,14,"['Depend', 'depend', 'interface']","['Dependence', 'DependenceAnalysis', 'DependenceGraph', 'dependence', 'dependences', 'interface']"
Integrability,"//===-- llvm/Analysis/Lint.h - LLVM IR Lint ---------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines lint interfaces that can be used for some validation of; // input to the system, and for checking that transformations haven't done; // something bad. In contrast to the Verifier, the Lint checker checks for; // undefined behavior or constructions with likely unintended behavior.; //; // To see what specifically is checked, look at Lint.cpp; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/Lint.h:406,interface,interfaces,406,interpreter/llvm-project/llvm/include/llvm/Analysis/Lint.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/Lint.h,1,['interface'],['interfaces']
Integrability,"//===-- llvm/CodeGen/AllocationOrder.cpp - Allocation Order ---------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements an allocation order for virtual registers.; //; // The preferred allocation order for a virtual register depends on allocation; // hints and target hooks. The AllocationOrder class encapsulates all of that.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AllocationOrder.cpp:509,depend,depends,509,interpreter/llvm-project/llvm/lib/CodeGen/AllocationOrder.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AllocationOrder.cpp,1,['depend'],['depends']
Integrability,"//===-- llvm/CodeGen/AllocationOrder.h - Allocation Order -*- C++ -*-------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements an allocation order for virtual registers.; //; // The preferred allocation order for a virtual register depends on allocation; // hints and target hooks. The AllocationOrder class encapsulates all of that.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AllocationOrder.h:509,depend,depends,509,interpreter/llvm-project/llvm/lib/CodeGen/AllocationOrder.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AllocationOrder.h,1,['depend'],['depends']
Integrability,"//===-- llvm/CodeGen/AsmPrinterHandler.h -----------------------*- C++ -*--===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file contains a generic interface for AsmPrinter handlers,; // like debug and EH info emitters.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/AsmPrinterHandler.h:412,interface,interface,412,interpreter/llvm-project/llvm/include/llvm/CodeGen/AsmPrinterHandler.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/AsmPrinterHandler.h,1,['interface'],['interface']
Integrability,"//===-- llvm/CodeGen/GlobalISel/GlobalIsel.cpp --- GlobalISel ----*- C++ -*-==//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; /// \file; // This file implements the common initialization routines for the; // GlobalISel library.; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/GlobalISel/GlobalISel.cpp:437,rout,routines,437,interpreter/llvm-project/llvm/lib/CodeGen/GlobalISel/GlobalISel.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/GlobalISel/GlobalISel.cpp,1,['rout'],['routines']
Integrability,"//===-- llvm/CodeGen/GlobalISel/Legalizer.cpp -----------------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; /// \file This file implements the LegalizerHelper class to legalize individual; /// instructions and the LegalizePass wrapper pass for the primary; /// legalization.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/GlobalISel/Legalizer.cpp:499,wrap,wrapper,499,interpreter/llvm-project/llvm/lib/CodeGen/GlobalISel/Legalizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/GlobalISel/Legalizer.cpp,1,['wrap'],['wrapper']
Integrability,"//===-- llvm/CodeGen/GlobalISel/LegalizerHelper.cpp -----------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; /// \file This file implements the LegalizerHelper class to legalize; /// individual instructions and the LegalizeMachineIR wrapper pass for the; /// primary legalization.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/GlobalISel/LegalizerHelper.cpp:504,wrap,wrapper,504,interpreter/llvm-project/llvm/lib/CodeGen/GlobalISel/LegalizerHelper.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/GlobalISel/LegalizerHelper.cpp,1,['wrap'],['wrapper']
Integrability,"//===-- llvm/CodeGen/TargetFrameLowering.h ----------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // Interface to describe the layout of a stack frame on the target machine.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetFrameLowering.h:383,Interface,Interface,383,interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetFrameLowering.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetFrameLowering.h,1,['Interface'],['Interface']
Integrability,"//===-- llvm/Debuginfod/Debuginfod.cpp - Debuginfod client library --------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; ///; /// \file; ///; /// This file contains several definitions for the debuginfod client and server.; /// For the client, this file defines the fetchInfo function. For the server,; /// this file defines the DebuginfodLogEntry and DebuginfodServer structs, as; /// well as the DebuginfodLog, DebuginfodCollection classes. The fetchInfo; /// function retrieves any of the three supported artifact types: (executable,; /// debuginfo, source file) associated with a build-id from debuginfod servers.; /// If a source file is to be fetched, its absolute path must be specified in; /// the Description argument to fetchInfo. The DebuginfodLogEntry,; /// DebuginfodLog, and DebuginfodCollection are used by the DebuginfodServer to; /// scan the local filesystem for binaries and serve the debuginfod protocol.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Debuginfod/Debuginfod.cpp:1170,protocol,protocol,1170,interpreter/llvm-project/llvm/lib/Debuginfod/Debuginfod.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Debuginfod/Debuginfod.cpp,1,['protocol'],['protocol']
Integrability,"//===-- llvm/IntrinsicInst.h - Intrinsic Instruction Wrappers ---*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines classes that make it really easy to deal with intrinsic; // functions with the isa/dyncast family of functions. In particular, this; // allows you to do things like:; //; // if (MemCpyInst *MCI = dyn_cast<MemCpyInst>(Inst)); // ... MCI->getDest() ... MCI->getSource() ...; //; // All intrinsic function calls are instances of the call instruction, so these; // are all subclasses of the CallInst class. Note that none of these classes; // has state or virtual methods, which is an important part of this gross/neat; // hack working.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/IntrinsicInst.h:53,Wrap,Wrappers,53,interpreter/llvm-project/llvm/include/llvm/IR/IntrinsicInst.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/IntrinsicInst.h,1,['Wrap'],['Wrappers']
Integrability,"//===-- llvm/Remarks/Remark.h - The remark type -----------------*- C++/-*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file provides an interface for parsing remarks in LLVM.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Remarks/RemarkParser.h:405,interface,interface,405,interpreter/llvm-project/llvm/include/llvm/Remarks/RemarkParser.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Remarks/RemarkParser.h,1,['interface'],['interface']
Integrability,"//===-- llvm/Remarks/RemarkLinker.h -----------------------------*- C++/-*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file provides an interface to link together multiple remark files.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Remarks/RemarkLinker.h:405,interface,interface,405,interpreter/llvm-project/llvm/include/llvm/Remarks/RemarkLinker.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Remarks/RemarkLinker.h,1,['interface'],['interface']
Integrability,"//===-- llvm/Support/DataTypes.h - Define fixed size types ------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // Due to layering constraints (Support depends on llvm-c) this is a thin; // wrapper around the implementation that lives in llvm-c, though most clients; // can/should think of this as being provided by Support for simplicity (not; // many clients are aware of their dependency on llvm-c).; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/DataTypes.h:420,depend,depends,420,interpreter/llvm-project/llvm/include/llvm/Support/DataTypes.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/DataTypes.h,3,"['depend', 'wrap']","['dependency', 'depends', 'wrapper']"
Integrability,"//===-- llvm/Support/ExtensibleRTTI.h - ExtensibleRTTI support --*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // \file; //; // Defines an extensible RTTI mechanism designed to work with Casting.h.; //; // Extensible RTTI differs from LLVM's primary RTTI mechanism (see; // llvm.org/docs/HowToSetUpLLVMStyleRTTI.html) by supporting open type; // hierarchies, where new types can be added from outside libraries without; // needing to change existing code. LLVM's primary RTTI mechanism should be; // preferred where possible, but where open hierarchies are needed this system; // can be used.; //; // The RTTIRoot class defines methods for comparing type ids. Implementations; // of these methods can be injected into new classes using the RTTIExtends; // class template.; //; // E.g.; //; // @code{.cpp}; // class MyBaseClass : public RTTIExtends<MyBaseClass, RTTIRoot> {; // public:; // static char ID;; // virtual void foo() = 0;; // };; //; // class MyDerivedClass1 : public RTTIExtends<MyDerivedClass1, MyBaseClass> {; // public:; // static char ID;; // void foo() override {}; // };; //; // class MyDerivedClass2 : public RTTIExtends<MyDerivedClass2, MyBaseClass> {; // public:; // static char ID;; // void foo() override {}; // };; //; // char MyBaseClass::ID = 0;; // char MyDerivedClass1::ID = 0;; // char MyDerivedClass2:: ID = 0;; //; // void fn() {; // std::unique_ptr<MyBaseClass> B = llvm::make_unique<MyDerivedClass1>();; // llvm::outs() << isa<MyBaseClass>(B) << ""\n""; // Outputs ""1"".; // llvm::outs() << isa<MyDerivedClass1>(B) << ""\n""; // Outputs ""1"".; // llvm::outs() << isa<MyDerivedClass2>(B) << ""\n""; // Outputs ""0'.; // }; //; // @endcode; //; //===------------------------------------------------------------",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/ExtensibleRTTI.h:973,inject,injected,973,interpreter/llvm-project/llvm/include/llvm/Support/ExtensibleRTTI.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/ExtensibleRTTI.h,1,['inject'],['injected']
Integrability,"//===-- llvm/Support/ManagedStatic.h - Static Global wrapper ----*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines the ManagedStatic class and the llvm_shutdown() function.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/ManagedStatic.h:53,wrap,wrapper,53,interpreter/llvm-project/llvm/include/llvm/Support/ManagedStatic.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/ManagedStatic.h,1,['wrap'],['wrapper']
Integrability,"//===-- llvm/Support/thread.h - Wrapper for <thread> ------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This header is a wrapper for <thread> that works around problems with the; // MSVC headers when exceptions are disabled. It also provides llvm::thread,; // which is either a typedef of std::thread or a replacement that calls the; // function synchronously depending on the value of LLVM_ENABLE_THREADS.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/thread.h:32,Wrap,Wrapper,32,interpreter/llvm-project/llvm/include/llvm/Support/thread.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/thread.h,3,"['Wrap', 'depend', 'wrap']","['Wrapper', 'depending', 'wrapper']"
Integrability,"//===-- llvm/Transforms/Utils/SimplifyIndVar.h - Indvar Utils ---*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines in interface for induction variable simplification. It does; // not define any actual pass or policy, but provides a single function to; // simplify a loop's induction variables based on ScalarEvolution.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/SimplifyIndVar.h:404,interface,interface,404,interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/SimplifyIndVar.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/SimplifyIndVar.h,1,['interface'],['interface']
Integrability,"//===-- tools/bugpoint/ToolRunner.h -----------------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file exposes an abstraction around a platform C compiler, used to; // compile C and assembly code. It also exposes an ""AbstractIntepreter""; // interface, which is used to execute code using one of the LLVM execution; // engines.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/bugpoint/ToolRunner.h:531,interface,interface,531,interpreter/llvm-project/llvm/tools/bugpoint/ToolRunner.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/bugpoint/ToolRunner.h,1,['interface'],['interface']
Integrability,"//===--- AST.h - ""Umbrella"" header for AST library --------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines the interface to the AST classes.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/AST.h:405,interface,interface,405,interpreter/llvm-project/clang/include/clang/AST/AST.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/AST.h,1,['interface'],['interface']
Integrability,"//===--- ASTConsumer.cpp - Abstract interface for reading ASTs --*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines the ASTConsumer class.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ASTConsumer.cpp:36,interface,interface,36,interpreter/llvm-project/clang/lib/AST/ASTConsumer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ASTConsumer.cpp,1,['interface'],['interface']
Integrability,"//===--- ASTConsumer.h - Abstract interface for reading ASTs ----*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines the ASTConsumer class.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/ASTConsumer.h:34,interface,interface,34,interpreter/llvm-project/clang/include/clang/AST/ASTConsumer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/ASTConsumer.h,1,['interface'],['interface']
Integrability,"//===--- ASTMatchFinder.cpp - Structural query framework ------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // Implements an algorithm to efficiently search for matches on AST nodes.; // Uses memoization to support recursive matches like HasDescendant.; //; // The general idea is to visit all AST nodes with a RecursiveASTVisitor,; // calling the Matches(...) method of each matcher we are running on each; // AST node. The matcher can recurse via the ASTMatchFinder interface.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/ASTMatchers/ASTMatchFinder.cpp:740,interface,interface,740,interpreter/llvm-project/clang/lib/ASTMatchers/ASTMatchFinder.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/ASTMatchers/ASTMatchFinder.cpp,1,['interface'],['interface']
Integrability,"//===--- ASTMutationListener.h - AST Mutation Interface --------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines the ASTMutationListener interface.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/ASTMutationListener.h:46,Interface,Interface,46,interpreter/llvm-project/clang/include/clang/AST/ASTMutationListener.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/ASTMutationListener.h,2,"['Interface', 'interface']","['Interface', 'interface']"
Integrability,"//===--- Allocator.cpp - Simple memory allocation abstraction -------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements the BumpPtrAllocator interface.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/Allocator.cpp:425,interface,interface,425,interpreter/llvm-project/llvm/lib/Support/Allocator.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/Allocator.cpp,1,['interface'],['interface']
Integrability,"//===--- Attr.h - Classes for representing attributes ----------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines the Attr interface and subclasses.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/Attr.h:409,interface,interface,409,interpreter/llvm-project/clang/include/clang/AST/Attr.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/Attr.h,1,['interface'],['interface']
Integrability,"//===--- Attributes.cpp ---------------------------------------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements the AttributeCommonInfo interface.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Basic/Attributes.cpp:428,interface,interface,428,interpreter/llvm-project/clang/lib/Basic/Attributes.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Basic/Attributes.cpp,1,['interface'],['interface']
Integrability,"//===--- BitmaskEnum.h - wrapper of LLVM's bitmask enum facility-*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; /// \file; /// Provides LLVM's BitmaskEnum facility to enumeration types declared in; /// namespace clang.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/BitmaskEnum.h:25,wrap,wrapper,25,interpreter/llvm-project/clang/include/clang/Basic/BitmaskEnum.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/BitmaskEnum.h,1,['wrap'],['wrapper']
Integrability,"//===--- Boolean.h - Wrapper for boolean types for the VM -------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/Interp/Boolean.h:21,Wrap,Wrapper,21,interpreter/llvm-project/clang/lib/AST/Interp/Boolean.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/Interp/Boolean.h,1,['Wrap'],['Wrapper']
Integrability,"//===--- CGCall.cpp - Encapsulate calling convention details --------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // These classes wrap the information about a call or function; // definition used to handle ABI compliancy.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGCall.cpp:397,wrap,wrap,397,interpreter/llvm-project/clang/lib/CodeGen/CGCall.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGCall.cpp,1,['wrap'],['wrap']
Integrability,"//===--- CLWarnings.h - Maps some cl.exe warning ids -----------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements the Diagnostic-related interfaces.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Basic/CLWarnings.cpp:426,interface,interfaces,426,interpreter/llvm-project/clang/lib/Basic/CLWarnings.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Basic/CLWarnings.cpp,1,['interface'],['interfaces']
Integrability,"//===--- CallAndMessageChecker.cpp ------------------------------*- C++ -*--==//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This defines CallAndMessageChecker, a builtin checker that checks for various; // errors of call and objc message expressions.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/CallAndMessageChecker.cpp:489,message,message,489,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/CallAndMessageChecker.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/CallAndMessageChecker.cpp,1,['message'],['message']
Integrability,"//===--- Callbacks.h - Hook Registration ------------------------*- C++ -*-===//; //; // The LLVM Compiler Infrastructure; //; // This file is distributed under the University of Illinois Open Source; // License. See LICENSE.TXT for details.; //; //===----------------------------------------------------------------------===//; //; // This file defines the interface for acting on certain input.; //; // Axel Naumann <axel@cern.ch>, 2011-05-12; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/Callbacks.h:358,interface,interface,358,core/textinput/src/textinput/Callbacks.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/Callbacks.h,1,['interface'],['interface']
Integrability,"//===--- CaptureTracking.cpp - Determine whether a pointer is captured ----===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file contains routines that help determine which pointers are captured.; // A pointer value is captured if the function makes a copy of any part of the; // pointer that outlives the call. Not being captured means, more or less, that; // the pointer is only dereferenced and not stored in a global. Returning part; // of the pointer as the function return value may or may not count as capturing; // the pointer, depending on the context.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/CaptureTracking.cpp:402,rout,routines,402,interpreter/llvm-project/llvm/lib/Analysis/CaptureTracking.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/CaptureTracking.cpp,2,"['depend', 'rout']","['depending', 'routines']"
Integrability,"//===--- CodeCompletionHandler.h - Preprocessor code completion -*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines the CodeCompletionHandler interface, which provides; // code-completion callbacks for the preprocessor.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Lex/CodeCompletionHandler.h:427,interface,interface,427,interpreter/llvm-project/clang/include/clang/Lex/CodeCompletionHandler.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Lex/CodeCompletionHandler.h,1,['interface'],['interface']
Integrability,"//===--- CodeGen/ModuleBuilder.h - Build LLVM from ASTs ---------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines the ModuleBuilder interface.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/CodeGen/ModuleBuilder.h:419,interface,interface,419,interpreter/llvm-project/clang/include/clang/CodeGen/ModuleBuilder.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/CodeGen/ModuleBuilder.h,1,['interface'],['interface']
Integrability,"//===--- CodeGenOptions.h ---------------------------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines the CodeGenOptions interface.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/CodeGenOptions.h:420,interface,interface,420,interpreter/llvm-project/clang/include/clang/Basic/CodeGenOptions.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/CodeGenOptions.h,1,['interface'],['interface']
Integrability,"//===--- CodeGenPassBuilder.cpp --------------------------------------- ---===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines interfaces to access the target independent code; // generation passes provided by the LLVM backend.; //; //===---------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/CodeGenPassBuilder.cpp:401,interface,interfaces,401,interpreter/llvm-project/llvm/lib/CodeGen/CodeGenPassBuilder.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/CodeGenPassBuilder.cpp,1,['interface'],['interfaces']
Integrability,"//===--- Color.h - Color and Text Attributes --------------------*- C++ -*-===//; //; // The LLVM Compiler Infrastructure; //; // This file is distributed under the University of Illinois Open Source; // License. See LICENSE.TXT for details.; //; //===----------------------------------------------------------------------===//; //; // This file defines the color / text attribute structure and an interface; // that can set it.; //; // Axel Naumann <axel@cern.ch>, 2011-05-12; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/Color.h:398,interface,interface,398,core/textinput/src/textinput/Color.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/Color.h,1,['interface'],['interface']
Integrability,"//===--- CommonOptionsParser.cpp - common options for clang tools ---------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements the CommonOptionsParser class used to parse common; // command-line options for clang tools, so that they can be run as separate; // command-line applications with a consistent common interface for handling; // compilation database and input files.; //; // It provides a common subset of command-line options, common algorithm; // for locating a compilation database and source files, and help messages; // for the basic command-line interface.; //; // It creates a CompilationDatabase and reads common command-line options.; //; // This class uses the Clang Tooling infrastructure, see; // http://clang.llvm.org/docs/HowToSetupToolingForLLVM.html; // for details on setting it up with LLVM source tree.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Tooling/CommonOptionsParser.cpp:588,interface,interface,588,interpreter/llvm-project/clang/lib/Tooling/CommonOptionsParser.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Tooling/CommonOptionsParser.cpp,3,"['interface', 'message']","['interface', 'messages']"
Integrability,"//===--- ComputeDependence.h -------------------------------------- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // Calculate various template dependency flags for the AST.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/ComputeDependence.h:410,depend,dependency,410,interpreter/llvm-project/clang/include/clang/AST/ComputeDependence.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/ComputeDependence.h,1,['depend'],['dependency']
Integrability,"//===--- ConstantInitBuilder.cpp - Global initializer builder -------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines out-of-line routines for building initializers for; // global variables, in particular the kind of globals that are implicitly; // introduced by various language ABIs.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/ConstantInitBuilder.cpp:413,rout,routines,413,interpreter/llvm-project/clang/lib/CodeGen/ConstantInitBuilder.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/ConstantInitBuilder.cpp,1,['rout'],['routines']
Integrability,"//===--- CrossTranslationUnit.cpp - -----------------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements the CrossTranslationUnit interface.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CrossTU/CrossTranslationUnit.cpp:429,interface,interface,429,interpreter/llvm-project/clang/lib/CrossTU/CrossTranslationUnit.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CrossTU/CrossTranslationUnit.cpp,1,['interface'],['interface']
Integrability,"//===--- CrossTranslationUnit.h - -------------------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file provides an interface to load binary AST dumps on demand. This; // feature can be utilized for tools that require cross translation unit; // support.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/CrossTU/CrossTranslationUnit.h:405,interface,interface,405,interpreter/llvm-project/clang/include/clang/CrossTU/CrossTranslationUnit.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/CrossTU/CrossTranslationUnit.h,1,['interface'],['interface']
Integrability,"//===--- DAGDeltaAlgorithm.cpp - A DAG Minimization Algorithm --*- C++ -*--===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //===----------------------------------------------------------------------===//; //; // The algorithm we use attempts to exploit the dependency information by; // minimizing top-down. We start by constructing an initial root set R, and; // then iteratively:; //; // 1. Minimize the set R using the test predicate:; // P'(S) = P(S union pred*(S)); //; // 2. Extend R to R' = R union pred(R).; //; // until a fixed point is reached.; //; // The idea is that we want to quickly prune entire portions of the graph, so we; // try to find high-level nodes that can be eliminated with all of their; // dependents.; //; // FIXME: The current algorithm doesn't actually provide a strong guarantee; // about the minimality of the result. The problem is that after adding nodes to; // the required set, we no longer consider them for elimination. For strictly; // well formed predicates, this doesn't happen, but it commonly occurs in; // practice when there are unmodelled dependencies. I believe we can resolve; // this by allowing the required set to be minimized as well, but need more test; // cases first.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/DAGDeltaAlgorithm.cpp:424,depend,dependency,424,interpreter/llvm-project/llvm/lib/Support/DAGDeltaAlgorithm.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/DAGDeltaAlgorithm.cpp,3,['depend'],"['dependencies', 'dependency', 'dependents']"
Integrability,"//===--- DebugerSupportPlugin.h -- Utils for debugger support ---*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // Generates debug objects and registers them using the jit-loader-gdb protocol.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/Orc/Debugging/DebuggerSupportPlugin.h:451,protocol,protocol,451,interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/Orc/Debugging/DebuggerSupportPlugin.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/Orc/Debugging/DebuggerSupportPlugin.h,1,['protocol'],['protocol']
Integrability,"//===--- DemangleConfig.h ---------------------------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file contains a variety of feature test macros copied from; // include/llvm/Support/Compiler.h so that LLVMDemangle does not need to take; // a dependency on LLVMSupport.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Demangle/DemangleConfig.h:532,depend,dependency,532,interpreter/llvm-project/llvm/include/llvm/Demangle/DemangleConfig.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Demangle/DemangleConfig.h,1,['depend'],['dependency']
Integrability,"//===--- DependenceFlags.h ------------------------------------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/DependenceFlags.h:9,Depend,DependenceFlags,9,interpreter/llvm-project/clang/include/clang/AST/DependenceFlags.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/DependenceFlags.h,1,['Depend'],['DependenceFlags']
Integrability,"//===--- DependencyFile.cpp - Generate dependency file --------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This code generates dependency files.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/DependencyFile.cpp:9,Depend,DependencyFile,9,interpreter/llvm-project/clang/lib/Frontend/DependencyFile.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/DependencyFile.cpp,3,"['Depend', 'depend']","['DependencyFile', 'dependency']"
Integrability,"//===--- DependencyGraph.cpp - Generate dependency file -------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This code generates a header dependency graph in DOT format, for use; // with, e.g., GraphViz.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/DependencyGraph.cpp:9,Depend,DependencyGraph,9,interpreter/llvm-project/clang/lib/Frontend/DependencyGraph.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/DependencyGraph.cpp,3,"['Depend', 'depend']","['DependencyGraph', 'dependency']"
Integrability,"//===--- DependencyOutputOptions.h ------------------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Frontend/DependencyOutputOptions.h:9,Depend,DependencyOutputOptions,9,interpreter/llvm-project/clang/include/clang/Frontend/DependencyOutputOptions.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Frontend/DependencyOutputOptions.h,1,['Depend'],['DependencyOutputOptions']
Integrability,"//===--- Designator.h - Initialization Designator ---------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines interfaces used to represent designators (a la; // C99 designated initializers) during parsing.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Sema/Designator.h:401,interface,interfaces,401,interpreter/llvm-project/clang/include/clang/Sema/Designator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Sema/Designator.h,1,['interface'],['interfaces']
Integrability,"//===--- DiagnosticIDs.cpp - Diagnostic IDs Handling ----------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements the Diagnostic IDs-related interfaces.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Basic/DiagnosticIDs.cpp:431,interface,interfaces,431,interpreter/llvm-project/clang/lib/Basic/DiagnosticIDs.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Basic/DiagnosticIDs.cpp,1,['interface'],['interfaces']
Integrability,"//===--- DiagnosticIDs.h - Diagnostic IDs Handling --------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; ///; /// \file; /// Defines the Diagnostic IDs-related interfaces.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/DiagnosticIDs.h:431,interface,interfaces,431,interpreter/llvm-project/clang/include/clang/Basic/DiagnosticIDs.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/DiagnosticIDs.h,1,['interface'],['interfaces']
Integrability,"//===--- Diagnostics.h - Helper class for error diagnostics -----*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; ///; /// \file; /// Diagnostics class to manage error messages.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/ASTMatchers/Dynamic/Diagnostics.h:430,message,messages,430,interpreter/llvm-project/clang/include/clang/ASTMatchers/Dynamic/Diagnostics.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/ASTMatchers/Dynamic/Diagnostics.h,1,['message'],['messages']
Integrability,"//===--- DirectoryLookup.h - Info for searching for headers -----*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines the DirectoryLookup interface.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Lex/DirectoryLookup.h:421,interface,interface,421,interpreter/llvm-project/clang/include/clang/Lex/DirectoryLookup.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Lex/DirectoryLookup.h,1,['interface'],['interface']
Integrability,"//===--- Duration.h - wrapper around std::chrono::Duration ------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // The sole purpose of this file is to avoid the dependency on <chrono> in; // raw_ostream.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/Duration.h:22,wrap,wrapper,22,interpreter/llvm-project/llvm/include/llvm/Support/Duration.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/Duration.h,2,"['depend', 'wrap']","['dependency', 'wrapper']"
Integrability,"//===--- Editor.cpp - Output Of Text ----------------------------*- C++ -*-===//; //; // The LLVM Compiler Infrastructure; //; // This file is distributed under the University of Illinois Open Source; // License. See LICENSE.TXT for details.; //; //===----------------------------------------------------------------------===//; //; // This file defines the text manipulation (""editing"") interface.; //; // Axel Naumann <axel@cern.ch>, 2011-05-12; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/Editor.cpp:388,interface,interface,388,core/textinput/src/textinput/Editor.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/Editor.cpp,1,['interface'],['interface']
Integrability,"//===--- Editor.h - Output Of Text ------------------------------*- C++ -*-===//; //; // The LLVM Compiler Infrastructure; //; // This file is distributed under the University of Illinois Open Source; // License. See LICENSE.TXT for details.; //; //===----------------------------------------------------------------------===//; //; // This file defines the text manipulation (""editing"") interface.; //; // Axel Naumann <axel@cern.ch>, 2011-05-12; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/Editor.h:388,interface,interface,388,core/textinput/src/textinput/Editor.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/Editor.h,1,['interface'],['interface']
Integrability,"//===--- Execution.h - Executing clang frontend actions -*- C++ ---------*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines framework for executing clang frontend actions.; //; // The framework can be extended to support different execution plans including; // standalone execution on the given TUs or parallel execution on all TUs in; // the codebase.; //; // In order to enable multiprocessing execution, tool actions are expected to; // output result into the ToolResults provided by the executor. The; // `ToolResults` is an interface that abstracts how results are stored e.g.; // in-memory for standalone execution or on-disk for large-scale execution.; //; // New executors can be registered as ToolExecutorPlugins via the; // `ToolExecutorPluginRegistry`. CLI tools can use; // `createExecutorFromCommandLineArgs` to create a specific registered executor; // according to the command-line arguments.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Tooling/Execution.h:806,interface,interface,806,interpreter/llvm-project/clang/include/clang/Tooling/Execution.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Tooling/Execution.h,1,['interface'],['interface']
Integrability,"//===--- Expr.h - Classes for representing expressions ----------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines the Expr interface and subclasses.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/Expr.h:410,interface,interface,410,interpreter/llvm-project/clang/include/clang/AST/Expr.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/Expr.h,1,['interface'],['interface']
Integrability,"//===--- ExprOpenMP.h - Classes for representing expressions ----*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines the Expr interface and subclasses.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/ExprOpenMP.h:410,interface,interface,410,interpreter/llvm-project/clang/include/clang/AST/ExprOpenMP.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/ExprOpenMP.h,1,['interface'],['interface']
Integrability,"//===--- ExternalASTMerger.h - Merging External AST Interface ---*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file declares the ExternalASTMerger, which vends a combination of ASTs; // from several different ASTContext/FileManager pairs; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/ExternalASTMerger.h:52,Interface,Interface,52,interpreter/llvm-project/clang/include/clang/AST/ExternalASTMerger.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/ExternalASTMerger.h,1,['Interface'],['Interface']
Integrability,"//===--- ExternalSemaSource.h - External Sema Interface ---------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines the ExternalSemaSource interface.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Sema/ExternalSemaSource.h:46,Interface,Interface,46,interpreter/llvm-project/clang/include/clang/Sema/ExternalSemaSource.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Sema/ExternalSemaSource.h,2,"['Interface', 'interface']","['Interface', 'interface']"
Integrability,"//===--- FileManager.cpp - File System Probing and Caching ----------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements the FileManager interface.; //; //===----------------------------------------------------------------------===//; //; // TODO: This should index all interesting directories with dirent calls.; // getdirentries ?; // opendir/readdir_r/closedir ?; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Basic/FileManager.cpp:420,interface,interface,420,interpreter/llvm-project/clang/lib/Basic/FileManager.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Basic/FileManager.cpp,1,['interface'],['interface']
Integrability,"//===--- FileManager.h - File System Probing and Caching --------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; ///; /// \file; /// Defines the clang::FileManager interface and associated types.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/FileManager.h:427,interface,interface,427,interpreter/llvm-project/clang/include/clang/Basic/FileManager.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/FileManager.h,1,['interface'],['interface']
Integrability,"//===--- FileSystemOptions.h - File System Options --------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; ///; /// \file; /// Defines the clang::FileSystemOptions interface.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/FileSystemOptions.h:433,interface,interface,433,interpreter/llvm-project/clang/include/clang/Basic/FileSystemOptions.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/FileSystemOptions.h,1,['interface'],['interface']
Integrability,"//===--- FormatToken.h - Format C++ code ------------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; ///; /// \file; /// This file contains the declaration of the FormatToken, a wrapper; /// around Token with additional information related to formatting.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Format/FormatToken.h:453,wrap,wrapper,453,interpreter/llvm-project/clang/lib/Format/FormatToken.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Format/FormatToken.h,1,['wrap'],['wrapper']
Integrability,"//===--- FormatTokenSource.h - Format C++ code ------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; ///; /// \file; /// This file defines the \c FormatTokenSource interface, which provides a token; /// stream as well as the ability to manipulate the token stream.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Format/FormatTokenSource.h:439,interface,interface,439,interpreter/llvm-project/clang/lib/Format/FormatTokenSource.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Format/FormatTokenSource.h,1,['interface'],['interface']
Integrability,"//===--- HLSLExternalSemaSource.h - HLSL Sema Source ------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines the HLSLExternalSemaSource interface.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Sema/HLSLExternalSemaSource.h:428,interface,interface,428,interpreter/llvm-project/clang/include/clang/Sema/HLSLExternalSemaSource.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Sema/HLSLExternalSemaSource.h,1,['interface'],['interface']
Integrability,"//===--- HashKeyMap.h - Wrapper for maps using hash value key ---*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; ///; /// \file; ///; /// Defines HashKeyMap template.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ProfileData/HashKeyMap.h:24,Wrap,Wrapper,24,interpreter/llvm-project/llvm/include/llvm/ProfileData/HashKeyMap.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ProfileData/HashKeyMap.h,1,['Wrap'],['Wrapper']
Integrability,"//===--- HeaderMap.cpp - A file that acts like dir of symlinks ------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements the HeaderMap interface.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Lex/HeaderMap.cpp:418,interface,interface,418,interpreter/llvm-project/clang/lib/Lex/HeaderMap.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Lex/HeaderMap.cpp,1,['interface'],['interface']
Integrability,"//===--- HeaderMap.h - A file that acts like dir of symlinks ----*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines the HeaderMap interface.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Lex/HeaderMap.h:415,interface,interface,415,interpreter/llvm-project/clang/include/clang/Lex/HeaderMap.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Lex/HeaderMap.h,1,['interface'],['interface']
Integrability,"//===--- History.cpp - Previously Entered Lines -----------------*- C++ -*-===//; //; // The LLVM Compiler Infrastructure; //; // This file is distributed under the University of Illinois Open Source; // License. See LICENSE.TXT for details.; //; //===----------------------------------------------------------------------===//; //; // This file defines the interface for setting and retrieving previously; // entered input, with a persistent backend (i.e. a history file).; //; // Axel Naumann <axel@cern.ch>, 2011-05-12; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/History.cpp:358,interface,interface,358,core/textinput/src/textinput/History.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/History.cpp,1,['interface'],['interface']
Integrability,"//===--- History.h - Previously Entered Lines -------------------*- C++ -*-===//; //; // The LLVM Compiler Infrastructure; //; // This file is distributed under the University of Illinois Open Source; // License. See LICENSE.TXT for details.; //; //===----------------------------------------------------------------------===//; //; // This file defines the interface for setting and retrieving previously; // entered input, with a persistent backend (i.e. a history file).; //; // Axel Naumann <axel@cern.ch>, 2011-05-12; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/History.h:358,interface,interface,358,core/textinput/src/textinput/History.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/History.h,1,['interface'],['interface']
Integrability,"//===--- ImmutableMap.h - Immutable (functional) map interface --*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; ///; /// \file; /// This file defines the ImmutableMap class.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/ImmutableMap.h:53,interface,interface,53,interpreter/llvm-project/llvm/include/llvm/ADT/ImmutableMap.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/ImmutableMap.h,1,['interface'],['interface']
Integrability,"//===--- ImmutableSet.h - Immutable (functional) set interface --*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; ///; /// \file; /// This file defines the ImutAVLTree and ImmutableSet classes.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/ImmutableSet.h:53,interface,interface,53,interpreter/llvm-project/llvm/include/llvm/ADT/ImmutableSet.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/ImmutableSet.h,1,['interface'],['interface']
Integrability,"//===--- Integral.h - Wrapper for numeric types for the VM ------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // Defines the VM types and helpers operating on types.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/Interp/Integral.h:22,Wrap,Wrapper,22,interpreter/llvm-project/clang/lib/AST/Interp/Integral.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/Interp/Integral.h,2,['Wrap'],['Wrapper']
Integrability,"//===--- Integrated Assembler Information ----------------------------===//; // Generated object files can use all ELF features supported by GNU ld of; // this binutils version and later. INT_MAX means all features can be used,; // regardless of GNU ld support. The default value is referenced by; // clang/Driver/Options.td.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCAsmInfo.h:9,Integrat,Integrated,9,interpreter/llvm-project/llvm/include/llvm/MC/MCAsmInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCAsmInfo.h,1,['Integrat'],['Integrated']
Integrability,"//===--- InterfaceStubFunctionsConsumer.cpp -------------------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/InterfaceStubFunctionsConsumer.cpp:9,Interface,InterfaceStubFunctionsConsumer,9,interpreter/llvm-project/clang/lib/Frontend/InterfaceStubFunctionsConsumer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/InterfaceStubFunctionsConsumer.cpp,1,['Interface'],['InterfaceStubFunctionsConsumer']
Integrability,"//===--- InterfaceStubs.cpp - Base InterfaceStubs Implementations C++ ---===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/InterfaceStubs.cpp:9,Interface,InterfaceStubs,9,interpreter/llvm-project/clang/lib/Driver/ToolChains/InterfaceStubs.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/InterfaceStubs.cpp,4,['Interface'],['InterfaceStubs']
Integrability,"//===--- LLJITWithRemoteDebugging.cpp - LLJIT targeting a child process ---===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This example shows how to use LLJIT and JITLink for out-of-process execution; // with debug support. A few notes beforehand:; //; // * Debuggers must implement the GDB JIT interface (gdb, udb, lldb 12+).; // * Debug support is currently limited to ELF on x86-64 platforms that run; // Unix-like systems.; // * There is a test for this example and it ships an IR file that is prepared; // for the instructions below.; //; //; // The following command line session provides a complete walkthrough of the; // feature using LLDB 12:; //; // [Terminal 1] Prepare a debuggable out-of-process JIT session:; //; // > cd llvm-project/build; // > ninja LLJITWithRemoteDebugging llvm-jitlink-executor; // > cp ../llvm/test/Examples/OrcV2Examples/Inputs/argc_sub1_elf.ll .; // > bin/LLJITWithRemoteDebugging --wait-for-debugger argc_sub1_elf.ll; // Found out-of-process executor: bin/llvm-jitlink-executor; // Launched executor in subprocess: 65535; // Attach a debugger and press any key to continue.; //; //; // [Terminal 2] Attach a debugger to the child process:; //; // (lldb) log enable lldb jit; // (lldb) settings set plugin.jit-loader.gdb.enable on; // (lldb) settings set target.source-map Inputs/ \; // /path/to/llvm-project/llvm/test/Examples/OrcV2Examples/Inputs/; // (lldb) attach -p 65535; // JITLoaderGDB::SetJITBreakpoint looking for JIT register hook; // JITLoaderGDB::SetJITBreakpoint setting JIT breakpoint; // Process 65535 stopped; // (lldb) b sub1; // Breakpoint 1: no locations (pending).; // WARNING: Unable to resolve breakpoint to any actual locations.; // (lldb) c; // Process 65535 resuming; //; //; /",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/examples/OrcV2Examples/LLJITWithRemoteDebugging/LLJITWithRemoteDebugging.cpp:555,interface,interface,555,interpreter/llvm-project/llvm/examples/OrcV2Examples/LLJITWithRemoteDebugging/LLJITWithRemoteDebugging.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/examples/OrcV2Examples/LLJITWithRemoteDebugging/LLJITWithRemoteDebugging.cpp,1,['interface'],['interface']
Integrability,"//===--- LexicallyOrderedRecursiveASTVisitor.h - ----------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines the LexicallyOrderedRecursiveASTVisitor interface, which; // recursively traverses the entire AST in a lexical order.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/LexicallyOrderedRecursiveASTVisitor.h:441,interface,interface,441,interpreter/llvm-project/clang/include/clang/AST/LexicallyOrderedRecursiveASTVisitor.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/LexicallyOrderedRecursiveASTVisitor.h,1,['interface'],['interface']
Integrability,"//===--- LiteralSupport.cpp - Code to parse and process literals ----------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements the NumericLiteralParser, CharLiteralParser, and; // StringLiteralParser interfaces.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Lex/LiteralSupport.cpp:477,interface,interfaces,477,interpreter/llvm-project/clang/lib/Lex/LiteralSupport.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Lex/LiteralSupport.cpp,1,['interface'],['interfaces']
Integrability,"//===--- LiteralSupport.h ---------------------------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines the NumericLiteralParser, CharLiteralParser, and; // StringLiteralParser interfaces.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Lex/LiteralSupport.h:474,interface,interfaces,474,interpreter/llvm-project/clang/include/clang/Lex/LiteralSupport.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Lex/LiteralSupport.h,1,['interface'],['interfaces']
Integrability,"//===--- MacroArgs.cpp - Formal argument info for Macros ------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements the MacroArgs interface.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Lex/MacroArgs.cpp:418,interface,interface,418,interpreter/llvm-project/clang/lib/Lex/MacroArgs.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Lex/MacroArgs.cpp,1,['interface'],['interface']
Integrability,"//===--- MacroArgs.h - Formal argument info for Macros ----------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines the MacroArgs interface.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Lex/MacroArgs.h:415,interface,interface,415,interpreter/llvm-project/clang/include/clang/Lex/MacroArgs.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Lex/MacroArgs.h,1,['interface'],['interface']
Integrability,"//===--- Mangle.h - Mangle C++ Names ----------------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // Defines the C++ name mangling interface.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/Mangle.h:413,interface,interface,413,interpreter/llvm-project/clang/include/clang/AST/Mangle.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/Mangle.h,1,['interface'],['interface']
Integrability,"//===--- MemoryBuffer.cpp - Memory Buffer implementation ------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements the MemoryBuffer interface.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/MemoryBuffer.cpp:421,interface,interface,421,interpreter/llvm-project/llvm/lib/Support/MemoryBuffer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/MemoryBuffer.cpp,1,['interface'],['interface']
Integrability,"//===--- MemoryBuffer.h - Memory Buffer Interface ---------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines the MemoryBuffer interface.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/MemoryBuffer.h:40,Interface,Interface,40,interpreter/llvm-project/llvm/include/llvm/Support/MemoryBuffer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/MemoryBuffer.h,2,"['Interface', 'interface']","['Interface', 'interface']"
Integrability,"//===--- MisExpect.cpp - Check the use of llvm.expect with PGO data -------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This contains code to emit warnings for potentially incorrect usage of the; // llvm.expect intrinsic. This utility extracts the threshold values from; // metadata associated with the instrumented Branch or Switch instruction. The; // threshold values are then used to determine if a warning should be emmited.; //; // MisExpect's implementation relies on two assumptions about how branch weights; // are managed in LLVM.; //; // 1) Frontend profiling weights are always in place before llvm.expect is; // lowered in LowerExpectIntrinsic.cpp. Frontend based instrumentation therefore; // needs to extract the branch weights and then compare them to the weights; // being added by the llvm.expect intrinsic lowering.; //; // 2) Sampling and IR based profiles will *only* have branch weight metadata; // before profiling data is consulted if they are from a lowered llvm.expect; // intrinsic. These profiles thus always extract the expected weights and then; // compare them to the weights collected during profiling to determine if a; // diagnostic message is warranted.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/MisExpect.cpp:1430,message,message,1430,interpreter/llvm-project/llvm/lib/Transforms/Utils/MisExpect.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/MisExpect.cpp,1,['message'],['message']
Integrability,"//===--- MisExpect.h - Check the use of llvm.expect with PGO data ---------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This contains code to emit diagnostic messages for potentially incorrect; // usage of the llvm.expect intrinsic. This utility extracts the threshold; // values from metadata associated with the instrumented Branch or Switch; // instruction. The threshold values are then used to determine if a diagnostic; // should be emitted.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/MisExpect.h:421,message,messages,421,interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/MisExpect.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/MisExpect.h,1,['message'],['messages']
Integrability,"//===--- ModelConsumer.cpp - ASTConsumer for consuming model files --------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; ///; /// \file; /// This file implements an ASTConsumer for consuming model files.; ///; /// This ASTConsumer handles the AST of a parsed model file. All top level; /// function definitions will be collected from that model file for later; /// retrieval during the static analysis. The body of these functions will not; /// be injected into the ASTUnit of the analyzed translation unit. It will be; /// available through the BodyFarm which is utilized by the AnalysisDeclContext; /// class.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Frontend/ModelConsumer.cpp:703,inject,injected,703,interpreter/llvm-project/clang/lib/StaticAnalyzer/Frontend/ModelConsumer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Frontend/ModelConsumer.cpp,1,['inject'],['injected']
Integrability,"//===--- ModuleDependencyCollector.cpp - Collect module dependencies ------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // Collect the dependencies of a set of modules.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/ModuleDependencyCollector.cpp:56,depend,dependencies,56,interpreter/llvm-project/clang/lib/Frontend/ModuleDependencyCollector.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/ModuleDependencyCollector.cpp,2,['depend'],['dependencies']
Integrability,"//===--- MultipleIncludeOpt.h - Header Multiple-Include Optzn ---*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; ///; /// \file; /// Defines the MultipleIncludeOpt interface.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Lex/MultipleIncludeOpt.h:427,interface,interface,427,interpreter/llvm-project/clang/include/clang/Lex/MultipleIncludeOpt.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Lex/MultipleIncludeOpt.h,1,['interface'],['interface']
Integrability,"//===--- MultiplexExternalSemaSource.h - External Sema Interface-*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines ExternalSemaSource interface, dispatching to all clients; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Sema/MultiplexExternalSemaSource.h:55,Interface,Interface,55,interpreter/llvm-project/clang/include/clang/Sema/MultiplexExternalSemaSource.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Sema/MultiplexExternalSemaSource.h,2,"['Interface', 'interface']","['Interface', 'interface']"
Integrability,"//===--- ObjCPropertyAttributeOrderFixer.cpp -------------------*- C++--*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; ///; /// \file; /// This file implements ObjCPropertyAttributeOrderFixer, a TokenAnalyzer that; /// adjusts the order of attributes in an ObjC `@property(...)` declaration,; /// depending on the style.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Format/ObjCPropertyAttributeOrderFixer.cpp:553,depend,depending,553,interpreter/llvm-project/clang/lib/Format/ObjCPropertyAttributeOrderFixer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Format/ObjCPropertyAttributeOrderFixer.cpp,1,['depend'],['depending']
Integrability,"//===--- ObjCPropertyAttributeOrderFixer.h ------------------------------*- C++; //-*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; ///; /// \file; /// This file declares ObjCPropertyAttributeOrderFixer, a TokenAnalyzer that; /// adjusts the order of attributes in an ObjC `@property(...)` declaration,; /// depending on the style.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Format/ObjCPropertyAttributeOrderFixer.h:563,depend,depending,563,interpreter/llvm-project/clang/lib/Format/ObjCPropertyAttributeOrderFixer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Format/ObjCPropertyAttributeOrderFixer.h,1,['depend'],['depending']
Integrability,"//===--- Offloading.h - Utilities for handling offloading code -*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file contains the binary format used for budingling device metadata with; // an associated device image. The data can then be stored inside a host object; // file to create a fat binary and read by the linker. This is intended to be a; // thin wrapper around the image itself. If this format becomes sufficiently; // complex it should be moved to a standard binary format like msgpack or ELF.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Object/OffloadBinary.h:631,wrap,wrapper,631,interpreter/llvm-project/llvm/include/llvm/Object/OffloadBinary.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Object/OffloadBinary.h,1,['wrap'],['wrapper']
Integrability,"//===--- OptimizedStructLayout.cpp - Optimal data layout algorithm ----------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements the performOptimizedStructLayout interface.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/OptimizedStructLayout.cpp:445,interface,interface,445,interpreter/llvm-project/llvm/lib/Support/OptimizedStructLayout.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/OptimizedStructLayout.cpp,1,['interface'],['interface']
Integrability,"//===--- PPCaching.cpp - Handle caching lexed tokens ----------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements pieces of the Preprocessor interface that manage the; // caching of lexed tokens.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Lex/PPCaching.cpp:431,interface,interface,431,interpreter/llvm-project/clang/lib/Lex/PPCaching.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Lex/PPCaching.cpp,1,['interface'],['interface']
Integrability,"//===--- PPCallbacks.h - Callbacks for Preprocessor actions -----*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; ///; /// \file; /// Defines the PPCallbacks interface.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Lex/PPCallbacks.h:420,interface,interface,420,interpreter/llvm-project/clang/include/clang/Lex/PPCallbacks.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Lex/PPCallbacks.h,1,['interface'],['interface']
Integrability,"//===--- PPLexerChange.cpp - Handle changing lexers in the preprocessor ---===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements pieces of the Preprocessor interface that manage the; // current lexer stack.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Lex/PPLexerChange.cpp:431,interface,interface,431,interpreter/llvm-project/clang/lib/Lex/PPLexerChange.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Lex/PPLexerChange.cpp,1,['interface'],['interface']
Integrability,"//===--- ParseDecl.cpp - Declaration Parsing --------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements the Declaration portions of the Parser interfaces.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParseDecl.cpp:443,interface,interfaces,443,interpreter/llvm-project/clang/lib/Parse/ParseDecl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParseDecl.cpp,1,['interface'],['interfaces']
Integrability,"//===--- ParseDeclCXX.cpp - C++ Declaration Parsing -------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements the C++ Declaration portions of the Parser interfaces.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParseDeclCXX.cpp:447,interface,interfaces,447,interpreter/llvm-project/clang/lib/Parse/ParseDeclCXX.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParseDeclCXX.cpp,1,['interface'],['interfaces']
Integrability,"//===--- ParseObjC.cpp - Objective C Parsing ------------------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements the Objective-C portions of the Parser interface.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParseObjc.cpp:443,interface,interface,443,interpreter/llvm-project/clang/lib/Parse/ParseObjc.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParseObjc.cpp,1,['interface'],['interface']
Integrability,"//===--- ParseStmt.cpp - Statement and Block Parser -----------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements the Statement and Block portions of the Parser; // interface.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParseStmt.cpp:455,interface,interface,455,interpreter/llvm-project/clang/lib/Parse/ParseStmt.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParseStmt.cpp,1,['interface'],['interface']
Integrability,"//===--- ParseTentative.cpp - Ambiguity Resolution Parsing ----------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements the tentative parsing portions of the Parser; // interfaces, for ambiguity resolution.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParseTentative.cpp:453,interface,interfaces,453,interpreter/llvm-project/clang/lib/Parse/ParseTentative.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParseTentative.cpp,1,['interface'],['interfaces']
Integrability,"//===--- Parser.cpp - C Language Family Parser ----------------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements the Parser interfaces.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/Parser.cpp:415,interface,interfaces,415,interpreter/llvm-project/clang/lib/Parse/Parser.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/Parser.cpp,1,['interface'],['interfaces']
Integrability,"//===--- Parser.h - C Language Parser ---------------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines the Parser interface.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Parse/Parser.h:412,interface,interface,412,interpreter/llvm-project/clang/include/clang/Parse/Parser.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Parse/Parser.h,1,['interface'],['interface']
Integrability,"//===--- PathDiagnosticConsumers.h - Path Diagnostic Clients ------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines the interface to create different path diagostic clients.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/StaticAnalyzer/Core/PathDiagnosticConsumers.h:407,interface,interface,407,interpreter/llvm-project/clang/include/clang/StaticAnalyzer/Core/PathDiagnosticConsumers.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/StaticAnalyzer/Core/PathDiagnosticConsumers.h,1,['interface'],['interface']
Integrability,"//===--- QualifierAlignmentFixer.cpp ----------------------------*- C++--*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; ///; /// \file; /// This file implements QualifierAlignmentFixer, a TokenAnalyzer that; /// enforces either left or right const depending on the style.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Format/QualifierAlignmentFixer.cpp:504,depend,depending,504,interpreter/llvm-project/clang/lib/Format/QualifierAlignmentFixer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Format/QualifierAlignmentFixer.cpp,1,['depend'],['depending']
Integrability,"//===--- QualifierAlignmentFixer.h -------------------------------*- C++-*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; ///; /// \file; /// This file declares QualifierAlignmentFixer, a TokenAnalyzer that; /// enforces either east or west const depending on the style.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Format/QualifierAlignmentFixer.h:501,depend,depending,501,interpreter/llvm-project/clang/lib/Format/QualifierAlignmentFixer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Format/QualifierAlignmentFixer.h,1,['depend'],['depending']
Integrability,"//===--- RDFDeadCode.h ----------------------------------------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // RDF-based generic dead code elimination.; //; // The main interface of this class are functions ""collect"" and ""erase"".; // This allows custom processing of the function being optimized by a; // particular consumer. The simplest way to use this class would be to; // instantiate an object, and then simply call ""collect"" and ""erase"",; // passing the result of ""getDeadInstrs()"" to it.; // A more complex scenario would be to call ""collect"" first, then visit; // all post-increment instructions to see if the address update is dead; // or not, and if it is, convert the instruction to a non-updating form.; // After that ""erase"" can be called with the set of nodes including both,; // dead defs from the updating instructions and the nodes corresponding; // to the dead instructions.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/RDFDeadCode.h:441,interface,interface,441,interpreter/llvm-project/llvm/lib/Target/Hexagon/RDFDeadCode.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/RDFDeadCode.h,1,['interface'],['interface']
Integrability,"//===--- Reader.h - Input ---------------------------------------*- C++ -*-===//; //; // The LLVM Compiler Infrastructure; //; // This file is distributed under the University of Illinois Open Source; // License. See LICENSE.TXT for details.; //; //===----------------------------------------------------------------------===//; //; // This file defines the abstract input interface.; //; // Axel Naumann <axel@cern.ch>, 2011-05-12; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/Reader.h:373,interface,interface,373,core/textinput/src/textinput/Reader.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/Reader.h,1,['interface'],['interface']
Integrability,"//===--- RecursiveASTVisitor.h - Recursive AST Visitor ----------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines the RecursiveASTVisitor interface, which recursively; // traverses the entire AST.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/RecursiveASTVisitor.h:425,interface,interface,425,interpreter/llvm-project/clang/include/clang/AST/RecursiveASTVisitor.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/RecursiveASTVisitor.h,1,['interface'],['interface']
Integrability,"//===--- RecursiveSymbolVisitor.h - Clang refactoring library -------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; ///; /// \file; /// A wrapper class around \c RecursiveASTVisitor that visits each; /// occurrences of a named symbol.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Tooling/Refactoring/RecursiveSymbolVisitor.h:398,wrap,wrapper,398,interpreter/llvm-project/clang/include/clang/Tooling/Refactoring/RecursiveSymbolVisitor.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Tooling/Refactoring/RecursiveSymbolVisitor.h,1,['wrap'],['wrapper']
Integrability,"//===--- Refactoring.h - Framework for clang refactoring tools --*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // Interfaces supporting refactorings that span multiple translation units.; // While single translation unit refactorings are supported via the Rewriter,; // when refactoring multiple translation units changes must be stored in a; // SourceManager independent form, duplicate changes need to be removed, and; // all changes must be applied at once at the end of the refactoring so that; // the code is always parseable.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Tooling/Refactoring.h:383,Interface,Interfaces,383,interpreter/llvm-project/clang/include/clang/Tooling/Refactoring.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Tooling/Refactoring.h,1,['Interface'],['Interfaces']
Integrability,"//===--- SValVisitor.h - Visitor for SVal subclasses ------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines the SValVisitor, SymExprVisitor, and MemRegionVisitor; // interfaces, and also FullSValVisitor, which visits all three hierarchies.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/StaticAnalyzer/Core/PathSensitive/SValVisitor.h:459,interface,interfaces,459,interpreter/llvm-project/clang/include/clang/StaticAnalyzer/Core/PathSensitive/SValVisitor.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/StaticAnalyzer/Core/PathSensitive/SValVisitor.h,1,['interface'],['interfaces']
Integrability,"//===--- ScratchBuffer.cpp - Scratch space for forming tokens -------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements the ScratchBuffer interface.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Lex/ScratchBuffer.cpp:422,interface,interface,422,interpreter/llvm-project/clang/lib/Lex/ScratchBuffer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Lex/ScratchBuffer.cpp,1,['interface'],['interface']
Integrability,"//===--- ScratchBuffer.h - Scratch space for forming tokens -----*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines the ScratchBuffer interface.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Lex/ScratchBuffer.h:419,interface,interface,419,interpreter/llvm-project/clang/include/clang/Lex/ScratchBuffer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Lex/ScratchBuffer.h,1,['interface'],['interface']
Integrability,"//===--- SemaConsumer.h - Abstract interface for AST semantics --*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines the SemaConsumer class, a subclass of; // ASTConsumer that is used by AST clients that also require; // additional semantic analysis.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Sema/SemaConsumer.h:35,interface,interface,35,interpreter/llvm-project/clang/include/clang/Sema/SemaConsumer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Sema/SemaConsumer.h,1,['interface'],['interface']
Integrability,"//===--- SemaExceptionSpec.cpp - C++ Exception Specifications ---*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file provides Sema routines for C++ exception specification testing.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExceptionSpec.cpp:407,rout,routines,407,interpreter/llvm-project/clang/lib/Sema/SemaExceptionSpec.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExceptionSpec.cpp,1,['rout'],['routines']
Integrability,"//===--- SemaInternal.h - Internal Sema Interfaces --------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file provides common API and #includes for the internal; // implementation of Sema.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Sema/SemaInternal.h:40,Interface,Interfaces,40,interpreter/llvm-project/clang/include/clang/Sema/SemaInternal.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Sema/SemaInternal.h,1,['Interface'],['Interfaces']
Integrability,"//===--- SemaOverload.cpp - C++ Overloading -------------------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file provides Sema routines for C++ overloading.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaOverload.cpp:407,rout,routines,407,interpreter/llvm-project/clang/lib/Sema/SemaOverload.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaOverload.cpp,1,['rout'],['routines']
Integrability,"//===--- SemaPseudoObject.cpp - Semantic Analysis for Pseudo-Objects ------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements semantic analysis for expressions involving; // pseudo-object references. Pseudo-objects are conceptual objects; // whose storage is entirely abstract and all accesses to which are; // translated through some sort of abstraction barrier.; //; // For example, Objective-C objects can have ""properties"", either; // declared or undeclared. A property may be accessed by writing; // expr.prop; // where 'expr' is an r-value of Objective-C pointer type and 'prop'; // is the name of the property. If this expression is used in a context; // needing an r-value, it is treated as if it were a message-send; // of the associated 'getter' selector, typically:; // [expr prop]; // If it is used as the LHS of a simple assignment, it is treated; // as a message-send of the associated 'setter' selector, typically:; // [expr setProp: RHS]; // If it is used as the LHS of a compound assignment, or the operand; // of a unary increment or decrement, both are required; for example,; // 'expr.prop *= 100' would be translated to:; // [expr setProp: [expr prop] * 100]; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaPseudoObject.cpp:990,message,message-send,990,interpreter/llvm-project/clang/lib/Sema/SemaPseudoObject.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaPseudoObject.cpp,2,['message'],['message-send']
Integrability,"//===--- SignalHandler.cpp - Signal Emission --------------------*- C++ -*-===//; //; // The LLVM Compiler Infrastructure; //; // This file is distributed under the University of Illinois Open Source; // License. See LICENSE.TXT for details.; //; //===----------------------------------------------------------------------===//; //; // This file defines the interface for emitting signals.; //; // Axel Naumann <axel@cern.ch>, 2011-05-12; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/SignalHandler.cpp:358,interface,interface,358,core/textinput/src/textinput/SignalHandler.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/SignalHandler.cpp,1,['interface'],['interface']
Integrability,"//===--- SignalHandler.h - Signal Emission ----------------------*- C++ -*-===//; //; // The LLVM Compiler Infrastructure; //; // This file is distributed under the University of Illinois Open Source; // License. See LICENSE.TXT for details.; //; //===----------------------------------------------------------------------===//; //; // This file defines the interface for emitting signals.; //; // Axel Naumann <axel@cern.ch>, 2011-05-12; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/SignalHandler.h:358,interface,interface,358,core/textinput/src/textinput/SignalHandler.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/SignalHandler.h,1,['interface'],['interface']
Integrability,"//===--- SimpleRemoteEPCUtils.h - Utils for Simple Remote EPC ---*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // Message definitions and other utilities for SimpleRemoteEPC and; // SimpleRemoteEPCServer.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/Orc/Shared/SimpleRemoteEPCUtils.h:383,Message,Message,383,interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/Orc/Shared/SimpleRemoteEPCUtils.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/Orc/Shared/SimpleRemoteEPCUtils.h,1,['Message'],['Message']
Integrability,"//===--- SourceCode.cpp - Source code manipulation routines -----*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file provides functions that simplify extraction of source code.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Tooling/Transformer/SourceCode.cpp:51,rout,routines,51,interpreter/llvm-project/clang/lib/Tooling/Transformer/SourceCode.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Tooling/Transformer/SourceCode.cpp,1,['rout'],['routines']
Integrability,"//===--- SourceCode.h - Source code manipulation routines -------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file provides functions that simplify extraction of source code.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Tooling/Transformer/SourceCode.h:49,rout,routines,49,interpreter/llvm-project/clang/include/clang/Tooling/Transformer/SourceCode.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Tooling/Transformer/SourceCode.h,1,['rout'],['routines']
Integrability,"//===--- StandardLibrary.h --------------------------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; ///; /// \file; /// Provides an interface for querying information about C and C++ Standard; /// Library headers and symbols.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Tooling/Inclusions/StandardLibrary.h:408,interface,interface,408,interpreter/llvm-project/clang/include/clang/Tooling/Inclusions/StandardLibrary.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Tooling/Inclusions/StandardLibrary.h,1,['interface'],['interface']
Integrability,"//===--- SyncScope.h - Atomic synchronization scopes ------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; ///; /// \file; /// Provides definitions for the atomic synchronization scopes.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/SyncScope.h:30,synchroniz,synchronization,30,interpreter/llvm-project/clang/include/clang/Basic/SyncScope.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/SyncScope.h,2,['synchroniz'],['synchronization']
Integrability,"//===--- TargetInfo.cpp - Information about Target machine ----------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements the TargetInfo interface.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Basic/TargetInfo.cpp:419,interface,interface,419,interpreter/llvm-project/clang/lib/Basic/TargetInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Basic/TargetInfo.cpp,1,['interface'],['interface']
Integrability,"//===--- TargetInfo.h - Expose information about the target -----*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; ///; /// \file; /// Defines the clang::TargetInfo interface.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/TargetInfo.h:426,interface,interface,426,interpreter/llvm-project/clang/include/clang/Basic/TargetInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/TargetInfo.h,1,['interface'],['interface']
Integrability,"//===--- TerminalDisplay.cpp - Output To Terminal ---------------*- C++ -*-===//; //; // The LLVM Compiler Infrastructure; //; // This file is distributed under the University of Illinois Open Source; // License. See LICENSE.TXT for details.; //; //===----------------------------------------------------------------------===//; //; // This file defines the abstract interface for writing to a terminal.; //; // Axel Naumann <axel@cern.ch>, 2011-05-12; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/TerminalDisplay.cpp:367,interface,interface,367,core/textinput/src/textinput/TerminalDisplay.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/TerminalDisplay.cpp,1,['interface'],['interface']
Integrability,"//===--- TerminalDisplay.h - Output To Terminal -----------------*- C++ -*-===//; //; // The LLVM Compiler Infrastructure; //; // This file is distributed under the University of Illinois Open Source; // License. See LICENSE.TXT for details.; //; //===----------------------------------------------------------------------===//; //; // This file defines the abstract interface for writing to a terminal.; //; // Axel Naumann <axel@cern.ch>, 2011-05-12; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/TerminalDisplay.h:367,interface,interface,367,core/textinput/src/textinput/TerminalDisplay.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/TerminalDisplay.h,1,['interface'],['interface']
Integrability,"//===--- TerminalDisplayUnix.cpp - Output To UNIX Terminal ------*- C++ -*-===//; //; // The LLVM Compiler Infrastructure; //; // This file is distributed under the University of Illinois Open Source; // License. See LICENSE.TXT for details.; //; //===----------------------------------------------------------------------===//; //; // This file defines the interface for writing to a UNIX terminal. It tries to; // support all ""common"" terminal types.; //; // Axel Naumann <axel@cern.ch>, 2011-05-12; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/TerminalDisplayUnix.cpp:358,interface,interface,358,core/textinput/src/textinput/TerminalDisplayUnix.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/TerminalDisplayUnix.cpp,1,['interface'],['interface']
Integrability,"//===--- TerminalDisplayUnix.h - Output To UNIX Terminal --------*- C++ -*-===//; //; // The LLVM Compiler Infrastructure; //; // This file is distributed under the University of Illinois Open Source; // License. See LICENSE.TXT for details.; //; //===----------------------------------------------------------------------===//; //; // This file defines the interface for writing to a UNIX terminal. It tries to; // support all ""common"" terminal types.; //; // Axel Naumann <axel@cern.ch>, 2011-05-12; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/TerminalDisplayUnix.h:358,interface,interface,358,core/textinput/src/textinput/TerminalDisplayUnix.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/TerminalDisplayUnix.h,1,['interface'],['interface']
Integrability,"//===--- TerminalDisplayWin.h - Output To Windows Console -------*- C++ -*-===//; //; // The LLVM Compiler Infrastructure; //; // This file is distributed under the University of Illinois Open Source; // License. See LICENSE.TXT for details.; //; //===----------------------------------------------------------------------===//; //; // This file defines the interface for writing to a Windows console; // i.e. cmd.exe.; //; // Axel Naumann <axel@cern.ch>, 2011-05-12; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/TerminalDisplayWin.cpp:358,interface,interface,358,core/textinput/src/textinput/TerminalDisplayWin.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/TerminalDisplayWin.cpp,2,['interface'],['interface']
Integrability,"//===--- TerminalReader.cpp - Input From Terminal ---------------*- C++ -*-===//; //; // The LLVM Compiler Infrastructure; //; // This file is distributed under the University of Illinois Open Source; // License. See LICENSE.TXT for details.; //; //===----------------------------------------------------------------------===//; //; // This file defines the interface reading from a terminal.; //; // Axel Naumann <axel@cern.ch>, 2011-05-12; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/StreamReader.cpp:358,interface,interface,358,core/textinput/src/textinput/StreamReader.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/StreamReader.cpp,1,['interface'],['interface']
Integrability,"//===--- TerminalReader.h - Input From Terminal -----------------*- C++ -*-===//; //; // The LLVM Compiler Infrastructure; //; // This file is distributed under the University of Illinois Open Source; // License. See LICENSE.TXT for details.; //; //===----------------------------------------------------------------------===//; //; // This file defines the interface reading from a terminal.; //; // Axel Naumann <axel@cern.ch>, 2011-05-12; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/StreamReader.h:358,interface,interface,358,core/textinput/src/textinput/StreamReader.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/StreamReader.h,1,['interface'],['interface']
Integrability,"//===--- TerminalReaderUnix.cpp - Input From UNIX Terminal ------*- C++ -*-===//; //; // The LLVM Compiler Infrastructure; //; // This file is distributed under the University of Illinois Open Source; // License. See LICENSE.TXT for details.; //; //===----------------------------------------------------------------------===//; //; // This file defines the interface reading from a UNIX terminal. It tries to; // support all common terminal types.; //; // Axel Naumann <axel@cern.ch>, 2011-05-12; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/StreamReaderUnix.cpp:358,interface,interface,358,core/textinput/src/textinput/StreamReaderUnix.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/StreamReaderUnix.cpp,1,['interface'],['interface']
Integrability,"//===--- TerminalReaderUnix.h - Input From UNIX Terminal --------*- C++ -*-===//; //; // The LLVM Compiler Infrastructure; //; // This file is distributed under the University of Illinois Open Source; // License. See LICENSE.TXT for details.; //; //===----------------------------------------------------------------------===//; //; // This file defines the interface reading from a UNIX terminal. It tries to; // support all common terminal types.; //; // Axel Naumann <axel@cern.ch>, 2011-05-12; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/StreamReaderUnix.h:358,interface,interface,358,core/textinput/src/textinput/StreamReaderUnix.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/StreamReaderUnix.h,1,['interface'],['interface']
Integrability,"//===--- TerminalReaderWin.cpp - Input From Windows Console -----*- C++ -*-===//; //; // The LLVM Compiler Infrastructure; //; // This file is distributed under the University of Illinois Open Source; // License. See LICENSE.TXT for details.; //; //===----------------------------------------------------------------------===//; //; // This file defines the interface for reading from Window's cmd.exe console.; //; // Axel Naumann <axel@cern.ch>, 2011-05-12; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/StreamReaderWin.cpp:358,interface,interface,358,core/textinput/src/textinput/StreamReaderWin.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/StreamReaderWin.cpp,1,['interface'],['interface']
Integrability,"//===--- TerminalReaderWin.h - Input From Windows Console -------*- C++ -*-===//; //; // The LLVM Compiler Infrastructure; //; // This file is distributed under the University of Illinois Open Source; // License. See LICENSE.TXT for details.; //; //===----------------------------------------------------------------------===//; //; // This file defines the interface for reading from Window's cmd.exe console.; //; // Axel Naumann <axel@cern.ch>, 2011-05-12; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/StreamReaderWin.h:358,interface,interface,358,core/textinput/src/textinput/StreamReaderWin.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/StreamReaderWin.h,1,['interface'],['interface']
Integrability,"//===--- TestAST.h - Build clang ASTs for testing -------------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // In normal operation of Clang, the FrontendAction's lifecycle both creates; // and destroys the AST, and code should operate on it during callbacks in; // between (e.g. via ASTConsumer).; //; // For tests it is often more convenient to parse an AST from code, and keep it; // alive as a normal local object, with assertions as straight-line code.; // TestAST provides such an interface.; // (ASTUnit can be used for this purpose, but is a production library with; // broad scope and complicated API).; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Testing/TestAST.h:758,interface,interface,758,interpreter/llvm-project/clang/include/clang/Testing/TestAST.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Testing/TestAST.h,1,['interface'],['interface']
Integrability,"//===--- TestSupport.cpp - Clang-based refactoring tool -------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; ///; /// \file; /// This file implements routines that provide refactoring testing; /// utilities.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/clang-refactor/TestSupport.cpp:417,rout,routines,417,interpreter/llvm-project/clang/tools/clang-refactor/TestSupport.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/clang-refactor/TestSupport.cpp,1,['rout'],['routines']
Integrability,"//===--- TestSupport.h - Clang-based refactoring tool -----------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; ///; /// \file; /// Declares datatypes and routines that are used by test-specific code; /// in clang-refactor.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/clang-refactor/TestSupport.h:419,rout,routines,419,interpreter/llvm-project/clang/tools/clang-refactor/TestSupport.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/clang-refactor/TestSupport.h,1,['rout'],['routines']
Integrability,"//===--- Text.h - Colored Text ----------------------------------*- C++ -*-===//; //; // The LLVM Compiler Infrastructure; //; // This file is distributed under the University of Illinois Open Source; // License. See LICENSE.TXT for details.; //; //===----------------------------------------------------------------------===//; //; // This file defines the interface for a string plus its characters' color; // indexes.; //; // Axel Naumann <axel@cern.ch>, 2011-05-12; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/Text.h:358,interface,interface,358,core/textinput/src/textinput/Text.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/Text.h,1,['interface'],['interface']
Integrability,"//===--- TextDiagnosticPrinter.cpp - Diagnostic Printer -------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This diagnostic client prints out their diagnostic messages.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/TextDiagnosticPrinter.cpp:434,message,messages,434,interpreter/llvm-project/clang/lib/Frontend/TextDiagnosticPrinter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/TextDiagnosticPrinter.cpp,1,['message'],['messages']
Integrability,"//===--- TextInput.cpp - Main Interface -------------------------*- C++ -*-===//; //; // The LLVM Compiler Infrastructure; //; // This file is distributed under the University of Illinois Open Source; // License. See LICENSE.TXT for details.; //; //===----------------------------------------------------------------------===//; //; // This file defines the main interface for the TextInput library.; //; // Axel Naumann <axel@cern.ch>, 2011-05-12; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/TextInput.cpp:30,Interface,Interface,30,core/textinput/src/textinput/TextInput.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/TextInput.cpp,2,"['Interface', 'interface']","['Interface', 'interface']"
Integrability,"//===--- TextInput.h - Main Interface ---------------------------*- C++ -*-===//; //; // The LLVM Compiler Infrastructure; //; // This file is distributed under the University of Illinois Open Source; // License. See LICENSE.TXT for details.; //; //===----------------------------------------------------------------------===//; //; // This file defines the main interface for the TextInput library.; //; // Axel Naumann <axel@cern.ch>, 2011-05-12; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/TextInput.h:28,Interface,Interface,28,core/textinput/src/textinput/TextInput.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/TextInput.h,2,"['Interface', 'interface']","['Interface', 'interface']"
Integrability,"//===--- TextInputContext.cpp - Object Holder -------------------*- C++ -*-===//; //; // The LLVM Compiler Infrastructure; //; // This file is distributed under the University of Illinois Open Source; // License. See LICENSE.TXT for details.; //; //===----------------------------------------------------------------------===//; //; // This file defines the internal interface for TextInput's auxiliary; // objects.; //; // Axel Naumann <axel@cern.ch>, 2011-05-12; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/TextInputContext.cpp:367,interface,interface,367,core/textinput/src/textinput/TextInputContext.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/TextInputContext.cpp,1,['interface'],['interface']
Integrability,"//===--- TextInputContext.h - Object Holder ----------------------*- C++ -*-===//; //; // The LLVM Compiler Infrastructure; //; // This file is distributed under the University of Illinois Open Source; // License. See LICENSE.TXT for details.; //; //===----------------------------------------------------------------------===//; //; // This file defines the internal interface for TextInput's auxiliary; // objects.; //; // Axel Naumann <axel@cern.ch>, 2011-05-12; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/TextInputContext.h:368,interface,interface,368,core/textinput/src/textinput/TextInputContext.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/TextInputContext.h,1,['interface'],['interface']
Integrability,"//===--- Token.h - Token interface ------------------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines the Token interface.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Lex/Token.h:25,interface,interface,25,interpreter/llvm-project/clang/include/clang/Lex/Token.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Lex/Token.h,2,['interface'],['interface']
Integrability,"//===--- TransProperties.cpp - Transformations to ARC mode ----------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // rewriteProperties:; //; // - Adds strong/weak/unsafe_unretained ownership specifier to properties that; // are missing one.; // - Migrates properties from (retain) to (strong) and (assign) to; // (unsafe_unretained/weak).; // - If a property is synthesized, adds the ownership specifier in the ivar; // backing the property.; //; // @interface Foo : NSObject {; // NSObject *x;; // }; // @property (assign) id x;; // @end; // ---->; // @interface Foo : NSObject {; // NSObject *__weak x;; // }; // @property (weak) id x;; // @end; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/ARCMigrate/TransProperties.cpp:717,interface,interface,717,interpreter/llvm-project/clang/lib/ARCMigrate/TransProperties.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/ARCMigrate/TransProperties.cpp,2,['interface'],['interface']
Integrability,"//===--- TransRetainReleaseDealloc.cpp - Transformations to ARC mode ------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // removeRetainReleaseDealloc:; //; // Removes retain/release/autorelease/dealloc messages.; //; // return [[foo retain] autorelease];; // ---->; // return foo;; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/ARCMigrate/TransRetainReleaseDealloc.cpp:462,message,messages,462,interpreter/llvm-project/clang/lib/ARCMigrate/TransRetainReleaseDealloc.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/ARCMigrate/TransRetainReleaseDealloc.cpp,1,['message'],['messages']
Integrability,"//===--- TypeLocVisitor.h - Visitor for TypeLoc subclasses ------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines the TypeLocVisitor interface.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/TypeLocVisitor.h:420,interface,interface,420,interpreter/llvm-project/clang/include/clang/AST/TypeLocVisitor.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/TypeLocVisitor.h,1,['interface'],['interface']
Integrability,"//===--- TypeVisitor.h - Visitor for Type subclasses ------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines the TypeVisitor interface.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/TypeVisitor.h:417,interface,interface,417,interpreter/llvm-project/clang/include/clang/AST/TypeVisitor.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/TypeVisitor.h,1,['interface'],['interface']
Integrability,"//===--- Utils.h - Misc utilities for the front-end -------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This header contains miscellaneous utilities for various front-end actions; // which were split from Frontend to minimise Frontend's dependencies.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/FrontendTool/Utils.h:516,depend,dependencies,516,interpreter/llvm-project/clang/include/clang/FrontendTool/Utils.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/FrontendTool/Utils.h,1,['depend'],['dependencies']
Integrability,"//===--- Value.h - Definition of interpreter value --------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // Value is a lightweight struct that is used for carrying execution results in; // clang-repl. It's a special runtime that acts like a messager between compiled; // code and interpreted code. This makes it possible to exchange interesting; // information between the compiled & interpreted world.; //; // A typical usage is like the below:; //; // Value V;; // Interp.ParseAndExecute(""int x = 42;"");; // Interp.ParseAndExecute(""x"", &V);; // V.getType(); // <-- Yields a clang::QualType.; // V.getInt(); // <-- Yields 42.; //; // The current design is still highly experimental and nobody should rely on the; // API being stable because we're hopefully going to make significant changes to; // it in the relatively near future. For example, Value also intends to be used; // as an exchange token for JIT support enabling remote execution on the embed; // devices where the JIT infrastructure cannot fit. To support that we will need; // to split the memory storage in a different place and perhaps add a resource; // header is similar to intrinsics headers which have stricter performance; // constraints.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Interpreter/Value.h:516,message,messager,516,interpreter/llvm-project/clang/include/clang/Interpreter/Value.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Interpreter/Value.h,1,['message'],['messager']
Integrability,"//===--- fallible_iterator.h - Wrapper for fallible iterators ---*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/fallible_iterator.h:31,Wrap,Wrapper,31,interpreter/llvm-project/llvm/include/llvm/ADT/fallible_iterator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/fallible_iterator.h,1,['Wrap'],['Wrapper']
Integrability,"//===---- CGOpenMPRuntimeGPU.cpp - Interface to OpenMP GPU Runtimes ----===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This provides a generalized class for OpenMP runtime code generation; // specialized by GPU targets NVPTX and AMDGCN.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntimeGPU.cpp:35,Interface,Interface,35,interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntimeGPU.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntimeGPU.cpp,1,['Interface'],['Interface']
Integrability,"//===---- CoroEarly.h - Lower early coroutine intrinsics --------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // \file; // This file provides the interface to the early coroutine intrinsic lowering; // pass. This pass lowers coroutine intrinsics that hide the details of the; // exact calling convention for coroutine resume and destroy functions and; // details of the structure of the coroutine frame.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Coroutines/CoroEarly.h:416,interface,interface,416,interpreter/llvm-project/llvm/include/llvm/Transforms/Coroutines/CoroEarly.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Coroutines/CoroEarly.h,1,['interface'],['interface']
Integrability,"//===---- IndirectThunks.h - Indirect Thunk Base Class ----------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; ///; /// \file; /// Contains a base class for Passes that inject an MI thunk.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/IndirectThunks.h:434,inject,inject,434,interpreter/llvm-project/llvm/include/llvm/CodeGen/IndirectThunks.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/IndirectThunks.h,1,['inject'],['inject']
Integrability,"//===---- ScheduleDAGSDNodes.h - SDNode Scheduling --------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements the ScheduleDAGSDNodes class, which implements; // scheduling for an SDNode-based dependency graph.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGSDNodes.h:486,depend,dependency,486,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGSDNodes.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGSDNodes.h,1,['depend'],['dependency']
Integrability,"//===---- SemaAccess.cpp - C++ Access Control -------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file provides Sema routines for C++ access control semantics.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaAccess.cpp:407,rout,routines,407,interpreter/llvm-project/clang/lib/Sema/SemaAccess.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaAccess.cpp,1,['rout'],['routines']
Integrability,"//===---- SimplePackedSerialization.h - simple serialization ----*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // The behavior of the utilities in this header must be synchronized with the; // behavior of the utilities in; // compiler-rt/lib/orc/simple_packed_serialization.h.; //; // The Simple Packed Serialization (SPS) utilities are used to generate; // argument and return buffers for wrapper functions using the following; // serialization scheme:; //; // Primitives (signed types should be two's complement):; // bool, char, int8_t, uint8_t -- 8-bit (0=false, 1=true); // int16_t, uint16_t -- 16-bit little endian; // int32_t, uint32_t -- 32-bit little endian; // int64_t, int64_t -- 64-bit little endian; //; // Sequence<T>:; // Serialized as the sequence length (as a uint64_t) followed by the; // serialization of each of the elements without padding.; //; // Tuple<T1, ..., TN>:; // Serialized as each of the element types from T1 to TN without padding.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/Orc/Shared/SimplePackedSerialization.h:436,synchroniz,synchronized,436,interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/Orc/Shared/SimplePackedSerialization.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/Orc/Shared/SimplePackedSerialization.h,2,"['synchroniz', 'wrap']","['synchronized', 'wrapper']"
Integrability,"//===---- TargetInfo.cpp - Encapsulate target details -----------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // These classes wrap the information about a call or function; // definition used to handle ABI compliancy.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/TargetInfo.cpp:397,wrap,wrap,397,interpreter/llvm-project/clang/lib/CodeGen/TargetInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/TargetInfo.cpp,1,['wrap'],['wrap']
Integrability,"//===---- TargetInfo.h - Encapsulate target details -------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // These classes wrap the information about a call or function; // definition used to handle ABI compliancy.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/TargetInfo.h:397,wrap,wrap,397,interpreter/llvm-project/clang/lib/CodeGen/TargetInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/TargetInfo.h,1,['wrap'],['wrap']
Integrability,"//===---- llvm/MDBuilder.cpp - Builder for LLVM metadata ------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines the MDBuilder class, which is used as a convenient way to; // create LLVM metadata with a consistent and simplified interface.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/MDBuilder.cpp:517,interface,interface,517,interpreter/llvm-project/llvm/lib/IR/MDBuilder.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/MDBuilder.cpp,1,['interface'],['interface']
Integrability,"//===---- llvm/MDBuilder.h - Builder for LLVM metadata ----------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines the MDBuilder class, which is used as a convenient way to; // create LLVM metadata with a consistent and simplified interface.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/MDBuilder.h:517,interface,interface,517,interpreter/llvm-project/llvm/include/llvm/IR/MDBuilder.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/MDBuilder.h,1,['interface'],['interface']
Integrability,"//===----- CGCUDANV.cpp - Interface to NVIDIA CUDA Runtime ----------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This provides a class for CUDA code generation targeting the NVIDIA CUDA; // runtime library.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGCUDANV.cpp:26,Interface,Interface,26,interpreter/llvm-project/clang/lib/CodeGen/CGCUDANV.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGCUDANV.cpp,1,['Interface'],['Interface']
Integrability,"//===----- CGCUDARuntime.cpp - Interface to CUDA Runtimes -----------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This provides an abstract class for CUDA code generation. Concrete; // subclasses of this implement code generation for specific CUDA; // runtime libraries.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGCUDARuntime.cpp:31,Interface,Interface,31,interpreter/llvm-project/clang/lib/CodeGen/CGCUDARuntime.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGCUDARuntime.cpp,1,['Interface'],['Interface']
Integrability,"//===----- CGCUDARuntime.h - Interface to CUDA Runtimes ---------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This provides an abstract class for CUDA code generation. Concrete; // subclasses of this implement code generation for specific CUDA; // runtime libraries.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGCUDARuntime.h:29,Interface,Interface,29,interpreter/llvm-project/clang/lib/CodeGen/CGCUDARuntime.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGCUDARuntime.h,1,['Interface'],['Interface']
Integrability,"//===----- CGCXXABI.cpp - Interface to C++ ABIs ---------------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This provides an abstract class for C++ code generation. Concrete subclasses; // of this implement code generation for specific C++ ABIs.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGCXXABI.cpp:26,Interface,Interface,26,interpreter/llvm-project/clang/lib/CodeGen/CGCXXABI.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGCXXABI.cpp,1,['Interface'],['Interface']
Integrability,"//===----- CGCXXABI.h - Interface to C++ ABIs -------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This provides an abstract class for C++ code generation. Concrete subclasses; // of this implement code generation for specific C++ ABIs.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGCXXABI.h:24,Interface,Interface,24,interpreter/llvm-project/clang/lib/CodeGen/CGCXXABI.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGCXXABI.h,1,['Interface'],['Interface']
Integrability,"//===----- CGCall.h - Encapsulate calling convention details ----*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // These classes wrap the information about a call or function; // definition used to handle ABI compliancy.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGCall.h:397,wrap,wrap,397,interpreter/llvm-project/clang/lib/CodeGen/CGCall.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGCall.h,1,['wrap'],['wrap']
Integrability,"//===----- CGHLSLRuntime.cpp - Interface to HLSL Runtimes -----------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This provides an abstract class for HLSL code generation. Concrete; // subclasses of this implement code generation for specific HLSL; // runtime libraries.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGHLSLRuntime.cpp:31,Interface,Interface,31,interpreter/llvm-project/clang/lib/CodeGen/CGHLSLRuntime.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGHLSLRuntime.cpp,1,['Interface'],['Interface']
Integrability,"//===----- CGHLSLRuntime.h - Interface to HLSL Runtimes -----*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This provides an abstract class for HLSL code generation. Concrete; // subclasses of this implement code generation for specific HLSL; // runtime libraries.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGHLSLRuntime.h:29,Interface,Interface,29,interpreter/llvm-project/clang/lib/CodeGen/CGHLSLRuntime.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGHLSLRuntime.h,1,['Interface'],['Interface']
Integrability,"//===----- CGObjCRuntime.h - Interface to ObjC Runtimes ---------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This provides an abstract class for Objective-C code generation. Concrete; // subclasses of this implement code generation for specific Objective-C; // runtime libraries.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGObjCRuntime.h:29,Interface,Interface,29,interpreter/llvm-project/clang/lib/CodeGen/CGObjCRuntime.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGObjCRuntime.h,1,['Interface'],['Interface']
Integrability,"//===----- CGOpenCLRuntime.cpp - Interface to OpenCL Runtimes -------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This provides an abstract class for OpenCL code generation. Concrete; // subclasses of this implement code generation for specific OpenCL; // runtime libraries.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenCLRuntime.cpp:33,Interface,Interface,33,interpreter/llvm-project/clang/lib/CodeGen/CGOpenCLRuntime.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenCLRuntime.cpp,1,['Interface'],['Interface']
Integrability,"//===----- CGOpenCLRuntime.h - Interface to OpenCL Runtimes -----*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This provides an abstract class for OpenCL code generation. Concrete; // subclasses of this implement code generation for specific OpenCL; // runtime libraries.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenCLRuntime.h:31,Interface,Interface,31,interpreter/llvm-project/clang/lib/CodeGen/CGOpenCLRuntime.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenCLRuntime.h,1,['Interface'],['Interface']
Integrability,"//===----- CGOpenMPRuntime.cpp - Interface to OpenMP Runtimes -------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This provides a class for OpenMP runtime code generation.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntime.cpp:33,Interface,Interface,33,interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntime.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntime.cpp,1,['Interface'],['Interface']
Integrability,"//===----- CGOpenMPRuntime.h - Interface to OpenMP Runtimes -----*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This provides a class for OpenMP runtime code generation.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntime.h:31,Interface,Interface,31,interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntime.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntime.h,1,['Interface'],['Interface']
Integrability,"//===----- CXXABI.h - Interface to C++ ABIs ---------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This provides an abstract class for C++ AST support. Concrete; // subclasses of this implement AST support for specific C++ ABIs.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/CXXABI.h:22,Interface,Interface,22,interpreter/llvm-project/clang/lib/AST/CXXABI.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/CXXABI.h,1,['Interface'],['Interface']
Integrability,"//===----- TypePromotion.cpp ----------------------------------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; /// \file; /// This is an opcode based type promotion pass for small types that would; /// otherwise be promoted during legalisation. This works around the limitations; /// of selection dag for cyclic regions. The search begins from icmp; /// instructions operands where a tree, consisting of non-wrapping or safe; /// wrapping instructions, is built, checked and promoted if possible.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/TypePromotion.cpp:677,wrap,wrapping,677,interpreter/llvm-project/llvm/lib/CodeGen/TypePromotion.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/TypePromotion.cpp,2,['wrap'],['wrapping']
Integrability,"//===----- llvm/Analysis/CaptureTracking.h - Pointer capture ----*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file contains routines that help determine which pointers are captured.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/CaptureTracking.h:402,rout,routines,402,interpreter/llvm-project/llvm/include/llvm/Analysis/CaptureTracking.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/CaptureTracking.h,1,['rout'],['routines']
Integrability,"//===------ CGOpenMPRuntimeGPU.h - Interface to OpenMP GPU Runtimes ------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This provides a generalized class for OpenMP runtime code generation; // specialized by GPU targets NVPTX and AMDGCN.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntimeGPU.h:35,Interface,Interface,35,interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntimeGPU.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntimeGPU.h,1,['Interface'],['Interface']
Integrability,"//===------ ObjectFileInterface.cpp - MU interface utils for objects ------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ExecutionEngine/Orc/ObjectFileInterface.cpp:41,interface,interface,41,interpreter/llvm-project/llvm/lib/ExecutionEngine/Orc/ObjectFileInterface.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ExecutionEngine/Orc/ObjectFileInterface.cpp,1,['interface'],['interface']
Integrability,"//===------ SimpleRemoteEPCUtils.cpp - Utils for Simple Remote EPC --------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // Message definitions and other utilities for SimpleRemoteEPC and; // SimpleRemoteEPCServer.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ExecutionEngine/Orc/Shared/SimpleRemoteEPCUtils.cpp:383,Message,Message,383,interpreter/llvm-project/llvm/lib/ExecutionEngine/Orc/Shared/SimpleRemoteEPCUtils.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ExecutionEngine/Orc/Shared/SimpleRemoteEPCUtils.cpp,1,['Message'],['Message']
Integrability,"//===------ utils/obj2yaml.hpp - obj2yaml conversion tool -------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; // This file declares some helper routines, and also the format-specific; // writers. To add a new format, add the declaration here, and, in a separate; // source file, implement it.; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/obj2yaml/obj2yaml.h:328,rout,routines,328,interpreter/llvm-project/llvm/tools/obj2yaml/obj2yaml.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/obj2yaml/obj2yaml.h,1,['rout'],['routines']
Integrability,"//===------- CGObjCMac.cpp - Interface to Apple Objective-C Runtime -------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This provides Objective-C code generation targeting the Apple runtime.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGObjCMac.cpp:29,Interface,Interface,29,interpreter/llvm-project/clang/lib/CodeGen/CGObjCMac.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGObjCMac.cpp,1,['Interface'],['Interface']
Integrability,"//===------- JITLoaderPerf.cpp - Register profiler objects ------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // Register objects for access by profilers via the perf JIT interface.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ExecutionEngine/Orc/TargetProcess/JITLoaderPerf.cpp:441,interface,interface,441,interpreter/llvm-project/llvm/lib/ExecutionEngine/Orc/TargetProcess/JITLoaderPerf.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ExecutionEngine/Orc/TargetProcess/JITLoaderPerf.cpp,1,['interface'],['interface']
Integrability,"//===------- JITLoaderPerf.h --- Register profiler objects ------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // Register objects for access by profilers via the perf JIT interface.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/Orc/TargetProcess/JITLoaderPerf.h:441,interface,interface,441,interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/Orc/TargetProcess/JITLoaderPerf.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/Orc/TargetProcess/JITLoaderPerf.h,1,['interface'],['interface']
Integrability,"//===------- SARIFDiagnosticPrinter.cpp - Diagnostic Printer---------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This diagnostic client prints out their diagnostic messages in SARIF format.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/SARIFDiagnosticPrinter.cpp:434,message,messages,434,interpreter/llvm-project/clang/lib/Frontend/SARIFDiagnosticPrinter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/SARIFDiagnosticPrinter.cpp,1,['message'],['messages']
Integrability,"//===-------- BlockFrequency.h - Block Frequency Wrapper --------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements Block Frequency class.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/BlockFrequency.h:49,Wrap,Wrapper,49,interpreter/llvm-project/llvm/include/llvm/Support/BlockFrequency.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/BlockFrequency.h,1,['Wrap'],['Wrapper']
Integrability,"//===-------- LegalizeTypesGeneric.cpp - Generic type legalization --------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements generic type expansion and splitting for LegalizeTypes.; // The routines here perform legalization when the details of the type (such as; // whether it is an integer or a float) do not matter.; // Expansion is the act of changing a computation in an illegal type to be a; // computation in two identical registers of a smaller type. The Lo/Hi part; // is required to be stored first in memory on little/big-endian machines.; // Splitting is the act of changing a computation in an illegal type to be a; // computation in two not necessarily identical registers of a smaller type.; // There are no requirements on how the type is represented in memory.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/LegalizeTypesGeneric.cpp:468,rout,routines,468,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/LegalizeTypesGeneric.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/LegalizeTypesGeneric.cpp,1,['rout'],['routines']
Integrability,"//===-------- LoopDataPrefetch.h - Loop Data Prefetching Pass ---*- C++ -*-===//; //; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; /// \file; /// This file provides the interface for LLVM's Loop Data Prefetching Pass.; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Scalar/LoopDataPrefetch.h:418,interface,interface,418,interpreter/llvm-project/llvm/include/llvm/Transforms/Scalar/LoopDataPrefetch.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Scalar/LoopDataPrefetch.h,1,['interface'],['interface']
Integrability,"//===----------- ThreadSafeModule.h -- Layer interfaces ---------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // Thread safe wrappers and utilities for Module and LLVMContext.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/Orc/ThreadSafeModule.h:45,interface,interfaces,45,interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/Orc/ThreadSafeModule.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/Orc/ThreadSafeModule.h,2,"['interface', 'wrap']","['interfaces', 'wrappers']"
Integrability,"//===------------ DebugInfo.h - LLVM C API Debug Info API -----------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; ///; /// This file declares the C API endpoints for generating DWARF Debug Info; ///; /// Note: This interface is experimental. It is *NOT* stable, and may be; /// changed without warning.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/DebugInfo.h:477,interface,interface,477,interpreter/llvm-project/llvm/include/llvm-c/DebugInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/DebugInfo.h,1,['interface'],['interface']
Integrability,"//===------------- Disassembler.h - LLVM Disassembler -----------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines the interface for the Disassembly library's disassembler; // context. The disassembler is responsible for producing strings for; // individual instructions according to a given architecture and disassembly; // syntax.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MC/MCDisassembler/Disassembler.h:405,interface,interface,405,interpreter/llvm-project/llvm/lib/MC/MCDisassembler/Disassembler.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MC/MCDisassembler/Disassembler.h,1,['interface'],['interface']
Integrability,"//===-------------- PPCMIPeephole.cpp - MI Peephole Cleanups -------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===---------------------------------------------------------------------===//; //; // This pass performs peephole optimizations to clean up ugly code; // sequences at the MachineInstruction layer. It runs at the end of; // the SSA phases, following VSX swap removal. A pass of dead code; // elimination follows this one for quick clean-up of any dead; // instructions introduced here. Although we could do this as callbacks; // from the generic peephole pass, this would have a couple of bad; // effects: it might remove optimization opportunities for VSX swap; // removal, and it would miss cleanups made possible following VSX; // swap removal.; //; // NOTE: We run the verifier after this pass in Asserts/Debug builds so it; // is important to keep the code valid after transformations.; // Common causes of errors stem from violating the contract specified; // by kill flags. Whenever a transformation changes the live range of; // a register, that register should be added to the work list using; // addRegToUpdate(RegsToUpdate, <Reg>). Furthermore, if a transformation; // is changing the definition of a register (i.e. removing the single; // definition of the original vreg), it needs to provide a dummy; // definition of that register using addDummyDef(<MBB>, <Reg>).; //===---------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCMIPeephole.cpp:1137,contract,contract,1137,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCMIPeephole.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCMIPeephole.cpp,1,['contract'],['contract']
Integrability,"//===---------------- Layer.h -- Layer interfaces --------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // Layer interfaces.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/Orc/Layer.h:39,interface,interfaces,39,interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/Orc/Layer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/Orc/Layer.h,2,['interface'],['interfaces']
Integrability,"//===-------------------- Layer.cpp - Layer interfaces --------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ExecutionEngine/Orc/Layer.cpp:44,interface,interfaces,44,interpreter/llvm-project/llvm/lib/ExecutionEngine/Orc/Layer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ExecutionEngine/Orc/Layer.cpp,1,['interface'],['interfaces']
Integrability,"//===--------------------- AMDGPUFrameLowering.h ----------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; /// \file; /// Interface to describe a layout of a stack frame on an AMDGPU target.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUFrameLowering.h:395,Interface,Interface,395,interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUFrameLowering.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUFrameLowering.h,1,['Interface'],['Interface']
Integrability,"//===--------------------- BottleneckAnalysis.h -----------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; /// \file; ///; /// This file implements the bottleneck analysis view.; ///; /// This view internally observes backend pressure increase events in order to; /// identify problematic data dependencies and processor resource interferences.; ///; /// Example of bottleneck analysis report for a dot-product on X86 btver2:; ///; /// Cycles with backend pressure increase [ 40.76% ]; /// Throughput Bottlenecks: ; /// Resource Pressure [ 39.34% ]; /// - JFPA [ 39.34% ]; /// - JFPU0 [ 39.34% ]; /// Data Dependencies: [ 1.42% ]; /// - Register Dependencies [ 1.42% ]; /// - Memory Dependencies [ 0.00% ]; ///; /// According to the example, backend pressure increased during the 40.76% of; /// the simulated cycles. In particular, the major cause of backend pressure; /// increases was the contention on floating point adder JFPA accessible from; /// pipeline resource JFPU0.; ///; /// At the end of each cycle, if pressure on the simulated out-of-order buffers; /// has increased, a backend pressure event is reported.; /// In particular, this occurs when there is a delta between the number of uOps; /// dispatched and the number of uOps issued to the underlying pipelines.; ///; /// The bottleneck analysis view is also responsible for identifying and; /// printing the most ""critical"" sequence of dependent instructions according to; /// the simulated run.; ///; /// Below is the critical sequence computed for the dot-product example on; /// btver2:; ///; /// Instruction Dependency Information; /// +----< 2. vhaddps %xmm3, %xmm3, %xmm4; /// |; /// | < loop carried > ; /// |; /// | 0. vmulps	 %xmm0, %xmm0, %xmm2; /// +---->",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-mca/Views/BottleneckAnalysis.h:563,depend,dependencies,563,interpreter/llvm-project/llvm/tools/llvm-mca/Views/BottleneckAnalysis.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-mca/Views/BottleneckAnalysis.h,4,"['Depend', 'depend']","['Dependencies', 'dependencies']"
Integrability,"//===--------------------- CustomBehaviour.cpp ------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; /// \file; ///; /// This file implements methods from the CustomBehaviour interface.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MCA/CustomBehaviour.cpp:450,interface,interface,450,interpreter/llvm-project/llvm/lib/MCA/CustomBehaviour.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MCA/CustomBehaviour.cpp,1,['interface'],['interface']
Integrability,"//===--------------------- DispatchStage.cpp --------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; /// \file; ///; /// This file models the dispatch component of an instruction pipeline.; ///; /// The DispatchStage is responsible for updating instruction dependencies; /// and communicating to the simulated instruction scheduler that an instruction; /// is ready to be scheduled for execution.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MCA/Stages/DispatchStage.cpp:532,depend,dependencies,532,interpreter/llvm-project/llvm/lib/MCA/Stages/DispatchStage.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MCA/Stages/DispatchStage.cpp,1,['depend'],['dependencies']
Integrability,"//===--------------------- DispatchStatistics.cpp ---------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; /// \file; ///; /// This file implements the DispatchStatistics interface.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-mca/Views/DispatchStatistics.cpp:440,interface,interface,440,interpreter/llvm-project/llvm/tools/llvm-mca/Views/DispatchStatistics.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-mca/Views/DispatchStatistics.cpp,1,['interface'],['interface']
Integrability,"//===--------------------- InstrBuilder.cpp ---------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; /// \file; ///; /// This file implements the InstrBuilder interface.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MCA/InstrBuilder.cpp:434,interface,interface,434,interpreter/llvm-project/llvm/lib/MCA/InstrBuilder.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MCA/InstrBuilder.cpp,1,['interface'],['interface']
Integrability,"//===--------------------- PipelinePrinter.cpp ------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; /// \file; ///; /// This file implements the PipelinePrinter interface.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-mca/PipelinePrinter.cpp:437,interface,interface,437,interpreter/llvm-project/llvm/tools/llvm-mca/PipelinePrinter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-mca/PipelinePrinter.cpp,1,['interface'],['interface']
Integrability,"//===--------------------- RegisterFile.cpp ---------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; /// \file; ///; /// This file defines a register mapping file class. This class is responsible; /// for managing hardware register files and the tracking of data dependencies; /// between registers.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MCA/HardwareUnits/RegisterFile.cpp:538,depend,dependencies,538,interpreter/llvm-project/llvm/lib/MCA/HardwareUnits/RegisterFile.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MCA/HardwareUnits/RegisterFile.cpp,1,['depend'],['dependencies']
Integrability,"//===--------------------- RegisterFile.h -----------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; /// \file; ///; /// This file defines a register mapping file class. This class is responsible; /// for managing hardware register files and the tracking of data dependencies; /// between registers.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MCA/HardwareUnits/RegisterFile.h:538,depend,dependencies,538,interpreter/llvm-project/llvm/include/llvm/MCA/HardwareUnits/RegisterFile.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MCA/HardwareUnits/RegisterFile.h,1,['depend'],['dependencies']
Integrability,"//===--------------------- RegisterFileStatistics.cpp -----------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; /// \file; ///; /// This file implements the RegisterFileStatistics interface.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-mca/Views/RegisterFileStatistics.cpp:444,interface,interface,444,interpreter/llvm-project/llvm/tools/llvm-mca/Views/RegisterFileStatistics.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-mca/Views/RegisterFileStatistics.cpp,1,['interface'],['interface']
Integrability,"//===--------------------- ResourcePressureView.cpp -------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; /// \file; ///; /// This file implements methods in the ResourcePressureView interface.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-mca/Views/ResourcePressureView.cpp:453,interface,interface,453,interpreter/llvm-project/llvm/tools/llvm-mca/Views/ResourcePressureView.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-mca/Views/ResourcePressureView.cpp,1,['interface'],['interface']
Integrability,"//===--------------------- RetireControlUnitStatistics.cpp ------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; /// \file; ///; /// This file implements the RetireControlUnitStatistics interface.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-mca/Views/RetireControlUnitStatistics.cpp:449,interface,interface,449,interpreter/llvm-project/llvm/tools/llvm-mca/Views/RetireControlUnitStatistics.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-mca/Views/RetireControlUnitStatistics.cpp,1,['interface'],['interface']
Integrability,"//===--------------------- SchedulerStatistics.cpp --------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; /// \file; ///; /// This file implements the SchedulerStatistics interface.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-mca/Views/SchedulerStatistics.cpp:441,interface,interface,441,interpreter/llvm-project/llvm/tools/llvm-mca/Views/SchedulerStatistics.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-mca/Views/SchedulerStatistics.cpp,1,['interface'],['interface']
Integrability,"//===--------------------- TimelineView.cpp ---------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; /// \brief; ///; /// This file implements the TimelineView interface.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-mca/Views/TimelineView.cpp:435,interface,interface,435,interpreter/llvm-project/llvm/tools/llvm-mca/Views/TimelineView.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-mca/Views/TimelineView.cpp,1,['interface'],['interface']
Integrability,"//===---------------------- CustomBehaviour.h -------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; /// \file; ///; /// This file defines the base class CustomBehaviour which can be inherited from; /// by specific targets (ex. llvm/tools/llvm-mca/lib/X86CustomBehaviour.h).; /// CustomBehaviour is designed to enforce custom behaviour and dependencies; /// within the llvm-mca pipeline simulation that llvm-mca isn't already capable; /// of extracting from the Scheduling Models.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MCA/CustomBehaviour.h:615,depend,dependencies,615,interpreter/llvm-project/llvm/include/llvm/MCA/CustomBehaviour.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MCA/CustomBehaviour.h,1,['depend'],['dependencies']
Integrability,"//===----------------------- AMDGPUFrameLowering.cpp ----------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //==-----------------------------------------------------------------------===//; //; // Interface to describe a layout of a stack frame on a AMDGPU target machine.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUFrameLowering.cpp:383,Interface,Interface,383,interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUFrameLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUFrameLowering.cpp,1,['Interface'],['Interface']
Integrability,"//===----------------------- DispatchStage.h --------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; /// \file; ///; /// This file models the dispatch component of an instruction pipeline.; ///; /// The DispatchStage is responsible for updating instruction dependencies; /// and communicating to the simulated instruction scheduler that an instruction; /// is ready to be scheduled for execution.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MCA/Stages/DispatchStage.h:532,depend,dependencies,532,interpreter/llvm-project/llvm/include/llvm/MCA/Stages/DispatchStage.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MCA/Stages/DispatchStage.h,1,['depend'],['dependencies']
Integrability,"//===----------------------- HWEventListener.h ------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; /// \file; ///; /// This file defines the main interface for hardware event listeners.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MCA/HWEventListener.h:423,interface,interface,423,interpreter/llvm-project/llvm/include/llvm/MCA/HWEventListener.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MCA/HWEventListener.h,1,['interface'],['interface']
Integrability,"//===----------------------- InstructionView.h ------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; /// \file; ///; /// This file defines the main interface for Views that examine and reference; /// a sequence of machine instructions.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-mca/Views/InstructionView.h:423,interface,interface,423,interpreter/llvm-project/llvm/tools/llvm-mca/Views/InstructionView.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-mca/Views/InstructionView.h,1,['interface'],['interface']
Integrability,"//===----------------------- View.h -----------------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; /// \file; ///; /// This file defines the main interface for Views. Each view contributes a; /// portion of the final report generated by the tool.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MCA/View.h:423,interface,interface,423,interpreter/llvm-project/llvm/include/llvm/MCA/View.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MCA/View.h,1,['interface'],['interface']
Integrability,"//===-------------------------- CodeRegion.cpp -----------------*- C++ -* -===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; /// \file; ///; /// This file implements methods from the CodeRegions interface.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-mca/CodeRegion.cpp:446,interface,interface,446,interpreter/llvm-project/llvm/tools/llvm-mca/CodeRegion.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-mca/CodeRegion.cpp,1,['interface'],['interface']
Integrability,"//===---------------------------- Context.cpp -------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; /// \file; ///; /// This file defines a class for holding ownership of various simulated; /// hardware units. A Context also provides a utility routine for constructing; /// a default out-of-order pipeline with fetch, dispatch, execute, and retire; /// stages.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MCA/Context.cpp:520,rout,routine,520,interpreter/llvm-project/llvm/lib/MCA/Context.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MCA/Context.cpp,1,['rout'],['routine']
Integrability,"//===---------------------------- Context.h ---------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; /// \file; ///; /// This file defines a class for holding ownership of various simulated; /// hardware units. A Context also provides a utility routine for constructing; /// a default out-of-order pipeline with fetch, dispatch, execute, and retire; /// stages.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MCA/Context.h:520,rout,routine,520,interpreter/llvm-project/llvm/include/llvm/MCA/Context.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MCA/Context.h,1,['rout'],['routine']
Integrability,"//===------------------------------------------------------------------------===; // assumeSymX methods: protected interface for RangeConstraintManager.; //===------------------------------------------------------------------------===/; // The syntax for ranges below is mathematical, using [x, y] for closed ranges; // and (x, y) for open ranges. These ranges are modular, corresponding with; // a common treatment of C integer overflow. This means that these methods; // do not have to worry about overflow; RangeSet::Intersect can handle such a; // ""wraparound"" range.; // As an example, the range [UINT_MAX-1, 3) contains five values: UINT_MAX-1,; // UINT_MAX, 0, 1, and 2.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/RangeConstraintManager.cpp:115,interface,interface,115,interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/RangeConstraintManager.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/RangeConstraintManager.cpp,2,"['interface', 'wrap']","['interface', 'wraparound']"
Integrability,"//===----------------------------------------------------------------------===//; // ""Minimal"" path diagnostic generation algorithm.; //===----------------------------------------------------------------------===//; /// If the piece contains a special message, add it to all the call pieces on; /// the active stack. For example, my_malloc allocated memory, so MallocChecker; /// will construct an event at the call to malloc(), and add a stack hint that; /// an allocated memory was returned. We'll use this hint to construct a message; /// when returning from the call to my_malloc; ///; /// void *my_malloc() { return malloc(sizeof(int)); }; /// void fishy() {; /// void *ptr = my_malloc(); // returned allocated memory; /// } // leak",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/BugReporter.cpp:252,message,message,252,interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/BugReporter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/BugReporter.cpp,2,['message'],['message']
Integrability,//===----------------------------------------------------------------------===//; // AArch64 Lowering public interface.; //===----------------------------------------------------------------------===//,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64TargetMachine.cpp:109,interface,interface,109,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64TargetMachine.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64TargetMachine.cpp,1,['interface'],['interface']
Integrability,"//===----------------------------------------------------------------------===//; // ASTReader Implementation; //===----------------------------------------------------------------------===//; /// Note that we have loaded the declaration with the given; /// Index.; ///; /// This routine notes that this declaration has already been loaded,; /// so that future GetDecl calls will return this declaration rather; /// than trying to load a new declaration.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Serialization/ASTReaderDecl.cpp:280,rout,routine,280,interpreter/llvm-project/clang/lib/Serialization/ASTReaderDecl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Serialization/ASTReaderDecl.cpp,1,['rout'],['routine']
Integrability,//===----------------------------------------------------------------------===//; // Adapters for FoldingSet.; //===----------------------------------------------------------------------===//,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/RetainSummaryManager.h:85,Adapter,Adapters,85,interpreter/llvm-project/clang/include/clang/Analysis/RetainSummaryManager.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/RetainSummaryManager.h,1,['Adapter'],['Adapters']
Integrability,"//===----------------------------------------------------------------------===//; // AttributeListImpl Definition; //===----------------------------------------------------------------------===//; /// Map from AttributeList index to the internal array index. Adding one happens; /// to work, because -1 wraps around to 0.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/Attributes.cpp:303,wrap,wraps,303,interpreter/llvm-project/llvm/lib/IR/Attributes.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/Attributes.cpp,1,['wrap'],['wraps']
Integrability,"//===----------------------------------------------------------------------===//; // C & StdCall & Fast Calling Convention implementation; //===----------------------------------------------------------------------===//; // StdCall calling convention seems to be standard for many Windows' API; // routines and around. It differs from C calling convention just a little:; // callee should clean up the stack, not caller. Symbols should be also; // decorated in some fancy way :) It doesn't support any vector arguments.; // For info on fast calling convention see Fast Calling Convention (tail call); // implementation LowerX86_32FastCCCallTo.; /// Determines whether Args, either a set of outgoing arguments to a call, or a; /// set of incoming args of a call, contains an sret pointer that the callee; /// pops",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLoweringCall.cpp:298,rout,routines,298,interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLoweringCall.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLoweringCall.cpp,1,['rout'],['routines']
Integrability,"//===----------------------------------------------------------------------===//; // Check: floating point variable used as loop counter.; // Implements: CERT security coding advisory FLP-30.; //===----------------------------------------------------------------------===//; // Returns either 'x' or 'y', depending on which one of them is incremented; // in 'expr', or nullptr if none of them is incremented.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/CheckSecuritySyntaxOnly.cpp:305,depend,depending,305,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/CheckSecuritySyntaxOnly.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/CheckSecuritySyntaxOnly.cpp,1,['depend'],['depending']
Integrability,//===----------------------------------------------------------------------===//; // Comdat Reference/Resolution Routines.; //===----------------------------------------------------------------------===//,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/AsmParser/LLParser.cpp:113,Rout,Routines,113,interpreter/llvm-project/llvm/lib/AsmParser/LLParser.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/AsmParser/LLParser.cpp,1,['Rout'],['Routines']
Integrability,"//===----------------------------------------------------------------------===//; // Command line option processing entry point.; //; // Returns true on success. Otherwise, this will print the error message to; // stderr and exit if \p Errs is not set (nullptr by default), or print the; // error message to \p Errs and return false if \p Errs is provided.; //; // If EnvVar is not nullptr, command-line options are also parsed from the; // environment variable named by EnvVar. Precedence is given to occurrences; // from argv. This precedence is currently implemented by parsing argv after; // the environment variable, so it is only implemented correctly for options; // that give precedence to later occurrences. If your program supports options; // that give precedence to earlier occurrences, you will need to extend this; // function to support it correctly.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/CommandLine.h:199,message,message,199,interpreter/llvm-project/llvm/include/llvm/Support/CommandLine.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/CommandLine.h,2,['message'],['message']
Integrability,//===----------------------------------------------------------------------===//; // ConstantFold*Instruction Implementations; //===----------------------------------------------------------------------===//; /// This function determines which opcode to use to fold two constant cast; /// expressions together. It uses CastInst::isEliminableCastPair to determine; /// the opcode. Consequently its just a wrapper around that function.; /// Determine if it is valid to fold a cast of a cast,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/ConstantFold.cpp:404,wrap,wrapper,404,interpreter/llvm-project/llvm/lib/IR/ConstantFold.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/ConstantFold.cpp,1,['wrap'],['wrapper']
Integrability,//===----------------------------------------------------------------------===//; // Core Reachability Analysis routines.; //===----------------------------------------------------------------------===//,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/ReachableCode.cpp:112,rout,routines,112,interpreter/llvm-project/clang/lib/Analysis/ReachableCode.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/ReachableCode.cpp,1,['rout'],['routines']
Integrability,//===----------------------------------------------------------------------===//; // CycleInfoWrapperPass Implementation; //===----------------------------------------------------------------------===//; //; // The implementation details of the wrapper pass that holds a CycleInfo; // suitable for use with the legacy pass manager.; //; //===----------------------------------------------------------------------===//,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/CycleAnalysis.cpp:245,wrap,wrapper,245,interpreter/llvm-project/llvm/lib/Analysis/CycleAnalysis.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/CycleAnalysis.cpp,1,['wrap'],['wrapper']
Integrability,//===----------------------------------------------------------------------===//; // Data Dependencies; //===----------------------------------------------------------------------===//; //; // Compute the depth and height of each instruction based on data dependencies; // and instruction latencies. These cycle numbers assume that the CPU can issue; // an infinite number of instructions per cycle as long as their dependencies; // are ready.; // A data dependency is represented as a defining MI and operand numbers on the; // defining and using MI.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineTraceMetrics.cpp:90,Depend,Dependencies,90,interpreter/llvm-project/llvm/lib/CodeGen/MachineTraceMetrics.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineTraceMetrics.cpp,4,"['Depend', 'depend']","['Dependencies', 'dependencies', 'dependency']"
Integrability,//===----------------------------------------------------------------------===//; // Dependence methods; // Returns true if this is an input dependence.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/DependenceAnalysis.cpp:85,Depend,Dependence,85,interpreter/llvm-project/llvm/lib/Analysis/DependenceAnalysis.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/DependenceAnalysis.cpp,2,"['Depend', 'depend']","['Dependence', 'dependence']"
Integrability,//===----------------------------------------------------------------------===//; // DependenceInfo methods; // For debugging purposes. Dumps a dependence to OS.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/DependenceAnalysis.cpp:85,Depend,DependenceInfo,85,interpreter/llvm-project/llvm/lib/Analysis/DependenceAnalysis.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/DependenceAnalysis.cpp,2,"['Depend', 'depend']","['DependenceInfo', 'dependence']"
Integrability,"//===----------------------------------------------------------------------===//; // DependenceInfo::Constraint methods; // If constraint is a point <X, Y>, returns X.; // Otherwise assert.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/DependenceAnalysis.cpp:85,Depend,DependenceInfo,85,interpreter/llvm-project/llvm/lib/Analysis/DependenceAnalysis.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/DependenceAnalysis.cpp,1,['Depend'],['DependenceInfo']
Integrability,//===----------------------------------------------------------------------===//; // Dependency resolving.; //===----------------------------------------------------------------------===//,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Frontend/CheckerRegistry.cpp:85,Depend,Dependency,85,interpreter/llvm-project/clang/lib/StaticAnalyzer/Frontend/CheckerRegistry.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Frontend/CheckerRegistry.cpp,1,['Depend'],['Dependency']
Integrability,//===----------------------------------------------------------------------===//; // DominatorTreeWrapperPass Implementation; //===----------------------------------------------------------------------===//; //; // The implementation details of the wrapper pass that holds a DominatorTree; // suitable for use with the legacy pass manager.; //; //===----------------------------------------------------------------------===//,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/Dominators.cpp:249,wrap,wrapper,249,interpreter/llvm-project/llvm/lib/IR/Dominators.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/Dominators.cpp,1,['wrap'],['wrapper']
Integrability,//===----------------------------------------------------------------------===//; // Dwarf Emission Helper Routines; //===----------------------------------------------------------------------===//,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/AsmPrinterDwarf.cpp:107,Rout,Routines,107,interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/AsmPrinterDwarf.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/AsmPrinterDwarf.cpp,1,['Rout'],['Routines']
Integrability,//===----------------------------------------------------------------------===//; // Dwarf Lowering Routines; //===----------------------------------------------------------------------===//,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/AsmPrinterDwarf.cpp:100,Rout,Routines,100,interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/AsmPrinterDwarf.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/AsmPrinterDwarf.cpp,1,['Rout'],['Routines']
Integrability,//===----------------------------------------------------------------------===//; // External Interface declarations; //===----------------------------------------------------------------------===//,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/AsmWriter.cpp:94,Interface,Interface,94,interpreter/llvm-project/llvm/lib/IR/AsmWriter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/AsmWriter.cpp,1,['Interface'],['Interface']
Integrability,//===----------------------------------------------------------------------===//; // External interface; //===----------------------------------------------------------------------===//,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Bitcode/Reader/BitcodeReader.cpp:94,interface,interface,94,interpreter/llvm-project/llvm/lib/Bitcode/Reader/BitcodeReader.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Bitcode/Reader/BitcodeReader.cpp,1,['interface'],['interface']
Integrability,//===----------------------------------------------------------------------===//; // Fixed block information; //===----------------------------------------------------------------------===//; //; // The number of instructions in a basic block and the CPU resources used by; // those instructions don't depend on any given trace strategy.; /// Compute the resource usage in basic block MBB.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineTraceMetrics.cpp:302,depend,depend,302,interpreter/llvm-project/llvm/lib/CodeGen/MachineTraceMetrics.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineTraceMetrics.cpp,1,['depend'],['depend']
Integrability,//===----------------------------------------------------------------------===//; // General Sema routines.; //===----------------------------------------------------------------------===//,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaPseudoObject.cpp:98,rout,routines,98,interpreter/llvm-project/clang/lib/Sema/SemaPseudoObject.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaPseudoObject.cpp,1,['rout'],['routines']
Integrability,//===----------------------------------------------------------------------===//; // General Serialization Routines; //===----------------------------------------------------------------------===//,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Serialization/ASTWriter.cpp:107,Rout,Routines,107,interpreter/llvm-project/clang/lib/Serialization/ASTWriter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Serialization/ASTWriter.cpp,1,['Rout'],['Routines']
Integrability,//===----------------------------------------------------------------------===//; // Generic Expression Routines; //===----------------------------------------------------------------------===//,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/Expr.cpp:104,Rout,Routines,104,interpreter/llvm-project/clang/lib/AST/Expr.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/Expr.cpp,1,['Rout'],['Routines']
Integrability,"//===----------------------------------------------------------------------===//; // Generic Result Expansion.; //===----------------------------------------------------------------------===//; // These routines assume that the Lo/Hi part is stored first in memory on; // little/big-endian machines, followed by the Hi/Lo part. This means that; // they cannot be used as is on vectors, for which Lo is always stored first.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/LegalizeTypesGeneric.cpp:203,rout,routines,203,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/LegalizeTypesGeneric.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/LegalizeTypesGeneric.cpp,1,['rout'],['routines']
Integrability,//===----------------------------------------------------------------------===//; // Generic type checking routines.; //===----------------------------------------------------------------------===//,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/LLVMConventionsChecker.cpp:107,rout,routines,107,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/LLVMConventionsChecker.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/LLVMConventionsChecker.cpp,1,['rout'],['routines']
Integrability,//===----------------------------------------------------------------------===//; // GetElementPtrInst Class; //===----------------------------------------------------------------------===//; // checkGEPType - Simple wrapper function to give a better assertion failure; // message on bad indexes for a gep instruction.; //,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/Instructions.h:217,wrap,wrapper,217,interpreter/llvm-project/llvm/include/llvm/IR/Instructions.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/Instructions.h,2,"['message', 'wrap']","['message', 'wrapper']"
Integrability,//===----------------------------------------------------------------------===//; // GlobalValue Reference/Resolution Routines.; //===----------------------------------------------------------------------===//,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/AsmParser/LLParser.cpp:118,Rout,Routines,118,interpreter/llvm-project/llvm/lib/AsmParser/LLParser.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/AsmParser/LLParser.cpp,1,['Rout'],['Routines']
Integrability,"//===----------------------------------------------------------------------===//; // Helper Routines.; //===----------------------------------------------------------------------===//; /// parseToken - If the current token has the specified kind, eat it and return; /// success. Otherwise, emit the specified error and return failure.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/AsmParser/LLParser.cpp:92,Rout,Routines,92,interpreter/llvm-project/llvm/lib/AsmParser/LLParser.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/AsmParser/LLParser.cpp,1,['Rout'],['Routines']
Integrability,//===----------------------------------------------------------------------===//; // Helper functions for building misc instructions; //===----------------------------------------------------------------------===//; /// Helper function building either a resulting scalar or vector bool register; /// depending on the expected \p ResultType.; ///; /// \returns Tuple of the resulting register and its type.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SPIRV/SPIRVBuiltins.cpp:300,depend,depending,300,interpreter/llvm-project/llvm/lib/Target/SPIRV/SPIRVBuiltins.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SPIRV/SPIRVBuiltins.cpp,1,['depend'],['depending']
Integrability,//===----------------------------------------------------------------------===//; // Helper methods for lexing.; //===----------------------------------------------------------------------===//; /// Routine that indiscriminately sets the offset into the source file.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Lex/Lexer.cpp:199,Rout,Routine,199,interpreter/llvm-project/clang/lib/Lex/Lexer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Lex/Lexer.cpp,1,['Rout'],['Routine']
Integrability,"//===----------------------------------------------------------------------===//; // Helper routines for emitStartOfAsmFile() and emitEndOfAsmFile(); // FIXME:; // The following seem like one-off assembler flags, but they actually need; // to appear in the .ARM.attributes section in ELF.; // Instead of subclassing the MCELFStreamer, we do the work here.; // Returns true if all functions have the same function attribute value.; // It also returns true when the module has no functions.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMAsmPrinter.cpp:92,rout,routines,92,interpreter/llvm-project/llvm/lib/Target/ARM/ARMAsmPrinter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMAsmPrinter.cpp,1,['rout'],['routines']
Integrability,//===----------------------------------------------------------------------===//; // High-level interface for handlers of path-sensitive diagnostics.; //===----------------------------------------------------------------------===//,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/PathDiagnostic.h:96,interface,interface,96,interpreter/llvm-project/clang/include/clang/Analysis/PathDiagnostic.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/PathDiagnostic.h,1,['interface'],['interface']
Integrability,//===----------------------------------------------------------------------===//; // Implement the public interfaces to this file...; //===----------------------------------------------------------------------===//,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/Verifier.cpp:106,interface,interfaces,106,interpreter/llvm-project/llvm/lib/IR/Verifier.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/Verifier.cpp,1,['interface'],['interfaces']
Integrability,"//===----------------------------------------------------------------------===//; // Implement the public interfaces to this file...; //===----------------------------------------------------------------------===//; /// lintFunction - Check a function for errors, printing messages on stderr.; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/Lint.cpp:106,interface,interfaces,106,interpreter/llvm-project/llvm/lib/Analysis/Lint.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/Lint.cpp,2,"['interface', 'message']","['interfaces', 'messages']"
Integrability,//===----------------------------------------------------------------------===//; // Interface for individual bug reports.; //===----------------------------------------------------------------------===//; /// A mapping from diagnostic consumers to the diagnostics they should; /// consume.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/StaticAnalyzer/Core/BugReporter/BugReporter.h:85,Interface,Interface,85,interpreter/llvm-project/clang/include/clang/StaticAnalyzer/Core/BugReporter/BugReporter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/StaticAnalyzer/Core/BugReporter/BugReporter.h,1,['Interface'],['Interface']
Integrability,//===----------------------------------------------------------------------===//; // LLC Implementation of AbstractIntepreter interface; //,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/bugpoint/ToolRunner.cpp:126,interface,interface,126,interpreter/llvm-project/llvm/tools/bugpoint/ToolRunner.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/bugpoint/ToolRunner.cpp,1,['interface'],['interface']
Integrability,//===----------------------------------------------------------------------===//; // Legacy pass manager's PassTimingInfo implementation; /// Provides an interface for collecting pass timing information.; ///; /// It was intended to be generic but now we decided to split; /// interfaces completely. This is now exclusively for legacy-pass-manager use.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/PassTimingInfo.cpp:154,interface,interface,154,interpreter/llvm-project/llvm/lib/IR/PassTimingInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/PassTimingInfo.cpp,2,['interface'],"['interface', 'interfaces']"
Integrability,//===----------------------------------------------------------------------===//; // LowerGlobalDtorsLegacy - Lower @llvm.global_dtors by creating wrapper; // functions that are registered in @llvm.global_ctors and which contain a call; // to `__cxa_atexit` to register their destructor functions.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils.h:147,wrap,wrapper,147,interpreter/llvm-project/llvm/include/llvm/Transforms/Utils.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils.h,1,['wrap'],['wrapper']
Integrability,//===----------------------------------------------------------------------===//; // MachineInstr latency interface.; //===----------------------------------------------------------------------===//,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/TargetInstrInfo.cpp:106,interface,interface,106,interpreter/llvm-project/llvm/lib/CodeGen/TargetInstrInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/TargetInstrInfo.cpp,1,['interface'],['interface']
Integrability,//===----------------------------------------------------------------------===//; // Main test driver code.; //===----------------------------------------------------------------------===//; /// Demo main routine which takes the type info types to throw. A test will; /// be run for each given type info type. While type info types with the value; /// of -1 will trigger a foreign C++ exception to be thrown; type info types; /// <= 6 and >= 1 will be caught by test functions; and type info types > 6; /// will result in exceptions which pass through to the test harness. All other; /// type info types are not supported and could cause a crash.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/examples/ExceptionDemo/ExceptionDemo.cpp:205,rout,routine,205,interpreter/llvm-project/llvm/examples/ExceptionDemo/ExceptionDemo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/examples/ExceptionDemo/ExceptionDemo.cpp,1,['rout'],['routine']
Integrability,//===----------------------------------------------------------------------===//; // Meta Data Emission; //===----------------------------------------------------------------------===//; /// RewriteImplementations - This routine rewrites all method implementations; /// and emits meta-data.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/Rewrite/RewriteModernObjC.cpp:221,rout,routine,221,interpreter/llvm-project/clang/lib/Frontend/Rewrite/RewriteModernObjC.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/Rewrite/RewriteModernObjC.cpp,2,['rout'],['routine']
Integrability,//===----------------------------------------------------------------------===//; // ObjCQualifiedIdTypesAreCompatible - Compatibility testing for qualified id's.; //===----------------------------------------------------------------------===//; /// ProtocolCompatibleWithProtocol - return 'true' if 'lProto' is in the; /// inheritance hierarchy of 'rProto'.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ASTContext.cpp:250,Protocol,ProtocolCompatibleWithProtocol,250,interpreter/llvm-project/clang/lib/AST/ASTContext.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ASTContext.cpp,1,['Protocol'],['ProtocolCompatibleWithProtocol']
Integrability,"//===----------------------------------------------------------------------===//; // Overview:; // The Pass Manager Infrastructure manages passes. It's responsibilities are:; //; // o Manage optimization pass execution order; // o Make required Analysis information available before pass P is run; // o Release memory occupied by dead passes; // o If Analysis information is dirtied by a pass then regenerate Analysis; // information before it is consumed by another pass.; //; // Pass Manager Infrastructure uses multiple pass managers. They are; // PassManager, FunctionPassManager, MPPassManager, FPPassManager, BBPassManager.; // This class hierarchy uses multiple inheritance but pass managers do not; // derive from another pass manager.; //; // PassManager and FunctionPassManager are two top-level pass manager that; // represents the external interface of this entire pass manager infrastucture.; //; // Important classes :; //; // [o] class PMTopLevelManager;; //; // Two top level managers, PassManager and FunctionPassManager, derive from; // PMTopLevelManager. PMTopLevelManager manages information used by top level; // managers such as last user info.; //; // [o] class PMDataManager;; //; // PMDataManager manages information, e.g. list of available analysis info,; // used by a pass manager to manage execution order of passes. It also provides; // a place to implement common pass manager APIs. All pass managers derive from; // PMDataManager.; //; // [o] class FunctionPassManager;; //; // This is a external interface used to manage FunctionPasses. This; // interface relies on FunctionPassManagerImpl to do all the tasks.; //; // [o] class FunctionPassManagerImpl : public ModulePass, PMDataManager,; // public PMTopLevelManager;; //; // FunctionPassManagerImpl is a top level manager. It manages FPPassManagers; //; // [o] class FPPassManager : public ModulePass, public PMDataManager;; //; // FPPassManager manages FunctionPasses and BBPassManagers; //; // [o] class MPPassManag",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/LegacyPassManagers.h:852,interface,interface,852,interpreter/llvm-project/llvm/include/llvm/IR/LegacyPassManagers.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/LegacyPassManagers.h,1,['interface'],['interface']
Integrability,"//===----------------------------------------------------------------------===//; // PPCBranchCoalescing; //===----------------------------------------------------------------------===//; ///; /// Improve scheduling by coalescing branches that depend on the same condition.; /// This pass looks for blocks that are guarded by the same branch condition; /// and attempts to merge the blocks together. Such opportunities arise from; /// the expansion of select statements in the IR.; ///; /// This pass does not handle implicit operands on branch statements. In order; /// to run on targets that use implicit operands, changes need to be made in the; /// canCoalesceBranch and canMerge methods.; ///; /// Example: the following LLVM IR; ///; /// %test = icmp eq i32 %x 0; /// %tmp1 = select i1 %test, double %a, double 2.000000e-03; /// %tmp2 = select i1 %test, double %b, double 5.000000e-03; ///; /// expands to the following machine code:; ///; /// %bb.0: derived from LLVM BB %entry; /// liveins: %f1 %f3 %x6; /// <SNIP1>; /// %0 = COPY %f1; F8RC:%0; /// %5 = CMPLWI killed %4, 0; CRRC:%5 GPRC:%4; /// %8 = LXSDX %zero8, killed %7, implicit %rm;; /// mem:LD8[ConstantPool] F8RC:%8 G8RC:%7; /// BCC 76, %5, <%bb.2>; CRRC:%5; /// Successors according to CFG: %bb.1(?%) %bb.2(?%); ///; /// %bb.1: derived from LLVM BB %entry; /// Predecessors according to CFG: %bb.0; /// Successors according to CFG: %bb.2(?%); ///; /// %bb.2: derived from LLVM BB %entry; /// Predecessors according to CFG: %bb.0 %bb.1; /// %9 = PHI %8, <%bb.1>, %0, <%bb.0>;; /// F8RC:%9,%8,%0; /// <SNIP2>; /// BCC 76, %5, <%bb.4>; CRRC:%5; /// Successors according to CFG: %bb.3(?%) %bb.4(?%); ///; /// %bb.3: derived from LLVM BB %entry; /// Predecessors according to CFG: %bb.2; /// Successors according to CFG: %bb.4(?%); ///; /// %bb.4: derived from LLVM BB %entry; /// Predecessors according to CFG: %bb.2 %bb.3; /// %13 = PHI %12, <%bb.3>, %2, <%bb.2>;; /// F8RC:%13,%12,%2; /// <SNIP3>; /// BLR8 implicit %lr8, implicit %rm,",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCBranchCoalescing.cpp:244,depend,depend,244,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCBranchCoalescing.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCBranchCoalescing.cpp,1,['depend'],['depend']
Integrability,"//===----------------------------------------------------------------------===//; // Partial register updates; //===----------------------------------------------------------------------===//; //; // Swift renames NEON registers with 64-bit granularity. That means any; // instruction writing an S-reg implicitly reads the containing D-reg. The; // problem is mostly avoided by translating f32 operations to v2f32 operations; // on D-registers, but f32 loads are still a problem.; //; // These instructions can load an f32 into a NEON register:; //; // VLDRS - Only writes S, partial D update.; // VLD1LNd32 - Writes all D-regs, explicit partial D update, 2 uops.; // VLD1DUPd32 - Writes all D-regs, no partial reg update, 2 uops.; //; // FCONSTD can be used as a dependency-breaking instruction.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMBaseInstrInfo.cpp:764,depend,dependency-breaking,764,interpreter/llvm-project/llvm/lib/Target/ARM/ARMBaseInstrInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMBaseInstrInfo.cpp,1,['depend'],['dependency-breaking']
Integrability,//===----------------------------------------------------------------------===//; // PathDiagnosticBuilder and its associated routines and helper objects.; //===----------------------------------------------------------------------===//,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/BugReporter.cpp:126,rout,routines,126,interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/BugReporter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/BugReporter.cpp,1,['rout'],['routines']
Integrability,"//===----------------------------------------------------------------------===//; // Properties of allocation functions; //; /// Return true if this is a call to an allocation function that does not have; /// side effects that we are required to preserve beyond the effect of; /// allocating a new object.; /// Ex: If our allocation routine has a counter for the number of objects; /// allocated, and the program prints it on exit, can the value change due; /// to optimization? Answer is highly language dependent.; /// Note: *Removable* really does mean removable; it does not mean observable.; /// A language (e.g. C++) can allow removing allocations without allowing; /// insertion or speculative execution of allocation routines.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/MemoryBuiltins.h:333,rout,routine,333,interpreter/llvm-project/llvm/include/llvm/Analysis/MemoryBuiltins.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/MemoryBuiltins.h,3,"['depend', 'rout']","['dependent', 'routine', 'routines']"
Integrability,"//===----------------------------------------------------------------------===//; // Public interface for accessing registered options.; //; /// Use this to get a StringMap to all registered named options; /// (e.g. -help).; ///; /// \return A reference to the StringMap used by the cl APIs to parse options.; ///; /// Access to unnamed arguments (i.e. positional) are not provided because; /// it is expected that the client already has access to these.; ///; /// Typical usage:; /// \code; /// main(int argc,char* argv[]) {; /// StringMap<llvm::cl::Option*> &opts = llvm::cl::getRegisteredOptions();; /// assert(opts.count(""help"") == 1); /// opts[""help""]->setDescription(""Show alphabetical help information""); /// // More code; /// llvm::cl::ParseCommandLineOptions(argc,argv);; /// //More code; /// }; /// \endcode; ///; /// This interface is useful for modifying options in libraries that are out of; /// the control of the client. The options should be modified before calling; /// llvm::cl::ParseCommandLineOptions().; ///; /// Hopefully this API can be deprecated soon. Any situation where options need; /// to be modified by tools or libraries should be handled by sane APIs rather; /// than just handing around a global list.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/CommandLine.h:92,interface,interface,92,interpreter/llvm-project/llvm/include/llvm/Support/CommandLine.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/CommandLine.h,2,['interface'],['interface']
Integrability,"//===----------------------------------------------------------------------===//; // Resolvers; //===----------------------------------------------------------------------===//; /// Interface for looking up the initializer for a variable name, used by; /// Init::resolveReferences.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/TableGen/Record.h:182,Interface,Interface,182,interpreter/llvm-project/llvm/include/llvm/TableGen/Record.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/TableGen/Record.h,1,['Interface'],['Interface']
Integrability,"//===----------------------------------------------------------------------===//; // Routines for expanding and manipulating CXSourceLocations, regardless; // of their origin.; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/libclang/CXSourceLocation.cpp:85,Rout,Routines,85,interpreter/llvm-project/clang/tools/libclang/CXSourceLocation.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/libclang/CXSourceLocation.cpp,1,['Rout'],['Routines']
Integrability,"//===----------------------------------------------------------------------===//; // SCEV Utilities; //===----------------------------------------------------------------------===//; /// Compare the two values \p LV and \p RV in terms of their ""complexity"" where; /// ""complexity"" is a partial (and somewhat ad-hoc) relation used to order; /// operands in SCEV expressions. \p EqCache is a set of pairs of values that; /// have been previously deemed to be ""equally complex"" by this routine. It is; /// intended to avoid exponential time complexity in cases like:; ///; /// %a = f(%x, %y); /// %b = f(%a, %a); /// %c = f(%b, %b); ///; /// %d = f(%x, %y); /// %e = f(%d, %d); /// %f = f(%e, %e); ///; /// CompareValueComplexity(%f, %c); ///; /// Since we do not continue running this routine on expression trees once we; /// have seen unequal values, there is no need to track them in the cache.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/ScalarEvolution.cpp:483,rout,routine,483,interpreter/llvm-project/llvm/lib/Analysis/ScalarEvolution.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/ScalarEvolution.cpp,2,['rout'],['routine']
Integrability,"//===----------------------------------------------------------------------===//; // ScheduleDAGLinearize - No scheduling scheduler, it simply linearize the; // DAG in topological order.; // IMPORTANT: this may not work for targets with phyreg dependency.; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGFast.cpp:244,depend,dependency,244,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGFast.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGFast.cpp,1,['depend'],['dependency']
Integrability,//===----------------------------------------------------------------------===//; // SelectionDAG latency interface.; //===----------------------------------------------------------------------===//,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/TargetInstrInfo.cpp:106,interface,interface,106,interpreter/llvm-project/llvm/lib/CodeGen/TargetInstrInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/TargetInstrInfo.cpp,1,['interface'],['interface']
Integrability,//===----------------------------------------------------------------------===//; // Symbol Lowering Routines.; //===----------------------------------------------------------------------===//,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/AsmPrinter.cpp:101,Rout,Routines,101,interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/AsmPrinter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/AsmPrinter.cpp,1,['Rout'],['Routines']
Integrability,"//===----------------------------------------------------------------------===//; // This pass is not intended to be a replacement or a complete alternative; // for the pre-ra machine sink pass. It is only designed to sink COPY; // instructions which should be handled after RA.; //; // This pass sinks COPY instructions into a successor block, if the COPY is not; // used in the current block and the COPY is live-in to a single successor; // (i.e., doesn't require the COPY to be duplicated). This avoids executing the; // copy on paths where their results aren't needed. This also exposes; // additional opportunites for dead copy elimination and shrink wrapping.; //; // These copies were either not handled by or are inserted after the MachineSink; // pass. As an example of the former case, the MachineSink pass cannot sink; // COPY instructions with allocatable source registers; for AArch64 these type; // of copy instructions are frequently used to move function parameters (PhyReg); // into virtual registers in the entry block.; //; // For the machine IR below, this pass will sink %w19 in the entry into its; // successor (%bb.1) because %w19 is only live-in in %bb.1.; // %bb.0:; // %wzr = SUBSWri %w1, 1; // %w19 = COPY %w0; // Bcc 11, %bb.2; // %bb.1:; // Live Ins: %w19; // BL @fun; // %w0 = ADDWrr %w0, %w19; // RET %w0; // %bb.2:; // %w0 = COPY %wzr; // RET %w0; // As we sink %w19 (CSR in AArch64) into %bb.1, the shrink-wrapping pass will be; // able to see %bb.0 as a candidate.; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineSink.cpp:657,wrap,wrapping,657,interpreter/llvm-project/llvm/lib/CodeGen/MachineSink.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineSink.cpp,2,['wrap'],['wrapping']
Integrability,"//===----------------------------------------------------------------------===//; // TypeSpec; //===----------------------------------------------------------------------===//; /// A TypeSpec is just a simple wrapper around a string, but gets its own type; /// for strong typing purposes.; ///; /// A TypeSpec can be used to create a type.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/TableGen/NeonEmitter.cpp:209,wrap,wrapper,209,interpreter/llvm-project/clang/utils/TableGen/NeonEmitter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/TableGen/NeonEmitter.cpp,1,['wrap'],['wrapper']
Integrability,"//===----------------------------------------------------------------------===//; // We'll use AnalyzerOptions in the frontend, but we can't link the frontend; // with clangStaticAnalyzerCore, because clangStaticAnalyzerCore depends on; // clangFrontend.; //; // For this reason, implement some methods in this header file.; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/StaticAnalyzer/Core/AnalyzerOptions.h:225,depend,depends,225,interpreter/llvm-project/clang/include/clang/StaticAnalyzer/Core/AnalyzerOptions.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/StaticAnalyzer/Core/AnalyzerOptions.h,1,['depend'],['depends']
Integrability,//===----------------------------------------------------------------------===//; // WebAssembly Lowering public interface.; //===----------------------------------------------------------------------===//,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyTargetMachine.cpp:113,interface,interface,113,interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyTargetMachine.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyTargetMachine.cpp,1,['interface'],['interface']
Integrability,"//===----------------------------------------------------------------------===//; // Wrapper Expressions.; //===----------------------------------------------------------------------===//; /// FullExpr - Represents a ""full-expression"" node.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/Expr.h:85,Wrap,Wrapper,85,interpreter/llvm-project/clang/include/clang/AST/Expr.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/Expr.h,1,['Wrap'],['Wrapper']
Integrability,"//===----------------------------------------------------------------------===//; // banerjeeMIVtest -; // Use Banerjee's Inequalities to test an MIV subscript pair.; // (Wolfe, in the race-car book, calls this the Extreme Value Test.); // Generally follows the discussion in Section 2.5.2 of; //; // Optimizing Supercompilers for Supercomputers; // Michael Wolfe; //; // The inequalities given on page 25 are simplified in that loops are; // normalized so that the lower bound is always 0 and the stride is always 1.; // For example, Wolfe gives; //; // LB^<_k = (A^-_k - B_k)^- (U_k - L_k - N_k) + (A_k - B_k)L_k - B_k N_k; //; // where A_k is the coefficient of the kth index in the source subscript,; // B_k is the coefficient of the kth index in the destination subscript,; // U_k is the upper bound of the kth index, L_k is the lower bound of the Kth; // index, and N_k is the stride of the kth index. Since all loops are normalized; // by the SCEV package, N_k = 1 and L_k = 0, allowing us to simplify the; // equation to; //; // LB^<_k = (A^-_k - B_k)^- (U_k - 0 - 1) + (A_k - B_k)0 - B_k 1; // = (A^-_k - B_k)^- (U_k - 1) - B_k; //; // Similar simplifications are possible for the other equations.; //; // When we can't determine the number of iterations for a loop,; // we use NULL as an indicator for the worst case, infinity.; // When computing the upper bound, NULL denotes +inf;; // for the lower bound, NULL denotes -inf.; //; // Return true if dependence disproved.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/DependenceAnalysis.cpp:1460,depend,dependence,1460,interpreter/llvm-project/llvm/lib/Analysis/DependenceAnalysis.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/DependenceAnalysis.cpp,1,['depend'],['dependence']
Integrability,"//===----------------------------------------------------------------------===//; // gcdMIVtest -; // Tests an MIV subscript pair for dependence.; // Returns true if any possible dependence is disproved.; // Marks the result as inconsistent.; // Can sometimes disprove the equal direction for 1 or more loops,; // as discussed in Michael Wolfe's book,; // High Performance Compilers for Parallel Computing, page 235.; //; // We spend some effort (code!) to handle cases like; // [10*i + 5*N*j + 15*M + 6], where i and j are induction variables,; // but M and N are just loop-invariant variables.; // This should help us handle linearized subscripts;; // also makes this test a useful backup to the various SIV tests.; //; // It occurs to me that the presence of loop-invariant variables; // changes the nature of the test from ""greatest common divisor""; // to ""a common divisor"".",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/DependenceAnalysis.cpp:134,depend,dependence,134,interpreter/llvm-project/llvm/lib/Analysis/DependenceAnalysis.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/DependenceAnalysis.cpp,2,['depend'],['dependence']
Integrability,"//===----------------------------------------------------------------------===//; // getSplitIteration -; // Rather than spend rarely-used space recording the splitting iteration; // during the Weak-Crossing SIV test, we re-compute it on demand.; // The re-computation is basically a repeat of the entire dependence test,; // though simplified since we know that the dependence exists.; // It's tedious, since we must go through all propagations, etc.; //; // Care is required to keep this code up to date with respect to the routine; // above, depends().; //; // Generally, the dependence analyzer will be used to build; // a dependence graph for a function (basically a map from instructions; // to dependences). Looking for cycles in the graph shows us loops; // that cannot be trivially vectorized/parallelized.; //; // We can try to improve the situation by examining all the dependences; // that make up the cycle, looking for ones we can break.; // Sometimes, peeling the first or last iteration of a loop will break; // dependences, and we've got flags for those possibilities.; // Sometimes, splitting a loop at some other iteration will do the trick,; // and we've got a flag for that case. Rather than waste the space to; // record the exact iteration (since we rarely know), we provide; // a method that calculates the iteration. It's a drag that it must work; // from scratch, but wonderful in that it's possible.; //; // Here's an example:; //; // for (i = 0; i < 10; i++); // A[i] = ...; // ... = A[11 - i]; //; // There's a loop-carried flow dependence from the store to the load,; // found by the weak-crossing SIV test. The dependence will have a flag,; // indicating that the dependence can be broken by splitting the loop.; // Calling getSplitIteration will return 5.; // Splitting the loop breaks the dependence, like so:; //; // for (i = 0; i <= 5; i++); // A[i] = ...; // ... = A[11 - i]; // for (i = 6; i < 10; i++); // A[i] = ...; // ... = A[11 - i]; //; // breaks the depende",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/DependenceAnalysis.cpp:305,depend,dependence,305,interpreter/llvm-project/llvm/lib/Analysis/DependenceAnalysis.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/DependenceAnalysis.cpp,8,"['depend', 'rout']","['dependence', 'dependences', 'depends', 'routine']"
Integrability,"//===----------------------------------------------------------------------===//; // rewriteToDictionaryLiteral.; //===----------------------------------------------------------------------===//; /// If \c Msg is an NSArray creation message or literal, this gets the; /// objects that were used to create it.; /// \returns true if it is an NSArray and we got objects, or false otherwise.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Edit/RewriteObjCFoundationAPI.cpp:233,message,message,233,interpreter/llvm-project/clang/lib/Edit/RewriteObjCFoundationAPI.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Edit/RewriteObjCFoundationAPI.cpp,1,['message'],['message']
Integrability,"//===----------------------------------------------------------------------===//; // rewriteToObjCSubscriptSyntax.; //===----------------------------------------------------------------------===//; /// Check for classes that accept 'objectForKey:' (or the other selectors; /// that the migrator handles) but return their instances as 'id', resulting; /// in the compiler resolving 'objectForKey:' as the method from NSDictionary.; ///; /// When checking if we can convert to subscripting syntax, check whether; /// the receiver is a result of a class method from a hardcoded list of; /// such classes. In such a case return the specific class as the interface; /// of the receiver.; ///; /// FIXME: Remove this when these classes start using 'instancetype'.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Edit/RewriteObjCFoundationAPI.cpp:650,interface,interface,650,interpreter/llvm-project/clang/lib/Edit/RewriteObjCFoundationAPI.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Edit/RewriteObjCFoundationAPI.cpp,1,['interface'],['interface']
Integrability,//===----------------------------------------------------------------------===//; /// AnalysisResolver - Simple interface used by Pass objects to pull all; /// analysis information out of pass manager that is responsible to manage; /// the pass.; ///,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/PassAnalysisSupport.h:112,interface,interface,112,interpreter/llvm-project/llvm/include/llvm/PassAnalysisSupport.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/PassAnalysisSupport.h,1,['interface'],['interface']
Integrability,"//===----------------------------------------------------------------------===//; /// FoldingSetNodeWrapper - This template class is used to ""wrap"" arbitrary; /// types in an enclosing object so that they can be inserted into FoldingSets.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/FoldingSet.h:142,wrap,wrap,142,interpreter/llvm-project/llvm/include/llvm/ADT/FoldingSet.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/FoldingSet.h,1,['wrap'],['wrap']
Integrability,//===----------------------------------------------------------------------===//; /// FoldingSetVector - This template class combines a FoldingSet and a vector; /// to provide the interface of FoldingSet but with deterministic iteration; /// order based on the insertion order. T must be a subclass of FoldingSetNode; /// and implement a Profile function.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/FoldingSet.h:180,interface,interface,180,interpreter/llvm-project/llvm/include/llvm/ADT/FoldingSet.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/FoldingSet.h,1,['interface'],['interface']
Integrability,//===----------------------------------------------------------------------===//; /// LexicalScopes - This class provides interface to collect and use lexical; /// scoping information from machine instruction.; ///,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/LexicalScopes.h:122,interface,interface,122,interpreter/llvm-project/llvm/include/llvm/CodeGen/LexicalScopes.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/LexicalScopes.h,1,['interface'],['interface']
Integrability,//===----------------------------------------------------------------------===//; /// Pass interface - Implemented by all 'passes'. Subclass this if you are an; /// interprocedural optimization or you do not fit into any of the more; /// constrained passes described below.; ///,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Pass.h:91,interface,interface,91,interpreter/llvm-project/llvm/include/llvm/Pass.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Pass.h,1,['interface'],['interface']
Integrability,//===----------------------------------------------------------------------===//; /// Stable LoopInfo Analysis - Build a loop tree using stable iterators so the; /// result does / not depend on use list (block predecessor) order.; ///; /// Discover a subloop with the specified backedges such that: All blocks within; /// this loop are mapped to this loop or a subloop. And all subloops within this; /// loop have their parent loop set to this loop or a subloop.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/GenericLoopInfoImpl.h:184,depend,depend,184,interpreter/llvm-project/llvm/include/llvm/Support/GenericLoopInfoImpl.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/GenericLoopInfoImpl.h,1,['depend'],['depend']
Integrability,"//===----------------------------------------------------------------------===//; /// \class; /// A set of classes that contain the value of the; /// attribute object. There are three main categories: enum attribute entries,; /// represented by Attribute::AttrKind; alignment attribute entries; and string; /// attribute enties, which are for target-dependent attributes.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/AttributeImpl.h:350,depend,dependent,350,interpreter/llvm-project/llvm/lib/IR/AttributeImpl.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/AttributeImpl.h,1,['depend'],['dependent']
Integrability,//===----------------------------------------------------------------------===//; ///; /// Primary interface to the complete machine description for the target; /// machine. All target-specific information should be accessible through this; /// interface.; ///,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Target/TargetMachine.h:99,interface,interface,99,interpreter/llvm-project/llvm/include/llvm/Target/TargetMachine.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Target/TargetMachine.h,2,['interface'],['interface']
Integrability,//===----------------------------------------------------------------------===//; //; // Implementations of the CPU detection routines; //; //===----------------------------------------------------------------------===//,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/TargetParser/Host.cpp:126,rout,routines,126,interpreter/llvm-project/llvm/lib/TargetParser/Host.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/TargetParser/Host.cpp,1,['rout'],['routines']
Integrability,//===----------------------------------------------------------------------===//; //; // Pass Manager integration code; //; //===----------------------------------------------------------------------===//,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/ADCE.cpp:102,integrat,integration,102,interpreter/llvm-project/llvm/lib/Transforms/Scalar/ADCE.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/ADCE.cpp,1,['integrat'],['integration']
Integrability,//===----------------------------------------------------------------------===//; //; // Routines to update the CFG and SSA information before removing dead code.; //; //===----------------------------------------------------------------------===//,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/ADCE.cpp:89,Rout,Routines,89,interpreter/llvm-project/llvm/lib/Transforms/Scalar/ADCE.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/ADCE.cpp,1,['Rout'],['Routines']
Integrability,"//===----------------------------------------------------------------------===//; //; /// A wrapper around an intrusive list with callbacks and non-intrusive; /// ownership.; ///; /// This wraps a purely intrusive list (like simple_ilist) with a configurable; /// traits class. The traits can implement callbacks and customize the; /// ownership semantics.; ///; /// This is a subset of ilist functionality that can safely be used on nodes of; /// polymorphic types, i.e. a heterogeneous list with a common base class that; /// holds the next/prev pointers. The only state of the list itself is an; /// ilist_sentinel, which holds pointers to the first and last nodes in the; /// list.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/ilist.h:92,wrap,wrapper,92,interpreter/llvm-project/llvm/include/llvm/ADT/ilist.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/ilist.h,2,['wrap'],"['wrapper', 'wraps']"
Integrability,//===----------------------------------------------------------------------===//; //; /// SCCPSolver - This interface class is a general purpose solver for Sparse; /// Conditional Constant Propagation (SCCP).; ///,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/SCCPSolver.h:108,interface,interface,108,interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/SCCPSolver.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/SCCPSolver.h,1,['interface'],['interface']
Integrability,//===---------------------------------------------------------------------; // Implementation of the ModulePass interface needed here.; //,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/CallGraph.h:112,interface,interface,112,interpreter/llvm-project/llvm/include/llvm/Analysis/CallGraph.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/CallGraph.h,1,['interface'],['interface']
Integrability,"//===---------------------------------------------------------------------===//; // Custom compiler command implementation of AbstractIntepreter interface; //; // Allows using a custom command for compiling the bitcode, thus allows, for; // example, to compile a bitcode fragment without linking or executing, then; // using a custom wrapper script to check for compiler errors.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/bugpoint/ToolRunner.cpp:145,interface,interface,145,interpreter/llvm-project/llvm/tools/bugpoint/ToolRunner.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/bugpoint/ToolRunner.cpp,2,"['interface', 'wrap']","['interface', 'wrapper']"
Integrability,"//===---------------------------------------------------------------------===//; // Custom execution command implementation of AbstractIntepreter interface; //; // Allows using a custom command for executing the bitcode, thus allows,; // for example, to invoke a cross compiler for code generation followed by; // a simulator that executes the generated binary.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/bugpoint/ToolRunner.cpp:146,interface,interface,146,interpreter/llvm-project/llvm/tools/bugpoint/ToolRunner.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/bugpoint/ToolRunner.cpp,1,['interface'],['interface']
Integrability,//===---------------------------------------------------------------------===//; // JIT Implementation of AbstractIntepreter interface; //,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/bugpoint/ToolRunner.cpp:125,interface,interface,125,interpreter/llvm-project/llvm/tools/bugpoint/ToolRunner.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/bugpoint/ToolRunner.cpp,1,['interface'],['interface']
Integrability,//===---------------------------------------------------------------------===//; // LLC Implementation of AbstractIntepreter interface; //,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/bugpoint/ToolRunner.h:125,interface,interface,125,interpreter/llvm-project/llvm/tools/bugpoint/ToolRunner.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/bugpoint/ToolRunner.h,1,['interface'],['interface']
Integrability,//===---------------------------------------------------------------------===//; // LLI Implementation of AbstractIntepreter interface; //,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/bugpoint/ToolRunner.cpp:125,interface,interface,125,interpreter/llvm-project/llvm/tools/bugpoint/ToolRunner.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/bugpoint/ToolRunner.cpp,1,['interface'],['interface']
Integrability,//===---------------------------------------------------------------------===//; /// AbstractInterpreter Class - Subclasses of this class are used to execute; /// LLVM bitcode in a variety of ways. This abstract interface hides this; /// complexity behind a simple interface.; ///,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/bugpoint/ToolRunner.h:212,interface,interface,212,interpreter/llvm-project/llvm/tools/bugpoint/ToolRunner.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/bugpoint/ToolRunner.h,2,['interface'],['interface']
Integrability,"//===--------------------------------------------------------------------===//; // Addressing Mode #6; //===--------------------------------------------------------------------===//; //; // This is used for NEON load / store instructions.; //; // addrmode6 := reg with optional alignment; //; // This is stored in two operands [regaddr, align]. The first is the; // address register. The second operand is the value of the alignment; // specifier in bytes or zero if no explicit alignment.; // Valid alignments depend on the specific instruction.; //===--------------------------------------------------------------------===//; // NEON/MVE Modified Immediates; //===--------------------------------------------------------------------===//; //; // Several NEON and MVE instructions (e.g., VMOV) take a ""modified immediate""; // vector operand, where a small immediate encoded in the instruction; // specifies a full NEON vector value. These modified immediates are; // represented here as encoded integers. The low 8 bits hold the immediate; // value; bit 12 holds the ""Op"" field of the instruction, and bits 11-8 hold; // the ""Cmode"" field of the instruction. The interfaces below treat the; // Op and Cmode values as a single 5-bit value.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/MCTargetDesc/ARMAddressingModes.h:511,depend,depend,511,interpreter/llvm-project/llvm/lib/Target/ARM/MCTargetDesc/ARMAddressingModes.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/MCTargetDesc/ARMAddressingModes.h,2,"['depend', 'interface']","['depend', 'interfaces']"
Integrability,"//===--------------------------------------------------------------------===//; // C++ Expressions.; //===--------------------------------------------------------------------===//; /// A call to an overloaded operator written using operator; /// syntax.; ///; /// Represents a call to an overloaded operator written using operator; /// syntax, e.g., ""x + y"" or ""*p"". While semantically equivalent to a; /// normal call, this AST node provides better information about the; /// syntactic representation of the call.; ///; /// In a C++ template, this expression node kind will be used whenever; /// any of the arguments are type-dependent. In this case, the; /// function itself will be a (possibly empty) set of functions and; /// function templates that were found by name lookup at template; /// definition time.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/ExprCXX.h:627,depend,dependent,627,interpreter/llvm-project/clang/include/clang/AST/ExprCXX.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/ExprCXX.h,1,['depend'],['dependent']
Integrability,"//===--------------------------------------------------------------------===//; // Configuration Interface; //===--------------------------------------------------------------------===//; /// If possible, pre-allocate \p ExtraSize bytes for stream data.; /// i.e. it extends internal buffers to keep additional ExtraSize bytes.; /// So that the stream could keep at least tell() + ExtraSize bytes; /// without re-allocations. reserveExtraSpace() does not change; /// the size/data of the stream.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/raw_ostream.h:97,Interface,Interface,97,interpreter/llvm-project/llvm/include/llvm/Support/raw_ostream.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/raw_ostream.h,1,['Interface'],['Interface']
Integrability,//===--------------------------------------------------------------------===//; // Data Output Interface; //===--------------------------------------------------------------------===//,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/raw_ostream.h:95,Interface,Interface,95,interpreter/llvm-project/llvm/include/llvm/Support/raw_ostream.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/raw_ostream.h,1,['Interface'],['Interface']
Integrability,//===--------------------------------------------------------------------===//; // DependenceGraphInfo Implementation; //===--------------------------------------------------------------------===//,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/DDG.h:83,Depend,DependenceGraphInfo,83,interpreter/llvm-project/llvm/include/llvm/Analysis/DDG.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/DDG.h,1,['Depend'],['DependenceGraphInfo']
Integrability,"//===--------------------------------------------------------------------===//; // Diagnostic classification and reporting interfaces.; //; /// Given a diagnostic ID, return a description of the issue.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/DiagnosticIDs.h:123,interface,interfaces,123,interpreter/llvm-project/clang/include/clang/Basic/DiagnosticIDs.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/DiagnosticIDs.h,1,['interface'],['interfaces']
Integrability,//===--------------------------------------------------------------------===//; // DiagnosticsEngine classification and reporting interfaces.; //; /// Determine whether the diagnostic is known to be ignored.; ///; /// This can be used to opportunistically avoid expensive checks when it's; /// known for certain that the diagnostic has been suppressed at the; /// specified location \p Loc.; ///; /// \param Loc The source location we are interested in finding out the; /// diagnostic state. Can be null in order to query the latest state.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/Diagnostic.h:130,interface,interfaces,130,interpreter/llvm-project/clang/include/clang/Basic/Diagnostic.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/Diagnostic.h,1,['interface'],['interfaces']
Integrability,//===--------------------------------------------------------------------===//; // Emission and print routines; //; /// Emit a byte directive and value.; ///,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/AsmPrinter.cpp:102,rout,routines,102,interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/AsmPrinter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/AsmPrinter.cpp,1,['rout'],['routines']
Integrability,"//===--------------------------------------------------------------------===//; // ExternalASTSource interface.; //===--------------------------------------------------------------------===//; /// Return the amount of memory used by memory buffers, breaking down; /// by heap-backed versus mmap'ed memory.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/ChainedIncludesSource.cpp:101,interface,interface,101,interpreter/llvm-project/clang/lib/Frontend/ChainedIncludesSource.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/ChainedIncludesSource.cpp,1,['interface'],['interface']
Integrability,"//===--------------------------------------------------------------------===//; // High-level interface.; //===--------------------------------------------------------------------===//; //; // Calculate live ranges from scratch.; //; /// reset - Prepare caches for a new set of non-overlapping live ranges. The; /// caches must be reset before attempting calculations with a live range; /// that may overlap a previously computed live range, and before the first; /// live range in a function. If live ranges are not known to be; /// non-overlapping, call reset before each.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/LiveRangeCalc.h:94,interface,interface,94,interpreter/llvm-project/llvm/include/llvm/CodeGen/LiveRangeCalc.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/LiveRangeCalc.h,1,['interface'],['interface']
Integrability,//===--------------------------------------------------------------------===//; // High-level interface.; //===--------------------------------------------------------------------===//; //; // Check for interference before assigning virtual registers to physical; // registers.; //; /// Invalidate cached interference queries after modifying virtual register; /// live ranges. Interference checks may return stale information unless; /// caches are invalidated.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/LiveRegMatrix.h:94,interface,interface,94,interpreter/llvm-project/llvm/include/llvm/CodeGen/LiveRegMatrix.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/LiveRegMatrix.h,1,['interface'],['interface']
Integrability,//===--------------------------------------------------------------------===//; // Interface code - This is the public interface of the InstVisitor that you; // use to visit instructions...; //,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/InstVisitor.h:83,Interface,Interface,83,interpreter/llvm-project/llvm/include/llvm/IR/InstVisitor.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/InstVisitor.h,2,"['Interface', 'interface']","['Interface', 'interface']"
Integrability,//===--------------------------------------------------------------------===//; // Internal implementation interfaces.; /// LexTokenInternal - Internal interface to lex a preprocessing token. Called; /// by Lex.; ///,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Lex/Lexer.h:107,interface,interfaces,107,interpreter/llvm-project/clang/include/clang/Lex/Lexer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Lex/Lexer.h,2,['interface'],"['interface', 'interfaces']"
Integrability,"//===--------------------------------------------------------------------===//; // Lexer character reading interfaces.; // This lexer is built on two interfaces for reading characters, both of which; // automatically provide phase 1/2 translation. getAndAdvanceChar is used; // when we know that we will be reading a character from the input buffer and; // that this character will be part of the result token. This occurs in (f.e.); // string processing, because we know we need to read until we find the; // closing '""' character.; //; // The second interface is the combination of getCharAndSize with; // ConsumeChar. getCharAndSize reads a phase 1/2 translated character,; // returning it and its size. If the lexer decides that this character is; // part of the current token, it calls ConsumeChar on it. This two stage; // approach allows us to emit diagnostics for characters (e.g. warnings about; // trigraphs), knowing that they only are emitted if the character is; // consumed.; /// isObviouslySimpleCharacter - Return true if the specified character is; /// obviously the same in translation phase 1 and translation phase 3. This; /// can return false for characters that end up being the same, but it will; /// never return true for something that needs to be mapped.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Lex/Lexer.h:107,interface,interfaces,107,interpreter/llvm-project/clang/include/clang/Lex/Lexer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Lex/Lexer.h,3,['interface'],"['interface', 'interfaces']"
Integrability,//===--------------------------------------------------------------------===//; // Line Table Manipulation Routines; //===--------------------------------------------------------------------===//; /// Return the uniqued ID for the specified filename.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/SourceManager.h:107,Rout,Routines,107,interpreter/llvm-project/clang/include/clang/Basic/SourceManager.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/SourceManager.h,1,['Rout'],['Routines']
Integrability,"//===--------------------------------------------------------------------===//; // Low-level interface.; //===--------------------------------------------------------------------===//; //; // Provide access to the underlying LiveIntervalUnions.; //; /// Check for regmask interference only.; /// Return true if VirtReg crosses a regmask operand that clobbers PhysReg.; /// If PhysReg is null, check if VirtReg crosses any regmask operands.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/LiveRegMatrix.h:93,interface,interface,93,interpreter/llvm-project/llvm/include/llvm/CodeGen/LiveRegMatrix.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/LiveRegMatrix.h,1,['interface'],['interface']
Integrability,"//===--------------------------------------------------------------------===//; // Low-level interface.; //===--------------------------------------------------------------------===//; //; // These functions can be used to compute live ranges where the live-in and; // live-out blocks are already known, but the SSA value in each block is; // unknown.; //; // After calling reset(), add known live-out values and known live-in blocks.; // Then call calculateValues() to compute the actual value that is; // live-in to each block, and add liveness to the live ranges.; //; /// setLiveOutValue - Indicate that VNI is live out from MBB. The; /// calculateValues() function will not add liveness for MBB, the caller; /// should take care of that.; ///; /// VNI may be null only if MBB is a live-through block also passed to; /// addLiveInBlock().",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/LiveRangeCalc.h:93,interface,interface,93,interpreter/llvm-project/llvm/include/llvm/CodeGen/LiveRangeCalc.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/LiveRangeCalc.h,1,['interface'],['interface']
Integrability,"//===--------------------------------------------------------------------===//; // Mid-level interface.; //===--------------------------------------------------------------------===//; //; // Modify existing live ranges.; //; /// Extend the live range of @p LR to reach @p Use.; ///; /// The existing values in @p LR must be live so they jointly dominate @p Use.; /// If @p Use is not dominated by a single existing value, PHI-defs are; /// inserted as required to preserve SSA form.; ///; /// PhysReg, when set, is used to verify live-in lists on basic blocks.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/LiveRangeCalc.h:93,interface,interface,93,interpreter/llvm-project/llvm/include/llvm/CodeGen/LiveRangeCalc.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/LiveRangeCalc.h,1,['interface'],['interface']
Integrability,"//===--------------------------------------------------------------------===//; // Node creation methods.; /// Create a ConstantSDNode wrapping a constant value.; /// If VT is a vector type, the constant is splatted into a BUILD_VECTOR.; ///; /// If only legal types can be produced, this does the necessary; /// transformations (e.g., if the vector element type is illegal).; /// @{",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/SelectionDAG.h:135,wrap,wrapping,135,interpreter/llvm-project/llvm/include/llvm/CodeGen/SelectionDAG.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/SelectionDAG.h,1,['wrap'],['wrapping']
Integrability,//===--------------------------------------------------------------------===//; // Private Interface; //===--------------------------------------------------------------------===//,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/raw_ostream.h:91,Interface,Interface,91,interpreter/llvm-project/llvm/include/llvm/Support/raw_ostream.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/raw_ostream.h,1,['Interface'],['Interface']
Integrability,//===--------------------------------------------------------------------===//; // Runtime Library hooks; //; /// Rename the default libcall routine name for the specified libcall.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetLowering.h:141,rout,routine,141,interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetLowering.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetLowering.h,1,['rout'],['routine']
Integrability,"//===--------------------------------------------------------------------===//; // Step 2: Check if Loop worth to be optimized.; // Worth-Optimize-Loop:; // case 1: Diff[1] == Diff[0]; // Critical-path is iteration independent - there is no dependency; // of critical-path instructions on critical-path instructions of; // previous iteration.; // Thus, it is enough to check gain percent of 1st iteration -; // To be conservative, the optimized loop need to have a depth of; // 12.5% cycles less than original loop, per iteration.; //; // case 2: Diff[1] > Diff[0]; // Critical-path is iteration dependent - there is dependency of; // critical-path instructions on critical-path instructions of; // previous iteration.; // Thus, check the gain percent of the 2nd iteration (similar to the; // previous case), but it is also required to check the gradient of; // the gain - the change in Depth-Diff compared to the change in; // Loop-Depth between 1st and 2nd iterations.; // To be conservative, the gradient need to be at least 50%.; //; // In addition, In order not to optimize loops with very small gain, the; // gain (in cycles) after 2nd iteration should not be less than a given; // threshold. Thus, the check (Diff[1] >= GainCycleThreshold) must apply.; //; // If loop is not worth optimizing, remove all CMOV-group-candidates.; //===--------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86CmovConversion.cpp:241,depend,dependency,241,interpreter/llvm-project/llvm/lib/Target/X86/X86CmovConversion.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86CmovConversion.cpp,3,['depend'],"['dependency', 'dependent']"
Integrability,//===--------------------------------------------------------------------===//; // Subclass Interface; //===--------------------------------------------------------------------===//,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/raw_ostream.h:92,Interface,Interface,92,interpreter/llvm-project/llvm/include/llvm/Support/raw_ostream.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/raw_ostream.h,1,['Interface'],['Interface']
Integrability,"//===--------------------------------------------------------------------===//; /// ISD::NodeType enum - This enum defines the target-independent operators; /// for a SelectionDAG.; ///; /// Targets may also define target-dependent operator codes for SDNodes. For; /// example, on x86, these are the enum values in the X86ISD namespace.; /// Targets should aim to use target-independent operators to model their; /// instruction sets as much as possible, and only use target-dependent; /// operators when they have special requirements.; ///; /// Finally, during and after selection proper, SNodes may use special; /// operator codes that correspond directly with MachineInstr opcodes. These; /// are used to represent selected instructions. See the isMachineOpcode(); /// and getMachineOpcode() member functions of SDNode.; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/ISDOpcodes.h:222,depend,dependent,222,interpreter/llvm-project/llvm/include/llvm/CodeGen/ISDOpcodes.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/ISDOpcodes.h,2,['depend'],['dependent']
Integrability,"//===--------------------------------------------------------------------===//; /// This interface is used to plug different priorities computation; /// algorithms into the list scheduler. It implements the interface of a; /// standard priority queue, where nodes are inserted in arbitrary order and; /// returned in priority order. The computation of the priority and the; /// representation of the queue are totally up to the implementation to; /// decide.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/ScheduleDAG.h:89,interface,interface,89,interpreter/llvm-project/llvm/include/llvm/CodeGen/ScheduleDAG.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/ScheduleDAG.h,2,['interface'],['interface']
Integrability,//===--------------------------------------------------------------------===//; /// \name Alias Queries; /// @{; /// The main low level interface to the alias analysis implementation.; /// Returns an AliasResult indicating whether the two pointers are aliased to; /// each other. This is the interface that must be implemented by specific; /// alias analysis implementations.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h:136,interface,interface,136,interpreter/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h,4,['interface'],['interface']
Integrability,"//===--------------------------------------------------------------------===//; //; // ImmutableModuleSummaryIndexWrapperPass - This pass wrap provided; // ModuleSummaryIndex object for the module, to be used by other passes.; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/ModuleSummaryAnalysis.h:138,wrap,wrap,138,interpreter/llvm-project/llvm/include/llvm/Analysis/ModuleSummaryAnalysis.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/ModuleSummaryAnalysis.h,1,['wrap'],['wrap']
Integrability,//===--------------------------------------------------------------------===//; //; // createDependenceAnalysisWrapperPass - This creates an instance of the; // DependenceAnalysisWrapper pass.; //,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/Passes.h:161,Depend,DependenceAnalysisWrapper,161,interpreter/llvm-project/llvm/include/llvm/Analysis/Passes.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/Passes.h,1,['Depend'],['DependenceAnalysisWrapper']
Integrability,//===------------------------------------------------------------------===//; // Coarse grained IR lowering routines.; //===------------------------------------------------------------------===//; /// This should be called when a new MachineFunction is being processed from; /// runOnMachineFunction.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/AsmPrinter.h:108,rout,routines,108,interpreter/llvm-project/llvm/include/llvm/CodeGen/AsmPrinter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/AsmPrinter.h,1,['rout'],['routines']
Integrability,"//===------------------------------------------------------------------===//; // CodeView Helper Routines; //===------------------------------------------------------------------===//; /// Gets information required to create a CodeView debug symbol for a jump; /// table.; /// Return value is <Base Address, Base Offset, Branch Address, Entry Size>",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/AsmPrinter.h:97,Rout,Routines,97,interpreter/llvm-project/llvm/include/llvm/CodeGen/AsmPrinter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/AsmPrinter.h,1,['Rout'],['Routines']
Integrability,"//===------------------------------------------------------------------===//; // Dwarf Emission Helper Routines; //===------------------------------------------------------------------===//; /// Emit a .byte 42 directive that corresponds to an encoding. If verbose; /// assembly output is enabled, we output comments describing the encoding.; /// Desc is a string saying what the encoding is specifying (e.g. ""LSDA"").",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/AsmPrinter.h:103,Rout,Routines,103,interpreter/llvm-project/llvm/include/llvm/CodeGen/AsmPrinter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/AsmPrinter.h,1,['Rout'],['Routines']
Integrability,//===------------------------------------------------------------------===//; // Dwarf Lowering Routines; //===------------------------------------------------------------------===//; /// Emit frame instruction to describe the layout of the frame.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/AsmPrinter.h:96,Rout,Routines,96,interpreter/llvm-project/llvm/include/llvm/CodeGen/AsmPrinter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/AsmPrinter.h,1,['Rout'],['Routines']
Integrability,//===------------------------------------------------------------------===//; // Emission Helper Routines.; //===------------------------------------------------------------------===//; /// This is just convenient handler for printing offsets.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/AsmPrinter.h:97,Rout,Routines,97,interpreter/llvm-project/llvm/include/llvm/CodeGen/AsmPrinter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/AsmPrinter.h,1,['Rout'],['Routines']
Integrability,//===------------------------------------------------------------------===//; // Implementation for interface from ConstraintManager.; //===------------------------------------------------------------------===//,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/StaticAnalyzer/Core/PathSensitive/SimpleConstraintManager.h:100,interface,interface,100,interpreter/llvm-project/clang/include/clang/StaticAnalyzer/Core/PathSensitive/SimpleConstraintManager.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/StaticAnalyzer/Core/PathSensitive/SimpleConstraintManager.h,3,['interface'],['interface']
Integrability,//===------------------------------------------------------------------===//; // Implementation for interface from RangedConstraintManager.; //===------------------------------------------------------------------===//,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/RangeConstraintManager.cpp:100,interface,interface,100,interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/RangeConstraintManager.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/RangeConstraintManager.cpp,1,['interface'],['interface']
Integrability,//===------------------------------------------------------------------===//; // Implementation for interface from SimpleConstraintManager.; //===------------------------------------------------------------------===//,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/StaticAnalyzer/Core/PathSensitive/RangedConstraintManager.h:100,interface,interface,100,interpreter/llvm-project/clang/include/clang/StaticAnalyzer/Core/PathSensitive/RangedConstraintManager.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/StaticAnalyzer/Core/PathSensitive/RangedConstraintManager.h,2,['interface'],['interface']
Integrability,"//===------------------------------------------------------------------===//; // Interface that subclasses must implement.; //===------------------------------------------------------------------===//; // Each of these is of the form ""$Sym+Adj <> V"", where ""<>"" is the comparison; // operation for the method being invoked.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/StaticAnalyzer/Core/PathSensitive/RangedConstraintManager.h:81,Interface,Interface,81,interpreter/llvm-project/clang/include/clang/StaticAnalyzer/Core/PathSensitive/RangedConstraintManager.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/StaticAnalyzer/Core/PathSensitive/RangedConstraintManager.h,1,['Interface'],['Interface']
Integrability,"//===------------------------------------------------------------------===//; // Interface that subclasses must implement.; //===------------------------------------------------------------------===//; /// Given a symbolic expression that can be reasoned about, assume that it is; /// true/false and generate the new program state.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/StaticAnalyzer/Core/PathSensitive/SimpleConstraintManager.h:81,Interface,Interface,81,interpreter/llvm-project/clang/include/clang/StaticAnalyzer/Core/PathSensitive/SimpleConstraintManager.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/StaticAnalyzer/Core/PathSensitive/SimpleConstraintManager.h,1,['Interface'],['Interface']
Integrability,//===------------------------------------------------------------------===//; // Symbol Lowering Routines.; //===------------------------------------------------------------------===//,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/AsmPrinter.h:97,Rout,Routines,97,interpreter/llvm-project/llvm/include/llvm/CodeGen/AsmPrinter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/AsmPrinter.h,1,['Rout'],['Routines']
Integrability,//===----------------------------------------------------===//; // Public Interface.; //===----------------------------------------------------===//; /// Return a pointer to the left subtree. This value; /// is NULL if there is no left subtree.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/ImmutableSet.h:74,Interface,Interface,74,interpreter/llvm-project/llvm/include/llvm/ADT/ImmutableSet.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/ImmutableSet.h,1,['Interface'],['Interface']
Integrability,//===--------------------------------------------------===//; // Public interface.; //===--------------------------------------------------===//,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/ImmutableSet.h:72,interface,interface,72,interpreter/llvm-project/llvm/include/llvm/ADT/ImmutableSet.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/ImmutableSet.h,1,['interface'],['interface']
Integrability,"//===-LTO.h - LLVM Link Time Optimizer ------------------------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file declares functions and classes used to support LTO. It is intended; // to be used both by LTO classes as well as by clients (gold-plugin) that; // don't utilize the LTO code generator interfaces.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/LTO/LTO.h:577,interface,interfaces,577,interpreter/llvm-project/llvm/include/llvm/LTO/LTO.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/LTO/LTO.h,1,['interface'],['interfaces']
Integrability,"//===-LTOCodeGenerator.h - LLVM Link Time Optimizer -----------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file declares the LTOCodeGenerator class.; //; // LTO compilation consists of three phases: Pre-IPO, IPO and Post-IPO.; //; // The Pre-IPO phase compiles source code into bitcode file. The resulting; // bitcode files, along with object files and libraries, will be fed to the; // linker to through the IPO and Post-IPO phases. By using obj-file extension,; // the resulting bitcode file disguises itself as an object file, and therefore; // obviates the need of writing a special set of the make-rules only for LTO; // compilation.; //; // The IPO phase perform inter-procedural analyses and optimizations, and; // the Post-IPO consists two sub-phases: intra-procedural scalar optimizations; // (SOPT), and intra-procedural target-dependent code generator (CG).; //; // As of this writing, we don't separate IPO and the Post-IPO SOPT. They; // are intermingled together, and are driven by a single pass manager (see; // PassManagerBuilder::populateLTOPassManager()).; // FIXME: populateLTOPassManager no longer exists.; //; // The ""LTOCodeGenerator"" is the driver for the IPO and Post-IPO stages.; // The ""CodeGenerator"" here is bit confusing. Don't confuse the ""CodeGenerator""; // with the machine specific code generator.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/LTO/legacy/LTOCodeGenerator.h:1119,depend,dependent,1119,interpreter/llvm-project/llvm/include/llvm/LTO/legacy/LTOCodeGenerator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/LTO/legacy/LTOCodeGenerator.h,1,['depend'],['dependent']
Integrability,"//===-ThinLTOCodeGenerator.h - LLVM Link Time Optimizer -------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file declares the ThinLTOCodeGenerator class, similar to the; // LTOCodeGenerator but for the ThinLTO scheme. It provides an interface for; // linker plugin.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/LTO/legacy/ThinLTOCodeGenerator.h:513,interface,interface,513,interpreter/llvm-project/llvm/include/llvm/LTO/legacy/ThinLTOCodeGenerator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/LTO/legacy/ThinLTOCodeGenerator.h,1,['interface'],['interface']
Integrability,"//====- SHA1.cpp - Private copy of the SHA1 implementation ---*- C++ -* ======//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This code is taken from public domain; // (http://oauth.googlecode.com/svn/code/c/liboauth/src/sha1.c and; // http://cvsweb.netbsd.org/bsdweb.cgi/src/common/lib/libc/hash/sha1/sha1.c?rev=1.6); // and modified by wrapping it in a C++ interface for LLVM,; // and removing unnecessary code.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/SHA1.cpp:595,wrap,wrapping,595,interpreter/llvm-project/llvm/lib/Support/SHA1.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/SHA1.cpp,2,"['interface', 'wrap']","['interface', 'wrapping']"
Integrability,"//====- TargetFolder.h - Constant folding helper ---------------*- C++ -*-====//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines the TargetFolder class, a helper for IRBuilder.; // It provides IRBuilder with a set of methods for creating constants with; // target dependent folding, in addition to the same target-independent; // folding that the ConstantFolder class provides. For general constant; // creation and folding, use ConstantExpr and the routines in; // llvm/Analysis/ConstantFolding.h.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/TargetFolder.h:536,depend,dependent,536,interpreter/llvm-project/llvm/include/llvm/Analysis/TargetFolder.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/TargetFolder.h,2,"['depend', 'rout']","['dependent', 'routines']"
Integrability,"//==============================================================================; // VV3D; //==============================================================================; ////////////////////////////////////////////////////////////////////////////////; /// Start building of the scene.; /// Old contents is dropped, unless smart-refresh is in active. Then; /// the object supporting it are kept in a cache and possibly reused.; ///; /// TVirtualViewer3D interface overload - see base/src/TVirtualViewer3D.cxx; /// for description of viewer architecture.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLScenePad.cxx:456,interface,interface,456,graf3d/gl/src/TGLScenePad.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLScenePad.cxx,1,['interface'],['interface']
Integrability,"//@brief: geometric predicates using arbitrary precision arithmetic ; //@note : these are provided primarily for illustrative purposes and adaptive routines should be preferred",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/CDT/predicates.h:148,rout,routines,148,math/mathcore/src/CDT/predicates.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/CDT/predicates.h,1,['rout'],['routines']
Integrability,"//@property (nonatomic, assign) NSPoint fShapeMaskShift;; //1. X11Drawable protocol.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/cocoa/inc/QuartzWindow.h:75,protocol,protocol,75,graf2d/cocoa/inc/QuartzWindow.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/cocoa/inc/QuartzWindow.h,1,['protocol'],['protocol']
Integrability,//@}; /// @name Platform Dependent Data; /// @{,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/RWMutex.h:25,Depend,Dependent,25,interpreter/llvm-project/llvm/include/llvm/Support/RWMutex.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/RWMutex.h,1,['Depend'],['Dependent']
Integrability,"//A user interface button in a group of buttons.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/inc/TGroupButton.h:9,interface,interface,9,graf2d/gpad/inc/TGroupButton.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/inc/TGroupButton.h,1,['interface'],['interface']
Integrability,"//A user interface button.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/inc/TButton.h:9,interface,interface,9,graf2d/gpad/inc/TButton.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/inc/TButton.h,1,['interface'],['interface']
Integrability,"//A user interface slider.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/inc/TSlider.h:9,interface,interface,9,graf2d/gpad/inc/TSlider.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/inc/TSlider.h,1,['interface'],['interface']
Integrability,"//A wrapper class supporting Hbook ntuples (CWN and RWN)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hbook/inc/THbookTree.h:4,wrap,wrapper,4,hist/hbook/inc/THbookTree.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hbook/inc/THbookTree.h,1,['wrap'],['wrapper']
Integrability,"//ABC defining a generic interface to graphics system",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/TVirtualX.h:25,interface,interface,25,core/base/inc/TVirtualX.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/TVirtualX.h,1,['interface'],['interface']
Integrability,"//ABC defining interface to generic interpreter",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TInterpreter.h:15,interface,interface,15,core/meta/inc/TInterpreter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TInterpreter.h,1,['interface'],['interface']
Integrability,"//ABC describing application protocol",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/gui/inc/TApplicationImp.h:29,protocol,protocol,29,core/gui/inc/TApplicationImp.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/inc/TApplicationImp.h,1,['protocol'],['protocol']
Integrability,"//ABC describing browser implementation protocol",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/gui/inc/TBrowserImp.h:40,protocol,protocol,40,core/gui/inc/TBrowserImp.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/inc/TBrowserImp.h,1,['protocol'],['protocol']
Integrability,"//ABC describing main window protocol",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/gui/inc/TCanvasImp.h:29,protocol,protocol,29,core/gui/inc/TCanvasImp.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/inc/TCanvasImp.h,1,['protocol'],['protocol']
Integrability,"//ALWAYS executed on non-iOS platform.; //On iOS, depends on mode.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:50,depend,depends,50,hist/histpainter/src/THistPainter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx,1,['depend'],['depends']
Integrability,"//Abstract Interface describing Streamer information for one class",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TVirtualStreamerInfo.h:11,Interface,Interface,11,core/meta/inc/TVirtualStreamerInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TVirtualStreamerInfo.h,1,['Interface'],['Interface']
Integrability,"//Abstract interface for TPaveStats",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/TVirtualPaveStats.h:11,interface,interface,11,hist/hist/inc/TVirtualPaveStats.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/TVirtualPaveStats.h,1,['interface'],['interface']
Integrability,"//Abstract interface for Tree Index",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/inc/TVirtualIndex.h:11,interface,interface,11,tree/tree/inc/TVirtualIndex.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/inc/TVirtualIndex.h,1,['interface'],['interface']
Integrability,"//Abstract interface for Tree players",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/inc/TVirtualTreePlayer.h:11,interface,interface,11,tree/tree/inc/TVirtualTreePlayer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/inc/TVirtualTreePlayer.h,1,['interface'],['interface']
Integrability,"//Abstract interface for fitting",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/TVirtualFitter.h:11,interface,interface,11,hist/hist/inc/TVirtualFitter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/TVirtualFitter.h,1,['interface'],['interface']
Integrability,"//Abstract interface for graphics pad editor",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/TVirtualPadEditor.h:11,interface,interface,11,core/base/inc/TVirtualPadEditor.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/TVirtualPadEditor.h,1,['interface'],['interface']
Integrability,"//Abstract interface for histogram painters",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/TVirtualGraphPainter.h:11,interface,interface,11,hist/hist/inc/TVirtualGraphPainter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/TVirtualGraphPainter.h,2,['interface'],['interface']
Integrability,"//Abstract interface for painting in TPad",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/webgui6/inc/TWebPadPainter.h:11,interface,interface,11,gui/webgui6/inc/TWebPadPainter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/webgui6/inc/TWebPadPainter.h,1,['interface'],['interface']
Integrability,"//Adjust the center and radius depending on coordinate mode.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLPadPainter.cxx:31,depend,depending,31,graf3d/gl/src/TGLPadPainter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLPadPainter.cxx,1,['depend'],['depending']
Integrability,"//Base class for Unuran distribution wrappers",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/unuran/inc/TUnuranBaseDist.h:37,wrap,wrappers,37,math/unuran/inc/TUnuranBaseDist.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/unuran/inc/TUnuranBaseDist.h,1,['wrap'],['wrappers']
Integrability,"//BuildCXXNew depends on the SLoc to be; //valid!; // TODO: Propose a patch in clang",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLookup.cpp:14,depend,depends,14,interpreter/cling/lib/Interpreter/DynamicLookup.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLookup.cpp,1,['depend'],['depends']
Integrability,"//Collection interface",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TClass.h:13,interface,interface,13,core/meta/inc/TClass.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TClass.h,1,['interface'],['interface']
Integrability,"//Constructor from generic function interfaces",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/unuran/src/TUnuranMultiContDist.cxx:36,interface,interfaces,36,math/unuran/src/TUnuranMultiContDist.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/unuran/src/TUnuranMultiContDist.cxx,1,['interface'],['interfaces']
Integrability,"//Data adapter for TTree.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/inc/TGL5DDataSetEditor.h:7,adapter,adapter,7,graf3d/gl/inc/TGL5DDataSetEditor.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/inc/TGL5DDataSetEditor.h,1,['adapter'],['adapter']
Integrability,"//Default ctor. Default surface is:; //-double buffered; //-RGBA; //-with depth buffer; //-no accumulation buffer; //-with stencil; //-multi-sampling depends on setting of ""OpenGL.Framebuffer.Multisample""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLFormat.cxx:150,depend,depends,150,graf3d/gl/src/TGLFormat.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLFormat.cxx,1,['depend'],['depends']
Integrability,"//Else part - error message was issued already by TGCocoa.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLContextPrivate.cxx:20,message,message,20,graf3d/gl/src/TGLContextPrivate.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLContextPrivate.cxx,1,['message'],['message']
Integrability,"//Enforce/limit what can be a Tuple.; //Actually, at the moment you can only use; //the fill function for TNtuple/TNtupleD; //(enforced by hidden definition and explicit instantiations).; //But in future this can potentially change.; //TODO: there is no line number in any of error messages.; //It can be improved, though, we can have mixed line endings; //so I can not rely on this numbering (for example, my vim shows these lines:; //aaaa\r\r\nbbb as; //aaaa; //bbbb; //Though it can be also treated as; //aaaa; //; //bbb; //or even as; //aaaa; //; //; //bbb - so line numbers can be useless and misleading.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TreeUtils.cxx:282,message,messages,282,tree/tree/src/TreeUtils.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TreeUtils.cxx,1,['message'],['messages']
Integrability,"//Event generator interface abstract baseclass",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/montecarlo/eg/inc/TGenerator.h:18,interface,interface,18,montecarlo/eg/inc/TGenerator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/montecarlo/eg/inc/TGenerator.h,1,['interface'],['interface']
Integrability,"//Event management.; /////////////////////////////; /////////////////////////////; //""Drag and drop"" and ""Copy and paste"" (quotes are intentional :)).; //Names here are total mess, but this comes from TVirtualX interface.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/cocoa/inc/TGCocoa.h:211,interface,interface,211,graf2d/cocoa/inc/TGCocoa.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/cocoa/inc/TGCocoa.h,1,['interface'],['interface']
Integrability,//FIXME: Formulas should store bitwidth to do wrapping properly.; // See PR41034.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopStrengthReduce.cpp:46,wrap,wrapping,46,interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopStrengthReduce.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopStrengthReduce.cpp,1,['wrap'],['wrapping']
Integrability,"//Fit Panel interface",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/fitpanel/inc/TFitEditor.h:12,interface,interface,12,gui/fitpanel/inc/TFitEditor.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/fitpanel/inc/TFitEditor.h,1,['interface'],['interface']
Integrability,"//Get kPROOF_LOGFILE and kPROOF_LOGDONE messages",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofSuperMaster.cxx:40,message,messages,40,proof/proof/src/TProofSuperMaster.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofSuperMaster.cxx,1,['message'],['messages']
Integrability,"//Global pointer to batch graphics interface",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx:35,interface,interface,35,core/base/src/TVirtualX.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx,1,['interface'],['interface']
Integrability,"//INTERNAL; //////////////////////////////////////////////////////////////////////////////////; /// \param[in] filename file location of Keras .h5; /// \return Parsed RModel object; ///; /// The `Parse()` function defined in `TMVA::Experimental::SOFIE::PyKeras` will; /// parse a trained Keras .h5 model into a RModel Object. After loading the model; /// in a Python Session, the included layers are extracted with properties; /// like Layer type, Attributes, Input tensor names, Output tensor names, data-type; /// and names of the weight/initialized tensors.; /// The extracted layers from the model are then passed into `AddKerasLayer()`; /// which prepares the specific ROperator and adds them into the RModel object.; /// The layers are also checked for adding any required routines for executing; /// the generated Inference code.; ///; /// For adding the Initialized tensors into the RModel object, the weights are; /// extracted from the Keras model in the form of NumPy arrays, which are then; /// passed into `AddInitializedTensor()` after appropriate casting.; ///; /// Input tensor infos are required to be added which will contain their names,; /// shapes and data-types. For keras models with single input tensors, the tensor; /// shape is returned as a Tuple object, whereas for multi-input models,; /// the tensor shape is returned as a List of Tuple object containing the shape; /// of the individual input tensors. SOFIE's RModel also requires that the Keras; /// models are initialized with Batch Size. The `GetDataFromTuple()` are called; /// on the Tuple objects, which then returns the shape vector required to call; /// the `AddInputTensorInfo()`.; ///; /// For adding the Output Tensor infos, only the names of the model's output; /// tensors are extracted and are then passed into `AddOutputTensorNameList()`.; ///; /// Provide optionally a batch size that can be used to overwrite the one given by the; /// model. If a batch size is not given 1 is used if the model does not ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/pymva/src/RModelParser_Keras.cxx:779,rout,routines,779,tmva/pymva/src/RModelParser_Keras.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/pymva/src/RModelParser_Keras.cxx,1,['rout'],['routines']
Integrability,"//If an entry does not exist, fallback to the default implementation.; // Kind of shuffle depends on number of loaded values.; // If we load the entire data in one register, we can use a 1-src shuffle.; // Otherwise, we'll merge 2 sources in each operation.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86TargetTransformInfo.cpp:90,depend,depends,90,interpreter/llvm-project/llvm/lib/Target/X86/X86TargetTransformInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86TargetTransformInfo.cpp,1,['depend'],['depends']
Integrability,"//Implementation of Minimizer interface using TFumili",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/fumili/inc/TFumiliMinimizer.h:30,interface,interface,30,math/fumili/inc/TFumiliMinimizer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/fumili/inc/TFumiliMinimizer.h,1,['interface'],['interface']
Integrability,"//Implementation of Minimizer interface using TMinuit",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit/inc/TMinuitMinimizer.h:30,interface,interface,30,math/minuit/inc/TMinuitMinimizer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit/inc/TMinuitMinimizer.h,1,['interface'],['interface']
Integrability,"//Implementation of the Minimizer interface using TLinearFitter",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit/inc/TLinearMinimizer.h:34,interface,interface,34,math/minuit/inc/TLinearMinimizer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit/inc/TLinearMinimizer.h,1,['interface'],['interface']
Integrability,"//Interface for GL manipulator",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/TVirtualGL.h:2,Interface,Interface,2,core/base/inc/TVirtualGL.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/TVirtualGL.h,1,['Interface'],['Interface']
Integrability,"//Interface to TTF font handling",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/graf/inc/TTF.h:2,Interface,Interface,2,graf2d/graf/inc/TTF.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/graf/inc/TTF.h,1,['Interface'],['Interface']
Integrability,"//Interface to Unix OS services",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/unix/inc/TUnixSystem.h:2,Interface,Interface,2,core/unix/inc/TUnixSystem.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/unix/inc/TUnixSystem.h,1,['Interface'],['Interface']
Integrability,"//Interface to Win32",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/inc/TGWin32.h:2,Interface,Interface,2,graf2d/win32gdk/inc/TGWin32.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/inc/TGWin32.h,1,['Interface'],['Interface']
Integrability,"//Interface to X11",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/x11/inc/TGX11.h:2,Interface,Interface,2,graf2d/x11/inc/TGX11.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/x11/inc/TGX11.h,1,['Interface'],['Interface']
Integrability,"//Interface to X11 + TTF font handling",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/x11ttf/inc/TGX11TTF.h:2,Interface,Interface,2,graf2d/x11ttf/inc/TGX11TTF.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/x11ttf/inc/TGX11TTF.h,1,['Interface'],['Interface']
Integrability,"//Interface to dictionary",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TDictionary.h:2,Interface,Interface,2,core/meta/inc/TDictionary.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TDictionary.h,1,['Interface'],['Interface']
Integrability,"//Interface to the X3D viewer",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/x3d/inc/TViewerX3D.h:2,Interface,Interface,2,graf3d/x3d/inc/TViewerX3D.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/x3d/inc/TViewerX3D.h,1,['Interface'],['Interface']
Integrability,"//Iterator wrapper",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/TCollection.h:11,wrap,wrapper,11,core/cont/inc/TCollection.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/TCollection.h,1,['wrap'],['wrapper']
Integrability,"//KDE adapter is a ""data source"" adapter for; //Marching cubes alhorithm. It produces scalar; //values in regular grid's nodes, using TKDEFGT class; //to estimate a density.; //IMPORTANT: This class is not intended for end-user's code,; //it's used and _must_ be used only as an argument while; //instantiating mesh builder's class template.; //That's why all members are protected; //or private - end user cannot create object's of this class.; //But mesh builder, derived from this class,; //knows exactly how to use this class correctly.; //SetDimenions and SetE/GetE are public members, it will be derived by mesh; //builder's instantiation and used inside TGL5DPainter class.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/inc/TKDEAdapter.h:6,adapter,adapter,6,graf3d/gl/inc/TKDEAdapter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/inc/TKDEAdapter.h,2,['adapter'],['adapter']
Integrability,"//Messages received during collect not yet processed",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/inc/TProof.h:2,Message,Messages,2,proof/proof/inc/TProof.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/inc/TProof.h,1,['Message'],['Messages']
Integrability,"//Method calling interface",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TMethodCall.h:17,interface,interface,17,core/meta/inc/TMethodCall.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TMethodCall.h,1,['interface'],['interface']
Integrability,"//Numerical integration poor for narrow peaks",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testRooJohnson.cxx:12,integrat,integration,12,roofit/roofit/test/testRooJohnson.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testRooJohnson.cxx,1,['integrat'],['integration']
Integrability,"//OR with kMESS_ACK to force each; //message to be acknowledged",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/MessageTypes.h:37,message,message,37,core/base/inc/MessageTypes.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/MessageTypes.h,1,['message'],['message']
Integrability,"//OR with kMESS_ZIP to compress message",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/MessageTypes.h:32,message,message,32,core/base/inc/MessageTypes.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/MessageTypes.h,1,['message'],['message']
Integrability,"//PROOF-Lite Server Application Interface",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/inc/TProofServLite.h:32,Interface,Interface,32,proof/proof/inc/TProofServLite.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/inc/TProofServLite.h,1,['Interface'],['Interface']
Integrability,"//Painter interface for pad.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/TVirtualPadPainter.h:10,interface,interface,10,core/base/inc/TVirtualPadPainter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/TVirtualPadPainter.h,1,['interface'],['interface']
Integrability,"//ROOT Interactive Application Interface",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/rint/inc/TRint.h:31,Interface,Interface,31,core/rint/inc/TRint.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/rint/inc/TRint.h,1,['Interface'],['Interface']
Integrability,"//ROOT interface to Hbook/PAW files",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hbook/inc/THbookFile.h:7,interface,interface,7,hist/hbook/inc/THbookFile.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hbook/inc/THbookFile.h,1,['interface'],['interface']
Integrability,"//ROOT's GL uses pixel format (TGLFormat class) when TGLWidget is; //created, after that, pixel format never changed (though I can do; //this with ROOTOpenGLView, there is no interface in ROOT's GL code for this).; //So, pixel format is a property of ROOTOpenGLView. GL-view owns pixel format,; //it can also be reset externally (again, GL module never does this).; //Later, when creating GL-context, this pixel format is used (and; //ROOT creates GL-context per GL-widget, thus using pixel format from a widget.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/cocoa/inc/ROOTOpenGLView.h:175,interface,interface,175,graf2d/cocoa/inc/ROOTOpenGLView.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/cocoa/inc/ROOTOpenGLView.h,1,['interface'],['interface']
Integrability,"//ROOT::Math::Integrator ig(func, 0.001, 0.01, 100 );",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/test/testGSLIntegration.cxx:14,Integrat,Integrator,14,math/mathmore/test/testGSLIntegration.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/test/testGSLIntegration.cxx,1,['Integrat'],['Integrator']
Integrability,"//ROOT::Math::IntegratorOneDimOptions::SetDefaultIntegrator(""Gauss"");",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/stressMathCore.cxx:14,Integrat,IntegratorOneDimOptions,14,test/stressMathCore.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/stressMathCore.cxx,1,['Integrat'],['IntegratorOneDimOptions']
Integrability,"//ROOT::Math::WrappedFunction<FreeFunc> wf(&singularFunction);",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/test/testGSLIntegration.cxx:14,Wrap,WrappedFunction,14,math/mathmore/test/testGSLIntegration.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/test/testGSLIntegration.cxx,1,['Wrap'],['WrappedFunction']
Integrability,"//Remote Application Interface",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/inc/TApplicationRemote.h:21,Interface,Interface,21,net/net/inc/TApplicationRemote.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/inc/TApplicationRemote.h,2,['Interface'],['Interface']
Integrability,"//Represents an Internet Protocol (IP) address",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/TInetAddress.h:25,Protocol,Protocol,25,core/base/inc/TInetAddress.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/TInetAddress.h,1,['Protocol'],['Protocol']
Integrability,"//Show an error message if the key is not found.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TDictAttributeMap.cxx:16,message,message,16,core/meta/src/TDictAttributeMap.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TDictAttributeMap.cxx,1,['message'],['message']
Integrability,"//Skip empty lines, comments and whitespaces before; //the first 'non-ws' symbol:; //it can be a delimiter/a number (depends on a context) or an invalid symbol.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TreeUtils.cxx:117,depend,depends,117,tree/tree/src/TreeUtils.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TreeUtils.cxx,1,['depend'],['depends']
Integrability,"//Stmt; // Expr; // DependenceKind, ValueKind, ObjectKind",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Serialization/ASTWriterDecl.cpp:20,Depend,DependenceKind,20,interpreter/llvm-project/clang/lib/Serialization/ASTWriterDecl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Serialization/ASTWriterDecl.cpp,2,['Depend'],['DependenceKind']
Integrability,"//TProcessID object follows; //---- PROOF message opcodes (1000 - 1999)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/MessageTypes.h:42,message,message,42,core/base/inc/MessageTypes.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/MessageTypes.h,1,['message'],['message']
Integrability,"//TRUE if log messages should be send back in real-time",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/inc/TApplicationServer.h:14,message,messages,14,net/net/inc/TApplicationServer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/inc/TApplicationServer.h,1,['message'],['messages']
Integrability,"//TVirtualX final overriders.; //I split them in a group not to get lost in this fat interface.; ///////////////////////////////////////; //General.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/cocoa/inc/TGCocoa.h:85,interface,interface,85,graf2d/cocoa/inc/TGCocoa.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/cocoa/inc/TGCocoa.h,1,['interface'],['interface']
Integrability,"//The next statement is ALWAYS executed on non-iOS platform, on iOS it depends on pad's mode; //and picked object.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:71,depend,depends,71,hist/histpainter/src/THistPainter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx,1,['depend'],['depends']
Integrability,"//The next statement is always executed on non-iOS platform,; //on iOS depends on pad mode.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:71,depend,depends,71,hist/histpainter/src/THistPainter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx,1,['depend'],['depends']
Integrability,"//This function automatically creates the ""LinkDef.h"" file for templated; //classes then executes CompileMacro on it.; //The name of the file depends on the class name, and it's not generated again; //if the file exist.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:142,depend,depends,142,core/metacling/src/TCling.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx,2,['depend'],['depends']
Integrability,"//This part is an interface to X11 pixmap management and to save sub-pads off-screens for OpenGL.; //Currently, must be implemented only for X11/GDI",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/TVirtualPadPainter.h:18,interface,interface,18,core/base/inc/TVirtualPadPainter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/TVirtualPadPainter.h,1,['interface'],['interface']
Integrability,"//To suppress error messages from TGaxis",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLUtil.cxx:20,message,messages,20,graf3d/gl/src/TGLUtil.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLUtil.cxx,2,['message'],['messages']
Integrability,"//Using declarations required, since these are; //type-dependant names in template.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/inc/TGLMarchingCubes.h:55,depend,dependant,55,graf3d/gl/inc/TGLMarchingCubes.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/inc/TGLMarchingCubes.h,1,['depend'],['dependant']
Integrability,"//Wrapper around this class custom Streamer member function.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TClass.h:2,Wrap,Wrapper,2,core/meta/inc/TClass.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TClass.h,1,['Wrap'],['Wrapper']
Integrability,"//Wrapper around this class custom conversion Streamer member function.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TClass.h:2,Wrap,Wrapper,2,core/meta/inc/TClass.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TClass.h,1,['Wrap'],['Wrapper']
Integrability,"//Wrapper class for empirical distribution",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/unuran/inc/TUnuranEmpDist.h:2,Wrap,Wrapper,2,math/unuran/inc/TUnuranEmpDist.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/unuran/inc/TUnuranEmpDist.h,1,['Wrap'],['Wrapper']
Integrability,"//Wrapper class for multi dimensional continuous distribution",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/unuran/inc/TUnuranMultiContDist.h:2,Wrap,Wrapper,2,math/unuran/inc/TUnuranMultiContDist.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/unuran/inc/TUnuranMultiContDist.h,1,['Wrap'],['Wrapper']
Integrability,"//Wrapper class for one dimensional continuous distribution",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/unuran/inc/TUnuranContDist.h:2,Wrap,Wrapper,2,math/unuran/inc/TUnuranContDist.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/unuran/inc/TUnuranContDist.h,1,['Wrap'],['Wrapper']
Integrability,"//Wrapper class for one dimensional discrete distribution",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/unuran/inc/TUnuranDiscrDist.h:2,Wrap,Wrapper,2,math/unuran/inc/TUnuranDiscrDist.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/unuran/inc/TUnuranDiscrDist.h,1,['Wrap'],['Wrapper']
Integrability,"//X11Window protocol.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/cocoa/inc/ROOTOpenGLView.h:12,protocol,protocol,12,graf2d/cocoa/inc/ROOTOpenGLView.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/cocoa/inc/ROOTOpenGLView.h,1,['protocol'],['protocol']
Integrability,"//___________________________________________________________; //; // Adapt the interface used in TMinuit (and the TVirtualFitter) for; // passing the objective function in a IFunction interface; // (ROOT::Math::IMultiGenFunction); //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/FcnAdapter.h:80,interface,interface,80,math/mathcore/inc/Fit/FcnAdapter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/FcnAdapter.h,2,['interface'],['interface']
Integrability,"//__________________________________________________________________; // Posterior Function class; // 1-Dim function as function of the poi; // and it integrated all the nuisance parameters",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/BayesianCalculator.cxx:151,integrat,integrated,151,roofit/roostats/src/BayesianCalculator.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/BayesianCalculator.cxx,1,['integrat'],['integrated']
Integrability,//___________________________________________________________________; /**; Abstract class for all numerical integration methods (1D and multi-dim); Interface defining the common methods for the; numerical integrator classes of one and multi dimensions; The derived class VirtualIntegratorOneDim defines the methods; for one-dimensional integration.; The derived class VirtualIntegratorMultiDim defines the method for; multi-dimensional integration.; The concrete classes for one dimension (e.g. GSLIntegrator) or; multi-dimension (e.g. GSLMCIntegrator) can be created using the; plug-in manager.; Users should not use directly this class but the concrete classes ROOT::Math::IntegratorOneDim or; ROOT::Math::IntegratorMultiDim. @ingroup Integration. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/VirtualIntegrator.h:109,integrat,integration,109,math/mathcore/inc/Math/VirtualIntegrator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/VirtualIntegrator.h,8,"['Integrat', 'Interface', 'integrat']","['Integration', 'IntegratorMultiDim', 'IntegratorOneDim', 'Interface', 'integration', 'integrator']"
Integrability,"//___________________________________________________________________; /**; Documentation for the abstract class IBaseParam.; It defines the interface for dealing with the function parameters; This is used only for internal convenience, to avoid redefining the Parameter API; for the one and the multi-dim functions.; Concrete class should derive from ROOT::Math::IParamFunction and not from this class. @ingroup ParamFunc; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/IParamFunction.h:141,interface,interface,141,math/mathcore/inc/Math/IParamFunction.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/IParamFunction.h,1,['interface'],['interface']
Integrability,//___________________________________________________________________; /**; IParamFunction interface (abstract class) describing multi-dimensional parametric functions; It is a derived class from ROOT::Math::IBaseFunctionMultiDim and; ROOT::Math::IBaseParam. Provides the interface for evaluating a function passing a coordinate vector and a parameter vector. @ingroup ParamFunc; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/IParamFunction.h:91,interface,interface,91,math/mathcore/inc/Math/IParamFunction.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/IParamFunction.h,2,['interface'],['interface']
Integrability,//___________________________________________________________________; /**; Interface (abstract) class for 1D numerical integration; It must be implemented by the concrete Integrator classes like; ROOT::Math::GSLIntegrator.; Plug-in's exist in ROOT to be able to instantiate the derived classes via the; plug-in manager.; Users should not use directly this class but the concrete classes ROOT::Math::IntegratorOneDim. @ingroup Integration. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/VirtualIntegrator.h:76,Interface,Interface,76,math/mathcore/inc/Math/VirtualIntegrator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/VirtualIntegrator.h,5,"['Integrat', 'Interface', 'integrat']","['Integration', 'Integrator', 'IntegratorOneDim', 'Interface', 'integration']"
Integrability,//___________________________________________________________________; /**; Interface (abstract) class for multi numerical integration; It must be implemented by the concrete Integrator classes like; ROOT::Math::GSLMCIntegrator.; Plug-in's exist in ROOT to be able to instantiate the derived classes via the; plug-in manager.; Users should not use directly this class but the concrete classes ROOT::Math::IntegratorMultiDim. @ingroup Integration. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/VirtualIntegrator.h:76,Interface,Interface,76,math/mathcore/inc/Math/VirtualIntegrator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/VirtualIntegrator.h,5,"['Integrat', 'Interface', 'integrat']","['Integration', 'Integrator', 'IntegratorMultiDim', 'Interface', 'integration']"
Integrability,//___________________________________________________________________; /**; Specialized IParamFunction interface (abstract class) for one-dimensional parametric functions; It is a derived class from ROOT::Math::IBaseFunctionOneDim and; ROOT::Math::IBaseParam. @ingroup ParamFunc; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/IParamFunction.h:103,interface,interface,103,math/mathcore/inc/Math/IParamFunction.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/IParamFunction.h,1,['interface'],['interface']
Integrability,"//________________________________________________________________________; //////////////////////////////////////////////////////////////////////////; //; // TStructViewerGUI is main window of TStructViewer. It provides graphical; // interface. In the window we can find panel with tabs and frame with; // GLViewer. Tab ""Info"" serves information about node and is used to naviagate; // backward and forward. Second tab ""Options"" is used to set few options; // such as links visibility, scaling method or setting a pointer.; // Last tab ""Editor"" is tab when the TStructNodeEditor is placed.; //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gviz3d/src/TStructViewerGUI.cxx:235,interface,interface,235,graf3d/gviz3d/src/TStructViewerGUI.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gviz3d/src/TStructViewerGUI.cxx,1,['interface'],['interface']
Integrability,"//_________________________________________________________________________; /**. Class for performing numerical integration of a function in one dimension.; It uses the numerical integration algorithms of GSL, which reimplements the; algorithms used in the QUADPACK, a numerical integration package written in Fortran. Various types of adaptive and non-adaptive integration are supported. These include; integration over infinite and semi-infinite ranges and singular integrals. The integration type is selected using the Integration::type enumeration; in the class constructor.; The default type is adaptive integration with singularity; (ADAPTIVESINGULAR or QAGS in the QUADPACK convention) applying a Gauss-Kronrod 21-point integration rule.; In the case of ADAPTIVE type, the integration rule can also be specified via the; Integration::GKRule. The default rule is 31 points. In the case of integration over infinite and semi-infinite ranges, the type used is always; ADAPTIVESINGULAR applying a transformation from the original interval into (0,1). The ADAPTIVESINGULAR type is the most sophicticated type. When performances are; important, it is then recommended to use the NONADAPTIVE type in case of smooth functions or; ADAPTIVE with a lower Gauss-Kronrod rule. For detailed description on GSL integration algorithms see the; <A HREF=""http://www.gnu.org/software/gsl/manual/html_node/Numerical-Integration.html"">GSL Manual</A>. @ingroup Integration; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/GSLIntegrator.h:113,integrat,integration,113,math/mathmore/inc/Math/GSLIntegrator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/GSLIntegrator.h,15,"['Integrat', 'integrat']","['Integration', 'integration']"
Integrability,"//__________________________________________________________________________; //; // A library's documentation database:; // dependencies and sub-modules; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/html/inc/TDocInfo.h:125,depend,dependencies,125,html/inc/TDocInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/inc/TDocInfo.h,1,['depend'],['dependencies']
Integrability,//___________________________________________________________________________; /**; Factory class holding static functions to create the interfaces like ROOT::Math::Minimizer; via the Plugin Manager; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Factory.h:137,interface,interfaces,137,math/mathcore/inc/Math/Factory.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Factory.h,1,['interface'],['interfaces']
Integrability,"//___________________________________________________________________________; /**; application interface class for minimizers (migrad, simplex, Minimize,; Scan); User normally instantiates the derived class like ROOT::Minuit2::MnMigrad; for using Migrad for minimization; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/inc/Minuit2/MnApplication.h:96,interface,interface,96,math/minuit2/inc/Minuit2/MnApplication.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/inc/Minuit2/MnApplication.h,1,['interface'],['interface']
Integrability,"//____________________________________________________________________________; /**; Base class describing a Vavilov distribution. The Vavilov distribution is defined in; P.V. Vavilov: Ionization losses of high-energy heavy particles,; Sov. Phys. JETP 5 (1957) 749 [Zh. Eksp. Teor. Fiz. 32 (1957) 920]. The probability density function of the Vavilov distribution; as function of Landau's parameter is given by:; \f[ p(\lambda_L; \kappa, \beta^2) =; \frac{1}{2 \pi i}\int_{c-i\infty}^{c+i\infty} \phi(s) e^{\lambda_L s} ds\f]; where \f$\phi(s) = e^{C} e^{\psi(s)}\f$; with \f$ C = \kappa (1+\beta^2 \gamma )\f$; and \f$\psi(s)= s \ln \kappa + (s+\beta^2 \kappa); \cdot \left ( \int \limits_{0}^{1}; \frac{1 - e^{\frac{-st}{\kappa}}}{t} \,d t- \gamma \right ); - \kappa \, e^{\frac{-s}{\kappa}}\f$.; \f$ \gamma = 0.5772156649\dots\f$ is Euler's constant. For the class Vavilov,; Pdf returns the Vavilov distribution as function of Landau's parameter; \f$\lambda_L = \lambda_V/\kappa - \ln \kappa\f$,; which is the convention used in the CERNLIB routines, and in the tables; by S.M. Seltzer and M.J. Berger: Energy loss stragglin of protons and mesons:; Tabulation of the Vavilov distribution, pp 187-203; in: National Research Council (U.S.), Committee on Nuclear Science:; Studies in penetration of charged particles in matter,; Nat. Akad. Sci. Publication 1133,; Nucl. Sci. Series Report No. 39,; Washington (Nat. Akad. Sci.) 1964, 388 pp.; Available from; <A HREF=""http://books.google.de/books?id=kmMrAAAAYAAJ&lpg=PP9&pg=PA187#v=onepage&q&f=false"">Google books</A>. Therefore, for small values of \f$\kappa < 0.01\f$,; pdf approaches the Landau distribution. For values \f$\kappa > 10\f$, the Gauss approximation should be used; with \f$\mu\f$ and \f$\sigma\f$ given by Vavilov::Mean(kappa, beta2); and sqrt(Vavilov::Variance(kappa, beta2). The original Vavilov pdf is obtained by; v.Pdf(lambdaV/kappa-log(kappa))/kappa. Two subclasses are provided:; - VavilovFast uses the algorithm by; A. Rotondi ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/Vavilov.h:1044,rout,routines,1044,math/mathmore/inc/Math/Vavilov.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/Vavilov.h,1,['rout'],['routines']
Integrability,"//____________________________________________________________________________; /**; Class describing a Vavilov distribution. The probability density function of the Vavilov distribution; as function of Landau's parameter is given by:; \f[ p(\lambda_L; \kappa, \beta^2) =; \frac{1}{2 \pi i}\int_{c-i\infty}^{c+i\infty} \phi(s) e^{\lambda_L s} ds\f]; where \f$\phi(s) = e^{C} e^{\psi(s)}\f$; with \f$ C = \kappa (1+\beta^2 \gamma )\f$; and \f$\psi(s)= s \ln \kappa + (s+\beta^2 \kappa); \cdot \left ( \int \limits_{0}^{1}; \frac{1 - e^{\frac{-st}{\kappa}}}{t} \,d t- \gamma \right ); - \kappa \, e^{\frac{-s}{\kappa}}\f$.; \f$ \gamma = 0.5772156649\dots\f$ is Euler's constant. For the class VavilovAccurate,; Pdf returns the Vavilov distribution as function of Landau's parameter; \f$\lambda_L = \lambda_V/\kappa - \ln \kappa\f$,; which is the convention used in the CERNLIB routines, and in the tables; by S.M. Seltzer and M.J. Berger: Energy loss stragglin of protons and mesons:; Tabulation of the Vavilov distribution, pp 187-203; in: National Research Council (U.S.), Committee on Nuclear Science:; Studies in penetration of charged particles in matter,; Nat. Akad. Sci. Publication 1133,; Nucl. Sci. Series Report No. 39,; Washington (Nat. Akad. Sci.) 1964, 388 pp.; Available from; <A HREF=""http://books.google.de/books?id=kmMrAAAAYAAJ&lpg=PP9&pg=PA187#v=onepage&q&f=false"">Google books</A>. Therefore, for small values of \f$\kappa < 0.01\f$,; pdf approaches the Landau distribution. For values \f$\kappa > 10\f$, the Gauss approximation should be used; with \f$\mu\f$ and \f$\sigma\f$ given by Vavilov::mean(kappa, beta2); and sqrt(Vavilov::variance(kappa, beta2). The original Vavilov pdf is obtained by; v.Pdf(lambdaV/kappa-log(kappa))/kappa. For detailed description see; B. Schorr, Programs for the Landau and the Vavilov distributions and the corresponding random numbers,; <A HREF=""http://dx.doi.org/10.1016/0010-4655(74)90091-5"">Computer Phys. Comm. 7 (1974) 215-224</A>,; which has be",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/VavilovAccurate.h:875,rout,routines,875,math/mathmore/inc/Math/VavilovAccurate.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/VavilovAccurate.h,1,['rout'],['routines']
Integrability,"//____________________________________________________________________________; /**; Class describing a Vavilov distribution. The probability density function of the Vavilov distribution; as function of Landau's parameter is given by:; \f[ p(\lambda_L; \kappa, \beta^2) =; \frac{1}{2 \pi i}\int_{c-i\infty}^{c+i\infty} \phi(s) e^{\lambda_L s} ds\f]; where \f$\phi(s) = e^{C} e^{\psi(s)}\f$; with \f$ C = \kappa (1+\beta^2 \gamma )\f$; and \f$\psi(s)= s \ln \kappa + (s+\beta^2 \kappa); \cdot \left ( \int \limits_{0}^{1}; \frac{1 - e^{\frac{-st}{\kappa}}}{t} \,d t- \gamma \right ); - \kappa \, e^{\frac{-s}{\kappa}}\f$.; \f$ \gamma = 0.5772156649\dots\f$ is Euler's constant. For the class VavilovFast,; Pdf returns the Vavilov distribution as function of Landau's parameter; \f$\lambda_L = \lambda_V/\kappa - \ln \kappa\f$,; which is the convention used in the CERNLIB routines, and in the tables; by S.M. Seltzer and M.J. Berger: Energy loss stragglin of protons and mesons:; Tabulation of the Vavilov distribution, pp 187-203; in: National Research Council (U.S.), Committee on Nuclear Science:; Studies in penetration of charged particles in matter,; Nat. Akad. Sci. Publication 1133,; Nucl. Sci. Series Report No. 39,; Washington (Nat. Akad. Sci.) 1964, 388 pp.; Available from; <A HREF=""http://books.google.de/books?id=kmMrAAAAYAAJ&lpg=PP9&pg=PA187#v=onepage&q&f=false"">Google books</A>. Therefore, for small values of \f$\kappa < 0.01\f$,; pdf approaches the Landau distribution. For values \f$\kappa > 10\f$, the Gauss approximation should be used; with \f$\mu\f$ and \f$\sigma\f$ given by Vavilov::mean(kappa, beta2); and sqrt(Vavilov::variance(kappa, beta2). For values \f$\kappa > 10\f$, the Gauss approximation should be used; with \f$\mu\f$ and \f$\sigma\f$ given by Vavilov::mean(kappa, beta2); and sqrt(Vavilov::variance(kappa, beta2). The original Vavilov pdf is obtained by; v.Pdf(lambdaV/kappa-log(kappa))/kappa. For detailed description see; A. Rotondi and P. Montagna, Fast calcul",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/VavilovFast.h:871,rout,routines,871,math/mathmore/inc/Math/VavilovFast.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/VavilovFast.h,1,['rout'],['routines']
Integrability,"//____________________________________________________________________________; //; // Activation Functions; //____________________________________________________________________________; /** @name Activation Functions; * For each activation function, the low-level interface contains two routines.; * One that applies the activation function to a matrix and one that evaluate; * the derivatives of the activation function at the elements of a given matrix; * and writes the results into the result matrix.; */; ///@{",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/Architectures/TCudnn.h:267,interface,interface,267,tmva/tmva/inc/TMVA/DNN/Architectures/TCudnn.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/Architectures/TCudnn.h,2,"['interface', 'rout']","['interface', 'routines']"
Integrability,//____________________________________________________________________________; //; // Cuda Device Reference; //____________________________________________________________________________; /** TCudaDeviceReference; *; * Helper class emulating lvalue references for AFloat values that are; * physically on the device. Allows for example to assign to matrix elements.; * Note that device access through CudaDeviceReferences enforces synchronization; * with all streams and thus qualifies as performance killer. Only used for; * testing.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/Architectures/Cuda/CudaMatrix.h:432,synchroniz,synchronization,432,tmva/tmva/inc/TMVA/DNN/Architectures/Cuda/CudaMatrix.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/Architectures/Cuda/CudaMatrix.h,1,['synchroniz'],['synchronization']
Integrability,"//____________________________________________________________________________; //; // Cuda Matrix; //____________________________________________________________________________; /** TCudaMatrix Class; *; * The TCudaMatrix class represents matrices on a CUDA device. The elements; * of the matrix are stored in a TCudaDeviceBuffer object which takes care of; * the allocation and freeing of the device memory. TCudaMatrices are lightweight; * object, that means on assignment and copy creation only a shallow copy is; * performed and no new element buffer allocated. To perform a deep copy use; * the static Copy method of the TCuda architecture class.; *; * The TCudaDeviceBuffer has an associated cuda stream, on which the data is; * transferred to the device. This stream can be accessed through the; * GetComputeStream member function and used to synchronize computations.; *; * The TCudaMatrix class also holds static references to CUDA resources.; * Those are the cublas handle, a buffer of curand states for the generation; * of random numbers as well as a vector containing ones, which is used for; * summing column matrices using matrix-vector multiplication. The class also; * has a static buffer for returning results from the device.; *; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/Architectures/Cuda/CudaMatrix.h:852,synchroniz,synchronize,852,tmva/tmva/inc/TMVA/DNN/Architectures/Cuda/CudaMatrix.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/Architectures/Cuda/CudaMatrix.h,1,['synchroniz'],['synchronize']
Integrability,//_____________________________________________________________________________; /**; GSLSimAnFunc class description.; Interface class for the objetive function to be used in simulated annealing; If user wants to re-implement some of the methods (like the one defining the metric) which are used by the; the simulated annealing algorithm must build a user derived class.; NOTE: Derived classes must re-implement the assignment and copy constructor to call them of the parent class. @ingroup MultiMin; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/GSLSimAnnealing.h:119,Interface,Interface,119,math/mathmore/inc/Math/GSLSimAnnealing.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/GSLSimAnnealing.h,1,['Interface'],['Interface']
Integrability,"//______________________________________________________________________________; /** \class THnSparseT; Templated implementation of the abstract base THnSparse.; All functionality and the interfaces to be used are in THnSparse!. THnSparse does not know how to store any bin content itself. Instead, this; is delegated to the derived, templated class: the template parameter decides; what the format for the bin content is. In fact it even defines the array; itself; possible implementations probably derive from TArray. Typedefs exist for template parameters with ROOT's generic types:. Templated name | Typedef | Bin content type; ----------------------|---------------|--------------------; THnSparseT<TArrayC> | THnSparseC | Char_t; THnSparseT<TArrayS> | THnSparseS | Short_t; THnSparseT<TArrayI> | THnSparseI | Int_t; THnSparseT<TArrayL64> | THnSparseL | Long64_t; THnSparseT<TArrayF> | THnSparseF | Float_t; THnSparseT<TArrayD> | THnSparseD | Double_t. We recommend to use THnSparseC wherever possible, and to map its value space; of 256 possible values to e.g. float values outside the class. This saves an; enormous amount of memory. Only if more than 256 values need to be; distinguished should e.g. THnSparseS or even THnSparseF be chosen. Implementation detail: the derived, templated class is kept extremely small; on purpose. That way the (templated thus inlined) uses of this class will; only create a small amount of machine code, in contrast to e.g. STL.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/THnSparse.h:189,interface,interfaces,189,hist/hist/inc/THnSparse.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/THnSparse.h,1,['interface'],['interfaces']
Integrability,"//______________________________________________________________________________; /** \class THnT; Templated implementation of the abstract base THn.; All functionality and the interfaces to be used are in THn!. THn does not know how to store any bin content itself. Instead, this; is delegated to the derived, templated class: the template parameter decides; what the format for the bin content is. The actual storage is delegated to; TNDArrayT<T>. Typedefs exist for template parameters with ROOT's generic types:. Templated name | Typedef | Bin content type; -----------------|---------------|--------------------; THnT<Char_t> | THnC | Char_t; THnT<Short_t> | THnS | Short_t; THnT<Int_t> | THnI | Int_t; THnT<Long64_t> | THnL | Long64_t; THnT<Float_t> | THnF | Float_t; THnT<Double_t> | THnD | Double_t. We recommend to use THnC wherever possible, and to map its value space; of 256 possible values to e.g. float values outside the class. This saves an; enormous amount of memory. Only if more than 256 values need to be; distinguished should e.g. THnS or even THnF be chosen. Implementation detail: the derived, templated class is kept extremely small; on purpose. That way the (templated thus inlined) uses of this class will; only create a small amount of machine code, in contrast to e.g. STL.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/THn.h:177,interface,interfaces,177,hist/hist/inc/THn.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/THn.h,1,['interface'],['interfaces']
Integrability,"//______________________________________________________________________________; /**. Interface (abstract class) defining the function to be minimized, which has to be implemented by the user. @author Fred James and Matthias Winkler; modified by Andras Zsenei and Lorenzo Moneta. \ingroup Minuit. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/inc/Minuit2/FCNBase.h:87,Interface,Interface,87,math/minuit2/inc/Minuit2/FCNBase.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/inc/Minuit2/FCNBase.h,1,['Interface'],['Interface']
Integrability,"//______________________________________________________________________________; // Generic wrapper for arguments; // =============================; //; // Transport class for bringing C++ values and objects from Cling to Python. It; // provides, from the selected constructor, the proper conversion to a PyObject.; // In principle, there should be no need to use this class directly: it relies; // on implicit conversions.; //- constructor dispatcher ---------------------------------------------------",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/TPyArg.cxx:93,wrap,wrapper,93,bindings/pyroot/cppyy/CPyCppyy/src/TPyArg.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/TPyArg.cxx,1,['wrap'],['wrapper']
Integrability,"//______________________________________________________________________________; // Generic wrapper for arguments; // =============================; //; // Transport class for bringing C++ values and objects from Cling to Python. It; // provides, from the selected constructor, the proper conversion to a PyObject.; // In principle, there should be no need to use this class directly: it relies; // on implicit conversions.; //- data ---------------------------------------------------------------------",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/tpython/src/TPyArg.cxx:93,wrap,wrapper,93,bindings/tpython/src/TPyArg.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/tpython/src/TPyArg.cxx,1,['wrap'],['wrapper']
Integrability,"//______________________________________________________________________________; // Inclusive minimum error level a message needs to get handled",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/clingutils/res/TClingUtils.h:117,message,message,117,core/clingutils/res/TClingUtils.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clingutils/res/TClingUtils.h,1,['message'],['message']
Integrability,"//______________________________________________________________________________; // Return the type normalized for ROOT,; // keeping only the ROOT opaque typedef (Double32_t, etc.) and; // adding default template argument for all types except those explicitly; // requested to be drop by the user.; // Default template for STL collections are not yet removed by this routine.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/clingutils/res/TClingUtils.h:368,rout,routine,368,core/clingutils/res/TClingUtils.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clingutils/res/TClingUtils.h,1,['rout'],['routine']
Integrability,"//______________________________________________________________________________; // Use this function for informational messages.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/clingutils/res/TClingUtils.h:121,message,messages,121,core/clingutils/res/TClingUtils.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clingutils/res/TClingUtils.h,1,['message'],['messages']
Integrability,"//______________________________________________________________________________; // some useful static utility functions to compute sampling points for IntegralFast; ////////////////////////////////////////////////////////////////////////////////; /// Type safe interface (static method); /// The number of sampling points are taken from the TGraph",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TF1.cxx:263,interface,interface,263,hist/hist/src/TF1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TF1.cxx,1,['interface'],['interface']
Integrability,"//______________________________________________________________________________; //---- error handling ----------------------------------------------------------; //---- Needed to avoid blocking on the CINT mutex in printouts -----------------; ////////////////////////////////////////////////////////////////////////////////; /// Interface to ErrorHandler (protected).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TSlaveLite.cxx:332,Interface,Interface,332,proof/proof/src/TSlaveLite.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TSlaveLite.cxx,1,['Interface'],['Interface']
Integrability,"//______________________________________________________________________________; ///////////////////////////////////////////////////////////////////////////////; // //; // TStreamerArtificial implements StreamerElement injected by a TSchemaRule. //; // //; ///////////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TStreamerElement.cxx:220,inject,injected,220,core/meta/src/TStreamerElement.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TStreamerElement.cxx,1,['inject'],['injected']
Integrability,"//______________________________________________________________________________; //; // BaseClassInfo interface; //; ////////////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:103,interface,interface,103,core/metacling/src/TCling.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx,1,['interface'],['interface']
Integrability,"//______________________________________________________________________________; //; // CallFunc interface; //; ////////////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:98,interface,interface,98,core/metacling/src/TCling.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx,1,['interface'],['interface']
Integrability,"//______________________________________________________________________________; //; // ClassInfo interface; //; ////////////////////////////////////////////////////////////////////////////////; /// Return true if the entity pointed to by 'declid' is declared in; /// the context described by 'info'. If info is null, look into the; /// global scope (translation unit scope).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:99,interface,interface,99,core/metacling/src/TCling.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx,1,['interface'],['interface']
Integrability,"//______________________________________________________________________________; //; // DataMemberInfo interface; //; ////////////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:104,interface,interface,104,core/metacling/src/TCling.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx,1,['interface'],['interface']
Integrability,"//______________________________________________________________________________; //; // Function Template interface; //; ////////////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:107,interface,interface,107,core/metacling/src/TCling.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx,1,['interface'],['interface']
Integrability,"//______________________________________________________________________________; //; // MethodArgInfo interface; //; ////////////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:103,interface,interface,103,core/metacling/src/TCling.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx,1,['interface'],['interface']
Integrability,"//______________________________________________________________________________; //; // MethodInfo interface; //; ////////////////////////////////////////////////////////////////////////////////; /// Interface to cling function",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:100,interface,interface,100,core/metacling/src/TCling.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx,2,"['Interface', 'interface']","['Interface', 'interface']"
Integrability,"//______________________________________________________________________________; //; // TFumiliMinimizer class implementing the ROOT::Math::Minimizer interface using; // TFumili.; // This class is normally instantiates using the plug-in manager; // (plug-in with name Fumili or TFumili); // In addition the user can choose the minimizer algorithm: Migrad (the default one), Simplex, or Minimize (combined Migrad + Simplex); //; //__________________________________________________________________________________________; // initialize the static instances",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/fumili/src/TFumiliMinimizer.cxx:151,interface,interface,151,math/fumili/src/TFumiliMinimizer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/fumili/src/TFumiliMinimizer.cxx,1,['interface'],['interface']
Integrability,"//______________________________________________________________________________; //; // THtml generated documentation is written to file by TDocOutput. So far only; // output of HTML is implemented. Customization of the output should be done; // with THtml's interfaces - TDocOutput should not be used nor re-implemented; // directly.; //; // TDocOutput generates the index tables:; // * classes (THtml invokes TClassDocOutput for each),; // * inheritance hierarchy,; // * types and typedefs,; // * libraries,; // * the product index, and; // * the module index (including the links to per-module documentation).; // It invokes AT&T's GraphViz tool (dot) if available; charts benefit a lot; // from it.; //; // TDocOutput also writes all pages' header and footer, which can be customized; // by calling THtml::SetHeader(), THtml::SetFooter().; //______________________________________________________________________________",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/html/src/TDocOutput.cxx:260,interface,interfaces,260,html/src/TDocOutput.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/TDocOutput.cxx,1,['interface'],['interfaces']
Integrability,"//______________________________________________________________________________; //; // TypeInfo interface; //; ////////////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:98,interface,interface,98,core/metacling/src/TCling.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx,1,['interface'],['interface']
Integrability,"//______________________________________________________________________________; //; // TypedefInfo interface; //; ////////////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:101,interface,interface,101,core/metacling/src/TCling.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx,1,['interface'],['interface']
Integrability,"//______________________________________________________________________________; //; // Write the documentation for a class or namespace. The documentation is; // parsed by TDocParser and then passed to TClassDocOutput to generate; // the class doc header, the class description, members overview, and method; // documentation. All generic output functionality is in TDocOutput; it is; // re-used in this derived class.; //; // You usually do not use this class yourself; it is invoked indirectly by; // THtml. Customization of the output should happen via the interfaces defined; // by THtml.; //______________________________________________________________________________",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/html/src/TClassDocOutput.cxx:562,interface,interfaces,562,html/src/TClassDocOutput.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/TClassDocOutput.cxx,1,['interface'],['interfaces']
Integrability,"//______________________________________________________________________________; //; //; //; // It is a ""fantom"" method to synchronize user keyboard input; // and ROOT prompt line (for WIN32)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:124,synchroniz,synchronize,124,core/metacling/src/TCling.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx,1,['synchroniz'],['synchronize']
Integrability,//_______________________________________________________________________________; /**; Base class for Numerical integration options; common in 1D and multi-dimension; This is an internal class and is not supposed to be instantiated by the user. @ingroup Integration; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/IntegratorOptions.h:113,integrat,integration,113,math/mathcore/inc/Math/IntegratorOptions.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/IntegratorOptions.h,2,"['Integrat', 'integrat']","['Integration', 'integration']"
Integrability,//_______________________________________________________________________________; /**; Generic interface for defining configuration options of a numerical algorithm. @ingroup NumAlgo; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/IOptions.h:96,interface,interface,96,math/mathcore/inc/Math/IOptions.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/IOptions.h,1,['interface'],['interface']
Integrability,"//_______________________________________________________________________________; /**; Interface (abstract class) for parametric gradient multi-dimensional functions providing; in addition to function evaluation with respect to the coordinates; also the gradient with respect to the parameters, via the method ParameterGradient. It is a derived class from ROOT::Math::IParametricFunctionMultiDim. The pure private virtual method DoParameterGradient must be implemented by the derived classes; in addition to those inherited by the base abstract classes. @ingroup ParamFunc; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/IParamFunction.h:88,Interface,Interface,88,math/mathcore/inc/Math/IParamFunction.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/IParamFunction.h,1,['Interface'],['Interface']
Integrability,"//_______________________________________________________________________________; /**; Interface (abstract class) for parametric one-dimensional gradient functions providing; in addition to function evaluation with respect the coordinates; also the gradient with respect to the parameters, via the method ParameterGradient. It is a derived class from ROOT::Math::IParametricFunctionOneDim. The pure private virtual method DoParameterGradient must be implemented by the derived classes; in addition to those inherited by the base abstract classes. @ingroup ParamFunc; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/IParamFunction.h:88,Interface,Interface,88,math/mathcore/inc/Math/IParamFunction.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/IParamFunction.h,1,['Interface'],['Interface']
Integrability,//_______________________________________________________________________________; /**; Numerical multi dimensional integration options. @ingroup Integration; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/IntegratorOptions.h:116,integrat,integration,116,math/mathcore/inc/Math/IntegratorOptions.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/IntegratorOptions.h,2,"['Integrat', 'integrat']","['Integration', 'integration']"
Integrability,//_______________________________________________________________________________; /**; Numerical one dimensional integration options. @ingroup Integration; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/IntegratorOptions.h:114,integrat,integration,114,math/mathcore/inc/Math/IntegratorOptions.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/IntegratorOptions.h,2,"['Integrat', 'integrat']","['Integration', 'integration']"
Integrability,//_______________________________________________________________________________; /**; \class TUnuranSampler; \ingroup Unuran. TUnuranSampler class; class implementing the ROOT::Math::DistSampler interface using the UNU.RAN; package for sampling distributions. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/unuran/inc/TUnuranSampler.h:197,interface,interface,197,math/unuran/inc/TUnuranSampler.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/unuran/inc/TUnuranSampler.h,1,['interface'],['interface']
Integrability,//________________________________________________________________________________; /**; LSResidualFunc class description.; Internal class used for accessing the residuals of the Least Square function; and their derivatives which are estimated numerically using GSL numerical derivation.; The class contains a pointer to the fit method function and an index specifying; the i-th residual and wraps it in a multi-dim gradient function interface; ROOT::Math::IGradientFunctionMultiDim.; The class is used by ROOT::Math::GSLNLSMinimizer (GSL non linear least square fitter). @ingroup MultiMin; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/src/GSLNLSMinimizer.cxx:392,wrap,wraps,392,math/mathmore/src/GSLNLSMinimizer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/src/GSLNLSMinimizer.cxx,2,"['interface', 'wrap']","['interface', 'wraps']"
Integrability,"//___________________________________________________________________________________; /**; Class describing the un-binned data sets (just x coordinates values) of any dimensions. There is the option to construct UnBindata copying the data inside; (in the base FitData class) or using a pointer to external data, depending on which; constructor of the UnBinData class is used.; It is recommended to copy the input data inside, since this will be more efficient and; less error prone, since the input provided data will have to be kept alive for all the time the; Fit classes will be used.; In case of really large data sets for limiting memory consumption then the other option can be used; with special care.; Specialized constructor exists for using external data up to 3 dimensions. When the data are copying in the number of points can be set later (or re-set) using Initialize and; the data are inserted one by one using the Add method.; It is mandatory to set the size before using the Add method. @ingroup FitData; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/UnBinData.h:313,depend,depending,313,math/mathcore/inc/Fit/UnBinData.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/UnBinData.h,1,['depend'],['depending']
Integrability,//___________________________________________________________________________________; /**; Interface (abstract class) for generic functions objects of one-dimension; Provides a method to evaluate the function given a value (simple double); by implementing operator() (const double ).; In addition it defines the interface for copying functions via the pure virtual method Clone().; Derived classes must implement the pure virtual private method DoEval(double ) for the; function evaluation in addition to Clone().; An interface for evaluating the function passing a vector (like for multidim functions) is also; provided. @ingroup GenFunc; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/IFunction.h:92,Interface,Interface,92,math/mathcore/inc/Math/IFunction.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/IFunction.h,3,"['Interface', 'interface']","['Interface', 'interface']"
Integrability,"//___________________________________________________________________________________; /**; Interface (abstract class) for one-dimensional functions providing a gradient calculation.; The method ROOT::Math::IFunction::Derivative calculates the derivative and; ROOT::Math::Fdf calculates the derivative and the function values at the same time.; The pure private virtual method DoDerivative() must be implemented by the derived classes, while; FdF is by default implemented using DoDerivative, but it can be overloaded by the; derived classes to improve the efficiency in the derivative calculation. Specialized Gradient interface(abstract class) for one dimensional functions; It provides a method to evaluate the derivative of the function, Derivative and a; method to evaluate at the same time the function and the derivative FdF. @ingroup GenFunc; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/IFunction.h:92,Interface,Interface,92,math/mathcore/inc/Math/IFunction.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/IFunction.h,2,"['Interface', 'interface']","['Interface', 'interface']"
Integrability,"//_____________________________________________________________________________________; /**; Base template class for all Parametric Functions.; The template argument is the type of parameteric function interface is implementing like; Parameteric 1D, Multi-Dim or gradient parametric. A parameteric function is a Generic Function with parameters, so; it is a function object which carries a state, the parameters.; The parameters are described with a standard vector of doubles. This class contains the default implementations for the methods defined in the; IParamFunction interface for dealing with parameters; Specific parameteric function classes should derive from this class if they want to profit from; default implementations for the abstract methods.; The derived classes need to implement only the DoEvalPar( x, p) and Clone() methods for non-gradient; parameteric functions or DoParameterDerivative(x,p,ipar) for gradient par functions. @ingroup ParamFunc; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/ParamFunction.h:203,interface,interface,203,math/mathmore/inc/Math/ParamFunction.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/ParamFunction.h,2,['interface'],['interface']
Integrability,"//_____________________________________________________________________________________; /**; GSLMinimizer class.; Implementation of the ROOT::Math::Minimizer interface using the GSL multi-dimensional; minimization algorithms. See <A HREF=""http://www.gnu.org/software/gsl/manual/html_node/Multidimensional-Minimization.html"">GSL doc</A>; from more info on the GSL minimization algorithms. The class implements the ROOT::Math::Minimizer interface and can be instantiated using the; ROOT plugin manager (plugin name is ""GSLMultiMin""). The various minimization algorithms; (conjugatefr, conjugatepr, bfgs, etc..) can be passed as enumerations and also as a string.; The default algorithm is conjugatefr (Fletcher-Reeves conjugate gradient algorithm). @ingroup MultiMin; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/GSLMinimizer.h:159,interface,interface,159,math/mathmore/inc/Math/GSLMinimizer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/GSLMinimizer.h,2,['interface'],['interface']
Integrability,"//_____________________________________________________________________________________; /**; GSLSimAnMinimizer class for minimization using simulated annealing; using the algorithm from; <A HREF=""http://www.gnu.org/software/gsl/manual/html_node/Simulated-Annealing.html"">; GSL</A>.; It implements the ROOT::Minimizer interface and; a plug-in (name ""GSLSimAn"") exists to instantiate this class via the plug-in manager; Configuration (Setting/getting) the options is done through the methods defined in the; ROOT::Math::Minimizer class.; The user needs to call the base class method ROOT::Math::Minimizer::SetOptions to set the; corresponding options.; Here is some code example for increasing n_tries from 200 (default) to 1000; ```; ROOT::Math::GenAlgoOptions simanOpt;; simanOpt.SetValue(""n_tries"", 1000);; ROOT::Math::MinimizerOptions opt;; opt.SetExtraOptions(simanOpt);; minimizer->SetOptions(opt);; ```. @ingroup MultiMin; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/GSLSimAnMinimizer.h:318,interface,interface,318,math/mathmore/inc/Math/GSLSimAnMinimizer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/GSLSimAnMinimizer.h,1,['interface'],['interface']
Integrability,"//_____________________________________________________________________________________; /**; Parametric Function class describing polynomials of order n. <em>P(x) = p[0] + p[1]*x + p[2]*x**2 + ....... + p[n]*x**n</em>. The class implements also the derivatives, \a dP(x)/dx and the \a dP(x)/dp[i]. The class provides also the method to find the roots of the polynomial.; It uses analytical methods up to quartic polynomials. Implements both the Parameteric function interface and the gradient interface; since it provides the analytical gradient with respect to x. @ingroup ParamFunc; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/Polynomial.h:467,interface,interface,467,math/mathmore/inc/Math/Polynomial.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/Polynomial.h,2,['interface'],['interface']
Integrability,//______________________________________________________________________________________; /**; FitMethodFunction class; Interface for objective functions (like chi2 and likelihood used in the fit); In addition to normal function interface provide interface for calculating each; data contribution to the function which is required by some algorithm (like Fumili). @ingroup FitMethodFunc; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/FitMethodFunction.h:120,Interface,Interface,120,math/mathcore/inc/Math/FitMethodFunction.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/FitMethodFunction.h,3,"['Interface', 'interface']","['Interface', 'interface']"
Integrability,//___________________________________________________________________________________________; /**; Interface class for numerical methods for one-dimensional minimization. @ingroup Min1D. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/IMinimizer1D.h:100,Interface,Interface,100,math/mathcore/inc/Math/IMinimizer1D.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/IMinimizer1D.h,1,['Interface'],['Interface']
Integrability,//___________________________________________________________________________________________; /**; Interface for finding function roots of one-dimensional functions. @ingroup RootFinders. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/IRootFinderMethod.h:100,Interface,Interface,100,math/mathcore/inc/Math/IRootFinderMethod.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/IRootFinderMethod.h,1,['Interface'],['Interface']
Integrability,"//___________________________________________________________________________________________; /**; User class for calculating the derivatives of a function. It can calculate first (method Derivative1),; second (method Derivative2) and third (method Derivative3) of a function. It uses the Richardson extrapolation method for function derivation in a given interval.; The method use 2 derivative estimates (one computed with step h and one computed with step h/2); to compute a third, more accurate estimation. It is equivalent to the; <a href = http://en.wikipedia.org/wiki/Five-point_stencil>5-point method</a>,; which can be obtained with a Taylor expansion.; A step size should be given, depending on x and f(x).; An optimal step size value minimizes the truncation error of the expansion and the rounding; error in evaluating x+h and f(x+h). A too small h will yield a too large rounding error while a too large; h will give a large truncation error in the derivative approximation.; A good discussion can be found in discussed in; <a href=http://www.nrbook.com/a/bookcpdf/c5-7.pdf>Chapter 5.7</a> of Numerical Recipes in C.; By default a value of 0.001 is uses, acceptable in many cases. This class is implemented using code previously in TF1::Derivate{,2,3}(). Now TF1 uses this class. @ingroup Deriv. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/RichardsonDerivator.h:692,depend,depending,692,math/mathcore/inc/Math/RichardsonDerivator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/RichardsonDerivator.h,1,['depend'],['depending']
Integrability,//___________________________________________________________________________________________; /**; User class for performing function integration. It will use the Gauss Method for function integration in a given interval.; This class is implemented from TF1::Integral(). @ingroup Integration. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/GaussIntegrator.h:135,integrat,integration,135,math/mathcore/inc/Math/GaussIntegrator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/GaussIntegrator.h,3,"['Integrat', 'integrat']","['Integration', 'integration']"
Integrability,//___________________________________________________________________________________________; /**; User class for performing function integration. It will use the Gauss-Legendre Method for function integration in a given interval.; This class is implemented from TF1::Integral(). @ingroup Integration. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/GaussLegendreIntegrator.h:135,integrat,integration,135,math/mathcore/inc/Math/GaussLegendreIntegrator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/GaussLegendreIntegrator.h,3,"['Integrat', 'integrat']","['Integration', 'integration']"
Integrability,//___________________________________________________________________________________________; /**; User class for performing multidimensional integration. By default uses adaptive multi-dimensional integration using the algorithm from Genz Mallik; implemented in the class ROOT::Math::AdaptiveIntegratorMultiDim otherwise it can uses via the; plug-in manager the MC integration class (ROOT::Math::GSLMCIntegration) from MathMore. @ingroup Integration. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/IntegratorMultiDim.h:143,integrat,integration,143,math/mathcore/inc/Math/IntegratorMultiDim.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/IntegratorMultiDim.h,4,"['Integrat', 'integrat']","['Integration', 'integration']"
Integrability,"//____________________________________________________________________________________________; /**. User Class for performing numerical integration of a function in one dimension.; It uses the plug-in manager to load advanced numerical integration algorithms from GSL, which reimplements the; algorithms used in the QUADPACK, a numerical integration package written in Fortran. Various types of adaptive and non-adaptive integration are supported. These include; integration over infinite and semi-infinite ranges and singular integrals. The integration type is selected using the Integration::type enumeration; in the class constructor.; The default type is adaptive integration with singularity; (ADAPTIVESINGULAR or QAGS in the QUADPACK convention) applying a Gauss-Kronrod 21-point integration rule.; In the case of ADAPTIVE type, the integration rule can also be specified via the; Integration::GKRule. The default rule is 31 points. In the case of integration over infinite and semi-infinite ranges, the type used is always; ADAPTIVESINGULAR applying a transformation from the original interval into (0,1). The ADAPTIVESINGULAR type is the most sophisticated type. When performances are; important, it is then recommended to use the NONADAPTIVE type in case of smooth functions or; ADAPTIVE with a lower Gauss-Kronrod rule. For detailed description on GSL integration algorithms see the; <A HREF=""http://www.gnu.org/software/gsl/manual/gsl-ref_16.html#SEC248"">GSL Manual</A>. @ingroup Integration. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Integrator.h:137,integrat,integration,137,math/mathcore/inc/Math/Integrator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Integrator.h,14,"['Integrat', 'integrat']","['Integration', 'integration']"
Integrability,"//_______________________________________________________________________________________________; /**; GradFunctor1D class for one-dimensional gradient functions.; It is used to wrap in a very C++ callable object to make a 1D gradient functions.; It can be constructed in three different way:; <ol>; <li> from an object implementing both; double operator()( double ) for the function evaluation and; double Derivative(double ) for the partial derivatives; <li>from an object implementing any member function like Foo::XXX(double ) for the function evaluation; and any other member function like Foo::YYY(double ) for the derivative.; <li>from an 2 function objects implementing; double operator()( double ) . One object provides the function evaluation, the other the derivative.; </ol>. @ingroup GenFunc. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Functor.h:179,wrap,wrap,179,math/mathcore/inc/Math/Functor.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Functor.h,1,['wrap'],['wrap']
Integrability,"//_____________________________________________________________________________________________________; /**; Minuit2Minimizer class implementing the ROOT::Math::Minimizer interface for; Minuit2 minimization algorithm.; In ROOT it can be instantiated using the plug-in manager (plug-in ""Minuit2""); Using a string (used by the plugin manager) or via an enumeration; an one can set all the possible minimization algorithms (Migrad, Simplex, Combined, Scan and Fumili). Refer to the [guide](https://root.cern/root/htmldoc/guides/minuit2/Minuit2.html) for an introduction how Minuit; works. @ingroup Minuit; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/inc/Minuit2/Minuit2Minimizer.h:172,interface,interface,172,math/minuit2/inc/Minuit2/Minuit2Minimizer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/inc/Minuit2/Minuit2Minimizer.h,1,['interface'],['interface']
Integrability,"//_funcNormSet = funcNormSet ? (RooArgSet*)funcNormSet->snapshot(false) : 0 ;; // Make internal copy of dependent list",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:104,depend,dependent,104,roofit/roofitcore/src/RooRealIntegral.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx,1,['depend'],['dependent']
Integrability,"//_toleranceCompareLogs{2.E-14};; // make the integrator slightly more precise (1e-6 -> 1e-7) to reduce inaccuracy in fitting",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/vectorisedPDFs/testBukin.cxx:46,integrat,integrator,46,roofit/roofit/test/vectorisedPDFs/testBukin.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/vectorisedPDFs/testBukin.cxx,1,['integrat'],['integrator']
Integrability,"//a message for the client follows",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/MessageTypes.h:4,message,message,4,core/base/inc/MessageTypes.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/MessageTypes.h,1,['message'],['message']
Integrability,"//abstract interface for FFT calculations",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/TVirtualFFT.h:11,interface,interface,11,core/base/inc/TVirtualFFT.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/TVirtualFFT.h,1,['interface'],['interface']
Integrability,"//an encrypted message follows",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/MessageTypes.h:15,message,message,15,core/base/inc/MessageTypes.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/MessageTypes.h,1,['message'],['message']
Integrability,"//bool, optional (default=False); //When set to ``True``, reuse the solution of the previous call to fit; //and add more estimators to the ensemble, otherwise, just fit a whole; //new forest.; // get help message text",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/pymva/inc/TMVA/MethodPyGTB.h:205,message,message,205,tmva/pymva/inc/TMVA/MethodPyGTB.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/pymva/inc/TMVA/MethodPyGTB.h,1,['message'],['message']
Integrability,"//cache and package handling messages",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/MessageTypes.h:29,message,messages,29,core/base/inc/MessageTypes.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/MessageTypes.h,1,['message'],['messages']
Integrability,"//called by TObject's constructor to determine if object was created by call to new; // This technique is necessary as there is one stack per thread; // and we can not rely on comparison with the current stack memory position.; // Note that a false positive (this routine returning true for an object; // created on the stack) requires the previous stack value to have been; // set to exactly kObjectAllocMemValue at exactly the right position (i.e.; // where this object's fUniqueID is located.; // The consequence of a false positive will be visible if and only if; // the object is auto-added to a TDirectory (i.e. TTree, TH*, TGraph,; // TEventList) or explicitly added to the directory by the user; // and; // the TDirectory (or TFile) object is created on the stack *before*; // the object.; // The consequence would be that those objects would be deleted twice, once; // by the TDirectory and once automatically when going out of scope; // (and thus quite visible). A false negative (which is not possible with; // this implementation) would have been a silent memory leak.; // This will be reported by valgrind as uninitialized memory reads for; // object created on the stack, use $ROOTSYS/etc/valgrind-root.supp",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/TStorage.h:264,rout,routine,264,core/base/inc/TStorage.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/TStorage.h,1,['rout'],['routine']
Integrability,//change the combo box in Minimization Tab --- Method depending on Radio Buttons values,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/ui5/fitpanel/controller/FitPanel.controller.js:54,depend,depending,54,ui5/fitpanel/controller/FitPanel.controller.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/fitpanel/controller/FitPanel.controller.js,1,['depend'],['depending']
Integrability,//cl_khr_fp16; /**; * Error function encountered in integrating the; * normal distribution.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/opencl-c.h:52,integrat,integrating,52,interpreter/llvm-project/clang/lib/Headers/opencl-c.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/opencl-c.h,1,['integrat'],['integrating']
Integrability,"//cl_khr_fp16; /**; * Perform an async gather of num_elements; * gentype elements from src to dst. The; * src_stride is the stride in elements for each; * gentype element read from src. The dst_stride; * is the stride in elements for each gentype; * element written to dst. The async gather is; * performed by all work-items in a work-group.; * This built-in function must therefore be; * encountered by all work-items in a work-group; * executing the kernel with the same argument; * values; otherwise the results are undefined.; * Returns an event object that can be used by; * wait_group_events to wait for the async copy; * to finish. The event argument can also be used; * to associate the; * async_work_group_strided_copy with a; * previous async copy allowing an event to be; * shared by multiple async copies; otherwise event; * should be zero.; * If event argument is non-zero, the event object; * supplied in event argument will be returned.; * This function does not perform any implicit; * synchronization of source data such as using a; * barrier before performing the copy.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/opencl-c.h:1002,synchroniz,synchronization,1002,interpreter/llvm-project/clang/lib/Headers/opencl-c.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/opencl-c.h,1,['synchroniz'],['synchronization']
Integrability,"//compare analytical integration with numerical one",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/test/testAnalyticalIntegrals.cxx:21,integrat,integration,21,math/mathcore/test/testAnalyticalIntegrals.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/test/testAnalyticalIntegrals.cxx,1,['integrat'],['integration']
Integrability,"//control output sending; //---- ROOTD message opcodes (2000 - 2099)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/MessageTypes.h:39,message,message,39,core/base/inc/MessageTypes.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/MessageTypes.h,1,['message'],['message']
Integrability,"//cout << ""NUMINT intDepList = "" << intDepList << std::endl ;; // Loop again over function servers to add remaining numeric integrations",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:124,integrat,integrations,124,roofit/roofitcore/src/RooRealIntegral.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx,1,['integrat'],['integrations']
Integrability,"//cout << ""RooNumGenFactory::storeSampler() ERROR: integrator '"" << name << ""' already registered"" << endl ;",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenFactory.cxx:51,integrat,integrator,51,roofit/roofitcore/src/RooNumGenFactory.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenFactory.cxx,1,['integrat'],['integrator']
Integrability,"//cout << ""RooNumIntFactory::storeIntegrator() ERROR: integrator '"" << name << ""' already registered"" << std::endl ;",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntFactory.cxx:54,integrat,integrator,54,roofit/roofitcore/src/RooNumIntFactory.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntFactory.cxx,1,['integrat'],['integrator']
Integrability,"//coutE(Tracing) << ""RooAbsReal::logEvalError("" << GetName() << "") message = "" << message << std::endl ;",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx:67,message,message,67,roofit/roofitcore/src/RooAbsReal.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx,2,['message'],['message']
Integrability,"//defined(__opencl_c_generic_address_space); // OpenCL v1.1 s6.11.10, v1.2 s6.12.10, v2.0 s6.13.10 - Async Copies from Global to Local Memory, Local to Global Memory, and Prefetch; /**; * event_t async_work_group_copy (; * __global gentype *dst,; * const __local gentype *src,; * size_t num_elements,; * event_t event); * Perform an async copy of num_elements; * gentype elements from src to dst. The async; * copy is performed by all work-items in a workgroup; * and this built-in function must therefore; * be encountered by all work-items in a workgroup; * executing the kernel with the same; * argument values; otherwise the results are; * undefined.; * Returns an event object that can be used by; * wait_group_events to wait for the async copy; * to finish. The event argument can also be used; * to associate the async_work_group_copy with; * a previous async copy allowing an event to be; * shared by multiple async copies; otherwise event; * should be zero.; * If event argument is non-zero, the event object; * supplied in event argument will be returned.; * This function does not perform any implicit; * synchronization of source data such as using a; * barrier before performing the copy.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/opencl-c.h:1116,synchroniz,synchronization,1116,interpreter/llvm-project/clang/lib/Headers/opencl-c.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/opencl-c.h,1,['synchroniz'],['synchronization']
Integrability,"//defined(__opencl_c_named_address_space_builtins); // OpenCL v1.1 s6.11.8, v1.2 s6.12.8, v2.0 s6.13.8 - Synchronization Functions; /**; * All work-items in a work-group executing the kernel; * on a processor must execute this function before any; * are allowed to continue execution beyond the barrier.; * This function must be encountered by all work-items in; * a work-group executing the kernel.; * If barrier is inside a conditional statement, then all; * work-items must enter the conditional if any work-item; * enters the conditional statement and executes the; * barrier.; * If barrer is inside a loop, all work-items must execute; * the barrier for each iteration of the loop before any are; * allowed to continue execution beyond the barrier.; * The barrier function also queues a memory fence; * (reads and writes) to ensure correct ordering of; * memory operations to local or global memory.; * The flags argument specifies the memory address space; * and can be set to a combination of the following literal; * values.; * CLK_LOCAL_MEM_FENCE - The barrier function; * will either flush any variables stored in local memory; * or queue a memory fence to ensure correct ordering of; * memory operations to local memory.; * CLK_GLOBAL_MEM_FENCE - The barrier function; * will queue a memory fence to ensure correct ordering; * of memory operations to global memory. This can be; * useful when work-items, for example, write to buffer or; * image objects and then want to read the updated data.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/opencl-c.h:105,Synchroniz,Synchronization,105,interpreter/llvm-project/clang/lib/Headers/opencl-c.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/opencl-c.h,1,['Synchroniz'],['Synchronization']
Integrability,"//depends on function shape; // test ROOT finder algorithm function with derivative",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/stressMathMore.cxx:2,depend,depends,2,test/stressMathMore.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/stressMathMore.cxx,1,['depend'],['depends']
Integrability,"//dict, list of dicts, ""auto"", ""subsample"" or None, optional; //Weights associated with classes in the form ``{class_label: weight}``.; //If not given, all classes are supposed to have weight one. For; //multi-output problems, a list of dicts can be provided in the same; //order as the columns of y.; //The ""auto"" mode uses the values of y to automatically adjust; //weights inversely proportional to class frequencies in the input data.; //The ""subsample"" mode is the same as ""auto"" except that weights are; //computed based on the bootstrap sample for every tree grown.; //For multi-output, the weights of each column of y will be multiplied.; //Note that these weights will be multiplied with sample_weight (passed; //through the fit method) if sample_weight is specified.; // get help message text",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/pymva/inc/TMVA/MethodPyRandomForest.h:790,message,message,790,tmva/pymva/inc/TMVA/MethodPyRandomForest.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/pymva/inc/TMVA/MethodPyRandomForest.h,1,['message'],['message']
Integrability,"//directory containing session dependent files",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/inc/TQueryResultManager.h:31,depend,dependent,31,proof/proof/inc/TQueryResultManager.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/inc/TQueryResultManager.h,1,['depend'],['dependent']
Integrability,"//error code and message follow",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/MessageTypes.h:17,message,message,17,core/base/inc/MessageTypes.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/MessageTypes.h,1,['message'],['message']
Integrability,"//first condition not to repeat the previous error message",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraph.cxx:51,message,message,51,hist/hist/src/TGraph.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraph.cxx,4,['message'],['message']
Integrability,"//for multi-dim integration",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/AllIntegrationTypes.h:16,integrat,integration,16,math/mathcore/inc/Math/AllIntegrationTypes.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/AllIntegrationTypes.h,1,['integrat'],['integration']
Integrability,"//fprintf(stderr, ""%s\n"", wrapper.c_str());; //; // Compile the wrapper code.; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx:26,wrap,wrapper,26,core/metacling/src/TClingCallFunc.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingCallFunc.cxx,6,['wrap'],['wrapper']
Integrability,"//general message, ignore it",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/TMPWorker.cxx:10,message,message,10,core/multiproc/src/TMPWorker.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/TMPWorker.cxx,1,['message'],['message']
Integrability,"//generic message type",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/MessageTypes.h:10,message,message,10,core/base/inc/MessageTypes.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/MessageTypes.h,1,['message'],['message']
Integrability,"//if ( (msg->message >= WM_NCMOUSEMOVE) &&; // (msg->message <= WM_NCMBUTTONDBLCLK) ) {; // TGWin32ProxyBase::GlobalLock();; //}",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/src/TGWin32.cxx:13,message,message,13,graf2d/win32gdk/src/TGWin32.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/src/TGWin32.cxx,2,['message'],['message']
Integrability,"//if (ifail) Warning(""TF1Helper::IntegralError"",""n-dim integration failed code=%d I = %g, relerr =%g, ncall = %d, maxpts = %d, epsrel = %g, epsabs = %g, "",ifail,integral,relerr,nfnevl,maxpts,epsrel,epsabs);",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TF1Helper.cxx:55,integrat,integration,55,hist/hist/src/TF1Helper.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TF1Helper.cxx,1,['integrat'],['integration']
Integrability,"//if (ncall <= 0) ncall = IntegratorOneDimOptions::DefaultNCalls();",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/Integrator.cxx:26,Integrat,IntegratorOneDimOptions,26,math/mathcore/src/Integrator.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/Integrator.cxx,1,['Integrat'],['IntegratorOneDimOptions']
Integrability,"//if GSL is available load (and register GSL integrator)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntFactory.cxx:45,integrat,integrator,45,roofit/roofitcore/src/RooNumIntFactory.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntFactory.cxx,1,['integrat'],['integrator']
Integrability,"//in the test below 16 MBytes is pure empirirical and may depend on the file system.; //increasing this number must be done with care, as it may increase; //the job real time (mismatch with OS buffers)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TFileCacheRead.cxx:58,depend,depend,58,io/io/src/TFileCacheRead.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TFileCacheRead.cxx,2,['depend'],['depend']
Integrability,"//int, RandomState instance or None, optional (default=None); //If int, random_state is the seed used by the random number generator;; //If RandomState instance, random_state is the random number generator;; //If None, the random number generator is the RandomState instance used by `np.random`.; // get help message text",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/pymva/inc/TMVA/MethodPyAdaBoost.h:309,message,message,309,tmva/pymva/inc/TMVA/MethodPyAdaBoost.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/pymva/inc/TMVA/MethodPyAdaBoost.h,1,['message'],['message']
Integrability,"//integer, optional (default=3); //maximum depth of the individual regression estimators. The maximum; //depth limits the number of nodes in the tree. Tune this parameter; //for best performance; the best value depends on the interaction; //of the input variables.; //Ignored if ``max_leaf_nodes`` is not None.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/pymva/inc/TMVA/MethodPyGTB.h:211,depend,depends,211,tmva/pymva/inc/TMVA/MethodPyGTB.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/pymva/inc/TMVA/MethodPyGTB.h,1,['depend'],['depends']
Integrability,"//integration limits",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/test/testIntegrationMultiDim.cxx:2,integrat,integration,2,math/mathcore/test/testIntegrationMultiDim.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/test/testIntegrationMultiDim.cxx,2,['integrat'],['integration']
Integrability,"//message contains server's pid. retrieve it",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/TMPClient.cxx:2,message,message,2,core/multiproc/src/TMPClient.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/TMPClient.cxx,1,['message'],['message']
Integrability,"//message digest",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/TMD5.h:2,message,message,2,core/base/inc/TMD5.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/TMD5.h,1,['message'],['message']
Integrability,"//message with max number of queries",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/MessageTypes.h:2,message,message,2,core/base/inc/MessageTypes.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/MessageTypes.h,1,['message'],['message']
Integrability,"//message with unique session tag",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/MessageTypes.h:2,message,message,2,core/base/inc/MessageTypes.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/MessageTypes.h,1,['message'],['message']
Integrability,"//multidim function to integrate",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/test/testIntegrationMultiDim.cxx:23,integrat,integrate,23,math/mathcore/test/testIntegrationMultiDim.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/test/testIntegrationMultiDim.cxx,2,['integrat'],['integrate']
Integrability,"//namespace ROOT; //The ""public interface"" - PopupLogo/WaitLogo.; ////////////////////////////////////////////////////////////////////////////////; ///Popup a splashscreen window.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/rootx/src/rootxx.cxx:32,interface,interface,32,rootx/src/rootxx.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/rootx/src/rootxx.cxx,1,['interface'],['interface']
Integrability,"//print status of worker - (OBSOLETE Message)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/MessageTypes.h:37,Message,Message,37,core/base/inc/MessageTypes.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/MessageTypes.h,1,['Message'],['Message']
Integrability,"//protection in case of wrong pad parameters.; //without this protection, the OpenPixmap or ResizePixmap crashes with; //the message ""Error in <RootX11ErrorHandler>: BadValue (integer parameter out of range for operation)""; //resulting in a frozen xterm",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TPad.cxx:125,message,message,125,graf2d/gpad/src/TPad.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TPad.cxx,1,['message'],['message']
Integrability,"//read message code",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/MPSendRecv.cxx:7,message,message,7,core/multiproc/src/MPSendRecv.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/MPSendRecv.cxx,1,['message'],['message']
Integrability,"//receive message code",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/MPSendRecv.cxx:10,message,message,10,core/multiproc/src/MPSendRecv.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/MPSendRecv.cxx,1,['message'],['message']
Integrability,"//remote PROOF server protocol version number",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/inc/TProof.h:22,protocol,protocol,22,proof/proof/inc/TProof.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/inc/TProof.h,1,['protocol'],['protocol']
Integrability,"//returns rootd protocol",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/MessageTypes.h:16,protocol,protocol,16,core/base/inc/MessageTypes.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/MessageTypes.h,1,['protocol'],['protocol']
Integrability,"//send message to all sockets",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/TMPClient.h:7,message,message,7,core/multiproc/inc/TMPClient.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/TMPClient.h,2,['message'],['message']
Integrability,"//server protocol version number",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/inc/TApplicationRemote.h:9,protocol,protocol,9,net/net/inc/TApplicationRemote.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/inc/TApplicationRemote.h,1,['protocol'],['protocol']
Integrability,"//set the number of entries to be the same as the original histo; // do ""function like"" integration = sum of (bin_width*bin_content):",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/KDEKernel.cxx:88,integrat,integration,88,tmva/tmva/src/KDEKernel.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/KDEKernel.cxx,1,['integrat'],['integration']
Integrability,"//slave's protocol level",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/inc/TSlave.h:10,protocol,protocol,10,proof/proof/inc/TSlave.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/inc/TSlave.h,1,['protocol'],['protocol']
Integrability,"//std::cout << ""set a 1d function"" << std::endl;; // function is cloned when creating the adapter",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/Fitter.cxx:90,adapter,adapter,90,math/mathcore/src/Fitter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/Fitter.cxx,1,['adapter'],['adapter']
Integrability,"//std::string name, expression, dependents;",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/ConfigParser.cxx:32,depend,dependents,32,roofit/histfactory/src/ConfigParser.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/ConfigParser.cxx,1,['depend'],['dependents']
Integrability,"//stream object to message buffer",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TSocket.cxx:19,message,message,19,net/net/src/TSocket.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TSocket.cxx,2,['message'],['message']
Integrability,"//suppress messages for num integration of Roofit",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/ToyMCSampler.cxx:11,message,messages,11,roofit/roostats/src/ToyMCSampler.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/ToyMCSampler.cxx,4,"['integrat', 'message']","['integration', 'messages']"
Integrability,"//switch off error messages to have test passing",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/TFormulaParsingTests.h:19,message,messages,19,test/TFormulaParsingTests.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/TFormulaParsingTests.h,1,['message'],['messages']
Integrability,"//switch on/off real-time retrieval of log messages",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/MessageTypes.h:43,message,messages,43,core/base/inc/MessageTypes.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/MessageTypes.h,1,['message'],['messages']
Integrability,"//testFullGRU<TReference<double>>(64, 10, 8, 8) ;; //testFullGRU<TReference<double>>(3, 8, 100, 50) ;; // test a full GRU with 5 time steps and different signal/backgrund time dependent shapes; // batchsize, statesize , inputsize, seed",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/GRU/TestFullGRU.cxx:176,depend,dependent,176,tmva/tmva/test/DNN/GRU/TestFullGRU.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/GRU/TestFullGRU.cxx,1,['depend'],['dependent']
Integrability,"//testFullLSTM<TReference<double>>(64, 10, 8, 8) ;; //testFullLSTM<TReference<double>>(3, 8, 100, 50) ;; // test a full LSTM with 5 time steps and different signal/backgrund time dependent shapes; // batchsize, statesize , inputsize, seed",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/LSTM/TestFullLSTM.cxx:179,depend,dependent,179,tmva/tmva/test/DNN/LSTM/TestFullLSTM.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/LSTM/TestFullLSTM.cxx,1,['depend'],['dependent']
Integrability,"//testFullRNN<TReference<double>>(64, 10, 8, 8) ;; //testFullRNN<TReference<double>>(3, 8, 100, 50) ;; // test a full RNN with 5 time steps and different signal/backgrund time dependent shapes; // batchsize, statesize , inputsize, seed",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/RNN/TestFullRNN.cxx:176,depend,dependent,176,tmva/tmva/test/DNN/RNN/TestFullRNN.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/RNN/TestFullRNN.cxx,1,['depend'],['dependent']
Integrability,"//the kernel used in training and predicting. You might; //consider changing some of the following parameters, depending on the kernel type.; //linear: u'*v; //polynomial: (gamma*u'*v + coef0)^degree; //radial basis: exp(-gamma*|u-v|^2); //sigmoid: tanh(gamma*u'*v + coef0)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/rmva/inc/TMVA/MethodRSVM.h:111,depend,depending,111,tmva/rmva/inc/TMVA/MethodRSVM.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/rmva/inc/TMVA/MethodRSVM.h,1,['depend'],['depending']
Integrability,"//the linker does not like to be mmapped; //causes a crash in cling::DynamicLibraryManager::loadLibrary()); //with error message ""mmap of entire address space failed: Cannot allocate memory""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:121,message,message,121,core/metacling/src/TCling.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx,1,['message'],['message']
Integrability,"//this version reads a TObject* from the message",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/MPSendRecv.h:41,message,message,41,core/multiproc/inc/MPSendRecv.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/MPSendRecv.h,1,['message'],['message']
Integrability,"//this version reads built-in types from the message",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/MPSendRecv.h:45,message,message,45,core/multiproc/inc/MPSendRecv.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/MPSendRecv.h,1,['message'],['message']
Integrability,"//this version reads classes from the message",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/MPSendRecv.h:38,message,message,38,core/multiproc/inc/MPSendRecv.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/MPSendRecv.h,1,['message'],['message']
Integrability,"//this version reads std::string and c-strings from the message",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/MPSendRecv.h:56,message,message,56,core/multiproc/inc/MPSendRecv.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/MPSendRecv.h,1,['message'],['message']
Integrability,"//timer.Start();; //ROOT::Math::WrappedParamFunction<> funptr(&SimpleFun, dim, p, p+1);",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/test/testIntegrationMultiDim.cxx:32,Wrap,WrappedParamFunction,32,math/mathcore/test/testIntegrationMultiDim.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/test/testIntegrationMultiDim.cxx,1,['Wrap'],['WrappedParamFunction']
Integrability,"//true if message digest has been finalized",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/TMD5.h:10,message,message,10,core/base/inc/TMD5.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/TMD5.h,1,['message'],['message']
Integrability,"//type of integration method",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/GSLMCIntegrator.h:10,integrat,integration,10,math/mathmore/inc/Math/GSLMCIntegrator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/GSLMCIntegrator.h,1,['integrat'],['integration']
Integrability,"//use an adaptive bandwidth to reduce the dependence on global data distribution",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/Roo2DKeysPdf.cxx:42,depend,dependence,42,roofit/roofit/src/Roo2DKeysPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/Roo2DKeysPdf.cxx,1,['depend'],['dependence']
Integrability,"//used to construct message panel when Close button is clicked",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/histviewer/histaction.cxx:20,message,message,20,test/histviewer/histaction.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/histviewer/histaction.cxx,1,['message'],['message']
Integrability,"//user protocol version number",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/inc/TApplicationServer.h:7,protocol,protocol,7,net/net/inc/TApplicationServer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/inc/TApplicationServer.h,1,['protocol'],['protocol']
Integrability,"//‘svm’ can be used as a classification machine, as a; //regression machine, or for novelty detection. Depending of; //whether ‘y’ is a factor or not, the default setting for; //‘type’ is ‘C-classification’ or ‘eps-regression’,; //respectively, but may be overwritten by setting an explicit value.; //Valid options are:; // - ‘C-classification’; // - ‘nu-classification’; // - ‘one-classification’ (for novelty detection); // - ‘eps-regression’; // - ‘nu-regression’",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/rmva/inc/TMVA/MethodRSVM.h:103,Depend,Depending,103,tmva/rmva/inc/TMVA/MethodRSVM.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/rmva/inc/TMVA/MethodRSVM.h,1,['Depend'],['Depending']
Integrability,"/12/30 13:57:55 dawes Exp $; *; * Copyright 1992 Network Computing Devices, Inc.; *; * Permission to use, copy, modify, and distribute this software and its; * documentation for any purpose and without fee is hereby granted, provided; * that the above copyright notice appear in all copies and that both that; * copyright notice and this permission notice appear in supporting; * documentation, and that the name of Network Computing Devices may not be; * used in advertising or publicity pertaining to distribution of the software; * without specific, written prior permission. Network Computing Devices makes; * no representations about the suitability of this software for any purpose.; * It is provided ``as is'' without express or implied warranty.; *; * NETWORK COMPUTING DEVICES DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS; * SOFTWARE, INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS,; * IN NO EVENT SHALL NETWORK COMPUTING DEVICES BE LIABLE FOR ANY SPECIAL,; * INDIRECT OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM; * LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE; * OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR; * PERFORMANCE OF THIS SOFTWARE.; *; * Author: Jim Fulton; * Network Computing Devices, Inc.; *; * Simple if statement processor; *; * This module can be used to evaluate string representations of C language; * if constructs. It accepts the following grammar:; *; * EXPRESSION := VALUE; * | VALUE BINOP EXPRESSION; * | VALUE '?' EXPRESSION ':' EXPRESSION; *; * VALUE := '(' EXPRESSION ')'; * | '!' VALUE; * | '-' VALUE; * | '~' VALUE; * | 'defined' '(' variable ')'; * | 'defined' variable; * | # variable '(' variable-list ')'; * | variable; * | number; *; * BINOP := '*' | '/' | '%'; * | '+' | '-'; * | '<<' | '>>'; * | '<' | '>' | '<=' | '>='; * | '==' | '!='; * | '&' | '^' | '|'; * | '&&' | '||'; *; * The normal C order of precedence is supported.; *; *; * External Entry Points:",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/misc/rmkdepend/ifparser.c:1239,CONTRACT,CONTRACT,1239,misc/rmkdepend/ifparser.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/misc/rmkdepend/ifparser.c,1,['CONTRACT'],['CONTRACT']
Integrability,"/; // TClonesArray of TParticles. //; // //; // If the generator code stores event data in the /HEPEVT/ common block //; // Then the default implementation of ImportParticles should suffice. //; // The common block /HEPEVT/ is structed like //; // //; // /* C */ //; // typedef struct { //; // Int_t nevhep; //; // Int_t nhep; //; // Int_t isthep[4000]; //; // Int_t idhep[4000]; //; // Int_t jmohep[4000][2]; //; // Int_t jdahep[4000][2]; //; // Double_t phep[4000][5]; //; // Double_t vhep[4000][4]; //; // } HEPEVT_DEF; //; // //; // //; // C Fortran //; // COMMON/HEPEVT/NEVHEP,NHEP,ISTHEP(4000),IDHEP(4000), //; // + JMOHEP(2,4000),JDAHEP(2,4000),PHEP(5,4000),VHEP(4,4000) //; // INTEGER NEVHEP,NHEP,ISTHEP,IDHEP,JMOHEP,JDAHEP //; // DOUBLE PRECISION PHEP,VHEP //; // //; // The generic member functions SetParameter and GetParameter can be //; // overloaded to set and get parameters of the event generator. //; // //; // Note, if the derived class interfaces a (set of) Fortran common //; // blocks (like TPythia, TVenus does), one better make the derived //; // class a singleton. That is, something like //; // //; // class MyGenerator : public TGenerator //; // { //; // public: //; // static MyGenerator* Instance() //; // { //; // if (!fgInstance) fgInstance = new MyGenerator; //; // return fgInstance; //; // } //; // void GenerateEvent() { ... } //; // void ImportParticles(TClonesArray* a, Option_t opt="""") {...} //; // Int_t ImportParticles(Option_t opt="""") { ... } //; // Int_t SetParameter(const char* name, Double_t val) { ... } //; // Double_t GetParameter(const char* name) { ... } //; // virtual ~MyGenerator() { ... } //; // protected: //; // MyGenerator() { ... } //; // MyGenerator(const MyGenerator& o) { ... } //; // MyGenerator& operator=(const MyGenerator& o) { ... } //; // static MyGenerator* fgInstance; //; // ClassDefOverride(MyGenerator,0); //; // }; //; // //; // Having multiple objects accessing the same common blocks is not //; // safe. //; // //; // concrete ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/montecarlo/eg/inc/TGenerator.h:2008,interface,interfaces,2008,montecarlo/eg/inc/TGenerator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/montecarlo/eg/inc/TGenerator.h,1,['interface'],['interfaces']
Integrability,"/; /// unary-operator: one of; /// '&' '*' '+' '-' '~' '!'; /// [GNU] '__extension__' '__real' '__imag'; ///; /// primary-expression: [C99 6.5.1]; /// [C99] identifier; /// [C++] id-expression; /// constant; /// string-literal; /// [C++] boolean-literal [C++ 2.13.5]; /// [C++11] 'nullptr' [C++11 2.14.7]; /// [C++11] user-defined-literal; /// '(' expression ')'; /// [C11] generic-selection; /// [C++2a] requires-expression; /// '__func__' [C99 6.4.2.2]; /// [GNU] '__FUNCTION__'; /// [MS] '__FUNCDNAME__'; /// [MS] 'L__FUNCTION__'; /// [MS] '__FUNCSIG__'; /// [MS] 'L__FUNCSIG__'; /// [GNU] '__PRETTY_FUNCTION__'; /// [GNU] '(' compound-statement ')'; /// [GNU] '__builtin_va_arg' '(' assignment-expression ',' type-name ')'; /// [GNU] '__builtin_offsetof' '(' type-name ',' offsetof-member-designator')'; /// [GNU] '__builtin_choose_expr' '(' assign-expr ',' assign-expr ','; /// assign-expr ')'; /// [GNU] '__builtin_FILE' '(' ')'; /// [CLANG] '__builtin_FILE_NAME' '(' ')'; /// [GNU] '__builtin_FUNCTION' '(' ')'; /// [MS] '__builtin_FUNCSIG' '(' ')'; /// [GNU] '__builtin_LINE' '(' ')'; /// [CLANG] '__builtin_COLUMN' '(' ')'; /// [GNU] '__builtin_source_location' '(' ')'; /// [GNU] '__builtin_types_compatible_p' '(' type-name ',' type-name ')'; /// [GNU] '__null'; /// [OBJC] '[' objc-message-expr ']'; /// [OBJC] '\@selector' '(' objc-selector-arg ')'; /// [OBJC] '\@protocol' '(' identifier ')'; /// [OBJC] '\@encode' '(' type-name ')'; /// [OBJC] objc-string-literal; /// [C++] simple-type-specifier '(' expression-list[opt] ')' [C++ 5.2.3]; /// [C++11] simple-type-specifier braced-init-list [C++11 5.2.3]; /// [C++] typename-specifier '(' expression-list[opt] ')' [C++ 5.2.3]; /// [C++11] typename-specifier braced-init-list [C++11 5.2.3]; /// [C++] 'const_cast' '<' type-name '>' '(' expression ')' [C++ 5.2p1]; /// [C++] 'dynamic_cast' '<' type-name '>' '(' expression ')' [C++ 5.2p1]; /// [C++] 'reinterpret_cast' '<' type-name '>' '(' expression ')' [C++ 5.2p1]; /// [C++] 'static_c",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParseExpr.cpp:2419,message,message-expr,2419,interpreter/llvm-project/clang/lib/Parse/ParseExpr.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParseExpr.cpp,2,"['message', 'protocol']","['message-expr', 'protocol']"
Integrability,"/; //; // In the code, iterator can be represented as a:; // * type-I: typedef-ed pointer. Operations over such iterator, such as; // comparisons or increments, are modeled straightforwardly by the; // analyzer.; // * type-II: structure with its method bodies available. Operations over such; // iterator are inlined by the analyzer, and results of modeling; // these operations are exposing implementation details of the; // iterators, which is not necessarily helping.; // * type-III: completely opaque structure. Operations over such iterator are; // modeled conservatively, producing conjured symbols everywhere.; //; // To handle all these types in a common way we introduce a structure called; // IteratorPosition which is an abstraction of the position the iterator; // represents using symbolic expressions. The checker handles all the; // operations on this structure.; //; // Additionally, depending on the circumstances, operators of types II and III; // can be represented as:; // * type-IIa, type-IIIa: conjured structure symbols - when returned by value; // from conservatively evaluated methods such as; // `.begin()`.; // * type-IIb, type-IIIb: memory regions of iterator-typed objects, such as; // variables or temporaries, when the iterator object is; // currently treated as an lvalue.; // * type-IIc, type-IIIc: compound values of iterator-typed objects, when the; // iterator object is treated as an rvalue taken of a; // particular lvalue, eg. a copy of ""type-a"" iterator; // object, or an iterator that existed before the; // analysis has started.; //; // To handle any of these three different representations stored in an SVal we; // use setter and getters functions which separate the three cases. To store; // them we use a pointer union of symbol and memory region.; //; // The checker works the following way: We record the begin and the; // past-end iterator for all containers whenever their `.begin()` and `.end()`; // are called. Since the Constraint Manager cannot ha",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/IteratorModeling.cpp:1436,depend,depending,1436,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/IteratorModeling.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/IteratorModeling.cpp,1,['depend'],['depending']
Integrability,"/OR SOFTWARE (""SOFTWARE""),; YOU UNEQUIVOCALLY ACCEPT, AND AGREE TO BE BOUND BY, ALL OF THE; TERMS AND CONDITIONS OF THIS AGREEMENT.; IF YOU DO NOT AGREE, DO NOT DOWNLOAD, INSTALL, COPY, DISTRIBUTE OR USE; THE DATA FILES OR SOFTWARE. COPYRIGHT AND PERMISSION NOTICE. Copyright © 1991-2022 Unicode, Inc. All rights reserved.; Distributed under the Terms of Use in https://www.unicode.org/copyright.html. Permission is hereby granted, free of charge, to any person obtaining; a copy of the Unicode data files and any associated documentation; (the ""Data Files"") or Unicode software and any associated documentation; (the ""Software"") to deal in the Data Files or Software; without restriction, including without limitation the rights to use,; copy, modify, merge, publish, distribute, and/or sell copies of; the Data Files or Software, and to permit persons to whom the Data Files; or Software are furnished to do so, provided that either; (a) this copyright and permission notice appear with all copies; of the Data Files or Software, or; (b) this copyright and permission notice appear in associated; Documentation. THE DATA FILES AND SOFTWARE ARE PROVIDED ""AS IS"", WITHOUT WARRANTY OF; ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE; WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND; NONINFRINGEMENT OF THIRD PARTY RIGHTS.; IN NO EVENT SHALL THE COPYRIGHT HOLDER OR HOLDERS INCLUDED IN THIS; NOTICE BE LIABLE FOR ANY CLAIM, OR ANY SPECIAL INDIRECT OR CONSEQUENTIAL; DAMAGES, OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE,; DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER; TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR; PERFORMANCE OF THE DATA FILES OR SOFTWARE. Except as contained in this notice, the name of a copyright holder; shall not be used in advertising or otherwise to promote the sale,; use or other dealings in these Data Files or Software without prior; written authorization of the copyright holder.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/UnicodeNameToCodepointGenerated.cpp:2591,CONTRACT,CONTRACT,2591,interpreter/llvm-project/llvm/lib/Support/UnicodeNameToCodepointGenerated.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/UnicodeNameToCodepointGenerated.cpp,1,['CONTRACT'],['CONTRACT']
Integrability,"/license.txt) *; *****************************************************************************/; /**; \file RooNumConvolution.cxx; \class RooNumConvolution; \ingroup Roofitcore. Numeric 1-dimensional convolution operator PDF. This class can convolve any PDF; with any other PDF; This class should not be used blindly as numeric convolution is computing; intensive and prone to stability fitting problems. If an analytic convolution; can be calculated, you should use that or implement it if not available.; RooNumConvolution implements reasonable defaults that should convolve most; functions reasonably well, but results strongly depend on the shape of your; input PDFS so always check your result. The default integration engine for the numeric convolution is the; adaptive Gauss-Kronrod method, which empirically seems the most robust; for this task. You can override the convolution integration settings via; the RooNumIntConfig object reference returned by the convIntConfig() member; function; By default the numeric convolution is integrated from -infinity to; +infinity through a <pre>x -> 1/x</pre> coordinate transformation of the; tails. For convolution with a very small bandwidth it may be; advantageous (for both CPU consumption and stability) if the; integration domain is limited to a finite range. The function; setConvolutionWindow(mean,width,scale) allows to set a sliding; window around the x value to be calculated taking a RooAbsReal; expression for an offset and a width to be taken around the x; value. These input expression can be RooFormulaVars or other; function objects although the 3d 'scale' argument 'scale'; multiplies the width RooAbsReal expression given in the 2nd; argument, allowing for an appropriate window definition for most; cases without need for a RooFormulaVar object: e.g. a Gaussian; resolution PDF do setConvolutionWindow(gaussMean,gaussSigma,5); Note that for a 'wide' Gaussian the -inf to +inf integration; may converge more quickly than that over a ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumConvolution.cxx:1485,integrat,integration,1485,roofit/roofitcore/src/RooNumConvolution.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumConvolution.cxx,2,['integrat'],"['integrated', 'integration']"
Integrability,"/path/file_name[?[query][#tree_name]]; /// or root://machine/path/file_name; /// or root://machine/path/file_name.root[.oext]/tree_name; /// or root://machine/path/file_name.root[.oext]/tree_name?query; /// ~~~; ///; /// Note the following:; /// - The optional ""query"" token is to be interpreted by the remote server.; /// - Wildcards may be supported in URLs, depending on the protocol plugin and; /// the remote server.; /// - \p http or \p https URLs can contain a query identifier without; /// \p tree_name, but generally URLs can not be written with them because of; /// ambiguity with the wildcard character. (Also see the documentation for; /// TChain::AddFile, which does not support wildcards but allows the URL name; /// to contain a query).; /// - The rules for tagging the name of the tree in the file are the same as; /// in the format above.; ///; /// <h4>Details of the nentries parameter</h4>; /// Depending on the value of the parameter, the number of entries in the file; /// is retrieved differently:; /// - If <tt>nentries <= 0</tt>, the file is connected and the tree header read; /// in memory to get the number of entries.; /// - If <tt>nentries > 0</tt>, the file is not connected, \p nentries is; /// assumed to be the number of entries in the file. In this case, no check is; /// made that the file exists and that the corresponding tree exists as well.; /// This second mode is interesting in case the number of entries in the file; /// is already stored in a run data base for example.; /// - If <tt>nentries == TTree::kMaxEntries</tt> (default), the file is not; /// connected. The number of entries in each file will be read only when the; /// file will need to be connected to read an entry. This option is the; /// default and very efficient if one processes the chain sequentially. Note; /// that in case TChain::GetEntry(entry) is called and entry refers to an; /// entry in the 3rd file, for example, this forces the tree headers in the; /// first and second file t",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TChain.cxx:3220,Depend,Depending,3220,tree/tree/src/TChain.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TChain.cxx,1,['Depend'],['Depending']
Integrability,"00; /** \class TMultiDimFit; \ingroup Hist. Multidimensional Fits in ROOT.; ## Overview; A common problem encountered in different fields of applied science is; to find an expression for one physical quantity in terms of several; others, which are directly measurable. An example in high energy physics is the evaluation of the momentum of; a charged particle from the observation of its trajectory in a magnetic; field. The problem is to relate the momentum of the particle to the; observations, which may consists of positional measurements at; intervals along the particle trajectory. The exact functional relationship between the measured quantities; (e.g., the space-points) and the dependent quantity (e.g., the; momentum) is in general not known, but one possible way of solving the; problem, is to find an expression which reliably approximates the; dependence of the momentum on the observations. This explicit function of the observations can be obtained by a; <I>least squares</I> fitting procedure applied to a representative; sample of the data, for which the dependent quantity (e.g., momentum); and the independent observations are known. The function can then be; used to compute the quantity of interest for new observations of the; independent variables. This class <TT>TMultiDimFit</TT> implements such a procedure in; ROOT. It is largely based on the CERNLIB MUDIFI package [2].; Though the basic concepts are still sound, and; therefore kept, a few implementation details have changed, and this; class can take advantage of MINUIT [4] to improve the errors; of the fitting, thanks to the class TMinuit. In [5] and [6] H. Wind demonstrates the utility; of this procedure in the context of tracking, magnetic field; parameterisation, and so on. The outline of the method used in this; class is based on Winds discussion, and I refer these two excellents; text for more information. And example of usage is given in multidimfit.C. ## The Method; Let \f$ D \f$ by the dependent quant",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TMultiDimFit.cxx:1142,depend,dependent,1142,hist/hist/src/TMultiDimFit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TMultiDimFit.cxx,1,['depend'],['dependent']
Integrability,"01, 12910409, 6423113, 3007856, 2818747, 4314113, 4492076,; 1318301, 5699478, 6593587, 9969727, 5266214, 2951996, 5987580, 974989,; 1796619, 2643085, 1324575, 8707739, 2009671, 19541453, 9380884, 646844,; 11542645, 3687050, 3825657, 12604767, 1053209, 4561242, 812383, 6296254,; 24782302, 2784572, 621760, 7882590, 6664195, 1819777, 5654774, 544270; };. Double_t lon1 = -130;; Double_t lon2 = -65;; Double_t lat1 = 24;; Double_t lat2 = 50;; auto p = new TH2Poly(""USA"",""USA Population"",lon1,lon2,lat1,lat2);. TFile::SetCacheFileDir(""."");; auto f = TFile::Open(""http://root.cern/files/usa.root"", ""CACHEREAD"");. TMultiGraph *mg;; TKey *key;; TIter nextkey(gDirectory->GetListOfKeys());; while ((key = (TKey*)nextkey())) {; TObject *obj = key->ReadObj();; if (obj->InheritsFrom(""TMultiGraph"")) {; mg = (TMultiGraph*)obj;; bin = p->AddBin(mg);; }; }. for (i=0; i<nx; i++) p->Fill(states[i], pop[i]);. gStyle->SetOptStat(11);; p->Draw(""COLZ L"");; }; End_Macro. `TH2Poly` histograms can also be plotted using the GL interface using; the option ""GLLEGO"". \since **ROOT version 6.09/01**. In some cases it can be useful to not draw the empty bins. the option ""0""; combined with the option ""COL"" et COLZ allows to do that. Begin_Macro(source); {; auto chc = new TCanvas(""chc"",""chc"",600,400);. auto hc = new TH2Poly();; hc->Honeycomb(0,0,.1,25,25);; hc->SetName(""hc"");; hc->SetTitle(""Option COLZ 0"");; TRandom ran;; for (int i = 0; i<300; i++) hc->Fill(ran.Gaus(2.,1), ran.Gaus(2.,1));; hc->Draw(""colz 0"");; }; End_Macro. \anchor HP21; ### The SPEC option. This option allows to use the `TSpectrum2Painter` tools. See the full; documentation in `TSpectrum2Painter::PaintSpectrum`. \anchor HP22; ### Option ""Z"" : Adding the color palette on the right side of the pad. When this option is specified, a color palette with an axis indicating the value; of the corresponding color is drawn on the right side of the picture. In case,; not enough space is left, one can increase the size of the right margin by; callin",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:86807,interface,interface,86807,hist/histpainter/src/THistPainter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx,1,['interface'],['interface']
Integrability,"1; /// A good description of the Kolmogorov test can be seen at:; /// http://www.itl.nist.gov/div898/handbook/eda/section3/eda35g.htm; ///; /// NOTE2; /// see also alternative function TH1::Chi2Test; /// The Kolmogorov test is assumed to give better results than Chi2Test; /// in case of histograms with low statistics.; ///; /// NOTE3 (Jan Conrad, Fred James); /// ""The returned value PROB is calculated such that it will be; /// uniformly distributed between zero and one for compatible histograms,; /// provided the data are not binned (or the number of bins is very large; /// compared with the number of events). Users who have access to unbinned; /// data and wish exact confidence levels should therefore not put their data; /// into histograms, but should call directly TMath::KolmogorovTest. On; /// the other hand, since TH1 is a convenient way of collecting data and; /// saving space, this function has been provided. However, the values of; /// PROB for binned data will be shifted slightly higher than expected,; /// depending on the effects of the binning. For example, when comparing two; /// uniform distributions of 500 events in 100 bins, the values of PROB,; /// instead of being exactly uniformly distributed between zero and one, have; /// a mean value of about 0.56. We can apply a useful; /// rule: As long as the bin width is small compared with any significant; /// physical effect (for example the experimental resolution) then the binning; /// cannot have an important effect. Therefore, we believe that for all; /// practical purposes, the probability value PROB is calculated correctly; /// provided the user is aware that:; ///; /// 1. The value of PROB should not be expected to have exactly the correct; /// distribution for binned data.; /// 2. The user is responsible for seeing to it that the bin widths are; /// small compared with any physical phenomena of interest.; /// 3. The effect of binning (if any) is always to make the value of PROB; /// slightly too bi",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:2760,depend,depending,2760,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,1,['depend'],['depending']
Integrability,"2, trap, gtra or para - 1,2,3 means X,Y,Z; for; tube, tubs, cone, cons - 1 means Rxy, 2 means phi and 3 means Z; for pcon and; pgon - 2 means phi and 3 means Z; for spheres 1 means R and 2 means phi.; In fact, the division operation has the same effect as positioning volumes; in a given order inside the divided container - the advantage being that the; navigation in such a structure is much faster. When a volume is divided, a; volume family corresponding to the slices is created. In case all slices can; be represented by a single shape, only one volume is added to the family and; positioned N times inside the divided volume, otherwise, each slice will be; represented by a distinct volume in the family.; Divisions can be also performed in a given range of one axis. For that, one; have to specify also the starting coordinate value and the step:. ~~~ {.cpp}; TGeoVolume *slicex = box->Divide(""SLICEX"", 1, N, start, step);; ~~~. A check is always done on the resulting division range : if not fitting into; the container limits, an error message is posted. If we will browse the divided; volume we will notice that it will contain N nodes starting with index 1 upto; N. The first one has the lower X limit at START position, while the last one; will have the upper X limit at START+N*STEP. The resulting slices cannot; be positioned inside an other volume (they are by default positioned inside the; divided one) but can be further divided and may contain other volumes:. ~~~ {.cpp}; TGeoVolume *slicey = slicex->Divide(""SLICEY"", 2, N1);; slicey->AddNode(other_vol, index, some_matrix);; ~~~. When doing that, we have to remember that SLICEY represents a family, therefore; all members of the family will be divided on Y and the other volume will be; added as node inside all.; In the example above all the resulting slices had the same shape as the; divided volume (box). This is not always the case. For instance, dividing a; volume with TUBE shape on PHI axis will create equal slices havi",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoVolume.cxx:15123,message,message,15123,geom/geom/src/TGeoVolume.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoVolume.cxx,1,['message'],['message']
Integrability,"2010 Aaron Spike, https://github.com/acspike; * 2012 Willow Systems Corporation, https://github.com/willowsystems; * 2012 Pablo Hess, https://github.com/pablohess; * 2012 Florian Jenett, https://github.com/fjenett; * 2013 Warren Weckesser, https://github.com/warrenweckesser; * 2013 Youssef Beddad, https://github.com/lifof; * 2013 Lee Driscoll, https://github.com/lsdriscoll; * 2013 Stefan Slonevskiy, https://github.com/stefslon; * 2013 Jeremy Morel, https://github.com/jmorel; * 2013 Christoph Hartmann, https://github.com/chris-rock; * 2014 Juan Pablo Gaviria, https://github.com/juanpgaviria; * 2014 James Makes, https://github.com/dollaruw; * 2014 Diego Casorran, https://github.com/diegocr; * 2014 Steven Spungin, https://github.com/Flamenco; * 2014 Kenneth Glassey, https://github.com/Gavvers; *; * Permission is hereby granted, free of charge, to any person obtaining; * a copy of this software and associated documentation files (the; * ""Software""), to deal in the Software without restriction, including; * without limitation the rights to use, copy, modify, merge, publish,; * distribute, sublicense, and/or sell copies of the Software, and to; * permit persons to whom the Software is furnished to do so, subject to; * the following conditions:; *; * The above copyright notice and this permission notice shall be; * included in all copies or substantial portions of the Software.; *; * THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND,; * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF; * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND; * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE; * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION; * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION; * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.; *; * Contributor(s):; * siefkenj, ahwolf, rickygu, Midnith, saintclair, eaparango,; * kim3er, mfo, alnorth, Flamenco; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:2110,CONTRACT,CONTRACT,2110,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,3,['CONTRACT'],['CONTRACT']
Integrability,"3(3,4,5));; ~~~. It is possible to find a unit vector and an angle, which describe the; same rotation as the current one:. ~~~; Double_t angle;; TVector3 axis;; r.GetAngleAxis(angle,axis);; ~~~. ### Rotation of local axes; Member function RotateAxes() adds a rotation of local axes to; the current rotation and returns the result:. ~~~; TVector3 newX(0,1,0);; TVector3 newY(0,0,1);; TVector3 newZ(1,0,0);; a.RotateAxes(newX,newY,newZ);; ~~~. Member functions ThetaX(), ThetaY(), ThetaZ(),; PhiX(), PhiY(),PhiZ() return azimuth and polar; angles of the rotated axes:. ~~~; Double_t tx,ty,tz,px,py,pz;; tx= a.ThetaX();; ...; pz= a.PhiZ();; ~~~. ### Setting The Rotations; The member function SetToIdentity() will set the rotation object; to the identity (no rotation). With a minor caveat, the Euler angles of the rotation may be set using; SetXEulerAngles() or individually set with SetXPhi(),; SetXTheta(), and SetXPsi(). These routines set the Euler; angles using the X-convention which is defined by a rotation about the Z-axis,; about the new X-axis, and about the new Z-axis. This is the convention used; in Landau and Lifshitz, Goldstein and other common physics texts. The; Y-convention Euler angles can be set with SetYEulerAngles(),; SetYPhi(), SetYTheta(), and SetYPsi(). The caveat; is that Euler angles usually define the rotation of the new coordinate system; with respect to the original system, however, the TRotation class specifies; the rotation of the object in the original system (an active rotation). To; recover the usual Euler rotations (ie. rotate the system not the object), you; must take the inverse of the rotation. The member functions SetXAxis(), SetYAxis(), and; SetZAxis() will create a rotation which rotates the requested axis; of the object to be parallel to a vector. If used with one argument, the; rotation about that axis is arbitrary. If used with two arguments, the; second variable defines the XY, YZ, or ZX; respectively. ### Inverse rotation. ~~~; TRotation",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/physics/src/TRotation.cxx:2932,rout,routines,2932,math/physics/src/TRotation.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/physics/src/TRotation.cxx,1,['rout'],['routines']
Integrability,"4 1996/09/28 16:15:24 rws $; *; * Copyright 1992 Network Computing Devices, Inc.; *; * Permission to use, copy, modify, and distribute this software and its; * documentation for any purpose and without fee is hereby granted, provided; * that the above copyright notice appear in all copies and that both that; * copyright notice and this permission notice appear in supporting; * documentation, and that the name of Network Computing Devices may not be; * used in advertising or publicity pertaining to distribution of the software; * without specific, written prior permission. Network Computing Devices makes; * no representations about the suitability of this software for any purpose.; * It is provided ``as is'' without express or implied warranty.; *; * NETWORK COMPUTING DEVICES DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS; * SOFTWARE, INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS,; * IN NO EVENT SHALL NETWORK COMPUTING DEVICES BE LIABLE FOR ANY SPECIAL,; * INDIRECT OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM; * LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE; * OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR; * PERFORMANCE OF THIS SOFTWARE.; *; * Author: Jim Fulton; * Network Computing Devices, Inc.; *; * Simple if statement processor; *; * This module can be used to evaluate string representations of C language; * if constructs. It accepts the following grammar:; *; * EXPRESSION := VALUE; * | VALUE BINOP EXPRESSION; * | VALUE '?' EXPRESSION ':' EXPRESSION; *; * VALUE := '(' EXPRESSION ')'; * | '!' VALUE; * | '-' VALUE; * | '~' VALUE; * | 'defined' '(' variable ')'; * | variable; * | number; *; * BINOP := '*' | '/' | '%'; * | '+' | '-'; * | '<<' | '>>'; * | '<' | '>' | '<=' | '>='; * | '==' | '!='; * | '&' | '^' | '|'; * | '&&' | '||'; *; * The normal C order of precedence is supported.; *; *; * External Entry Points:; *; * ParseIfExpression parse a string for #if; */; /* $XFree",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/misc/rmkdepend/ifparser.h:1155,CONTRACT,CONTRACT,1155,misc/rmkdepend/ifparser.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/misc/rmkdepend/ifparser.h,1,['CONTRACT'],['CONTRACT']
Integrability,"6); // |.(VLAs)............................| (size of this area is unknown at; // |...................................| compile time); // |-----------------------------------| <- sp; // | | Lower address; //; //; // To access the data in a frame, at-compile time, a constant offset must be; // computable from one of the pointers (fp, bp, sp) to access it. The size; // of the areas with a dotted background cannot be computed at compile-time; // if they are present, making it required to have all three of fp, bp and; // sp to be set up to be able to access all contents in the frame areas,; // assuming all of the frame areas are non-empty.; //; // For most functions, some of the frame areas are empty. For those functions,; // it may not be necessary to set up fp or bp:; // * A base pointer is definitely needed when there are both VLAs and local; // variables with more-than-default alignment requirements.; // * A frame pointer is definitely needed when there are local variables with; // more-than-default alignment requirements.; //; // In some cases when a base pointer is not strictly needed, it is generated; // anyway when offsets from the frame pointer to access local variables become; // so large that the offset can't be encoded in the immediate fields of loads; // or stores.; //; // The frame pointer might be chosen to be r7 or r11, depending on the target; // architecture and operating system. See ARMSubtarget::getFramePointerReg for; // details.; //; // Outgoing function arguments must be at the bottom of the stack frame when; // calling another function. If we do not have variable-sized stack objects, we; // can allocate a ""reserved call frame"" area at the bottom of the local; // variable area, large enough for all outgoing calls. If we do have VLAs, then; // the stack pointer must be decremented and incremented around each call to; // make space for the arguments below the VLAs.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMFrameLowering.cpp:3801,depend,depending,3801,interpreter/llvm-project/llvm/lib/Target/ARM/ARMFrameLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMFrameLowering.cpp,1,['depend'],['depending']
Integrability,"8,""1) C(x) = d #sqrt{#frac{2}{#lambdaD}} #int^{x}_{0}cos(#frac{#pi}{2}t^{2})dt"");; Tl.DrawLatex(0.1,0.6,""2) C(x) = d #sqrt{#frac{2}{#lambdaD}} #int^{x}cos(#frac{#pi}{2}t^{2})dt"");; Tl.DrawLatex(0.1,0.4,""3) R = |A|^{2} = #frac{1}{2}(#[]{#frac{1}{2}+C(V)}^{2}+#[]{#frac{1}{2}+S(V)}^{2})"");; Tl.DrawLatex(0.1,0.2,""4) F(t) = #sum_{i=-#infty}^{#infty}A(i)cos#[]{#frac{i}{t+i}}"");; return ex1;; }; End_Macro; Begin_Macro(source); {; TCanvas ex2(""ex2"",""Latex"",500,300);; TLatex Tl;; Tl.SetTextAlign(23);; Tl.SetTextSize(0.08);; Tl.DrawLatex(0.5,0.95,""e^{+}e^{-}#rightarrowZ^{0}#rightarrowI#bar{I}, q#bar{q}"");; Tl.DrawLatex(0.5,0.75,""|#vec{a}#bullet#vec{b}|=#Sigmaa^{i}_{jk}+b^{bj}_{i}"");; Tl.DrawLatex(0.5,0.5,""i(#partial_{#mu}#bar{#psi}#gamma^{#mu}+m#bar{#psi}=0#Leftrightarrow(#Box+m^{2})#psi=0"");; Tl.DrawLatex(0.5,0.3,""L_{em}=eJ^{#mu}_{em}A_{#mu} , J^{#mu}_{em}=#bar{I}#gamma_{#mu}I , M^{j}_{i}=#SigmaA_{#alpha}#tau^{#alphaj}_{i}"");; return ex2;; }; End_Macro; Begin_Macro(source); {; TCanvas ex3(""ex3"",""Latex"",500,300);; TPaveText pt(.1,.1,.9,.9);; pt.AddText(""#frac{2s}{#pi#alpha^{2}} #frac{d#sigma}{dcos#theta} (e^{+}e^{-} #rightarrow f#bar{f} ) = "");; pt.AddText(""#left| #frac{1}{1 - #Delta#alpha} #right|^{2} (1+cos^{2}#theta"");; pt.AddText(""+ 4 Re #left{ #frac{2}{1 - #Delta#alpha} #chi(s) #[]{#hat{g}_{#nu}^{e}#hat{g}_{#nu}^{f} (1 + cos^{2}#theta) + 2 #hat{g}_{a}^{e}#hat{g}_{a}^{f} cos#theta) } #right}"");; pt.SetLabel(""Born equation"");; pt.Draw();; return ex3;; }; End_Macro. \anchor L14; ## Interface to TMathText. The class `TMathText` is a TeX math formulae interpreter. It uses plain; TeX syntax and uses ""\\"" as control instead of ""#"". If a piece of text containing; ""\\"" is given to `TLatex` then `TMathText` is automatically invoked.; Therefore, as histograms' titles, axis titles, labels etc ... are drawn using; `TLatex`, the `TMathText` syntax can be used for them also.; */; ////////////////////////////////////////////////////////////////////////////////; /// Default constructor.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/graf/src/TLatex.cxx:12542,Interface,Interface,12542,graf2d/graf/src/TLatex.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/graf/src/TLatex.cxx,1,['Interface'],['Interface']
Integrability,":. BIT_DStream_t DStream; // Stream context; FSE_DState_t DState; // State context. Multiple ones are possible; FSE_DTable* DTablePtr; // Decoding table, provided by FSE_buildDTable(). The first thing to do is to init the bitStream.; errorCode = BIT_initDStream(&DStream, srcBuffer, srcSize);. You should then retrieve your initial state(s); (in reverse flushing order if you have several ones) :; errorCode = FSE_initDState(&DState, &DStream, DTablePtr);. You can then decode your data, symbol after symbol.; For information the maximum number of bits read by FSE_decodeSymbol() is 'tableLog'.; Keep in mind that symbols are decoded in reverse order, like a LIFO stack (last in, first out).; unsigned char symbol = FSE_decodeSymbol(&DState, &DStream);. You can retrieve any bitfield you eventually stored into the bitStream (in reverse order); Note : maximum allowed nbBits is 25, for 32-bits compatibility; size_t bitField = BIT_readBits(&DStream, nbBits);. All above operations only read from local register (which size depends on size_t).; Refueling the register from memory is manually performed by the reload method.; endSignal = FSE_reloadDStream(&DStream);. BIT_reloadDStream() result tells if there is still some more data to read from DStream.; BIT_DStream_unfinished : there is still some data left into the DStream.; BIT_DStream_endOfBuffer : Dstream reached end of buffer. Its container may no longer be completely filled.; BIT_DStream_completed : Dstream reached its exact end, corresponding in general to decompression completed.; BIT_DStream_tooFar : Dstream went too far. Decompression result is corrupted. When reaching end of buffer (BIT_DStream_endOfBuffer), progress slowly, notably if you decode multiple symbols per loop,; to properly detect the exact end of stream.; After each decoded symbol, check if DStream is fully consumed using this simple test :; BIT_reloadDStream(&DStream) >= BIT_DStream_completed. When it's done, verify decompression is fully completed, by checking",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/fse.h:1292,depend,depends,1292,builtins/zstd/common/fse.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/fse.h,1,['depend'],['depends']
Integrability,"; * LZ4 auto-framing library; * Copyright (C) 2011-2016, Yann Collet.; *; * BSD 2-Clause License (http://www.opensource.org/licenses/bsd-license.php); *; * Redistribution and use in source and binary forms, with or without; * modification, are permitted provided that the following conditions are; * met:; *; * - Redistributions of source code must retain the above copyright; * notice, this list of conditions and the following disclaimer.; * - Redistributions in binary form must reproduce the above; * copyright notice, this list of conditions and the following disclaimer; * in the documentation and/or other materials provided with the; * distribution.; *; * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS; * ""AS IS"" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT; * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR; * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT; * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,; * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT; * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,; * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY; * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT; * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE; * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.; *; * You can contact the author at :; * - LZ4 homepage : http://www.lz4.org; * - LZ4 source repository : https://github.com/lz4/lz4; */; /* LZ4F is a stand-alone API to create LZ4-compressed Frames; * in full conformance with specification v1.6.1 .; * This library rely upon memory management capabilities (malloc, free); * provided either by <stdlib.h>,; * or redirected towards another library of user's choice; * (see Memory Routines below).; */; /*-************************************; * Compiler Options; **************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4frame.c:1270,CONTRACT,CONTRACT,1270,builtins/lz4/lz4frame.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4frame.c,2,"['CONTRACT', 'Rout']","['CONTRACT', 'Routines']"
Integrability,"; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Classes: PDEFoamDensityBase *; * *; * *; * Description: *; * This class provides an interface between the Binary search tree *; * and the PDEFoam object. In order to build-up the foam one needs to *; * calculate the density of events at a given point (sampling during *; * Foam build-up). The function PDEFoamDensityBase::Density() does this job. It *; * uses a binary search tree, filled with training events, in order to *; * provide this density. *; * *; * Authors (alphabetical): *; * Tancredi Carli - CERN, Switzerland *; * Dominik Dannheim - CERN, Switzerland *; * S. Jadach - Institute of Nuclear Physics, Cracow, Poland *; * Alexander Voigt - TU Dresden, Germany *; * Peter Speckmayer - CERN, Switzerland *; * *; * Copyright (c) 2008, 2010: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::PDEFoamDensityBase; \ingroup TMVA. This is an abstract class, which provides an interface for a; PDEFoam density estimator. Derived classes have to implement the; Density(...) function, which returns the density of a certain; quantity at a given phase-space point during the foam build-up. Variants of PDEFoamDensityBase are:. - PDEFoamEventDensity; - PDEFoamDiscriminantDensity; - PDEFoamTargetDensity; - PDEFoamDecisionTreeDensity. Usage:. The user has to instantiate a child class of PDEFoamDensityBase and; set the pointer to the owner, which is a PDEFoam object:. PDEFoamDensityBase *dens = new MyDensity();; pdefoam->SetDensity(dens);. Afterwards the binary search tree should be filled with TMVA; events, by either using:. pdefoam->FillBinarySearchTree(event);. or:. dens->FillBinarySearchTree(event);; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/PDEFoamDensityBase.cxx:1436,interface,interface,1436,tmva/tmva/src/PDEFoamDensityBase.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/PDEFoamDensityBase.cxx,1,['interface'],['interface']
Integrability,"; *; * BidirMMapPipe* spawnChild(int (*childexec)(BidirMMapPipe&)); * {; * BidirMMapPipe *p = new BidirMMapPipe();; * if (p->isChild()) {; * int retVal = childexec(*p);; * delete p;; * std::exit(retVal);; * }; * return p;; * }; *; * int main(); * {; * std::cout << ""[PARENT]: simple challenge-response test, one child:"" <<; * std::endl;; * BidirMMapPipe* pipe = spawnChild(simplechild);; * for (int i = 0; i < 5; ++i) {; * std::string str(""What shall we do with a drunken sailor..."");; * *pipe << str << BidirMMapPipe::flush;; * if (!*pipe) return -1;; * std::cout << ""[PARENT]: wrote: "" << str << std::endl;; * *pipe >> str;; * if (!*pipe) return -1;; * std::cout << ""[PARENT]: read: "" << str << std::endl;; * }; * // ask child to shut down; * pipe << """" << BidirMMapPipe::flush;; * // wait for it to see the shutdown request; * std::string s;; * pipe >> s;; * std::cout << ""[PARENT]: exit status of child: "" << pipe->close() <<; * std::endl;; * delete pipe;; * return 0;; * }; * @endcode; *; * When designing your own protocols to use over the pipe, there are a few; * things to bear in mind:; * - Do as http does: When building a request, send all the options and; * properties of that request with the request itself in a single go (one; * flush). Then, the server has everything it needs, and hopefully, it'll; * shut up for a while and to let the client do something useful in the; * meantime... The same goes when the server replies to the request: include; * everything there is to know about the result of the request in the reply.; * - The expensive operation should be the request that is made, all other; * operations should somehow be formulated as options or properties to that; * request.; * - Include a shutdown handshake in whatever protocol you send over the; * pipe. That way, you can shut things down in a controlled way. Otherwise,; * and depending on your OS's scheduling quirks, you may catch a SIGPIPE if; * one end closes its pipe while the other is still trying to read.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/BidirMMapPipe.h:7894,protocol,protocol,7894,roofit/roofitcore/src/BidirMMapPipe.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/BidirMMapPipe.h,2,"['depend', 'protocol']","['depending', 'protocol']"
Integrability,"; /// Consult RooFit plotting tutorial for further explanation of meaning & use of this technique; ///; /// <tr><td> `ProjWData(const RooArgSet& s, const RooAbsData& d)` <td> As above but only consider subset 's' of observables in dataset 'd' for projection through data averaging; ///; /// <tr><td> `ProjectionRange(const char* rn)` <td> Override default range of projection integrals to a different range specified by given range name.; /// This technique allows you to project a finite width slice in a real-valued observable; ///; /// <tr><td> `NumCPU(Int_t ncpu)` <td> Number of CPUs to use simultaneously to calculate data-weighted projections (only in combination with ProjWData); ///; ///; /// <tr><th><th> Misc content control; /// <tr><td> `PrintEvalErrors(Int_t numErr)` <td> Control number of p.d.f evaluation errors printed per curve. A negative; /// value suppress output completely, a zero value will only print the error count per p.d.f component,; /// a positive value is will print details of each error up to numErr messages per p.d.f component.; ///; /// <tr><td> `EvalErrorValue(double value)` <td> Set curve points at which (pdf) evaluation errors occur to specified value. By default the; /// function value is plotted.; ///; /// <tr><td> `Normalization(double scale, ScaleType code)` <td> Adjust normalization by given scale factor. Interpretation of number depends on code:; /// - Relative: relative adjustment factor for a normalized function,; /// - NumEvent: scale to match given number of events.; /// - Raw: relative adjustment factor for an un-normalized function.; ///; /// <tr><td> `Name(const chat* name)` <td> Give curve specified name in frame. Useful if curve is to be referenced later; ///; /// <tr><td> `Asymmetry(const RooCategory& c)` <td> Show the asymmetry of the PDF in given two-state category [F(+)-F(-)] / [F(+)+F(-)] rather than; /// the PDF projection. Category must have two states with indices -1 and +1 or three states with; /// indices -1,0 and +1.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx:3538,message,messages,3538,roofit/roofitcore/src/RooAbsReal.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx,1,['message'],['messages']
Integrability,"; /// struct _prop_t {; /// const char *name;; /// char *attributes;; /// }; /// struct _prop_list_t {; /// uint32_t entsize; // sizeof(struct _prop_t); /// uint32_t count_of_properties;; /// struct _prop_t prop_list[count_of_properties];; /// }; /// struct _protocol_t;; /// struct _protocol_list_t {; /// long protocol_count; // Note, this is 32/64 bit; /// struct _protocol_t * protocol_list[protocol_count];; /// }; /// struct _objc_method {; /// SEL _cmd;; /// const char *method_type;; /// char *_imp;; /// }; /// struct _method_list_t {; /// uint32_t entsize; // sizeof(struct _objc_method); /// uint32_t method_count;; /// struct _objc_method method_list[method_count];; /// }; /// struct _protocol_t {; /// id isa; // NULL; /// const char *protocol_name;; /// const struct _protocol_list_t * protocol_list; // super protocols; /// const struct method_list_t *instance_methods;; /// const struct method_list_t *class_methods;; /// const struct method_list_t *optionalInstanceMethods;; /// const struct method_list_t *optionalClassMethods;; /// const struct _prop_list_t * properties;; /// const uint32_t size; // sizeof(struct _protocol_t); /// const uint32_t flags; // = 0; /// const char ** extendedMethodTypes;; /// }; /// struct _ivar_t {; /// unsigned long int *offset; // pointer to ivar offset location; /// const char *name;; /// const char *type;; /// uint32_t alignment;; /// uint32_t size;; /// }; /// struct _ivar_list_t {; /// uint32 entsize; // sizeof(struct _ivar_t); /// uint32 count;; /// struct _ivar_t list[count];; /// }; /// struct _class_ro_t {; /// uint32_t flags;; /// uint32_t instanceStart;; /// uint32_t instanceSize;; /// uint32_t reserved; // only when building for 64bit targets; /// const uint8_t *ivarLayout;; /// const char *name;; /// const struct _method_list_t *baseMethods;; /// const struct _protocol_list_t *baseProtocols;; /// const struct _ivar_list_t *ivars;; /// c",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/Rewrite/RewriteModernObjC.cpp:911,protocol,protocols,911,interpreter/llvm-project/clang/lib/Frontend/Rewrite/RewriteModernObjC.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/Rewrite/RewriteModernObjC.cpp,1,['protocol'],['protocols']
Integrability,"; \kappa, \beta^2)\f$; for fixed values of \f$\kappa\f$ and \f$\beta^2\f$.; Changing these values is computationally expensive. The parameter \f$\kappa\f$ should be in the range \f$0.01 \le \kappa \le 10\f$.; In contrast to the CERNLIB implementation, all values of \f$\kappa \ge 0.001\f$ may be used,; but may result in slower running and/or inaccurate results. The parameter \f$\beta^2\f$ must be in the range \f$0 \le \beta^2 \le 1\f$. Two parameters which are fixed in the CERNLIB implementation may be set by the user:; - epsilonPM corresponds to \f$\epsilon^+ = \epsilon^-\f$ in Eqs. (2.1) and (2.2) of Schorr's paper.; epsilonPM gives an estimate on the integral of the cumulative distribution function; outside the range \f$\lambda_{min} \le \lambda \le \lambda_{max}\f$; where the approximation is valid.; Thus, it determines the support of the approximation used here (called $T_0 - T_1$ in the paper).; Schorr recommends \f$\epsilon^+ = \epsilon^- = 5\cdot 10^{-4}\f$.; The code from CERNLIB has been extended such that also smaller values are possible. - epsilon corresponds to \f$\epsilon\f$ in Eq. (4.10) of Schorr's paper.; It determines the accuracy of the series expansion.; Schorr recommends \f$\epsilon = 10^{-5}\f$. For the quantile calculation, the algorithm given by Schorr is not used,; because it turns out to be very slow and still inaccurate.; Instead, an initial estimate is calculated based on a pre-calculated table,; which is subsequently improved by Newton iterations. While the CERNLIB implementation calculates at most 156 terms in the series expansion; for the pdf and cdf calculation, this class calculates up to 500 terms, depending; on the values of epsilonPM and epsilon. Average times on a Pentium Core2 Duo P8400 2.26GHz:; - 38us per call to SetKappaBeta2 or constructor; - 0.49us per call to Pdf, Cdf; - 8.2us per first call to Quantile after SetKappaBeta2 or constructor; - 0.83us per subsequent call to Quantile. Benno List, June 2010. @ingroup StatFunc; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/VavilovAccurate.h:3839,depend,depending,3839,math/mathmore/inc/Math/VavilovAccurate.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/VavilovAccurate.h,1,['depend'],['depending']
Integrability,"; int method,; int windowBits,; int memLevel,; int strategy));. This is another version of deflateInit with more compression options. The; fields next_in, zalloc, zfree and opaque must be initialized before by the; caller. The method parameter is the compression method. It must be Z_DEFLATED in; this version of the library. The windowBits parameter is the base two logarithm of the window size; (the size of the history buffer). It should be in the range 8..15 for this; version of the library. Larger values of this parameter result in better; compression at the expense of memory usage. The default value is 15 if; deflateInit is used instead. windowBits can also be -8..-15 for raw deflate. In this case, -windowBits; determines the window size. deflate() will then generate raw deflate data; with no zlib header or trailer, and will not compute an adler32 check value. windowBits can also be greater than 15 for optional gzip encoding. Add; 16 to windowBits to write a simple gzip header and trailer around the; compressed data instead of a zlib wrapper. The gzip header will have no; file name, no extra data, no comment, no modification time (set to zero), no; header crc, and the operating system will be set to 255 (unknown). If a; gzip stream is being written, strm->adler is a crc32 instead of an adler32. The memLevel parameter specifies how much memory should be allocated; for the internal compression state. memLevel=1 uses minimum memory but is; slow and reduces compression ratio; memLevel=9 uses maximum memory for; optimal speed. The default value is 8. See zconf.h for total memory usage; as a function of windowBits and memLevel. The strategy parameter is used to tune the compression algorithm. Use the; value Z_DEFAULT_STRATEGY for normal data, Z_FILTERED for data produced by a; filter (or predictor), Z_HUFFMAN_ONLY to force Huffman encoding only (no; string match), or Z_RLE to limit match distances to one (run-length; encoding). Filtered data consists mostly of small valu",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:1582,wrap,wrapper,1582,builtins/zlib/zlib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h,1,['wrap'],['wrapper']
Integrability,"; int method,; int windowBits,; int memLevel,; int strategy));. This is another version of deflateInit with more compression options. The; fields next_in, zalloc, zfree and opaque must be initialized before by; the caller. The method parameter is the compression method. It must be Z_DEFLATED in; this version of the library. The windowBits parameter is the base two logarithm of the window size; (the size of the history buffer). It should be in the range 8..15 for this; version of the library. Larger values of this parameter result in better; compression at the expense of memory usage. The default value is 15 if; deflateInit is used instead. windowBits can also be -8..-15 for raw deflate. In this case, -windowBits; determines the window size. deflate() will then generate raw deflate data; with no zlib header or trailer, and will not compute an adler32 check value. windowBits can also be greater than 15 for optional gzip encoding. Add; 16 to windowBits to write a simple gzip header and trailer around the; compressed data instead of a zlib wrapper. The gzip header will have no; file name, no extra data, no comment, no modification time (set to zero),; no header crc, and the operating system will be set to 255 (unknown). If a; gzip stream is being written, strm->adler is a crc32 instead of an adler32. The memLevel parameter specifies how much memory should be allocated; for the internal compression state. memLevel=1 uses minimum memory but; is slow and reduces compression ratio; memLevel=9 uses maximum memory; for optimal speed. The default value is 8. See zconf.h for total memory; usage as a function of windowBits and memLevel. The strategy parameter is used to tune the compression algorithm. Use the; value Z_DEFAULT_STRATEGY for normal data, Z_FILTERED for data produced by a; filter (or predictor), Z_HUFFMAN_ONLY to force Huffman encoding only (no; string match), or Z_RLE to limit match distances to one (run-length; encoding). Filtered data consists mostly of small valu",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/zlib.h:1582,wrap,wrapper,1582,graf2d/asimage/src/libAfterImage/zlib/zlib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/zlib.h,1,['wrap'],['wrapper']
Integrability,";; // t5 = g(t4);; // t6 = op(t2, t5); // cond_branch <Loop>; //; // This can be converted to; // t00 = a[0];; // t10 = f(t00);; // t20 = g(t10);; // Loop:; // t2 = t20;; // t3 = a[i+1];; // t4 = f(t3);; // t5 = g(t4);; // t6 = op(t2, t5); // t20 = t5; // cond_branch <Loop>; //; // SROA does a good job of reusing a[i+1] as a[i] in the next iteration.; // Such a loop comes to this pass in the following form.; //; // LoopPreheader:; // X0 = a[0];; // Loop:; // X2 = PHI<(X0, LoopPreheader), (X1, Loop)>; // t1 = f(X2) <-- I1; // t2 = g(t1); // ...; // X1 = a[i+1]; // t4 = f(X1) <-- I2; // t5 = g(t4); // t6 = op(t2, t5); // cond_branch <Loop>; //; // In this pass, we look for PHIs such as X2 whose incoming values come only; // from the Loop Preheader and over the backedge and additionaly, both these; // values are the results of the same operation in terms of opcode. We call such; // a PHI node a dependence chain or DepChain. In this case, the dependence of X2; // over X1 is carried over only one iteration and so the DepChain is only one; // PHI node long.; //; // Then, we traverse the uses of the PHI (X2) and the uses of the value of the; // PHI coming over the backedge (X1). We stop at the first pair of such users; // I1 (of X2) and I2 (of X1) that meet the following conditions.; // 1. I1 and I2 are the same operation, but with different operands.; // 2. X2 and X1 are used at the same operand number in the two instructions.; // 3. All other operands Op1 of I1 and Op2 of I2 are also such that there is a; // a DepChain from Op1 to Op2 of the same length as that between X2 and X1.; //; // We then make the following transformation; // LoopPreheader:; // X0 = a[0];; // Y0 = f(X0);; // Loop:; // X2 = PHI<(X0, LoopPreheader), (X1, Loop)>; // Y2 = PHI<(Y0, LoopPreheader), (t4, Loop)>; // t1 = f(X2) <-- Will be removed by DCE.; // t2 = g(Y2); // ...; // X1 = a[i+1]; // t4 = f(X1); // t5 = g(t4); // t6 = op(t2, t5); // cond_branch <Loop>; //; // We proceed until we cannot find an",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonVectorLoopCarriedReuse.h:1848,depend,dependence,1848,interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonVectorLoopCarriedReuse.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonVectorLoopCarriedReuse.h,1,['depend'],['dependence']
Integrability,";; ehpad (bb2); // ...; // end_try; // catch ;; ehpad (bb3); // ...; // end_try; //; // Now if bar() throws, it is going to end up ip in bb2, not bb3, where it; // is supposed to end up. We solve this problem by wrapping the mismatching; // call with an inner try-delegate that rethrows the exception to the right; // 'catch'.; //; // try; // try; // call @foo; // try ;; (new); // call @bar; // delegate 1 (bb3) ;; (new); // catch ;; ehpad (bb2); // ...; // end_try; // catch ;; ehpad (bb3); // ...; // end_try; //; // ---; // 2. The same as 1, but in this case an instruction unwinds to a caller; // function and not another EH pad.; //; // Example: we have the following CFG:; // bb0:; // call @foo ; if it throws, unwind to bb2; // bb1:; // call @bar ; if it throws, unwind to caller; // bb2 (ehpad):; // catch; // ...; //; // And the CFG is sorted in this order. Then after placing TRY markers, it; // will look like:; // try; // call @foo; // call @bar ;; if it throws, unwind to caller; // catch ;; ehpad (bb2); // ...; // end_try; //; // Now if bar() throws, it is going to end up ip in bb2, when it is supposed; // throw up to the caller. We solve this problem in the same way, but in this; // case 'delegate's immediate argument is the number of block depths + 1,; // which means it rethrows to the caller.; // try; // call @foo; // try ;; (new); // call @bar; // delegate 1 (caller) ;; (new); // catch ;; ehpad (bb2); // ...; // end_try; //; // Before rewriteDepthImmediates, delegate's argument is a BB. In case of the; // caller, it will take a fake BB generated by getFakeCallerBlock(), which; // will be converted to a correct immediate argument later.; //; // In case there are multiple calls in a BB that may throw to the caller, they; // can be wrapped together in one nested try-delegate scope. (In 1, this; // couldn't happen, because may-throwing instruction there had an unwind; // destination, i.e., it was an invoke before, and there could be only one; // invoke within a BB.)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyCFGStackify.cpp:3497,wrap,wrapped,3497,interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyCFGStackify.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyCFGStackify.cpp,1,['wrap'],['wrapped']
Integrability,"==- llvm/Support/DebugCounter.h - Debug counter support ------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; /// \file; /// This file provides an implementation of debug counters. Debug; /// counters are a tool that let you narrow down a miscompilation to a specific; /// thing happening.; ///; /// To give a use case: Imagine you have a file, very large, and you; /// are trying to understand the minimal transformation that breaks it. Bugpoint; /// and bisection is often helpful here in narrowing it down to a specific pass,; /// but it's still a very large file, and a very complicated pass to try to; /// debug. That is where debug counting steps in. You can instrument the pass; /// with a debug counter before it does a certain thing, and depending on the; /// counts, it will either execute that thing or not. The debug counter itself; /// consists of a skip and a count. Skip is the number of times shouldExecute; /// needs to be called before it returns true. Count is the number of times to; /// return true once Skip is 0. So a skip=47, count=2 ,would skip the first 47; /// executions by returning false from shouldExecute, then execute twice, and; /// then return false again.; /// Note that a counter set to a negative number will always execute.; /// For a concrete example, during predicateinfo creation, the renaming pass; /// replaces each use with a renamed use.; ////; /// If I use DEBUG_COUNTER to create a counter called ""predicateinfo"", and; /// variable name RenameCounter, and then instrument this renaming with a debug; /// counter, like so:; ///; /// if (!DebugCounter::shouldExecute(RenameCounter); /// <continue or return or whatever not executing looks like>; ///; /// Now I can, from the command line, ma",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/DebugCounter.h:1013,depend,depending,1013,interpreter/llvm-project/llvm/include/llvm/Support/DebugCounter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/DebugCounter.h,1,['depend'],['depending']
Integrability,"> Fit only data inside given range. A range named ""fit"" is created on the fly on all observables.; /// Multiple comma separated range names can be specified.; /// <tr><td> `NumCPU(int num)` <td> Parallelize NLL calculation on num CPUs; /// <tr><td> `Optimize(bool flag)` <td> Activate constant term optimization (on by default); /// <tr><td> `IntegrateBins()` <td> Integrate PDF within each bin. This sets the desired precision.; ///; /// <tr><th> <th> Options to control flow of fit procedure; /// <tr><td> `InitialHesse(bool flag)` <td> Flag controls if HESSE before MIGRAD as well, off by default; /// <tr><td> `Hesse(bool flag)` <td> Flag controls if HESSE is run after MIGRAD, on by default; /// <tr><td> `Minos(bool flag)` <td> Flag controls if MINOS is run after HESSE, on by default; /// <tr><td> `Minos(const RooArgSet& set)` <td> Only run MINOS on given subset of arguments; /// <tr><td> `Save(bool flag)` <td> Flag controls if RooFitResult object is produced and returned, off by default; /// <tr><td> `Strategy(Int_t flag)` <td> Set Minuit strategy (0 through 2, default is 1); ///; /// <tr><th> <th> Options to control informational output; /// <tr><td> `Verbose(bool flag)` <td> Flag controls if verbose output is printed (NLL, parameter changes during fit; /// <tr><td> `Timer(bool flag)` <td> Time CPU and wall clock consumption of fit steps, off by default; /// <tr><td> `PrintLevel(Int_t level)` <td> Set Minuit print level (-1 through 3, default is 1). At -1 all RooFit informational; /// messages are suppressed as well; /// <tr><td> `Warnings(bool flag)` <td> Enable or disable MINUIT warnings (enabled by default); /// <tr><td> `PrintEvalErrors(Int_t numErr)` <td> Control number of p.d.f evaluation errors printed per likelihood evaluation. A negative; /// value suppress output completely, a zero value will only print the error count per p.d.f component,; /// a positive value is will print details of each error up to numErr messages per p.d.f component.; /// </table>; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx:3150,message,messages,3150,roofit/roofitcore/src/RooAbsReal.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx,2,['message'],['messages']
Integrability,"@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooNumConvPdf.cxx; \class RooNumConvPdf; \ingroup Roofitcore. Numeric 1-dimensional convolution operator PDF. This class can convolve any PDF; with any other PDF using a straightforward numeric calculation of the; convolution integral; This class should be used as last resort as numeric convolution calculated; this way is computationally intensive and prone to stability fitting problems.; <b>The preferred way to compute numeric convolutions is RooFFTConvPdf</b>,; which calculates convolutions using Fourier Transforms (requires external free; FFTW3 package); RooNumConvPdf implements reasonable defaults that should convolve most; functions reasonably well, but results strongly depend on the shape of your; input PDFS so always check your result.; The default integration engine for the numeric convolution is the; adaptive Gauss-Kronrod method, which empirically seems the most robust; for this task. You can override the convolution integration settings via; the RooNumIntConfig object reference returned by the convIntConfig() member; function; By default the numeric convolution is integrated from -infinity to; +infinity through a <pre>x -> 1/x</pre> coordinate transformation of the; tails. For convolution with a very small bandwidth it may be; advantageous (for both CPU consumption and stability) if the; integration domain is limited to a finite range. The function; setConvolutionWindow(mean,width,scale) allows to set a sliding; window around the x value to be calculated taking a RooAbsReal; expression for an offset and a width to be taken around the ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumConvPdf.cxx:1390,depend,depend,1390,roofit/roofitcore/src/RooNumConvPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumConvPdf.cxx,1,['depend'],['depend']
Integrability,"Above line is not a doxygen comment; intentionally left blank ---; //; // Originally implemented in SyncDependenceAnalysis.cpp for DivergenceAnalysis.; //; // The SyncDependenceAnalysis is used in the UniformityAnalysis to model; // control-induced divergence in phi nodes.; //; // -- Reference --; // The algorithm is an extension of Section 5 of; //; // An abstract interpretation for SPMD divergence; // on reducible control flow graphs.; // Julian Rosemann, Simon Moll and Sebastian Hack; // POPL '21; //; //; // -- Sync dependence --; // Sync dependence characterizes the control flow aspect of the; // propagation of branch divergence. For example,; //; // %cond = icmp slt i32 %tid, 10; // br i1 %cond, label %then, label %else; // then:; // br label %merge; // else:; // br label %merge; // merge:; // %a = phi i32 [ 0, %then ], [ 1, %else ]; //; // Suppose %tid holds the thread ID. Although %a is not data dependent on %tid; // because %tid is not on its use-def chains, %a is sync dependent on %tid; // because the branch ""br i1 %cond"" depends on %tid and affects which value %a; // is assigned to.; //; //; // -- Reduction to SSA construction --; // There are two disjoint paths from A to X, if a certain variant of SSA; // construction places a phi node in X under the following set-up scheme.; //; // This variant of SSA construction ignores incoming undef values.; // That is paths from the entry without a definition do not result in; // phi nodes.; //; // entry; // / \; // A \; // / \ Y; // B C /; // \ / \ /; // D E; // \ /; // F; //; // Assume that A contains a divergent branch. We are interested; // in the set of all blocks where each block is reachable from A; // via two disjoint paths. This would be the set {D, F} in this; // case.; // To generally reduce this query to SSA construction we introduce; // a virtual variable x and assign to x different values in each; // successor block of A.; //; // entry; // / \; // A \; // / \ Y; // x = 0 x = 1 /; // \ / \ /; // D E; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/GenericUniformityImpl.h:1377,depend,dependent,1377,interpreter/llvm-project/llvm/include/llvm/ADT/GenericUniformityImpl.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/GenericUniformityImpl.h,3,['depend'],"['dependent', 'depends']"
Integrability,"AnalyticalIntegral()`, except code zero. The integration range for each dependent to be integrated can; be obtained from the dependent's proxy functions `min()` and; `max()`. Never call these proxy functions for any proxy not known to; be a dependent via the integration code. Doing so may be; ill-defined, e.g., in case the proxy holds a function, and will; trigger an assert. Integrated category dependents should always be; summed over all of their states. ### Direct generation of observables. Distributions for any PDF can be generated with the accept/reject method,; but for certain PDFs, more efficient methods may be implemented. To; implement direct generation of one or more observables, two; functions need to be implemented, similar to those for analytical; integrals:. ```; Int_t getGenerator(const RooArgSet& generateVars, RooArgSet& directVars); ```; and; ```; void generateEvent(Int_t code); ```. The first function advertises observables, for which distributions can be generated,; similar to the way analytical integrals are advertised. The second; function implements the actual generator for the advertised observables. The generated dependent values should be stored in the proxy; objects. For this, the assignment operator can be used (i.e. `xProxy; = 3.0` ). Never call assign to any proxy not known to be a dependent; via the generation code. Doing so may be ill-defined, e.g. in case; the proxy holds a function, and will trigger an assert. ### Batched function evaluations (Advanced usage). To speed up computations with large numbers of data events in unbinned fits,; it is beneficial to override `doEval()`. Like this, large spans of; computations can be done, without having to call `evaluate()` for each single data event.; `doEval()` should execute the same computation as `evaluate()`, but it; may choose an implementation that is capable of SIMD computations.; If doEval is not implemented, the classic and slower `evaluate()` will be; called for each data event.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx:5081,depend,dependent,5081,roofit/roofitcore/src/RooAbsPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx,2,['depend'],['dependent']
Integrability,"Authors: Kyle Cranmer 17/06/2009; /*************************************************************************; * Copyright (C) 1995-2008, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class RooStats::MCMCInterval; \ingroup Roostats. MCMCInterval is a concrete implementation of the RooStats::ConfInterval; interface. It takes as input Markov Chain of data points in the parameter; space generated by Monte Carlo using the Metropolis algorithm. From the Markov; Chain, the confidence interval can be determined in two ways:. #### Using a Kernel-Estimated PDF: (not the default method). A RooNDKeysPdf is constructed from the data set using adaptive kernel width.; With this RooNDKeysPdf F, we then integrate over the most likely domain in the; parameter space (tallest points in the posterior RooNDKeysPdf) until the target; confidence level is reached within an acceptable neighborhood as defined by; SetEpsilon(). More specifically: we calculate the following for different; cutoff values C until we reach the target confidence level: \f$\int_{ F >= C } F; d{normset} \f$.; Important note: this is not the default method because of a bug in constructing; the RooNDKeysPdf from a weighted data set. Configure to use this method by; calling SetUseKeys(true), and the data set will be interpreted without weights. #### Using a binned data set: (the default method). This is the binned analog of the continuous integrative method that uses the; kernel-estimated PDF. The points in the Markov Chain are put into a binned; data set and the interval is then calculated by adding the heights of the bins; in decreasing order until the desired level of confidence has been reached.; Note that this means the actual confidence level is >= the confidence level; prescribed by the client (unless the",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/MCMCInterval.cxx:978,integrat,integrate,978,roofit/roostats/src/MCMCInterval.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/MCMCInterval.cxx,1,['integrat'],['integrate']
Integrability,"Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooNumConvolution.cxx; \class RooNumConvolution; \ingroup Roofitcore. Numeric 1-dimensional convolution operator PDF. This class can convolve any PDF; with any other PDF; This class should not be used blindly as numeric convolution is computing; intensive and prone to stability fitting problems. If an analytic convolution; can be calculated, you should use that or implement it if not available.; RooNumConvolution implements reasonable defaults that should convolve most; functions reasonably well, but results strongly depend on the shape of your; input PDFS so always check your result. The default integration engine for the numeric convolution is the; adaptive Gauss-Kronrod method, which empirically seems the most robust; for this task. You can override the convolution integration settings via; the RooNumIntConfig object reference returned by the convIntConfig() member; function; By default the numeric convolution is integrated from -infinity to; +infinity through a <pre>x -> 1/x</pre> coordinate transformation of the; tails. For convolution with a very small bandwidth it may be; advantageous (for both CPU consumption and stability) if the; integration domain is limited to a finite range. The function; setConvolutionWindow(mean,width,scale) allows to set a sliding; window around the x value to be calculated taking a RooAbsReal; expression for an offset and a width to be taken around the x; value. These input expression can be RooFormulaVars or other; function objects alt",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumConvolution.cxx:1229,depend,depend,1229,roofit/roofitcore/src/RooNumConvolution.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumConvolution.cxx,1,['depend'],['depend']
Integrability,"D IDCT on each column followed by 1-D IDCT; * on each row (or vice versa, but it's more convenient to emit a row at; * a time). Direct algorithms are also available, but they are much more; * complex and seem not to be any faster when reduced to code.; *; * This implementation is based on an algorithm described in; * C. Loeffler, A. Ligtenberg and G. Moschytz, ""Practical Fast 1-D DCT; * Algorithms with 11 Multiplications"", Proc. Int'l. Conf. on Acoustics,; * Speech, and Signal Processing 1989 (ICASSP '89), pp. 988-991.; * The primary algorithm described there uses 11 multiplies and 29 adds.; * We use their alternate method with 12 multiplies and 32 adds.; * The advantage of this method is that no data path contains more than one; * multiplication; this allows a very simple and accurate implementation in; * scaled fixed-point arithmetic, with a minimal number of shifts.; *; * We also provide IDCT routines with various output sample block sizes for; * direct resolution reduction or enlargement and for direct resolving the; * common 2x1 and 1x2 subsampling cases without additional resampling: NxN; * (N=1...16), 2NxN, and Nx2N (N=1...8) pixels for one 8x8 input DCT block.; *; * For N<8 we simply take the corresponding low-frequency coefficients of; * the 8x8 input DCT block and apply an NxN point IDCT on the sub-block; * to yield the downscaled outputs.; * This can be seen as direct low-pass downsampling from the DCT domain; * point of view rather than the usual spatial domain point of view,; * yielding significant computational savings and results at least; * as good as common bilinear (averaging) spatial downsampling.; *; * For N>8 we apply a partial NxN IDCT on the 8 input coefficients as; * lower frequencies and higher frequencies assumed to be zero.; * It turns out that the computational effort is similar to the 8x8 IDCT; * regarding the output size.; * Furthermore, the scaling and descaling is the same for all IDCT sizes.; *; * CAUTION: We rely on the FIX() macro ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jidctint.c:1416,rout,routines,1416,graf2d/asimage/src/libAfterImage/libjpeg/jidctint.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jidctint.c,1,['rout'],['routines']
Integrability,"D::name(pdf1|x,pdf2]` <td> Create product of conditional pdf `pdf1` given `x` and `pdf2`; /// <tr><td> `prod::name(a,b,c]` <td> Create production function with value `a*b*c`; /// <tr><td> `SIMUL::name(cat,a=pdf1,b=pdf2]` <td> Create simultaneous pdf index category `cat`. Make `pdf1` to state `a`, `pdf2` to state `b`; /// <tr><td> `EXPR::name(<expr>,var,...]` <td> Create a generic pdf that interprets the given expression; /// <tr><td> `expr::name(<expr>,var,...]` <td> Create a generic function that interprets the given expression; /// <tr><td> `taylorexpand::name(func,{var1,var2,...},val,order,eps1,eps2]` <td> Create a taylor expansion of func w.r.t. `{var1,var2,..}` around `val` up to `order`; /// <tr><td> `lagrangianmorph::name(""$fileName('infile.root'),$observableName(obs),$couplings({var1[-10,10],var2[-10,10]}),$folders({'sample1,sample2,sample3'}),$NewPhysics(var1=1,var2=0)""]` <td> Create a RooLagrangianMorphFunc function for the observable obs as a function of `var1`, `var2` based on input templates stored in the folders in the file; /// </table>; ///; /// The functionality of high-level object creation tools like RooSimWSTool, RooCustomizer and RooClassFactory; /// is also interfaced through meta-types in the factory.; /// <table>; /// <tr><th> Interface to %RooSimWSTool <th>; /// <tr><td> `SIMCLONE::name( modelPdf, $ParamSplit(...), $ParamSplitConstrained(...), $Restrict(...) ]`; /// <td> Clone-and-customize modelPdf according to ParamSplit and ParamSplitConstrained(); /// specifications and return a RooSimultaneous pdf of all built clones; ///; /// <tr><td> `MSIMCLONE::name( masterIndex, $AddPdf(mstate1, modelPdf1, $ParamSplit(...)), $AddPdf(mstate2,modelPdf2),...) ]`; /// <td> Clone-and-customize multiple models (modelPdf1,modelPdf2) according to ParamSplit and; /// ParamSplitConstrained() specifications and return a RooSimultaneous pdf of all built clones,; /// using the specified master index to map prototype pdfs to master states; /// <tr><th> Interface t",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx:4174,interface,interfaced,4174,roofit/roofitcore/src/RooFactoryWSTool.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx,1,['interface'],['interfaced']
Integrability,"DAMAGES, OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE,; * DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER; * TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR; * PERFORMANCE OF THE DATA FILES OR SOFTWARE.; *; * Except as contained in this notice, the name of a copyright holder; * shall not be used in advertising or otherwise to promote the sale,; * use or other dealings in these Data Files or Software without prior; * written authorization of the copyright holder.; */; /* ---------------------------------------------------------------------. Conversions between UTF32, UTF-16, and UTF-8. Header file. Several funtions are included here, forming a complete set of; conversions between the three formats. UTF-7 is not included; here, but is handled in a separate source file. Each of these routines takes pointers to input buffers and output; buffers. The input buffers are const. Each routine converts the text between *sourceStart and sourceEnd,; putting the result into the buffer between *targetStart and; targetEnd. Note: the end pointers are *after* the last item: e.g.; *(sourceEnd - 1) is the last item. The return result indicates whether the conversion was successful,; and if not, whether the problem was in the source or target buffers.; (Only the first encountered problem is indicated.). After the conversion, *sourceStart and *targetStart are both; updated to point to the end of last text successfully converted in; the respective buffers. Input parameters:; sourceStart - pointer to a pointer to the source buffer.; The contents of this are modified on return so that; it points at the next thing to be converted.; targetStart - similarly, pointer to pointer to the target buffer.; sourceEnd, targetEnd - respectively pointers to the ends of the; two buffers, for overflow checking only. These conversion functions take a ConversionFlags argument. When this; flag is set to strict, both irregular sequences and isolated surrogates; w",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/ConvertUTF.h:2793,rout,routine,2793,interpreter/llvm-project/llvm/include/llvm/Support/ConvertUTF.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/ConvertUTF.h,1,['rout'],['routine']
Integrability,"Description; * <tr><td> **none** - *default* <td> No offsetting.; * <tr><td> **initial** <td> Offset likelihood by initial value (so that starting value of FCN in minuit is zero).; * This can improve numeric stability in simultaneous fits with components with large likelihood values.; * <tr><td> **bin** <td> Offset likelihood bin-by-bin with a template histogram model based on the obersved data.; * This results in per-bin values that are all in the same order of magnitude, which reduces precision loss in the sum,; * which can drastically improve numeric stability.; * Furthermore, \f$2\cdot \text{NLL}\f$ defined like this is approximately chi-square distributed, allowing for goodness-of-fit tests.; * </table>; * <tr><td> `IntegrateBins(double precision)` <td> In binned fits, integrate the PDF over the bins instead of using the probability density at the bin centre.; * This can reduce the bias observed when fitting functions with high curvature to binned data.; * - precision > 0: Activate bin integration everywhere. Use precision between 0.01 and 1.E-6, depending on binning.; * Note that a low precision such as 0.01 might yield identical results to 1.E-4, since the integrator might reach 1.E-4 already in its first; * integration step. If lower precision is desired (more speed), a RooBinSamplingPdf has to be created manually, and its integrator; * has to be manipulated directly.; * - precision = 0: Activate bin integration only for continuous PDFs fit to a RooDataHist.; * - precision < 0: Deactivate.; * \see RooBinSamplingPdf; * <tr><td> `ModularL(bool flag)` <td> Enable or disable modular likelihoods, which will become the default in a future release.; * This does not change any user-facing code, but only enables a different likelihood class in the back-end. Note that this; * should be set to true for parallel minimization of likelihoods!; * Note that it is currently not recommended to use Modular likelihoods without any parallelization enabled in the minimization, sin",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx:9306,integrat,integration,9306,roofit/roofitcore/src/RooAbsPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx,1,['integrat'],['integration']
Integrability,"Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines a variety of memory management related checkers, such as; // leak, double free, and use-after-free.; //; // The following checkers are defined here:; //; // * MallocChecker; // Despite its name, it models all sorts of memory allocations and; // de- or reallocation, including but not limited to malloc, free,; // relloc, new, delete. It also reports on a variety of memory misuse; // errors.; // Many other checkers interact very closely with this checker, in fact,; // most are merely options to this one. Other checkers may register; // MallocChecker, but do not enable MallocChecker's reports (more details; // to follow around its field, ChecksEnabled).; // It also has a boolean ""Optimistic"" checker option, which if set to true; // will cause the checker to model user defined memory management related; // functions annotated via the attribute ownership_takes, ownership_holds; // and ownership_returns.; //; // * NewDeleteChecker; // Enables the modeling of new, new[], delete, delete[] in MallocChecker,; // and checks for related double-free and use-after-free errors.; //; // * NewDeleteLeaksChecker; // Checks for leaks related to new, new[], delete, delete[].; // Depends on NewDeleteChecker.; //; // * MismatchedDeallocatorChecker; // Enables checking whether memory is deallocated with the correspending; // allocation function in MallocChecker, such as malloc() allocated; // regions are only freed by free(), new by delete, new[] by delete[].; //; // InnerPointerChecker interacts very closely with MallocChecker, but unlike; // the above checkers, it has it's own file, hence the many InnerPointerChecker; // related headers and non-static functions.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/MallocChecker.cpp:1578,Depend,Depends,1578,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/MallocChecker.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/MallocChecker.cpp,1,['Depend'],['Depends']
Integrability,"FITS file.; /// \ingroup Graphics2D; ///; /// TFITS is an interface that lets you reading Flexible Image Transport System; /// (FITS) files, which are generally used in astronomy. This file format; /// was standardized 1981 and today is still widely used among professional; /// and amateur astronomers. FITS is not only an image file, but also; /// it can contain spectrums, data tables, histograms, and multidimensional; /// data. Furthermore, FITS data can be described itself by containing; /// human-readable information that let us to interpret the data within; /// the FITS file. For example, a FITS could contain a 3D data cube,; /// but an additional description would tell us that we must read it, for; /// example, as a 3-layer image.; ///; /// TFITS requires CFITSIO library to be installed on your system. It; /// is currently maintained by NASA/GSFC and can be downloaded from; /// [NASA/GSFC web site](http://fits.gsfc.nasa.gov), as well as documentation.; ///; /// Using this interface is easy and straightforward. There is only 1 class; /// called ""TFITSHDU"" which has several methods to extract data from a; /// FITS file, more specifically, from an HDU within the file. An HDU, or; /// Header Data Unit, is a chunk of data with a header containing several; /// ""keyword = value"" tokens. The header describes the structure of data; /// within the HDU. An HDU can be of two types: an ""image HDU"" or a ""table; /// HDU"". The former can be any kind of multidimensional array of real numbers,; /// by which the name ""image"" may be confusing: you can store an image, but; /// you can also store a N-dimensional data cube. On the other hand, table; /// HDUs are sets of several rows and columns (a.k.a fields) which contain; /// generic data, as strings, real or complex numbers and even arrays.; ///; /// Please have a look to the tutorials ($ROOTSYS/tutorials/fitsio/) to see; /// some examples. IMPORTANT: to run tutorials it is required that; /// you change the current working directo",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/fitsio/src/TFITS.cxx:1475,interface,interface,1475,graf2d/fitsio/src/TFITS.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/fitsio/src/TFITS.cxx,1,['interface'],['interface']
Integrability,"Genetic (class ROOT::Math::GeneticMinimizer). - RMinimizer (class ROOT::Math::RMinimizer) available when ROOT is built with `r` support; - BFGS (default); - L-BFGS-S; - Nelder-Mead; - CG; - and more methods, see the Details in the documentation of the function `optimix` of the [optmix R package](https://cran.r-project.org/web/packages/optimx/optimx.pdf). The Minimizer class provides the interface to perform the minimization including. In addition to provide the API for function minimization (via ROOT::Math::Minimizer::Minimize) the Minimizer class provides:; - the interface for setting the function to be minimized. The objective function passed to the Minimizer must implement the multi-dimensional generic interface; ROOT::Math::IBaseFunctionMultiDim. If the function provides gradient calculation (e.g. implementing the ROOT::Math::IGradientFunctionMultiDim interface); the gradient will be used by the Minimizer class, when needed. There are convenient classes for the users to wrap their own functions in this required interface for minimization.; These are the `ROOT::Math::Functor` class and the `ROOT::Math::GradFunctor` class for wrapping functions providing both evaluation and gradient. Some methods, like Fumili, Fumili2 and GSLMultiFit are; specialized method for least-square and also likelihood minimizations. They require then that the given function implements in addition; the `ROOT::Math::FitMethodFunction` interface.; - The interface for setting the initial values for the function variables (which are the parameters in; of the model function in case of solving for fitting) and specifying their limits.; - The interface to set and retrieve basic minimization parameters. These parameter are controlled by the class `ROOT::Math::MinimizerOptions`.; When no parameters are specified the default ones are used. Specific Minimizer options can also be passed via the `MinimizerOptions` class.; For the list of the available option parameter one must look at the documentation",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Minimizer.h:2627,wrap,wrap,2627,math/mathcore/inc/Math/Minimizer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Minimizer.h,2,"['interface', 'wrap']","['interface', 'wrap']"
Integrability,"GetEntry(i) all branches are read for entry i.; /// to read only the branches c and e, one can do; /// ~~~ {.cpp}; /// T.SetBranchStatus(""*"",0); //disable all branches; /// T.SetBranchStatus(""c"",1);; /// T.setBranchStatus(""e"",1);; /// T.GetEntry(i);; /// ~~~; /// bname is interpreted as a wild-carded TRegexp (see TRegexp::MakeWildcard).; /// Thus, ""a*b"" or ""a.*b"" matches branches starting with ""a"" and ending with; /// ""b"", but not any other branch with an ""a"" followed at some point by a; /// ""b"". For this second behavior, use ""*a*b*"". Note that TRegExp does not; /// support '|', and so you cannot select, e.g. track and shower branches; /// with ""track|shower"".; ///; /// __WARNING! WARNING! WARNING!__; ///; /// SetBranchStatus is matching the branch based on match of the branch; /// 'name' and not on the branch hierarchy! In order to be able to; /// selectively enable a top level object that is 'split' you need to make; /// sure the name of the top level branch is prefixed to the sub-branches'; /// name (by adding a dot ('.') at the end of the Branch creation and use the; /// corresponding bname.; ///; /// I.e If your Tree has been created in split mode with a parent branch ""parent.""; /// (note the trailing dot).; /// ~~~ {.cpp}; /// T.SetBranchStatus(""parent"",1);; /// ~~~; /// will not activate the sub-branches of ""parent"". You should do:; /// ~~~ {.cpp}; /// T.SetBranchStatus(""parent*"",1);; /// ~~~; /// Without the trailing dot in the branch creation you have no choice but to; /// call SetBranchStatus explicitly for each of the sub branches.; ///; /// An alternative to this function is to read directly and only; /// the interesting branches. Example:; /// ~~~ {.cpp}; /// TBranch *brc = T.GetBranch(""c"");; /// TBranch *bre = T.GetBranch(""e"");; /// brc->GetEntry(i);; /// bre->GetEntry(i);; /// ~~~; /// If found is not 0, the number of branch(es) found matching the regular; /// expression is returned in *found AND the error message 'unknown branch'; /// is suppressed.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:2684,message,message,2684,tree/tree/src/TTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx,1,['message'],['message']
Integrability,"HistFactory::RooBarlowBeestonLL::bestFitParams() const; {; validateAbsMin() ;; return _paramAbsMin ;; }. ////////////////////////////////////////////////////////////////////////////////. const RooArgSet& RooStats::HistFactory::RooBarlowBeestonLL::bestFitObs() const; {; validateAbsMin() ;; return _obsAbsMin ;; }; */; ////////////////////////////////////////////////////////////////////////////////; /// Optimized implementation of createProfile for profile likelihoods.; /// Return profile of original function in terms of stated parameters; /// of interest rather than profiling recursively.; /*; RooAbsReal* RooStats::HistFactory::RooBarlowBeestonLL::createProfile(const RooArgSet& paramsOfInterest); {; return nll().createProfile(paramsOfInterest) ;; }; */; /*; void RooStats::HistFactory::RooBarlowBeestonLL::FactorizePdf(const RooArgSet &observables, RooAbsPdf &pdf, RooArgList &obsTerms, RooArgList &constraints) const {; // utility function to factorize constraint terms from a pdf; // (from G. Petrucciani); const std::type_info & id = typeid(pdf);; if (id == typeid(RooProdPdf)) {; RooProdPdf *prod = dynamic_cast<RooProdPdf *>(&pdf);; RooArgList list(prod->pdfList());; for (int i = 0, n = list.size(); i < n; ++i) {; RooAbsPdf *pdfi = (RooAbsPdf *) list.at(i);; FactorizePdf(observables, *pdfi, obsTerms, constraints);; }; } else if (id == typeid(RooSimultaneous) ) { //|| id == typeid(RooSimultaneousOpt)) {; RooSimultaneous *sim = dynamic_cast<RooSimultaneous *>(&pdf);; std::unique_ptr<RooAbsCategoryLValue> cat{(RooAbsCategoryLValue *) sim->indexCat().Clone()};; for (int ic = 0, nc = cat->numBins((const char *)0); ic < nc; ++ic) {; cat->setBin(ic);; FactorizePdf(observables, *sim->getPdf(cat->getLabel()), obsTerms, constraints);; }; } else if (pdf.dependsOn(observables)) {; if (!obsTerms.contains(pdf)) obsTerms.add(pdf);; } else {; if (!constraints.contains(pdf)) constraints.add(pdf);; }; }; */; ////////////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/RooBarlowBeestonLL.cxx:1881,depend,dependsOn,1881,roofit/histfactory/src/RooBarlowBeestonLL.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/RooBarlowBeestonLL.cxx,1,['depend'],['dependsOn']
Integrability,"ICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /*************************************************************************; * Parts of this file are copied from the OOQP distribution and *; * are subject to the following license: *; * *; * COPYRIGHT 2001 UNIVERSITY OF CHICAGO *; * *; * The copyright holder hereby grants you royalty-free rights to use, *; * reproduce, prepare derivative works, and to redistribute this software*; * to others, provided that any changes are clearly documented. This *; * software was authored by: *; * *; * E. MICHAEL GERTZ gertz@mcs.anl.gov *; * Mathematics and Computer Science Division *; * Argonne National Laboratory *; * 9700 S. Cass Avenue *; * Argonne, IL 60439-4844 *; * *; * STEPHEN J. WRIGHT swright@cs.wisc.edu *; * Computer Sciences Department *; * University of Wisconsin *; * 1210 West Dayton Street *; * Madison, WI 53706 FAX: (608)262-9777 *; * *; * Any questions or comments may be directed to one of the authors. *; * *; * ARGONNE NATIONAL LABORATORY (ANL), WITH FACILITIES IN THE STATES OF *; * ILLINOIS AND IDAHO, IS OWNED BY THE UNITED STATES GOVERNMENT, AND *; * OPERATED BY THE UNIVERSITY OF CHICAGO UNDER PROVISION OF A CONTRACT *; * WITH THE DEPARTMENT OF ENERGY. *; *************************************************************************/; ////////////////////////////////////////////////////////////////////////////////; ///; /// \class TQpResidual; ///; /// The Residuals class calculates and stores the quantities that appear; /// on the right-hand side of the linear systems that arise at each; /// interior-point iteration. These residuals can be partitioned into; /// two fundamental categories: the components arising from the linear; /// equations in the KKT conditions, and the components arising from the; /// complementarity conditions.; ///; ////////////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/quadp/src/TQpResidual.cxx:1549,CONTRACT,CONTRACT,1549,math/quadp/src/TQpResidual.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/quadp/src/TQpResidual.cxx,1,['CONTRACT'],['CONTRACT']
Integrability,"Implementations *; * *; * Authors (alphabetical): *; * Tancredi Carli - CERN, Switzerland *; * Dominik Dannheim - CERN, Switzerland *; * S. Jadach - Institute of Nuclear Physics, Cracow, Poland *; * Alexander Voigt - TU Dresden, Germany *; * Peter Speckmayer - CERN, Switzerland *; * *; * Copyright (c) 2008, 2010: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::PDEFoam; \ingroup TMVA. Implementation of PDEFoam. The PDEFoam method is an extension of the PDERS method, which uses; self-adapting binning to divide the multi-dimensional phase space; in a finite number of hyper-rectangles (boxes). For a given number of boxes, the binning algorithm adjusts the size; and position of the boxes inside the multidimensional phase space,; minimizing the variance of the signal and background densities inside; the boxes. The binned density information is stored in binary trees,; allowing for a very fast and memory-efficient classification of; events. The implementation of the PDEFoam is based on the monte-carlo; integration package TFoam included in the analysis package ROOT. The class TMVA::PDEFoam defines the default interface for the; PDEFoam variants:. - PDEFoamEvent; - PDEFoamDiscriminant; - PDEFoamTarget; - PDEFoamMultiTarget; - PDEFoamDecisionTree. Per default PDEFoam stores in the cells the number of events (event; weights) and therefore acts as an event density estimator.; However, the above listed derived classes override this behaviour; to implement certain PDEFoam variations. In order to use PDEFoam the user has to set the density estimator; of the type TMVA::PDEFoamDensityBase, which is used to during the foam; build-up. The default PDEFoam should be used with; PDEFoamEventDensity.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/PDEFoam.cxx:1630,integrat,integration,1630,tmva/tmva/src/PDEFoam.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/PDEFoam.cxx,2,"['integrat', 'interface']","['integration', 'interface']"
Integrability,"Internally the calculations; are vectorized:; - fast_expf, fast_logf, fast_sinf, fast_cosf, fast_tanf, fast_asinf, fast_acosf, fast_atanf; - fast_exp, fast_log, fast_sin, fast_cos, fast_tan, fast_asin, fast_acos, fast_atan. \anchor owningandadoptingmemory; ## Owning and adopting memory; RVec has contiguous memory associated to it. It can own it or simply adopt it. In the latter case,; it can be constructed with the address of the memory associated to it and its length. For example:; ~~~{.cpp}; std::vector<int> myStlVec {1,2,3};; RVec<int> myRVec(myStlVec.data(), myStlVec.size());; ~~~; In this case, the memory associated to myStlVec and myRVec is the same, myRVec simply ""adopted it"".; If any method which implies a re-allocation is called, e.g. *emplace_back* or *resize*, the adopted; memory is released and new one is allocated. The previous content is copied in the new memory and; preserved. \anchor sorting; ## Sorting and manipulation of indices. ### Sorting; RVec complies to the STL interfaces when it comes to iterations. As a result, standard algorithms; can be used, for example sorting:; ~~~{.cpp}; RVec<double> v{6., 4., 5.};; std::sort(v.begin(), v.end());; ~~~. For convenience, helpers are provided too:; ~~~{.cpp}; auto sorted_v = Sort(v);; auto reversed_v = Reverse(v);; ~~~. ### Manipulation of indices. It is also possible to manipulated the RVecs acting on their indices. For example,; the following syntax; ~~~{.cpp}; RVecD v0 {9., 7., 8.};; auto v1 = Take(v0, {1, 2, 0});; ~~~; will yield a new RVec<double> the content of which is the first, second and zeroth element of; v0, i.e. `{7., 8., 9.}`. The `Argsort` and `StableArgsort` helper extracts the indices which order the content of a `RVec`.; For example, this snippet accomplishes in a more expressive way what we just achieved:; ~~~{.cpp}; auto v1_indices = Argsort(v0); // The content of v1_indices is {1, 2, 0}.; v1 = Take(v0, v1_indices);; ~~~. The `Take` utility allows to extract portions of the `RVec`. Th",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/vecops/inc/ROOT/RVec.hxx:5250,interface,interfaces,5250,math/vecops/inc/ROOT/RVec.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/vecops/inc/ROOT/RVec.hxx,1,['interface'],['interfaces']
Integrability,"K, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; //////////////////////////////////////////////////////////////////////////////; /** \class RooChi2Var; \ingroup Roofitcore; \brief Simple \f$ \chi^2 \f$ calculation from a binned dataset and a PDF.; *; * It calculates:; *; \f{align*}{; \chi^2 &= \sum_{\mathrm{bins}} \left( \frac{N_\mathrm{PDF,bin} - N_\mathrm{Data,bin}}{\Delta_\mathrm{bin}} \right)^2 \\; N_\mathrm{PDF,bin} &=; \begin{cases}; \mathrm{pdf}(\text{bin centre}) \cdot V_\mathrm{bin} \cdot N_\mathrm{Data,tot} &\text{normal PDF}\\; \mathrm{pdf}(\text{bin centre}) \cdot V_\mathrm{bin} \cdot N_\mathrm{Data,expected} &\text{extended PDF}; \end{cases} \\; \Delta_\mathrm{bin} &=; \begin{cases}; \sqrt{N_\mathrm{PDF,bin}} &\text{if } \mathtt{DataError == RooAbsData::Expected}\\; \mathtt{data{\rightarrow}weightError()} &\text{otherwise} \\; \end{cases}; \f}; * If the dataset doesn't have user-defined errors, errors are assumed to be \f$ \sqrt{N} \f$.; * In extended PDF mode, N_tot (total number of data events) is substituted with N_expected, the; * expected number of events that the PDF predicts.; *; * \note If the dataset has errors stored, empty bins will prevent the calculation of \f$ \chi^2 \f$, because those have; * zero error. This leads to messages like:; * ```; * [#0] ERROR:Eval -- RooChi2Var::RooChi2Var(chi2_GenPdf_data_hist) INFINITY ERROR: bin 2 has zero error; * ```; *; * \note In this case, one can use the expected errors of the PDF instead of the data errors:; * ```{.cpp}; * RooChi2Var chi2(..., ..., RooFit::DataError(RooAbsData::Expected), ...);; * ```; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooChi2Var.cxx:1912,message,messages,1912,roofit/roofitcore/src/RooChi2Var.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooChi2Var.cxx,1,['message'],['messages']
Integrability,"LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This set of linked tablegen backends is responsible for emitting the bits; // and pieces that implement <arm_mve.h>, which is defined by the ACLE standard; // and provides a set of types and functions for (more or less) direct access; // to the MVE instruction set, including the scalar shifts as well as the; // vector instructions.; //; // MVE's standard intrinsic functions are unusual in that they have a system of; // polymorphism. For example, the function vaddq() can behave like vaddq_u16(),; // vaddq_f32(), vaddq_s8(), etc., depending on the types of the vector; // arguments you give it.; //; // This constrains the implementation strategies. The usual approach to making; // the user-facing functions polymorphic would be to either use; // __attribute__((overloadable)) to make a set of vaddq() functions that are; // all inline wrappers on the underlying clang builtins, or to define a single; // vaddq() macro which expands to an instance of _Generic.; //; // The inline-wrappers approach would work fine for most intrinsics, except for; // the ones that take an argument required to be a compile-time constant,; // because if you wrap an inline function around a call to a builtin, the; // constant nature of the argument is not passed through.; //; // The _Generic approach can be made to work with enough effort, but it takes a; // lot of machinery, because of the design feature of _Generic that even the; // untaken branches are required to pass all front-end validity checks such as; // type-correctness. You can work around that by nesting further _Generics all; // over the place to coerce things to the right type in untaken branches, but; // what you get out is complicated, hard to guarantee its correctness, and; // worst of all, gives _completely unreadable_ error messages if the u",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/TableGen/MveEmitter.cpp:1224,wrap,wrappers,1224,interpreter/llvm-project/clang/utils/TableGen/MveEmitter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/TableGen/MveEmitter.cpp,1,['wrap'],['wrappers']
Integrability,"ModR/M byte is required and how to interpret it.; //; // 5. After resolving the ModRMDecision, the disassembler has a unique ID; // of type InstrUID (X86DisassemblerDecoderCommon.h). Looking this ID up in; // INSTRUCTIONS_SYM yields the name of the instruction and the encodings and; // meanings of its operands.; //; // 6. For each operand, its encoding is an entry from OperandEncoding; // (X86DisassemblerDecoderCommon.h) and its type is an entry from; // OperandType (ibid.). The encoding indicates how to read it from the; // instruction; the type indicates how to interpret the value once it has; // been read. For example, a register operand could be stored in the R/M; // field of the ModR/M byte, the REG field of the ModR/M byte, or added to; // the main opcode. This is orthogonal from its meaning (an GPR or an XMM; // register, for instance). Given this information, the operands can be; // extracted and interpreted.; //; // 7. As the last step, the disassembler translates the instruction information; // and operands into a format understandable by the client - in this case, an; // MCInst for use by the MC infrastructure.; //; // The disassembler is broken broadly into two parts: the table emitter that; // emits the instruction decode tables discussed above during compilation, and; // the disassembler itself. The table emitter is documented in more detail in; // utils/TableGen/X86DisassemblerEmitter.h.; //; // X86Disassembler.cpp contains the code responsible for step 7, and for; // invoking the decoder to execute steps 1-6.; // X86DisassemblerDecoderCommon.h contains the definitions needed by both the; // table emitter and the disassembler.; // X86DisassemblerDecoder.h contains the public interface of the decoder,; // factored out into C for possible use by other projects.; // X86DisassemblerDecoder.c contains the source code of the decoder, which is; // responsible for steps 1-6.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/Disassembler/X86Disassembler.cpp:3708,interface,interface,3708,interpreter/llvm-project/llvm/lib/Target/X86/Disassembler/X86Disassembler.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/Disassembler/X86Disassembler.cpp,1,['interface'],['interface']
Integrability,"NT SHALL THE COPYRIGHT HOLDER OR HOLDERS INCLUDED IN THIS; * NOTICE BE LIABLE FOR ANY CLAIM, OR ANY SPECIAL INDIRECT OR CONSEQUENTIAL; * DAMAGES, OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE,; * DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER; * TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR; * PERFORMANCE OF THE DATA FILES OR SOFTWARE.; *; * Except as contained in this notice, the name of a copyright holder; * shall not be used in advertising or otherwise to promote the sale,; * use or other dealings in these Data Files or Software without prior; * written authorization of the copyright holder.; */; /* ---------------------------------------------------------------------. Conversions between UTF32, UTF-16, and UTF-8. Header file. Several funtions are included here, forming a complete set of; conversions between the three formats. UTF-7 is not included; here, but is handled in a separate source file. Each of these routines takes pointers to input buffers and output; buffers. The input buffers are const. Each routine converts the text between *sourceStart and sourceEnd,; putting the result into the buffer between *targetStart and; targetEnd. Note: the end pointers are *after* the last item: e.g.; *(sourceEnd - 1) is the last item. The return result indicates whether the conversion was successful,; and if not, whether the problem was in the source or target buffers.; (Only the first encountered problem is indicated.). After the conversion, *sourceStart and *targetStart are both; updated to point to the end of last text successfully converted in; the respective buffers. Input parameters:; sourceStart - pointer to a pointer to the source buffer.; The contents of this are modified on return so that; it points at the next thing to be converted.; targetStart - similarly, pointer to pointer to the target buffer.; sourceEnd, targetEnd - respectively pointers to the ends of the; two buffers, for overflow checking only. These co",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/ConvertUTF.h:2697,rout,routines,2697,interpreter/llvm-project/llvm/include/llvm/Support/ConvertUTF.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/ConvertUTF.h,1,['rout'],['routines']
Integrability,"NU Library General Public; License as published by the Free Software Foundation; either; version 2 of the License, or (at your option) any later version. **************************************************************************/; /** \class TGMenuBar; \ingroup guiwidgets. The TGMenu.h header contains all different menu classes. The TGMenuBar class implements a menu bar widget. It is used to; specify and provide access to common and frequently used application; actions grouped under menu titles (TGMenuTitle class). The menu bar; takes the highest-level of the menu system and it is a starting; point for many interactions. It is always visible and allows using; the keyboard equivalents. The geometry of the menu bar is; automatically set to the parent widget, i.e. the menu bar; automatically resizes itself so that it has the same width as its; parent (typically TGMainFrame). A menu bar contains one or more; popup menus and usually is placed along the top of the application; window. Any popup menu is invisible until the user invokes it by; using the mouse pointer or the keyboard. Popup menus implemented by TGPopupMenu class are unique in that,; by convention, they are not placed with the other GUI components in; the user interfaces. Instead, a popup menu usually appears either in; a menu bar or as a context menu on the TOP of the GUI. For that; reason it needs gClient->GetDefaultRoot() as a parent to get the; pointer to the root (i.e. desktop) window. This way a popup menu; will never be embedded.; NOTE: Using gClient->GetRoot() as a parent of TGPopupMenu will not; avoid the possibility of embedding the corresponding popup menu; because the current window hierarchy can be changed by using; gClient->SetRoot() method. As a context menus TGPopupMenu shows up after pressing the right; mouse button, over a popup-enabled component. The popup menu then; appears under the mouse pointer. Selecting a menu item will generate the event:; kC_COMMAND, kCM_MENU, menu id, user data. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGMenu.cxx:1956,interface,interfaces,1956,gui/gui/src/TGMenu.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGMenu.cxx,1,['interface'],['interfaces']
Integrability,"Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooMsgService.cxx; \class RooMsgService; \ingroup Roofitcore. Singleton class that organizes messages generated in RooFit.; Each message has a message level RooFit::MsgLevel (DEBUG,INFO,PROGRESS,WARNING,ERROR or FATAL),; an source object, and a RooFit::MsgTopic.; RooMsgService allows to filter and redirect messages into streams; according to message level, topic, (base) class of originating object, name of originating; object and based on attribute labels attached to individual objects.; The current default configuration creates streams for all messages at WARNING level; or higher (e.g. ERROR and FATAL) and for all INFO message on topics Generation,Plotting,; Integration and Minimization and redirects them to stdout. Users can create additional streams; for logging of e.g. DEBUG messages on particular topics or objects and/or redirect streams to; C++ streams or files. The singleton instance is accessible through RooMsgService::instance(). ### Temporarily change the message level; There is a helper, RooHelpers::LocalChangeMsgLevel, that overrides the default message levels as; long as it is alive. To suppress everything below WARNING:; ~~~{.cpp}; RooHelpers::LocalChangeMessageLevel changeMsgLvl(RooFit::WARNING);; [ statements that normally generate a lot of output ]; ~~~. #### Temporarily capture a message stream; RooHelpers::HijackMessageStream allows to ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMsgService.cxx:1014,message,messages,1014,roofit/roofitcore/src/RooMsgService.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMsgService.cxx,2,['message'],"['message', 'messages']"
Integrability,"R""(; int CLASS_NAME::getAnalyticalIntegral(RooArgSet& allVars, RooArgSet& analVars, const char */*rangeName*/) const; {; // Support also using the imaginary unit; using namespace std::complex_literals;; // To be able to also comile C code, we define a variable that behaves like the ""I"" macro from C.; constexpr auto I = 1i;. // LIST HERE OVER WHICH VARIABLES ANALYTICAL INTEGRATION IS SUPPORTED,; // ASSIGN A NUMERIC CODE FOR EACH SUPPORTED (SET OF) PARAMETERS. THE EXAMPLE; // BELOW ASSIGNS CODE 1 TO INTEGRATION OVER VARIABLE X YOU CAN ALSO; // IMPLEMENT MORE THAN ONE ANALYTICAL INTEGRAL BY REPEATING THE matchArgs; // EXPRESSION MULTIPLE TIMES.; )""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooClassFactory.cxx:371,INTEGRAT,INTEGRATION,371,roofit/roofitcore/src/RooClassFactory.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooClassFactory.cxx,2,['INTEGRAT'],['INTEGRATION']
Integrability,"R""(; int CLASS_NAME::getGenerator(const RooArgSet &directVars, RooArgSet &generateVars, bool /*staticInitOK*/) const; {; // LIST HERE OVER WHICH VARIABLES INTERNAL GENERATION IS SUPPORTED, ASSIGN A; // NUMERIC CODE FOR EACH SUPPORTED (SET OF) PARAMETERS. THE EXAMPLE BELOW; // ASSIGNS CODE 1 TO INTEGRATION OVER VARIABLE X. YOU CAN ALSO IMPLEMENT; // MORE THAN ONE GENERATOR CONFIGURATION BY REPEATING THE matchArgs; // EXPRESSION MULTIPLE TIMES. IF THE FLAG staticInitOK IS TRUE, THEN IT IS; // SAFE TO PRECALCULATE INTERMEDIATE QUANTITIES IN initGenerator(), IF IT IS; // NOT SET THEN YOU SHOULD NOT ADVERTISE ANY GENERATOR METHOD THAT RELIES ON; // PRECALCULATIONS IN initGenerator(). // if (matchArgs(directVars,generateVars,x)) return 1;; return 0;; }. void CLASS_NAME::generateEvent(int code); {; // GENERATE SET OF OBSERVABLES DEFINED BY RETURN CODE ASSIGNED BY; // getGenerator(). RETURN THE GENERATED VALUES BY ASSIGNING THEM TO THE; // PROXY DATA MEMBERS THAT REPRESENT THE CHOSEN OBSERVABLES. // assert(code==1);; // x = 0;; return;; }; )""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooClassFactory.cxx:295,INTEGRAT,INTEGRATION,295,roofit/roofitcore/src/RooClassFactory.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooClassFactory.cxx,1,['INTEGRAT'],['INTEGRATION']
Integrability,"R""(double CLASS_NAME::analyticalIntegral(int code, const char *rangeName) const; {; // RETURN ANALYTICAL INTEGRAL DEFINED BY RETURN CODE ASSIGNED BY; // getAnalyticalIntegral(). THE MEMBER FUNCTION x.min(rangeName) AND; // x.max(rangeName) WILL RETURN THE INTEGRATION BOUNDARIES FOR EACH; // OBSERVABLE x.; )""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooClassFactory.cxx:256,INTEGRAT,INTEGRATION,256,roofit/roofitcore/src/RooClassFactory.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooClassFactory.cxx,1,['INTEGRAT'],['INTEGRATION']
Integrability,"R""CODE(::Init(TTree *tree); {; // The Init() function is called when the selector needs to initialize; // a new tree or chain. Typically here the reader is initialized.; // It is normally not necessary to make changes to the generated; // code, but the routine can be extended by the user if needed.; // Init() will be called many times when running on PROOF; // (once per file to be processed). fReader.SetTree(tree);; }. bool )CODE""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReaderGenerator.cxx:253,rout,routine,253,tree/treeplayer/src/TTreeReaderGenerator.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReaderGenerator.cxx,1,['rout'],['routine']
Integrability,"R""CODE(::Notify(); {; // The Notify() function is called when a new file is opened. This; // can be either for a new TTree in a TChain or when when a new TTree; // is started when using PROOF. It is normally not necessary to make changes; // to the generated code, but the routine can be extended by the; // user if needed. The return value is currently not used. return true;; }. #endif // #ifdef )CODE""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReaderGenerator.cxx:273,rout,routine,273,tree/treeplayer/src/TTreeReaderGenerator.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReaderGenerator.cxx,1,['rout'],['routine']
Integrability,"Removing these edges may break cycles that form this RefSCC and; /// thus this operation may change the RefSCC graph significantly. In; /// particular, this operation will re-form new RefSCCs based on the; /// remaining connectivity of the graph. The following invariants are; /// guaranteed to hold after calling this method:; ///; /// 1) If a ref-cycle remains after removal, it leaves this RefSCC intact; /// and in the graph. No new RefSCCs are built.; /// 2) Otherwise, this RefSCC will be dead after this call and no longer in; /// the graph or the postorder traversal of the call graph. Any iterator; /// pointing at this RefSCC will become invalid.; /// 3) All newly formed RefSCCs will be returned and the order of the; /// RefSCCs returned will be a valid postorder traversal of the new; /// RefSCCs.; /// 4) No RefSCC other than this RefSCC has its member set changed (this is; /// inherent in the definition of removing such an edge).; ///; /// These invariants are very important to ensure that we can build; /// optimization pipelines on top of the CGSCC pass manager which; /// intelligently update the RefSCC graph without invalidating other parts; /// of the RefSCC graph.; ///; /// Note that we provide no routine to remove a *call* edge. Instead, you; /// must first switch it to a ref edge using \c switchInternalEdgeToRef.; /// This split API is intentional as each of these two steps can invalidate; /// a different aspect of the graph structure and needs to have the; /// invalidation handled independently.; ///; /// The runtime complexity of this method is, in the worst case, O(V+E); /// where V is the number of nodes in this RefSCC and E is the number of; /// edges leaving the nodes in this RefSCC. Note that E includes both edges; /// within this RefSCC and edges from this RefSCC to child RefSCCs. Some; /// effort has been made to minimize the overhead of common cases such as; /// self-edges and edge removals which result in a spanning tree with no; /// more cycles.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/LazyCallGraph.h:1384,rout,routine,1384,interpreter/llvm-project/llvm/include/llvm/Analysis/LazyCallGraph.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/LazyCallGraph.h,1,['rout'],['routine']
Integrability,"SOFTWARE (""SOFTWARE""),; YOU UNEQUIVOCALLY ACCEPT, AND AGREE TO BE BOUND BY, ALL OF THE; TERMS AND CONDITIONS OF THIS AGREEMENT.; IF YOU DO NOT AGREE, DO NOT DOWNLOAD, INSTALL, COPY, DISTRIBUTE OR USE; THE DATA FILES OR SOFTWARE. COPYRIGHT AND PERMISSION NOTICE. Copyright © 1991-2022 Unicode, Inc. All rights reserved.; Distributed under the Terms of Use in https://www.unicode.org/copyright.html. Permission is hereby granted, free of charge, to any person obtaining; a copy of the Unicode data files and any associated documentation; (the ""Data Files"") or Unicode software and any associated documentation; (the ""Software"") to deal in the Data Files or Software; without restriction, including without limitation the rights to use,; copy, modify, merge, publish, distribute, and/or sell copies of; the Data Files or Software, and to permit persons to whom the Data Files; or Software are furnished to do so, provided that either; (a) this copyright and permission notice appear with all copies; of the Data Files or Software, or; (b) this copyright and permission notice appear in associated; Documentation. THE DATA FILES AND SOFTWARE ARE PROVIDED ""AS IS"", WITHOUT WARRANTY OF; ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE; WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND; NONINFRINGEMENT OF THIRD PARTY RIGHTS.; IN NO EVENT SHALL THE COPYRIGHT HOLDER OR HOLDERS INCLUDED IN THIS; NOTICE BE LIABLE FOR ANY CLAIM, OR ANY SPECIAL INDIRECT OR CONSEQUENTIAL; DAMAGES, OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE,; DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER; TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR; PERFORMANCE OF THE DATA FILES OR SOFTWARE. Except as contained in this notice, the name of a copyright holder; shall not be used in advertising or otherwise to promote the sale,; use or other dealings in these Data Files or Software without prior; written authorization of the copyright holder.; */; )""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/UnicodeData/UnicodeNameMappingGenerator.cpp:1955,CONTRACT,CONTRACT,1955,interpreter/llvm-project/llvm/utils/UnicodeData/UnicodeNameMappingGenerator.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/UnicodeData/UnicodeNameMappingGenerator.cpp,1,['CONTRACT'],['CONTRACT']
Integrability,"T SHALL THE COPYRIGHT; * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,; * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT; * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,; * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY; * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT; * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE; * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.; *; * You can contact the author at:; * - xxHash homepage: https://www.xxhash.com; * - xxHash source repository: https://github.com/Cyan4973/xxHash; */; /* TODO: update */; /* Notice extracted from xxHash homepage:. xxHash is an extremely fast hash algorithm, running at RAM speed limits.; It also successfully passes all tests from the SMHasher suite. Comparison (single thread, Windows Seven 32 bits, using SMHasher on a Core 2 Duo @3GHz). Name Speed Q.Score Author; xxHash 5.4 GB/s 10; CrapWow 3.2 GB/s 2 Andrew; MumurHash 3a 2.7 GB/s 10 Austin Appleby; SpookyHash 2.0 GB/s 10 Bob Jenkins; SBox 1.4 GB/s 9 Bret Mulvey; Lookup3 1.2 GB/s 9 Bob Jenkins; SuperFastHash 1.2 GB/s 1 Paul Hsieh; CityHash64 1.05 GB/s 10 Pike & Alakuijala; FNV 0.55 GB/s 5 Fowler, Noll, Vo; CRC32 0.43 GB/s 9; MD5-32 0.33 GB/s 10 Ronald L. Rivest; SHA1-32 0.28 GB/s 10. Q.Score is a measure of quality of the hash function.; It depends on successfully passing SMHasher test set.; 10 is a perfect score. Note: SMHasher's CRC32 implementation is not the fastest one.; Other speed-oriented implementations can be faster,; especially in combination with PCLMUL instruction:; https://fastcompression.blogspot.com/2019/03/presenting-xxh3.html?showComment=1552696407071#c3490092340461170735. A 64-bit version, named XXH64, is available since r35.; It offers much better speed, but for 64-bit applications only.; Name Speed on 64 bits Speed on 32 bits; XXH64 13.8 GB/s 1.9 GB/s; XXH32 6.8 GB/s 6.0 GB/s; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:2384,depend,depends,2384,builtins/xxhash/xxhash.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h,1,['depend'],['depends']
Integrability,"TTrees and TChains, RDataFrame objects are constructed using ad-hoc factory functions (see e.g. FromCSV(), FromSqlite(), FromArrow()):. ~~~{.cpp}; auto df = ROOT::RDF::FromCSV(""input.csv"");; // use df as usual; ~~~. ### Filling a histogram; Let's now tackle a very common task, filling a histogram:; ~~~{.cpp}; // Fill a TH1D with the ""MET"" branch; RDataFrame d(""myTree"", ""file.root"");; auto h = d.Histo1D(""MET"");; h->Draw();; ~~~; The first line creates an RDataFrame associated to the TTree ""myTree"". This tree has a branch named ""MET"". Histo1D() is an *action*; it returns a smart pointer (a ROOT::RDF::RResultPtr, to be precise) to a TH1D histogram filled; with the `MET` of all events. If the quantity stored in the column is a collection (e.g. a vector or an array), the; histogram is filled with all vector elements for each event. You can use the objects returned by actions as if they were pointers to the desired results. There are many other; possible [actions](\ref cheatsheet), and all their results are wrapped in smart pointers; we'll see why in a minute. ### Applying a filter; Let's say we want to cut over the value of branch ""MET"" and count how many events pass this cut. This is one way to do it:; ~~~{.cpp}; RDataFrame d(""myTree"", ""file.root"");; auto c = d.Filter(""MET > 4."").Count(); // computations booked, not run; std::cout << *c << std::endl; // computations run here, upon first access to the result; ~~~; The filter string (which must contain a valid C++ expression) is applied to the specified columns for each event;; the name and types of the columns are inferred automatically. The string expression is required to return a `bool`; which signals whether the event passes the filter (`true`) or not (`false`). You can think of your data as ""flowing"" through the chain of calls, being transformed, filtered and finally used to; perform actions. Multiple Filter() calls can be chained one after another. Using string filters is nice for simple things, but they are limited",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx:17952,wrap,wrapped,17952,tree/dataframe/src/RDataFrame.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx,1,['wrap'],['wrapped']
Integrability,"UGLY HACK:; * This inline assembly hack forces acc into a normal register. This is the; * only thing that prevents GCC and Clang from autovectorizing the XXH32; * loop (pragmas and attributes don't work for some resason) without globally; * disabling SSE4.1.; *; * The reason we want to avoid vectorization is because despite working on; * 4 integers at a time, there are multiple factors slowing XXH32 down on; * SSE4:; * - There's a ridiculous amount of lag from pmulld (10 cycles of latency on; * newer chips!) making it slightly slower to multiply four integers at; * once compared to four integers independently. Even when pmulld was; * fastest, Sandy/Ivy Bridge, it is still not worth it to go into SSE; * just to multiply unless doing a long operation.; *; * - Four instructions are required to rotate,; * movqda tmp, v // not required with VEX encoding; * pslld tmp, 13 // tmp <<= 13; * psrld v, 19 // x >>= 19; * por v, tmp // x |= tmp; * compared to one for scalar:; * roll v, 13 // reliably fast across the board; * shldl v, v, 13 // Sandy Bridge and later prefer this for some reason; *; * - Instruction level parallelism is actually more beneficial here because; * the SIMD actually serializes this operation: While v1 is rotating, v2; * can load data, while v3 can multiply. SSE forces them to operate; * together.; *; * How this hack works:; * __asm__("""" // Declare an assembly block but don't declare any instructions; * : // However, as an Input/Output Operand,; * ""+r"" // constrain a read/write operand (+) as a general purpose register (r).; * (acc) // and set acc as the operand; * );; *; * Because of the 'r', the compiler has promised that seed will be in a; * general purpose register and the '+' says that it will be 'read/write',; * so it has to assume it has changed. It is like volatile without all the; * loads and stores.; *; * Since the argument has to be in a normal register (not an SSE register),; * each time XXH32_round is called, it is impossible to vectorize.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:1057,Bridg,Bridge,1057,builtins/xxhash/xxhash.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h,1,['Bridg'],['Bridge']
Integrability,"W can issue several instructions from different; // wavefronts if different types, etc); //; // This scheduler tries to solve the scheduling problem by dividing it into; // simpler sub-problems. It divides the instructions into blocks, schedules; // locally inside the blocks where it takes care of low latencies, and then; // chooses the order of the blocks by taking care of high latencies.; // Dividing the instructions into blocks helps control keeping register; // usage low.; //; // First the instructions are put into blocks.; // We want the blocks help control register usage and hide high latencies; // later. To help control register usage, we typically want all local; // computations, when for example you create a result that can be consumed; // right away, to be contained in a block. Block inputs and outputs would; // typically be important results that are needed in several locations of; // the shader. Since we do want blocks to help hide high latencies, we want; // the instructions inside the block to have a minimal set of dependencies; // on high latencies. It will make it easy to pick blocks to hide specific; // high latencies.; // The block creation algorithm is divided into several steps, and several; // variants can be tried during the scheduling process.; //; // Second the order of the instructions inside the blocks is chosen.; // At that step we do take into account only register usage and hiding; // low latency instructions; //; // Third the block order is chosen, there we try to hide high latencies; // and keep register usage low.; //; // After the third step, a pass is done to improve the hiding of low; // latencies.; //; // Actually when talking about 'low latency' or 'high latency' it includes; // both the latency to get the cache (or global mem) data go to the register,; // and the bandwidth limitations.; // Increasing the number of active wavefronts helps hide the former, but it; // doesn't solve the latter, thus why even if wavefront count is hi",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIMachineScheduler.cpp:2636,depend,dependencies,2636,interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIMachineScheduler.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIMachineScheduler.cpp,1,['depend'],['dependencies']
Integrability,"XCF ( GIMP's native format ).; * Overall supported:; * via external libraries :; * XPM, JPEG, PNG, TIFF, GIF; * via built in code :; * XPM, XCF, PNM, PPM, BMP, ICO, CUR; * Note that XPM can be supported both via built-in code or via libXpm,; * depending on compilation configuration.; * Actuall image file format is autodetected from the file contents -; * file name extention is not used and can be anything at all.; *; * 6. Image export into many popular file formats. Currently implemented :; * XPM, JPEG, PNG, GIF. Work is underway to implement support for TIFF,; * XCF, BMP, ICO.; *; * 7. Image quantization to arbitrary size colormap.; *; * 8. libAfterImage could be used without X window system, which is; * coninient for such thing as web development. XML Image manipulation; * tool, that could be used in such activity is included (see ascompose.c); *; * 9. Image reference counting; *; * USES; * libAfterBase - AfterStep basic functionality library. That Includes; * Hash tables, file search methods, message output, generic types.; * However effort has been made to allow for standalone configuration as; * well. If libAfterBase is not found at compilation time - libAfterImage; * will use extract from libAfterBase included with libAfterImage.; *; * SEE ALSO; * Examples; * API Reference; *; * TODO; * Implement support for Targa and PCX image format and maybe some other; * formats as well.; *; * Implement complete support for I18N internationalization.; *; * Implement color<->pixel conversion for all colordepths.; *; * AUTHOR; * Sasha Vasko <sasha at aftercode dot net>; *********/; /****h* libAfterImage/Examples; * EXAMPLE; * ASView - image loading from the file and displaying in window.; * ASScale - image loading from file and scaling to arbitrary size.; * ASTile - image loading from file, tiling and tinting to arbitrary; * size and color.; * ASMerge - imgae loading and merging with another image.; * ASGrad - mutlipoint gradient drawing.; * ASFlip - image loading from file ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/afterimage.h:5233,message,message,5233,graf2d/asimage/src/libAfterImage/afterimage.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/afterimage.h,1,['message'],['message']
Integrability,"[ 39.34% ]; /// - JFPA [ 39.34% ]; /// - JFPU0 [ 39.34% ]; /// Data Dependencies: [ 1.42% ]; /// - Register Dependencies [ 1.42% ]; /// - Memory Dependencies [ 0.00% ]; ///; /// According to the example, backend pressure increased during the 40.76% of; /// the simulated cycles. In particular, the major cause of backend pressure; /// increases was the contention on floating point adder JFPA accessible from; /// pipeline resource JFPU0.; ///; /// At the end of each cycle, if pressure on the simulated out-of-order buffers; /// has increased, a backend pressure event is reported.; /// In particular, this occurs when there is a delta between the number of uOps; /// dispatched and the number of uOps issued to the underlying pipelines.; ///; /// The bottleneck analysis view is also responsible for identifying and; /// printing the most ""critical"" sequence of dependent instructions according to; /// the simulated run.; ///; /// Below is the critical sequence computed for the dot-product example on; /// btver2:; ///; /// Instruction Dependency Information; /// +----< 2. vhaddps %xmm3, %xmm3, %xmm4; /// |; /// | < loop carried > ; /// |; /// | 0. vmulps	 %xmm0, %xmm0, %xmm2; /// +----> 1. vhaddps %xmm2, %xmm2, %xmm3 ## RESOURCE interference: JFPA [ probability: 73% ]; /// +----> 2. vhaddps %xmm3, %xmm3, %xmm4 ## REGISTER dependency: %xmm3; /// |; /// | < loop carried > ; /// |; /// +----> 1. vhaddps %xmm2, %xmm2, %xmm3 ## RESOURCE interference: JFPA [ probability: 73% ]; ///; ///; /// The algorithm that computes the critical sequence is very similar to a; /// critical path analysis.; /// ; /// A dependency graph is used internally to track dependencies between nodes.; /// Nodes of the graph represent instructions from the input assembly sequence,; /// and edges of the graph represent data dependencies or processor resource; /// interferences.; ///; /// Edges are dynamically 'discovered' by observing instruction state; /// transitions and backend pressure increase events. Edge",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-mca/Views/BottleneckAnalysis.h:1847,Depend,Dependency,1847,interpreter/llvm-project/llvm/tools/llvm-mca/Views/BottleneckAnalysis.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-mca/Views/BottleneckAnalysis.h,1,['Depend'],['Dependency']
Integrability,"\f$; /// for all options except for the; /// bayesian methods where the result depends on the chosen option.; ///; /// If the denominator becomes 0 or pass > total, the corresponding bin is; /// skipped.; ///; /// ### 2) calculating ratios of two Poisson means (option 'pois'):; ///; /// The two histograms are interpreted as independent Poisson processes and the ratio; /// \f[; /// \tau = \frac{n_{1}}{n_{2}} = \frac{\varepsilon}{1 - \varepsilon}; /// \f]; /// with \f$\varepsilon = \frac{n_{1}}{n_{1} + n_{2}}\f$.; /// The histogram 'pass' is interpreted as \f$n_{1}\f$ and the total histogram; /// is used for \f$n_{2}\f$.; ///; /// The (asymmetric) uncertainties of the Poisson ratio are linked to the uncertainties; /// of efficiency by a parameter transformation:; /// \f[; /// \Delta \tau_{low/up} = \frac{1}{(1 - \varepsilon)^{2}} \Delta \varepsilon_{low/up}; /// \f]; ///; /// The x errors span each histogram bin (lowedge ... lowedge+width); /// The y errors depend on the chosen statistic methode which can be determined; /// by the options given below. For a detailed description of the used statistic; /// calculations please have a look at the corresponding functions!; ///; /// Options:; /// - v : verbose mode: prints information about the number of used bins; /// and calculated efficiencies with their errors; /// - cl=x : determine the used confidence level (0<x<1) (default is 0.683); /// - cp : Clopper-Pearson interval (see TEfficiency::ClopperPearson); /// - w : Wilson interval (see TEfficiency::Wilson); /// - n : normal approximation propagation (see TEfficiency::Normal); /// - ac : Agresti-Coull interval (see TEfficiency::AgrestiCoull); /// - fc : Feldman-Cousins interval (see TEfficiency::FeldmanCousinsInterval); /// - midp : Lancaster mid-P interval (see TEfficiency::MidPInterval); /// - b(a,b): bayesian interval using a prior probability ~Beta(a,b); a,b > 0; /// (see TEfficiency::Bayesian); /// - mode : use mode of posterior for Bayesian interval (default is mea",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphAsymmErrors.cxx:1819,depend,depend,1819,hist/hist/src/TGraphAsymmErrors.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphAsymmErrors.cxx,1,['depend'],['depend']
Integrability,"_Job.cxx.; *; * Most Jobs will also want to override the virtual update_state() function.; * This function can be used to send and receive state from master to worker.; * In the worker loop, when something is received over the ZeroMQ ""SUB"" socket,; * update_state() is called to put the received data into the right places,; * thus updating for instance parameter values on the worker that were updated; * since the last call on the master side.; *; * ## Message protocol; *; * One simple rule must be upheld for the messages that the implementer will; * send with 'send_back_task_result_from_worker' and 'update_state': the first; * part of the message must always be the 'Job''s ID, stored in 'Job::id'.; * The rest of the message, i.e. the actual data to be sent, is completely up; * to the implementation. Note that on the receiving end, i.e. in the; * implementation of 'receive_task_result_on_master', one will get the whole; * message, but the 'Job' ID part will already have been identified in the; * 'JobManager', so one needn't worry about it further inside; * 'Job::receive_task_result_on_master' (it is already routed to the correct; * 'Job'). The same goes for the receiving end of 'update_state', except that; * update_state is routed from the 'worker_loop', not the 'JobManager'.; *; * A second rule applies to 'update_state' messages: the second part must be; * a state identifier. This identifier will also be sent along with tasks to; * the queue. When a worker then takes a task from the queue, it can check; * whether it has already updated its state to what is expected to be there; * for the task at hand. If not, it should wait for the new state to arrive; * over the state subscription socket. Note: it is the implementer's task to; * actually update 'Job::state_id_' inside 'Job::update_state()'!; *; * ## Implementers notes; *; * The type of result from each task is strongly dependent on the Job at hand; * and so Job does not provide a default results member. It is up to t",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Job.cxx:1565,message,message,1565,roofit/multiprocess/src/Job.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Job.cxx,2,"['message', 'rout']","['message', 'routed']"
Integrability,"`; * When a PDF is wrapped with a RooBinSamplingPDF, just use the bin sampling PDF instead of the original one for fits; * or plotting etc.; * \note The binning will be taken from the observable. Make sure that this binning is the same as the one of the dataset that should be fit.; * Use RooRealVar::setBinning() to adapt it.; * - Instruct test statistics to carry out this wrapping automatically:; * ```; * pdf.fitTo(data, IntegrateBins(<precision>));; * ```; * This method is especially useful when used with a simultaneous PDF, since each component will automatically be wrapped,; * depending on the value of `precision`:; * - `precision < 0.`: None of the PDFs are touched, bin sampling is off.; * - `precision = 0.`: Continuous PDFs that are fit to a RooDataHist are wrapped into a RooBinSamplingPdf. The target precision; * forwarded to the integrator is 1.E-4 (the default argument of the constructor).; * - `precision > 0.`: All continuous PDFs are automatically wrapped into a RooBinSamplingPdf, regardless of what data they are; * fit to (see next paragraph). The same `'precision'` is used for all integrators.; *; * ### Simulating a binned fit using RooDataSet; * Some frameworks use unbinned data (RooDataSet) to simulate binned datasets. By adding one entry for each bin centre with the; * appropriate weight, one can achieve the same result as fitting with RooDataHist. In this case, however, RooFit cannot; * auto-detect that a binned fit is running, and that an integration over the bin is desired (note that there are no bins to; * integrate over in this kind of dataset).; *; * In this case, `IntegrateBins(>0.)` needs to be used, and the desired binning needs to be assigned to the observable; * of the dataset:; * ```; * RooRealVar x(""x"", ""x"", 0., 5.);; * x.setBins(10);; *; * // <create dataset and model>; *; * model.fitTo(data, IntegrateBins(>0.));; * ```; *; * \see RooAbsPdf::fitTo(); * \see IntegrateBins(); *; * \note This feature is currently limited to one-dimensional P",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooBinSamplingPdf.cxx:2930,wrap,wrapped,2930,roofit/roofitcore/src/RooBinSamplingPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooBinSamplingPdf.cxx,1,['wrap'],['wrapped']
Integrability,"a build.ninja file. Suppose you have a header file that's autogenerated by (for example) Tablegen.; If a C++ compilation step needs to include that header, then it must be; executed after the Tablegen build step that generates the header. So the; dependency graph in build.ninja should have the Tablegen build step as an; ancestor of the C++ one. If it does not, then there's a latent build-failure; bug, because depending on the order that ninja chooses to schedule its build; steps, the C++ build step could run first, and fail because the header it needs; does not exist yet. But because that kind of bug can easily be latent or intermittent, you might; not notice, if your local test build happens to succeed. What you'd like is a; way to detect problems of this kind reliably, even if they _didn't_ cause a; failure on your first test. This script tries to do that. It's specific to the 'ninja' build tool, because; ninja has useful auxiliary output modes that produce the necessary data:. - 'ninja -t graph' emits the full DAG of formal dependencies derived from; build.ninja (in Graphviz format). - 'ninja -t deps' dumps the database of dependencies discovered at build time; by finding out which headers each source file actually included. By cross-checking these two sources of data against each other, you can find; true dependencies shown by 'deps' that are not reflected as formal dependencies; in 'graph', i.e. a generated header that is required by a given source file but; not forced to be built first. To run it:. - set up a build directory using ninja as the build tool (cmake -G Ninja). - in that build directory, run ninja to perform an actual build (populating; the dependency database). - then, in the same build directory, run this script. No arguments are needed; (but -C and -f are accepted, and propagated to ninja for convenience). Requirements outside core Python: the 'pygraphviz' module, available via pip or; as the 'python3-pygraphviz' package in Debian and Ubuntu. """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/check_ninja_deps.py:1092,depend,dependencies,1092,interpreter/llvm-project/llvm/utils/check_ninja_deps.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/check_ninja_deps.py,5,['depend'],"['dependencies', 'dependency']"
Integrability,"a copy of the GNU Library General Public; * License along with the GNU LIBICONV Library; see the file COPYING.LIB.; * If not, write to the Free Software Foundation, Inc., 51 Franklin Street,; * Fifth Floor, Boston, MA 02110-1301, USA.; */; /*; * ISO-IR-165; */; /*; * ISO-IR-165 is an extension of GB 2312, consisting of:; * 1. GB 6345.1-86 corrections:; * Two corrections to GB 2312, at 0x2367 and 0x6F71.; * 2. GB 6345.1-86 additions:; * - 6 new full-width pinyin characters in row 0x28.; * - ISO646-CN in row 0x2A.; * - 32 half-width pinyin characters in row 0x2B.; * 3. GB 8565.2-88 additions:; * - 50 characters in row 0x2D.; * - 92 characters in row 0x2E.; * - 93 characters in row 0x2F.; * - 470 characters in rows 0x7A-0x7E.; * 4. ISO-IR-165 additions:; * - 22 characters in row 0x26.; * - 94 characters in row 0x2C.; * - 44 new characters in row 0x2D.; * - 1 new character in row 0x2F.; *; * The conversion table was created from the following sources:; * Ad 1. The 0x2367 correction is already integrated in the unicode.org; * GB2312.TXT table. The 0x6F71 mapping is the same in the unicode.org; * GB2312.TXT and UNIHAN.TXT table and in Koichi Yasuoka's Uni2GB table,; * so we assume it's correct.; * The unicode.org UNIHAN.TXT table about GB 8565 is not usable: it has; * extraneous code points at rows 0x28, 0x2C, 0x2D. Note also that it does; * not list the 69 non-hanzi in row 0x2F. Moreover, it has the characters; * 0x2F7A-0x2F7D shifted down by one to 0x2F79-0x2F7C.; * Therefore we take the GB8565 and ISO-IR-165 data from Koichi Yasuoka's; * Uni2GB table.; * Ad 1. Yasuoka maps 0x2367 to U+0261 (small script g) and 0x2840 to U+FF47; * (full-width small normal g). While coherent with ISO-IR's 165.pdf,; * this disagrees with Ken Lunde's book: He says that ISO-IR-165; * includes the GB6345 correction, i.e. maps 0x2367 to U+FF47 or U+0067; * and _not_ to U+0261 (small script g).; * To overcome the confusion, we just map both 0x2367 and 0x2840 to; * U+FF47.; * Ad 2. Row 0x28: Ad",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/iconv/isoir165.h:1695,integrat,integrated,1695,graf2d/win32gdk/gdk/src/iconv/isoir165.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/iconv/isoir165.h,1,['integrat'],['integrated']
Integrability,"additional requirements that ensure that the number of iterations is; /// known before entering the loop and allow skipping to an arbitrary iteration.; /// The OMPCanonicalLoop AST node wraps a ForStmt or CXXForRangeStmt that is; /// known to fulfill OpenMP's canonical loop requirements because of being; /// associated to an OMPLoopBasedDirective. That is, the general structure is:; ///; /// OMPLoopBasedDirective; /// [`- CapturedStmt ]; /// [ `- CapturedDecl]; /// ` OMPCanonicalLoop; /// `- ForStmt/CXXForRangeStmt; /// `- Stmt; ///; /// One or multiple CapturedStmt/CapturedDecl pairs may be inserted by some; /// directives such as OMPParallelForDirective, but others do not need them; /// (such as OMPTileDirective). In The OMPCanonicalLoop and; /// ForStmt/CXXForRangeStmt pair is repeated for loop associated with the; /// directive. A OMPCanonicalLoop must not appear in the AST unless associated; /// with a OMPLoopBasedDirective. In an imperfectly nested loop nest, the; /// OMPCanonicalLoop may also be wrapped in a CompoundStmt:; ///; /// [...]; /// ` OMPCanonicalLoop; /// `- ForStmt/CXXForRangeStmt; /// `- CompoundStmt; /// |- Leading in-between code (if any); /// |- OMPCanonicalLoop; /// | `- ForStmt/CXXForRangeStmt; /// | `- ...; /// `- Trailing in-between code (if any); ///; /// The leading/trailing in-between code must not itself be a OMPCanonicalLoop; /// to avoid confusion which loop belongs to the nesting.; ///; /// There are three different kinds of iteration variables for different; /// purposes:; /// * Loop user variable: The user-accessible variable with different value for; /// each iteration.; /// * Loop iteration variable: The variable used to identify a loop iteration;; /// for range-based for-statement, this is the hidden iterator '__begin'. For; /// other loops, it is identical to the loop user variable. Must be a; /// random-access iterator, pointer or integer type.; /// * Logical iteration counter: Normalized loop counter starting at 0 and; /// i",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/StmtOpenMP.h:1826,wrap,wrapped,1826,interpreter/llvm-project/clang/include/clang/AST/StmtOpenMP.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/StmtOpenMP.h,1,['wrap'],['wrapped']
Integrability,"akers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TList; \ingroup Containers; A doubly linked list. All classes inheriting from TObject can be; inserted in a TList. Before being inserted into the list the object; pointer is wrapped in a TObjLink object which contains, besides; the object pointer also a previous and next pointer. There are several ways to iterate over a TList; in order of preference, if; not forced by other constraints:. 1. (Preferred way) Using the C++ range-based `for` or `begin()` / `end()`:; ~~~ {.cpp}; for(TObject *obj: *GetListOfPrimitives()); obj->Write();; ~~~; 2. Using the R__FOR_EACH macro:; ~~~ {.cpp}; GetListOfPrimitives()->R__FOR_EACH(TObject,Paint)(option);; ~~~; 3. Using the TList iterator TListIter (via the wrapper class TIter):; ~~~ {.cpp}; TIter next(GetListOfPrimitives());; while (TObject *obj = next()); obj->Draw(next.GetOption());; ~~~; 4. Using the TList iterator TListIter and std::for_each algorithm:; ~~~ {.cpp}; // A function object, which will be applied to each element; // of the given range.; struct STestFunctor {; bool operator()(TObject *aObj) {; ...; return true;; }; }; ...; ...; TIter iter(mylist);; for_each( iter.Begin(), TIter::End(), STestFunctor() );; ~~~; 5. Using the TObjLink list entries (that wrap the TObject*):; ~~~ {.cpp}; TObjLink *lnk = GetListOfPrimitives()->FirstLink();; while (lnk) {; lnk->GetObject()->Draw(lnk->GetOption());; lnk = lnk->Next();; }; ~~~; 6. Using the TList's After() and Before() member functions:; ~~~ {.cpp}; TFree *idcur = this;; while (idcur) {; ...; ...; idcur = (TFree*)GetListOfFree()->After(idcur);; }; ~~~; Methods 3, 4 and 5 can also easily iterate backwards using either; a backward TIter (using argument kIterBackward) or by using; LastLink() and lnk->Prev() or by using the Before() member.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TList.cxx:1646,wrap,wrap,1646,core/cont/src/TList.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TList.cxx,1,['wrap'],['wrap']
Integrability,"al, for perfectly mixed samples *; * eg. purity=50% , N_signal = N_bkg *; * *; * Separation Gain: *; * the measure of how the quality of separation of the sample increases *; * by splitting the sample e.g. into a ""left-node"" and a ""right-node"" *; * (N * Index_parent) - (N_left * Index_left) - (N_right * Index_right) *; * this is then the quality criterion which is optimized for when trying *; * to increase the information in the system (making the best selection *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * Heidelberg U., Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::SeparationBase; \ingroup TMVA; An interface to calculate the ""SeparationGain"" for different; separation criteria used in various training algorithms. There are two things: the Separation Index, and the Separation Gain; Separation Index:; Measure of the ""purity"" of a sample. If all elements (events) in the; sample belong to the same class (e.g. signal or background), than the; separation index is 0 (meaning 100% purity (or 0% purity as it is; symmetric. The index becomes maximal, for perfectly mixed samples; eg. purity=50% , N_signal = N_bkg. Separation Gain:; the measure of how the quality of separation of the sample increases; by splitting the sample e.g. into a ""left-node"" and a ""right-node""; (N * Index_parent) - (N_left * Index_left) - (N_right * Index_right); this is then the quality criterion which is optimized for when trying; to increase the information in the system (making the best selection; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/SeparationBase.cxx:1888,interface,interface,1888,tmva/tmva/src/SeparationBase.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/SeparationBase.cxx,1,['interface'],['interface']
Integrability,"ally, if you control the compression process, you can also ignore all buffer size rules,; as long as the encoder and decoder progress in ""lock-step"",; aka use exactly the same buffer sizes, break contiguity at the same place, etc. Once buffers are setup, start decompression, with ZSTD_decompressBegin().; If decompression requires a dictionary, use ZSTD_decompressBegin_usingDict() or ZSTD_decompressBegin_usingDDict(). Then use ZSTD_nextSrcSizeToDecompress() and ZSTD_decompressContinue() alternatively.; ZSTD_nextSrcSizeToDecompress() tells how many bytes to provide as 'srcSize' to ZSTD_decompressContinue().; ZSTD_decompressContinue() requires this _exact_ amount of bytes, or it will fail. @result of ZSTD_decompressContinue() is the number of bytes regenerated within 'dst' (necessarily <= dstCapacity).; It can be zero : it just means ZSTD_decompressContinue() has decoded some metadata item.; It can also be an error code, which can be tested with ZSTD_isError(). A frame is fully decoded when ZSTD_nextSrcSizeToDecompress() returns zero.; Context can then be reset to start a new decompression. Note : it's possible to know if next input to present is a header or a block, using ZSTD_nextInputType().; This information is not required to properly decode a frame. == Special case : skippable frames ==. Skippable frames allow integration of user-defined data into a flow of concatenated frames.; Skippable frames will be ignored (skipped) by decompressor.; The format of skippable frames is as follows :; a) Skippable frame ID - 4 Bytes, Little endian format, any value from 0x184D2A50 to 0x184D2A5F; b) Frame Size - 4 Bytes, Little endian format, unsigned 32-bits; c) Frame Content - any content (User Data) of length equal to Frame Size; For skippable frames ZSTD_getFrameHeader() returns zfhPtr->frameType==ZSTD_skippableFrame.; For skippable frames ZSTD_decompressContinue() always returns 0 : it only skips the content.; */; /*===== Buffer-less streaming decompression functions =====*/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h:4081,integrat,integration,4081,builtins/zstd/zstd.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h,1,['integrat'],['integration']
Integrability,"amed in class B.; ///; /// C++0x [class.access.base]p4:; /// A base class B of N is accessible at R, if; /// [B1] an invented public member of B would be a public member of N, or; /// [B2] R occurs in a member or friend of class N, and an invented public; /// member of B would be a private or protected member of N, or; /// [B3] R occurs in a member or friend of a class P derived from N, and an; /// invented public member of B would be a private or protected member; /// of P, or; /// [B4] there exists a class S such that B is a base class of S accessible; /// at R and S is a base class of N accessible at R.; ///; /// Along a single inheritance path we can restate both of these; /// iteratively:; ///; /// First, we note that M1-4 are equivalent to B1-4 if the member is; /// treated as a notional base of its declaring class with inheritance; /// access equivalent to the member's access. Therefore we need only; /// ask whether a class B is accessible from a class N in context R.; ///; /// Let B_1 .. B_n be the inheritance path in question (i.e. where; /// B_1 = N, B_n = B, and for all i, B_{i+1} is a direct base class of; /// B_i). For i in 1..n, we will calculate ACAB(i), the access to the; /// closest accessible base in the path:; /// Access(a, b) = (* access on the base specifier from a to b *); /// Merge(a, forbidden) = forbidden; /// Merge(a, private) = forbidden; /// Merge(a, b) = min(a,b); /// Accessible(c, forbidden) = false; /// Accessible(c, private) = (R is c) || IsFriend(c, R); /// Accessible(c, protected) = (R derived from c) || IsFriend(c, R); /// Accessible(c, public) = true; /// ACAB(n) = public; /// ACAB(i) =; /// let AccessToBase = Merge(Access(B_i, B_{i+1}), ACAB(i+1)) in; /// if Accessible(B_i, AccessToBase) then public else AccessToBase; ///; /// B is an accessible base of N at R iff ACAB(1) = public.; ///; /// \param FinalAccess the access of the ""final step"", or AS_public if; /// there is no final step.; /// \return null if friendship is dependent",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaAccess.cpp:2680,depend,dependent,2680,interpreter/llvm-project/clang/lib/Sema/SemaAccess.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaAccess.cpp,1,['depend'],['dependent']
Integrability,"ample and \f$ l\f$ labels; \f$ L\f$ functions of \f$ N\f$ variables, and \f$ L \leq M\f$. That is, \f$ f_{jl}\f$ is; the term (or function) numbered \f$ l\f$ evaluated at the data point; \f$ j\f$. We have to normalise \f$\mathbf{x}_j\f$ to \f$ [-1,1]\f$ for this to; succeed [5] (TMultiDimFit::MakeNormalized). We then define a; matrix \f$\mathsf{W}\f$ of which the columns \f$\mathbf{w}_j\f$ are given by; \f{eqnarray*}{; \mathbf{w}_1 &=& \mathbf{f}_1 = F_1\left(\mathbf x_1\right)\\; \mathbf{w}_l &=& \mathbf{f}_l - \sum^{l-1}_{k=1} \frac{\mathbf{f}_l \bullet; \mathbf{w}_k}{\mathbf{w}_k^2}\mathbf{w}_k\,.; \f}; and \f$\mathbf{w}_{l}\f$ is the component of \f$\mathbf{f}_{l} \f$ orthogonal; to \f$\mathbf{w}_{1}, \ldots, \mathbf{w}_{l-1}\f$. Hence we obtain [3],; \f[; \mathbf{w}_k\bullet\mathbf{w}_l = 0\quad\mbox{if}~k \neq l\quad.; \f]; We now take as a new model \f$\mathsf{W}\mathbf{a}\f$. We thus want to; minimize; \f[; S\equiv \left(\mathbf{D} - \mathsf{W}\mathbf{a}\right)^2\quad,; \f]; where \f$\mathbf{D} = \left(D_1,\ldots,D_M\right)\f$ is a vector of the; dependent quantity in the sample. Differentiation with respect to; \f$ a_j\f$ gives, using [6], <a name=""eq:dS2""></a>; \f[; \mathbf{D}\bullet\mathbf{w}_l - a_l\mathbf{w}_l^2 = 0; \f]; or; \f[; a_l = \frac{\mathbf{D}_l\bullet\mathbf{w}_l}{\mathbf{w}_l^2}; \f]; Let \f$ S_j\f$ be the sum of squares of residuals when taking \f$ j\f$ functions; into account. Then; \f[; S_l = \left[\mathbf{D} - \sum^l_{k=1} a_k\mathbf{w}_k\right]^2; = \mathbf{D}^2 - 2\mathbf{D} \sum^l_{k=1} a_k\mathbf{w}_k; + \sum^l_{k=1} a_k^2\mathbf{w}_k^2; \f]; Using [9], we see that; \f{eqnarray*}{; S_l &=& \mathbf{D}^2 - 2 \sum^l_{k=1} a_k^2\mathbf{w}_k^2 +; \sum^j_{k=1} a_k^2\mathbf{w}_k^2\nonumber\\; &=& \mathbf{D}^2 - \sum^l_{k=1} a_k^2\mathbf{w}_k^2\nonumber\\; &=& \mathbf{D}^2 - \sum^l_{k=1} \frac{\left(\mathbf D\bullet \mathbf; w_k\right)}{\mathbf w_k^2}; \f}; So for each new function \f$ F_l\f$ included in the model, we get a; reduction of the",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TMultiDimFit.cxx:7627,depend,dependent,7627,hist/hist/src/TMultiDimFit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TMultiDimFit.cxx,1,['depend'],['dependent']
Integrability,"ams are used to display the mean; value of Z and its error for each cell in X,Y.; Profile2D histograms are in many cases an; elegant replacement of three-dimensional histograms : the inter-relation of three; measured quantities X, Y and Z can always be visualized by a three-dimensional; histogram or scatter-plot; its representation on the line-printer is not particularly; satisfactory, except for sparse data. If Z is an unknown (but single-valued); approximate function of X,Y this function is displayed by a profile2D histogram with; much better precision than by a scatter-plot. The following formulae show the cumulated contents (capital letters) and the values; displayed by the printing or plotting routines (small letters) of the elements for cell i, j.; \f[; \begin{align}; H(i,j) &= \sum w \cdot Z \\; E(i,j) &= \sum w \cdot Z^2 \\; W(i,j) &= \sum w \\; h(i,j) &= \frac{H(i,j)}{W(i,j)} \\; s(i,j) &= \sqrt{E(i,j)/W(i,j)- h(i,j)^2} \\; e(i,j) &= \frac{s(i,j)}{\sqrt{W(i,j)}}; \end{align}; \f]; The bin content is always the mean of the Z values, but errors change depending on options:; \f[; \begin{align}; \text{GetBinContent}(i,j) &= h(i,j) \\; \text{GetBinError}(i,j) &=; \begin{cases}; e(i,j) &\text{if option="""" (default). Error of the mean of all z values.} \\; s(i,j) &\text{if option=""s"". Standard deviation of z values.} \\; \begin{cases} e(j) &\text{if } h(i,j) \ne 0 \\ 1/\sqrt{12 N} &\text{if } h(i,j)=0 \end{cases} &\text{if option=""i"". This is useful for storing integers such as ADC counts.} \\; 1/\sqrt{W(i,j)} &\text{if option=""g"". Error of a weighted mean when combining measurements with variances of } w. \\; \end{cases}; \end{align}; \f]. In the special case where s(I,J) is zero (eg, case of 1 entry only in one cell); the bin error e(I,J) is computed from the average of the s(I,J) for all cells; if the static function TProfile2D::Approximate has been called.; This simple/crude approximation was suggested in order to keep the cell; during a fit operation. But note",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TProfile2D.cxx:1136,depend,depending,1136,hist/hist/src/TProfile2D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TProfile2D.cxx,1,['depend'],['depending']
Integrability,"ar : for ROOT::Math::GSLIntegrator adaptive singular method (QAGS); /// - NonAdaptive : for ROOT::Math::GSLIntegrator non adaptive (QNG); ///; /// In order to use the GSL integrators one needs to have the MathMore library installed; ///; /// Note 1:; ///; /// Values of the function f(x) at the interval end-points A and B are not; /// required. The subprogram may therefore be used when these values are; /// undefined.; ///; /// Note 2:; ///; /// Instead of TF1::Integral, you may want to use the combination of; /// TF1::CalcGaussLegendreSamplingPoints and TF1::IntegralFast.; /// See an example with the following script:; ///; /// ~~~ {.cpp}; /// void gint() {; /// TF1 *g = new TF1(""g"",""gaus"",-5,5);; /// g->SetParameters(1,0,1);; /// //default gaus integration method uses 6 points; /// //not suitable to integrate on a large domain; /// double r1 = g->Integral(0,5);; /// double r2 = g->Integral(0,1000);; ///; /// //try with user directives computing more points; /// Int_t np = 1000;; /// double *x=new double[np];; /// double *w=new double[np];; /// g->CalcGaussLegendreSamplingPoints(np,x,w,1e-15);; /// double r3 = g->IntegralFast(np,x,w,0,5);; /// double r4 = g->IntegralFast(np,x,w,0,1000);; /// double r5 = g->IntegralFast(np,x,w,0,10000);; /// double r6 = g->IntegralFast(np,x,w,0,100000);; /// printf(""g->Integral(0,5) = %g\n"",r1);; /// printf(""g->Integral(0,1000) = %g\n"",r2);; /// printf(""g->IntegralFast(n,x,w,0,5) = %g\n"",r3);; /// printf(""g->IntegralFast(n,x,w,0,1000) = %g\n"",r4);; /// printf(""g->IntegralFast(n,x,w,0,10000) = %g\n"",r5);; /// printf(""g->IntegralFast(n,x,w,0,100000)= %g\n"",r6);; /// delete [] x;; /// delete [] w;; /// }; /// ~~~; ///; /// This example produces the following results:; ///; /// ~~~ {.cpp}; /// g->Integral(0,5) = 1.25331; /// g->Integral(0,1000) = 1.25319; /// g->IntegralFast(n,x,w,0,5) = 1.25331; /// g->IntegralFast(n,x,w,0,1000) = 1.25331; /// g->IntegralFast(n,x,w,0,10000) = 1.25331; /// g->IntegralFast(n,x,w,0,100000)= 1.253; /// ~~~",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TF1.cxx:1745,integrat,integration,1745,hist/hist/src/TF1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TF1.cxx,2,['integrat'],"['integrate', 'integration']"
Integrability,"aracters are written there,; terminated with a zero unless the length is greater than comm_max. When any; of extra, name, or comment are not Z_NULL and the respective field is not; present in the header, then that field is set to Z_NULL to signal its; absence. This allows the use of deflateSetHeader() with the returned; structure to duplicate the header. However if those fields are set to; allocated memory, then the application will need to save those pointers; elsewhere so that they can be eventually freed. If inflateGetHeader is not used, then the header information is simply; discarded. The header is always checked for validity, including the header; CRC if present. inflateReset() will reset the process to discard the header; information. The application would need to call inflateGetHeader() again to; retrieve the header from the next gzip stream. inflateGetHeader returns Z_OK if success, or Z_STREAM_ERROR if the source; stream state was inconsistent.; */; /*; ZEXTERN int ZEXPORT inflateBackInit OF((z_streamp strm, int windowBits,; unsigned char FAR *window));. Initialize the internal stream state for decompression using inflateBack(); calls. The fields zalloc, zfree and opaque in strm must be initialized; before the call. If zalloc and zfree are Z_NULL, then the default library-; derived memory allocation routines are used. windowBits is the base two; logarithm of the window size, in the range 8..15. window is a caller; supplied buffer of that size. Except for special applications where it is; assured that deflate was used with small window sizes, windowBits must be 15; and a 32K byte window must be supplied to be able to decompress general; deflate streams. See inflateBack() for the usage of these routines. inflateBackInit will return Z_OK on success, Z_STREAM_ERROR if any of; the parameters are invalid, Z_MEM_ERROR if the internal state could not be; allocated, or Z_VERSION_ERROR if the version of the library does not match; the version of the header file.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:2623,rout,routines,2623,builtins/zlib/zlib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h,2,['rout'],['routines']
Integrability,"aracters are written there,; terminated with a zero unless the length is greater than comm_max. When; any of extra, name, or comment are not Z_NULL and the respective field is; not present in the header, then that field is set to Z_NULL to signal its; absence. This allows the use of deflateSetHeader() with the returned; structure to duplicate the header. However if those fields are set to; allocated memory, then the application will need to save those pointers; elsewhere so that they can be eventually freed. If inflateGetHeader is not used, then the header information is simply; discarded. The header is always checked for validity, including the header; CRC if present. inflateReset() will reset the process to discard the header; information. The application would need to call inflateGetHeader() again to; retrieve the header from the next gzip stream. inflateGetHeader returns Z_OK if success, or Z_STREAM_ERROR if the source; stream state was inconsistent.; */; /*; ZEXTERN int ZEXPORT inflateBackInit OF((z_streamp strm, int windowBits,; unsigned char FAR *window));. Initialize the internal stream state for decompression using inflateBack(); calls. The fields zalloc, zfree and opaque in strm must be initialized; before the call. If zalloc and zfree are Z_NULL, then the default library-; derived memory allocation routines are used. windowBits is the base two; logarithm of the window size, in the range 8..15. window is a caller; supplied buffer of that size. Except for special applications where it is; assured that deflate was used with small window sizes, windowBits must be 15; and a 32K byte window must be supplied to be able to decompress general; deflate streams. See inflateBack() for the usage of these routines. inflateBackInit will return Z_OK on success, Z_STREAM_ERROR if any of; the parameters are invalid, Z_MEM_ERROR if the internal state could not; be allocated, or Z_VERSION_ERROR if the version of the library does not; match the version of the header file.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/zlib.h:2612,rout,routines,2612,graf2d/asimage/src/libAfterImage/zlib/zlib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/zlib.h,2,['rout'],['routines']
Integrability,"arameters,; /// which are also stored in the cache. Subsequent evaluations for different values of the convolution observable and; /// identical parameters will be retrieved from the cache. If one or more; /// of the parameters change, the cache will be updated, *i.e.*, a new FFT runs.; ///; /// The sampling density of the FFT is controlled by the binning of the; /// the convolution observable, which can be changed using RooRealVar::setBins(N).; /// For good results, N should be large (>=1000). Additional interpolation; /// between the bins may improve the result if coarse binnings are chosen. These can be; /// activated in the constructor or by calling `setInterpolationOrder()`.; /// For N >> 1000, interpolation will not substantially improve the accuracy.; ///; /// Additionial information on caching can be displayed by monitoring; /// the message stream with topic ""Caching"" at the INFO level, *i.e.*; /// by calling `RooMsgService::instance().addStream(RooMsgService::INFO,Topic(""Caching""))`; /// to see these message on stdout.; ///; /// Multi-dimensional convolutions are not supported at the moment.; ///; /// ---; ///; /// Installing an external version of FFTW on Linux and compiling ROOT to use it; /// -------; ///; /// You have two options:; /// * **Recommended**: ROOT can automatically install FFTW for itself, see `builtin_fftw3` at https://root.cern/building-root; /// * Install FFTW and let ROOT discover it. `fftw3` is on by default (see https://root.cern/building-root); ///; /// 1) Go to www.fftw.org and download the latest stable version (a .tar.gz file); ///; /// If you have root access to your machine and want to make a system installation of FFTW; ///; /// 2) Untar fftw-XXX.tar.gz in /tmp, cd into the untarred directory; /// and type './configure' followed by 'make install'.; /// This will install fftw in /usr/local/bin,lib etc...; ///; /// 3) Start from a source installation of ROOT. ROOT should discover it. See https://root.cern/building-root; ///; ///; /",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFFTConvPdf.cxx:4124,message,message,4124,roofit/roofitcore/src/RooFFTConvPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFFTConvPdf.cxx,1,['message'],['message']
Integrability,"are the 3x3 rotation matrix components,; - `tx`, `ty`, `tz` are the translation components; - `sx`, `sy`, `sz` are arbitrary scale constants on each axis,. The disadvantage in using this approach is that computation for 4x4 matrices; is expensive. Even combining two translation would become a multiplication; of their corresponding matrices, which is quite an undesired effect. On the; other hand, it is not a good idea to store a translation as a block of 16; numbers. We have therefore chosen to implement each basic transformation type; as a class deriving from the same basic abstract class and handling its specific; data and point/vector transformation algorithms. \image html geom_transf.jpg. ### The base class TGeoMatrix defines abstract metods for:. #### translation, rotation and scale getters. Every derived class stores only; its specific data, e.g. a translation stores an array of 3 doubles and a; rotation an array of 9. However, asking which is the rotation array of a; TGeoTranslation through the base TGeoMatrix interface is a legal operation.; The answer in this case is a pointer to a global constant array representing; an identity rotation. ~~~ {.cpp}; Double_t *TGeoMatrix::GetTranslation(); Double_t *TGeoMatrix::GetRotation(); Double_t *TGeoMatrix::GetScale(); ~~~. #### MasterToLocal() and LocalToMaster() point and vector transformations :. ~~~ {.cpp}; void TGeoMatrix::MasterToLocal(const Double_t *master, Double_t *local); void TGeoMatrix::LocalToMaster(const Double_t *local, Double_t *master); void TGeoMatrix::MasterToLocalVect(const Double_t *master, Double_t *local); void TGeoMatrix::LocalToMasterVect(const Double_t *local, Double_t *master); ~~~. These allow correct conversion also for reflections. #### Transformation type getters :. ~~~ {.cpp}; Bool_t TGeoMatrix::IsIdentity(); Bool_t TGeoMatrix::IsTranslation(); Bool_t TGeoMatrix::IsRotation(); Bool_t TGeoMatrix::IsScale(); Bool_t TGeoMatrix::IsCombi() (translation + rotation); Bool_t TGeoMatrix::IsGene",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoMatrix.cxx:3377,interface,interface,3377,geom/geom/src/TGeoMatrix.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoMatrix.cxx,1,['interface'],['interface']
Integrability,"art of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // Place garbage collection safepoints at appropriate locations in the IR. This; // does not make relocation semantics or variable liveness explicit. That's; // done by RewriteStatepointsForGC.; //; // Terminology:; // - A call is said to be ""parseable"" if there is a stack map generated for the; // return PC of the call. A runtime can determine where values listed in the; // deopt arguments and (after RewriteStatepointsForGC) gc arguments are located; // on the stack when the code is suspended inside such a call. Every parse; // point is represented by a call wrapped in an gc.statepoint intrinsic.; // - A ""poll"" is an explicit check in the generated code to determine if the; // runtime needs the generated code to cooperate by calling a helper routine; // and thus suspending its execution at a known state. The call to the helper; // routine will be parseable. The (gc & runtime specific) logic of a poll is; // assumed to be provided in a function of the name ""gc.safepoint_poll"".; //; // We aim to insert polls such that running code can quickly be brought to a; // well defined state for inspection by the collector. In the current; // implementation, this is done via the insertion of poll sites at method entry; // and the backedge of most loops. We try to avoid inserting more polls than; // are necessary to ensure a finite period between poll sites. This is not; // because the poll itself is expensive in the generated code; it's not. Polls; // do tend to impact the optimizer itself in negative ways; we'd like to avoid; // perturbing the optimization of the method as much as we can.; //; // We also need to make most call sites parseable. The callee might execute a; // poll (or otherwise",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Scalar/PlaceSafepoints.h:1133,rout,routine,1133,interpreter/llvm-project/llvm/include/llvm/Transforms/Scalar/PlaceSafepoints.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Scalar/PlaceSafepoints.h,2,['rout'],['routine']
Integrability,"as friends of the original; one: rows will be mismatched. Indexed friend trees provide a way to perform simple joins of multiple trees over a common column.; When a certain entry in the main tree (or chain) is loaded, the friend trees (or chains) will then load an entry where the; ""index"" columns have a value identical to the one in the main one. For example, in Python:. ~~~{.py}; main_tree = ...; aux_tree = ... # If a friend tree has an index on `commonColumn`, when the main tree loads; # a given row, it also loads the row of the friend tree that has the same; # value of `commonColumn`; aux_tree.BuildIndex(""commonColumn""). mainTree.AddFriend(aux_tree). df = ROOT.RDataFrame(mainTree); ~~~. RDataFrame supports indexed friend TTrees from ROOT v6.24 in single-thread mode and from v6.28/02 in multi-thread mode. \anchor other-file-formats; ### Reading data formats other than ROOT trees; RDataFrame can be interfaced with RDataSources. The ROOT::RDF::RDataSource interface defines an API that RDataFrame can use to read arbitrary columnar data formats. RDataFrame calls into concrete RDataSource implementations to retrieve information about the data, retrieve (thread-local) readers or ""cursors"" for selected columns; and to advance the readers to the desired data entry.; Some predefined RDataSources are natively provided by ROOT such as the ROOT::RDF::RCsvDS which allows to read comma separated files:; ~~~{.cpp}; auto tdf = ROOT::RDF::FromCSV(""MuRun2010B.csv"");; auto filteredEvents =; tdf.Filter(""Q1 * Q2 == -1""); .Define(""m"", ""sqrt(pow(E1 + E2, 2) - (pow(px1 + px2, 2) + pow(py1 + py2, 2) + pow(pz1 + pz2, 2)))"");; auto h = filteredEvents.Histo1D(""m"");; h->Draw();; ~~~. See also FromNumpy (Python-only), FromRNTuple(), FromArrow(), FromSqlite(). \anchor callgraphs; ### Computation graphs (storing and reusing sets of transformations). As we saw, transformed dataframes can be stored as variables and reused multiple times to create modified versions of the dataset. This implicitly de",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx:74001,interface,interface,74001,tree/dataframe/src/RDataFrame.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx,1,['interface'],['interface']
Integrability,"athmore` support. - GSLSimAn (class ROOT::Math::GSLSimAnMinimizer) available when ROOT is built with `mathmore` support. - Genetic (class ROOT::Math::GeneticMinimizer). - RMinimizer (class ROOT::Math::RMinimizer) available when ROOT is built with `r` support; - BFGS (default); - L-BFGS-S; - Nelder-Mead; - CG; - and more methods, see the Details in the documentation of the function `optimix` of the [optmix R package](https://cran.r-project.org/web/packages/optimx/optimx.pdf). The Minimizer class provides the interface to perform the minimization including. In addition to provide the API for function minimization (via ROOT::Math::Minimizer::Minimize) the Minimizer class provides:; - the interface for setting the function to be minimized. The objective function passed to the Minimizer must implement the multi-dimensional generic interface; ROOT::Math::IBaseFunctionMultiDim. If the function provides gradient calculation (e.g. implementing the ROOT::Math::IGradientFunctionMultiDim interface); the gradient will be used by the Minimizer class, when needed. There are convenient classes for the users to wrap their own functions in this required interface for minimization.; These are the `ROOT::Math::Functor` class and the `ROOT::Math::GradFunctor` class for wrapping functions providing both evaluation and gradient. Some methods, like Fumili, Fumili2 and GSLMultiFit are; specialized method for least-square and also likelihood minimizations. They require then that the given function implements in addition; the `ROOT::Math::FitMethodFunction` interface.; - The interface for setting the initial values for the function variables (which are the parameters in; of the model function in case of solving for fitting) and specifying their limits.; - The interface to set and retrieve basic minimization parameters. These parameter are controlled by the class `ROOT::Math::MinimizerOptions`.; When no parameters are specified the default ones are used. Specific Minimizer options can also be ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Minimizer.h:2506,interface,interface,2506,math/mathcore/inc/Math/Minimizer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Minimizer.h,1,['interface'],['interface']
Integrability,"ation settings using the following; abbreviations:; LIB - shows the current choice between Minuit/Minuit2/Fumili; MIGRAD or FUMILI points to the current minimization method in use.; Itr: - shows the maximum number of iterations nnnn set for the fit.; Prn: - can be DEF/VER/QT and shows the current print option in use. ""Predefined"" combo box - contains a list of predefined functions; in ROOT. The default one is Gaussian. ""Operation"" radio button group defines selected operational mode; between functions: NOP - no operation (default); ADD - addition; CONV - convolution (will be implemented in the future). Users can enter the function expression in a text entry field.; The entered string is checked after Enter key was pressed. An; error message shows up if the string is not accepted. The current; prototype is limited and users have no freedom to enter file/user; function names in this field. ""Set Parameters"" button opens a dialog for parameters settings. ""Fit Settings"" provides user interface elements related to the; fitter. Currently there are two method choices: Chi-square and; Binned Likelihood. ""Linear Fit"" check button sets the use of Linear fitter is it is; selected. Otherwise the option 'F' is applied if polN is selected.; ""Robust"" number entry sets the robust value when fitting graphs.; ""No Chi-square"" check button sets ON/OFF option 'C' - do not; calculate Chi-square (for Linear fitter). Fit options:; ""Integral"" check button switch ON/OFF option 'I' - use integral; of function instead of value in bin center.; ""Best Errors"" sets ON/OFF option 'E' - better errors estimation; using Minos technique.; ""All weights = 1"" sets ON/OFF option 'W' - all weights set to 1,; excluding empty bins and ignoring error bars.; ""Empty bins, weights=1"" sets ON/OFF option 'WW' - all weights; equal to 1, including empty bins, error bars ignored.; ""Use range"" sets ON/OFF option 'R' - fit only data within the; specified function range with the slider.; ""Improve fit results"" sets ON/OFF ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/fitpanel/src/TFitEditor.cxx:1890,interface,interface,1890,gui/fitpanel/src/TFitEditor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/fitpanel/src/TFitEditor.cxx,1,['interface'],['interface']
Integrability,"attributes. The Attributor will iterate until a fixpoint state is reached by; // all abstract attributes in-flight, or until it will enforce a pessimistic fix; // point because an iteration limit is reached.; //; // Abstract attributes, derived from the AbstractAttribute class, actually; // describe properties of the code. They can correspond to actual LLVM-IR; // attributes, or they can be more general, ultimately unrelated to LLVM-IR; // attributes. The latter is useful when an abstract attributes provides; // information to other abstract attributes in-flight but we might not want to; // manifest the information. The Attributor allows to query in-flight abstract; // attributes through the `Attributor::getAAFor` method (see the method; // description for an example). If the method is used by an abstract attribute; // P, and it results in an abstract attribute Q, the Attributor will; // automatically capture a potential dependence from Q to P. This dependence; // will cause P to be reevaluated whenever Q changes in the future.; //; // The Attributor will only reevaluate abstract attributes that might have; // changed since the last iteration. That means that the Attribute will not; // revisit all instructions/blocks/functions in the module but only query; // an update from a subset of the abstract attributes.; //; // The update method `AbstractAttribute::updateImpl` is implemented by the; // specific ""abstract attribute"" subclasses. The method is invoked whenever the; // currently assumed state (see the AbstractState class) might not be valid; // anymore. This can, for example, happen if the state was dependent on another; // abstract attribute that changed. In every invocation, the update method has; // to adjust the internal state of an abstract attribute to a point that is; // justifiable by the underlying IR and the current state of abstract attributes; // in-flight. Since the IR is given and assumed to be valid, the information; // derived from it can be assume",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h:1750,depend,dependence,1750,interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h,1,['depend'],['dependence']
Integrability,"ause it is not valid C++ code.; ///; /// DynamicExprTransformer transforms these unknown symbols into valid C++; /// code at AST (abstract syntax tree) level. Thus it provides an opportunity; /// their evaluation to happen at runtime. Several steps are performed:; ///; /// 1. Skip compiler's error diagnostics - if a compiler encounters unknown; /// symbol, by definition, it must output an error and it mustn't produce; /// machine code. Cling implements an extension to Clang semantic analyzer; /// that allows the compiler to recover even an unknown symbol is encountered.; /// For instance if the compiler sees a symbol it looks for its definition in; /// a internal structure (symbol table) and it is not found it asks whether; /// somebody else could provide the missing symbol. That is the place where; /// the DynamicIDHandler, which is controlled by DynamicExprTransformer comes; /// into play. It marks all unknown symbols as dependent as if they are; /// templates and are going to be resolved at first instantiation, with the; /// only difference that an instantiation never happens. The advantage is that; /// the unknown symbols are not diagnosed but the disadvantage is that; /// somebody needs to transform them into valid expressions with valid types.; ///; /// 2. Replace all dependent symbols - all artificially dependent symbols need; /// to be replaced with appropriate valid symbols in order the compiler to; /// produce executable machine code. The DynamicExprTransformer walks up all; /// statements and declarations that might be possibly marked earlier as; /// dependent and replaces them with valid expression, which preserves the; /// meant behavior. Main implementation goal is to replace the as little; /// as possible part of the statement. The replacement is done immediately; /// after the expected type can be deduced.; ///; /// 2.1. EvaluateT - this is a templated function, which is put at the; /// place of the dependent expression. It will be called at runtime ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLookup.h:1198,depend,dependent,1198,interpreter/cling/lib/Interpreter/DynamicLookup.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLookup.h,1,['depend'],['dependent']
Integrability,"bclasses of the SCEV class.; // These classes are used to represent certain types of subexpressions that we; // can handle. We only create one SCEV of a particular shape, so; // pointer-comparisons for equality are legal.; //; // One important aspect of the SCEV objects is that they are never cyclic, even; // if there is a cycle in the dataflow for an expression (ie, a PHI node). If; // the PHI node is one of the idioms that we can represent (e.g., a polynomial; // recurrence) then we represent it directly as a recurrence node, otherwise we; // represent it as a SCEVUnknown node.; //; // In addition to being able to represent expressions of various types, we also; // have folders that are used to build the *canonical* representation for a; // particular expression. These folders are capable of using a variety of; // rewrite rules to simplify the expressions.; //; // Once the folders are defined, we can implement the more interesting; // higher-level code, such as the code that recognizes PHI nodes of various; // types, computes the execution count of a loop, etc.; //; // TODO: We should use these routines and value representations to implement; // dependence analysis!; //; //===----------------------------------------------------------------------===//; //; // There are several good references for the techniques used in this analysis.; //; // Chains of recurrences -- a method to expedite the evaluation; // of closed-form functions; // Olaf Bachmann, Paul S. Wang, Eugene V. Zima; //; // On computational properties of chains of recurrences; // Eugene V. Zima; //; // Symbolic Evaluation of Chains of Recurrences for Loop Optimization; // Robert A. van Engelen; //; // Efficient Symbolic Analysis for Optimizing Compilers; // Robert A. van Engelen; //; // Using the chains of recurrences algebra for data dependence testing and; // induction variable substitution; // MS Thesis, Johnie Birch; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/ScalarEvolution.cpp:1804,rout,routines,1804,interpreter/llvm-project/llvm/lib/Analysis/ScalarEvolution.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/ScalarEvolution.cpp,3,"['depend', 'rout']","['dependence', 'routines']"
Integrability,"being subject; of direct access context menu operations (right mouse button click). All user; utilities of classes TGeoManager, TGeoVolume and TGeoNode can be called via the; context menu. \image html geom_browser.jpg. ### Drawing the geometry. Any logical volume can be drawn via TGeoVolume::Draw() member function.; This can be directly accessed from the context menu of the volume object; directly from the browser.; There are several drawing options that can be set with; TGeoManager::SetVisOption(Int_t opt) method :. #### opt=0; only the content of the volume is drawn, N levels down (default N=3).; This is the default behavior. The number of levels to be drawn can be changed; via TGeoManager::SetVisLevel(Int_t level) method. \image html geom_frame0.jpg. #### opt=1; the final leaves (e.g. daughters with no containment) of the branch; starting from volume are drawn down to the current number of levels.; WARNING : This mode is memory consuming; depending of the size of geometry, so drawing from top level within this mode; should be handled with care for expensive geometries. In future there will be; a limitation on the maximum number of nodes to be visualized. \image html geom_frame1.jpg. #### opt=2; only the clicked volume is visualized. This is automatically set by; TGeoVolume::DrawOnly() method. #### opt=3 - only a given path is visualized. This is automatically set by; TGeoVolume::DrawPath(const char *path) method. The current view can be exploded in cartesian, cylindrical or spherical; coordinates :; TGeoManager::SetExplodedView(Int_t opt). Options may be :; - 0 - default (no bombing); - 1 - cartesian coordinates. The bomb factor on each axis can be set with; TGeoManager::SetBombX(Double_t bomb) and corresponding Y and Z.; - 2 - bomb in cylindrical coordinates. Only the bomb factors on Z and R; are considered; \image html geom_frameexp.jpg. - 3 - bomb in radial spherical coordinate : TGeoManager::SetBombR(). Volumes themselves support different visualization settin",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx:9056,depend,depending,9056,geom/geom/src/TGeoManager.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx,1,['depend'],['depending']
Integrability,"ble' twice, it is more efficient; /// to 'cache' the value. For example; /// ~~~{.cpp}; /// Int_t n = fEventNumber; // Read fEventNumber; /// if (n<10 || n>10) { ... }; /// ~~~; /// is more efficient than; /// ~~~{.cpp}; /// if (fEventNumber<10 || fEventNumber>10); /// ~~~; /// Access to TClonesArray.; ///; /// If a branch (or member) is a TClonesArray (let's say fTracks), you; /// can access the TClonesArray itself by using ->:; /// ~~~{.cpp}; /// fTracks->GetLast();; /// ~~~; /// However this will load the full TClonesArray object and its content.; /// To quickly read the size of the TClonesArray use (note the dot):; /// ~~~{.cpp}; /// fTracks.GetEntries();; /// ~~~; /// This will read only the size from disk if the TClonesArray has been; /// split.; /// To access the content of the TClonesArray, use the [] operator:; /// ~~~; /// float px = fTracks[i].fPx; // fPx of the i-th track; /// ~~~; /// Warning:; ///; /// The variable actually use for access are 'wrapper' around the; /// real data type (to add autoload for example) and hence getting to; /// the data involves the implicit call to a C++ conversion operator.; /// This conversion is automatic in most case. However it is not invoked; /// in a few cases, in particular in variadic function (like printf).; /// So when using printf you should either explicitly cast the value or; /// use any intermediary variable:; /// ~~~{.cpp}; /// fprintf(stdout,""trs[%d].a = %d\n"",i,(int)trs.a[i]);; /// ~~~; /// Also, optionally, the generated selector will also call methods named; /// macrofilename_methodname in each of 6 main selector methods if the method; /// macrofilename_methodname exist (Where macrofilename is stripped of its; /// extension).; ///; /// Concretely, with the script named h1analysisProxy.C,; ///; /// - The method calls the method (if it exist); /// - Begin -> void h1analysisProxy_Begin(TTree*);; /// - SlaveBegin -> void h1analysisProxy_SlaveBegin(TTree*);; /// - Notify -> bool h1analysisProxy_Notify();; /// ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx:3891,wrap,wrapper,3891,tree/treeplayer/src/TTreePlayer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx,1,['wrap'],['wrapper']
Integrability,"ble; /// SCCs, which are SCCs with multiple entry blocks. Irreducible SCCs are; /// discovered on the fly, and modelled as loops with multiple headers.; ///; /// The headers of irreducible sub-SCCs consist of its entry blocks and all; /// nodes that are targets of a backedge within it (excluding backedges within; /// true sub-loops). Block frequency calculations act as if a block is; /// inserted that intercepts all the edges to the headers. All backedges and; /// entries point to this block. Its successors are the headers, which split; /// the frequency evenly.; ///; /// This algorithm leverages BlockMass and ScaledNumber to maintain precision,; /// separates mass distribution from loop scaling, and dithers to eliminate; /// probability mass loss.; ///; /// The implementation is split between BlockFrequencyInfoImpl, which knows the; /// type of graph being modelled (BasicBlock vs. MachineBasicBlock), and; /// BlockFrequencyInfoImplBase, which doesn't. The base class uses \a; /// BlockNode, a wrapper around a uint32_t. BlockNode is numbered from 0 in; /// reverse-post order. This gives two advantages: it's easy to compare the; /// relative ordering of two nodes, and maps keyed on BlockT can be represented; /// by vectors.; ///; /// This algorithm is O(V+E), unless there is irreducible control flow, in; /// which case it's O(V*E) in the worst case.; ///; /// These are the main stages:; ///; /// 0. Reverse post-order traversal (\a initializeRPOT()).; ///; /// Run a single post-order traversal and save it (in reverse) in RPOT.; /// All other stages make use of this ordering. Save a lookup from BlockT; /// to BlockNode (the index into RPOT) in Nodes.; ///; /// 1. Loop initialization (\a initializeLoops()).; ///; /// Translate LoopInfo/MachineLoopInfo into a form suitable for the rest of; /// the algorithm. In particular, store the immediate members of each loop; /// in reverse post-order.; ///; /// 2. Calculate mass and scale in loops (\a computeMassInLoops()).; ///; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/BlockFrequencyInfoImpl.h:1637,wrap,wrapper,1637,interpreter/llvm-project/llvm/include/llvm/Analysis/BlockFrequencyInfoImpl.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/BlockFrequencyInfoImpl.h,1,['wrap'],['wrapper']
Integrability,"bove. It uses the zero cost kernel; // lowering where it can. It lowers the variable accessed by the greatest; // number of kernels using the module strategy as that is free for the first; // variable. Any futher variables that can be lowered with the module strategy; // without incurring LDS memory overhead are. The remaining ones are lowered; // via table.; //; // Consequences; // - No heuristics or user controlled magic numbers, hybrid is the right choice; // - Kernels that don't use functions (or have had them all inlined) are not; // affected by any lowering for kernels that do.; // - Kernels that don't make indirect function calls are not affected by those; // that do.; // - Variables which are used by lots of kernels, e.g. those injected by a; // language runtime in most kernels, are expected to have no overhead; // - Implementations that instantiate templates per-kernel where those templates; // use LDS are expected to hit the ""Kernel"" lowering strategy; // - The runtime properties impose a cost in compiler implementation complexity; //; // Dynamic LDS implementation; // Dynamic LDS is lowered similarly to the ""table"" strategy above and uses the; // same intrinsic to identify which kernel is at the root of the dynamic call; // graph. This relies on the specified behaviour that all dynamic LDS variables; // alias one another, i.e. are at the same address, with respect to a given; // kernel. Therefore this pass creates new dynamic LDS variables for each kernel; // that allocates any dynamic LDS and builds a table of addresses out of those.; // The AMDGPUPromoteAlloca pass skips kernels that use dynamic LDS.; // The corresponding optimisation for ""kernel"" lowering where the table lookup; // is elided is not implemented.; //; //; // Implementation notes / limitations; // A single LDS global variable represents an instance per kernel that can reach; // said variables. This pass essentially specialises said variables per kernel.; // Handling ConstantExpr during th",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerModuleLDSPass.cpp:6188,inject,injected,6188,interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerModuleLDSPass.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerModuleLDSPass.cpp,1,['inject'],['injected']
Integrability,"builtin, the; // constant nature of the argument is not passed through.; //; // The _Generic approach can be made to work with enough effort, but it takes a; // lot of machinery, because of the design feature of _Generic that even the; // untaken branches are required to pass all front-end validity checks such as; // type-correctness. You can work around that by nesting further _Generics all; // over the place to coerce things to the right type in untaken branches, but; // what you get out is complicated, hard to guarantee its correctness, and; // worst of all, gives _completely unreadable_ error messages if the user gets; // the types wrong for an intrinsic call.; //; // Therefore, my strategy is to introduce a new __attribute__ that allows a; // function to be mapped to a clang builtin even though it doesn't have the; // same name, and then declare all the user-facing MVE function names with that; // attribute, mapping each one directly to the clang builtin. And the; // polymorphic ones have __attribute__((overloadable)) as well. So once the; // compiler has resolved the overload, it knows the internal builtin ID of the; // selected function, and can check the immediate arguments against that; and; // if the user gets the types wrong in a call to a polymorphic intrinsic, they; // get a completely clear error message showing all the declarations of that; // function in the header file and explaining why each one doesn't fit their; // call.; //; // The downside of this is that if every clang builtin has to correspond; // exactly to a user-facing ACLE intrinsic, then you can't save work in the; // frontend by doing it in the header file: CGBuiltin.cpp has to do the entire; // job of converting an ACLE intrinsic call into LLVM IR. So the Tablegen; // description for an MVE intrinsic has to contain a full description of the; // sequence of IRBuilder calls that clang will need to make.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/TableGen/MveEmitter.cpp:2903,message,message,2903,interpreter/llvm-project/clang/utils/TableGen/MveEmitter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/TableGen/MveEmitter.cpp,1,['message'],['message']
Integrability,"by omitting observables listed; /// in set from the projection, i.e. by not integrating over these.; /// Slicing is usually only sensible in discrete observables, by e.g. creating a slice; /// of the PDF at the current value of the category observable.; /// <tr><td> `Slice(RooCategory& cat, const char* label)` <td> Override default projection behaviour by omitting the specified category; /// observable from the projection, i.e., by not integrating over all states of this category.; /// The slice is positioned at the given label value. Multiple Slice() commands can be given to specify slices; /// in multiple observables, e.g.; /// ```{.cpp}; /// pdf.plotOn(frame, Slice(tagCategory, ""2tag""), Slice(jetCategory, ""3jet""));; /// ```; /// <tr><td> `Project(const RooArgSet& set)` <td> Override default projection behaviour by projecting; /// over observables given in set, completely ignoring the default projection behavior. Advanced use only.; /// <tr><td> `ProjWData(const RooAbsData& d)` <td> Override default projection _technique_ (integration). For observables; /// present in given dataset projection of PDF is achieved by constructing an average over all observable; /// values in given set. Consult RooFit plotting tutorial for further explanation of meaning & use of this technique; /// <tr><td> `ProjWData(const RooArgSet& s, const RooAbsData& d)` <td> As above but only consider subset 's' of; /// observables in dataset 'd' for projection through data averaging; /// <tr><td> `ProjectionRange(const char* rn)` <td> When projecting the PDF onto the plot axis, it is usually integrated; /// over the full range of the invisible variables. The ProjectionRange overrides this.; /// This is useful if the PDF was fitted in a limited range in y, but it is now projected onto x. If; /// `ProjectionRange(""<name of fit range>"")` is passed, the projection is normalised correctly.; ///; /// <tr><th> Type of argument <th> Plotting control; /// <tr><td> `LineStyle(Int_t style)` <td> Select lin",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx:4662,integrat,integration,4662,roofit/roofitcore/src/RooAbsPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx,1,['integrat'],['integration']
Integrability,"can change the text font by selecting Edit menu / Set Font.; The Font Dialog pops up and shows the Name, Style, and Size of any; available font. The selected font sample is shown in the preview; area. #### Executing Macros. You can execute the currently loaded macro in the editor by; selecting Tools menu / Execute Macro; by clicking on the; corresponding toolbar button, or by using Ctrl+F5 accelerator keys.; This is identical to the command "".x macro.C"" in the root prompt; command line. #### Compiling Macros. The currently loaded macro can be compiled with ACLiC if you select; Tools menu / Compile Macro; by clicking on the corresponding; toolbar button, or by using Ctrl+F7 accelerator keys.; This is identical to the command "".L macro.C++"" in the root prompt; command line. #### Interrupting a Running Macro. You can interrupt a running macro by selecting the Tools menu /; Interrupt; by clicking on the corresponding toolbar button, or by; using Shift+F5 accelerator keys. #### Interface to CINT Interpreter. Any command entered in the Command combo box will be passed to; the CINT interpreter. This combo box will keep the commands history; and will allow you to re-execute the same commands during an editor; session. #### Keyboard Bindings. The following table lists the keyboard shortcuts and accelerator; keys. | Key: | Action |; |---------------|----------------|; | Up | Move cursor up. |; | Shift+Up | Move cursor up and extend selection. |; | Down | Move cursor down. |; | Shift+Down | Move cursor down and extend selection. |; | Left | Move cursor left. |; | Shift+Left | Move cursor left and extend selection. |; | Right | Move cursor right. |; | Shift+Right | Move cursor right and extend selection. |; | Home | Move cursor to begin of line. |; | Shift+Home | Move cursor to begin of line and extend selection. |; | Ctrl+Home | Move cursor to top of page. |; | End | Move cursor to end of line. |; | Shift+End | Move cursor to end of line and extend selection. |; | Ctrl+End | M",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGTextEditor.cxx:3960,Interface,Interface,3960,gui/gui/src/TGTextEditor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGTextEditor.cxx,1,['Interface'],['Interface']
Integrability,"case the callable f has this signature `R(unsigned int, ULong64_t,; T1, T2, ...)`: the first parameter is the slot number while the second one the number of the entry being processed. \anchor actions; ## Actions: getting results; ### Instant and lazy actions; Actions can be **instant** or **lazy**. Instant actions are executed as soon as they are called, while lazy actions are; executed whenever the object they return is accessed for the first time. As a rule of thumb, actions with a return value; are lazy, the others are instant. ### Return type of a lazy action. When a lazy action is called, it returns a \link ROOT::RDF::RResultPtr ROOT::RDF::RResultPtr<T>\endlink, where T is the; type of the result of the action. The final result will be stored in the `RResultPtr` and can be retrieved by; dereferencing it or via its `GetValue` method. ### Actions that return collections. If the type of the return value of an action is a collection, e.g. `std::vector<int>`, you can iterate its elements; directly through the wrapping `RResultPtr`:. ~~~{.cpp}; ROOT::RDataFrame df{5};; auto df1 = df.Define(""x"", []{ return 42; });; for (const auto &el: df1.Take<int>(""x"")){; std::cout << ""Element: "" << el << ""\n"";; }; ~~~. ~~~{.py}; df = ROOT.RDataFrame(5).Define(""x"", ""42""); for el in df.Take[int](""x""):; print(f""Element: {el}""); ~~~. ### Actions and readers. An action that needs values for its computations will request it from a reader, e.g. a column created via `Define` or; available from the input dataset. The action will request values from each column of the list of input columns (either; inferred or specified by the user), in order. For example:. ~~~{.cpp}; ROOT::RDataFrame df{1};; auto df1 = df.Define(""x"", []{ return 11; });; auto df2 = df1.Define(""y"", []{ return 22; });; auto graph = df2.Graph<int, int>(""x"",""y"");; ~~~. The `Graph` action is going to request first the value from column ""x"", then that of column ""y"". Specifically, the order; of execution of the operations of nodes i",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx:34953,wrap,wrapping,34953,tree/dataframe/src/RDataFrame.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx,1,['wrap'],['wrapping']
Integrability,"ce and binary forms,; * with or without modification, are permitted according to the terms; * listed in LICENSE (http://roofit.sourceforge.net/license.txt); */; /** \class RooStats::ModelConfig; \ingroup Roostats. ModelConfig is a simple class that holds configuration information specifying how a model; should be used in the context of various RooStats tools. A single model can be used; in different ways, and this class should carry all that is needed to specify how it should be used.; ModelConfig requires a workspace to be set. A ModelConfig holds sets of parameters of the likelihood function that have different interpretations:; - **Parameter of interest** Parameters that are measured (*i.e.* fitted).; - **Nuisance parameters** Parameters that are fitted, but their post-fit value is not interesting. Often,; they might be constrained because external knowledge about them exists, *e.g.* from external measurements.; - **Constraint parameters** No direct use in RooFit/RooStats. Can be used by the user for bookkeeping.; - **Observables** Parameters that have been measured externally, *i.e.* they exist in a dataset. These are not fitted,; but read during fitting from the entries of a dataset.; - **Conditional observables** Observables that are not integrated when the normalisation of the PDF is calculated.; See *e.g.* `rf306_condpereventerrors` in the RooFit tutorials.; - **Global observables** Observables that to the fit look like ""constant"" values, *i.e.* they are not being; fitted and they are not loaded from a dataset, but some knowledge exists that allows to set them to a; specific value. Examples:; -- A signal efficiency measured in a Monte Carlo study.; -- When constraining a parameter \f$ b \f$, the target value (\f$ b_0 \f$) that this parameter is constrained to:; \f[; \mathrm{Constraint}_b = \mathrm{Gauss}(b_0 \, | \, b, 0.2); \f]; - **External constraints** Include given external constraints to likelihood by multiplying them with the original; likelihood.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/ModelConfig.cxx:1455,integrat,integrated,1455,roofit/roofitcore/src/ModelConfig.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/ModelConfig.cxx,1,['integrat'],['integrated']
Integrability,"ce and store this; // assumption in a BlockDiffCandidate for the pair of compared BBs.; //; // Once we have diffed all BBs, for every BlockDiffCandidate, we check all; // stored assumptions using the Values map that stores proven equivalences; // between the old and new values, and report a diff if an assumption cannot; // be proven to be true.; //; // Note that after having made an assumption, all further determined; // equivalences implicitly depend on that assumption. These will not be; // reverted or reported if the assumption proves to be false, because these; // are considered indirect diffs caused by earlier direct diffs.; //; // We aim to avoid false negatives in llvm-diff, that is, ensure that; // whenever no diff is reported, the functions are indeed equal. If; // assumptions were made, this is not entirely clear, because in principle we; // could end up with a circular proof where the proof of equivalence of two; // nodes is depending on the assumption of their equivalence.; //; // To see that assumptions do not add false negatives, note that if we do not; // report a diff, this means that there is an equivalence mapping between old; // and new values that is consistent with all assumptions made. The circular; // dependency that exists on an IR value level does not exist at run time,; // because the values selected by the phi nodes must always already have been; // computed. Hence, we can prove equivalence of the old and new functions by; // considering step-wise parallel execution, and incrementally proving; // equivalence of every new computed value. Another way to think about it is; // to imagine cloning the loop BBs for every iteration, turning the loops; // into (possibly infinite) DAGs, and proving equivalence by induction on the; // iteration, using the computed value mapping.; // The class BlockDiffCandidate stores pairs which either have already been; // proven to differ, or pairs whose equivalence depends on assumptions to be; // verified later.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-diff/lib/DifferenceEngine.cpp:1481,depend,dependency,1481,interpreter/llvm-project/llvm/tools/llvm-diff/lib/DifferenceEngine.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-diff/lib/DifferenceEngine.cpp,2,['depend'],"['dependency', 'depends']"
Integrability,"ce. ### A Minimal PDF Implementation. A minimal implementation of a PDF class derived from RooAbsPdf; should override the `evaluate()` function. This function should; return the PDF's value (which does not need to be normalised). #### Normalization/Integration. Although the normalization of a PDF is an integral part of a; probability density function, normalization is treated separately; in RooAbsPdf. The reason is that a RooAbsPdf object is more than a; PDF: it can be a building block for a more complex composite PDF; if any of its variables are functions instead of variables. In; such cases, the normalization of the composite PDF may not simply be; integral over the dependents of the top-level PDF: these are; functions with potentially non-trivial Jacobian terms themselves.; \note Therefore, no explicit attempt should be made to normalize the; function output in evaluate(). In particular, normalisation constants; can be omitted to speed up the function evaluations, and included later; in the integration of the PDF (see below), which is rarely called in; comparison to the `evaluate()` function. In addition, RooAbsPdf objects do not have a static concept of what; variables are parameters, and what variables are dependents (which; need to be integrated over for a correct PDF normalization).; Instead, the choice of normalization is always specified each time a; normalized value is requested from the PDF via the getVal(); method. RooAbsPdf manages the entire normalization logic of each PDF with; the help of a RooRealIntegral object, which coordinates the integration; of a given choice of normalization. By default, RooRealIntegral will; perform an entirely numeric integration of all dependents. However,; PDFs can advertise one or more (partial) analytical integrals of; their function, and these will be used by RooRealIntegral, if it; determines that this is safe (i.e., no hidden Jacobian terms,; multiplication with other PDFs that have one or more dependents in; common,",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx:2147,integrat,integration,2147,roofit/roofitcore/src/RooAbsPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx,1,['integrat'],['integration']
Integrability,"character when in an array.; /// - `b` : an 8 bit unsigned integer (`UChar_t`); /// - `S` : a 16 bit signed integer (`Short_t`); /// - `s` : a 16 bit unsigned integer (`UShort_t`); /// - `I` : a 32 bit signed integer (`Int_t`); /// - `i` : a 32 bit unsigned integer (`UInt_t`); /// - `F` : a 32 bit floating point (`Float_t`); /// - `f` : a 24 bit floating point with truncated mantissa (`Float16_t`); /// - `D` : a 64 bit floating point (`Double_t`); /// - `d` : a 24 bit truncated floating point (`Double32_t`); /// - `L` : a 64 bit signed integer (`Long64_t`); /// - `l` : a 64 bit unsigned integer (`ULong64_t`); /// - `G` : a long signed integer (`Long_t`, which `sizeof` is platform dependent), stored as a 64 bit integer but usually held in memory as a 64 bit integer on 64 bit machines and 32 bit on 32 bit machines. Due to this difference, this data type is **not cross-platform**.; /// - `g` : a long unsigned integer (`ULong_t`, which `sizeof` is platform dependent), stored as a 64 bit unsigned integer but held in memory usually as a 64 bit integer on 64 bit machines and 32 bit on 32 bit machines. Due to this difference, this data type is **not cross-platform**.; /// - `O` : [the letter `o`, not a zero] a boolean (`bool`); ///; /// Arrays of values are supported with the following syntax:; /// - If leaf name has the form var[nelem], where nelem is alphanumeric, then; /// if nelem is a leaf name, it is used as the variable size of the array,; /// otherwise return 0.; /// The leaf referred to by nelem **MUST** be an int (/I),; /// - If leaf name has the form var[nelem], where nelem is a non-negative integers, then; /// it is used as the fixed size of the array.; /// - If leaf name has the form of a multi dimension array (e.g. var[nelem][nelem2]); /// where nelem and nelem2 are non-negative integers) then; /// it is used as a 2 dimensional array of fixed size.; /// - In case of the truncated floating point types (Float16_t and Double32_t) you can; /// furthermore specify t",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TBranch.cxx:1961,depend,dependent,1961,tree/tree/src/TBranch.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TBranch.cxx,1,['depend'],['dependent']
Integrability,"ck analysis view is also responsible for identifying and; /// printing the most ""critical"" sequence of dependent instructions according to; /// the simulated run.; ///; /// Below is the critical sequence computed for the dot-product example on; /// btver2:; ///; /// Instruction Dependency Information; /// +----< 2. vhaddps %xmm3, %xmm3, %xmm4; /// |; /// | < loop carried > ; /// |; /// | 0. vmulps	 %xmm0, %xmm0, %xmm2; /// +----> 1. vhaddps %xmm2, %xmm2, %xmm3 ## RESOURCE interference: JFPA [ probability: 73% ]; /// +----> 2. vhaddps %xmm3, %xmm3, %xmm4 ## REGISTER dependency: %xmm3; /// |; /// | < loop carried > ; /// |; /// +----> 1. vhaddps %xmm2, %xmm2, %xmm3 ## RESOURCE interference: JFPA [ probability: 73% ]; ///; ///; /// The algorithm that computes the critical sequence is very similar to a; /// critical path analysis.; /// ; /// A dependency graph is used internally to track dependencies between nodes.; /// Nodes of the graph represent instructions from the input assembly sequence,; /// and edges of the graph represent data dependencies or processor resource; /// interferences.; ///; /// Edges are dynamically 'discovered' by observing instruction state; /// transitions and backend pressure increase events. Edges are internally; /// ranked based on their ""criticality"". A dependency is considered to be; /// critical if it takes a long time to execute, and if it contributes to; /// backend pressure increases. Criticality is internally measured in terms of; /// cycles; it is computed for every edge in the graph as a function of the edge; /// latency and the number of backend pressure increase cycles contributed by; /// that edge.; ///; /// At the end of simulation, costs are propagated to nodes through the edges of; /// the graph, and the most expensive path connecting the root-set (a; /// set of nodes with no predecessors) to a leaf node is reported as critical; /// sequence.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-mca/Views/BottleneckAnalysis.h:2617,depend,dependencies,2617,interpreter/llvm-project/llvm/tools/llvm-mca/Views/BottleneckAnalysis.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-mca/Views/BottleneckAnalysis.h,2,['depend'],"['dependencies', 'dependency']"
Integrability,"ckground events from the training sample. ### Boosting:. The idea behind adaptive boosting (AdaBoost) is, that signal events; from the training sample, that end up in a background node; (and vice versa) are given a larger weight than events that are in; the correct leave node. This results in a re-weighed training event; sample, with which then a new decision tree can be developed.; The boosting can be applied several times (typically 100-500 times); and one ends up with a set of decision trees (a forest).; Gradient boosting works more like a function expansion approach, where; each tree corresponds to a summand. The parameters for each summand (tree); are determined by the minimization of a error function (binomial log-; likelihood for classification and Huber loss for regression).; A greedy algorithm is used, which means, that only one tree is modified; at a time, while the other trees stay fixed. ### Bagging:. In this particular variant of the Boosted Decision Trees the boosting; is not done on the basis of previous training results, but by a simple; stochastic re-sampling of the initial training event sample. ### Random Trees:. Similar to the ""Random Forests"" from Leo Breiman and Adele Cutler, it; uses the bagging algorithm together and bases the determination of the; best node-split during the training on a random subset of variables only; which is individually chosen for each split. ### Analysis:. Applying an individual decision tree to a test event results in a; classification of the event as either signal or background. For the; boosted decision tree selection, an event is successively subjected to; the whole set of decision trees and depending on how often it is; classified as signal, a ""likelihood"" estimator is constructed for the; event being signal or background. The value of this estimator is the; one which is then used to select the events from an event sample, and; the cut value on this estimator defines the efficiency and purity of; the selection. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodBDT.cxx:4692,depend,depending,4692,tmva/tmva/src/MethodBDT.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodBDT.cxx,1,['depend'],['depending']
Integrability,"class can convolve any PDF; with any other PDF; This class should not be used blindly as numeric convolution is computing; intensive and prone to stability fitting problems. If an analytic convolution; can be calculated, you should use that or implement it if not available.; RooNumConvolution implements reasonable defaults that should convolve most; functions reasonably well, but results strongly depend on the shape of your; input PDFS so always check your result. The default integration engine for the numeric convolution is the; adaptive Gauss-Kronrod method, which empirically seems the most robust; for this task. You can override the convolution integration settings via; the RooNumIntConfig object reference returned by the convIntConfig() member; function; By default the numeric convolution is integrated from -infinity to; +infinity through a <pre>x -> 1/x</pre> coordinate transformation of the; tails. For convolution with a very small bandwidth it may be; advantageous (for both CPU consumption and stability) if the; integration domain is limited to a finite range. The function; setConvolutionWindow(mean,width,scale) allows to set a sliding; window around the x value to be calculated taking a RooAbsReal; expression for an offset and a width to be taken around the x; value. These input expression can be RooFormulaVars or other; function objects although the 3d 'scale' argument 'scale'; multiplies the width RooAbsReal expression given in the 2nd; argument, allowing for an appropriate window definition for most; cases without need for a RooFormulaVar object: e.g. a Gaussian; resolution PDF do setConvolutionWindow(gaussMean,gaussSigma,5); Note that for a 'wide' Gaussian the -inf to +inf integration; may converge more quickly than that over a finite range!; The default numeric precision is 1e-7, i.e. the global default for; numeric integration but you should experiment with this value to; see if it is sufficient for example by studying the number of function; calls tha",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumConvolution.cxx:1864,integrat,integration,1864,roofit/roofitcore/src/RooNumConvolution.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumConvolution.cxx,1,['integrat'],['integration']
Integrability,"class, THtml searches for a source file in; the directories set via SetInputDir(). If it cannot find it, it assumes; that this class must have been documented before. Based on the library; this class is defined in, it checks the configuration variable; <tt>Root.Html.LibName</tt>, and creates a link using its value.; Alternatively, you can set these URLs via THtml::SetLibURL().</p>. <p>Example:<br/>; If a class MyClass is defined in class mylibs/libMyLib.so, and .rootrc; contains</p><pre>; Root.Html.MyLib: ../mylib/</pre>; <p>THtml will create a link to ""../mylib/MyClass.html"".</p>. <p>The library name association can be set up using the rootmap facility.; For the library in the example above, which contains a dictionary; generated from the linkdef MyLinkdef.h, the command to generate the; rootmap file is</p>; <pre> $ rlibmap -f -r rootmap -l mylib/libMyLib.so -d libCore.so -c MyLinkdef.h</pre>; <p>Here, <tt>-r</tt> specifies that the entries for libMyLib should be updated,; <tt>-l</tt> specifies the library we're dealing with, <tt>-d</tt> its; dependencies, and <tt>-c</tt> its linkdef. The rootmap file must be within; one of the <tt>LD_LIBRARY_PATH</tt> (or <tt>PATH</tt> for Windows) directories; when ROOT is started, otherwise ROOT will not use it.</p>. <h4><a name=""conf:classdoc"">II.4 Recognizing class documentation</a></h4>. <p>The class documentation has to appear in the header file containing the; class, right in front of its declaration. It is introduced by a string; defined by Root.Html.Description or SetClassDocTag(). See the section on; <a href=""#syntax"">documentation syntax</a> for further details.</p>. <p>Example:</p><pre>; Root.Html.Description: //____________________</pre>. <p>The class documentation will show which include statement is to be used; and which library needs to be linked to access it.; The include file name is determined via; <a href=""http://root.cern.ch/root/html/TClass.html#TClass:GetDeclFileName"">; TClass::GetDeclFileName()</a>;; leading",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx:5782,depend,dependencies,5782,html/src/THtml.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx,1,['depend'],['dependencies']
Integrability,"cluded; // from the ""Conditional Store"" list. Because a predicated new value store; // would NOT be promoted to a double dot new store. See diagram below:; // This function returns yes for those stores that are predicated but not; // yet promoted to predicate dot new instructions.; //; // +---------------------+; // /-----| if (p0) memw(..)=r0 |---------\~; // || +---------------------+ ||; // promote || /\ /\ || promote; // || /||\ /||\ ||; // \||/ demote || \||/; // \/ || || \/; // +-------------------------+ || +-------------------------+; // | if (p0.new) memw(..)=r0 | || | if (p0) memw(..)=r0.new |; // +-------------------------+ || +-------------------------+; // || || ||; // || demote \||/; // promote || \/ NOT possible; // || || /\~; // \||/ || /||\~; // \/ || ||; // +-----------------------------+; // | if (p0.new) memw(..)=r0.new |; // +-----------------------------+; // Double Dot New Store; //; // Returns the most basic instruction for the .new predicated instructions and; // new-value stores.; // For example, all of the following instructions will be converted back to the; // same instruction:; // 1) if (p0.new) memw(R0+#0) = R1.new --->; // 2) if (p0) memw(R0+#0)= R1.new -------> if (p0) memw(R0+#0) = R1; // 3) if (p0.new) memw(R0+#0) = R1 --->; //; // To understand the translation of instruction 1 to its original form, consider; // a packet with 3 instructions.; // { p0 = cmp.eq(R0,R1); // if (p0.new) R2 = add(R3, R4); // R5 = add (R3, R1); // }; // if (p0) memw(R5+#0) = R2 <--- trying to include it in the previous packet; //; // This instruction can be part of the previous packet only if both p0 and R2; // are promoted to .new values. This promotion happens in steps, first; // predicate register is promoted to .new and in the next iteration R2 is; // promoted. Therefore, in case of dependence check failure (due to R5) during; // next iteration, it should be converted back to its most basic form.; // Return the new value instruction for a given store.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonInstrInfo.cpp:3023,depend,dependence,3023,interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonInstrInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonInstrInfo.cpp,1,['depend'],['dependence']
Integrability,"codegen_no_grad** <td> **Experimental** - Same as **codegen**, but doesn't generate and compile the gradient code and use the regular numerical differentiation instead.; * This is expected to be slower, but useful for debugging problems with the analytic gradient.; * </table>; * <tr><td> `Optimize(bool flag)` <td> Activate constant term optimization (on by default); * <tr><td> `SplitRange(bool flag)` <td> Use separate fit ranges in a simultaneous fit. Actual range name for each subsample is assumed to; * be `rangeName_indexState`, where `indexState` is the state of the master index category of the simultaneous fit.; * Using `Range(""range""), SplitRange()` as switches, different ranges could be set like this:; * ```; * myVariable.setRange(""range_pi0"", 135, 210);; * myVariable.setRange(""range_gamma"", 50, 210);; * ```; * <tr><td> `Constrain(const RooArgSet&pars)` <td> For p.d.f.s that contain internal parameter constraint terms (that is usually product PDFs, where one; * term of the product depends on parameters but not on the observable(s),), only apply constraints to the given subset of parameters.; * <tr><td> `ExternalConstraints(const RooArgSet& )` <td> Include given external constraints to likelihood by multiplying them with the original likelihood.; * <tr><td> `GlobalObservables(const RooArgSet&)` <td> Define the set of normalization observables to be used for the constraint terms.; * If none are specified the constrained parameters are used.; * <tr><td> `GlobalObservablesSource(const char* sourceName)` <td> Which source to prioritize for global observable values.; * Can be either:; * - `data`: to take the values from the dataset,; * falling back to the pdf value if a given global observable is not available.; * If no `GlobalObservables` or `GlobalObservablesTag` command argument is given, the set; * of global observables will be automatically defined to be the set stored in the data.; * - `model`: to take all values from the pdf and completely ignore the set of g",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx:6385,depend,depends,6385,roofit/roofitcore/src/RooAbsPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx,1,['depend'],['depends']
Integrability,"component. (We require DCT_scaled_size values to be; * chosen such that these numbers are integers. In practice DCT_scaled_size; * values will likely be powers of two, so we actually have the stronger; * condition that DCT_scaled_size / min_DCT_scaled_size is an integer.); * Upsampling will typically produce max_v_samp_factor pixel rows from each; * row group (times any additional scale factor that the upsampler is; * applying).; *; * The coefficient controller will deliver data to us one iMCU row at a time;; * each iMCU row contains v_samp_factor * DCT_scaled_size sample rows, or; * exactly min_DCT_scaled_size row groups. (This amount of data corresponds; * to one row of MCUs when the image is fully interleaved.) Note that the; * number of sample rows varies across components, but the number of row; * groups does not. Some garbage sample rows may be included in the last iMCU; * row at the bottom of the image.; *; * Depending on the vertical scaling algorithm used, the upsampler may need; * access to the sample row(s) above and below its current input row group.; * The upsampler is required to set need_context_rows TRUE at global selection; * time if so. When need_context_rows is FALSE, this controller can simply; * obtain one iMCU row at a time from the coefficient controller and dole it; * out as row groups to the postprocessor.; *; * When need_context_rows is TRUE, this controller guarantees that the buffer; * passed to postprocessing contains at least one row group's worth of samples; * above and below the row group(s) being processed. Note that the context; * rows ""above"" the first passed row group appear at negative row offsets in; * the passed buffer. At the top and bottom of the image, the required; * context rows are manufactured by duplicating the first or last real sample; * row; this avoids having special cases in the upsampling inner loops.; *; * The amount of context is fixed at one row group just because that's a; * convenient number for this controlle",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdmainct.c:1469,Depend,Depending,1469,graf2d/asimage/src/libAfterImage/libjpeg/jdmainct.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdmainct.c,1,['Depend'],['Depending']
Integrability,"contains a linear dependence. If this is the case, then MINUIT (or any; other program) cannot solve your problem uniquely, and the error matrix; will necessarily be largely meaningless, so the user must remove the; under-determinedness by reformulating the parameterisation. MINUIT cannot; do this itself. ##### Numerical inaccuracies:. It is possible that the apparent lack of positive-definiteness is in fact; only due to excessive roundoff errors in numerical calculations in the; user function or not enough precision. This is unlikely in general, but; becomes more likely if the number of free parameters is very large, or if. the parameters are badly scaled (not all of the same order of magnitude),; and correlations are also large. In any case, whether the; non-positive-definiteness is real or only numerical is largely irrelevant,; since in both cases the error matrix will be unreliable and the minimum; suspicious. ##### An ill-posed problem:. For questions of parameter dependence, see the discussion above on; positive-definiteness. Possible other mathematical problems are the following:. ##### Excessive numerical roundoff:. Be especially careful of exponential and factorial functions which get big; very quickly and lose accuracy. ##### Starting too far from the solution:. The function may have unphysical local minima, especially at infinity in; some variables. ##### Minuit parameter errors in the presence of limits; This concerns the way Minuit reports the symmetric (or parabolic) errors; on parameters. It does not apply to the errors reported from Minos, which; are in general asymmetric. The symmetric errors reported by Minuit are always calculated from; the covariance matrix, assuming that this matrix has been calculated,; usually as the result of a Migrad minimization or a direct; calculation by Hesse which inverts the second derivative matrix. When there are no limits on the parameter in question, the error reported; by Minuit should therefore be exactly equal to ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TMinuit.cxx:11871,depend,dependence,11871,math/minuit/src/TMinuit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TMinuit.cxx,1,['depend'],['dependence']
Integrability,"contains one `#include` statement per generated header file; /// - <em>dirnameProjectSource.cxx</em>,which contains all the constructors and destructors implementation.; /// and one header per class that is not nested inside another class.; /// The header file name is the fully qualified name of the class after all the special characters; /// ""<>,:"" are replaced by underscored. For example for std::pair<edm::Vertex,int> the file name is; /// pair_edm__Vertex_int_.h; ///; /// In the generated classes, map, multimap when the first template parameter is a class; /// are replaced by a vector of pair. set and multiset when the tempalte parameter; /// is a class are replaced by a vector. This is required since we do not have the; /// code needed to order and/or compare the object of the classes.; /// This is a quick explanation of the options available:; /// Option | Details; /// -------|--------; /// new (default) | A new directory dirname is created. If dirname already exist, an error message is printed and the function returns.; /// recreate | If dirname does not exist, it is created (like in ""new""). If dirname already exist, all existing files in dirname are deleted before creating the new files.; /// update | New classes are added to the existing directory. Existing classes with the same name are replaced by the new definition. If the directory dirname doest not exist, same effect as ""new"".; /// genreflex | Use genreflex rather than rootcint to generate the dictionary.; /// par | Create a PAR file with the minimal set of code needed to read the content of the ROOT file. The name of the PAR file is basename(dirname), with extension '.par' enforced; the PAR file will be created at dirname(dirname).; ///; /// If, in addition to one of the 3 above options, the option ""+"" is specified,; /// the function will generate:; /// - a script called MAKEP to build the shared lib; /// - a dirnameLinkDef.h file; /// - rootcint will be run to generate a dirnameProjectDict.cxx file; /",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TFile.cxx:1540,message,message,1540,io/io/src/TFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TFile.cxx,1,['message'],['message']
Integrability,"cording all references to variables; /// (DeclRefExprs or MemberExprs) within said nested lambda in its array of; /// PotentialCaptures. All such variables have to be captured by that lambda,; /// except for as described below.; /// If that variable is usable as a constant expression and is named in a; /// manner that does not involve its odr-use (e.g. undergoes; /// lvalue-to-rvalue conversion, or discarded) record that it is so. Upon the; /// act of analyzing the enclosing full expression (ActOnFinishFullExpr); /// if we can determine that the full expression is not instantiation-; /// dependent, then we can entirely avoid its capture.; ///; /// const int n = 0;; /// [&] (auto x) {; /// (void)+n + x;; /// };; /// Interestingly, this strategy would involve a capture of n, even though; /// it's obviously not odr-used here, because the full-expression is; /// instantiation-dependent. It could be useful to avoid capturing such; /// variables, even when they are referred to in an instantiation-dependent; /// expression, if we can unambiguously determine that they shall never be; /// odr-used. This would involve removal of the variable-referring-expression; /// from the array of PotentialCaptures during the lvalue-to-rvalue; /// conversions. But per the working draft N3797, (post-chicago 2013) we must; /// capture such variables.; /// Before anyone is tempted to implement a strategy for not-capturing 'n',; /// consider the insightful warning in:; /// /cfe-commits/Week-of-Mon-20131104/092596.html; /// ""The problem is that the set of captures for a lambda is part of the ABI; /// (since lambda layout can be made visible through inline functions and the; /// like), and there are no guarantees as to which cases we'll manage to build; /// an lvalue-to-rvalue conversion in, when parsing a template -- some; /// seemingly harmless change elsewhere in Sema could cause us to start or stop; /// building such a node. So we need a rule that anyone can implement and get; /// exactly th",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Sema/ScopeInfo.h:1312,depend,dependent,1312,interpreter/llvm-project/clang/include/clang/Sema/ScopeInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Sema/ScopeInfo.h,1,['depend'],['dependent']
Integrability,"crete implementation of the NeymanConstruction; interface that, as the name suggests, performs a NeymanConstruction. It produces; a RooStats::PointSetInterval, which is a concrete implementation of the; ConfInterval interface. The Neyman Construction is not a uniquely defined statistical technique, it; requires that one specify an ordering rule or ordering principle, which is; usually incoded by choosing a specific test statistic and limits of integration; (corresponding to upper/lower/central limits). As a result, this class must be; configured with the corresponding information before it can produce an interval.; Common configurations, such as the Feldman-Cousins approach, can be enforced by; other light weight classes. The Neyman Construction considers every point in the parameter space; independently, no assumptions are made that the interval is connected or of a; particular shape. As a result, the PointSetInterval class is used to represent; the result. The user indicate which points in the parameter space to perform; the construction by providing a PointSetInterval instance with the desired points. This class is fairly light weight, because the choice of parameter points to be; considered is factorized and so is the creation of the sampling distribution of; the test statistic (which is done by a concrete class implementing the; DistributionCreator interface). As a result, this class basically just drives the; construction by:. - using a DistributionCreator to create the SamplingDistribution of a user-; defined test statistic for each parameter point of interest,; - defining the acceptance region in the data by finding the thresholds on the; test statistic such that the integral of the sampling distribution is of the; appropriate size and consistent with the limits of integration; (eg. upper/lower/central limits),; - and finally updating the PointSetInterval based on whether the value of the; test statistic evaluated on the data are in the acceptance region. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/NeymanConstruction.cxx:1886,interface,interface,1886,roofit/roostats/src/NeymanConstruction.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/NeymanConstruction.cxx,2,"['integrat', 'interface']","['integration', 'interface']"
Integrability,"ction(*:bar); /// for (int i = 0; i < N; i++) {; /// foo += A[i]; bar *= B[i];; /// }; ///; /// where 'foo' and 'bar' are reduced across all OpenMP threads in; /// all teams. In our OpenMP implementation on the NVPTX device an; /// OpenMP team is mapped to a CUDA threadblock and OpenMP threads; /// within a team are mapped to CUDA threads within a threadblock.; /// Our goal is to efficiently aggregate values across all OpenMP; /// threads such that:; ///; /// - the compiler and runtime are logically concise, and; /// - the reduction is performed efficiently in a hierarchical; /// manner as follows: within OpenMP threads in the same warp,; /// across warps in a threadblock, and finally across teams on; /// the NVPTX device.; ///; /// Introduction to Decoupling; ///; /// We would like to decouple the compiler and the runtime so that the; /// latter is ignorant of the reduction variables (number, data types); /// and the reduction operators. This allows a simpler interface; /// and implementation while still attaining good performance.; ///; /// Pseudocode for the aforementioned OpenMP program generated by the; /// compiler is as follows:; ///; /// 1. Create private copies of reduction variables on each OpenMP; /// thread: 'foo_private', 'bar_private'; /// 2. Each OpenMP thread reduces the chunk of 'A' and 'B' assigned; /// to it and writes the result in 'foo_private' and 'bar_private'; /// respectively.; /// 3. Call the OpenMP runtime on the GPU to reduce within a team; /// and store the result on the team master:; ///; /// __kmpc_nvptx_parallel_reduce_nowait_v2(...,; /// reduceData, shuffleReduceFn, interWarpCpyFn); ///; /// where:; /// struct ReduceData {; /// double *foo;; /// double *bar;; /// } reduceData; /// reduceData.foo = &foo_private; /// reduceData.bar = &bar_private; ///; /// 'shuffleReduceFn' and 'interWarpCpyFn' are pointers to two; /// auxiliary functions generated by the compiler that operate on; /// variables of type 'ReduceData'. They aid the runtim",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntimeGPU.cpp:1228,interface,interface,1228,interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntimeGPU.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntimeGPU.cpp,1,['interface'],['interface']
Integrability,"ctions and; complex functors. The callable can be applied to zero or more existing columns and it will always receive their; _nominal_ value in input. #### Varying multiple columns in lockstep. In the following Python snippet we use the Vary() signature that allows varying multiple columns simultaneously or; ""in lockstep"":. ~~~{.python}; df.Vary([""pt"", ""eta""],; ""RVec<RVecF>{{pt*0.9, pt*1.1}, {eta*0.9, eta*1.1}}"",; variationTags=[""down"", ""up""],; variationName=""ptAndEta""); ~~~. The expression returns an RVec of two RVecs: each inner vector contains the varied values for one column. The; inner vectors follow the same ordering as the column names that are passed as the first argument. Besides the variation tags, in; this case we also have to explicitly pass the variation name (here: ""ptAndEta"") as the default column name does not exist. The above call will produce variations ""ptAndEta:down"" and ""ptAndEta:up"". #### Combining multiple variations. Even if a result depends on multiple variations, only one variation is applied at a time, i.e. there will be no result produced; by applying multiple systematic variations at the same time.; For example, in the following example snippet, the RResultMap instance `all_h` will contain keys ""nominal"", ""pt:down"",; ""pt:up"", ""eta:0"", ""eta:1"", but no ""pt:up&&eta:0"" or similar:. ~~~{.cpp}; auto df = _df.Vary(""pt"",; ""ROOT::RVecD{pt*0.9, pt*1.1}"",; {""down"", ""up""}); .Vary(""eta"",; [](float eta) { return RVecF{eta*0.9f, eta*1.1f}; },; {""eta""},; 2);. auto nom_h = df.Histo2D(histoModel, ""pt"", ""eta"");; auto all_hs = VariationsFor(nom_h);; all_hs.GetKeys(); // returns {""nominal"", ""pt:down"", ""pt:up"", ""eta:0"", ""eta:1""}; ~~~. Note how we passed the integer `2` instead of a list of variation tags to the second Vary() invocation: this is a; shorthand that automatically generates tags 0 to N-1 (in this case 0 and 1). \note Currently, VariationsFor() and RResultMap are in the `ROOT::RDF::Experimental` namespace, to indicate that these; interfaces might st",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx:58477,depend,depends,58477,tree/dataframe/src/RDataFrame.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx,1,['depend'],['depends']
Integrability,"cy in double precision floating point arithmetic; * for most of the upper half of the complex plane, chose @f$t_m=12@f$ and; * @f$N=23@f$ as is done in the paper.; *; * There are two complications: For Im(z) negative, the exponent in the; * equation above becomes so large that the roundoff in the rest of the; * calculation is amplified enough that the result cannot be trusted.; * Therefore, for Im(z) < 0, the symmetry of the erfc function under the; * transformation z --> -z is used to avoid accuracy issues for Im(z) < 0 by; * formulating the problem such that the calculation can be done for Im(z) > 0; * where the accuracy of the method is fine, and some postprocessing then; * yields the desired final result.; *; * Second, the denominators in the equation above become singular at; * @f$z = n * pi / 12@f$ (for 0 <= n < 24). In a tiny disc around these; * points, Taylor expansions are used to overcome that difficulty.; *; * This routine precomputes everything it can, and tries to write out complex; * operations to minimise subroutine calls, e.g. for the multiplication of; * complex numbers.; *; * In the square -8 <= Re(z) <= 8, -8 <= Im(z) <= 8, the routine is accurate; * to better than 4e-13 relative, the average relative error is better than; * 7e-16. On a modern x86_64 machine, the routine is roughly three times as; * fast than the old CERNLIB implementation and offers better accuracy.; *; * For large @f$|z|@f$, the familiar continued fraction approximation; *; * @f[ w(z)=\frac{-iz/\sqrt{\pi}}{-z^2+\frac{1/2}{1+\frac{2/2}{-z^2 +; * \frac{3/2}{1+\frac{4/2}{-z^2+\frac{5/2}{1+\frac{6/2}{-z^2+\frac{7/2; * }{1+\frac{8/2}{-z^2+\frac{9/2}{1+\ldots}}}}}}}}}} @f]; *; * is used, truncated at the ellipsis (""..."") in the formula; for @f$|z| >; * 12@f$, @f$Im(z)>0@f$ it will give full double precision at a smaller; * computational cost than the method described above. (For @f$|z|>12@f$,; * @f$Im(z)<0@f$, the symmetry property @f$w(x-iy)=2e^{-(x+iy)^2-w(x+iy)}@f$; * is used.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooMath.h:2235,rout,routine,2235,roofit/roofitcore/inc/RooMath.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooMath.h,2,['rout'],['routine']
Integrability,"d 16-point Gaussian quadrature approximations to; \f[; I = \int^{b}_{a} f(x)dx; \f]; and define; \f[; r(a,b) = \frac{\left|g_{16}(a,b)-g_{8}(a,b)\right|}{1+\left|g_{16}(a,b)\right|}; \f]; Then,; \f[; G = \sum_{i=1}^{k}g_{16}(x_{i-1},x_{i}); \f]; where, starting with \f$x_{0} = A\f$ and finishing with \f$x_{k} = B\f$,; the subdivision points \f$x_{i}(i=1,2,...)\f$ are given by; \f[; x_{i} = x_{i-1} + \lambda(B-x_{i-1}); \f]; \f$\lambda\f$ is equal to the first member of the; sequence 1,1/2,1/4,... for which \f$r(x_{i-1}, x_{i}) < EPS\f$.; If, at any stage in the process of subdivision, the ratio; \f[; q = \left|\frac{x_{i}-x_{i-1}}{B-A}\right|; \f]; is so small that 1+0.005q is indistinguishable from 1 to; machine accuracy, an error exit occurs with the function value; set equal to zero. Accuracy:; The user provides absolute and relative error bounds (epsrel and epsabs) and the; algorithm will stop when the estimated error is less than the epsabs OR is less; than |I| * epsrel.; Unless there is severe cancellation of positive and negative values of; f(x) over the interval [A,B], the relative error may be considered as; specifying a bound on the <I>relative</I> error of I in the case; |I|&gt;1, and a bound on the absolute error in the case |I|&lt;1. More; precisely, if k is the number of sub-intervals contributing to the; approximation (see Method), and if; \f[; I_{abs} = \int^{B}_{A} \left|f(x)\right|dx; \f]; then the relation; \f[; \frac{\left|G-I\right|}{I_{abs}+k} < EPS; \f]; will nearly always be true, provided the routine terminates without; printing an error message. For functions f having no singularities in; the closed interval [A,B] the accuracy will usually be much higher than; this. Error handling:; The requested accuracy cannot be obtained (see Method).; The function value is set equal to zero. Note 1:; Values of the function f(x) at the interval end-points A and B are not; required. The subprogram may therefore be used when these values are; undefined; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/GaussIntegrator.h:1910,rout,routine,1910,math/mathcore/inc/Math/GaussIntegrator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/GaussIntegrator.h,2,"['message', 'rout']","['message', 'routine']"
Integrability,"d Precision. The text font code is combination of the font number and the precision.; ~~~ {.cpp}; Text font code = 10*fontnumber + precision; ~~~; Font numbers must be between 1 and 14. The precision can be:. - `precision = 0` fast hardware fonts (steps in the size); - `precision = 1` scalable and rotatable hardware fonts (see below); - `precision = 2` scalable and rotatable hardware fonts; - `precision = 3` scalable and rotatable hardware fonts. Text size; is given in pixels. The text font and precision of any class inheriting from `TAttText` can; be changed using the method `SetTextFont` and retrieved using the; method `GetTextFont`. \anchor ATTTEXT51; ### Font quality and speed. When precision 0 is used, only the original non-scaled X11 system fonts are; used. The fonts have a minimum (4) and maximum (37) size in pixels. These; fonts are fast and are of good quality. Their size varies with large steps; and they cannot be rotated.; Precision 1 and 2 fonts have a different behaviour depending if the; True Type Fonts (TTF) are used or not. If TTF are used, you always get very good; quality scalable and rotatable fonts.; These days TTF fonts are rendered fast enough and can be used in all cases. \anchor ATTTEXT52; ### How to use True Type Fonts. TTF fonts are used by default. They can be deactivated via the following line; in the `.rootrc` file:. ~~~ {.cpp}; Unix.*.Root.UseTTFonts: false; ~~~. \anchor ATTTEXT53; ### List of the currently supported fonts. ~~~ {.cpp}; Font number TTF Names PostScript/PDF Names; 1 : ""Free Serif Italic"" ""Times-Italic""; 2 : ""Free Serif Bold"" ""Times-Bold""; 3 : ""Free Serif Bold Italic"" ""Times-BoldItalic""; 4 : ""Tex Gyre Regular"" ""Helvetica""; 5 : ""Tex Gyre Italic"" ""Helvetica-Oblique""; 6 : ""Tex Gyre Bold"" ""Helvetica-Bold""; 7 : ""Tex Gyre Bold Italic"" ""Helvetica-BoldOblique""; 8 : ""Free Mono"" ""Courier""; 9 : ""Free Mono Oblique"" ""Courier-Oblique""; 10 : ""Free Mono Bold"" ""Courier-Bold""; 11 : ""Free Mono Bold Oblique"" ""Courier-BoldOblique""; 12 : ""Symbol",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TAttText.cxx:5322,depend,depending,5322,core/base/src/TAttText.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TAttText.cxx,1,['depend'],['depending']
Integrability,"d of the event loop.; void Finalize(); {; *fFinalResult = std::accumulate(fPerThreadResults.begin(), fPerThreadResults.end(), 0);; }. // Called by RDataFrame to retrieve the name of this action.; std::string GetActionName() const { return ""MyCounter""; }; };. int main() {; ROOT::RDataFrame df(10);; ROOT::RDF::RResultPtr<int> resultPtr = df.Book<>(MyCounter{df.GetNSlots()}, {});; // The GetValue call triggers the event loop; std::cout << ""Number of processed entries: "" << resultPtr.GetValue() << std::endl;; }; ~~~. See the Book() method for more information and [this tutorial](https://root.cern/doc/master/df018__customActions_8C.html); for a more complete example. #### Injecting arbitrary code in the event loop with Foreach() and ForeachSlot(). Foreach() takes a callable (lambda expression, free function, functor...) and a list of columns and; executes the callable on the values of those columns for each event that passes all upstream selections.; It can be used to perform actions that are not already available in the interface. For example, the following snippet; evaluates the root mean square of column ""x"":; ~~~{.cpp}; // Single-thread evaluation of RMS of column ""x"" using Foreach; double sumSq = 0.;; unsigned int n = 0;; df.Foreach([&sumSq, &n](double x) { ++n; sumSq += x*x; }, {""x""});; std::cout << ""rms of x: "" << std::sqrt(sumSq / n) << std::endl;; ~~~; In multi-thread runs, users are responsible for the thread-safety of the expression passed to Foreach():; thread will execute the expression concurrently.; The code above would need to employ some resource protection mechanism to ensure non-concurrent writing of `rms`; but; this is probably too much head-scratch for such a simple operation. ForeachSlot() can help in this situation. It is an alternative version of Foreach() for which the function takes an; additional ""processing slot"" parameter besides the columns it should be applied to. RDataFrame; guarantees that ForeachSlot() will invoke the user expression wit",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx:69548,interface,interface,69548,tree/dataframe/src/RDataFrame.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx,1,['interface'],['interface']
Integrability,"d up the function evaluations, and included later; in the integration of the PDF (see below), which is rarely called in; comparison to the `evaluate()` function. In addition, RooAbsPdf objects do not have a static concept of what; variables are parameters, and what variables are dependents (which; need to be integrated over for a correct PDF normalization).; Instead, the choice of normalization is always specified each time a; normalized value is requested from the PDF via the getVal(); method. RooAbsPdf manages the entire normalization logic of each PDF with; the help of a RooRealIntegral object, which coordinates the integration; of a given choice of normalization. By default, RooRealIntegral will; perform an entirely numeric integration of all dependents. However,; PDFs can advertise one or more (partial) analytical integrals of; their function, and these will be used by RooRealIntegral, if it; determines that this is safe (i.e., no hidden Jacobian terms,; multiplication with other PDFs that have one or more dependents in; common, etc). #### Implementing analytical integrals; To implement analytical integrals, two functions must be implemented. First,. ```; Int_t getAnalyticalIntegral(const RooArgSet& integSet, RooArgSet& anaIntSet); ```; should return the analytical integrals that are supported. `integSet`; is the set of dependents for which integration is requested. The; function should copy the subset of dependents it can analytically; integrate to `anaIntSet`, and return a unique identification code for; this integration configuration. If no integration can be; performed, zero should be returned. Second,. ```; double analyticalIntegral(Int_t code); ```. implements the actual analytical integral(s) advertised by; `getAnalyticalIntegral()`. This function will only be called with; codes returned by `getAnalyticalIntegral()`, except code zero. The integration range for each dependent to be integrated can; be obtained from the dependent's proxy functions `min()` a",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx:3116,depend,dependents,3116,roofit/roofitcore/src/RooAbsPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx,1,['depend'],['dependents']
Integrability,"d. We load the shadow _after_ the application load,; /// and we store the shadow _before_ the app store. Also, we always store clean; /// shadow (if the application store is atomic). This way, if the store-load; /// pair constitutes a happens-before arc, shadow store and load are correctly; /// ordered such that the load will get either the value that was stored, or; /// some later value (which is always clean).; ///; /// This does not work very well with Compare-And-Swap (CAS) and; /// Read-Modify-Write (RMW) operations. To follow the above logic, CAS and RMW; /// must store the new shadow before the app operation, and load the shadow; /// after the app operation. Computers don't work this way. Current; /// implementation ignores the load aspect of CAS/RMW, always returning a clean; /// value. It implements the store part as a simple atomic store by storing a; /// clean shadow.; ///; /// Instrumenting inline assembly.; ///; /// For inline assembly code LLVM has little idea about which memory locations; /// become initialized depending on the arguments. It can be possible to figure; /// out which arguments are meant to point to inputs and outputs, but the; /// actual semantics can be only visible at runtime. In the Linux kernel it's; /// also possible that the arguments only indicate the offset for a base taken; /// from a segment register, so it's dangerous to treat any asm() arguments as; /// pointers. We take a conservative approach generating calls to; /// __msan_instrument_asm_store(ptr, size); /// , which defer the memory unpoisoning to the runtime library.; /// The latter can perform more complex address checks to figure out whether; /// it's safe to touch the shadow memory.; /// Like with atomic operations, we call __msan_instrument_asm_store() before; /// the assembly call, so that changes to the shadow memory will be seen by; /// other threads together with main memory initialization.; ///; /// KernelMemorySanitizer (KMSAN) implementation.; ///; /// The maj",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/MemorySanitizer.cpp:5114,depend,depending,5114,interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/MemorySanitizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/MemorySanitizer.cpp,1,['depend'],['depending']
Integrability,"d.; Only files ending on <tt>.html</tt> or <tt>.txt</tt> will be taken into account;; the text files will first be run through; <a href=""#THtml:Convert"">THtml::Convert()</a>.; You can see an example <a href=""http://root.cern.ch/root/html/HIST_Index.html"">here</a>;; the part between ""Index of HIST classes"" and ""Jump to"" is created by parsing; the module's doc directory.</p>. <h3><a name=""aux"">VI. Auxiliary files: style sheet, JavaScript, help page</a></h3>. <p>The documentation pages share a common set of javascript and CSS files. They; are generated automatically when running <a href=""#THtml:MakeAll"">MakeAll()</a>;; they can be generated on; demand by calling <a href=""#THtml:CreateAuxiliaryFiles"">CreateAuxiliaryFiles()</a>.</p>. <h3><a name=""charts"">VII. Class Charts</a></h3>; THtml can generate a number of graphical representations for a class, which; are displayed as a tabbed set of imaged on-top of the class description.; It can show the inheritance, inherited and hidden members, directly and; indirectly included files, and library dependencies. These graphs are generated using the <a href=""http://www.graphviz.org/"">Graphviz</a>; package. You can install it from <a href=""http://www.graphviz.org"">http://www.graphviz.org</a>.; You can either put it into your $PATH, or tell THtml where to find it by calling; <a href=""#THtml:SetDotDir"">SetDotDir()</a>. <h3><a name=""confvar"">VIII. Configuration variables</a></h3>. <p>Here is a list of all configuration variables that are known to THtml.; You can set them in your .rootrc file, see; <a href=""http://root.cern.ch/root/html/TEnv.html"">TEnv</a>.</p>. <pre>; Root.Html.OutputDir (default: htmldoc); Root.Html.SourceDir (default: .:src/:include/); Root.Html.Author (default: // Author:) - start tag for authors; Root.Html.LastUpdate (default: // @(#)) - start tag for last update; Root.Html.Copyright (default: * Copyright) - start tag for copyright notice; Root.Html.Description (default: //____________________ ) - start tag for cla",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx:20573,depend,dependencies,20573,html/src/THtml.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx,1,['depend'],['dependencies']
Integrability,"dach and P.Sawicki; Institute of Nuclear Physics, Cracow, Poland; Stanislaw. Jadach@ifj.edu.pl, Pawel.Sawicki@ifj.edu.pl. ### What is FOAM for?. - Suppose you want to generate randomly points (vectors) according to; an arbitrary probability distribution in n dimensions,; for which you supply your own method. FOAM can do it for you!; Even if your distributions has quite strong peaks and is discontinuous!; - FOAM generates random points with weight one or with variable weight.; - FOAM is capable to integrate using efficient ""adaptive"" MC method.; (The distribution does not need to be normalized to one.). ### How does it work?. FOAM is the simplified version of the multi-dimensional general purpose; Monte Carlo event generator (integrator) FOAM.; It creates hyper-rectangular ""foam of cells"", which is more dense around its peaks.; See the following 2-dim. example of the map of 1000 cells for doubly peaked distribution:. \image html foam_MapCamel1000.png width=400. FOAM is now fully integrated with the ROOT package.; The important bonus of the ROOT use is persistency of the FOAM objects!. For more sophisticated problems full version of FOAM may be more appropriate:; See [full version of FOAM](http://jadach.home.cern.ch/jadach/Foam/Index.html). ### Simple example of the use of FOAM:. Begin_Macro(source); ../../../tutorials/foam/foam_kanwa.C; End_Macro. ### Canonical nine steering parameters of FOAM. | Name | default | Description |; |----------|----------|--------------------------------------------------------|; | kDim | 0 | Dimension of the integration space. Must be redefined! |; | nCells | 1000 | No of allocated number of cells, |; | nSampl | 200 | No. of MC events in the cell MC exploration |; | nBin | 8 | No. of bins in edge-histogram in cell exploration |; | OptRej | 1 | OptRej = 0, weighted; OptRej=1, wt=1 MC events |; | OptDrive | 2 | Maximum weight reduction, =1 for variance reduction |; | EvPerBin | 25 | Maximum number of the effective wt=1 events/bin, |; | | |",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/foam/src/TFoam.cxx:1290,integrat,integrated,1290,math/foam/src/TFoam.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/foam/src/TFoam.cxx,1,['integrat'],['integrated']
Integrability,"de long.; //; // Then, we traverse the uses of the PHI (X2) and the uses of the value of the; // PHI coming over the backedge (X1). We stop at the first pair of such users; // I1 (of X2) and I2 (of X1) that meet the following conditions.; // 1. I1 and I2 are the same operation, but with different operands.; // 2. X2 and X1 are used at the same operand number in the two instructions.; // 3. All other operands Op1 of I1 and Op2 of I2 are also such that there is a; // a DepChain from Op1 to Op2 of the same length as that between X2 and X1.; //; // We then make the following transformation; // LoopPreheader:; // X0 = a[0];; // Y0 = f(X0);; // Loop:; // X2 = PHI<(X0, LoopPreheader), (X1, Loop)>; // Y2 = PHI<(Y0, LoopPreheader), (t4, Loop)>; // t1 = f(X2) <-- Will be removed by DCE.; // t2 = g(Y2); // ...; // X1 = a[i+1]; // t4 = f(X1); // t5 = g(t4); // t6 = op(t2, t5); // cond_branch <Loop>; //; // We proceed until we cannot find any more such instructions I1 and I2.; //; // --- DepChains & Loop carried dependences ---; // Consider a single basic block loop such as; //; // LoopPreheader:; // X0 = ...; // Y0 = ...; // Loop:; // X2 = PHI<(X0, LoopPreheader), (X1, Loop)>; // Y2 = PHI<(Y0, LoopPreheader), (X2, Loop)>; // ...; // X1 = ...; // ...; // cond_branch <Loop>; //; // Then there is a dependence between X2 and X1 that goes back one iteration,; // i.e. X1 is used as X2 in the very next iteration. We represent this as a; // DepChain from X2 to X1 (X2->X1).; // Similarly, there is a dependence between Y2 and X1 that goes back two; // iterations. X1 is used as Y2 two iterations after it is computed. This is; // represented by a DepChain as (Y2->X2->X1).; //; // A DepChain has the following properties.; // 1. Num of edges in DepChain = Number of Instructions in DepChain = Number of; // iterations of carried dependence + 1.; // 2. All instructions in the DepChain except the last are PHIs.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonVectorLoopCarriedReuse.h:2969,depend,dependences,2969,interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonVectorLoopCarriedReuse.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonVectorLoopCarriedReuse.h,4,['depend'],"['dependence', 'dependences']"
Integrability,"dentifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; ///; /// \file; /// This file implements the loop fusion pass.; /// The implementation is largely based on the following document:; ///; /// Code Transformations to Augment the Scope of Loop Fusion in a; /// Production Compiler; /// Christopher Mark Barton; /// MSc Thesis; /// https://webdocs.cs.ualberta.ca/~amaral/thesis/ChristopherBartonMSc.pdf; ///; /// The general approach taken is to collect sets of control flow equivalent; /// loops and test whether they can be fused. The necessary conditions for; /// fusion are:; /// 1. The loops must be adjacent (there cannot be any statements between; /// the two loops).; /// 2. The loops must be conforming (they must execute the same number of; /// iterations).; /// 3. The loops must be control flow equivalent (if one loop executes, the; /// other is guaranteed to execute).; /// 4. There cannot be any negative distance dependencies between the loops.; /// If all of these conditions are satisfied, it is safe to fuse the loops.; ///; /// This implementation creates FusionCandidates that represent the loop and the; /// necessary information needed by fusion. It then operates on the fusion; /// candidates, first confirming that the candidate is eligible for fusion. The; /// candidates are then collected into control flow equivalent sets, sorted in; /// dominance order. Each set of control flow equivalent candidates is then; /// traversed, attempting to fuse pairs of candidates in the set. If all; /// requirements for fusion are met, the two candidates are fused, creating a; /// new (fused) candidate which is then added back into the set to consider for; /// additional fusion.; ///; /// This implementation currently does not make any modifications to remove; /// conditions for fusion. Code transformations to make loops conform to each of; /// the conditions for fusion are discussed in more detail in t",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopFuse.cpp:1251,depend,dependencies,1251,interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopFuse.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopFuse.cpp,1,['depend'],['dependencies']
Integrability,"depth mod k;. // Sort point list and choose median as pivot element; select median from pointList;. // Create node and construct subtrees; var tree_node node;; node.location := median;; node.leftChild := kdtree(points in pointList before median, depth+1);; node.rightChild := kdtree(points in pointList after median, depth+1);; return node;; }; }; ~~~~. Our construction method is optimized to save memory, and differs a bit from the constraints above.; In particular, the division axis is chosen as the one with the biggest spread, and the point to create the; splitting plane is chosen so, that one of the two subtrees contains exactly 2^k terminal nodes and is a; perfectly balanced binary tree, and, while at the same time, trying to keep the number of terminal nodes; in the 2 subtrees as close as possible. The following section gives more details about our implementation. ### 3. Using TKDTree. #### 3a. Creating the tree and setting the data; The interface of the TKDTree, that allows to set input data, has been developed to simplify using it; together with TTree::Draw() functions. That's why the data has to be provided column-wise. For example:. \code{.cpp}; {; TTree *datatree = ...; ...; datatree->Draw(""x:y:z"", ""selection"", ""goff"");; //now make a kd-tree on the drawn variables; TKDTreeID *kdtree = new TKDTreeID(npoints, 3, 1);; kdtree->SetData(0, datatree->GetV1());; kdtree->SetData(1, datatree->GetV2());; kdtree->SetData(2, datatree->GetV3());; kdtree->Build();; }; NOTE, that this implementation of kd-tree doesn't support adding new points after the tree has been built; Of course, it's not necessary to use TTree::Draw(). What is important, is to have data columnwise.; An example with regular arrays:; {; Int_t npoints = 100000;; Int_t ndim = 3;; Int_t bsize = 1;; Double_t xmin = -0.5;; Double_t xmax = 0.5;; Double_t *data0 = new Double_t[npoints];; Double_t *data1 = new Double_t[npoints];; Double_t *data2 = new Double_t[npoints];; Double_t *y = new Double_t[npoints];; for",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/TKDTree.cxx:3762,interface,interface,3762,math/mathcore/src/TKDTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/TKDTree.cxx,1,['interface'],['interface']
Integrability,"df2` to state `b`; /// <tr><td> `EXPR::name(<expr>,var,...]` <td> Create a generic pdf that interprets the given expression; /// <tr><td> `expr::name(<expr>,var,...]` <td> Create a generic function that interprets the given expression; /// <tr><td> `taylorexpand::name(func,{var1,var2,...},val,order,eps1,eps2]` <td> Create a taylor expansion of func w.r.t. `{var1,var2,..}` around `val` up to `order`; /// <tr><td> `lagrangianmorph::name(""$fileName('infile.root'),$observableName(obs),$couplings({var1[-10,10],var2[-10,10]}),$folders({'sample1,sample2,sample3'}),$NewPhysics(var1=1,var2=0)""]` <td> Create a RooLagrangianMorphFunc function for the observable obs as a function of `var1`, `var2` based on input templates stored in the folders in the file; /// </table>; ///; /// The functionality of high-level object creation tools like RooSimWSTool, RooCustomizer and RooClassFactory; /// is also interfaced through meta-types in the factory.; /// <table>; /// <tr><th> Interface to %RooSimWSTool <th>; /// <tr><td> `SIMCLONE::name( modelPdf, $ParamSplit(...), $ParamSplitConstrained(...), $Restrict(...) ]`; /// <td> Clone-and-customize modelPdf according to ParamSplit and ParamSplitConstrained(); /// specifications and return a RooSimultaneous pdf of all built clones; ///; /// <tr><td> `MSIMCLONE::name( masterIndex, $AddPdf(mstate1, modelPdf1, $ParamSplit(...)), $AddPdf(mstate2,modelPdf2),...) ]`; /// <td> Clone-and-customize multiple models (modelPdf1,modelPdf2) according to ParamSplit and; /// ParamSplitConstrained() specifications and return a RooSimultaneous pdf of all built clones,; /// using the specified master index to map prototype pdfs to master states; /// <tr><th> Interface to %RooCustomizer <th>; /// <tr><td> `EDIT::name( orig, substNode=origNode), ... ]` <td> Create a clone of input object orig, with the specified replacements operations executed; /// <tr><td> `EDIT::name( orig, origNode=$REMOVE(), ... ]` <td> Create clone of input removing term origNode from all PRO",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx:4247,Interface,Interface,4247,roofit/roofitcore/src/RooFactoryWSTool.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx,1,['Interface'],['Interface']
Integrability,"different weights in your case, you; should either merge or combine them to get the overall efficiency. \anchor EFF051; ### V.1 When should I use merging?; If the weights are artificial and do not represent real alternative hypotheses,; you should merge the different TEfficiency objects. That means especially for; the Bayesian case that the prior probability should be the same for all merged; TEfficiency objects. The merging can be done by invoking one of the following; operations:; - eff1.Add(eff2); - eff1 += eff2; - eff1 = eff1 + eff2. The result of the merging is stored in the TEfficiency object which is marked; bold above. The contents of the internal histograms of both TEfficiency; objects are added and a new weight is assigned. The statistic options are not; changed. \f[; \frac{1}{w_{new}} = \frac{1}{w_{1}} + \frac{1}{w_{2}}; \f]. \anchor EFF05b; ### Example:; If you use two samples with different numbers of generated events for the same; process and you want to normalise both to the same integrated luminosity and; trigger efficiency, the different weights then arise just from the fact that; you have different numbers of events. The TEfficiency objects should be merged; because the samples do not represent true alternatives. You expect the same; result as if you would have a big sample with all events in it. \f[; w_{1} = \frac{\sigma L}{\epsilon N_{1}}, w_{2} = \frac{\sigma L}{\epsilon N_{2}} \Rightarrow w_{new} = \frac{\sigma L}{\epsilon (N_{1} + N_{2})} = \frac{1}{\frac{1}{w_{1}} + \frac{1}{w_{2}}}; \f]. \anchor EFF052; ### V.2 When should I use combining?; You should combine TEfficiency objects whenever the weights represent; alternatives processes for the efficiency. As the combination of two TEfficiency; objects is not always consistent with the representation by two internal; histograms, the result is not stored in a TEfficiency object but a TGraphAsymmErrors; is returned which shows the estimated combined efficiency and its uncertainty; for each bin.; A",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TEfficiency.cxx:17822,integrat,integrated,17822,hist/hist/src/TEfficiency.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TEfficiency.cxx,1,['integrat'],['integrated']
Integrability,"e Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /*************************************************************************; * Parts of this file are copied from the OOQP distribution and *; * are subject to the following license: *; * *; * COPYRIGHT 2001 UNIVERSITY OF CHICAGO *; * *; * The copyright holder hereby grants you royalty-free rights to use, *; * reproduce, prepare derivative works, and to redistribute this software*; * to others, provided that any changes are clearly documented. This *; * software was authored by: *; * *; * E. MICHAEL GERTZ gertz@mcs.anl.gov *; * Mathematics and Computer Science Division *; * Argonne National Laboratory *; * 9700 S. Cass Avenue *; * Argonne, IL 60439-4844 *; * *; * STEPHEN J. WRIGHT swright@cs.wisc.edu *; * Computer Sciences Department *; * University of Wisconsin *; * 1210 West Dayton Street *; * Madison, WI 53706 FAX: (608)262-9777 *; * *; * Any questions or comments may be directed to one of the authors. *; * *; * ARGONNE NATIONAL LABORATORY (ANL), WITH FACILITIES IN THE STATES OF *; * ILLINOIS AND IDAHO, IS OWNED BY THE UNITED STATES GOVERNMENT, AND *; * OPERATED BY THE UNIVERSITY OF CHICAGO UNDER PROVISION OF A CONTRACT *; * WITH THE DEPARTMENT OF ENERGY. *; *************************************************************************/; ////////////////////////////////////////////////////////////////////////////////; ///; /// \class TQpSolverBase; ///; /// The Solver class contains methods for monitoring and checking the; /// convergence status of the algorithm, methods to determine the step; /// length along a given direction, methods to define the starting point,; /// and the solve method that implements the interior-point algorithm; ///; ////////////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/quadp/src/TQpSolverBase.cxx:1549,CONTRACT,CONTRACT,1549,math/quadp/src/TQpSolverBase.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/quadp/src/TQpSolverBase.cxx,1,['CONTRACT'],['CONTRACT']
Integrability,"e are separated by a; /// slash (/). The variable type must be 1 character. (Characters; /// after the first are legal and will be appended to the visible; /// name of the leaf, but have no effect.) If no type is given, the; /// type of the variable is assumed to be the same as the previous; /// variable. If the first variable does not have a type, it is; /// assumed of type F by default. The list of currently supported; /// types is given below:; /// - `C` : a character string terminated by the 0 character; /// - `B` : an 8 bit signed integer (`Char_t`); Treated as a character when in an array.; /// - `b` : an 8 bit unsigned integer (`UChar_t`); /// - `S` : a 16 bit signed integer (`Short_t`); /// - `s` : a 16 bit unsigned integer (`UShort_t`); /// - `I` : a 32 bit signed integer (`Int_t`); /// - `i` : a 32 bit unsigned integer (`UInt_t`); /// - `F` : a 32 bit floating point (`Float_t`); /// - `f` : a 24 bit floating point with truncated mantissa (`Float16_t`); /// - `D` : a 64 bit floating point (`Double_t`); /// - `d` : a 24 bit truncated floating point (`Double32_t`); /// - `L` : a 64 bit signed integer (`Long64_t`); /// - `l` : a 64 bit unsigned integer (`ULong64_t`); /// - `G` : a long signed integer (`Long_t`, which `sizeof` is platform dependent), stored as a 64 bit integer but usually held in memory as a 64 bit integer on 64 bit machines and 32 bit on 32 bit machines. Due to this difference, this data type is **not cross-platform**.; /// - `g` : a long unsigned integer (`ULong_t`, which `sizeof` is platform dependent), stored as a 64 bit unsigned integer but held in memory usually as a 64 bit integer on 64 bit machines and 32 bit on 32 bit machines. Due to this difference, this data type is **not cross-platform**.; /// - `O` : [the letter `o`, not a zero] a boolean (`bool`); ///; /// Arrays of values are supported with the following syntax:; /// - If leaf name has the form var[nelem], where nelem is alphanumeric, then; /// if nelem is a leaf name, it is used",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TBranch.cxx:1683,depend,dependent,1683,tree/tree/src/TBranch.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TBranch.cxx,1,['depend'],['dependent']
Integrability,"e getVal(); method. RooAbsPdf manages the entire normalization logic of each PDF with; the help of a RooRealIntegral object, which coordinates the integration; of a given choice of normalization. By default, RooRealIntegral will; perform an entirely numeric integration of all dependents. However,; PDFs can advertise one or more (partial) analytical integrals of; their function, and these will be used by RooRealIntegral, if it; determines that this is safe (i.e., no hidden Jacobian terms,; multiplication with other PDFs that have one or more dependents in; common, etc). #### Implementing analytical integrals; To implement analytical integrals, two functions must be implemented. First,. ```; Int_t getAnalyticalIntegral(const RooArgSet& integSet, RooArgSet& anaIntSet); ```; should return the analytical integrals that are supported. `integSet`; is the set of dependents for which integration is requested. The; function should copy the subset of dependents it can analytically; integrate to `anaIntSet`, and return a unique identification code for; this integration configuration. If no integration can be; performed, zero should be returned. Second,. ```; double analyticalIntegral(Int_t code); ```. implements the actual analytical integral(s) advertised by; `getAnalyticalIntegral()`. This function will only be called with; codes returned by `getAnalyticalIntegral()`, except code zero. The integration range for each dependent to be integrated can; be obtained from the dependent's proxy functions `min()` and; `max()`. Never call these proxy functions for any proxy not known to; be a dependent via the integration code. Doing so may be; ill-defined, e.g., in case the proxy holds a function, and will; trigger an assert. Integrated category dependents should always be; summed over all of their states. ### Direct generation of observables. Distributions for any PDF can be generated with the accept/reject method,; but for certain PDFs, more efficient methods may be implemented. To; i",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx:3523,depend,dependents,3523,roofit/roofitcore/src/RooAbsPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx,3,"['depend', 'integrat']","['dependents', 'integrate', 'integration']"
Integrability,"e given in ascending order.; /// option is a character string to specify options; /// ""D"" Put out a line of ""Debug"" printout; /// ""M"" Return the Maximum Kolmogorov distance instead of prob; ///; /// ### Output:; /// The returned value prob is a calculated confidence level which gives a; /// statistical test for compatibility of a and b.; /// Values of prob close to zero are taken as indicating a small probability; /// of compatibility. For two point sets drawn randomly from the same parent; /// distribution, the value of prob should be uniformly distributed between; /// zero and one.; /// in case of error the function return -1; /// If the 2 sets have a different number of points, the minimum of; /// the two sets is used.; ///; /// ### Method:; /// The Kolmogorov test is used. The test statistic is the maximum deviation; /// between the two integrated distribution functions, multiplied by the; /// normalizing factor (rdmax*sqrt(na*nb/(na+nb)).; ///; /// Code adapted by Rene Brun from CERNLIB routine TKOLMO (Fred James); /// (W.T. Eadie, D. Drijard, F.E. James, M. Roos and B. Sadoulet,; /// Statistical Methods in Experimental Physics, (North-Holland,; /// Amsterdam 1971) 269-271); ///; /// ### Method Improvement by Jason A Detwiler (JADetwiler@lbl.gov); ///; /// The nuts-and-bolts of the TMath::KolmogorovTest() algorithm is a for-loop; /// over the two sorted arrays a and b representing empirical distribution; /// functions. The for-loop handles 3 cases: when the next points to be; /// evaluated satisfy a>b, a<b, or a=b:; ///; /// ~~~ {.cpp}; /// for (Int_t i=0;i<na+nb;i++) {; /// if (a[ia-1] < b[ib-1]) {; /// rdiff -= sa;; /// ia++;; /// if (ia > na) {ok = kTRUE; break;}; /// } else if (a[ia-1] > b[ib-1]) {; /// rdiff += sb;; /// ib++;; /// if (ib > nb) {ok = kTRUE; break;}; /// } else {; /// rdiff += sb - sa;; /// ia++;; /// ib++;; /// if (ia > na) {ok = kTRUE; break;}; /// if (ib > nb) {ok = kTRUE; break;}; /// }; /// rdmax = TMath::Max(rdmax,TMath::Abs(rdiff));; ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/TMath.cxx:1453,rout,routine,1453,math/mathcore/src/TMath.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/TMath.cxx,1,['rout'],['routine']
Integrability,"e gzip header will have no; file name, no extra data, no comment, no modification time (set to zero), no; header crc, and the operating system will be set to 255 (unknown). If a; gzip stream is being written, strm->adler is a crc32 instead of an adler32. The memLevel parameter specifies how much memory should be allocated; for the internal compression state. memLevel=1 uses minimum memory but is; slow and reduces compression ratio; memLevel=9 uses maximum memory for; optimal speed. The default value is 8. See zconf.h for total memory usage; as a function of windowBits and memLevel. The strategy parameter is used to tune the compression algorithm. Use the; value Z_DEFAULT_STRATEGY for normal data, Z_FILTERED for data produced by a; filter (or predictor), Z_HUFFMAN_ONLY to force Huffman encoding only (no; string match), or Z_RLE to limit match distances to one (run-length; encoding). Filtered data consists mostly of small values with a somewhat; random distribution. In this case, the compression algorithm is tuned to; compress them better. The effect of Z_FILTERED is to force more Huffman; coding and less string matching; it is somewhat intermediate between; Z_DEFAULT_STRATEGY and Z_HUFFMAN_ONLY. Z_RLE is designed to be almost as; fast as Z_HUFFMAN_ONLY, but give better compression for PNG image data. The; strategy parameter only affects the compression ratio but not the; correctness of the compressed output even if it is not set appropriately.; Z_FIXED prevents the use of dynamic Huffman codes, allowing for a simpler; decoder for special applications. deflateInit2 returns Z_OK if success, Z_MEM_ERROR if there was not enough; memory, Z_STREAM_ERROR if any parameter is invalid (such as an invalid; method), or Z_VERSION_ERROR if the zlib library version (zlib_version) is; incompatible with the version assumed by the caller (ZLIB_VERSION). msg is; set to null if there is no error message. deflateInit2 does not perform any; compression: this will be done by deflate().; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:3501,message,message,3501,builtins/zlib/zlib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h,1,['message'],['message']
Integrability,"e list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TGeoManagerEditor; \ingroup Geometry_builder. Editor for TGeoManager class. Provides also builder functionality for the; main TGeo objects: TGeoVolume, TGeoShape - derived classes, TGeoMaterial,; TGeoMatrix - derived transformations and TGeoMedium.; The GUI represents the main entry point for editing geometry classes. It; can be started either by:. 1. TGeoManager::Edit(). The method must be used when starting from a new; geometry.; 2. Left-click on the 40x40 pixels top-right corner of a pad containing a; drawn volume. The region is always accesible when drawing geometry elements; and allows also restoring the manager editor in the ""Style"" tab of the GED; editor anytime. The TGeoManager editor is vertically split by a TGShutter widget into the; following categories:. - General. This allows changing the name/title of the geometry, setting the; top volume, closing the geometry and saving the geometry in a file. The name; of the geometry file is formed by geometry_name.C/.root depending if the geometry; need to be saved as a C macro or a .root file.; - Shapes. The category provide buttons for creation of all supported shapes. The; new shape name is chosen by the interface, but can be changed from the shape; editor GUI. Existing shapes can be browsed and edited from the same category.; - Volumes. The category allows the creation of a new volume having a given name,; shape and medium. For creating a volume assembly only the name is relevant.; Existing volumes can be browsed or edited from this category.; - Materials. Allows creation of new materials/mixtures or editing existing ones.; - Media. The same for creation/editing of tracking media (materials having a set; of properties related to tracking); - Matrices. Allows creation of translations, rotations or combined transformations.; Existing matrices can also be browser/edited.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/geombuilder/src/TGeoManagerEditor.cxx:1392,depend,depending,1392,geom/geombuilder/src/TGeoManagerEditor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geombuilder/src/TGeoManagerEditor.cxx,2,"['depend', 'interface']","['depending', 'interface']"
Integrability,"e original one for fits; * or plotting etc.; * \note The binning will be taken from the observable. Make sure that this binning is the same as the one of the dataset that should be fit.; * Use RooRealVar::setBinning() to adapt it.; * - Instruct test statistics to carry out this wrapping automatically:; * ```; * pdf.fitTo(data, IntegrateBins(<precision>));; * ```; * This method is especially useful when used with a simultaneous PDF, since each component will automatically be wrapped,; * depending on the value of `precision`:; * - `precision < 0.`: None of the PDFs are touched, bin sampling is off.; * - `precision = 0.`: Continuous PDFs that are fit to a RooDataHist are wrapped into a RooBinSamplingPdf. The target precision; * forwarded to the integrator is 1.E-4 (the default argument of the constructor).; * - `precision > 0.`: All continuous PDFs are automatically wrapped into a RooBinSamplingPdf, regardless of what data they are; * fit to (see next paragraph). The same `'precision'` is used for all integrators.; *; * ### Simulating a binned fit using RooDataSet; * Some frameworks use unbinned data (RooDataSet) to simulate binned datasets. By adding one entry for each bin centre with the; * appropriate weight, one can achieve the same result as fitting with RooDataHist. In this case, however, RooFit cannot; * auto-detect that a binned fit is running, and that an integration over the bin is desired (note that there are no bins to; * integrate over in this kind of dataset).; *; * In this case, `IntegrateBins(>0.)` needs to be used, and the desired binning needs to be assigned to the observable; * of the dataset:; * ```; * RooRealVar x(""x"", ""x"", 0., 5.);; * x.setBins(10);; *; * // <create dataset and model>; *; * model.fitTo(data, IntegrateBins(>0.));; * ```; *; * \see RooAbsPdf::fitTo(); * \see IntegrateBins(); *; * \note This feature is currently limited to one-dimensional PDFs.; *; *; * \htmlonly <style>div.image img[src=""RooBinSamplingPdf_OFF.png""]{width:12cm;}</sty",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooBinSamplingPdf.cxx:3068,integrat,integrators,3068,roofit/roofitcore/src/RooBinSamplingPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooBinSamplingPdf.cxx,1,['integrat'],['integrators']
Integrability,"e. Here one takes the full training event; sample and selects the variable and corresponding cut value that gives; the best separation between signal and background at this stage. Using; this cut criterion, the sample is then divided into two subsamples, a; signal-like (right) and a background-like (left) sample. Two new nodes; are then created for each of the two sub-samples and they are; constructed using the same mechanism as described for the root; node. The devision is stopped once a certain node has reached either a; minimum number of events, or a minimum or maximum signal purity. These; leave nodes are then called ""signal"" or ""background"" if they contain; more signal respective background events from the training sample. ### Boosting:. the idea behind the boosting is, that signal events from the training; sample, that *end up in a background node (and vice versa) are given a; larger weight than events that are in the correct leave node. This; results in a re-weighed training event sample, with which then a new; decision tree can be developed. The boosting can be applied several; times (typically 100-500 times) and one ends up with a set of decision; trees (a forest). ### Bagging:. In this particular variant of the Boosted Decision Trees the boosting; is not done on the basis of previous training results, but by a simple; stochastic re-sampling of the initial training event sample. ### Analysis:. applying an individual decision tree to a test event results in a; classification of the event as either signal or background. For the; boosted decision tree selection, an event is successively subjected to; the whole set of decision trees and depending on how often it is; classified as signal, a ""likelihood"" estimator is constructed for the; event being signal or background. The value of this estimator is the; one which is then used to select the events from an event sample, and; the cut value on this estimator defines the efficiency and purity of; the selection.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodDT.cxx:3731,depend,depending,3731,tmva/tmva/src/MethodDT.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodDT.cxx,1,['depend'],['depending']
Integrability,"e. See the discussion above ``Getting the right parameter errors; with limits''. The best way to be absolutely sure of the errors, is to use; ``independent'' calculations and compare them, or compare the calculated; errors with a picture of the function. Theoretically, the covariance; matrix for a ``physical'' function must be positive-definite at the; minimum, although it may not be so for all points far away from the; minimum, even for a well-determined physical problem. Therefore, if MIGRAD; reports that it has found a non-positive-definite covariance matrix, this; may be a sign of one or more of the following:. ##### A non-physical region:. On its way to the minimum, MIGRAD may have traversed a region which has; unphysical behaviour, which is of course not a serious problem as long as; it recovers and leaves such a region. ##### An underdetermined problem:. If the matrix is not positive-definite even at the minimum, this may mean; that the solution is not well-defined, for example that there are more; unknowns than there are data points, or that the parameterisation of the; fit contains a linear dependence. If this is the case, then MINUIT (or any; other program) cannot solve your problem uniquely, and the error matrix; will necessarily be largely meaningless, so the user must remove the; under-determinedness by reformulating the parameterisation. MINUIT cannot; do this itself. ##### Numerical inaccuracies:. It is possible that the apparent lack of positive-definiteness is in fact; only due to excessive roundoff errors in numerical calculations in the; user function or not enough precision. This is unlikely in general, but; becomes more likely if the number of free parameters is very large, or if. the parameters are badly scaled (not all of the same order of magnitude),; and correlations are also large. In any case, whether the; non-positive-definiteness is real or only numerical is largely irrelevant,; since in both cases the error matrix will be unreliable and ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TMinuit.cxx:10906,depend,dependence,10906,math/minuit/src/TMinuit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TMinuit.cxx,1,['depend'],['dependence']
Integrability,"e.; ///; /// <tr><td> `Slice(RooCategory& cat, const char* label)` <td> Override default projection behaviour by omitting the specified category; /// observable from the projection, i.e., by not integrating over all states of this category.; /// The slice is positioned at the given label value. To pass multiple Slice() commands, please use the; /// Slice(std::map<RooCategory*, std::string> const&) argument explained below.; ///; /// <tr><td> `Slice(std::map<RooCategory*, std::string> const&)` <td> Omits multiple categories from the projection, as explianed above.; /// Can be used with initializer lists for convenience, e.g.; /// ```{.cpp}; /// pdf.plotOn(frame, Slice({{&tagCategory, ""2tag""}, {&jetCategory, ""3jet""}});; /// ```; ///; /// <tr><td> `Project(const RooArgSet& set)` <td> Override default projection behaviour by projecting over observables; /// given in the set, ignoring the default projection behavior. Advanced use only.; ///; /// <tr><td> `ProjWData(const RooAbsData& d)` <td> Override default projection _technique_ (integration). For observables present in given dataset; /// projection of PDF is achieved by constructing an average over all observable values in given set.; /// Consult RooFit plotting tutorial for further explanation of meaning & use of this technique; ///; /// <tr><td> `ProjWData(const RooArgSet& s, const RooAbsData& d)` <td> As above but only consider subset 's' of observables in dataset 'd' for projection through data averaging; ///; /// <tr><td> `ProjectionRange(const char* rn)` <td> Override default range of projection integrals to a different range specified by given range name.; /// This technique allows you to project a finite width slice in a real-valued observable; ///; /// <tr><td> `NumCPU(Int_t ncpu)` <td> Number of CPUs to use simultaneously to calculate data-weighted projections (only in combination with ProjWData); ///; ///; /// <tr><th><th> Misc content control; /// <tr><td> `PrintEvalErrors(Int_t numErr)` <td> Control numbe",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx:2346,integrat,integration,2346,roofit/roofitcore/src/RooAbsReal.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx,1,['integrat'],['integration']
Integrability,"e; * implementation of 'receive_task_result_on_master', one will get the whole; * message, but the 'Job' ID part will already have been identified in the; * 'JobManager', so one needn't worry about it further inside; * 'Job::receive_task_result_on_master' (it is already routed to the correct; * 'Job'). The same goes for the receiving end of 'update_state', except that; * update_state is routed from the 'worker_loop', not the 'JobManager'.; *; * A second rule applies to 'update_state' messages: the second part must be; * a state identifier. This identifier will also be sent along with tasks to; * the queue. When a worker then takes a task from the queue, it can check; * whether it has already updated its state to what is expected to be there; * for the task at hand. If not, it should wait for the new state to arrive; * over the state subscription socket. Note: it is the implementer's task to; * actually update 'Job::state_id_' inside 'Job::update_state()'!; *; * ## Implementers notes; *; * The type of result from each task is strongly dependent on the Job at hand; * and so Job does not provide a default results member. It is up to the; * inheriting class to implement this in the above functions. We would have; * liked a template parameter task_result_t, so that we could also provide a; * default ""boilerplate"" calculate function to show a typical Job use-case of; * all the above infrastructure. This is not trivial, because the JobManager; * has to keep a list of Job pointers, so if there would be different template; * instantiations of Jobs, this would complicate this list.; *; * A typical Job implementation will have an evaluation function that is; * called from the master process, like RooAbsArg::getVal calls evaluate().; * This function will have three purposes: 1. send updated parameter values; * to the workers (possibly through update_state() or in a dedicated; * function), 2. queue tasks and 3. wait for the results to be retrieved.; * 'Job::gather_worker_results",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Job.cxx:2533,depend,dependent,2533,roofit/multiprocess/src/Job.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Job.cxx,1,['depend'],['dependent']
Integrability,"e; * user types punctuation characters or whitespace, at which point the; * code-completion location will coincide with the cursor. For example, if \c p; * is a pointer, code-completion might be triggered after the ""-"" and then; * after the "">"" in \c p->. When the code-completion location is after the "">"",; * the completion results will provide, e.g., the members of the struct that; * ""p"" points to. The client is responsible for placing the cursor at the; * beginning of the token currently being typed, then filtering the results; * based on the contents of the token. For example, when code-completing for; * the expression \c p->get, the client should provide the location just after; * the "">"" (e.g., pointing at the ""g"") to this code-completion hook. Then, the; * client can filter the results based on the current token text (""get""), only; * showing those results that start with ""get"". The intent of this interface; * is to separate the relatively high-latency acquisition of code-completion; * results from the filtering of results on a per-character basis, which must; * have a lower latency.; *; * \param TU The translation unit in which code-completion should; * occur. The source files for this translation unit need not be; * completely up-to-date (and the contents of those source files may; * be overridden via \p unsaved_files). Cursors referring into the; * translation unit may be invalidated by this invocation.; *; * \param complete_filename The name of the source file where code; * completion should be performed. This filename may be any file; * included in the translation unit.; *; * \param complete_line The line at which code-completion should occur.; *; * \param complete_column The column at which code-completion should occur.; * Note that the column should point just after the syntactic construct that; * initiated code completion, and not in the middle of a lexical token.; *; * \param unsaved_files the Files that have not yet been saved to disk; * but may be req",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h:1785,interface,interface,1785,interpreter/llvm-project/clang/include/clang-c/Index.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h,1,['interface'],['interface']
Integrability,"eScheduler(MachineSchedContext *C) {; // return new CustomMachineScheduler(C);; // }; //; // The default scheduler, ScheduleDAGMILive, builds the DAG and drives list; // scheduling while updating the instruction stream, register pressure, and live; // intervals. Most targets don't need to override the DAG builder and list; // scheduler, but subtargets that require custom scheduling heuristics may; // plugin an alternate MachineSchedStrategy. The strategy is responsible for; // selecting the highest priority node from the list:; //; // ScheduleDAGInstrs *<Target>PassConfig::; // createMachineScheduler(MachineSchedContext *C) {; // return new ScheduleDAGMILive(C, CustomStrategy(C));; // }; //; // The DAG builder can also be customized in a sense by adding DAG mutations; // that will run after DAG building and before list scheduling. DAG mutations; // can adjust dependencies based on target-specific knowledge or add weak edges; // to aid heuristics:; //; // ScheduleDAGInstrs *<Target>PassConfig::; // createMachineScheduler(MachineSchedContext *C) {; // ScheduleDAGMI *DAG = createGenericSchedLive(C);; // DAG->addMutation(new CustomDAGMutation(...));; // return DAG;; // }; //; // A target that supports alternative schedulers can use the; // MachineSchedRegistry to allow command line selection. This can be done by; // implementing the following boilerplate:; //; // static ScheduleDAGInstrs *createCustomMachineSched(MachineSchedContext *C) {; // return new CustomMachineScheduler(C);; // }; // static MachineSchedRegistry; // SchedCustomRegistry(""custom"", ""Run my target's custom scheduler"",; // createCustomMachineSched);; //; //; // Finally, subtargets that don't need to implement custom heuristics but would; // like to configure the GenericScheduler's policy for a given scheduler region,; // including scheduling direction and register pressure tracking policy, can do; // this:; //; // void <SubTarget>Subtarget::; // overrideSchedPolicy(MachineSchedPolicy &Policy,; // unsign",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineScheduler.h:1803,depend,dependencies,1803,interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineScheduler.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineScheduler.h,1,['depend'],['dependencies']
Integrability,"eans that; /// for each bin, there will be one event in the dataset with a weight corresponding to the (possibly randomised) bin content.; ///; ///; /// <tr><td> `AllBinned()` <td> As above, but for all components.; /// \note The notion of components is only meaningful for simultaneous PDFs; /// as binned generation is always executed at the top-level node for a regular; /// PDF, so for those it only mattes that the top-level node is tagged.; ///; /// <tr><td> ProtoData(const RooDataSet& data, bool randOrder); /// <td> Use specified dataset as prototype dataset. If randOrder in ProtoData() is set to true,; /// the order of the events in the dataset will be read in a random order if the requested; /// number of events to be generated does not match the number of events in the prototype dataset.; /// \note If ProtoData() is used, the specified existing dataset as a prototype: the new dataset will contain; /// the same number of events as the prototype (unless otherwise specified), and any prototype variables not in; /// whatVars will be copied into the new dataset for each generated event and also used to set our PDF parameters.; /// The user can specify a number of events to generate that will override the default. The result is a; /// copy of the prototype dataset with only variables in whatVars randomized. Variables in whatVars that; /// are not in the prototype will be added as new columns to the generated dataset.; ///; /// </table>; ///; /// #### Accessing the underlying event generator; /// Depending on the fit model (if it is difficult to sample), it may be necessary to change generator settings.; /// For the default generator (RooFoamGenerator), the number of samples or cells could be increased by e.g. using; /// myPdf->specialGeneratorConfig()->getConfigSection(""RooFoamGenerator"").setRealValue(""nSample"",1e4);; ///; /// The foam generator e.g. has the following config options:; /// - nCell[123N]D; /// - nSample; /// - chatLevel; /// \see rf902_numgenconfig.C",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx:3177,Depend,Depending,3177,roofit/roofitcore/src/RooAbsPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx,1,['Depend'],['Depending']
Integrability,"ect, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; /// \file; /// This file implements a pass that converts X86 cmov instructions into; /// branches when profitable. This pass is conservative. It transforms if and; /// only if it can guarantee a gain with high confidence.; ///; /// Thus, the optimization applies under the following conditions:; /// 1. Consider as candidates only CMOVs in innermost loops (assume that; /// most hotspots are represented by these loops).; /// 2. Given a group of CMOV instructions that are using the same EFLAGS def; /// instruction:; /// a. Consider them as candidates only if all have the same code condition; /// or the opposite one to prevent generating more than one conditional; /// jump per EFLAGS def instruction.; /// b. Consider them as candidates only if all are profitable to be; /// converted (assume that one bad conversion may cause a degradation).; /// 3. Apply conversion only for loops that are found profitable and only for; /// CMOV candidates that were found profitable.; /// a. A loop is considered profitable only if conversion will reduce its; /// depth cost by some threshold.; /// b. CMOV is considered profitable if the cost of its condition is higher; /// than the average cost of its true-value and false-value by 25% of; /// branch-misprediction-penalty. This assures no degradation even with; /// 25% branch misprediction.; ///; /// Note: This pass is assumed to run on SSA machine code.; //; //===----------------------------------------------------------------------===//; //; // External interfaces:; // FunctionPass *llvm::createX86CmovConverterPass();; // bool X86CmovConverterPass::runOnMachineFunction(MachineFunction &MF);; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86CmovConversion.cpp:1885,interface,interfaces,1885,interpreter/llvm-project/llvm/lib/Target/X86/X86CmovConversion.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86CmovConversion.cpp,1,['interface'],['interfaces']
Integrability,"ectories are supported. In case; /// subdirectories are present the behavior is unspecified - events *might* be; /// passed to Receiver on macOS (due to FSEvents being used) while they; /// *probably* won't be passed on Linux (due to inotify being used).; ///; /// Known potential inconsistencies; /// - For files that are deleted befor the initial scan processed them, clients; /// might receive Removed notification without any prior Added notification.; /// - Multiple notifications might be produced when a file is added to the; /// watched directory during the initial scan. We are choosing the lesser evil; /// here as the only known alternative strategy would be to invalidate the; /// watcher instance and force user to create a new one whenever filesystem; /// event occurs during the initial scan but that would introduce continuous; /// restarting failure mode (watched directory is not always ""owned"" by the same; /// process that is consuming it). Since existing clients can handle duplicate; /// events well, we decided for simplicity.; ///; /// Notifications are provided only for changes done through local user-space; /// filesystem interface. Specifically, it's unspecified if notification would; /// be provided in case of a:; /// - a file mmap-ed and changed; /// - a file changed via remote (NFS) or virtual (/proc) FS access to monitored; /// directory; /// - another filesystem mounted to the watched directory; ///; /// No support for LLVM VFS.; ///; /// It is unspecified whether notifications for files being deleted are sent in; /// case the whole watched directory is sent.; ///; /// Directories containing ""too many"" files and/or receiving events ""too; /// frequently"" are not supported - if the initial scan can't be finished before; /// the watcher instance gets invalidated (see WatcherGotInvalidated) there's no; /// good error handling strategy - the only option for client is to destroy the; /// watcher, restart watching with new instance and hope it won't repeat.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/DirectoryWatcher/DirectoryWatcher.h:1582,interface,interface,1582,interpreter/llvm-project/clang/include/clang/DirectoryWatcher/DirectoryWatcher.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/DirectoryWatcher/DirectoryWatcher.h,1,['interface'],['interface']
Integrability,"ed in AP. */; /* Unchanged on exit. */; /* N - INTEGER. */; /* On entry, N specifies the order of the matrix A. */; /* N must be at least zero. */; /* Unchanged on exit. */; /* ALPHA - DOUBLE PRECISION. */; /* On entry, ALPHA specifies the scalar alpha. */; /* Unchanged on exit. */; /* X - DOUBLE PRECISION array of dimension at least */; /* ( 1 + ( n - 1 )*abs( INCX ) ). */; /* Before entry, the incremented array X must contain the n */; /* element vector x. */; /* Unchanged on exit. */; /* INCX - INTEGER. */; /* On entry, INCX specifies the increment for the Elements of */; /* X. INCX must not be zero. */; /* Unchanged on exit. */; /* AP - DOUBLE PRECISION array of DIMENSION at least */; /* ( ( n*( n + 1 ) )/2 ). */; /* Before entry with UPLO = 'U' or 'u', the array AP must */; /* contain the Upper triangular part of the symmetric matrix */; /* packed sequentially, column by column, so that AP( 1 ) */; /* contains a( 1, 1 ), AP( 2 ) and AP( 3 ) contain a( 1, 2 ) */; /* and a( 2, 2 ) respectively, and so on. On exit, the array */; /* AP is overwritten by the Upper triangular part of the */; /* updated matrix. */; /* Before entry with UPLO = 'L' or 'l', the array AP must */; /* contain the Lower triangular part of the symmetric matrix */; /* packed sequentially, column by column, so that AP( 1 ) */; /* contains a( 1, 1 ), AP( 2 ) and AP( 3 ) contain a( 2, 1 ) */; /* and a( 3, 1 ) respectively, and so on. On exit, the array */; /* AP is overwritten by the Lower triangular part of the */; /* updated matrix. */; /* Level 2 Blas routine. */; /* -- Written on 22-October-1986. */; /* Jack Dongarra, Argonne National Lab. */; /* Jeremy Du Croz, Nag Central Office. */; /* Sven Hammarling, Nag Central Office. */; /* Richard Hanson, Sandia National Labs. */; /* .. Parameters .. */; /* .. Local Scalars .. */; /* .. External Functions .. */; /* .. External Subroutines .. */; /* .. */; /* .. Executable Statements .. */; /* Test the input parameters. */; /* Parameter adjustments */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/src/mndspr.cxx:2225,rout,routine,2225,math/minuit2/src/mndspr.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/src/mndspr.cxx,1,['rout'],['routine']
Integrability,"ed.; /// For instance if the compiler sees a symbol it looks for its definition in; /// a internal structure (symbol table) and it is not found it asks whether; /// somebody else could provide the missing symbol. That is the place where; /// the DynamicIDHandler, which is controlled by DynamicExprTransformer comes; /// into play. It marks all unknown symbols as dependent as if they are; /// templates and are going to be resolved at first instantiation, with the; /// only difference that an instantiation never happens. The advantage is that; /// the unknown symbols are not diagnosed but the disadvantage is that; /// somebody needs to transform them into valid expressions with valid types.; ///; /// 2. Replace all dependent symbols - all artificially dependent symbols need; /// to be replaced with appropriate valid symbols in order the compiler to; /// produce executable machine code. The DynamicExprTransformer walks up all; /// statements and declarations that might be possibly marked earlier as; /// dependent and replaces them with valid expression, which preserves the; /// meant behavior. Main implementation goal is to replace the as little; /// as possible part of the statement. The replacement is done immediately; /// after the expected type can be deduced.; ///; /// 2.1. EvaluateT - this is a templated function, which is put at the; /// place of the dependent expression. It will be called at runtime and it; /// will use the runtime instance of the interpreter (cling interprets itself); /// to evaluate the replaced expression. The template parameter of the; /// function carries the expected expression type. If unknown symbol is; /// encountered as a right-hand-side of an assignment one can claim that; /// the type of the unknown expression should be compatible with the type of; /// the left-hand-side.; ///; /// 2.2 LifetimeHandler - in some more complex situation in order to preserve; /// the behavior the expression must be replaced with more complex structures.; ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLookup.h:1849,depend,dependent,1849,interpreter/cling/lib/Interpreter/DynamicLookup.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLookup.h,1,['depend'],['dependent']
Integrability,"ee::Draw and TChain::Draw into; an entry list. Example:; ~~~ {.cpp}; tree->Draw("">>elist"", ""x<0 && y>0"", ""entrylist"");; TEntryList *elist = (TEntryList*)gDirectory->Get(""elist"");; ~~~; ## Example of Loop on TEntryList with a TChain; ~~~ {.cpp}; void loopChain() {; TFile *fe = TFile::Open(""myelist.root"");; TEntryList *myelist = (TEntryList*)fe->Get(""myelist"");; TChain *chain = new TChain(""ntuple"");; chain->Add(""hsimple.root"");; chain->Add(""hsimple2.root"");; Long64_t listEntries = myelist->GetN();; Long64_t chainEntries = chain->GetEntries();; Int_t treenum = 0;; chain->SetEntryList(myelist);. for (entry=start;entry < end;entry++) {; entryNumber = chain->GetEntryNumber(entry);; if (entryNumber < 0) break;; localEntry = chain->LoadTree(entryNumber);; if (localEntry < 0) break;; ....; then either call; branch->GetEntry(localEntry);; or; chain->GetEntry(entryNumber);; In the later case the LoadTree is then somewhat redundant.; ...; }; }; ~~~; When using the TEntryList interface directly, you can get the 'tree number' and entry in; the current tree (i.e. value similar to the return value of LoadTree) from calling; TEntryList::GetEntryAndTree:; ~~~ {.cpp}; Long64_t treeEntry = myelist->GetEntryAndTree(el,treenum);; ~~~; to obtain the entry number within the chain you need to add to it the value of; `treeEntry+ch->GetTreeOffset()[treenum]`; such that the loop in the previous example can also be written as:; ~~~ {.cpp}; for (Long64_t el = 0; el < listEntries; el++) {; Long64_t treeEntry = myelist->GetEntryAndTree(el,treenum);; Long64_t chainEntry = treeEntry+ch->GetTreeOffset()[treenum];; printf(""el=%lld, treeEntry=%lld, chainEntry=%lld, treenum=%d\n"", el, treeEntry, chainEntry, treenum);. ch->LoadTree(chainEntry); // this also returns treeEntry; needed_branch->GetEntry(treeEntry);; }; ~~~; ## TSelectors. To fill an TEntryList from a TSelector correctly, one must add the TEntryList object; to the output list of the selector (TSelector::fOutput). This is the only way to; make ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TEntryList.cxx:2486,interface,interface,2486,tree/tree/src/TEntryList.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TEntryList.cxx,1,['interface'],['interface']
Integrability,"en the number of uOps; /// dispatched and the number of uOps issued to the underlying pipelines.; ///; /// The bottleneck analysis view is also responsible for identifying and; /// printing the most ""critical"" sequence of dependent instructions according to; /// the simulated run.; ///; /// Below is the critical sequence computed for the dot-product example on; /// btver2:; ///; /// Instruction Dependency Information; /// +----< 2. vhaddps %xmm3, %xmm3, %xmm4; /// |; /// | < loop carried > ; /// |; /// | 0. vmulps	 %xmm0, %xmm0, %xmm2; /// +----> 1. vhaddps %xmm2, %xmm2, %xmm3 ## RESOURCE interference: JFPA [ probability: 73% ]; /// +----> 2. vhaddps %xmm3, %xmm3, %xmm4 ## REGISTER dependency: %xmm3; /// |; /// | < loop carried > ; /// |; /// +----> 1. vhaddps %xmm2, %xmm2, %xmm3 ## RESOURCE interference: JFPA [ probability: 73% ]; ///; ///; /// The algorithm that computes the critical sequence is very similar to a; /// critical path analysis.; /// ; /// A dependency graph is used internally to track dependencies between nodes.; /// Nodes of the graph represent instructions from the input assembly sequence,; /// and edges of the graph represent data dependencies or processor resource; /// interferences.; ///; /// Edges are dynamically 'discovered' by observing instruction state; /// transitions and backend pressure increase events. Edges are internally; /// ranked based on their ""criticality"". A dependency is considered to be; /// critical if it takes a long time to execute, and if it contributes to; /// backend pressure increases. Criticality is internally measured in terms of; /// cycles; it is computed for every edge in the graph as a function of the edge; /// latency and the number of backend pressure increase cycles contributed by; /// that edge.; ///; /// At the end of simulation, costs are propagated to nodes through the edges of; /// the graph, and the most expensive path connecting the root-set (a; /// set of nodes with no predecessors) to a leaf node is re",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-mca/Views/BottleneckAnalysis.h:2420,depend,dependency,2420,interpreter/llvm-project/llvm/tools/llvm-mca/Views/BottleneckAnalysis.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-mca/Views/BottleneckAnalysis.h,2,['depend'],"['dependencies', 'dependency']"
Integrability,"enu/Import from.../Canvas or; the corresponding Tool bar button. A new style will be created in the; ROOT session and will become the selected one. This style is a clone; of the gStyle with modified values as they are set in the currently; selected canvas. You can import a style from any canvas and apply it; later on some objects. Export a style (in a C++ macro file):; To store a style longer than for the current ROOT session you can; save it in a C++ macro file. This can be done via the menu or the; tool bar button. There is a naming convention for the style macros:; the name must be 'Style_*.C', where * can be replaced by anything; you want. Delete a style:; The selected style can be deleted from the list when you use the; Style menu/Delete or the corresponding tool bar button. The selected; style is removed from the list of all available styles for the; current ROOT session. WARRNING: it will be lost if you didn't saved; it in a C++ macro file before its deletion. Also, you cannot delete; the selected style if it is set to gStyle. A message 'Can not delete; gStyle' will be displayed on the CINT prompt. Editor's buttons:; Open / close the style editor:; The button 'Edit >>' opens the style editor and its label changes to; 'Close <<'. For all details of what can be changed and how please see; the provided Help. Reset a style (to a previously saved state):; When the editor is opened, the 'Reset' button allows you to reset; the values of the selected style for editing. Doing that you cancel; all changes made since the last time you saved that style in a macro.; If the selected style is one of the five ROOT styles (Plain, Bold,; Video, Pub or Default), it will be recreated. Update the preview:; The button 'Update Preview' is available when a preview is shown and; the run time option is not selected. This button allows you to; refresh the preview any time you want to see how the style you edit; looks like. Help button:; Provides a help of the currently selected tab. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/ged/src/TStyleManager.cxx:3618,message,message,3618,gui/ged/src/TStyleManager.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/ged/src/TStyleManager.cxx,1,['message'],['message']
Integrability,"eous fits with components with large likelihood values.; * <tr><td> **bin** <td> Offset likelihood bin-by-bin with a template histogram model based on the obersved data.; * This results in per-bin values that are all in the same order of magnitude, which reduces precision loss in the sum,; * which can drastically improve numeric stability.; * Furthermore, \f$2\cdot \text{NLL}\f$ defined like this is approximately chi-square distributed, allowing for goodness-of-fit tests.; * </table>; * <tr><td> `IntegrateBins(double precision)` <td> In binned fits, integrate the PDF over the bins instead of using the probability density at the bin centre.; * This can reduce the bias observed when fitting functions with high curvature to binned data.; * - precision > 0: Activate bin integration everywhere. Use precision between 0.01 and 1.E-6, depending on binning.; * Note that a low precision such as 0.01 might yield identical results to 1.E-4, since the integrator might reach 1.E-4 already in its first; * integration step. If lower precision is desired (more speed), a RooBinSamplingPdf has to be created manually, and its integrator; * has to be manipulated directly.; * - precision = 0: Activate bin integration only for continuous PDFs fit to a RooDataHist.; * - precision < 0: Deactivate.; * \see RooBinSamplingPdf; * <tr><td> `ModularL(bool flag)` <td> Enable or disable modular likelihoods, which will become the default in a future release.; * This does not change any user-facing code, but only enables a different likelihood class in the back-end. Note that this; * should be set to true for parallel minimization of likelihoods!; * Note that it is currently not recommended to use Modular likelihoods without any parallelization enabled in the minimization, since; * some features such as offsetting might not yet work in this case.; * </table>; */; /** @brief Protected implementation of the NLL creation routine.; *; * This virtual function can be overridden in case you want to change th",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx:9535,integrat,integration,9535,roofit/roofitcore/src/RooAbsPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx,1,['integrat'],['integration']
Integrability,"er got rid of nextbyte() routine. fixed; bug in inflate_fixed().; c1 30 Mar 92 M. Adler removed lbits, dbits environment variables.; changed BMAX to 16 for explode. Removed; OUTB usage, and replaced it with flush()--; this was a 20% speed improvement! Added; an explode.c (to replace unimplod.c) that; uses the huft routines here. Removed; register union.; c2 4 Apr 92 M. Adler fixed bug for file sizes a multiple of 32k.; c3 10 Apr 92 M. Adler reduced memory of code tables made by; huft_build significantly (factor of two to; three).; c4 15 Apr 92 M. Adler added NOMEMCPY do kill use of memcpy().; worked around a Turbo C optimization bug.; c5 21 Apr 92 M. Adler added the WSIZE #define to allow reducing; the 32K window size for specialized; applications.; c6 31 May 92 M. Adler added some typecasts to eliminate warnings; c7 27 Jun 92 G. Roelofs added some more typecasts (444: MSC bug).; c8 5 Oct 92 J-l. Gailly added ifdef'd code to deal with PKZIP bug.; c9 9 Oct 92 M. Adler removed a memory error message (~line 416).; c10 17 Oct 92 G. Roelofs changed ULONG/UWORD/byte to ulg/ush/uch,; removed old inflate, renamed inflate_entry; to inflate, added Mark's fix to a comment.; c10.5 14 Dec 92 M. Adler fix up error messages for incomplete trees.; c11 2 Jan 93 M. Adler fixed bug in detection of incomplete; tables, and removed assumption that EOB is; the longest code (bad assumption).; c12 3 Jan 93 M. Adler make tables for fixed blocks only once.; c13 5 Jan 93 M. Adler allow all zero length codes (pkzip 2.04c; outputs one zero length code for an empty; distance tree).; c14 12 Mar 93 M. Adler made inflate.c standalone with the; introduction of inflate.h.; c14b 16 Jul 93 G. Roelofs added (unsigned) typecast to w at 470.; c14c 19 Jul 93 J. Bush changed v[N_MAX], l[288], ll[28x+3x] arrays; to static for Amiga.; c14d 13 Aug 93 J-l. Gailly de-complicatified Mark's c[*p++]++ thing.; c14e 8 Oct 93 G. Roelofs changed memset() to memzero().; c14f 22 Oct 93 G. Roelofs renamed quietflg to qflag",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/zip/src/ZInflate.c:1975,message,message,1975,core/zip/src/ZInflate.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/zip/src/ZInflate.c,1,['message'],['message']
Integrability,"er struct; // IRAttribute. In the simplest case, a subclass inherits from IRAttribute with; // a proper Attribute::AttrKind as template parameter. The Attributor; // manifestation framework will then create and place a new attribute if it is; // allowed to do so (based on the abstract state). Other use cases can be; // achieved by overloading AbstractAttribute or IRAttribute methods.; //; //; // The ""mechanics"" of adding a new ""abstract attribute"":; // - Define a class (transitively) inheriting from AbstractAttribute and one; // (which could be the same) that (transitively) inherits from AbstractState.; // For the latter, consider the already available BooleanState and; // {Inc,Dec,Bit}IntegerState if they fit your needs, e.g., you require only a; // number tracking or bit-encoding.; // - Implement all pure methods. Also use overloading if the attribute is not; // conforming with the ""default"" behavior: A (set of) LLVM-IR attribute(s) for; // an argument, call site argument, function return value, or function. See; // the class and method descriptions for more information on the two; // ""Abstract"" classes and their respective methods.; // - Register opportunities for the new abstract attribute in the; // `Attributor::identifyDefaultAbstractAttributes` method if it should be; // counted as a 'default' attribute.; // - Add sufficient tests.; // - Add a Statistics object for bookkeeping. If it is a simple (set of); // attribute(s) manifested through the Attributor manifestation framework, see; // the bookkeeping function in Attributor.cpp.; // - If instructions with a certain opcode are interesting to the attribute, add; // that opcode to the switch in `Attributor::identifyAbstractAttributes`. This; // will make it possible to query all those instructions through the; // `InformationCache::getOpcodeInstMapForFunction` interface and eliminate the; // need to traverse the IR repeatedly.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h:5888,interface,interface,5888,interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h,1,['interface'],['interface']
Integrability,"ero sized non-virtual base can be placed at the end of the; // struct (potentially aliasing another object), or may alias with the first; // field, even if they are of the same type.; // * The last zero size virtual base may be placed at the end of the struct; // potentially aliasing another object.; // * The ABI attempts to avoid aliasing of zero sized bases by adding padding; // between bases or vbases with specific properties. The criteria for; // additional padding between two bases is that the first base is zero sized; // or ends with a zero sized subobject and the second base is zero sized or; // trails with a zero sized base or field (sharing of vfptrs can reorder the; // layout of the so the leading base is not always the first one declared).; // This rule does take into account fields that are not records, so padding; // will occur even if the last field is, e.g. an int. The padding added for; // bases is 1 byte. The padding added between vbases depends on the alignment; // of the object but is at least 4 bytes (in both 32 and 64 bit modes).; // * There is no concept of non-virtual alignment, non-virtual alignment and; // alignment are always identical.; // * There is a distinction between alignment and required alignment.; // __declspec(align) changes the required alignment of a struct. This; // alignment is _always_ obeyed, even in the presence of #pragma pack. A; // record inherits required alignment from all of its fields and bases.; // * __declspec(align) on bitfields has the effect of changing the bitfield's; // alignment instead of its required alignment. This is the only known way; // to make the alignment of a struct bigger than 8. Interestingly enough; // this alignment is also immune to the effects of #pragma pack and can be; // used to create structures with large alignment under #pragma pack.; // However, because it does not impact required alignment, such a structure,; // when used as a field or base, will not be aligned if #pragma pack is; // ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/RecordLayoutBuilder.cpp:3628,depend,depends,3628,interpreter/llvm-project/clang/lib/AST/RecordLayoutBuilder.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/RecordLayoutBuilder.cpp,1,['depend'],['depends']
Integrability,"ersion: 7.0; *; * Copyright (C) 1999-2007 Brian Paul All Rights Reserved.; *; * Permission is hereby granted, free of charge, to any person obtaining a; * copy of this software and associated documentation files (the ""Software""),; * to deal in the Software without restriction, including without limitation; * the rights to use, copy, modify, merge, publish, distribute, sublicense,; * and/or sell copies of the Software, and to permit persons to whom the; * Software is furnished to do so, subject to the following conditions:; *; * The above copyright notice and this permission notice shall be included; * in all copies or substantial portions of the Software.; *; * THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS; * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,; * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL; * BRIAN PAUL BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN; * AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN; * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.; */; /*; ** Copyright (c) 2007 The Khronos Group Inc.; ** ; ** Permission is hereby granted, free of charge, to any person obtaining a; ** copy of this software and/or associated documentation files (the; ** ""Materials""), to deal in the Materials without restriction, including; ** without limitation the rights to use, copy, modify, merge, publish,; ** distribute, sublicense, and/or sell copies of the Materials, and to; ** permit persons to whom the Materials are furnished to do so, subject to; ** the following conditions:; ** ; ** The above copyright notice and this permission notice shall be included; ** in all copies or substantial portions of the Materials.; ** ; ** THE MATERIALS ARE PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND,; ** EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF; ** MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/glew/inc/GL/eglew.h:2823,CONTRACT,CONTRACT,2823,builtins/glew/inc/GL/eglew.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/glew/inc/GL/eglew.h,3,['CONTRACT'],['CONTRACT']
Integrability,"ersity. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; //////////////////////////////////////////////////////////////////////////////; /** \class RooAbsPdf; \ingroup Roofitcore; \brief Abstract interface for all probability density functions. ## RooAbsPdf, the base class of all PDFs. RooAbsPdf is the base class for all probability density; functions (PDFs). The class provides hybrid analytical/numerical; normalization for its implementations, error tracing, and a Monte Carlo; generator interface. ### A Minimal PDF Implementation. A minimal implementation of a PDF class derived from RooAbsPdf; should override the `evaluate()` function. This function should; return the PDF's value (which does not need to be normalised). #### Normalization/Integration. Although the normalization of a PDF is an integral part of a; probability density function, normalization is treated separately; in RooAbsPdf. The reason is that a RooAbsPdf object is more than a; PDF: it can be a building block for a more complex composite PDF; if any of its variables are functions instead of variables. In; such cases, the normalization of the composite PDF may not simply be; integral over the dependents of the top-level PDF: these are; functions with potentially non-trivial Jacobian terms themselves.; \note Therefore, no explicit attempt should be made to normalize the; function output in evaluate(). In particular, normalisation constants; can be omitted to speed up the function evaluations, and included later; in the integration of the PDF (see below), which is rarely called in; comparison to the `evaluate()` function. In addition, RooAbsPdf objects do not have a static concept of what; variables are parameters, and what variables are dependents (wh",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx:1387,Integrat,Integration,1387,roofit/roofitcore/src/RooAbsPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx,1,['Integrat'],['Integration']
Integrability,"ersity. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; //////////////////////////////////////////////////////////////////////////////; /** \class RooRealSumPdf; \ingroup Roofitcore. Implements a PDF constructed from a sum of functions:; \f[; \mathrm{PDF}(x) = \frac{ \sum_{i=1}^{n-1} \mathrm{coef}_i * \mathrm{func}_i(x) + \left[ 1 - \sum_{i=1}^{n-1} \mathrm{coef}_i \right] * \mathrm{func}_n(x) }; {\sum_{i=1}^{n-1} \mathrm{coef}_i * \int \mathrm{func}_i(x)dx + \left[ 1 - \sum_{i=1}^{n-1} \mathrm{coef}_i \right] * \int \mathrm{func}_n(x) dx }; \f]. where \f$\mathrm{coef}_i\f$ and \f$\mathrm{func}_i\f$ are RooAbsReal objects, and \f$ x \f$ is the collection of dependents.; In the present version \f$\mathrm{coef}_i\f$ may not depend on \f$ x \f$, but this limitation could be removed should the need arise. If the number of coefficients is one less than the number of functions, the PDF is assumed to be normalised. Due to this additional constraint,; \f$\mathrm{coef}_n\f$ is computed from the other coefficients. ### Extending the PDF; If an \f$ n^\mathrm{th} \f$ coefficient is provided, the PDF **can** be used as an extended PDF, *i.e.* the total number of events will be measured in addition; to the fractions of the various functions. **This requires setting the last argument of the constructor to `true`.**; \note For the RooAddPdf, the extension happens automatically. ### Difference to RooAddPdf / RooRealSumFunc; - RooAddPdf is a PDF of PDFs, *i.e.* its components need to be normalised and non-negative.; - RooRealSumPdf is a PDF of functions, *i.e.*, its components can be negative, but their sum cannot be. The normalisation; is computed automatically, unless the PDF is extended (see above).; - RooRealSumFunc is a sum of f",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealSumPdf.cxx:1371,depend,depend,1371,roofit/roofitcore/src/RooRealSumPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealSumPdf.cxx,1,['depend'],['depend']
Integrability,"erver implementing the REST API of the Amazon S3 protocol. This; class is meant to be as generic as possible to be used with files; hosted not only by Amazon S3 servers but also by other providers; implementing the core of the S3 protocol. The S3 protocol works on top of HTTPS (and HTTP) and imposes that; each HTTP request be signed using a specific convention: the request; must include an 'Authorization' header which contains the signature; of a concatenation of selected request fields. For signing the; request, an 'Access Key Id' and a 'Secret Access Key' need to be; known. These keys are used by the S3 servers to identify the client; and to authenticate the request as genuine. As an end user, you must know the Access Key and Secret Access Key; in order to access each S3 file. They are provided to you by your S3; service provider. Those two keys can be provided to ROOT when; initializing an object of this class by two means:; a. by using the environmental variables S3_ACCESS_KEY and ; S3_SECRET_KEY, or; b. by specifying them when opening each file. You can use AWS temporary security credentials (temporary access key; and secret access key), but you must also give the associated; session token. The token may be set in the S3_SESSION_TOKEN; environmental variable, or on open in the TOKEN option. The first method is convenient if all the S3 files you want to; access are hosted by a single provider. The second one is more; flexible as it allows you to specify which credentials to use; on a per-file basis. See the documentation of the constructor of; this class for details on the syntax. For generating and signing the HTTP request, this class uses; TS3HTTPRequest. For more information on the details of S3 protocol please refer to:; ""Amazon Simple Storage Service Developer Guide"":; http://docs.amazonwebservices.com/AmazonS3/latest/dev/Welcome.html. ""Amazon Simple Storage Service REST API Reference""; http://docs.amazonwebservices.com/AmazonS3/latest/API/APIRest.html. **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TS3WebFile.cxx:2351,protocol,protocol,2351,net/net/src/TS3WebFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TS3WebFile.cxx,1,['protocol'],['protocol']
Integrability,"esent [This may be removed as a restriction in; the future] . You should perform the publishing to the viewer described below; in the Paint() method of the object you attach to the pad (via Draw()); ~~~ {.cpp}; TVirtualViewer3D * v = gPad->GetViewer3D(""xxxx"");; ~~~. "" xxxx"" is viewer type: OpenGL ""ogl"", X3D ""x3d"" or; Pad ""pad"" (default). The viewer is created via the plugin manager,; attached to pad, and the interface returned. ## Begin / End Scene. Objects must be added to viewer between BeginScene/EndScene calls e.g.; ~~~ {.cpp}; v->BeginScene();; .....; v->AddObject(....);; v->AddObject(....);; .....; v->EndScene();; ~~~. The BeginScene call will cause the viewer to suspend redraws etc, and after; the EndScene the viewer will reset the camera to frame the new scene and redraw.; [x3d viewer does not support changing of scenes - objects added after the; first Open/CloseScene pair will be ignored.]. ## Filling TBuffer3D and Adding to Viewer. The viewers behind the TVirtualViewer3D interface differ greatly in their; capabilities e.g. - Some know how to draw certain shapes natively (e.g. spheres/tubes in; OpenGL) - others always require a raw tessellation description of points/lines/segments.; - Some need the 3D object positions in the global frame, others can cope with; local frames + a translation matrix - which can give considerable performance; benefits. To cope with these situations the object buffer is filled out in negotiation; with the viewer. TBuffer3D classes are conceptually divided into enumerated; sections Core, BoundingBox, Raw etc (see TBuffer3D.h for more details).; \image html base_tbuffer3d.png. The SectionsValid() / SetSectionsValid / ClearSectionsValid() methods of TBuffer3D; are used to test/set/clear these section valid flags. The sections found in TBuffer3D (Core/BoundingBox/Raw Sizes/Raw); are sufficient to describe any tessellated shape in a generic fashion.; An additional ShapeSpecific section; in derived shape specific classes allows a more a",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualViewer3D.cxx:2715,interface,interface,2715,core/base/src/TVirtualViewer3D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualViewer3D.cxx,1,['interface'],['interface']
Integrability,"esignated; /// by the YVar() argument. The y value must have errors defined for the \f$ \chi^2 \f$ to; /// be well defined.; ///; /// <table>; /// <tr><th><th> Options to control construction of the chi-square; /// <tr><td> `YVar(RooRealVar& yvar)` <td> Designate given column in dataset as Y value; /// <tr><td> `Integrate(bool flag)` <td> Integrate function over range specified by X errors; /// rather than take value at bin center.; ///; /// <tr><th><th> Options to control flow of fit procedure; /// <tr><td> `InitialHesse(bool flag)` <td> Flag controls if HESSE before MIGRAD as well, off by default; /// <tr><td> `Hesse(bool flag)` <td> Flag controls if HESSE is run after MIGRAD, on by default; /// <tr><td> `Minos(bool flag)` <td> Flag controls if MINOS is run after HESSE, on by default; /// <tr><td> `Minos(const RooArgSet& set)` <td> Only run MINOS on given subset of arguments; /// <tr><td> `Save(bool flag)` <td> Flag controls if RooFitResult object is produced and returned, off by default; /// <tr><td> `Strategy(Int_t flag)` <td> Set Minuit strategy (0 through 2, default is 1); ///; /// <tr><th><th> Options to control informational output; /// <tr><td> `Verbose(bool flag)` <td> Flag controls if verbose output is printed (NLL, parameter changes during fit; /// <tr><td> `Timer(bool flag)` <td> Time CPU and wall clock consumption of fit steps, off by default; /// <tr><td> `PrintLevel(Int_t level)` <td> Set Minuit print level (-1 through 3, default is 1). At -1 all RooFit informational; /// messages are suppressed as well; /// <tr><td> `Warnings(bool flag)` <td> Enable or disable MINUIT warnings (enabled by default); /// <tr><td> `PrintEvalErrors(Int_t numErr)` <td> Control number of p.d.f evaluation errors printed per likelihood evaluation. A negative; /// value suppress output completely, a zero value will only print the error count per p.d.f component,; /// a positive value is will print details of each error up to numErr messages per p.d.f component.; /// </table>",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx:1774,message,messages,1774,roofit/roofitcore/src/RooAbsReal.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx,2,['message'],['messages']
Integrability,"example; // into:; //; // base = gep a, 0, x, y; // load base; // laod base + 1 * sizeof(float); // load base + 32 * sizeof(float); // load base + 33 * sizeof(float); //; // Given the transformed IR, a backend that supports the reg+immediate; // addressing mode can easily fold the pointer arithmetics into the loads. For; // example, the NVPTX backend can easily fold the pointer arithmetics into the; // ld.global.f32 instructions, and the resultant PTX uses much fewer registers.; //; // mov.u32 %r1, %tid.x;; // mov.u32 %r2, %tid.y;; // mul.wide.u32 %rl2, %r1, 128;; // mov.u64 %rl3, a;; // add.s64 %rl4, %rl3, %rl2;; // mul.wide.u32 %rl5, %r2, 4;; // add.s64 %rl6, %rl4, %rl5;; // ld.global.f32 %f1, [%rl6]; // so far the same as unoptimized PTX; // ld.global.f32 %f2, [%rl6+4]; // much better; // ld.global.f32 %f3, [%rl6+128]; // much better; // ld.global.f32 %f4, [%rl6+132]; // much better; //; // Another improvement enabled by the LowerGEP flag is to lower a GEP with; // multiple indices to either multiple GEPs with a single index or arithmetic; // operations (depending on whether the target uses alias analysis in codegen).; // Such transformation can have following benefits:; // (1) It can always extract constants in the indices of structure type.; // (2) After such Lowering, there are more optimization opportunities such as; // CSE, LICM and CGP.; //; // E.g. The following GEPs have multiple indices:; // BB1:; // %p = getelementptr [10 x %struct]* %ptr, i64 %i, i64 %j1, i32 3; // load %p; // ...; // BB2:; // %p2 = getelementptr [10 x %struct]* %ptr, i64 %i, i64 %j1, i32 2; // load %p2; // ...; //; // We can not do CSE to the common part related to index ""i64 %i"". Lowering; // GEPs can achieve such goals.; // If the target does not use alias analysis in codegen, this pass will; // lower a GEP with multiple indices into arithmetic operations:; // BB1:; // %1 = ptrtoint [10 x %struct]* %ptr to i64 ; CSE opportunity; // %2 = mul i64 %i, length_of_10xstruct ; CSE opportuni",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/SeparateConstOffsetFromGEP.cpp:3262,depend,depending,3262,interpreter/llvm-project/llvm/lib/Transforms/Scalar/SeparateConstOffsetFromGEP.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/SeparateConstOffsetFromGEP.cpp,1,['depend'],['depending']
Integrability,"f Abstract interface for all probability density functions. ## RooAbsPdf, the base class of all PDFs. RooAbsPdf is the base class for all probability density; functions (PDFs). The class provides hybrid analytical/numerical; normalization for its implementations, error tracing, and a Monte Carlo; generator interface. ### A Minimal PDF Implementation. A minimal implementation of a PDF class derived from RooAbsPdf; should override the `evaluate()` function. This function should; return the PDF's value (which does not need to be normalised). #### Normalization/Integration. Although the normalization of a PDF is an integral part of a; probability density function, normalization is treated separately; in RooAbsPdf. The reason is that a RooAbsPdf object is more than a; PDF: it can be a building block for a more complex composite PDF; if any of its variables are functions instead of variables. In; such cases, the normalization of the composite PDF may not simply be; integral over the dependents of the top-level PDF: these are; functions with potentially non-trivial Jacobian terms themselves.; \note Therefore, no explicit attempt should be made to normalize the; function output in evaluate(). In particular, normalisation constants; can be omitted to speed up the function evaluations, and included later; in the integration of the PDF (see below), which is rarely called in; comparison to the `evaluate()` function. In addition, RooAbsPdf objects do not have a static concept of what; variables are parameters, and what variables are dependents (which; need to be integrated over for a correct PDF normalization).; Instead, the choice of normalization is always specified each time a; normalized value is requested from the PDF via the getVal(); method. RooAbsPdf manages the entire normalization logic of each PDF with; the help of a RooRealIntegral object, which coordinates the integration; of a given choice of normalization. By default, RooRealIntegral will; perform an entirely nume",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx:1815,depend,dependents,1815,roofit/roofitcore/src/RooAbsPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx,1,['depend'],['dependents']
Integrability,"f this have to be merged; /// into one bin of the result.; ///; /// If the original histogram has errors stored (via Sumw2), the resulting; /// histograms has new errors correctly calculated.; ///; /// examples: if h1 is an existing TH1F histogram with 100 bins; ///; /// ~~~ {.cpp}; /// h1->Rebin(); //merges two bins in one in h1: previous contents of h1 are lost; /// h1->Rebin(5); //merges five bins in one in h1; /// TH1F *hnew = dynamic_cast<TH1F*>(h1->Rebin(5,""hnew"")); // creates a new histogram hnew; /// // merging 5 bins of h1 in one bin; /// ~~~; ///; /// NOTE: If ngroup is not an exact divider of the number of bins,; /// the top limit of the rebinned histogram is reduced; /// to the upper edge of the last bin that can make a complete; /// group. The remaining bins are added to the overflow bin.; /// Statistics will be recomputed from the new bin contents.; ///; /// #### case 2 xbins!=0; ///; /// A new histogram is created (you should specify newname).; /// The parameter ngroup is the number of variable size bins in the created histogram.; /// The array xbins must contain ngroup+1 elements that represent the low-edges; /// of the bins.; /// If the original histogram has errors stored (via Sumw2), the resulting; /// histograms has new errors correctly calculated.; ///; /// NOTE: The bin edges specified in xbins should correspond to bin edges; /// in the original histogram. If a bin edge in the new histogram is; /// in the middle of a bin in the original histogram, all entries in; /// the split bin in the original histogram will be transfered to the; /// lower of the two possible bins in the new histogram. This is; /// probably not what you want. A warning message is emitted in this; /// case; ///; /// examples: if h1 is an existing TH1F histogram with 100 bins; ///; /// ~~~ {.cpp}; /// Double_t xbins[25] = {...} array of low-edges (xbins[25] is the upper edge of last bin; /// h1->Rebin(24,""hnew"",xbins); //creates a new variable bin size histogram hnew; /// ~~~",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:2183,message,message,2183,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,1,['message'],['message']
Integrability,"f. If it is; /// evaluated for a particular value of x, the FFT and convolution is calculated; /// for all bins in the observable space for the given choice of parameters,; /// which are also stored in the cache. Subsequent evaluations for different values of the convolution observable and; /// identical parameters will be retrieved from the cache. If one or more; /// of the parameters change, the cache will be updated, *i.e.*, a new FFT runs.; ///; /// The sampling density of the FFT is controlled by the binning of the; /// the convolution observable, which can be changed using RooRealVar::setBins(N).; /// For good results, N should be large (>=1000). Additional interpolation; /// between the bins may improve the result if coarse binnings are chosen. These can be; /// activated in the constructor or by calling `setInterpolationOrder()`.; /// For N >> 1000, interpolation will not substantially improve the accuracy.; ///; /// Additionial information on caching can be displayed by monitoring; /// the message stream with topic ""Caching"" at the INFO level, *i.e.*; /// by calling `RooMsgService::instance().addStream(RooMsgService::INFO,Topic(""Caching""))`; /// to see these message on stdout.; ///; /// Multi-dimensional convolutions are not supported at the moment.; ///; /// ---; ///; /// Installing an external version of FFTW on Linux and compiling ROOT to use it; /// -------; ///; /// You have two options:; /// * **Recommended**: ROOT can automatically install FFTW for itself, see `builtin_fftw3` at https://root.cern/building-root; /// * Install FFTW and let ROOT discover it. `fftw3` is on by default (see https://root.cern/building-root); ///; /// 1) Go to www.fftw.org and download the latest stable version (a .tar.gz file); ///; /// If you have root access to your machine and want to make a system installation of FFTW; ///; /// 2) Untar fftw-XXX.tar.gz in /tmp, cd into the untarred directory; /// and type './configure' followed by 'make install'.; /// This will install ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFFTConvPdf.cxx:3952,message,message,3952,roofit/roofitcore/src/RooFFTConvPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFFTConvPdf.cxx,1,['message'],['message']
Integrability,"fields but can be in the middle of the non-virtual bases; // due to the two-pass layout scheme for non-virtual-bases.; // * Virtual bases sometimes require a 'vtordisp' field that is laid out before; // the virtual base and is used in conjunction with virtual overrides during; // construction and destruction. This is always a 4 byte value and is used as; // an alternative to constructor vtables.; // * vtordisps are allocated in a block of memory with size and alignment equal; // to the alignment of the completed structure (before applying __declspec(; // align())). The vtordisp always occur at the end of the allocation block,; // immediately prior to the virtual base.; // * vfptrs are injected after all bases and fields have been laid out. In; // order to guarantee proper alignment of all fields, the vfptr injection; // pushes all bases and fields back by the alignment imposed by those bases; // and fields. This can potentially add a significant amount of padding.; // vfptrs are always injected at offset 0.; // * vbptrs are injected after all bases and fields have been laid out. In; // order to guarantee proper alignment of all fields, the vfptr injection; // pushes all bases and fields back by the alignment imposed by those bases; // and fields. This can potentially add a significant amount of padding.; // vbptrs are injected immediately after the last non-virtual base as; // lexicographically ordered in the code. If this site isn't pointer aligned; // the vbptr is placed at the next properly aligned location. Enough padding; // is added to guarantee a fit.; // * The last zero sized non-virtual base can be placed at the end of the; // struct (potentially aliasing another object), or may alias with the first; // field, even if they are of the same type.; // * The last zero size virtual base may be placed at the end of the struct; // potentially aliasing another object.; // * The ABI attempts to avoid aliasing of zero sized bases by adding padding; // between bases o",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/RecordLayoutBuilder.cpp:2059,inject,injected,2059,interpreter/llvm-project/clang/lib/AST/RecordLayoutBuilder.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/RecordLayoutBuilder.cpp,1,['inject'],['injected']
Integrability,"follows:; *; * Copyright (c) 1992, 1993, 1994 Henry Spencer.; * Copyright (c) 1992, 1993, 1994; *	The Regents of the University of California. All rights reserved.; *; * This code is derived from software contributed to Berkeley by; * Henry Spencer.; *; * Redistribution and use in source and binary forms, with or without; * modification, are permitted provided that the following conditions; * are met:; * 1. Redistributions of source code must retain the above copyright; * notice, this list of conditions and the following disclaimer.; * 2. Redistributions in binary form must reproduce the above copyright; * notice, this list of conditions and the following disclaimer in the; * documentation and/or other materials provided with the distribution.; * 3. Neither the name of the University nor the names of its contributors; * may be used to endorse or promote products derived from this software; * without specific prior written permission.; *; * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND; * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE; * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE; * ARE DISCLAIMED. IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE; * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL; * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS; * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION); * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT; * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY; * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF; * SUCH DAMAGE.; *; *	@(#)regexec.c	8.3 (Berkeley) 3/20/94; */; /*; * the outer shell of llvm_regexec(); *; * This file includes engine.inc *twice*, after muchos fiddling with the; * macros that code uses. This lets the same code operate on two different; * representations for state sets.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/regexec.c:1611,CONTRACT,CONTRACT,1611,interpreter/llvm-project/llvm/lib/Support/regexec.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/regexec.c,1,['CONTRACT'],['CONTRACT']
Integrability,"ford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooNumConvolution.cxx; \class RooNumConvolution; \ingroup Roofitcore. Numeric 1-dimensional convolution operator PDF. This class can convolve any PDF; with any other PDF; This class should not be used blindly as numeric convolution is computing; intensive and prone to stability fitting problems. If an analytic convolution; can be calculated, you should use that or implement it if not available.; RooNumConvolution implements reasonable defaults that should convolve most; functions reasonably well, but results strongly depend on the shape of your; input PDFS so always check your result. The default integration engine for the numeric convolution is the; adaptive Gauss-Kronrod method, which empirically seems the most robust; for this task. You can override the convolution integration settings via; the RooNumIntConfig object reference returned by the convIntConfig() member; function; By default the numeric convolution is integrated from -infinity to; +infinity through a <pre>x -> 1/x</pre> coordinate transformation of the; tails. For convolution with a very small bandwidth it may be; advantageous (for both CPU consumption and stability) if the; integration domain is limited to a finite range. The function; setConvolutionWindow(mean,width,scale) allows to set a sliding; window around the x value to be calculated taking a RooAbsReal; expression for an offset and a width to be taken around the x; value. These input expression can be RooFormulaVars or other; function objects although the 3d 'scale' argument 'scale'; multiplies the width RooAbsReal expression given in the 2nd; argument, allowing for an appropriate window definition for most; cases wi",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumConvolution.cxx:1310,integrat,integration,1310,roofit/roofitcore/src/RooNumConvolution.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumConvolution.cxx,1,['integrat'],['integration']
Integrability,"formable partial iMCUs to be dropped;; * this is not strictly lossless, but it usually gives the best-looking; * result for odd-size images. Note that when this option is active,; * the expected mathematical equivalences between the transforms may not hold.; * (For example, -rot 270 -trim trims only the bottom edge, but -rot 90 -trim; * followed by -rot 180 -trim trims both edges.); *; * We also offer a lossless-crop option, which discards data outside a given; * image region but losslessly preserves what is inside. Like the rotate and; * flip transforms, lossless crop is restricted by the JPEG format: the upper; * left corner of the selected region must fall on an iMCU boundary. If this; * does not hold for the given crop parameters, we silently move the upper left; * corner up and/or left to make it so, simultaneously increasing the region; * dimensions to keep the lower right crop corner unchanged. (Thus, the; * output image covers at least the requested region, but may cover more.); *; * We also provide a lossless-resize option, which is kind of a lossless-crop; * operation in the DCT coefficient block domain - it discards higher-order; * coefficients and losslessly preserves lower-order coefficients of a; * sub-block.; *; * Rotate/flip transform, resize, and crop can be requested together in a; * single invocation. The crop is applied last --- that is, the crop region; * is specified in terms of the destination image after transform/resize.; *; * We also offer a ""force to grayscale"" option, which simply discards the; * chrominance channels of a YCbCr image. This is lossless in the sense that; * the luminance channel is preserved exactly. It's not the same kind of; * thing as the rotate/flip transformations, but it's convenient to handle it; * as part of this package, mainly because the transformation routines have to; * be aware of the option to know how many components to work on.; */; /* Short forms of external names for systems with brain-damaged linkers. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/transupp.h:3101,rout,routines,3101,graf2d/asimage/src/libAfterImage/libjpeg/transupp.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/transupp.h,1,['rout'],['routines']
Integrability,"function via TH1::Fit.; See TH1::Fit(TF1*, Option_t *, Option_t *, Double_t, Double_t) for the fitting documentation and the possible [fitting options](\ref HFitOpt). The FitPanel can also be used for fitting an histogram. See the [FitPanel documentation](https://root.cern/manual/fitting/#using-the-fit-panel). \anchor saving-histograms; ## Saving/reading histograms to/from a ROOT file. The following statements create a ROOT file and store a histogram; on the file. Because TH1 derives from TNamed, the key identifier on; the file is the histogram name:; ~~~ {.cpp}; TFile f(""histos.root"", ""new"");; TH1F h1(""hgaus"", ""histo from a gaussian"", 100, -3, 3);; h1.FillRandom(""gaus"", 10000);; h1->Write();; ~~~; To read this histogram in another Root session, do:; ~~~ {.cpp}; TFile f(""histos.root"");; TH1F *h = (TH1F*)f.Get(""hgaus"");; ~~~; One can save all histograms in memory to the file by:; ~~~ {.cpp}; file->Write();; ~~~. \anchor misc; ## Miscellaneous operations. ~~~ {.cpp}; TH1::KolmogorovTest(): statistical test of compatibility in shape; between two histograms; TH1::Smooth() smooths the bin contents of a 1-d histogram; TH1::Integral() returns the integral of bin contents in a given bin range; TH1::GetMean(int axis) returns the mean value along axis; TH1::GetStdDev(int axis) returns the sigma distribution along axis; TH1::GetEntries() returns the number of entries; TH1::Reset() resets the bin contents and errors of a histogram; ~~~; IMPORTANT NOTE: The returned values for GetMean and GetStdDev depend on how the; histogram statistics are calculated. By default, if no range has been set, the; returned values are the (unbinned) ones calculated at fill time. If a range has been; set, however, the values are calculated using the bins in range; THIS IS TRUE EVEN; IF THE RANGE INCLUDES ALL BINS--use TAxis::SetRange(0, 0) to unset the range.; To ensure that the returned values are always those of the binned data stored in the; histogram, call TH1::ResetStats. See TH1::GetStats.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:20892,depend,depend,20892,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,1,['depend'],['depend']
Integrability,"function,; * in C++) can override a virtual method in a base class. For; * Objective-C, a method is said to override any method in the class's; * base class, its protocols, or its categories' protocols, that has the same; * selector and is of the same kind (class or instance).; * If no such method exists, the search continues to the class's superclass,; * its protocols, and its categories, and so on. A method from an Objective-C; * implementation is considered to override the same methods as its; * corresponding method in the interface.; *; * For C++, a virtual member function overrides any virtual member; * function with the same signature that occurs in its base; * classes. With multiple inheritance, a virtual member function can; * override several virtual member functions coming from different; * base classes.; *; * In all cases, this function determines the immediate overridden; * method, rather than all of the overridden methods. For example, if; * a method is originally declared in a class A, then overridden in B; * (which in inherits from A) and also in C (which inherited from B),; * then the only overridden method returned from this function when; * invoked on C's method will be B's method. The client may then; * invoke this function again, given the previously-found overridden; * methods, to map out the complete method-override set.; *; * \param cursor A cursor representing an Objective-C or C++; * method. This routine will compute the set of methods that this; * method overrides.; *; * \param overridden A pointer whose pointee will be replaced with a; * pointer to an array of cursors, representing the set of overridden; * methods. If there are no overridden methods, the pointee will be; * set to NULL. The pointee must be freed via a call to; * \c clang_disposeOverriddenCursors().; *; * \param num_overridden A pointer to the number of overridden; * functions, will be set to the number of overridden functions in the; * array pointed to by \p overridden.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h:1589,rout,routine,1589,interpreter/llvm-project/clang/include/clang-c/Index.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h,1,['rout'],['routine']
Integrability,"generic lambdas, if a variable is named in a potentially evaluated; /// expression, where the enclosing full expression is dependent then we; /// must capture the variable (given a default capture).; /// This is accomplished by recording all references to variables; /// (DeclRefExprs or MemberExprs) within said nested lambda in its array of; /// PotentialCaptures. All such variables have to be captured by that lambda,; /// except for as described below.; /// If that variable is usable as a constant expression and is named in a; /// manner that does not involve its odr-use (e.g. undergoes; /// lvalue-to-rvalue conversion, or discarded) record that it is so. Upon the; /// act of analyzing the enclosing full expression (ActOnFinishFullExpr); /// if we can determine that the full expression is not instantiation-; /// dependent, then we can entirely avoid its capture.; ///; /// const int n = 0;; /// [&] (auto x) {; /// (void)+n + x;; /// };; /// Interestingly, this strategy would involve a capture of n, even though; /// it's obviously not odr-used here, because the full-expression is; /// instantiation-dependent. It could be useful to avoid capturing such; /// variables, even when they are referred to in an instantiation-dependent; /// expression, if we can unambiguously determine that they shall never be; /// odr-used. This would involve removal of the variable-referring-expression; /// from the array of PotentialCaptures during the lvalue-to-rvalue; /// conversions. But per the working draft N3797, (post-chicago 2013) we must; /// capture such variables.; /// Before anyone is tempted to implement a strategy for not-capturing 'n',; /// consider the insightful warning in:; /// /cfe-commits/Week-of-Mon-20131104/092596.html; /// ""The problem is that the set of captures for a lambda is part of the ABI; /// (since lambda layout can be made visible through inline functions and the; /// like), and there are no guarantees as to which cases we'll manage to build; /// an lvalue-t",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Sema/ScopeInfo.h:1191,depend,dependent,1191,interpreter/llvm-project/clang/include/clang/Sema/ScopeInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Sema/ScopeInfo.h,1,['depend'],['dependent']
Integrability,"gether, this means we need to adjust the; /// type of boolean operations to be regbank legal. All SALU booleans need to be; /// widened to 32-bits, and all VALU booleans need to be s1 values.; ///; /// A noteworthy exception to the s1-means-vcc rule is for legalization artifact; /// casts. G_TRUNC s1 results, and G_SEXT/G_ZEXT/G_ANYEXT sources are never vcc; /// bank. A non-boolean source (such as a truncate from a 1-bit load from; /// memory) will require a copy to the VCC bank which will require clearing the; /// high bits and inserting a compare.; ///; /// \par Constant bus restriction; ///; /// VALU instructions have a limitation known as the constant bus; /// restriction. Most VALU instructions can use SGPR operands, but may read at; /// most 1 SGPR or constant literal value (this to 2 in gfx10 for most; /// instructions). This is one unique SGPR, so the same SGPR may be used for; /// multiple operands. From a register bank perspective, any combination of; /// operands should be legal as an SGPR, but this is contextually dependent on; /// the SGPR operands all being the same register. There is therefore optimal to; /// choose the SGPR with the most uses to minimize the number of copies.; ///; /// We avoid trying to solve this problem in RegBankSelect. Any VALU G_*; /// operation should have its source operands all mapped to VGPRs (except for; /// VCC), inserting copies from any SGPR operands. This the most trivial legal; /// mapping. Anything beyond the simplest 1:1 instruction selection would be too; /// complicated to solve here. Every optimization pattern or instruction; /// selected to multiple outputs would have to enforce this rule, and there; /// would be additional complexity in tracking this rule for every G_*; /// operation. By forcing all inputs to VGPRs, it also simplifies the task of; /// picking the optimal operand combination from a post-isel optimization pass.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPURegisterBankInfo.cpp:3121,depend,dependent,3121,interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPURegisterBankInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPURegisterBankInfo.cpp,1,['depend'],['dependent']
Integrability,"ght (c) 2015-2023 yWorks GmbH; * Copyright (c) 2013-2015 by Vitaly Puzrin; *; *; * Permission is hereby granted, free of charge, to any person obtaining a copy; * of this software and associated documentation files (the ""Software""), to deal; * in the Software without restriction, including without limitation the rights; * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell; * copies of the Software, and to permit persons to whom the Software is; * furnished to do so, subject to the following conditions:; *; * The above copyright notice and this permission notice shall be included in all; * copies or substantial portions of the Software.; *; * THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR; * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,; * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE; * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER; * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,; * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE; * SOFTWARE.; */; /******************************************************************************; Copyright (c) Microsoft Corporation. Permission to use, copy, modify, and/or distribute this software for any; purpose with or without fee is hereby granted. THE SOFTWARE IS PROVIDED ""AS IS"" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH; REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY; AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,; INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM; LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR; OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR; PERFORMANCE OF THIS SOFTWARE.; ***************************************************************************** */; /* global Reflect, Promise */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:1056,CONTRACT,CONTRACT,1056,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['CONTRACT'],['CONTRACT']
Integrability,"gram is filled).; The x, y and z variables determine the bin which is filled. For lower dimensions, the z- or even the y-value may be omitted. Begin_Macro(source); {; //canvas only needed for this documentation; TCanvas* c1 = new TCanvas(""example"","""",600,400);; c1->SetFillStyle(1001);; c1->SetFillColor(kWhite);. //create one-dimensional TEfficiency object with fixed bin size; TEfficiency* pEff = new TEfficiency(""eff"",""my efficiency;x;#epsilon"",20,0,10);; TRandom3 rand3;. bool bPassed;; double x;; for(int i=0; i<10000; ++i); {; //simulate events with variable under investigation; x = rand3.Uniform(10);; //check selection: bPassed = DoesEventPassSelection(x); bPassed = rand3.Rndm() < TMath::Gaus(x,5,4);; pEff->Fill(bPassed,x);; }. pEff->Draw(""AP"");; }; End_Macro. You can also set the number of passed or total events for a bin directly by; using the TEfficiency::SetPassedEvents or TEfficiency::SetTotalEvents method. \anchor EFF04; ## IV. Statistic options; The calculation of the estimated efficiency depends on the chosen statistic; option. Let k denotes the number of passed events and N the number of total; events. \anchor EFF04a; ### Frequentist methods; The expectation value of the number of passed events is given by the true; efficiency times the total number of events. One can estimate the efficiency; by replacing the expected number of passed events by the observed number of; passed events. \f[; k = \epsilon \times N \Rightarrow \hat{\varepsilon} = \frac{k}{N}; \f]. \anchor EFF04b; ### Bayesian methods; In Bayesian statistics a likelihood-function (how probable is it to get the; observed data assuming a true efficiency) and a prior probability (what is the; probability that a certain true efficiency is actually realised) are used to; determine a posterior probability by using Bayes theorem. At the moment, only; beta distributions (have 2 free parameters) are supported as prior; probabilities. \f{eqnarray*}{; P(\epsilon | k ; N) &=& \frac{1}{norm} \times P(k | \eps",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TEfficiency.cxx:6670,depend,depends,6670,hist/hist/src/TEfficiency.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TEfficiency.cxx,1,['depend'],['depends']
Integrability,"gruence class has a leader, and the leader is used to symbolize; // instructions in a canonical way (IE every operand of an instruction that is a; // member of the same congruence class will always be replaced with leader; // during symbolization). To simplify symbolization, we keep the leader as a; // constant if class can be proved to be a constant value. Otherwise, the; // leader is the member of the value set with the smallest DFS number. Each; // congruence class also has a defining expression, though the expression may be; // null. If it exists, it can be used for forward propagation and reassociation; // of values.; // For memory, we also track a representative MemoryAccess, and a set of memory; // members for MemoryPhis (which have no real instructions). Note that for; // memory, it seems tempting to try to split the memory members into a; // MemoryCongruenceClass or something. Unfortunately, this does not work; // easily. The value numbering of a given memory expression depends on the; // leader of the memory congruence class, and the leader of memory congruence; // class depends on the value numbering of a given memory expression. This; // leads to wasted propagation, and in some cases, missed optimization. For; // example: If we had value numbered two stores together before, but now do not,; // we move them to a new value congruence class. This in turn will move at one; // of the memorydefs to a new memory congruence class. Which in turn, affects; // the value numbering of the stores we just value numbered (because the memory; // congruence class is part of the value number). So while theoretically; // possible to split them up, it turns out to be *incredibly* complicated to get; // it to work right, because of the interdependency. While structurally; // slightly messier, it is algorithmically much simpler and faster to do what we; // do here, and track them both at once in the same class.; // Note: The default iterators for this class iterate over values",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/NewGVN.cpp:1476,depend,depends,1476,interpreter/llvm-project/llvm/lib/Transforms/Scalar/NewGVN.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/NewGVN.cpp,2,['depend'],['depends']
Integrability,"h histogram.; /// When TH1::Fit is invoked, the fitted function is added to the histogram list of functions (fFunctions).; /// If the histogram is made persistent, the list of associated functions is also persistent.; /// Given a histogram h, one can retrieve an associated function with:; ///; /// ~~~ {.cpp}; /// TF1 *myfunc = h->GetFunction(""myfunc"");; /// ~~~; /// or by quering directly the list obtained by calling `TH1::GetListOfFunctions`.; ///; /// \anchor HFitStatus; /// ### Fit status; ///; /// The status of the fit is obtained converting the TFitResultPtr to an integer; /// independently if the fit option ""S"" is used or not:; ///; /// ~~~ {.cpp}; /// TFitResultPtr r = h->Fit(myFunc,opt);; /// Int_t fitStatus = r;; /// ~~~; ///; /// - `status = 0` : the fit has been performed successfully (i.e no error occurred).; /// - `status < 0` : there is an error not connected with the minimization procedure, for example when a wrong function is used.; /// - `status > 0` : return status from Minimizer, depends on used Minimizer. For example for TMinuit and Minuit2 we have:; /// - `status = migradStatus + 10*minosStatus + 100*hesseStatus + 1000*improveStatus`.; /// TMinuit returns 0 (for migrad, minos, hesse or improve) in case of success and 4 in case of error (see the documentation of TMinuit::mnexcm). For example, for an error; /// only in Minos but not in Migrad a fitStatus of 40 will be returned.; /// Minuit2 returns 0 in case of success and different values in migrad,minos or; /// hesse depending on the error. See in this case the documentation of; /// Minuit2Minimizer::Minimize for the migrad return status, Minuit2Minimizer::GetMinosError for the; /// minos return status and Minuit2Minimizer::Hesse for the hesse return status.; /// If other minimizers are used see their specific documentation for the status code returned.; /// For example in the case of Fumili, see TFumili::Minimize.; ///; /// \anchor HFitRange; /// ### Fitting in a range; ///; /// In order to fit ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:12416,depend,depends,12416,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,1,['depend'],['depends']
Integrability,"h2->Draw(""SAME"");. // do not:; auto h1 = df1.Histo1D(""x"");; h1->Draw(); // we just-in-time compile here; auto h2 = df2.Histo1D(""y"");; h2->Draw(""SAME""); // we just-in-time compile again here, as the second Histo1D call is new; ~~~. \anchor more-features; ## More features; Here is a list of the most important features that have been omitted in the ""Crash course"" for brevity.; You don't need to read all these to start using RDataFrame, but they are useful to save typing time and runtime. \anchor systematics; ### Systematic variations. Starting from ROOT v6.26, RDataFrame provides a flexible syntax to define systematic variations.; This is done in two steps: a) register variations for one or more existing columns using Vary() and b) extract variations; of normal RDataFrame results using \ref ROOT::RDF::Experimental::VariationsFor ""VariationsFor()"". In between these steps, no other change; to the analysis code is required: the presence of systematic variations for certain columns is automatically propagated; through filters, defines and actions, and RDataFrame will take these dependencies into account when producing varied; results. \ref ROOT::RDF::Experimental::VariationsFor ""VariationsFor()"" is included in header `ROOT/RDFHelpers.hxx`. The compiled C++ programs must include this header; explicitly, this is not required for ROOT macros. . An example usage of Vary() and \ref ROOT::RDF::Experimental::VariationsFor ""VariationsFor()"" in C++:. ~~~{.cpp}; auto nominal_hx =; df.Vary(""pt"", ""ROOT::RVecD{pt*0.9f, pt*1.1f}"", {""down"", ""up""}); .Filter(""pt > pt_cut""); .Define(""x"", someFunc, {""pt""}); .Histo1D<float>(""x"");. // request the generation of varied results from the nominal_hx; ROOT::RDF::Experimental::RResultMap<TH1D> hx = ROOT::RDF::Experimental::VariationsFor(nominal_hx);. // the event loop runs here, upon first access to any of the results or varied results:; hx[""nominal""].Draw(); // same effect as nominal_hx->Draw(); hx[""pt:down""].Draw(""SAME"");; hx[""pt:up""].Draw(""SAME"");;",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx:55488,depend,dependencies,55488,tree/dataframe/src/RDataFrame.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx,1,['depend'],['dependencies']
Integrability,"hank you. History:; vers date who what; ---- --------- -------------- ------------------------------------; a ~~ Feb 92 M. Adler used full (large, one-step) lookup table; b1 21 Mar 92 M. Adler first version with partial lookup tables; b2 21 Mar 92 M. Adler fixed bug in fixed-code blocks; b3 22 Mar 92 M. Adler sped up match copies, cleaned up some; b4 25 Mar 92 M. Adler added prototypes; removed window[] (now; is the responsibility of unzip.h--also; changed name to slide[]), so needs diffs; for unzip.c and unzip.h (this allows; compiling in the small model on MSDOS);; fixed cast of q in huft_build();; b5 26 Mar 92 M. Adler got rid of unintended macro recursion.; b6 27 Mar 92 M. Adler got rid of nextbyte() routine. fixed; bug in inflate_fixed().; c1 30 Mar 92 M. Adler removed lbits, dbits environment variables.; changed BMAX to 16 for explode. Removed; OUTB usage, and replaced it with flush()--; this was a 20% speed improvement! Added; an explode.c (to replace unimplod.c) that; uses the huft routines here. Removed; register union.; c2 4 Apr 92 M. Adler fixed bug for file sizes a multiple of 32k.; c3 10 Apr 92 M. Adler reduced memory of code tables made by; huft_build significantly (factor of two to; three).; c4 15 Apr 92 M. Adler added NOMEMCPY do kill use of memcpy().; worked around a Turbo C optimization bug.; c5 21 Apr 92 M. Adler added the WSIZE #define to allow reducing; the 32K window size for specialized; applications.; c6 31 May 92 M. Adler added some typecasts to eliminate warnings; c7 27 Jun 92 G. Roelofs added some more typecasts (444: MSC bug).; c8 5 Oct 92 J-l. Gailly added ifdef'd code to deal with PKZIP bug.; c9 9 Oct 92 M. Adler removed a memory error message (~line 416).; c10 17 Oct 92 G. Roelofs changed ULONG/UWORD/byte to ulg/ush/uch,; removed old inflate, renamed inflate_entry; to inflate, added Mark's fix to a comment.; c10.5 14 Dec 92 M. Adler fix up error messages for incomplete trees.; c11 2 Jan 93 M. Adler fixed bug in detection of incomplete; ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/zip/src/ZInflate.c:1286,rout,routines,1286,core/zip/src/ZInflate.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/zip/src/ZInflate.c,1,['rout'],['routines']
Integrability,"he ZeroMQ ""SUB"" socket,; * update_state() is called to put the received data into the right places,; * thus updating for instance parameter values on the worker that were updated; * since the last call on the master side.; *; * ## Message protocol; *; * One simple rule must be upheld for the messages that the implementer will; * send with 'send_back_task_result_from_worker' and 'update_state': the first; * part of the message must always be the 'Job''s ID, stored in 'Job::id'.; * The rest of the message, i.e. the actual data to be sent, is completely up; * to the implementation. Note that on the receiving end, i.e. in the; * implementation of 'receive_task_result_on_master', one will get the whole; * message, but the 'Job' ID part will already have been identified in the; * 'JobManager', so one needn't worry about it further inside; * 'Job::receive_task_result_on_master' (it is already routed to the correct; * 'Job'). The same goes for the receiving end of 'update_state', except that; * update_state is routed from the 'worker_loop', not the 'JobManager'.; *; * A second rule applies to 'update_state' messages: the second part must be; * a state identifier. This identifier will also be sent along with tasks to; * the queue. When a worker then takes a task from the queue, it can check; * whether it has already updated its state to what is expected to be there; * for the task at hand. If not, it should wait for the new state to arrive; * over the state subscription socket. Note: it is the implementer's task to; * actually update 'Job::state_id_' inside 'Job::update_state()'!; *; * ## Implementers notes; *; * The type of result from each task is strongly dependent on the Job at hand; * and so Job does not provide a default results member. It is up to the; * inheriting class to implement this in the above functions. We would have; * liked a template parameter task_result_t, so that we could also provide a; * default ""boilerplate"" calculate function to show a typical Job us",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Job.cxx:1873,rout,routed,1873,roofit/multiprocess/src/Job.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Job.cxx,1,['rout'],['routed']
Integrability,"he code to The Lean Mean C++ Option Parser.; * The ""Software"" does NOT refer to any other files which you; * may have received alongside this file (e.g. as part of a larger project that; * incorporates The Lean Mean C++ Option Parser).; *; * Permission is hereby granted, free of charge, to any person obtaining a copy; * of this software, to deal in the Software without restriction, including; * without limitation the rights to use, copy, modify, merge, publish,; * distribute, sublicense, and/or sell copies of the Software, and to permit; * persons to whom the Software is furnished to do so, subject to the following; * conditions:; * The above copyright notice and this permission notice shall be included in; * all copies or substantial portions of the Software.; *; * THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR; * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,; * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE; * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER; * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,; * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE; * SOFTWARE.; */; /*; * NOTE: It is recommended that you read the processed HTML doxygen documentation; * rather than this source. If you don't know doxygen, it's like javadoc for C++.; * If you don't want to install doxygen you can find a copy of the processed; * documentation at; *; * http://optionparser.sourceforge.net/; *; */; /*; Danio Piparo - Since we import this parser from tan external source, we keep; track of the changes:. New Features 6-7-12:; o Added FullArg class from the examples in the header. Bugs Fixed 8-7-12:; o Cov: Add initialisation of screenlen variable in LinePartIterator; o Cov: LineWrapper databuf, lenbuf and wrote_something are now initialised; o Cov: Option::operator= now returns Option& (return *this;) and not void; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h:1289,CONTRACT,CONTRACT,1289,core/dictgen/res/OptionParser.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h,1,['CONTRACT'],['CONTRACT']
Integrability,"he current context isn't native for either of the instructions, then; /// the higher-priority context wins (that is, the one that is more specific).; /// That hierarchy is determined by outranks() (X86DisassemblerTables.cpp); /// - If the current context is native for both instructions, then the table; /// emitter reports a conflict and dies.; ///; /// *** RESOLUTION FOR ""Primary decode conflict""S; ///; /// If two instructions collide, typically the solution is (in order of; /// likelihood):; ///; /// (1) to filter out one of the instructions by editing filter(); /// (X86RecognizableInstr.cpp). This is the most common resolution, but; /// check the Intel manuals first to make sure that (2) and (3) are not the; /// problem.; /// (2) to fix the tables (X86.td and its subsidiaries) so the opcodes are; /// accurate. Sometimes they are not.; /// (3) to fix the tables to reflect the actual context (for example, required; /// prefixes), and possibly to add a new context by editing; /// include/llvm/Support/X86DisassemblerDecoderCommon.h. This is unlikely; /// to be the cause.; ///; /// DisassemblerEmitter.cpp contains the implementation for the emitter,; /// which simply pulls out instructions from the CodeGenTarget and pushes them; /// into X86DisassemblerTables.; /// X86DisassemblerTables.h contains the interface for the instruction tables,; /// which manage and emit the structures discussed above.; /// X86DisassemblerTables.cpp contains the implementation for the instruction; /// tables.; /// X86ModRMFilters.h contains filters that can be used to determine which; /// ModR/M values are valid for a particular instruction. These are used to; /// populate ModRMDecisions.; /// X86RecognizableInstr.h contains the interface for a single instruction,; /// which knows how to translate itself from a CodeGenInstruction and provide; /// the information necessary for integration into the tables.; /// X86RecognizableInstr.cpp contains the implementation for a single; /// instruction.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/DisassemblerEmitter.cpp:3477,interface,interface,3477,interpreter/llvm-project/llvm/utils/TableGen/DisassemblerEmitter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/DisassemblerEmitter.cpp,3,"['integrat', 'interface']","['integration', 'interface']"
Integrability,"he histogram `TH1::Divide` method, yields symmetric errors |; | diff | subtracts the histograms |; | diffsig | subtracts the histograms and divides by the uncertainty |. Begin_Macro(source); ../../../tutorials/hist/ratioplot1.C; End_Macro. ## Fit residuals; A second constructor only accepts a single histogram, but expects it to have a fitted; function. The function is used to calculate the residual between the fit and the; histogram. Here, it is expected that h1 has a fit function in it's list of functions. The class calculates the; difference between the histogram and the fit function at each point and divides it by the uncertainty. There; are a few option to steer which error is used (as is the case for `diffsig`). The default is to use; the statistical uncertainty from h1 using `TH1::GetBinError`. If the `option` string contains `errasym`, asymmetric; errors will be used. The type of error can be steered by `TH1::SetBinErrorOption`. The corresponding error will be used,; depending on if the function is below or above the bin content. The third option `errfunc` uses the square root of; the function value as the error. Begin_Macro(source); ../../../tutorials/hist/ratioplot2.C; End_Macro. ## Error options for difference divided by uncertainty and fit residual; The uncertainty that is used in the calculation can be steered by providing; options to the `option` argument. | Option | Description |; | ---------- | ------------------------------------------------------------ |; | errasym | Uses calculated asymmetric errors from `TH1::GetBinErrorUp`/`TH1::GetBinErrorLow`. Note that you need to set `TH1::SetBinErrorOption` first |; | errfunc | Uses \f$ \sqrt{f(x)} \f$ as the error |. The asymmetric error case uses the upper or lower error depending on the relative size; of the bin contents, or the bin content and the function value. ## Access to internal parts; You can access the internal objects that are used to construct the plot via a series of; methods. `TRatioPlot::GetU",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TRatioPlot.cxx:2439,depend,depending,2439,graf2d/gpad/src/TRatioPlot.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TRatioPlot.cxx,1,['depend'],['depending']
Integrability,"he interface to perform the minimization including. In addition to provide the API for function minimization (via ROOT::Math::Minimizer::Minimize) the Minimizer class provides:; - the interface for setting the function to be minimized. The objective function passed to the Minimizer must implement the multi-dimensional generic interface; ROOT::Math::IBaseFunctionMultiDim. If the function provides gradient calculation (e.g. implementing the ROOT::Math::IGradientFunctionMultiDim interface); the gradient will be used by the Minimizer class, when needed. There are convenient classes for the users to wrap their own functions in this required interface for minimization.; These are the `ROOT::Math::Functor` class and the `ROOT::Math::GradFunctor` class for wrapping functions providing both evaluation and gradient. Some methods, like Fumili, Fumili2 and GSLMultiFit are; specialized method for least-square and also likelihood minimizations. They require then that the given function implements in addition; the `ROOT::Math::FitMethodFunction` interface.; - The interface for setting the initial values for the function variables (which are the parameters in; of the model function in case of solving for fitting) and specifying their limits.; - The interface to set and retrieve basic minimization parameters. These parameter are controlled by the class `ROOT::Math::MinimizerOptions`.; When no parameters are specified the default ones are used. Specific Minimizer options can also be passed via the `MinimizerOptions` class.; For the list of the available option parameter one must look at the documentation of the corresponding derived class.; - The interface to retrieve the result of minimization ( minimum X values, function value, gradient, error on the minimum, etc...); - The interface to perform a Scan, Hesse or a Contour plot (for the minimizers that support this, i.e. Minuit and Minuit2). An example on how to use this interface is the tutorial NumericalMinimization.C in the tutoria",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Minimizer.h:3072,interface,interface,3072,math/mathcore/inc/Math/Minimizer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Minimizer.h,1,['interface'],['interface']
Integrability,"hen construct the; overall efficiency with its uncertainty. This procedure has the advantage that you can change the weight of one; subsample easily without rerunning the whole analysis. On the other hand, more; effort is needed to handle several TEfficiency objects instead of one; histogram. In the case of many different or even continuously distributed; weights, this approach becomes cumbersome. One possibility to overcome this; problem is the usage of binned weights. \anchor EFF05a; ### Example; In particle physics weights arises from the fact that you want to; normalise your results to a certain reference value. A very common formula for; calculating weights is. \f{eqnarray*}{; w &=& \frac{\sigma L}{N_{gen} \epsilon_{trig}} \\; &-& \sigma ...\ cross\ section \\; &-& L ...\ luminosity \\; &-& N_{gen}\ ... number\ of\ generated\ events \\; &-& \epsilon_{trig}\ ...\ (known)\ trigger\ efficiency \\; \f}. The reason for different weights can therefore be:; - different processes; - other integrated luminosity; - varying trigger efficiency; - different sample sizes; - ...; - or even combination of them. Depending on the actual meaning of different weights in your case, you; should either merge or combine them to get the overall efficiency. \anchor EFF051; ### V.1 When should I use merging?; If the weights are artificial and do not represent real alternative hypotheses,; you should merge the different TEfficiency objects. That means especially for; the Bayesian case that the prior probability should be the same for all merged; TEfficiency objects. The merging can be done by invoking one of the following; operations:; - eff1.Add(eff2); - eff1 += eff2; - eff1 = eff1 + eff2. The result of the merging is stored in the TEfficiency object which is marked; bold above. The contents of the internal histograms of both TEfficiency; objects are added and a new weight is assigned. The statistic options are not; changed. \f[; \frac{1}{w_{new}} = \frac{1}{w_{1}} + \frac{1}{w_{2}}; \f]",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TEfficiency.cxx:16660,integrat,integrated,16660,hist/hist/src/TEfficiency.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TEfficiency.cxx,1,['integrat'],['integrated']
Integrability,"her signature, func is executed as many times as needed by a pool of; /// nThreads threads, where nThreads typically defaults to the number of cores.\n; /// A collection containing the result of each execution is returned.\n; /// **Note:** the user is responsible for the deletion of any object that might; /// be created upon execution of func, returned objects included: ROOT::TThreadExecutor never; /// deletes what it returns, it simply forgets it.\n; ///; /// \param func; /// \parblock; /// a callable object, such as a lambda expression, an std::function, a; /// functor object or a function that takes zero arguments (for the first signature); /// or one (for the second signature).; /// \endparblock; /// \param args; /// \parblock; /// a standard vector, a ROOT::TSeq of integer type or an initializer list for the second signature.; /// An integer only for the first.; /// \endparblock; /// **Note:** in cases where the function to be executed takes more than; /// zero/one argument but all are fixed except zero/one, the function can be wrapped; /// in a lambda or via std::bind to give it the right signature.\n; ///; /// #### Return value:; /// An std::vector. The elements in the container; /// will be the objects returned by func.; ///; ///; /// #### Examples:; ///; /// ~~~{.cpp}; /// root[] ROOT::TThreadExecutor pool; auto hists = pool.Map(CreateHisto, 10);; /// root[] ROOT::TThreadExecutor pool(2); auto squares = pool.Map([](int a) { return a*a; }, {1,2,3});; /// ~~~; ///; /// ### ROOT::TThreadExecutor::MapReduce; /// This set of methods behaves exactly like Map, but takes an additional; /// function as a third argument. This function is applied to the set of; /// objects returned by the corresponding Map execution to ""squash"" them; /// into a single object. This function should be independent of the size of; /// the vector returned by Map due to optimization of the number of chunks.; ///; /// If this function is a binary operator, the ""squashing"" will be performed i",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/imt/src/TThreadExecutor.cxx:2135,wrap,wrapped,2135,core/imt/src/TThreadExecutor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/src/TThreadExecutor.cxx,1,['wrap'],['wrapped']
Integrability,"hether this class's gradient calculator is wrapped inside a AnalyticalGradientCalculator, to which Minuit passes; /// ""external"" parameter values, or as an ExternalInternalGradientCalculator, which gets ""internal"" parameter values.; /// Long story short: when MinuitFcnGrad::returnsInMinuit2ParameterSpace() returns true, Minuit will pass ""internal""; /// values to Gradient. These cannot be synced with this function's RooFit parameters using; /// SetPdfParamVal, unless a manual transformation step is performed in advance. However, they do need to be passed; /// on to the gradient calculator, since indeed we expect values there to be in ""internal"" space. However, this is; /// calculator dependent. Note that in the current MinuitFcnGrad implementation we do not actually allow for; /// calculators in ""external"" (i.e. regular RooFit parameter space) values, since; /// MinuitFcnGrad::returnsInMinuit2ParameterSpace is hardcoded to true. This should in a future version be changed so; /// that the calculator (the wrapper) is queried for this information.; /// Because some gradient calculators may also use the regular RooFit parameters (e.g. for calculating the likelihood's; /// value itself), this information is also passed on to the gradient wrapper. Vice versa, when updated ""internal""; /// parameters are passed to Gradient, the likelihood may be affected as well. Even though a; /// transformation from internal to ""external"" may be necessary before the values can be used, the likelihood can at; /// least log that its parameter values are possibly no longer in sync with those of the gradient.; ///; /// The second twist is that the Minuit external parameters may still be different from the ones used in RooFit. This; /// happens when Minuit tries out values that lay outside the RooFit parameter's range(s). RooFit's setVal (called; /// inside SetPdfParamVal) then clips the RooAbsArg's value to one of the range limits, instead of setting it to the; /// value Minuit intended. When ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/MinuitFcnGrad.cxx:2298,wrap,wrapper,2298,roofit/roofitcore/src/TestStatistics/MinuitFcnGrad.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/MinuitFcnGrad.cxx,1,['wrap'],['wrapper']
Integrability,"his //; // class is meant to be as generic as possible to be used with files //; // hosted not only by Amazon S3 servers but also by other providers //; // implementing the core of the S3 protocol. //; // //; // The S3 protocol works on top of HTTPS (and HTTP) and imposes that //; // each HTTP request be signed using a specific convention: the request //; // must include an 'Authorization' header which contains the signature //; // of a concatenation of selected request fields. For signing the //; // request, an 'Access Key Id' and a 'Secret Access Key' need to be //; // known. These keys are used by the S3 servers to identify the client //; // and to authenticate the request as genuine. //; // //; // As an end user, you must know the Access Key and Secret Access Key //; // in order to access each S3 file. They are provided to you by your S3 //; // service provider. Those two keys can be provided to ROOT when //; // initializing an object of this class by two means: //; // a) by using the environmental variables S3_ACCESS_KEY and //; // S3_SECRET_KEY, or //; // b) by specifying them as an argument when opening each file. //; // //; // The first method is convenient if all the S3 files you want to //; // access are hosted by a single provider. The second one is more //; // flexible as it allows you to specify which credentials to use //; // on a per-file basis. See the documentation of the constructor of //; // this class for details on the syntax. //; // //; // For generating and signing the HTTP request, this class uses //; // TS3HTTPRequest. //; // //; // For more information on the details of S3 protocol please refer to: //; // ""Amazon Simple Storage Service Developer Guide"": //; // http://docs.amazonwebservices.com/AmazonS3/latest/dev/Welcome.html //; // //; // ""Amazon Simple Storage Service REST API Reference"" //; // http://docs.amazonwebservices.com/AmazonS3/latest/API/APIRest.html //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/inc/TS3WebFile.h:1877,protocol,protocol,1877,net/net/inc/TS3WebFile.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/inc/TS3WebFile.h,1,['protocol'],['protocol']
Integrability,"his usually requires 21 times more function evaluations, but significantly; * reduces biases due to better sampling of the PDF. The integrator can be accessed from the outside; * using integrator(). This can be used to change the integration rules, so less/more function evaluations are; * performed. The target precision of the integrator can be set in the constructor.; *; *; * ### How to use it; * There are two ways to use this class:; * - Manually wrap a PDF:; * ```; * RooBinSamplingPdf binSampler(""<name>"", ""title"", <binned observable of PDF>, <original PDF> [, <precision for integrator>]);; * binSampler.fitTo(data);; * ```; * When a PDF is wrapped with a RooBinSamplingPDF, just use the bin sampling PDF instead of the original one for fits; * or plotting etc.; * \note The binning will be taken from the observable. Make sure that this binning is the same as the one of the dataset that should be fit.; * Use RooRealVar::setBinning() to adapt it.; * - Instruct test statistics to carry out this wrapping automatically:; * ```; * pdf.fitTo(data, IntegrateBins(<precision>));; * ```; * This method is especially useful when used with a simultaneous PDF, since each component will automatically be wrapped,; * depending on the value of `precision`:; * - `precision < 0.`: None of the PDFs are touched, bin sampling is off.; * - `precision = 0.`: Continuous PDFs that are fit to a RooDataHist are wrapped into a RooBinSamplingPdf. The target precision; * forwarded to the integrator is 1.E-4 (the default argument of the constructor).; * - `precision > 0.`: All continuous PDFs are automatically wrapped into a RooBinSamplingPdf, regardless of what data they are; * fit to (see next paragraph). The same `'precision'` is used for all integrators.; *; * ### Simulating a binned fit using RooDataSet; * Some frameworks use unbinned data (RooDataSet) to simulate binned datasets. By adding one entry for each bin centre with the; * appropriate weight, one can achieve the same result as fitting wi",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooBinSamplingPdf.cxx:2333,wrap,wrapping,2333,roofit/roofitcore/src/RooBinSamplingPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooBinSamplingPdf.cxx,1,['wrap'],['wrapping']
Integrability,hod method_list[method_count];; /// }; /// struct _protocol_t {; /// id isa; // NULL; /// const char *protocol_name;; /// const struct _protocol_list_t * protocol_list; // super protocols; /// const struct method_list_t *instance_methods;; /// const struct method_list_t *class_methods;; /// const struct method_list_t *optionalInstanceMethods;; /// const struct method_list_t *optionalClassMethods;; /// const struct _prop_list_t * properties;; /// const uint32_t size; // sizeof(struct _protocol_t); /// const uint32_t flags; // = 0; /// const char ** extendedMethodTypes;; /// }; /// struct _ivar_t {; /// unsigned long int *offset; // pointer to ivar offset location; /// const char *name;; /// const char *type;; /// uint32_t alignment;; /// uint32_t size;; /// }; /// struct _ivar_list_t {; /// uint32 entsize; // sizeof(struct _ivar_t); /// uint32 count;; /// struct _ivar_t list[count];; /// }; /// struct _class_ro_t {; /// uint32_t flags;; /// uint32_t instanceStart;; /// uint32_t instanceSize;; /// uint32_t reserved; // only when building for 64bit targets; /// const uint8_t *ivarLayout;; /// const char *name;; /// const struct _method_list_t *baseMethods;; /// const struct _protocol_list_t *baseProtocols;; /// const struct _ivar_list_t *ivars;; /// const uint8_t *weakIvarLayout;; /// const struct _prop_list_t *properties;; /// }; /// struct _class_t {; /// struct _class_t *isa;; /// struct _class_t *superclass;; /// void *cache;; /// IMP *vtable;; /// struct _class_ro_t *ro;; /// }; /// struct _category_t {; /// const char *name;; /// struct _class_t *cls;; /// const struct _method_list_t *instance_methods;; /// const struct _method_list_t *class_methods;; /// const struct _protocol_list_t *protocols;; /// const struct _prop_list_t *properties;; /// }; /// MessageRefTy - LLVM for:; /// struct _message_ref_t {; /// IMP messenger;; /// SEL name;; /// };; /// SuperMessageRefTy - LLVM for:; /// struct _super_message_ref_t {; /// SUPER_IMP messenger;; /// SEL name;; /// };,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/Rewrite/RewriteModernObjC.cpp:2451,protocol,protocols,2451,interpreter/llvm-project/clang/lib/Frontend/Rewrite/RewriteModernObjC.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/Rewrite/RewriteModernObjC.cpp,2,"['Message', 'protocol']","['MessageRefTy', 'protocols']"
Integrability,"i] = new Double_t[ncolumns];; for (j = 0; j < ncolumns; j++) {; data[i][j] = 10 * i + j;; }; }. // Create a main frame to contain the table; TGMainFrame* mainframe = new TGMainFrame(0, 400, 200);; mainframe->SetCleanup(kDeepCleanup) ;. // Create an interface; TGSimpleTableInterface *iface = new TGSimpleTableInterface(data, 6, 5);. // Create the table; TGTable *table = new TGTable(mainframe, 999, iface);. // Add the table to the main frame; mainframe->AddFrame(table, new TGLayoutHints(kLHintsExpandX | kLHintsExpandY));. //Update data; data[5][1] = 3.01;; //update the table view; table->Update();. // Layout and map the main frame; mainframe->SetWindowName(""Tree Table Test"") ;; mainframe->MapSubwindows() ;; mainframe->Layout();; mainframe->Resize() ;; mainframe->MapWindow() ;. return mainframe;; }; ~~~. It is also possible to visualise data from a tree. A simple macro; showing the use of a TTreeTableInterface follows. ~~~; {; // Open a root file.; TFile *file = new TFile(""$ROOTSYS/tutorials/hsimple.root"");; // Load a tree from the file; TNtuple *ntuple = (TNtuple *)file->Get(""ntuple"");. // Create an interface; TTreeTableInterface *iface = new TTreeTableInterface(ntuple);. // Create a main frame to contain the table; TGMainFrame* mainframe = new TGMainFrame(0, 400, 200);; mainframe->SetCleanup(kDeepCleanup) ;. // Create the table; TGTable *table = new TGTable(mainframe, 999, iface, 10, 6);. // Add the table to the main frame; mainframe->AddFrame(table, new TGLayoutHints(kLHintsExpandX | kLHintsExpandY));. // Set a selection; iface->SetSelection(""px > 0."");; // Add a column; iface->AddColumn(""(px+py)/(px-py)"", 0);; //update the table view; table->Update();. // Layout and map the main frame; mainframe->SetWindowName(""Tree Table Test"") ;; mainframe->MapSubwindows() ;; mainframe->Layout();; mainframe->Resize() ;; mainframe->MapWindow() ;. return mainframe;; }; ~~~; */; ////////////////////////////////////////////////////////////////////////////////; /// TGTable constuctor.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGTable.cxx:2566,interface,interface,2566,gui/gui/src/TGTable.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGTable.cxx,1,['interface'],['interface']
Integrability,"ic convolution calculated; this way is computationally intensive and prone to stability fitting problems.; <b>The preferred way to compute numeric convolutions is RooFFTConvPdf</b>,; which calculates convolutions using Fourier Transforms (requires external free; FFTW3 package); RooNumConvPdf implements reasonable defaults that should convolve most; functions reasonably well, but results strongly depend on the shape of your; input PDFS so always check your result.; The default integration engine for the numeric convolution is the; adaptive Gauss-Kronrod method, which empirically seems the most robust; for this task. You can override the convolution integration settings via; the RooNumIntConfig object reference returned by the convIntConfig() member; function; By default the numeric convolution is integrated from -infinity to; +infinity through a <pre>x -> 1/x</pre> coordinate transformation of the; tails. For convolution with a very small bandwidth it may be; advantageous (for both CPU consumption and stability) if the; integration domain is limited to a finite range. The function; setConvolutionWindow(mean,width,scale) allows to set a sliding; window around the x value to be calculated taking a RooAbsReal; expression for an offset and a width to be taken around the x; value. These input expression can be RooFormulaVars or other; function objects although the 3d 'scale' argument 'scale'; multiplies the width RooAbsReal expression given in the 2nd; argument, allowing for an appropriate window definition for most; cases without need for a RooFormulaVar object: e.g. a Gaussian; resolution PDF do setConvolutionWindow(gaussMean,gaussSigma,5); Note that for a 'wide' Gaussian the -inf to +inf integration; may converge more quickly than that over a finite range!; The default numeric precision is 1e-7, i.e. the global default for; numeric integration but you should experiment with this value to; see if it is sufficient for example by studying the number of function; calls tha",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumConvPdf.cxx:2026,integrat,integration,2026,roofit/roofitcore/src/RooNumConvPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumConvPdf.cxx,1,['integrat'],['integration']
Integrability,"ic, while the equivalent `Filter([](float x) { return x > 0.; }, {""x""})` does not.; Similarly, `Histo1D(""x"")` requires just-in-time compilation after the type of `x` is retrieved from the dataset, while `Histo1D<float>(""x"")` does not; the latter spelling; should be preferred for performance-critical applications. Python applications cannot easily specify template parameters or pass C++ callables to RDataFrame.; See [Efficient analysis in Python](#python) for possible ways to speed up hot paths in this case. Just-in-time compilation happens once, right before starting an event loop. To reduce the runtime cost of this step, make sure to book all operations *for all RDataFrame computation graphs*; before the first event loop is triggered: just-in-time compilation will happen once for all code required to be generated up to that point, also across different computation graphs. Also make sure not to count the just-in-time compilation time (which happens once before the event loop and does not depend on the size of the dataset) as part of the event loop runtime (which scales with the size of the dataset). RDataFrame has an experimental logging feature that simplifies measuring the time spent in just-in-time compilation and in the event loop (as well as providing some more interesting information). See [Activating RDataFrame execution logs](\ref rdf-logging). ### Memory usage. There are two reasons why RDataFrame may consume more memory than expected. Firstly, each result is duplicated for each worker thread, which e.g. in case of many (possibly multi-dimensional) histograms with fine binning can result in visible memory consumption during the event loop. The thread-local copies of the results are destroyed when the final result is produced. Reducing the number of threads or using coarser binning will reduce the memory usage. Secondly, just-in-time compilation of string expressions or non-templated actions (see the previous paragraph) causes Cling, ROOT's C++ interpreter, t",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx:52686,depend,depend,52686,tree/dataframe/src/RDataFrame.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx,1,['depend'],['depend']
Integrability,"ies of stream next and avail values, as well as local bit; * buffer and bit count in inflate()--for speed when inflate_fast() not used; *; * 1.2.beta4 1 Jan 2003; * - Split ptr - 257 statements in inflate_table() to avoid compiler warnings; * - Move a comment on output buffer sizes from inffast.c to inflate.c; * - Add comments in inffast.c to introduce the inflate_fast() routine; * - Rearrange window copies in inflate_fast() for speed and simplification; * - Unroll last copy for window match in inflate_fast(); * - Use local copies of window variables in inflate_fast() for speed; * - Pull out common wnext == 0 case for speed in inflate_fast(); * - Make op and len in inflate_fast() unsigned for consistency; * - Add FAR to lcode and dcode declarations in inflate_fast(); * - Simplified bad distance check in inflate_fast(); * - Added inflateBackInit(), inflateBack(), and inflateBackEnd() in new; * source file infback.c to provide a call-back interface to inflate for; * programs like gzip and unzip -- uses window as output buffer to avoid; * window copying; *; * 1.2.beta5 1 Jan 2003; * - Improved inflateBack() interface to allow the caller to provide initial; * input in strm.; * - Fixed stored blocks bug in inflateBack(); *; * 1.2.beta6 4 Jan 2003; * - Added comments in inffast.c on effectiveness of POSTINC; * - Typecasting all around to reduce compiler warnings; * - Changed loops from while (1) or do {} while (1) to for (;;), again to; * make compilers happy; * - Changed type of window in inflateBackInit() to unsigned char *; *; * 1.2.beta7 27 Jan 2003; * - Changed many types to unsigned or unsigned short to avoid warnings; * - Added inflateCopy() function; *; * 1.2.0 9 Mar 2003; * - Changed inflateBack() interface to provide separate opaque descriptors; * for the in() and out() functions; * - Changed inflateBack() argument and in_func typedef to swap the length; * and buffer address return values for the input function; * - Check next_in and next_out for Z_NULL on entry ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/inflate.c:2741,interface,interface,2741,builtins/zlib/inflate.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/inflate.c,1,['interface'],['interface']
Integrability,"ies of stream next and avail values, as well as local bit; * buffer and bit count in inflate()--for speed when inflate_fast() not used; *; * 1.2.beta4 1 Jan 2003; * - Split ptr - 257 statements in inflate_table() to avoid compiler warnings; * - Move a comment on output buffer sizes from inffast.c to inflate.c; * - Add comments in inffast.c to introduce the inflate_fast() routine; * - Rearrange window copies in inflate_fast() for speed and simplification; * - Unroll last copy for window match in inflate_fast(); * - Use local copies of window variables in inflate_fast() for speed; * - Pull out common write == 0 case for speed in inflate_fast(); * - Make op and len in inflate_fast() unsigned for consistency; * - Add FAR to lcode and dcode declarations in inflate_fast(); * - Simplified bad distance check in inflate_fast(); * - Added inflateBackInit(), inflateBack(), and inflateBackEnd() in new; * source file infback.c to provide a call-back interface to inflate for; * programs like gzip and unzip -- uses window as output buffer to avoid; * window copying; *; * 1.2.beta5 1 Jan 2003; * - Improved inflateBack() interface to allow the caller to provide initial; * input in strm.; * - Fixed stored blocks bug in inflateBack(); *; * 1.2.beta6 4 Jan 2003; * - Added comments in inffast.c on effectiveness of POSTINC; * - Typecasting all around to reduce compiler warnings; * - Changed loops from while (1) or do {} while (1) to for (;;), again to; * make compilers happy; * - Changed type of window in inflateBackInit() to unsigned char *; *; * 1.2.beta7 27 Jan 2003; * - Changed many types to unsigned or unsigned short to avoid warnings; * - Added inflateCopy() function; *; * 1.2.0 9 Mar 2003; * - Changed inflateBack() interface to provide separate opaque descriptors; * for the in() and out() functions; * - Changed inflateBack() argument and in_func typedef to swap the length; * and buffer address return values for the input function; * - Check next_in and next_out for Z_NULL on entry ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/inflate.c:2741,interface,interface,2741,graf2d/asimage/src/libAfterImage/zlib/inflate.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/inflate.c,1,['interface'],['interface']
Integrability,"if } \frac{x-\mu}{\sigma} < -a_l \\; * \left( (x-\mu)^2 + A^2_\lambda(\zeta)\sigma^2 \right)^{\frac{1}{2}\lambda-\frac{1}{4}} e^{\beta(x-\mu)} K_{\lambda-\frac{1}{2}}; * \left( \zeta \sqrt{1+\left( \frac{x-\mu}{A_\lambda(\zeta)\sigma} \right)^2 } \right) \equiv G(x, \mu, \ldots); * & \text{otherwise} \\; * \frac{ G(\mu + a_r \sigma, \mu, \sigma, \lambda, \zeta, \beta) }; * { \left( 1 - \frac{x}{-n_r G(\ldots)/G'(\ldots) - a_r\sigma } \right)^{n_r} }; * & \text{if } \frac{x-\mu}{\sigma} > a_r \\; * \end{cases}; * \f]; * Here, \f$ K_\lambda \f$ are the modified Bessel functions of the second kind; * (""irregular modified cylindrical Bessel functions"" from the gsl,; * ""special Bessel functions of the third kind""),; * and \f$ A^2_\lambda(\zeta) \f$ is a ratio of these:; * \f[; * A_\lambda^{2}(\zeta) = \frac{\zeta K_\lambda(\zeta)}{K_{\lambda+1}(\zeta)}; * \f]; *; * \if false; * TODO Enable once analytic integrals work.; * ### Analytical Integration; * The Hypatia distribution can be integrated analytically if \f$ \beta = \zeta = 0 \f$ and; * \f$ \lambda < 0 \f$. An analytic integral will only be used, though, if the parameters are **constant**; * at zero, and if \f$ \lambda < 0 \f$. This can be ensured as follows:; * ```; * RooRealVar beta(""beta"", ""beta"", 0.); // NOT beta(""beta"", ""beta"", 0., -1., 1.) This would allow it to float.; * RooRealVar zeta(""zeta"", ""zeta"", 0.);; * RooRealVar lambda(""lambda"", ""lambda"", -1., -10., -0.00001);; * ```; * In all other cases, slower / less accurate numeric integration will be used.; * Note that including `0.` in the value range of lambda excludes using analytic integrals.; * \endif; *; * ### Concavity; * Note that unless the parameters \f$ a_l,\ a_r \f$ are very large, the function has non-hyperbolic tails. This requires; * \f$ G \f$ to be strictly concave, *i.e.*, peaked, as otherwise the tails would yield imaginary numbers. Choosing \f$ \lambda,; * \beta, \zeta \f$ inappropriately will therefore lead to evaluation errors.; *; * Furthe",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitmore/src/RooHypatia2.cxx:2249,Integrat,Integration,2249,roofit/roofitmore/src/RooHypatia2.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitmore/src/RooHypatia2.cxx,2,"['Integrat', 'integrat']","['Integration', 'integrated']"
Integrability,"ight; /// be created upon execution of func, returned objects included: ROOT::TTreeProcessorMP never; /// deletes what it returns, it simply forgets it.\n; /// **Note:** that the usage of ROOT::TTreeProcessorMP::Process is indicated only when the task to be; /// executed takes more than a few seconds, otherwise the overhead introduced; /// by Process will outrun the benefits of parallel execution on most machines.; ///; /// \param func; /// \parblock; /// a lambda expression, an std::function, a loaded macro, a; /// functor class or a function that takes zero arguments (for the first signature); /// or one (for the second signature).; /// \endparblock; /// \param args; /// \parblock; /// a standard container (vector, list, deque), an initializer list; /// or a pointer to a TCollection (TList*, TObjArray*, ...).; /// \endparblock; /// **Note:** the version of ROOT::TTreeProcessorMP::Process that takes a TFileCollection* as argument incurs; /// in the overhead of copying data from the TCollection to an STL container. Only; /// use it when absolutely necessary.\n; /// **Note:** in cases where the function to be executed takes more than; /// zero/one argument but all are fixed except zero/one, the function can be wrapped; /// in a lambda or via std::bind to give it the right signature.\n; /// **Note:** the user should take care of initializing random seeds differently in each; /// process (e.g. using the process id in the seed). Otherwise several parallel executions; /// might generate the same sequence of pseudo-random numbers.; ///; /// #### Return value:; /// Methods taking 'F func' return the return type of F.; /// Methods taking a TSelector return a 'TList *' with the selector output list; the output list; /// content is owned by the caller.; ///; /// #### Examples:; ///; /// See tutorials/multicore/mp102_readNtuplesFillHistosAndFit.C and tutorials/multicore/mp103__processSelector.C .; ///; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeProcessorMP.cxx:2906,wrap,wrapped,2906,tree/treeplayer/src/TTreeProcessorMP.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeProcessorMP.cxx,1,['wrap'],['wrapped']
Integrability,"in row,column. The amount of; rows and columns is also shown in rows x columns. These values can be; edited to move to a different area of the data source or to resize the; table. Tab will switch between the enties, return will move to the; currently entered range and resize the table if needed. Clicking the; goto button has the same effect. A TGTable is created by first creating an appropriate; TVirtualTableInterface from the data that needs visualization and; then creating the TGTable using this interface. A simple macro to use a TGTable with a TGSimpleTableInterface:. ~~~; {; Int_t i = 0, j = 0;; UInt_t nrows = 6, ncolumns = 5;; Double_t** data = new Double_t*[nrows];; for (i = 0; i < nrows; i++) {; data[i] = new Double_t[ncolumns];; for (j = 0; j < ncolumns; j++) {; data[i][j] = 10 * i + j;; }; }. // Create a main frame to contain the table; TGMainFrame* mainframe = new TGMainFrame(0, 400, 200);; mainframe->SetCleanup(kDeepCleanup) ;. // Create an interface; TGSimpleTableInterface *iface = new TGSimpleTableInterface(data, 6, 5);. // Create the table; TGTable *table = new TGTable(mainframe, 999, iface);. // Add the table to the main frame; mainframe->AddFrame(table, new TGLayoutHints(kLHintsExpandX | kLHintsExpandY));. //Update data; data[5][1] = 3.01;; //update the table view; table->Update();. // Layout and map the main frame; mainframe->SetWindowName(""Tree Table Test"") ;; mainframe->MapSubwindows() ;; mainframe->Layout();; mainframe->Resize() ;; mainframe->MapWindow() ;. return mainframe;; }; ~~~. It is also possible to visualise data from a tree. A simple macro; showing the use of a TTreeTableInterface follows. ~~~; {; // Open a root file.; TFile *file = new TFile(""$ROOTSYS/tutorials/hsimple.root"");; // Load a tree from the file; TNtuple *ntuple = (TNtuple *)file->Get(""ntuple"");. // Create an interface; TTreeTableInterface *iface = new TTreeTableInterface(ntuple);. // Create a main frame to contain the table; TGMainFrame* mainframe = new TGMainFrame(0, 400, 20",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGTable.cxx:1701,interface,interface,1701,gui/gui/src/TGTable.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGTable.cxx,1,['interface'],['interface']
Integrability,"ing others;; - input/output event lists easy to handle;; - menu with histogram drawing options;; - user commands may be executed within the viewer and the current command; can be echoed;; - current 'Draw' event loop is reflected by a progress bar and may be; interrupted by the user;; - all widgets have self-explaining tool tips and/or context menus;; - expressions/leaves can be dragged to a 'scan box' and scanned by; double-clicking this item. The result can be redirected to an ASCII file;. ### The layout has the following items:. - a menu bar with entries : File, Edit, Run, Options and Help;; - a toolbar in the upper part where you can issue user commands, change; the drawing option and the histogram name, three check buttons Hist, Rec; and Scan.HIST toggles histogram drawing mode, REC enables recording of the; last command issued and SCAN enables redirecting of TTree::Scan command in; an ASCII file (see -Scanning expressions-);; - a button bar in the lower part with : buttons DRAW/STOP that issue histogram; drawing and stop the current command respectively, two text widgets where; input and output event lists can be specified, a message box and a RESET; button on the right that clear edited expression content (see Editing...); - a tree-type list on the main left panel where you can select among trees or; branches. The tree/branch will be detailed in the right panel.; Mapped trees are provided with context menus, activated by right-clicking;; - a view-type list on the right panel. The first column contain X, Y and; Z expression items, an optional cut and ten optional editable expressions.; Expressions and leaf-type items can be dragged or deleted. A right click on; the list-box or item activates context menus. ### Opening a new tree and saving a session :. To open a new tree in the viewer use `<File/Open tree file>` menu; The content of the file (keys) will be listed. Use `<SetTreeName>` function; from the context menu of the right panel, entering a tree name among ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TTreeViewer.cxx:2481,message,message,2481,tree/treeviewer/src/TTreeViewer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TTreeViewer.cxx,1,['message'],['message']
Integrability,"instance parameter values on the worker that were updated; * since the last call on the master side.; *; * ## Message protocol; *; * One simple rule must be upheld for the messages that the implementer will; * send with 'send_back_task_result_from_worker' and 'update_state': the first; * part of the message must always be the 'Job''s ID, stored in 'Job::id'.; * The rest of the message, i.e. the actual data to be sent, is completely up; * to the implementation. Note that on the receiving end, i.e. in the; * implementation of 'receive_task_result_on_master', one will get the whole; * message, but the 'Job' ID part will already have been identified in the; * 'JobManager', so one needn't worry about it further inside; * 'Job::receive_task_result_on_master' (it is already routed to the correct; * 'Job'). The same goes for the receiving end of 'update_state', except that; * update_state is routed from the 'worker_loop', not the 'JobManager'.; *; * A second rule applies to 'update_state' messages: the second part must be; * a state identifier. This identifier will also be sent along with tasks to; * the queue. When a worker then takes a task from the queue, it can check; * whether it has already updated its state to what is expected to be there; * for the task at hand. If not, it should wait for the new state to arrive; * over the state subscription socket. Note: it is the implementer's task to; * actually update 'Job::state_id_' inside 'Job::update_state()'!; *; * ## Implementers notes; *; * The type of result from each task is strongly dependent on the Job at hand; * and so Job does not provide a default results member. It is up to the; * inheriting class to implement this in the above functions. We would have; * liked a template parameter task_result_t, so that we could also provide a; * default ""boilerplate"" calculate function to show a typical Job use-case of; * all the above infrastructure. This is not trivial, because the JobManager; * has to keep a list of Job point",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Job.cxx:1972,message,messages,1972,roofit/multiprocess/src/Job.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Job.cxx,1,['message'],['messages']
Integrability,"ion exists in the form of; // a compute kernel, we assume that only the kernel, and all functions; // reachable from it, constitute code that the user expects the accelerator; // to execute. Thus, we identify the set of all functions reachable from; // kernels, and then remove all unreachable ones. This last part is necessary; // because it is possible for code that the user did not expect to execute on; // an accelerator to contain constructs that cannot be handled by the target; // BE, which cannot be provably demonstrated to be dead code in general, and; // thus can lead to mis-compilation. The degenerate case of this is when a; // Module contains no kernels (the parent TU had no algorithm invocations fit; // for acceleration), which we handle by completely emptying said module.; // **NOTE**: The above does not handle indirectly reachable functions i.e.; // it is possible to obtain a case where the target of an indirect; // call is otherwise unreachable and thus is removed; this; // restriction is aligned with the current `-hipstdpar` limitations; // and will be relaxed in the future.; //; // 2. AllocationInterposition (required only when on-demand paging is; // unsupported): Some accelerators or operating systems might not support; // transparent on-demand paging. Thus, they would only be able to access; // memory that is allocated by an accelerator-aware mechanism. For such cases; // the user can opt into enabling allocation / deallocation interposition,; // whereby we replace calls to known allocation / deallocation functions with; // calls to runtime implemented equivalents that forward the requests to; // accelerator-aware interfaces. We also support freeing system allocated; // memory that ends up in one of the runtime equivalents, since this can; // happen if e.g. a library that was compiled without interposition returns; // an allocation that can be validly passed to `free`.; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/HipStdPar/HipStdPar.cpp:2256,interface,interfaces,2256,interpreter/llvm-project/llvm/lib/Transforms/HipStdPar/HipStdPar.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/HipStdPar/HipStdPar.cpp,1,['interface'],['interfaces']
Integrability,"ion we would need the three; * end-point scale factors, (red-scale, green-scale, blue-scale), but these; * were not recorded. Instead we calculated the reference white (X,Y,Z) and; * recorded the chromaticity of this. The reference white (X,Y,Z) would have; * given all three of the scale factors since:; *; * color-C = color-c * color-scale; * white-C = red-C + green-C + blue-C; * = red-c*red-scale + green-c*green-scale + blue-c*blue-scale; *; * But cHRM records only white-x and white-y, so we have lost the white scale; * factor:; *; * white-C = white-c*white-scale; *; * To handle this the inverse transformation makes an arbitrary assumption; * about white-scale:; *; * Assume: white-Y = 1.0; * Hence: white-scale = 1/white-y; * Or: red-Y + green-Y + blue-Y = 1.0; *; * Notice the last statement of the assumption gives an equation in three of; * the nine values we want to calculate. 8 more equations come from the; * above routine as summarised at the top above (the chromaticity; * calculation):; *; * Given: color-x = color-X / (color-X + color-Y + color-Z); * Hence: (color-x - 1)*color-X + color.x*color-Y + color.x*color-Z = 0; *; * This is 9 simultaneous equations in the 9 variables ""color-C"" and can be; * solved by Cramer's rule. Cramer's rule requires calculating 10 9x9 matrix; * determinants, however this is not as bad as it seems because only 28 of; * the total of 90 terms in the various matrices are non-zero. Nevertheless; * Cramer's rule is notoriously numerically unstable because the determinant; * calculation involves the difference of large, but similar, numbers. It is; * difficult to be sure that the calculation is stable for real world values; * and it is certain that it becomes unstable where the end points are close; * together.; *; * So this code uses the perhaps slightly less optimal but more; * understandable and totally obvious approach of calculating color-scale.; *; * This algorithm depends on the precision in white-scale and that is; * (1/white-y), ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c:2036,rout,routine,2036,graf2d/asimage/src/libAfterImage/libpng/png.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c,1,['rout'],['routine']
Integrability,"is RooStringVar,; but it is rarely used. The ""shapes"" that a RooAbsArg can possess can e.g. be the definition; range of an observable, or how many states a category object has. In computations,; values are expected to change often, while shapes remain mostly constant; (unless e.g. a new range is set for an observable). Nodes of a computation graph are connected using instances of RooAbsProxy.; If Node B declares a member `RooTemplateProxy<TypeOfNodeA>`, Node A will be; registered as a server of values to Node B, and Node B will know that it is; a client of node A. Using functions like dependsOn(), or getObservables(); / getParameters(), the relation of `A --> B` can be queried. Using graphVizTree(),; one can create a visualisation of the expression tree. An instance of RooAbsArg can have named attributes. It also has flags; to indicate that either its value or its shape were changed (= it is dirty).; RooAbsArg provides functionality to manage client/server relations in; a computation graph (\ref clientServerInterface), and helps propagating; value/shape changes through the graph. RooAbsArg implements interfaces; for inspecting client/server relationships (\ref clientServerInterface) and; setting/clearing/querying named attributes. ### Caching of values; The values of nodes in the computation graph are cached in RooFit. If; a value is used in two nodes of a graph, it doesn't need to be recomputed. If; a node acquires a new value, it notifies its consumers (""clients"") that; their cached values are dirty. See the functions in \ref optimisationInterface; for details.; A node uses its isValueDirty() and isShapeDirty() functions to decide if a; computation is necessary. Caching can be vetoed globally by setting a; bit using setDirtyInhibit(). This will make computations slower, but all the; nodes of the computation graph will be evaluated irrespective of whether their; state is clean or dirty. Using setOperMode(), caching can also be enabled/disabled; for single nodes. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsArg.cxx:2556,interface,interfaces,2556,roofit/roofitcore/src/RooAbsArg.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsArg.cxx,1,['interface'],['interfaces']
Integrability,"is desirable, is an analysis where; a set of collections are read only for a few events in which a certain; condition is respected, e.g. a trigger fired. ### Additional memory and CPU usage when optimizing for cache misses; When this mode is enabled, the memory dedicated to the cache can increase; by at most a factor two in the case of cache miss.; Additionally, on the first miss of an event, we must iterate through all the; ""active branches"" for the miss cache and find the correct basket.; This can be potentially a CPU-expensive operation compared to, e.g., the; latency of a SSD. This is why the miss cache is currently disabled by default. \anchor examples; ## Example usages of TTreeCache. A few use cases are discussed below. A cache may be created with automatic; sizing when a TTree is used:. In some applications, e.g. central processing workflows of experiments, the list; of branches to read is known a priori. For these cases, the TTreeCache can be; instructed about the branches which will be read via explicit calls to the TTree; or TTreeCache interfaces.; In less streamlined applications such as analysis, predicting the branches which; will be read can be difficult. In such cases, ROOT I/O flags used branches; automatically when a branch buffer is read during the learning phase. In the examples below, portions of analysis code are shown.; The few statements involving the TreeCache are marked with `//<<<`. ### ROOT::RDataFrame and TTreeReader Examples. If you use RDataFrame or TTreeReader, the system will automatically cache the; best set of branches: no action is required by the user. ### TTree::Draw Example. The TreeCache is automatically used by TTree::Draw. The method knows; which branches are used in the query and it puts automatically these branches; in the cache. The entry range is also inferred automatically. ### TTree::Process and TSelectors Examples. The user must enable the cache and tell the system which branches to cache; and also specify the entry r",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:6302,interface,interfaces,6302,tree/tree/src/TTreeCache.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx,1,['interface'],['interfaces']
Integrability,"is laid out before; // the virtual base and is used in conjunction with virtual overrides during; // construction and destruction. This is always a 4 byte value and is used as; // an alternative to constructor vtables.; // * vtordisps are allocated in a block of memory with size and alignment equal; // to the alignment of the completed structure (before applying __declspec(; // align())). The vtordisp always occur at the end of the allocation block,; // immediately prior to the virtual base.; // * vfptrs are injected after all bases and fields have been laid out. In; // order to guarantee proper alignment of all fields, the vfptr injection; // pushes all bases and fields back by the alignment imposed by those bases; // and fields. This can potentially add a significant amount of padding.; // vfptrs are always injected at offset 0.; // * vbptrs are injected after all bases and fields have been laid out. In; // order to guarantee proper alignment of all fields, the vfptr injection; // pushes all bases and fields back by the alignment imposed by those bases; // and fields. This can potentially add a significant amount of padding.; // vbptrs are injected immediately after the last non-virtual base as; // lexicographically ordered in the code. If this site isn't pointer aligned; // the vbptr is placed at the next properly aligned location. Enough padding; // is added to guarantee a fit.; // * The last zero sized non-virtual base can be placed at the end of the; // struct (potentially aliasing another object), or may alias with the first; // field, even if they are of the same type.; // * The last zero size virtual base may be placed at the end of the struct; // potentially aliasing another object.; // * The ABI attempts to avoid aliasing of zero sized bases by adding padding; // between bases or vbases with specific properties. The criteria for; // additional padding between two bases is that the first base is zero sized; // or ends with a zero sized subobject and the sec",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/RecordLayoutBuilder.cpp:2222,inject,injection,2222,interpreter/llvm-project/clang/lib/AST/RecordLayoutBuilder.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/RecordLayoutBuilder.cpp,1,['inject'],['injection']
Integrability,"is not relevant for matching; for example, comma tokens should have; // already been consumed and eliminated by the parser. Most instructions will; // end up with a single literal token (the instruction name) and some number of; // operands.; //; // Some example inputs, for X86:; // 'addl' (immediate ...) (register ...); // 'add' (immediate ...) (memory ...); // 'call' '*' %epc; //; // The assembly matcher is responsible for converting this input into a precise; // machine instruction (i.e., an instruction with a well defined encoding). This; // mapping has several properties which complicate matching:; //; // - It may be ambiguous; many architectures can legally encode particular; // variants of an instruction in different ways (for example, using a smaller; // encoding for small immediates). Such ambiguities should never be; // arbitrarily resolved by the assembler, the assembler is always responsible; // for choosing the ""best"" available instruction.; //; // - It may depend on the subtarget or the assembler context. Instructions; // which are invalid for the current mode, but otherwise unambiguous (e.g.,; // an SSE instruction in a file being assembled for i486) should be accepted; // and rejected by the assembler front end. However, if the proper encoding; // for an instruction is dependent on the assembler context then the matcher; // is responsible for selecting the correct machine instruction for the; // current mode.; //; // The core matching algorithm attempts to exploit the regularity in most; // instruction sets to quickly determine the set of possibly matching; // instructions, and the simplify the generated code. Additionally, this helps; // to ensure that the ambiguities are intentionally resolved by the user.; //; // The matching is divided into two distinct phases:; //; // 1. Classification: Each operand is mapped to the unique set which (a); // contains it, and (b) is the largest such subset for which a single; // instruction could match all members.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/AsmMatcherEmitter.cpp:1835,depend,depend,1835,interpreter/llvm-project/llvm/utils/TableGen/AsmMatcherEmitter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/AsmMatcherEmitter.cpp,1,['depend'],['depend']
Integrability,"issing, provide a default value instead. |; | Define() | Create a new column in the dataset. Example usages include adding a column that contains the invariant mass of a particle, or a selection of elements of an array (e.g. only the `pt`s of ""good"" muons). |; | DefinePerSample() | Define a new column that is updated when the input sample changes, e.g. when switching tree being processed in a chain. |; | DefineSlot() | Same as Define(), but the user-defined function must take an extra `unsigned int slot` as its first parameter. `slot` will take a different value, `0` to `nThreads - 1`, for each thread of execution. This is meant as a helper in writing thread-safe Define() transformation when using RDataFrame after ROOT::EnableImplicitMT(). DefineSlot() works just as well with single-thread execution: in that case `slot` will always be `0`. |; | DefineSlotEntry() | Same as DefineSlot(), but the entry number is passed in addition to the slot number. This is meant as a helper in case the expression depends on the entry number. For details about entry numbers in multi-threaded runs, see [here](\ref helper-cols). |; | Filter() | Filter rows based on user-defined conditions. |; | FilterAvailable() | Specialized Filter. If the value of the input column is available, keep the entry, otherwise discard it. |; | FilterMissing() | Specialized Filter. If the value of the input column is missing, keep the entry, otherwise discard it. |; | Range() | Filter rows based on entry number (single-thread only). |; | Redefine() | Overwrite the value and/or type of an existing column. See Define() for more information. |; | RedefineSlot() | Overwrite the value and/or type of an existing column. See DefineSlot() for more information. |; | RedefineSlotEntry() | Overwrite the value and/or type of an existing column. See DefineSlotEntry() for more information. |; | Vary() | Register systematic variations for an existing column. Varied results are then extracted via VariationsFor(). |. ### Acti",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx:4508,depend,depends,4508,tree/dataframe/src/RDataFrame.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx,1,['depend'],['depends']
Integrability,"istogram model based on the obersved data.; * This results in per-bin values that are all in the same order of magnitude, which reduces precision loss in the sum,; * which can drastically improve numeric stability.; * Furthermore, \f$2\cdot \text{NLL}\f$ defined like this is approximately chi-square distributed, allowing for goodness-of-fit tests.; * </table>; * <tr><td> `IntegrateBins(double precision)` <td> In binned fits, integrate the PDF over the bins instead of using the probability density at the bin centre.; * This can reduce the bias observed when fitting functions with high curvature to binned data.; * - precision > 0: Activate bin integration everywhere. Use precision between 0.01 and 1.E-6, depending on binning.; * Note that a low precision such as 0.01 might yield identical results to 1.E-4, since the integrator might reach 1.E-4 already in its first; * integration step. If lower precision is desired (more speed), a RooBinSamplingPdf has to be created manually, and its integrator; * has to be manipulated directly.; * - precision = 0: Activate bin integration only for continuous PDFs fit to a RooDataHist.; * - precision < 0: Deactivate.; * \see RooBinSamplingPdf; * <tr><td> `ModularL(bool flag)` <td> Enable or disable modular likelihoods, which will become the default in a future release.; * This does not change any user-facing code, but only enables a different likelihood class in the back-end. Note that this; * should be set to true for parallel minimization of likelihoods!; * Note that it is currently not recommended to use Modular likelihoods without any parallelization enabled in the minimization, since; * some features such as offsetting might not yet work in this case.; * </table>; */; /** @brief Protected implementation of the NLL creation routine.; *; * This virtual function can be overridden in case you want to change the NLL creation logic for custom PDFs.; *; * \note Never call this function directly. Instead, call RooAbsPdf::createNLL().; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx:9732,integrat,integration,9732,roofit/roofitcore/src/RooAbsPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx,2,"['integrat', 'rout']","['integration', 'routine']"
Integrability,"it and the; histogram. Here, it is expected that h1 has a fit function in it's list of functions. The class calculates the; difference between the histogram and the fit function at each point and divides it by the uncertainty. There; are a few option to steer which error is used (as is the case for `diffsig`). The default is to use; the statistical uncertainty from h1 using `TH1::GetBinError`. If the `option` string contains `errasym`, asymmetric; errors will be used. The type of error can be steered by `TH1::SetBinErrorOption`. The corresponding error will be used,; depending on if the function is below or above the bin content. The third option `errfunc` uses the square root of; the function value as the error. Begin_Macro(source); ../../../tutorials/hist/ratioplot2.C; End_Macro. ## Error options for difference divided by uncertainty and fit residual; The uncertainty that is used in the calculation can be steered by providing; options to the `option` argument. | Option | Description |; | ---------- | ------------------------------------------------------------ |; | errasym | Uses calculated asymmetric errors from `TH1::GetBinErrorUp`/`TH1::GetBinErrorLow`. Note that you need to set `TH1::SetBinErrorOption` first |; | errfunc | Uses \f$ \sqrt{f(x)} \f$ as the error |. The asymmetric error case uses the upper or lower error depending on the relative size; of the bin contents, or the bin content and the function value. ## Access to internal parts; You can access the internal objects that are used to construct the plot via a series of; methods. `TRatioPlot::GetUpperPad` and `TRatioPlot::GetLowerPad` can be used to draw additional; elements on top of the existing ones.; `TRatioPlot::GetLowerRefGraph` returns a reference to the lower pad's graph that; is responsible for the range, which enables you to modify the range. \image html gpad_ratioplot.png; */; ////////////////////////////////////////////////////////////////////////////////; /// TRatioPlot default constructor",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TRatioPlot.cxx:3211,depend,depending,3211,graf2d/gpad/src/TRatioPlot.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TRatioPlot.cxx,1,['depend'],['depending']
Integrability,"itcore. Numeric 1-dimensional convolution operator PDF. This class can convolve any PDF; with any other PDF using a straightforward numeric calculation of the; convolution integral; This class should be used as last resort as numeric convolution calculated; this way is computationally intensive and prone to stability fitting problems.; <b>The preferred way to compute numeric convolutions is RooFFTConvPdf</b>,; which calculates convolutions using Fourier Transforms (requires external free; FFTW3 package); RooNumConvPdf implements reasonable defaults that should convolve most; functions reasonably well, but results strongly depend on the shape of your; input PDFS so always check your result.; The default integration engine for the numeric convolution is the; adaptive Gauss-Kronrod method, which empirically seems the most robust; for this task. You can override the convolution integration settings via; the RooNumIntConfig object reference returned by the convIntConfig() member; function; By default the numeric convolution is integrated from -infinity to; +infinity through a <pre>x -> 1/x</pre> coordinate transformation of the; tails. For convolution with a very small bandwidth it may be; advantageous (for both CPU consumption and stability) if the; integration domain is limited to a finite range. The function; setConvolutionWindow(mean,width,scale) allows to set a sliding; window around the x value to be calculated taking a RooAbsReal; expression for an offset and a width to be taken around the x; value. These input expression can be RooFormulaVars or other; function objects although the 3d 'scale' argument 'scale'; multiplies the width RooAbsReal expression given in the 2nd; argument, allowing for an appropriate window definition for most; cases without need for a RooFormulaVar object: e.g. a Gaussian; resolution PDF do setConvolutionWindow(gaussMean,gaussSigma,5); Note that for a 'wide' Gaussian the -inf to +inf integration; may converge more quickly than that over a ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumConvPdf.cxx:1647,integrat,integration,1647,roofit/roofitcore/src/RooNumConvPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumConvPdf.cxx,2,['integrat'],"['integrated', 'integration']"
Integrability,"ith 32 bit instructions that give equivalent; /// results for the bits of the results that are used. There are two possible; /// reasons to do this.; ///; /// One reason is to avoid false-dependences on the upper portions; /// of the registers. Only instructions that have a destination register; /// which is not in any of the source registers can be affected by this.; /// Any instruction where one of the source registers is also the destination; /// register is unaffected, because it has a true dependence on the source; /// register already. So, this consideration primarily affects load; /// instructions and register-to-register moves. It would; /// seem like cmov(s) would also be affected, but because of the way cmov is; /// really implemented by most machines as reading both the destination and; /// and source registers, and then ""merging"" the two based on a condition,; /// it really already should be considered as having a true dependence on the; /// destination register as well.; ///; /// The other reason to do this is for potential code size savings. Word; /// operations need an extra override byte compared to their 32 bit; /// versions. So this can convert many word operations to their larger; /// size, saving a byte in encoding. This could introduce partial register; /// dependences where none existed however. As an example take:; /// orw ax, $0x1000; /// addw ax, $3; /// now if this were to get transformed into; /// orw ax, $1000; /// addl eax, $3; /// because the addl encodes shorter than the addw, this would introduce; /// a use of a register that was only partially written earlier. On older; /// Intel processors this can be quite a performance penalty, so this should; /// probably only be done when it can be proven that a new partial dependence; /// wouldn't be created, or when your know a newer processor is being; /// targeted, or when optimizing for minimum code size.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86FixupBWInsts.cpp:1863,depend,dependences,1863,interpreter/llvm-project/llvm/lib/Target/X86/X86FixupBWInsts.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86FixupBWInsts.cpp,2,['depend'],"['dependence', 'dependences']"
Integrability,"ject, which coordinates the integration; of a given choice of normalization. By default, RooRealIntegral will; perform an entirely numeric integration of all dependents. However,; PDFs can advertise one or more (partial) analytical integrals of; their function, and these will be used by RooRealIntegral, if it; determines that this is safe (i.e., no hidden Jacobian terms,; multiplication with other PDFs that have one or more dependents in; common, etc). #### Implementing analytical integrals; To implement analytical integrals, two functions must be implemented. First,. ```; Int_t getAnalyticalIntegral(const RooArgSet& integSet, RooArgSet& anaIntSet); ```; should return the analytical integrals that are supported. `integSet`; is the set of dependents for which integration is requested. The; function should copy the subset of dependents it can analytically; integrate to `anaIntSet`, and return a unique identification code for; this integration configuration. If no integration can be; performed, zero should be returned. Second,. ```; double analyticalIntegral(Int_t code); ```. implements the actual analytical integral(s) advertised by; `getAnalyticalIntegral()`. This function will only be called with; codes returned by `getAnalyticalIntegral()`, except code zero. The integration range for each dependent to be integrated can; be obtained from the dependent's proxy functions `min()` and; `max()`. Never call these proxy functions for any proxy not known to; be a dependent via the integration code. Doing so may be; ill-defined, e.g., in case the proxy holds a function, and will; trigger an assert. Integrated category dependents should always be; summed over all of their states. ### Direct generation of observables. Distributions for any PDF can be generated with the accept/reject method,; but for certain PDFs, more efficient methods may be implemented. To; implement direct generation of one or more observables, two; functions need to be implemented, similar to those for ana",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx:3664,integrat,integration,3664,roofit/roofitcore/src/RooAbsPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx,1,['integrat'],['integration']
Integrability,"ject: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; //////////////////////////////////////////////////////////////////////////////; /// \class RooSimWSTool; /// The RooSimWSTool is a tool operating on RooWorkspace objects that; /// can clone PDFs into a series of variations that are joined together; /// into a RooSimultaneous PDF.; ///; /// ## Splitting a single PDF; /// The simplest use case is to take a workspace PDF as prototype and; /// ""split"" a parameter of that PDF into two specialized parameters; /// depending on a category in the dataset.; ///; /// For example, given a Gaussian; /// PDF \f$ G(x \,|\, m,s) \f$ we want to construct a \f$ G_a(x \,|\, m_a,s) \f$ and a \f$ G_b(x \,|\, m_b,s) \f$; /// with different mean parameters to be fit to a dataset with observables; /// \f$ (x,c) \f$ where \f$ c \f$ is a category with states 'a' and 'b'.; ///; /// Using RooSimWSTool, one can create a simultaneous PDF from \f$ G_a \f$ and \f$ G_b \f$; /// from \f$ G \f$ with the following commands:; /// ```; /// RooSimWSTool wst(wspace);; /// wst.build(""G_sim"", ""G"", SplitParam(""m"",""c""));; /// ```; ///; /// #### Splitting using a product category; /// From this simple example one can go to builds of arbitrary complexity; /// by specifying multiple SplitParam arguments on multiple parameters; /// involving multiple splitting categories. Splits can also be performed; /// in the product of multiple categories, *i.e.*,; /// ```; /// ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimWSTool.cxx:1157,depend,depending,1157,roofit/roofitcore/src/RooSimWSTool.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimWSTool.cxx,1,['depend'],['depending']
Integrability,"kes no prediction on the expected number of events will result in error messages,; /// and the chi2 will fall back to the total data weight to scale the normalized pdf.; /// - There are cases where the fit **must** be done in extended mode. This happens for example when you have a RooAddPdf; /// where the coefficients represent component yields. If the fit is not extended, these coefficients will not be; /// well-defined, as the RooAddPdf always normalizes itself. If you pass `Extended(false)` in such a case, an error will be; /// printed and you'll most likely get garbage results.; /// <tr><td> `Range(const char* name)` <td> Fit only data inside range with given name; /// <tr><td> `Range(double lo, double hi)` <td> Fit only data inside given range. A range named ""fit"" is created on the fly on all observables.; /// Multiple comma separated range names can be specified.; /// <tr><td> `NumCPU(int num)` <td> Parallelize NLL calculation on num CPUs; /// <tr><td> `Optimize(bool flag)` <td> Activate constant term optimization (on by default); /// <tr><td> `IntegrateBins()` <td> Integrate PDF within each bin. This sets the desired precision.; ///; /// <tr><th> <th> Options to control flow of fit procedure; /// <tr><td> `InitialHesse(bool flag)` <td> Flag controls if HESSE before MIGRAD as well, off by default; /// <tr><td> `Hesse(bool flag)` <td> Flag controls if HESSE is run after MIGRAD, on by default; /// <tr><td> `Minos(bool flag)` <td> Flag controls if MINOS is run after HESSE, on by default; /// <tr><td> `Minos(const RooArgSet& set)` <td> Only run MINOS on given subset of arguments; /// <tr><td> `Save(bool flag)` <td> Flag controls if RooFitResult object is produced and returned, off by default; /// <tr><td> `Strategy(Int_t flag)` <td> Set Minuit strategy (0 through 2, default is 1); ///; /// <tr><th> <th> Options to control informational output; /// <tr><td> `Verbose(bool flag)` <td> Flag controls if verbose output is printed (NLL, parameter changes during fit; /// ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx:1985,Integrat,IntegrateBins,1985,roofit/roofitcore/src/RooAbsReal.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx,2,['Integrat'],"['Integrate', 'IntegrateBins']"
Integrability,"le RooTrace.cxx; \class RooTrace; \ingroup Roofitcore. Controls the memory tracing hooks in all RooFit; objects. When tracing is active, a table of live RooFit objects; is kept that can be queried at any time. In verbose mode, messages; are printed in addition at the construction and destruction of; each object. Usage example:; \code{.cpp}; void exampleRooTrace(); {; using namespace RooFit;. // Activate RooFit memory tracing; RooTrace::active(true);; ; // Construct gauss(x,m,s); RooRealVar x(""x"", ""x"", -10, 10);; RooRealVar m(""m"", ""m"", 0, -10, 10);; RooRealVar s(""s"", ""s"", 1, -10, 10);; RooGaussian gauss(""g"", ""g"", x, m, s);; ; // Show dump of all RooFit object in memory; RooTrace::dump();; ; // Activate verbose mode; RooTrace::verbose(true);; ; // Construct poly(x,p0); RooRealVar p0(""p0"", ""p0"", 0.01, 0., 1.);; RooPolynomial poly(""p"", ""p"", x, p0);; ; // Put marker in trace list for future reference; RooTrace::mark();; ; // Construct model = f*gauss(x) + (1-f)*poly(x); RooRealVar f(""f"", ""f"", 0.5, 0., 1.);; RooAddPdf model(""model"", ""model"", RooArgSet(gauss, poly), f);; ; // Show object added to memory since marker; RooTrace::printObjectCounts();; ; // Since verbose mode is still on, you will see messages; // pertaining to destructor calls of all RooFit objects; // made in this macro; //; // A call to RooTrace::dump() at the end of this macro; // should show that there a no RooFit object left in memory; }; \endcode. \note In the ROOT releases, the RooTrace is disabled at compile time and the; example above will not print any objects. If you are an advanced developer who; wants to use the RooTrace, you need to recompile ROOT after changing the; `TRACE_CREATE` and `TRACE_DESTROY` macros in RooTrace.h to call the RooTrace; functions:. \code{.cpp}; #define TRACE_CREATE RooTrace::create(this);; #define TRACE_DESTROY RooTrace::destroy(this);; \endcode. However, as ROOT is not build with this by default, the RooTrace is not tested; and there is no guarantee that this works.; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTrace.cxx:1913,message,messages,1913,roofit/roofitcore/src/RooTrace.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTrace.cxx,1,['message'],['messages']
Integrability,"le is a generalization of the on/off problem.; ##; ## This example is a generalization of the on/off problem.; ## It's a common setup for SUSY searches. Imagine that one has two; ## variables ""x"" and ""y"" (eg. missing ET and SumET), see figure.; ## The signal region has high values of both of these variables (top right).; ## One can see low values of ""x"" or ""y"" acting as side-bands. If we; ## just used ""y"" as a sideband, we would have the on/off problem.; ## - In the signal region we observe non events and expect s+b events.; ## - In the region with low values of ""y"" (bottom right); ## we observe noff events and expect tau*b events.; ## Note the significance of tau. In the background only case:; ##; ## ~~~{.cpp}; ## tau ~ <expectation off> / <expectation on>; ## ~~~; ##; ## If tau is known, this model is sufficient, but often tau is not known exactly.; ## So one can use low values of ""x"" as an additional constraint for tau.; ## Note that this technique critically depends on the notion that the; ## joint distribution for ""x"" and ""y"" can be factorized.; ## Generally, these regions have many events, so it the ratio can be; ## measured very precisely there. So we extend the model to describe the; ## left two boxes... denoted with ""bar"".; ## - In the upper left we observe nonbar events and expect bbar events; ## - In the bottom left we observe noffbar events and expect tau bbar events; ## Note again we have:; ##; ## ~~~{.cpp}; ## tau ~ <expectation off bar> / <expectation on bar>; ## ~~~; ##; ## One can further expand the model to account for the systematic associated; ## to assuming the distribution of ""x"" and ""y"" factorizes (eg. that; ## tau is the same for off/on and offbar/onbar). This can be done in several; ## ways, but here we introduce an additional parameter rho, which so that; ## one set of models will use tau and the other tau*rho. The choice is arbitrary,; ## but it has consequences on the numerical stability of the algorithms.; ## The ""bar"" measurements typica",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/FourBinInstructional.py:1045,depend,depends,1045,tutorials/roostats/FourBinInstructional.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/FourBinInstructional.py,1,['depend'],['depends']
Integrability,"lity fitting problems.; <b>The preferred way to compute numeric convolutions is RooFFTConvPdf</b>,; which calculates convolutions using Fourier Transforms (requires external free; FFTW3 package); RooNumConvPdf implements reasonable defaults that should convolve most; functions reasonably well, but results strongly depend on the shape of your; input PDFS so always check your result.; The default integration engine for the numeric convolution is the; adaptive Gauss-Kronrod method, which empirically seems the most robust; for this task. You can override the convolution integration settings via; the RooNumIntConfig object reference returned by the convIntConfig() member; function; By default the numeric convolution is integrated from -infinity to; +infinity through a <pre>x -> 1/x</pre> coordinate transformation of the; tails. For convolution with a very small bandwidth it may be; advantageous (for both CPU consumption and stability) if the; integration domain is limited to a finite range. The function; setConvolutionWindow(mean,width,scale) allows to set a sliding; window around the x value to be calculated taking a RooAbsReal; expression for an offset and a width to be taken around the x; value. These input expression can be RooFormulaVars or other; function objects although the 3d 'scale' argument 'scale'; multiplies the width RooAbsReal expression given in the 2nd; argument, allowing for an appropriate window definition for most; cases without need for a RooFormulaVar object: e.g. a Gaussian; resolution PDF do setConvolutionWindow(gaussMean,gaussSigma,5); Note that for a 'wide' Gaussian the -inf to +inf integration; may converge more quickly than that over a finite range!; The default numeric precision is 1e-7, i.e. the global default for; numeric integration but you should experiment with this value to; see if it is sufficient for example by studying the number of function; calls that MINUIT needs to fit your function as function of the; convolution precision.; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumConvPdf.cxx:2705,integrat,integration,2705,roofit/roofitcore/src/RooNumConvPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumConvPdf.cxx,2,['integrat'],['integration']
Integrability,"lling certain cost; /// metrics.; ///; /// The number is split into a signed scale and unsigned digits. The number; /// represented is \c getDigits()*2^getScale(). In this way, the digits are; /// much like the mantissa in the x87 long double, but there is no canonical; /// form so the same number can be represented by many bit representations.; ///; /// ScaledNumber is templated on the underlying integer type for digits, which; /// is expected to be unsigned.; ///; /// Unlike APFloat, ScaledNumber does not model architecture floating point; /// behaviour -- while this might make it a little faster and easier to reason; /// about, it certainly makes it more dangerous for general numerics.; ///; /// ScaledNumber is totally ordered. However, there is no canonical form, so; /// there are multiple representations of most scalars. E.g.:; ///; /// ScaledNumber(8u, 0) == ScaledNumber(4u, 1); /// ScaledNumber(4u, 1) == ScaledNumber(2u, 2); /// ScaledNumber(2u, 2) == ScaledNumber(1u, 3); ///; /// ScaledNumber implements most arithmetic operations. Precision is kept; /// where possible. Uses simple saturation arithmetic, so that operations; /// saturate to 0.0 or getLargest() rather than under or overflowing. It has; /// some extra arithmetic for unit inversion. 0.0/0.0 is defined to be 0.0.; /// Any other division by 0.0 is defined to be getLargest().; ///; /// As a convenience for modifying the exponent, left and right shifting are; /// both implemented, and both interpret negative shifts as positive shifts in; /// the opposite direction.; ///; /// Scales are limited to the range accepted by x87 long double. This makes; /// it trivial to add functionality to convert to APFloat (this is already; /// relied on for the implementation of printing).; ///; /// Possible (and conflicting) future directions:; ///; /// 1. Turn this into a wrapper around \a APFloat.; /// 2. Share the algorithm implementations with \a APFloat.; /// 3. Allow \a ScaledNumber to represent a signed number.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/ScaledNumber.h:2278,wrap,wrapper,2278,interpreter/llvm-project/llvm/include/llvm/Support/ScaledNumber.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/ScaledNumber.h,1,['wrap'],['wrapper']
Integrability,"lowing pattern:; // (SExt/ZExt ix (Trunc iy (%SymbolicPHI) to ix) to iy) + InvariantAccum; // which correspond to a phi->trunc->sext/zext->add->phi update chain.; // If so, try to see if it can be rewritten as an AddRecExpr under some; // Predicates. If successful, return them as a pair. Also cache the results; // of the analysis.; //; // Example usage scenario:; // Say the Rewriter is called for the following SCEV:; // 8 * ((sext i32 (trunc i64 %X to i32) to i64) + %Step); // where:; // %X = phi i64 (%Start, %BEValue); // It will visitMul->visitAdd->visitSExt->visitTrunc->visitUnknown(%X),; // and call this function with %SymbolicPHI = %X.; //; // The analysis will find that the value coming around the backedge has; // the following SCEV:; // BEValue = ((sext i32 (trunc i64 %X to i32) to i64) + %Step); // Upon concluding that this matches the desired pattern, the function; // will return the pair {NewAddRec, SmallPredsVec} where:; // NewAddRec = {%Start,+,%Step}; // SmallPredsVec = {P1, P2, P3} as follows:; // P1(WrapPred): AR: {trunc(%Start),+,(trunc %Step)}<nsw> Flags: <nssw>; // P2(EqualPred): %Start == (sext i32 (trunc i64 %Start to i32) to i64); // P3(EqualPred): %Step == (sext i32 (trunc i64 %Step to i32) to i64); // The returned pair means that SymbolicPHI can be rewritten into NewAddRec; // under the predicates {P1,P2,P3}.; // This predicated rewrite will be cached in PredicatedSCEVRewrites:; // PredicatedSCEVRewrites[{%X,L}] = {NewAddRec, {P1,P2,P3)}; //; // TODO's:; //; // 1) Extend the Induction descriptor to also support inductions that involve; // casts: When needed (namely, when we are called in the context of the; // vectorizer induction analysis), a Set of cast instructions will be; // populated by this method, and provided back to isInductionPHI. This is; // needed to allow the vectorizer to properly record them to be ignored by; // the cost model and to avoid vectorizing them (otherwise these casts,; // which are redundant under the runtime overflo",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/ScalarEvolution.cpp:1159,Wrap,WrapPred,1159,interpreter/llvm-project/llvm/lib/Analysis/ScalarEvolution.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/ScalarEvolution.cpp,1,['Wrap'],['WrapPred']
Integrability,"ly as numeric convolution is computing; intensive and prone to stability fitting problems. If an analytic convolution; can be calculated, you should use that or implement it if not available.; RooNumConvolution implements reasonable defaults that should convolve most; functions reasonably well, but results strongly depend on the shape of your; input PDFS so always check your result. The default integration engine for the numeric convolution is the; adaptive Gauss-Kronrod method, which empirically seems the most robust; for this task. You can override the convolution integration settings via; the RooNumIntConfig object reference returned by the convIntConfig() member; function; By default the numeric convolution is integrated from -infinity to; +infinity through a <pre>x -> 1/x</pre> coordinate transformation of the; tails. For convolution with a very small bandwidth it may be; advantageous (for both CPU consumption and stability) if the; integration domain is limited to a finite range. The function; setConvolutionWindow(mean,width,scale) allows to set a sliding; window around the x value to be calculated taking a RooAbsReal; expression for an offset and a width to be taken around the x; value. These input expression can be RooFormulaVars or other; function objects although the 3d 'scale' argument 'scale'; multiplies the width RooAbsReal expression given in the 2nd; argument, allowing for an appropriate window definition for most; cases without need for a RooFormulaVar object: e.g. a Gaussian; resolution PDF do setConvolutionWindow(gaussMean,gaussSigma,5); Note that for a 'wide' Gaussian the -inf to +inf integration; may converge more quickly than that over a finite range!; The default numeric precision is 1e-7, i.e. the global default for; numeric integration but you should experiment with this value to; see if it is sufficient for example by studying the number of function; calls that MINUIT needs to fit your function as function of the; convolution precision.; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumConvolution.cxx:2543,integrat,integration,2543,roofit/roofitcore/src/RooNumConvolution.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumConvolution.cxx,2,['integrat'],['integration']
Integrability,"m.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This tblgen backend emits the node table (the .def file) for Clang; // type nodes.; //; // This file defines the AST type info database. Each type node is; // enumerated by providing its name (e.g., ""Builtin"" or ""Enum"") and; // base class (e.g., ""Type"" or ""TagType""). Depending on where in the; // abstract syntax tree the type will show up, the enumeration uses; // one of five different macros:; //; // TYPE(Class, Base) - A type that can show up anywhere in the AST,; // and might be dependent, canonical, or non-canonical. All clients; // will need to understand these types.; //; // ABSTRACT_TYPE(Class, Base) - An abstract class that shows up in; // the type hierarchy but has no concrete instances.; //; // NON_CANONICAL_TYPE(Class, Base) - A type that can show up; // anywhere in the AST but will never be a part of a canonical; // type. Clients that only need to deal with canonical types; // (ignoring, e.g., typedefs and other type aliases used for; // pretty-printing) can ignore these types.; //; // DEPENDENT_TYPE(Class, Base) - A type that will only show up; // within a C++ template that has not been instantiated, e.g., a; // type that is always dependent. Clients that do not need to deal; // with uninstantiated C++ templates can ignore these types.; //; // NON_CANONICAL_UNLESS_DEPENDENT_TYPE(Class, Base) - A type that; // is non-canonical unless it is dependent. Defaults to TYPE because; // it is neither reliably dependent nor reliably non-canonical.; //; // There is a sixth macro, independent of the others. Most clients; // will not need to use it.; //; // LEAF_TYPE(Class) - A type that never has inner types. Clients; // which can operate on such types more efficiently may wish to do so.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/TableGen/ClangTypeNodesEmitter.cpp:1546,depend,dependent,1546,interpreter/llvm-project/clang/utils/TableGen/ClangTypeNodesEmitter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/TableGen/ClangTypeNodesEmitter.cpp,3,['depend'],['dependent']
Integrability,"memory.; ///; /// ret = __kmpc_nvptx_teams_reduce_nowait(...,; /// reduceData, shuffleReduceFn, interWarpCpyFn,; /// scratchpadCopyFn, loadAndReduceFn); ///; /// 'scratchpadCopyFn' is a helper that stores reduced; /// data from the team master to a scratchpad array in; /// global memory.; ///; /// 'loadAndReduceFn' is a helper that loads data from; /// the scratchpad array and reduces it with the input; /// operand.; ///; /// These compiler generated functions hide address; /// calculation and alignment information from the runtime.; /// 5. if ret == 1:; /// The team master of the last team stores the reduced; /// result to the globals in memory.; /// foo += reduceData.foo; bar *= reduceData.bar; ///; ///; /// Warp Reduction Algorithms; ///; /// On the warp level, we have three algorithms implemented in the; /// OpenMP runtime depending on the number of active lanes:; ///; /// Full Warp Reduction; ///; /// The reduce algorithm within a warp where all lanes are active; /// is implemented in the runtime as follows:; ///; /// full_warp_reduce(void *reduce_data,; /// kmp_ShuffleReductFctPtr ShuffleReduceFn) {; /// for (int offset = WARPSIZE/2; offset > 0; offset /= 2); /// ShuffleReduceFn(reduce_data, 0, offset, 0);; /// }; ///; /// The algorithm completes in log(2, WARPSIZE) steps.; ///; /// 'ShuffleReduceFn' is used here with lane_id set to 0 because it is; /// not used therefore we save instructions by not retrieving lane_id; /// from the corresponding special registers. The 4th parameter, which; /// represents the version of the algorithm being used, is set to 0 to; /// signify full warp reduction.; ///; /// In this version, 'ShuffleReduceFn' behaves, per element, as follows:; ///; /// #reduce_elem refers to an element in the local lane's data structure; /// #remote_elem is retrieved from a remote lane; /// remote_elem = shuffle_down(reduce_elem, offset, WARPSIZE);; /// reduce_elem = reduce_elem REDUCE_OP remote_elem;; ///; /// Contiguous Partial Warp Reduction; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntimeGPU.cpp:4689,depend,depending,4689,interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntimeGPU.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntimeGPU.cpp,1,['depend'],['depending']
Integrability,"meters; // ====================================; // The current implementation supports date, time, date&time and timestamp; // data (all time intervals are not supported yet). To set or get date/time values,; // the following methods should be used:; // SetTime()/GetTime() - only time (hour:min:sec),; // SetDate()/GetDate() - only date (year-month-day),; // SetDatime()/GetDatime() - date and time; // SetTimestamp()/GetTimestamp() - timestamp with seconds fraction; // For some of these methods TDatime type can be used as parameter / return value.; // Be aware that TDatime supports only dates after 1995-01-01.; // There are also methods to get year, month, day, hour, minutes and seconds separately.; //; // Note that different SQL databases treat date/time types differently.; // For instance, MySQL has all correspondent types (TIME, DATE, DATETIME and TIMESTAMP),; // Oracle native driver supports only DATE (which is actually date and time) and TIMESTAMP; // ODBC interface provides access for time, date and timestamps,; // for PostgreSQL, TIMESTAMP is available and can be retrieved via all methods,; // the implementation for SQLite interprets the column content as; // a timestamp with second fraction.; // Due to these differences, one should use correct methods to access such data.; // For instance, in MySQL SQL type 'DATE' is only date (one should use GetDate() to; // access such data), while in Oracle it is date and time. Therefore,; // to get complete data from a 'DATE' column in Oracle, one should use the GetDatime() method.; //; // The only difference between timestamp and date/time is that timestamp has a fractional; // seconds part. Be aware that the fractional part has different meanings; // (actual value) in different SQL plugins.; // For PostgreSQL, it is given back as microseconds, while for SQLite3,; // milliseconds correspond to the fraction (similar to the DATETIME-functions; // implemented in the SQLite3 language).; //; // 5. Binary data; // ============",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TSQLStatement.cxx:9661,interface,interface,9661,net/net/src/TSQLStatement.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TSQLStatement.cxx,1,['interface'],['interface']
Integrability,"minator) are out of CanonicalLoopInfo's control and may have; /// side-effects. Typically, the Preheader is used to compute the loop's trip; /// count. The instructions from BodyIP (at the Body block's first instruction,; /// excluding) until the Latch are also considered outside CanonicalLoopInfo's; /// control and thus can have side-effects. The body block is the single entry; /// point into the loop body, which may contain arbitrary control flow as long; /// as all control paths eventually branch to the Latch block.; ///; /// TODO: Consider adding another standardized BasicBlock between Body CFG and; /// Latch to guarantee that there is only a single edge to the latch. It would; /// make loop transformations easier to not needing to consider multiple; /// predecessors of the latch (See redirectAllPredecessorsTo) and would give us; /// an equivalant to PreheaderIP, AfterIP and BodyIP for inserting code that; /// executes after each body iteration.; ///; /// There must be no loop-carried dependencies through llvm::Values. This is; /// equivalant to that the Latch has no PHINode and the Header's only PHINode is; /// for the induction variable.; ///; /// All code in Header, Cond, Latch and Exit (plus the terminator of the; /// Preheader) are CanonicalLoopInfo's responsibility and their build-up checked; /// by assertOK(). They are expected to not be modified unless explicitly; /// modifying the CanonicalLoopInfo through a methods that applies a OpenMP; /// loop-associated construct such as applyWorkshareLoop, tileLoops, unrollLoop,; /// etc. These methods usually invalidate the CanonicalLoopInfo and re-use its; /// basic blocks. After invalidation, the CanonicalLoopInfo must not be used; /// anymore as its underlying control flow may not exist anymore.; /// Loop-transformation methods such as tileLoops, collapseLoops and unrollLoop; /// may also return a new CanonicalLoopInfo that can be passed to other; /// loop-associated construct implementing methods. These loop-t",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Frontend/OpenMP/OMPIRBuilder.h:2771,depend,dependencies,2771,interpreter/llvm-project/llvm/include/llvm/Frontend/OpenMP/OMPIRBuilder.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Frontend/OpenMP/OMPIRBuilder.h,1,['depend'],['dependencies']
Integrability,"mple of the data, for which the dependent quantity (e.g., momentum); and the independent observations are known. The function can then be; used to compute the quantity of interest for new observations of the; independent variables. This class <TT>TMultiDimFit</TT> implements such a procedure in; ROOT. It is largely based on the CERNLIB MUDIFI package [2].; Though the basic concepts are still sound, and; therefore kept, a few implementation details have changed, and this; class can take advantage of MINUIT [4] to improve the errors; of the fitting, thanks to the class TMinuit. In [5] and [6] H. Wind demonstrates the utility; of this procedure in the context of tracking, magnetic field; parameterisation, and so on. The outline of the method used in this; class is based on Winds discussion, and I refer these two excellents; text for more information. And example of usage is given in multidimfit.C. ## The Method; Let \f$ D \f$ by the dependent quantity of interest, which depends smoothly; on the observable quantities \f$ x_1, \ldots, x_N \f$ which we'll denote by; \f$\mathbf{x}\f$. Given a training sample of \f$ M\f$ tuples of the form, (TMultiDimFit::AddRow). \f[; \left(\mathbf{x}_j, D_j, E_j\right)\quad,; \f]; where \f$\mathbf{x}_j = (x_{1,j},\ldots,x_{N,j})\f$ are \f$ N\f$ independent; variables, \f$ D_j\f$ is the known, quantity dependent at \f$\mathbf{x}_j\f$ and \f$ E_j\f$ is; the square error in \f$ D_j\f$, the class will try to find the parameterization; \f[; D_p(\mathbf{x}) = \sum_{l=1}^{L} c_l \prod_{i=1}^{N} p_{li}\left(x_i\right); = \sum_{l=1}^{L} c_l F_l(\mathbf{x}); \f]; such that. \f[; S \equiv \sum_{j=1}^{M} \left(D_j - D_p\left(\mathbf{x}_j\right)\right)^2; \f]; is minimal. Here \f$p_{li}(x_i)\f$ are monomials, or Chebyshev or Legendre; polynomials, labelled \f$l = 1, \ldots, L\f$, in each variable \f$ x_i\f$,\f$ i=1, \ldots, N\f$. So what TMultiDimFit does, is to determine the number of terms \f$ L\f$, and then \f$ L\f$ terms; (or functions) \f$ F_l\f$,",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TMultiDimFit.cxx:2054,depend,dependent,2054,hist/hist/src/TMultiDimFit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TMultiDimFit.cxx,2,['depend'],"['dependent', 'depends']"
Integrability,"mplete //; // the name of a global object. (it is supported when trying to //; // complete a member of a global object) //; // //; // 7. the list of #pragma's is hardcoded //; // (ie not obtained from the interpreter at runtime) //; // ==> user-defined #pragma's will not be recognized //; // //; // 8. the system include directories are also hardcoded //; // because i don't know how to get them from the interpreter. //; // fons, maybe they should be #ifdef'd for the different sytems? //; // //; // 9. the TabCom.FileIgnore resource is always applied, even if you //; // are not trying to complete a filename. //; // //; // 10. anything in quotes is assumed to be a filename //; // so (among other things) you can't complete a quoted class name: //; // eg, TClass class1( ""TDict[TAB] //; // this won't work... looks for a file in pwd starting with TDict //; // //; // 11. the prototypes tend to omit the word ""const"" a lot. //; // this is a problem with ROOT or CINT. //; // //; // 12. when listing ambiguous matches, only one column is used, //; // even if there are many completions. //; // //; // 13. anonymous objects are not currently identified //; // so, for example, //; // //; // root> printf( TString([TAB //; // //; // gives an error message instead of listing TString's constructors. //; // (this could be fixed) //; // //; // 14. the routine that adds the ""appendage"" isn't smart enough to know //; // if it's already there: //; // //; // root> TCanvas::Update() //; // press [TAB] here ^ //; // root> TCanvas::Update()() //; // (this could be fixed) //; // //; // 15. the appendage is only applied if there is exactly 1 match. //; // eg, this //; // //; // root> G__at[TAB] //; // root> G__ateval //; // //; // happens instead of this //; // //; // root> G__at[TAB] //; // root> G__ateval( //; // //; // because there are several overloaded versions of G__ateval(). //; // (this could be fixed) //; // //; ////////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TTabCom.cxx:3542,message,message,3542,core/rint/src/TTabCom.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TTabCom.cxx,2,"['message', 'rout']","['message', 'routine']"
Integrability,"multiple pass managers. They are; // PassManager, FunctionPassManager, MPPassManager, FPPassManager, BBPassManager.; // This class hierarchy uses multiple inheritance but pass managers do not; // derive from another pass manager.; //; // PassManager and FunctionPassManager are two top-level pass manager that; // represents the external interface of this entire pass manager infrastucture.; //; // Important classes :; //; // [o] class PMTopLevelManager;; //; // Two top level managers, PassManager and FunctionPassManager, derive from; // PMTopLevelManager. PMTopLevelManager manages information used by top level; // managers such as last user info.; //; // [o] class PMDataManager;; //; // PMDataManager manages information, e.g. list of available analysis info,; // used by a pass manager to manage execution order of passes. It also provides; // a place to implement common pass manager APIs. All pass managers derive from; // PMDataManager.; //; // [o] class FunctionPassManager;; //; // This is a external interface used to manage FunctionPasses. This; // interface relies on FunctionPassManagerImpl to do all the tasks.; //; // [o] class FunctionPassManagerImpl : public ModulePass, PMDataManager,; // public PMTopLevelManager;; //; // FunctionPassManagerImpl is a top level manager. It manages FPPassManagers; //; // [o] class FPPassManager : public ModulePass, public PMDataManager;; //; // FPPassManager manages FunctionPasses and BBPassManagers; //; // [o] class MPPassManager : public Pass, public PMDataManager;; //; // MPPassManager manages ModulePasses and FPPassManagers; //; // [o] class PassManager;; //; // This is a external interface used by various tools to manages passes. It; // relies on PassManagerImpl to do all the tasks.; //; // [o] class PassManagerImpl : public Pass, public PMDataManager,; // public PMTopLevelManager; //; // PassManagerImpl is a top level pass manager responsible for managing; // MPPassManagers.; //===----------------------------------------------",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/LegacyPassManagers.h:1528,interface,interface,1528,interpreter/llvm-project/llvm/include/llvm/IR/LegacyPassManagers.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/LegacyPassManagers.h,1,['interface'],['interface']
Integrability,"n LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; * \class RooBinSamplingPdf; * The RooBinSamplingPdf is supposed to be used as an adapter between a continuous PDF; * and a binned distribution.; * When RooFit is used to fit binned data, and the PDF is continuous, it takes the probability density; * at the bin centre as a proxy for the probability averaged (integrated) over the entire bin. This is; * correct only if the second derivative of the function vanishes, though. This is shown in the plots; * below.; *; * For PDFs that have larger curvatures, the RooBinSamplingPdf can be used. It integrates the PDF in each; * bin using an adaptive integrator. This usually requires 21 times more function evaluations, but significantly; * reduces biases due to better sampling of the PDF. The integrator can be accessed from the outside; * using integrator(). This can be used to change the integration rules, so less/more function evaluations are; * performed. The target precision of the integrator can be set in the constructor.; *; *; * ### How to use it; * There are two ways to use this class:; * - Manually wrap a PDF:; * ```; * RooBinSamplingPdf binSampler(""<name>"", ""title"", <binned observable of PDF>, <original PDF> [, <precision for integrator>]);; * binSampler.fitTo(data);; * ```; * When a PDF is wrapped with a RooBinSamplingPDF, just use the bin sampling PDF instead of the original one for fits; * or plotting etc.; * \note The binning will be taken from the observable. Make sure that this binning is the same as the one of the dataset that should be fit.; * Use RooRealVar::setBinning() to adapt it.; * - Instruct test statistics to carry out this wrapping automatically:; * ```; * pdf.fitTo(data, IntegrateBins(<precision>));; * ```; * This method is especially useful when used with a simultaneous PDF, since each component will automatically be wrapped,; * depending on the value of `prec",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooBinSamplingPdf.cxx:1557,integrat,integration,1557,roofit/roofitcore/src/RooBinSamplingPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooBinSamplingPdf.cxx,1,['integrat'],['integration']
Integrability,"n in X. The displayed error is by default the; standard error on the mean (i.e. the standard deviation divided by the sqrt(n) ).; Profile histograms are in many cases an; elegant replacement of two-dimensional histograms. The inter-relation of two; measured quantities X and Y can always be visualized by a two-dimensional; histogram or scatter plot, but if Y is an unknown (but single-valued); approximate function of X, this function is displayed by a profile histogram with; much better precision than by a scatter plot. The following formulae show the cumulated contents (capital letters) and the values; displayed by the printing or plotting routines (small letters) of the elements for bin j.; \f[; \begin{align}; H(j) &= \sum w \cdot Y \\; E(j) &= \sum w \cdot Y^2 \\; W(j) &= \sum w & &\text{if weights different from 1, the number of bin effective entries is used} \\; h(j) &= H(j) / W(j) & &\text{mean of Y,} \\; s(j) &= \sqrt{E(j)/W(j)- h(j)^2} & &\text{standard deviation of Y} \\; e(j) &= s(j)/\sqrt{W(j)} & &\text{standard error on the mean} \\; \end{align}; \f]; The bin content is always the mean of the Y values, but errors change depending on options:; \f[; \begin{align}; \text{GetBinContent}(j) &= h(j) \\; \text{GetBinError}(j) &=; \begin{cases}; e(j) &\text{if option="""" (default). Error of the mean of all y values.} \\; s(j) &\text{if option=""s"". Standard deviation of all y values.} \\; \begin{cases} e(j) &\text{if } h(j) \ne 0 \\ 1/\sqrt{12 N} &\text{if } h(j)=0 \end{cases} &\text{if option=""i"". This is useful for storing integers such as ADC counts.} \\; 1/\sqrt{W(j)} &\text{if option=""g"". Error of a weighted mean for combining measurements with variances of } w. \\; \end{cases}; \end{align}; \f]; In the special case where s(j) is zero (eg, case of 1 entry only in one bin); the bin error e(j) is computed from the average of the s(j) for all bins if; the static function TProfile::Approximate() has been called.; This simple/crude approximation was suggested in orde",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TProfile.cxx:1295,depend,depending,1295,hist/hist/src/TProfile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TProfile.cxx,1,['depend'],['depending']
Integrability,"n source and binary forms, with or without; * modification, are permitted provided that the following conditions are; * met:; *; * * Redistributions of source code must retain the above copyright; * notice, this list of conditions and the following disclaimer.; * * Redistributions in binary form must reproduce the above; * copyright notice, this list of conditions and the following disclaimer; * in the documentation and/or other materials provided with the; * distribution.; *; * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS; * ""AS IS"" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT; * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR; * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT; * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,; * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT; * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,; * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY; * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT; * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE; * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.; *; * You can contact the author at:; * - xxHash homepage: https://www.xxhash.com; * - xxHash source repository: https://github.com/Cyan4973/xxHash; */; /* TODO: update */; /* Notice extracted from xxHash homepage:. xxHash is an extremely fast hash algorithm, running at RAM speed limits.; It also successfully passes all tests from the SMHasher suite. Comparison (single thread, Windows Seven 32 bits, using SMHasher on a Core 2 Duo @3GHz). Name Speed Q.Score Author; xxHash 5.4 GB/s 10; CrapWow 3.2 GB/s 2 Andrew; MumurHash 3a 2.7 GB/s 10 Austin Appleby; SpookyHash 2.0 GB/s 10 Bob Jenkins; SBox 1.4 GB/s 9 Bret Mulvey; Lookup3 1.2 GB/s 9 Bob Jenkins; SuperFastHash 1.2 GB/s 1 Paul Hsieh; CityHash64 1.05 GB/s 10 Pike & Alakuijala",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:1298,CONTRACT,CONTRACT,1298,builtins/xxhash/xxhash.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h,1,['CONTRACT'],['CONTRACT']
Integrability,"n the; /// ascii files to be read.; /// Each line in the ascii file should contain N white-space separated; /// tokens, with N the number of args in `varList`. Any text beyond; /// N tokens will be ignored with a warning message.; /// (NB: This is the default output of RooArgList::writeToStream()); ///; /// \param verbOpt `Q` be quiet, `D` debug mode (verbose); ///; /// \param commonPath All filenames in `fileList` will be prefixed with this optional path.; ///; /// \param indexCatName Interpret the data as belonging to category `indexCatName`.; /// When multiple files are read, a RooCategory arg in `varList` can; /// optionally be designated to hold information about the source file; /// of each data point. This feature is enabled by giving the name; /// of the (already existing) category variable in `indexCatName`.; ///; /// \attention If the value of any of the variables on a given line exceeds the; /// fit range associated with that dimension, the entire line will be; /// ignored. A warning message is printed in each case, unless the; /// `Q` verbose option is given. The number of events read and skipped; /// is always summarized at the end.; ///; /// If no further information is given a label name 'fileNNN' will; /// be assigned to each event, where NNN is the sequential number of; /// the source file in `fileList`.; ///; /// Alternatively, it is possible to override the default label names; /// of the index category by specifying them in the fileList string:; /// When instead of `file1.txt,file2.txt` the string; /// `file1.txt:FOO,file2.txt:BAR` is specified, a state named ""FOO""; /// is assigned to the index category for each event originating from; /// file1.txt. The labels FOO,BAR may be predefined in the index; /// category via defineType(), but don't have to be.; ///; /// Finally, one can also assign the same label to multiple files,; /// either by specifying `file1.txt:FOO,file2,txt:FOO,file3.txt:BAR`; /// or `file1.txt,file2.txt:FOO,file3.txt:BAR`.; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx:1500,message,message,1500,roofit/roofitcore/src/RooDataSet.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx,1,['message'],['message']
Integrability,"n to provide; /// more precise answers to certain TTI queries, while letting the target; /// independent and default TTI implementations handle the rest.; ///; //===----------------------------------------------------------------------===//; /// About Cost Model numbers used below it's necessary to say the following:; /// the numbers correspond to some ""generic"" X86 CPU instead of usage of a; /// specific CPU model. Usually the numbers correspond to the CPU where the; /// feature first appeared. For example, if we do Subtarget.hasSSE42() in; /// the lookups below the cost is based on Nehalem as that was the first CPU; /// to support that feature level and thus has most likely the worst case cost,; /// although we may discard an outlying worst cost from one CPU (e.g. Atom).; ///; /// Some examples of other technologies/CPUs:; /// SSE 3 - Pentium4 / Athlon64; /// SSE 4.1 - Penryn; /// SSE 4.2 - Nehalem / Silvermont; /// AVX - Sandy Bridge / Jaguar / Bulldozer; /// AVX2 - Haswell / Ryzen; /// AVX-512 - Xeon Phi / Skylake; ///; /// And some examples of instruction target dependent costs (latency); /// divss sqrtss rsqrtss; /// AMD K7 11-16 19 3; /// Piledriver 9-24 13-15 5; /// Jaguar 14 16 2; /// Pentium II,III 18 30 2; /// Nehalem 7-14 7-18 3; /// Haswell 10-13 11 5; ///; /// Interpreting the 4 TargetCostKind types:; /// TCK_RecipThroughput and TCK_Latency should try to match the worst case; /// values reported by the CPU scheduler models (and llvm-mca).; /// TCK_CodeSize should match the instruction count (e.g. divss = 1), NOT the; /// actual encoding size of the instruction.; /// TCK_SizeAndLatency should match the worst case micro-op counts reported by; /// by the CPU scheduler models (and llvm-mca), to ensure that they are; /// compatible with the MicroOpBufferSize and LoopMicroOpBufferSize values which are; /// often used as the cost thresholds where TCK_SizeAndLatency is requested.; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86TargetTransformInfo.cpp:1473,Bridg,Bridge,1473,interpreter/llvm-project/llvm/lib/Target/X86/X86TargetTransformInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86TargetTransformInfo.cpp,2,"['Bridg', 'depend']","['Bridge', 'dependent']"
Integrability,"n will work inside any buffer; * which size is >= LZ4_DECOMPRESS_INPLACE_BUFFER_SIZE(decompressedSize).; * This presumes that decompressedSize > compressedSize.; * Otherwise, it means compression actually expanded data,; * and it would be more efficient to store such data with a flag indicating it's not compressed.; * This can happen when data is not compressible (already compressed, or encrypted).; *; * For in-place compression, margin is larger, as it must be able to cope with both; * history preservation, requiring input data to remain unmodified up to LZ4_DISTANCE_MAX,; * and data expansion, which can happen when input is not compressible.; * As a consequence, buffer size requirements are much higher,; * and memory savings offered by in-place compression are more limited.; *; * There are ways to limit this cost for compression :; * - Reduce history size, by modifying LZ4_DISTANCE_MAX.; * Note that it is a compile-time constant, so all compressions will apply this limit.; * Lower values will reduce compression ratio, except when input_size < LZ4_DISTANCE_MAX,; * so it's a reasonable trick when inputs are known to be small.; * - Require the compressor to deliver a ""maximum compressed size"".; * This is the `dstCapacity` parameter in `LZ4_compress*()`.; * When this size is < LZ4_COMPRESSBOUND(inputSize), then compression can fail,; * in which case, the return code will be 0 (zero).; * The caller must be ready for these cases to happen,; * and typically design a backup scheme to send data uncompressed.; * The combination of both techniques can significantly reduce; * the amount of margin required for in-place compression.; *; * In-place compression can work in any buffer; * which size is >= (maxCompressedSize); * with maxCompressedSize == LZ4_COMPRESSBOUND(srcSize) for guaranteed compression success.; * LZ4_COMPRESS_INPLACE_BUFFER_SIZE() depends on both maxCompressedSize and LZ4_DISTANCE_MAX,; * so it's possible to reduce memory requirements by playing with them.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h:2576,depend,depends,2576,builtins/lz4/lz4.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h,1,['depend'],['depends']
Integrability,"n) any later version. This library is distributed in the hope that it will be useful,; but WITHOUT ANY WARRANTY; without even the implied warranty of; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU; Library General Public License for more details. You should have received a copy of the GNU Library General Public; License along with this library; if not, write to the Free; Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA. Please send remarks, questions and bug reports to laurencebourn@hotmail.com; */; /*; SOLID - Software Library for Interference Detection; Copyright (C) 1997-1998 Gino van den Bergen. This library is free software; you can redistribute it and/or; modify it under the terms of the GNU Library General Public; License as published by the Free Software Foundation; either; version 2 of the License, or (at your option) any later version. This library is distributed in the hope that it will be useful,; but WITHOUT ANY WARRANTY; without even the implied warranty of; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU; Library General Public License for more details. You should have received a copy of the GNU Library General Public; License along with this library; if not, write to the Free; Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA. Please send remarks, questions and bug reports to gino@win.tue.nl,; or write to:; Gino van den Bergen; Department of Mathematics and Computing Science; Eindhoven University of Technology; P.O. Box 513, 5600 MB Eindhoven, The Netherlands; */; /*; This file contains compressed version of CSGSolid and SOLID.; All stuff is in RootCsg namespace,; I used ROOT's own typedefs and math functions, removed resulting triangulation; (I use OpenGL's inner implementation), changed names from MT_xxx CSG_xxx; to more natural etc.; Interface to CSGSolid :; ConvertToMesh(to convert TBuffer3D to mesh); BuildUnion; BuildIntersection; BuildDifference. 31.03.05 Timur Pocheptsov.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/csg/src/CsgOps.cxx:2246,Interface,Interface,2246,graf3d/csg/src/CsgOps.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/csg/src/CsgOps.cxx,1,['Interface'],['Interface']
Integrability,"n).; Instead, the choice of normalization is always specified each time a; normalized value is requested from the PDF via the getVal(); method. RooAbsPdf manages the entire normalization logic of each PDF with; the help of a RooRealIntegral object, which coordinates the integration; of a given choice of normalization. By default, RooRealIntegral will; perform an entirely numeric integration of all dependents. However,; PDFs can advertise one or more (partial) analytical integrals of; their function, and these will be used by RooRealIntegral, if it; determines that this is safe (i.e., no hidden Jacobian terms,; multiplication with other PDFs that have one or more dependents in; common, etc). #### Implementing analytical integrals; To implement analytical integrals, two functions must be implemented. First,. ```; Int_t getAnalyticalIntegral(const RooArgSet& integSet, RooArgSet& anaIntSet); ```; should return the analytical integrals that are supported. `integSet`; is the set of dependents for which integration is requested. The; function should copy the subset of dependents it can analytically; integrate to `anaIntSet`, and return a unique identification code for; this integration configuration. If no integration can be; performed, zero should be returned. Second,. ```; double analyticalIntegral(Int_t code); ```. implements the actual analytical integral(s) advertised by; `getAnalyticalIntegral()`. This function will only be called with; codes returned by `getAnalyticalIntegral()`, except code zero. The integration range for each dependent to be integrated can; be obtained from the dependent's proxy functions `min()` and; `max()`. Never call these proxy functions for any proxy not known to; be a dependent via the integration code. Doing so may be; ill-defined, e.g., in case the proxy holds a function, and will; trigger an assert. Integrated category dependents should always be; summed over all of their states. ### Direct generation of observables. Distributions for any",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx:3436,depend,dependents,3436,roofit/roofitcore/src/RooAbsPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx,2,"['depend', 'integrat']","['dependents', 'integration']"
Integrability,"n. Logical & Physical Objects.; There are two cases of object addition:. - Add this object as a single independent entity in the world reference frame.; - Add a physical placement (copy) of this logical object (described in local; reference frame). The second case is very typical in geometry packages, GEANT4, where we have; very large number repeated placements of relatively few logical (unique) shapes.; Some viewers (OpenGL only at present) are able to take advantage of this by; identifying unique logical shapes from the `fID` logical ID member of; TBuffer3D. If repeated addition of the same `fID` is found, the shape; is cached already - and the costly tessellation does not need to be sent again.; The viewer can also perform internal GL specific caching with considerable; performance gains in these cases. For this to work correctly the logical object in must be described in TBuffer3D; in the local reference frame, complete with the local/master translation. The; viewer indicates this through the interface method. ~~~ {.cpp}; PreferLocalFrame(); ~~~. If this returns kTRUE you can make repeated calls to AddObject(), with TBuffer3D; containing the same fID, and different `fLocalMaster` placements. For viewers supporting logical/physical objects, the TBuffer3D content refers; to the properties of logical object, with the `fLocalMaster` transform and the; `fColor` and `fTransparency` attributes, which can be varied for each physical; object. As a minimum requirement all clients must be capable of filling the raw tessellation; of the object buffer, in the master reference frame. Conversely viewers must; always be capable of displaying the object described by this buffer. ### Scene Rebuilds. It should be understood that AddObject is not an explicit command to the viewer; - it may for various reasons decide to ignore it:. - It already has the object internally cached .; - The object falls outside some 'interest' limits of the viewer camera.; - The object is too small to be ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TBuffer3D.cxx:5553,interface,interface,5553,core/base/src/TBuffer3D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TBuffer3D.cxx,1,['interface'],['interface']
Integrability,"n: color-x = color-X / (color-X + color-Y + color-Z); * Hence: (color-x - 1)*color-X + color.x*color-Y + color.x*color-Z = 0; *; * This is 9 simultaneous equations in the 9 variables ""color-C"" and can be; * solved by Cramer's rule. Cramer's rule requires calculating 10 9x9 matrix; * determinants, however this is not as bad as it seems because only 28 of; * the total of 90 terms in the various matrices are non-zero. Nevertheless; * Cramer's rule is notoriously numerically unstable because the determinant; * calculation involves the difference of large, but similar, numbers. It is; * difficult to be sure that the calculation is stable for real world values; * and it is certain that it becomes unstable where the end points are close; * together.; *; * So this code uses the perhaps slightly less optimal but more; * understandable and totally obvious approach of calculating color-scale.; *; * This algorithm depends on the precision in white-scale and that is; * (1/white-y), so we can immediately see that as white-y approaches 0 the; * accuracy inherent in the cHRM chunk drops off substantially.; *; * libpng arithmetic: a simple inversion of the above equations; * ------------------------------------------------------------; *; * white_scale = 1/white-y; * white-X = white-x * white-scale; * white-Y = 1.0; * white-Z = (1 - white-x - white-y) * white_scale; *; * white-C = red-C + green-C + blue-C; * = red-c*red-scale + green-c*green-scale + blue-c*blue-scale; *; * This gives us three equations in (red-scale,green-scale,blue-scale) where; * all the coefficients are now known:; *; * red-x*red-scale + green-x*green-scale + blue-x*blue-scale; * = white-x/white-y; * red-y*red-scale + green-y*green-scale + blue-y*blue-scale = 1; * red-z*red-scale + green-z*green-scale + blue-z*blue-scale; * = (1 - white-x - white-y)/white-y; *; * In the last equation color-z is (1 - color-x - color-y) so we can add all; * three equations together to get an alternative third:; *; * red-scale + gre",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c:3036,depend,depends,3036,graf2d/asimage/src/libAfterImage/libpng/png.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c,1,['depend'],['depends']
Integrability,"name of the input function, the variables; /// it integrates and the range integrates over. The default strategy to calculate the running integrals is; ///; /// - If the integrand (this object) supports analytical integration, construct an integral object; /// that calculate the running integrals value by calculating the analytical integral each; /// time the running integral object is evaluated; ///; /// - If the integrand (this object) requires numeric integration to construct the running integral; /// create an object of class RooNumRunningInt which first samples the entire function and integrates; /// the sampled function numerically. This method has superior performance as there is no need to; /// perform a full (numeric) integration for each evaluation of the running integral object, but; /// only when one of its parameters has changed.; ///; /// The choice of strategy can be changed with the ScanAll() argument, which forces the use of the; /// scanning technique implemented in RooNumRunningInt for all use cases, and with the ScanNone(); /// argument which forces the 'integrate each evaluation' technique for all use cases. The sampling; /// granularity for the scanning technique can be controlled with the ScanParameters technique; /// which allows to specify the number of samples to be taken, and to which order the resulting; /// running integral should be interpolated. The default values are 1000 samples and 2nd order; /// interpolation.; ///; /// The following named arguments are accepted; /// | | Effect on integral creation; /// |-|-------------------------------; /// | `SupNormSet(const RooArgSet&)` | Observables over which should be normalized _in addition_ to the integration observables; /// | `ScanParameters(Int_t nbins, Int_t intOrder)` | Parameters for scanning technique of making CDF: number of sampled bins and order of interpolation applied on numeric cdf; /// | `ScanNum()` | Apply scanning technique if cdf integral involves numeric integration; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx:1540,integrat,integrate,1540,roofit/roofitcore/src/RooAbsReal.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx,1,['integrat'],['integrate']
Integrability,"napshot](classROOT_1_1RDF_1_1RInterface.html#a233b7723e498967f4340705d2c4db7f8). \warning Note that in multi-thread event loops the values of `rdfentry_` _do not_ correspond to what would be the entry numbers; of a TChain constructed over the same set of ROOT files, as the entries are processed in an unspecified order. \anchor jitting; ### Just-in-time compilation: column type inference and explicit declaration of column types; C++ is a statically typed language: all types must be known at compile-time. This includes the types of the TTree; branches we want to work on. For filters, defined columns and some of the actions, **column types are deduced from the; signature** of the relevant filter function/temporary column expression/action function:; ~~~{.cpp}; // here b1 is deduced to be `int` and b2 to be `double`; df.Filter([](int x, double y) { return x > 0 && y < 0.; }, {""b1"", ""b2""});; ~~~; If we specify an incorrect type for one of the columns, an exception with an informative message will be thrown at; runtime, when the column value is actually read from the dataset: RDataFrame detects type mismatches. The same would; happen if we swapped the order of ""b1"" and ""b2"" in the column list passed to Filter(). Certain actions, on the other hand, do not take a function as argument (e.g. Histo1D()), so we cannot deduce the type of; the column at compile-time. In this case **RDataFrame infers the type of the column** from the TTree itself. This; is why we never needed to specify the column types for all actions in the above snippets. When the column type is not a common one such as `int`, `double`, `char` or `float` it is nonetheless good practice to; specify it as a template parameter to the action itself, like this:; ~~~{.cpp}; df.Histo1D(""b1""); // OK, the type of ""b1"" is deduced at runtime; df.Min<MyNumber_t>(""myObject""); // OK, ""myObject"" is deduced to be of type `MyNumber_t`; ~~~. Deducing types at runtime requires the just-in-time compilation of the relevant actions, ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx:65594,message,message,65594,tree/dataframe/src/RDataFrame.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx,1,['message'],['message']
Integrability,"nctional expression by specifying; the powers of each variable in \f$ L\f$ specified functions \f$ F_1, \ldots,F_L\f$ (TMultiDimFit::SetPowers).; In that case, only the coefficients \f$ c_l\f$ is calculated by the class. ## Limiting the Number of Terms; As always when dealing with fits, there's a real chance of *over fitting*. As is well-known, it's; always possible to fit an \f$ N-1\f$ polynomial in \f$ x\f$ to \f$ N\f$ points \f$ (x,y)\f$ with; \f$\chi^2 = 0\f$, but the polynomial is not likely to fit new data at all [1].; Therefore, the user is asked to provide an upper limit, \f$ L_{max}\f$ to the number of terms in; \f$ D_p\f$ (TMultiDimFit::SetMaxTerms). However, since there's an infinite number of \f$ F_l\f$ to choose from, the; user is asked to give the maximum power. \f$ P_{max,i}\f$, of each variable; \f$ x_i\f$ to be considered in the minimization of \f$ S\f$ (TMultiDimFit::SetMaxPowers). One way of obtaining values for the maximum power in variable \f$ i\f$, is; to perform a regular fit to the dependent quantity \f$ D\f$, using a; polynomial only in \f$ x_i\f$. The maximum power is \f$ P_{max,i}\f$ is then the; power that does not significantly improve the one-dimensional; least-square fit over \f$ x_i\f$ to \f$ D\f$ [5]. There are still a huge amount of possible choices for \f$ F_l\f$; in fact; there are \f$\prod_{i=1}^{N} (P_{max,i} + 1)\f$ possible; choices. Obviously we need to limit this. To this end, the user is; asked to set a *power control limit*, \f$ Q\f$ (TMultiDimFit::SetPowerLimit), and a function; \f$ F_l\f$ is only accepted if; \f[; Q_l = \sum_{i=1}^{N} \frac{P_{li}}{P_{max,i}} < Q; \f]; where \f$ P_{li}\f$ is the leading power of variable \f$ x_i\f$ in function \f$ F_l\f$ (TMultiDimFit::MakeCandidates).; So the number of functions increase with \f$ Q\f$ (1, 2 is fine, 5 is way out). ## Gram-Schmidt Orthogonalisation; To further reduce the number of functions in the final expression,; only those functions that significantly reduce \f$ S\f$ ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TMultiDimFit.cxx:4632,depend,dependent,4632,hist/hist/src/TMultiDimFit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TMultiDimFit.cxx,1,['depend'],['dependent']
Integrability,"nd catch mechanism in case of Emscripten EH/SjLj and Wasm EH intrinsics in; /// case of Emscripten SjLJ.; ///; /// * Emscripten exception handling; /// This pass lowers invokes and landingpads into library functions in JS glue; /// code. Invokes are lowered into function wrappers called invoke wrappers that; /// exist in JS side, which wraps the original function call with JS try-catch.; /// If an exception occurred, cxa_throw() function in JS side sets some; /// variables (see below) so we can check whether an exception occurred from; /// wasm code and handle it appropriately.; ///; /// * Emscripten setjmp-longjmp handling; /// This pass lowers setjmp to a reasonably-performant approach for emscripten.; /// The idea is that each block with a setjmp is broken up into two parts: the; /// part containing setjmp and the part right after the setjmp. The latter part; /// is either reached from the setjmp, or later from a longjmp. To handle the; /// longjmp, all calls that might longjmp are also called using invoke wrappers; /// and thus JS / try-catch. JS longjmp() function also sets some variables so; /// we can check / whether a longjmp occurred from wasm code. Each block with a; /// function call that might longjmp is also split up after the longjmp call.; /// After the longjmp call, we check whether a longjmp occurred, and if it did,; /// which setjmp it corresponds to, and jump to the right post-setjmp block.; /// We assume setjmp-longjmp handling always run after EH handling, which means; /// we don't expect any exception-related instructions when SjLj runs.; /// FIXME Currently this scheme does not support indirect call of setjmp,; /// because of the limitation of the scheme itself. fastcomp does not support it; /// either.; ///; /// In detail, this pass does following things:; ///; /// 1) Assumes the existence of global variables: __THREW__, __threwValue; /// __THREW__ and __threwValue are defined in compiler-rt in Emscripten.; /// These variables are used for bot",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyLowerEmscriptenEHSjLj.cpp:1584,wrap,wrappers,1584,interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyLowerEmscriptenEHSjLj.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyLowerEmscriptenEHSjLj.cpp,1,['wrap'],['wrappers']
Integrability,"nd is a TTree, more if; /// the friend is a TChain. In the latter case, this function; /// triggers the opening of all files in the chain.; /// \throws std::runtime_error If the input tree has a list of friends, but any; /// of them could not be associated with any file.; ///; /// Calls TTree::GetListOfFriends and parses its result for the names, aliases; /// and file names, with different methodologies depending on whether the; /// parameter is a TTree or a TChain.; ///; /// \note This function only retrieves information about <b>direct friends</b>; /// of the input tree. It will not recurse through friends of friends and; /// does not take into account circular references in the list of friends; /// of the input tree.; ///; /// \returns An RFriendInfo struct, containing the information parsed from the; /// list of friends. The struct will contain four vectors, which elements at; /// position `i` represent the `i`-th friend of the input tree. If this friend; /// is a TTree, the `i`-th element of each of the three vectors will contain; /// respectively:; ///; /// - A pair with the name and alias of the tree (the alias might not be; /// present, in which case it will be just an empty string).; /// - A vector with a single string representing the path to current file where; /// the tree is stored.; /// - An empty vector.; /// - A vector with a single element, the number of entries in the tree.; ///; /// If the `i`-th friend is a TChain instead, the `i`-th element of each of the; /// three vectors will contain respectively:; /// - A pair with the name and alias of the chain (if present, both might be; /// empty strings).; /// - A vector with all the paths to the files contained in the chain.; /// - A vector with all the names of the trees making up the chain,; /// associated with the file names of the previous vector.; /// - A vector with the number of entries of each tree in the previous vector or; /// an empty vector, depending on whether \p retrieveEntries is true.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/InternalTreeUtils.cxx:2407,depend,depending,2407,tree/tree/src/InternalTreeUtils.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/InternalTreeUtils.cxx,1,['depend'],['depending']
Integrability,"ng is enough.; Data fragment must be large enough to ensure successful decoding.; `ZSTD_frameHeaderSize_max` bytes is guaranteed to always be large enough.; @result : 0 : successful decoding, the `ZSTD_frameHeader` structure is correctly filled.; >0 : `srcSize` is too small, please provide at least @result bytes on next attempt.; errorCode, which can be tested using ZSTD_isError(). It fills a ZSTD_frameHeader structure with important information to correctly decode the frame,; such as the dictionary ID, content size, or maximum back-reference distance (`windowSize`).; Note that these values could be wrong, either because of data corruption, or because a 3rd party deliberately spoofs false information.; As a consequence, check that values remain within valid application range.; For example, do not allocate memory blindly, check that `windowSize` is within expectation.; Each application can set its own limits, depending on local restrictions.; For extended interoperability, it is recommended to support `windowSize` of at least 8 MB. ZSTD_decompressContinue() needs previous data blocks during decompression, up to `windowSize` bytes.; ZSTD_decompressContinue() is very sensitive to contiguity,; if 2 blocks don't follow each other, make sure that either the compressor breaks contiguity at the same place,; or that previous contiguous segment is large enough to properly handle maximum back-reference distance.; There are multiple ways to guarantee this condition. The most memory efficient way is to use a round buffer of sufficient size.; Sufficient size is determined by invoking ZSTD_decodingBufferSize_min(),; which can @return an error code if required value is too large for current system (in 32-bits mode).; In a round buffer methodology, ZSTD_decompressContinue() decompresses each block next to previous one,; up to the moment there is not enough room left in the buffer to guarantee decoding another full block,; which maximum size is provided in `ZSTD_frameHeader` structur",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h:1388,interoperab,interoperability,1388,builtins/zstd/zstd.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h,1,['interoperab'],['interoperability']
Integrability,"ng of OpenMP clause 'private', 'firstprivate', 'lastprivate',; /// 'shared', 'copyin', 'copyprivate', 'flush', 'reduction', 'task_reduction',; /// 'in_reduction', 'nontemporal', 'exclusive' or 'inclusive'.; ///; /// private-clause:; /// 'private' '(' list ')'; /// firstprivate-clause:; /// 'firstprivate' '(' list ')'; /// lastprivate-clause:; /// 'lastprivate' '(' list ')'; /// shared-clause:; /// 'shared' '(' list ')'; /// linear-clause:; /// 'linear' '(' linear-list [ ':' linear-step ] ')'; /// aligned-clause:; /// 'aligned' '(' list [ ':' alignment ] ')'; /// reduction-clause:; /// 'reduction' '(' [ modifier ',' ] reduction-identifier ':' list ')'; /// task_reduction-clause:; /// 'task_reduction' '(' reduction-identifier ':' list ')'; /// in_reduction-clause:; /// 'in_reduction' '(' reduction-identifier ':' list ')'; /// copyprivate-clause:; /// 'copyprivate' '(' list ')'; /// flush-clause:; /// 'flush' '(' list ')'; /// depend-clause:; /// 'depend' '(' in | out | inout : list | source ')'; /// map-clause:; /// 'map' '(' [ [ always [,] ] [ close [,] ]; /// [ mapper '(' mapper-identifier ')' [,] ]; /// to | from | tofrom | alloc | release | delete ':' ] list ')';; /// to-clause:; /// 'to' '(' [ mapper '(' mapper-identifier ')' ':' ] list ')'; /// from-clause:; /// 'from' '(' [ mapper '(' mapper-identifier ')' ':' ] list ')'; /// use_device_ptr-clause:; /// 'use_device_ptr' '(' list ')'; /// use_device_addr-clause:; /// 'use_device_addr' '(' list ')'; /// is_device_ptr-clause:; /// 'is_device_ptr' '(' list ')'; /// has_device_addr-clause:; /// 'has_device_addr' '(' list ')'; /// allocate-clause:; /// 'allocate' '(' [ allocator ':' ] list ')'; /// nontemporal-clause:; /// 'nontemporal' '(' list ')'; /// inclusive-clause:; /// 'inclusive' '(' list ')'; /// exclusive-clause:; /// 'exclusive' '(' list ')'; ///; /// For 'linear' clause linear-list may have the following forms:; /// list; /// modifier(list); /// where modifier is 'val' (C) or 'ref', 'val' or 'uval'(C++).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParseOpenMP.cpp:947,depend,depend-clause,947,interpreter/llvm-project/clang/lib/Parse/ParseOpenMP.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParseOpenMP.cpp,2,['depend'],"['depend', 'depend-clause']"
Integrability,"nge between abstract attributes in-flight.; //; // The Attributor class is the driver and the link between the various abstract; // attributes. The Attributor will iterate until a fixpoint state is reached by; // all abstract attributes in-flight, or until it will enforce a pessimistic fix; // point because an iteration limit is reached.; //; // Abstract attributes, derived from the AbstractAttribute class, actually; // describe properties of the code. They can correspond to actual LLVM-IR; // attributes, or they can be more general, ultimately unrelated to LLVM-IR; // attributes. The latter is useful when an abstract attributes provides; // information to other abstract attributes in-flight but we might not want to; // manifest the information. The Attributor allows to query in-flight abstract; // attributes through the `Attributor::getAAFor` method (see the method; // description for an example). If the method is used by an abstract attribute; // P, and it results in an abstract attribute Q, the Attributor will; // automatically capture a potential dependence from Q to P. This dependence; // will cause P to be reevaluated whenever Q changes in the future.; //; // The Attributor will only reevaluate abstract attributes that might have; // changed since the last iteration. That means that the Attribute will not; // revisit all instructions/blocks/functions in the module but only query; // an update from a subset of the abstract attributes.; //; // The update method `AbstractAttribute::updateImpl` is implemented by the; // specific ""abstract attribute"" subclasses. The method is invoked whenever the; // currently assumed state (see the AbstractState class) might not be valid; // anymore. This can, for example, happen if the state was dependent on another; // abstract attribute that changed. In every invocation, the update method has; // to adjust the internal state of an abstract attribute to a point that is; // justifiable by the underlying IR and the current state of",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h:1721,depend,dependence,1721,interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h,1,['depend'],['dependence']
Integrability,"ngle existing column using custom variation tags.; /// \param[in] colName name of the column for which varied values are provided.; /// \param[in] expression a callable that evaluates the varied values for the specified columns. The callable can; /// take any column values as input, similarly to what happens during Filter and Define calls. It must; /// return an RVec of varied values, one for each variation tag, in the same order as the tags.; /// \param[in] inputColumns the names of the columns to be passed to the callable.; /// \param[in] variationTags names for each of the varied values, e.g. `""up""` and `""down""`.; /// \param[in] variationName a generic name for this set of varied values, e.g. `""ptvariation""`.; ///; /// Vary provides a natural and flexible syntax to define systematic variations that automatically propagate to; /// Filters, Defines and results. RDataFrame usage of columns with attached variations does not change, but for; /// results that depend on any varied quantity, a map/dictionary of varied results can be produced with; /// ROOT::RDF::Experimental::VariationsFor (see the example below).; ///; /// The dictionary will contain a ""nominal"" value (accessed with the ""nominal"" key) for the unchanged result, and; /// values for each of the systematic variations that affected the result (via upstream Filters or via direct or; /// indirect dependencies of the column values on some registered variations). The keys will be a composition of; /// variation names and tags, e.g. ""pt:up"" and ""pt:down"" for the example below.; ///; /// In the following example we add up/down variations of pt and fill a histogram with a quantity that depends on pt.; /// We automatically obtain three histograms in output (""nominal"", ""pt:up"" and ""pt:down""):; /// ~~~{.cpp}; /// auto nominal_hx =; /// df.Vary(""pt"", [] (double pt) { return RVecD{pt*0.9, pt*1.1}; }, {""down"", ""up""}); /// .Filter(""pt > k""); /// .Define(""x"", someFunc, {""pt""}); /// .Histo1D(""x"");; ///; /// auto hx = ROOT::",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RDF/RInterface.hxx:1021,depend,depend,1021,tree/dataframe/inc/ROOT/RDF/RInterface.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RDF/RInterface.hxx,1,['depend'],['depend']
Integrability,"nput a pointer to the fitted parameter values; /// and a pointer the covariance matrix from the fit. These pointers should be retrieved from the; /// previously performed fit using the TFitResult class.; /// Note that to get the TFitResult, te fit should be done using the fit option `S`.; /// Example:; /// ~~~~{.cpp}; /// TFitResultPtr r = histo2d->Fit(func2, ""S"");; /// func2->IntegralError(a,b,r->GetParams(), r->GetCovarianceMatrix()->GetMatrixArray() );; /// ~~~~; ///; /// IMPORTANT NOTE1:; ///; /// A null pointer to the parameter values vector and to the covariance matrix can be passed.; /// In this case, when the parameter values pointer is null, the parameter values stored in this; /// TF1 function object are used in the integral error computation.; /// When the poassed pointer to the covariance matrix is null, a covariance matrix from the last fit is retrieved; /// from a global fitter instance when it exists. Note that the global fitter instance; /// esists only when ROOT is not running with multi-threading enabled (ROOT::IsImplicitMTEnabled() == True).; /// When the ovariance matrix from the last fit cannot be retrieved, an error message is printed and a zero value is; /// returned.; ///; ///; /// IMPORTANT NOTE2:; ///; /// When no covariance matrix is passed and in the meantime a fit is done; /// using another function, the routine will signal an error and it will return zero only; /// when the number of fit parameter is different than the values stored in TF1 (TF1::GetNpar() ).; /// In the case that npar is the same, an incorrect result is returned.; ///; /// IMPORTANT NOTE3:; ///; /// The user must pass a pointer to the elements of the full covariance matrix; /// dimensioned with the right size (npar*npar), where npar is the total number of parameters (TF1::GetNpar()),; /// including also the fixed parameters. The covariance matrix must be retrieved from the TFitResult class as; /// shown above and not from TVirtualFitter::GetCovarianceMatrix() function.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TF1.cxx:1588,message,message,1588,hist/hist/src/TF1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TF1.cxx,2,"['message', 'rout']","['message', 'routine']"
Integrability,"nsing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class RooStats::BayesianCalculator; \ingroup Roostats. BayesianCalculator is a concrete implementation of IntervalCalculator, providing the computation; of a credible interval using a Bayesian method.; The class works only for one single parameter of interest and it integrates the likelihood function with the given prior; probability density function to compute the posterior probability. The result of the class is a one dimensional interval; (class SimpleInterval ), which is obtained from inverting the cumulative posterior distribution.; This calculator works then only for model with a single parameter of interest.; The model can instead have several nuisance parameters which are integrated (marginalized) in the computation of the posterior function.; The integration and normalization of the posterior is computed using numerical integration methods provided by ROOT.; See the MCMCCalculator for model with multiple parameters of interest. The interface allows one to construct the class by passing the data set, probability density function for the model, the prior; functions and then the parameter of interest to scan. The nuisance parameters can also be passed to be marginalized when; computing the posterior. Alternatively, the class can be constructed by passing the data and the ModelConfig containing; all the needed information (model pdf, prior pdf, parameter of interest, nuisance parameters, etc..). After configuring the calculator, one only needs to ask GetInterval(), which; will return an SimpleInterval object. By default the extreme of the integral are obtained by inverting directly the; cumulative posterior distribution. By using the method SetScanOfPosterior(nbins) the interval is then obtained by; scanning the posterior function in the given number of points. The first method is in",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/BayesianCalculator.cxx:1230,integrat,integration,1230,roofit/roostats/src/BayesianCalculator.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/BayesianCalculator.cxx,2,['integrat'],['integration']
Integrability,"nstruction itself (e.g. checks for overflow on nsw).; // 4) A check rule which traps (to a handler function) if this instruction must; // execute undefined behavior given the poison state of it's inputs.; //; // This is a must analysis based transform; that is, the resulting code may; // produce a false negative result (not report UB when actually exists; // according to the LangRef spec), but should never produce a false positive; // (report UB where it doesn't exist).; //; // Use cases for this pass include:; // - Understanding (and testing!) the implications of the definition of poison; // from the LangRef.; // - Validating the output of a IR fuzzer to ensure that all programs produced; // are well defined on the specific input used.; // - Finding/confirming poison specific miscompiles by checking the poison; // status of an input/IR pair is the same before and after an optimization; // transform.; // - Checking that a bugpoint reduction does not introduce UB which didn't; // exist in the original program being reduced.; //; // The major sources of inaccuracy are currently:; // - Most validation rules not yet implemented for instructions with poison; // relavant flags. At the moment, only nsw/nuw on add/sub are supported.; // - UB which is control dependent on a branch on poison is not yet; // reported. Currently, only data flow dependence is modeled.; // - Poison which is propagated through memory is not modeled. As such,; // storing poison to memory and then reloading it will cause a false negative; // as we consider the reloaded value to not be poisoned.; // - Poison propagation across function boundaries is not modeled. At the; // moment, all arguments and return values are assumed not to be poison.; // - Undef is not modeled. In particular, the optimizer's freedom to pick; // concrete values for undef bits so as to maximize potential for producing; // poison is not modeled.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/PoisonChecking.cpp:2533,depend,dependent,2533,interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/PoisonChecking.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/PoisonChecking.cpp,2,['depend'],"['dependence', 'dependent']"
Integrability,"nt as long as they are; /// consistent. Inaccuracies arise when instructions have different execution; /// delays relative to each other, in addition to their intrinsic latency. Those; /// special cases can be handled by TableGen constructs such as, ReadAdvance,; /// which reduces latency when reading data, and ReleaseAtCycles, which consumes; /// a processor resource when writing data for a number of abstract; /// cycles.; ///; /// TODO: One tool currently missing is the ability to add a delay to; /// ReleaseAtCycles. That would be easy to add and would likely cover all cases; /// currently handled by the legacy itinerary tables.; ///; /// A note on out-of-order execution and, more generally, instruction; /// buffers. Part of the CPU pipeline is always in-order. The issue point, which; /// is the point of reference for counting cycles, only makes sense as an; /// in-order part of the pipeline. Other parts of the pipeline are sometimes; /// falling behind and sometimes catching up. It's only interesting to model; /// those other, decoupled parts of the pipeline if they may be predictably; /// resource constrained in a way that the scheduler can exploit.; ///; /// The LLVM machine model distinguishes between in-order constraints and; /// out-of-order constraints so that the target's scheduling strategy can apply; /// appropriate heuristics. For a well-balanced CPU pipeline, out-of-order; /// resources would not typically be treated as a hard scheduling; /// constraint. For example, in the GenericScheduler, a delay caused by limited; /// out-of-order resources is not directly reflected in the number of cycles; /// that the scheduler sees between issuing an instruction and its dependent; /// instructions. In other words, out-of-order resources don't directly increase; /// the latency between pairs of instructions. However, they can still be used; /// to detect potential bottlenecks across a sequence of instructions and bias; /// the scheduling heuristics appropriately.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCSchedule.h:3260,depend,dependent,3260,interpreter/llvm-project/llvm/include/llvm/MC/MCSchedule.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCSchedule.h,1,['depend'],['dependent']
Integrability,"nt has passed the selection (`true`) or not (`false`). It should perform ""read-only"" operations on the; columns, and should not have side-effects (e.g. modification of an external or static variable) to ensure correctness; when implicit multi-threading is active. The second overload takes a string with a valid C++ expression in which column; names are used as variable names (e.g. `Filter(""x[0] + x[1] > 0"")`). This is a convenience feature that comes with a; certain runtime overhead: C++ code has to be generated on the fly from this expression before using it in the event; loop. See the paragraph about ""Just-in-time compilation"" below for more information. RDataFrame only evaluates filters when necessary: if multiple filters are chained one after another, they are executed; in order and the first one returning `false` causes the event to be discarded and triggers the processing of the next; entry. If multiple actions or transformations depend on the same filter, that filter is not executed multiple times for; each entry: after the first access it simply serves a cached result. \anchor named-filters-and-cutflow-reports; #### Named filters and cutflow reports; An optional string parameter `name` can be passed to the Filter() method to create a **named filter**. Named filters; work as usual, but also keep track of how many entries they accept and reject. Statistics are retrieved through a call to the Report() method:. - when Report() is called on the main RDataFrame object, it returns a ROOT::RDF::RResultPtr<RCutFlowReport> relative to all; named filters declared up to that point; - when called on a specific node (e.g. the result of a Define() or Filter()), it returns a ROOT::RDF::RResultPtr<RCutFlowReport>; relative all named filters in the section of the chain between the main RDataFrame and that node (included). Stats are stored in the same order as named filters have been added to the graph, and *refer to the latest event-loop*; that has been run using the relevant R",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx:29603,depend,depend,29603,tree/dataframe/src/RDataFrame.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx,1,['depend'],['depend']
Integrability,"ntributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TRecorder; \ingroup guirecorder. Class provides direct recorder/replayer interface for a user.; See 'ROOT EVENT RECORDING SYSTEM' for more information about usage. Implementation uses C++ design pattern State. Functionality of; recorder is divided into 4 classes according to the current; state of recorder. Internally, there is a pointer to TRecorderState object.; This object changes whenever state of recorder is changed.; States of recorder are the following:. - INACTIVE Implemented in TRecorderInactive class.; Default state after TRecorder object is created. - RECORDING Implemented in TRecorderRecording class. - REPLAYING Implemented in TRecorderReplaying class. - PAUSED Implemented in TRecorderPause class.; Pause of replaying. Every command for TRecorder is just passed; to TRecordeState object.; Depending on the current state of recorder, this command is passed; to some of the above mentioned classes and if valid, handled there. Switching between states is not possible from outside. States are; switched directly by state objects via:. ChangeState(TRecorderState* newstate, Bool_t deletePreviousState);. When recorder is switched to a new state, the old state object is; typically deleted. The only exception is switching from REPLAYING; state to PAUSED state. The previous state (REPLAYING) is not; deleted in order to be used again after TRecorder::Resume call. ### STATE TRANSITIONS:. - INACTIVE -> RECORDING via TRecorder::Start (Starts recording); - RECORDING -> INACTIVE via TRecorder::Stop (Stops recording). - INACTIVE -> REPLAYING via TRecorder::Replay (Starts replaying); - REPLAYING -> INACTIVE via TRecorder::ReplayStop (Stops replaying). - REPLAYING -> PAUSED via TRecorder::Pause (Pause replaying); - PAUSED -> REPLAYING via TRecorder::Resume (Resumes replaying). - PAUSED -> INACTIVE via TRecorder::ReplayStop (Stops paused replaying). */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/recorder/src/TRecorder.cxx:1242,Depend,Depending,1242,gui/recorder/src/TRecorder.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/recorder/src/TRecorder.cxx,1,['Depend'],['Depending']
Integrability,"ntry.; ///; /// Based on the timeline view information from the example, instruction 0; /// at iteration 0 was dispatched at cycle 0, and was retired at cycle 3.; /// Instruction [0,1] was also dispatched at cycle 0, and it retired at; /// the same cycle than instruction [0,0].; /// Instruction [0,4] has been dispatched at cycle 2. However, it had to; /// wait for two cycles before being issued. That is because operands; /// became ready only at cycle 5.; ///; /// This view helps further understanding bottlenecks and the impact of; /// resource pressure on the code.; ///; /// To better understand why instructions had to wait for multiple cycles in; /// the scheduler's queue, class TimelineView also reports extra timing info; /// in another table named ""Average Wait times"" (see example below).; ///; ///; /// Average Wait times (based on the timeline view):; /// [0]: Executions; /// [1]: Average time spent waiting in a scheduler's queue; /// [2]: Average time spent waiting in a scheduler's queue while ready; /// [3]: Average time elapsed from WB until retire stage; ///; ///	[0]	[1]	[2]	[3]; /// 0.	 2	1.0	1.0	3.0	vmovshdup %xmm0, %xmm1; /// 1.	 2	1.0	1.0	3.0	vpermilpd $1, %xmm0, %xmm2; /// 2.	 2	1.0	1.0	2.5	vpermilps $231, %xmm0, %xmm5; /// 3.	 2	1.5	0.5	1.0	vaddss %xmm1, %xmm0, %xmm3; /// 4.	 2	3.5	0.0	0.0	vaddss %xmm3, %xmm2, %xmm4; /// 5.	 2	6.5	0.0	0.0	vaddss %xmm4, %xmm5, %xmm6; /// 2	2.4	0.6	1.6 <total>; ///; /// By comparing column [2] with column [1], we get an idea about how many; /// cycles were spent in the scheduler's queue due to data dependencies.; ///; /// In this example, instruction 5 spent an average of ~6 cycles in the; /// scheduler's queue. As soon as operands became ready, the instruction; /// was immediately issued to the pipeline(s).; /// That is expected because instruction 5 cannot transition to the ""ready""; /// state until %xmm4 is written by instruction 4.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-mca/Views/TimelineView.h:4094,depend,dependencies,4094,interpreter/llvm-project/llvm/tools/llvm-mca/Views/TimelineView.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-mca/Views/TimelineView.h,1,['depend'],['dependencies']
Integrability,"nts of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; //////////////////////////////////////////////////////////////////////////////; /// \class RooFFTConvPdf; /// \ingroup Roofitcore; ///; /// This class implements a generic one-dimensional numeric convolution of two PDFs,; /// and can convolve any two RooAbsPdfs. The class exploits the convolution theorem; /// \f[; /// f(x) * g(x) \rightarrow F(k_i) \cdot G(k_i); /// \f]; /// to calculate the convolution by calculating a Real->Complex FFT of both input PDFs,; /// multiplying the complex coefficients and performing the reverse Complex->Real FFT; /// to get the result in the input space. This class uses the ROOT FFT interface to; /// the (free) FFTW3 package (www.fftw.org), and requires that your ROOT installation is; /// compiled with the `fftw3=ON` (default). Instructions for manually installing fftw below.; ///; /// Note that the performance in terms of speed and stability of RooFFTConvPdf is; /// vastly superior to that of RooNumConvPdf.; ///; /// An important feature of FFT convolutions is that the observable is assumed to be; /// cyclical. This is correct for cyclical observables such as angles,; /// but does not hold in general. For non-cyclical variables, wrap-around artifacts may be; /// encountered, *e.g.* if the PDF is zero at xMin and non-zero at xMax. A rising tail may appear at xMin.; /// This is inevitable when using FFTs. A distribution with 3 bins therefore looks like:; /// ```; /// ... 0 1 2 0 1 2 0 1 2 ...; /// ```; ///; /// Therefore, if bins 0 and 2 are not equal, the FFT sees a cyclical function with a step at the 2|0 boundary, which causes; /// artifacts in Fourier space.; ///; /// T",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFFTConvPdf.cxx:1128,interface,interface,1128,roofit/roofitcore/src/RooFFTConvPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFFTConvPdf.cxx,1,['interface'],['interface']
Integrability,"number of arguments; // ::= [gs] nw <expression>* _ <type> E # new (expr-list) type; // ::= [gs] nw <expression>* _ <type> <initializer> # new (expr-list) type (init); // ::= [gs] na <expression>* _ <type> E # new[] (expr-list) type; // ::= [gs] na <expression>* _ <type> <initializer> # new[] (expr-list) type (init); // ::= [gs] dl <expression> # delete expression; // ::= [gs] da <expression> # delete[] expression; // ::= pp_ <expression> # prefix ++; // ::= mm_ <expression> # prefix --; // ::= ti <type> # typeid (type); // ::= te <expression> # typeid (expression); // ::= dc <type> <expression> # dynamic_cast<type> (expression); // ::= sc <type> <expression> # static_cast<type> (expression); // ::= cc <type> <expression> # const_cast<type> (expression); // ::= rc <type> <expression> # reinterpret_cast<type> (expression); // ::= st <type> # sizeof (a type); // ::= sz <expression> # sizeof (an expression); // ::= at <type> # alignof (a type); // ::= az <expression> # alignof (an expression); // ::= nx <expression> # noexcept (expression); // ::= <template-param>; // ::= <function-param>; // ::= dt <expression> <unresolved-name> # expr.name; // ::= pt <expression> <unresolved-name> # expr->name; // ::= ds <expression> <expression> # expr.*expr; // ::= sZ <template-param> # size of a parameter pack; // ::= sZ <function-param> # size of a function parameter pack; // ::= sP <template-arg>* E # sizeof...(T), size of a captured template parameter pack from an alias template; // ::= sp <expression> # pack expansion; // ::= tw <expression> # throw expression; // ::= tr # throw with no operand (rethrow); // ::= <unresolved-name> # f(p), N::f(p), ::f(p),; // # freestanding dependent name (e.g., T::x),; // # objectless nonstatic member reference; // ::= fL <binary-operator-name> <expression> <expression>; // ::= fR <binary-operator-name> <expression> <expression>; // ::= fl <binary-operator-name> <expression>; // ::= fr <binary-operator-name> <expression>; // ::= <expr-primary>",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Demangle/ItaniumDemangle.h:2036,depend,dependent,2036,interpreter/llvm-project/llvm/include/llvm/Demangle/ItaniumDemangle.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Demangle/ItaniumDemangle.h,1,['depend'],['dependent']
Integrability,"o h4 = new TH2F(""h4"",""h4"",40,-3,3,40,-3,3);; h1->SetBit(TH1::kNoStats);; for (Int_t i=0;i<5000;i++) {; double x,y;; gRandom->Rannor(x,y);; if(x>0 && y>0) h1->Fill(x,y,4);; if(x<0 && y<0) h2->Fill(x,y,3);; if(x>0 && y<0) h3->Fill(x,y,2);; if(x<0 && y>0) h4->Fill(x,y,1);; }; h1->Draw(""colz"");; h2->Draw(""col same"");; h3->Draw(""col same"");; h4->Draw(""col same"");; }; End_Macro. The option `COL` can be combined with the option `POL`:. Begin_Macro(source); {; auto c1 = new TCanvas(""c1"",""c1"",600,400);; auto hcol1 = new TH2F(""hcol1"",""Option COLor combined with POL"",40,-4,4,40,-4,4);; float px, py;; for (Int_t i = 0; i < 25000; i++) {; gRandom->Rannor(px,py);; hcol1->Fill(px,py);; }; hcol1->Draw(""COLZPOL"");; }; End_Macro. \since **ROOT version 6.07/03:**. A second rendering technique is also available with the COL2 and COLZ2 options. These options provide potential performance improvements compared to the standard; COL option. The performance comparison of the COL2 to the COL option depends on; the histogram and the size of the rendering region in the current pad. In general,; a small (approx. less than 100 bins per axis), sparsely populated TH2 will render; faster with the COL option. However, for larger histograms (approx. more than 100 bins per axis); that are not sparse, the COL2 option will provide up to 20 times performance improvements.; For example, a 1000x1000 bin TH2 that is not sparse will render an order of magnitude; faster with the COL2 option. The COL2 option will also scale its performance based on the size of the; pixmap the histogram image is being rendered into. It also is much better optimized for; sessions where the user is forwarding X11 windows through an `ssh` connection. For the most part, the COL2 and COLZ2 options are a drop in replacement to the COL; and COLZ options. There is one major difference and that concerns the treatment of; bins with zero content. The COL2 and COLZ2 options color these bins the color of zero. COL2 option renders the histog",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:41127,depend,depends,41127,hist/histpainter/src/THistPainter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx,1,['depend'],['depends']
Integrability,"oRealVar zeta(""zeta"", ""zeta"", 0.);; * RooRealVar lambda(""lambda"", ""lambda"", -1., -10., -0.00001);; * ```; * In all other cases, slower / less accurate numeric integration will be used.; * Note that including `0.` in the value range of lambda excludes using analytic integrals.; * \endif; *; * ### Concavity; * Note that unless the parameters \f$ a_l,\ a_r \f$ are very large, the function has non-hyperbolic tails. This requires; * \f$ G \f$ to be strictly concave, *i.e.*, peaked, as otherwise the tails would yield imaginary numbers. Choosing \f$ \lambda,; * \beta, \zeta \f$ inappropriately will therefore lead to evaluation errors.; *; * Further, the original paper establishes that to keep the tails from rising,; * \f[; * \begin{split}; * \beta^2 &< \alpha^2 \\; * \Leftrightarrow \beta^2 &< \frac{\zeta^2}{\delta^2} = \frac{\zeta^2}{\sigma^2 A_{\lambda}^2(\zeta)}; * \end{split}; * \f]; * needs to be satisfied, unless the fit range is very restricted, because otherwise, the function rises in the tails.; *; *; * In case of evaluation errors, it is advisable to choose very large values for \f$ a_l,\ a_r \f$, tweak the parameters of the core region to; * make it concave, and re-enable the tails. Especially \f$ \beta \f$ needs to be close to zero.; *; * ## Relation to RooIpatia2; * This implementation is largely based on RooIpatia2, https://gitlab.cern.ch/lhcb/Urania/-/blob/master/PhysFit/B2DXFitters/src/RooIpatia2.cxx,; * but there are differences:; * - At construction time, the Hypatia implementation checks if the range of parameters extends into regions where; * the function might be undefined.; * - Hypatia supports I/O to ROOT files.; * - Hypatia will support faster batched function evaluations.; * - Hypatia might support analytical integration for the case \f$ \zeta = \beta = 0, \lambda < 1 \f$.; *; * Because of these differences, and to avoid name clashes for setups where RooFit is used in an environment that also has; * RooIpatia2, class names need to be different.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitmore/src/RooHypatia2.cxx:4412,integrat,integration,4412,roofit/roofitmore/src/RooHypatia2.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitmore/src/RooHypatia2.cxx,1,['integrat'],['integration']
Integrability,"ock:; // (In C-style pseudocode); //; // - Before:; // catchpad ...; // exn = wasm.get.exception();; // selector = wasm.get.selector();; // ...; //; // - After:; // catchpad ...; // exn = wasm.catch(WebAssembly::CPP_EXCEPTION);; // // Only add below in case it's not a single catch (...); // wasm.landingpad.index(index);; // __wasm_lpad_context.lpad_index = index;; // __wasm_lpad_context.lsda = wasm.lsda();; // _Unwind_CallPersonality(exn);; // selector = __wasm_lpad_context.selector;; // ...; //; //; // * Background: Direct personality function call; // In WebAssembly EH, the VM is responsible for unwinding the stack once an; // exception is thrown. After the stack is unwound, the control flow is; // transfered to WebAssembly 'catch' instruction.; //; // Unwinding the stack is not done by libunwind but the VM, so the personality; // function in libcxxabi cannot be called from libunwind during the unwinding; // process. So after a catch instruction, we insert a call to a wrapper function; // in libunwind that in turn calls the real personality function.; //; // In Itanium EH, if the personality function decides there is no matching catch; // clause in a call frame and no cleanup action to perform, the unwinder doesn't; // stop there and continues unwinding. But in Wasm EH, the unwinder stops at; // every call frame with a catch intruction, after which the personality; // function is called from the compiler-generated user code here.; //; // In libunwind, we have this struct that serves as a communincation channel; // between the compiler-generated user code and the personality function in; // libcxxabi.; //; // struct _Unwind_LandingPadContext {; // uintptr_t lpad_index;; // uintptr_t lsda;; // uintptr_t selector;; // };; // struct _Unwind_LandingPadContext __wasm_lpad_context = ...;; //; // And this wrapper in libunwind calls the personality function.; //; // _Unwind_Reason_Code _Unwind_CallPersonality(void *exception_ptr) {; // struct _Unwind_Exception *exception_o",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/WasmEHPrepare.cpp:1698,wrap,wrapper,1698,interpreter/llvm-project/llvm/lib/CodeGen/WasmEHPrepare.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/WasmEHPrepare.cpp,1,['wrap'],['wrapper']
Integrability,"od bin-by-bin with a template histogram model based on the obersved data.; * This results in per-bin values that are all in the same order of magnitude, which reduces precision loss in the sum,; * which can drastically improve numeric stability.; * Furthermore, \f$2\cdot \text{NLL}\f$ defined like this is approximately chi-square distributed, allowing for goodness-of-fit tests.; * </table>; * <tr><td> `IntegrateBins(double precision)` <td> In binned fits, integrate the PDF over the bins instead of using the probability density at the bin centre.; * This can reduce the bias observed when fitting functions with high curvature to binned data.; * - precision > 0: Activate bin integration everywhere. Use precision between 0.01 and 1.E-6, depending on binning.; * Note that a low precision such as 0.01 might yield identical results to 1.E-4, since the integrator might reach 1.E-4 already in its first; * integration step. If lower precision is desired (more speed), a RooBinSamplingPdf has to be created manually, and its integrator; * has to be manipulated directly.; * - precision = 0: Activate bin integration only for continuous PDFs fit to a RooDataHist.; * - precision < 0: Deactivate.; * \see RooBinSamplingPdf; * <tr><td> `ModularL(bool flag)` <td> Enable or disable modular likelihoods, which will become the default in a future release.; * This does not change any user-facing code, but only enables a different likelihood class in the back-end. Note that this; * should be set to true for parallel minimization of likelihoods!; * Note that it is currently not recommended to use Modular likelihoods without any parallelization enabled in the minimization, since; * some features such as offsetting might not yet work in this case.; * </table>; */; /** @brief Protected implementation of the NLL creation routine.; *; * This virtual function can be overridden in case you want to change the NLL creation logic for custom PDFs.; *; * \note Never call this function directly. Instead, c",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx:9653,integrat,integrator,9653,roofit/roofitcore/src/RooAbsPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx,1,['integrat'],['integrator']
Integrability,"od starting values for the parameters for the actual fit.; * \warning Prefitting may give bad results when used in binned analysis.; *; * <tr><th><th> Options to control informational output; * <tr><td> `Verbose(bool flag)` <td> Flag controls if verbose output is printed (NLL, parameter changes during fit).; * <tr><td> `Timer(bool flag)` <td> Time CPU and wall clock consumption of fit steps, off by default.; * <tr><td> `PrintLevel(Int_t level)` <td> Set Minuit print level (-1 to 3, default is 1). At -1 all RooFit informational messages are suppressed as well.; * See RooMinimizer::PrintLevel for the meaning of the levels.; * <tr><td> `Warnings(bool flag)` <td> Enable or disable MINUIT warnings (enabled by default); * <tr><td> `PrintEvalErrors(Int_t numErr)` <td> Control number of p.d.f evaluation errors printed per likelihood evaluation.; * A negative value suppresses output completely, a zero value will only print the error count per p.d.f component,; * a positive value will print details of each error up to `numErr` messages per p.d.f component.; * <tr><td> `Parallelize(Int_t nWorkers)` <td> Control global parallelization settings. Arguments 1 and above enable the use of RooFit's parallel minimization; * backend and uses the number given as the number of workers to use in the parallelization. -1 also enables; * RooFit's parallel minimization backend, and sets the number of workers to the number of available processes.; * 0 disables this feature.; * In case parallelization is requested, this option implies `ModularL(true)` in the internal call to the NLL creation method.; * <tr><td> `ParallelGradientOptions(bool enable=true, int orderStrategy=0, int chainFactor=1)` <td> **Experimental** - Control gradient parallelization settings. The first argument; * only disables or enables gradient parallelization, this is on by default.; * The second argument determines the internal partial derivative calculation; * ordering strategy. The third argument determines the number of",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx:6758,message,messages,6758,roofit/roofitcore/src/RooAbsPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx,1,['message'],['messages']
Integrability,"ode. They allow; our simple x3d viewer, and considerably more sophisticated OpenGL one to both; work with both geometry libraries (g3d and geom) efficiently. Publishing to a viewer consists of the following steps:. 1. Create / obtain viewer handle; 2. Begin scene on viewer; 3. Fill mandatory parts of TBuffer3D describing object; 4. Add to viewer; 5. Fill optional parts of TBuffer3D if requested by viewer, and add again; ... repeat 3/4/5 as required; 6. End scene on viewer. ## Creating / Obtaining Viewer. Create/obtain the viewer handle via local/global pad - the viewer is always; bound to a TPad object at present [This may be removed as a restriction in; the future] . You should perform the publishing to the viewer described below; in the Paint() method of the object you attach to the pad (via Draw()); ~~~ {.cpp}; TVirtualViewer3D * v = gPad->GetViewer3D(""xxxx"");; ~~~. "" xxxx"" is viewer type: OpenGL ""ogl"", X3D ""x3d"" or; Pad ""pad"" (default). The viewer is created via the plugin manager,; attached to pad, and the interface returned. ## Begin / End Scene. Objects must be added to viewer between BeginScene/EndScene calls e.g.; ~~~ {.cpp}; v->BeginScene();; .....; v->AddObject(....);; v->AddObject(....);; .....; v->EndScene();; ~~~. The BeginScene call will cause the viewer to suspend redraws etc, and after; the EndScene the viewer will reset the camera to frame the new scene and redraw.; [x3d viewer does not support changing of scenes - objects added after the; first Open/CloseScene pair will be ignored.]. ## Filling TBuffer3D and Adding to Viewer. The viewers behind the TVirtualViewer3D interface differ greatly in their; capabilities e.g. - Some know how to draw certain shapes natively (e.g. spheres/tubes in; OpenGL) - others always require a raw tessellation description of points/lines/segments.; - Some need the 3D object positions in the global frame, others can cope with; local frames + a translation matrix - which can give considerable performance; benefits. To cop",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualViewer3D.cxx:2131,interface,interface,2131,core/base/src/TVirtualViewer3D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualViewer3D.cxx,1,['interface'],['interface']
Integrability,"ominal_hx);. // the event loop runs here, upon first access to any of the results or varied results:; hx[""nominal""].Draw(); // same effect as nominal_hx->Draw(); hx[""pt:down""].Draw(""SAME"");; hx[""pt:up""].Draw(""SAME"");; ~~~. A list of variation ""tags"" is passed as the last argument to Vary(). The tags give names to the varied values that are returned; as elements of an RVec of the appropriate C++ type. The number of variation tags must correspond to the number of elements of; this RVec (2 in the example above: the first element will correspond to the tag ""down"", the second; to the tag ""up""). The _full_ variation name will be composed of the varied column name and the variation tags (e.g.; ""pt:down"", ""pt:up"" in this example). Python usage looks similar. Note how we use the ""pt"" column as usual in the Filter() and Define() calls and we simply use ""x"" as the value to fill; the resulting histogram. To produce the varied results, RDataFrame will automatically execute the Filter and Define; calls for each variation and fill the histogram with values and cuts that depend on the variation. There is no limitation to the complexity of a Vary() expression. Just like for the Define() and Filter() calls, users are; not limited to string expressions but they can also pass any valid C++ callable, including lambda functions and; complex functors. The callable can be applied to zero or more existing columns and it will always receive their; _nominal_ value in input. #### Varying multiple columns in lockstep. In the following Python snippet we use the Vary() signature that allows varying multiple columns simultaneously or; ""in lockstep"":. ~~~{.python}; df.Vary([""pt"", ""eta""],; ""RVec<RVecF>{{pt*0.9, pt*1.1}, {eta*0.9, eta*1.1}}"",; variationTags=[""down"", ""up""],; variationName=""ptAndEta""); ~~~. The expression returns an RVec of two RVecs: each inner vector contains the varied values for one column. The; inner vectors follow the same ordering as the column names that are passed as the first ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx:57256,depend,depend,57256,tree/dataframe/src/RDataFrame.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx,1,['depend'],['depend']
Integrability,"onding to N events; # and the extended term is Pois(N|S+B); #; # - fractional form: non-extended PDF of some discriminating variable m:; # eg: P(m) ~ s*fs(m) + (1-s)*fb(m), where s is a signal fraction; # in this case the dataset has N rows corresponding to N events; # and there is no extended term; #; # - number counting form: in which there is no discriminating variable; # and the counts are modeled directly (see HybridInstructional); # eg: P(N) = Pois(N|S+B); # in this case the dataset has 1 row corresponding to N events; # and the extended term is the PDF itself.; #; # Here we convert the number counting form into the standard form by; # introducing a dummy discriminating variable m with a uniform distribution.; #; # This example:; # - demonstrates the usage of the HybridCalcultor (Part 4-6); # - demonstrates the numerical integration of RooFit (Part 2); # - validates the RooStats against an example with a known analytic answer; # - demonstrates usage of different test statistics; # - explains subtle choices in the prior used for hybrid methods; # - demonstrates usage of different priors for the nuisance parameters; # - demonstrates usage of PROOF; #; # The basic setup here is that a main measurement has observed x events with an; # expectation of s+b. One can choose an ad hoc prior for the uncertainty on b,; # or try to base it on an auxiliary measurement. In this case, the auxiliary; # measurement (aka control measurement, sideband) is another counting experiment; # with measurement y and expectation tau*b. With an 'original prior' on b,; # called \f$ \eta(b) \f$ then one can obtain a posterior from the auxiliary measurement; # \f$ \pi(b) = \eta(b) * Pois(y|tau*b) \f$. This is a principled choice for a prior; # on b in the main measurement of x, which can then be treated in a hybrid; # Bayesian/Frequentist way. Additionally, one can try to treat the two; # measurements simultaneously, which is detailed in Part 6 of the tutorial.; #; # This tutorial is related ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridStandardForm.py:1493,integrat,integration,1493,tutorials/roostats/HybridStandardForm.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridStandardForm.py,1,['integrat'],['integration']
Integrability,"onsible for the deletion of any object that might; /// be created upon execution of func, returned objects included: ROOT::TProcessExecutor never; /// deletes what it returns, it simply forgets it.\n; /// **Note:** that the usage of ROOT::TProcessExecutor::Map is indicated only when the task to be; /// executed takes more than a few seconds, otherwise the overhead introduced; /// by Map will outrun the benefits of parallel execution on most machines.; ///; /// \param func; /// \parblock; /// a callable object, such as a lambda expression, an std::function, a; /// functor object or a function that takes zero arguments (for the first signature); /// or one (for the second signature).; /// \endparblock; /// \param args; /// \parblock; /// a standard vector, a ROOT::TSeq of integer type or an initializer list for the second signature.; /// An integer only for the first.; /// \endparblock; /// **Note:** in cases where the function to be executed takes more than; /// zero/one argument but all are fixed except zero/one, the function can be wrapped; /// in a lambda or via std::bind to give it the right signature.\n; /// **Note:** the user should take care of initializing random seeds differently in each; /// process (e.g. using the process id in the seed). Otherwise several parallel executions; /// might generate the same sequence of pseudo-random numbers.; ///; /// #### Return value:; /// An std::vector. The elements in the container; /// will be the objects returned by func.; ///; ///; /// #### Examples:; ///; /// ~~~{.cpp}; /// root[] ROOT::TProcessExecutor pool; auto hists = pool.Map(CreateHisto, 10);; /// root[] ROOT::TProcessExecutor pool(2); auto squares = pool.Map([](int a) { return a*a; }, {1,2,3});; /// ~~~; ///; /// ###ROOT::TProcessExecutor::MapReduce; /// This set of methods behaves exactly like Map, but takes an additional; /// function as a third argument. This function is applied to the set of; /// objects returned by the corresponding Map execution to ""squa",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/TProcessExecutor.cxx:2032,wrap,wrapped,2032,core/multiproc/src/TProcessExecutor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/TProcessExecutor.cxx,1,['wrap'],['wrapped']
Integrability,"ontinuous PDF; * and a binned distribution.; * When RooFit is used to fit binned data, and the PDF is continuous, it takes the probability density; * at the bin centre as a proxy for the probability averaged (integrated) over the entire bin. This is; * correct only if the second derivative of the function vanishes, though. This is shown in the plots; * below.; *; * For PDFs that have larger curvatures, the RooBinSamplingPdf can be used. It integrates the PDF in each; * bin using an adaptive integrator. This usually requires 21 times more function evaluations, but significantly; * reduces biases due to better sampling of the PDF. The integrator can be accessed from the outside; * using integrator(). This can be used to change the integration rules, so less/more function evaluations are; * performed. The target precision of the integrator can be set in the constructor.; *; *; * ### How to use it; * There are two ways to use this class:; * - Manually wrap a PDF:; * ```; * RooBinSamplingPdf binSampler(""<name>"", ""title"", <binned observable of PDF>, <original PDF> [, <precision for integrator>]);; * binSampler.fitTo(data);; * ```; * When a PDF is wrapped with a RooBinSamplingPDF, just use the bin sampling PDF instead of the original one for fits; * or plotting etc.; * \note The binning will be taken from the observable. Make sure that this binning is the same as the one of the dataset that should be fit.; * Use RooRealVar::setBinning() to adapt it.; * - Instruct test statistics to carry out this wrapping automatically:; * ```; * pdf.fitTo(data, IntegrateBins(<precision>));; * ```; * This method is especially useful when used with a simultaneous PDF, since each component will automatically be wrapped,; * depending on the value of `precision`:; * - `precision < 0.`: None of the PDFs are touched, bin sampling is off.; * - `precision = 0.`: Continuous PDFs that are fit to a RooDataHist are wrapped into a RooBinSamplingPdf. The target precision; * forwarded to the integrator is",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooBinSamplingPdf.cxx:1780,wrap,wrap,1780,roofit/roofitcore/src/RooBinSamplingPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooBinSamplingPdf.cxx,2,"['integrat', 'wrap']","['integrator', 'wrap']"
Integrability,"ooPlot*,const RooCmdArg&,const RooCmdArg&,const RooCmdArg&,const RooCmdArg&,; /// const RooCmdArg&,const RooCmdArg&,const RooCmdArg&,const RooCmdArg&,const RooCmdArg&,; /// const RooCmdArg&) const ); ///; ///; /// <table>; /// <tr><th> Type of argument <th> Controlling normalisation; /// <tr><td> `NormRange(const char* name)` <td> Calculate curve normalization w.r.t. specified range[s].; /// See the tutorial rf212_plottingInRanges_blinding.C; /// \note Setting a Range() by default also sets a NormRange() on the same range, meaning that the; /// PDF is plotted and normalised in the same range. Overriding this can be useful if the PDF was fit; /// in limited range[s] such as side bands, `NormRange(""sidebandLeft,sidebandRight"")`, but the PDF; /// should be drawn in the full range, `Range("""")`.; ///; /// <tr><td> `Normalization(double scale, ScaleType code)` <td> Adjust normalization by given scale factor.; /// Interpretation of number depends on code:; /// `RooAbsReal::Relative`: relative adjustment factor; /// `RooAbsReal::NumEvent`: scale to match given number of events.; ///; /// <tr><th> Type of argument <th> Misc control; /// <tr><td> `Name(const chat* name)` <td> Give curve specified name in frame. Useful if curve is to be referenced later; /// <tr><td> `Asymmetry(const RooCategory& c)` <td> Show the asymmetry of the PDF in given two-state category; /// \f$ \frac{F(+)-F(-)}{F(+)+F(-)} \f$ rather than the PDF projection. Category must have two; /// states with indices -1 and +1 or three states with indices -1,0 and +1.; /// <tr><td> `ShiftToZero(bool flag)` <td> Shift entire curve such that lowest visible point is at exactly zero.; /// Mostly useful when plotting -log(L) or \f$ \chi^2 \f$ distributions; /// <tr><td> `AddTo(const char* name, double_t wgtSelf, double_t wgtOther)` <td> Create a projection of this PDF onto the x-axis, but; /// instead of plotting it directly, add it to an existing curve with given name (and relative weight factors).; /// <tr><td> `Comp",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx:2149,depend,depends,2149,roofit/roofitcore/src/RooAbsPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx,1,['depend'],['depends']
Integrability,"option is interesting when dumping the contents of a Tree to; /// an ascii file, eg from the command line.; /// ### with ROOT 5; /// ~~~{.cpp}; /// root [0] tree->SetScanField(0);; /// root [1] tree->Scan(""*""); >tree.log; /// ~~~; /// ### with ROOT 6; /// ~~~{.cpp}; /// root [0] tree->SetScanField(0);; /// root [1] .> tree.log; /// tree->Scan(""*"");; /// .>; /// ~~~; /// will create a file tree.log; ///; /// Arrays (within an entry) are printed in their linear forms.; /// If several arrays with multiple dimensions are printed together,; /// they will NOT be synchronized. For example print; /// arr1[4][2] and arr2[2][3] will results in a printing similar to:; /// ~~~{.cpp}; /// ***********************************************; /// * Row * Instance * arr1 * arr2 *; /// ***********************************************; /// * x * 0 * arr1[0][0]* arr2[0][0]*; /// * x * 1 * arr1[0][1]* arr2[0][1]*; /// * x * 2 * arr1[1][0]* arr2[0][2]*; /// * x * 3 * arr1[1][1]* arr2[1][0]*; /// * x * 4 * arr1[2][0]* arr2[1][1]*; /// * x * 5 * arr1[2][1]* arr2[1][2]*; /// * x * 6 * arr1[3][0]* *; /// * x * 7 * arr1[3][1]* *; /// ~~~; /// However, if there is a selection criterion which is an array, then; /// all the formulas will be synchronized with the selection criterion; /// (see TTreePlayer::DrawSelect for more information).; ///; /// \param option The options string can contains the following parameters:; ///; /// - lenmax=dd; /// Where 'dd' is the maximum number of elements per array that should; /// be printed. If 'dd' is 0, all elements are printed (this is the; /// default); /// - colsize=ss; /// Where 'ss' will be used as the default size for all the column; /// If this options is not specified, the default column size is 9; /// - precision=pp; /// Where 'pp' will be used as the default 'precision' for the; /// printing format.; /// - col=xxx; /// Where 'xxx' is colon (:) delimited list of printing format for; /// each column. The format string should follow the printf format; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx:2443,synchroniz,synchronized,2443,tree/treeplayer/src/TTreePlayer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx,1,['synchroniz'],['synchronized']
Integrability,"or), there are two possible; /// outcomes. If we start the iterator at A, B, or E, we will visit only A, B,; /// and E. If we start at C or D, we will visit all instructions A-E.; ///; /// \code; /// A;; /// B;; /// if (...) {; /// C;; /// D;; /// }; /// E;; /// \endcode; ///; ///; /// Below is the example extneded with instructions F and G. Now we assume F; /// might not transfer execution to it's successor G. As a result we get the; /// following visit sets:; ///; /// Start Instruction | Visit Set; /// A | A, B, E, F; /// B | A, B, E, F; /// C | A, B, C, D, E, F; /// D | A, B, C, D, E, F; /// E | A, B, E, F; /// F | A, B, E, F; /// G | A, B, E, F, G; ///; ///; /// \code; /// A;; /// B;; /// if (...) {; /// C;; /// D;; /// }; /// E;; /// F; // Might not transfer execution to its successor G.; /// G;; /// \endcode; ///; ///; /// A more complex example involving conditionals, loops, break, and continue; /// is shown below. We again assume all instructions will transmit control to; /// the successor and we assume we can prove the inner loop to be finite. We; /// omit non-trivial branch conditions as the exploration is oblivious to them.; /// Constant branches are assumed to be unconditional in the CFG. The resulting; /// visist sets are shown in the table below.; ///; /// \code; /// A;; /// while (true) {; /// B;; /// if (...); /// C;; /// if (...); /// continue;; /// D;; /// if (...); /// break;; /// do {; /// if (...); /// continue;; /// E;; /// } while (...);; /// F;; /// }; /// G;; /// \endcode; ///; /// Start Instruction | Visit Set; /// A | A, B; /// B | A, B; /// C | A, B, C; /// D | A, B, D; /// E | A, B, D, E, F; /// F | A, B, D, F; /// G | A, B, D, G; ///; ///; /// Note that the examples show optimal visist sets but not necessarily the ones; /// derived by the explorer depending on the available CFG analyses (see; /// MustBeExecutedContextExplorer). Also note that we, depending on the options,; /// the visit set can contain instructions from other functions.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/MustExecute.h:2167,depend,depending,2167,interpreter/llvm-project/llvm/include/llvm/Analysis/MustExecute.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/MustExecute.h,2,['depend'],['depending']
Integrability,"oration, https://github.com/willowsystems; * MIT license.; * Permission is hereby granted, free of charge, to any person obtaining; * a copy of this software and associated documentation files (the; * ""Software""), to deal in the Software without restriction, including; * without limitation the rights to use, copy, modify, merge, publish,; * distribute, sublicense, and/or sell copies of the Software, and to; * permit persons to whom the Software is furnished to do so, subject to; * the following conditions:; * ; * The above copyright notice and this permission notice shall be; * included in all copies or substantial portions of the Software.; * ; * THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND,; * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF; * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND; * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE; * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION; * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION; * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.; * ====================================================================; */; /**; * This file adds the standard font metrics to jsPDF.; *; * Font metrics data is reprocessed derivative of contents of; * ""Font Metrics for PDF Core 14 Fonts"" package, which exhibits the following copyright and license:; *; * Copyright (c) 1989, 1990, 1991, 1992, 1993, 1997 Adobe Systems Incorporated. All Rights Reserved.; *; * This file and the 14 PostScript(R) AFM files it accompanies may be used,; * copied, and distributed for any purpose and without charge, with or without; * modification, provided that all copyright notices are retained; that the AFM; * files are not distributed without this file; that all modifications to this; * file or any of the AFM files are prominently noted in the modified file(s);; * and that this paragraph is not modified. Adobe Systems has no",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:1092,CONTRACT,CONTRACT,1092,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['CONTRACT'],['CONTRACT']
Integrability,"orkerExecutor<F, T, R>; /// The most general case, used by; /// TProcessExecutor::MapReduce(F func, T& args, R redfunc).; /// This worker is build with:; /// * a function of signature F (the one to be executed); /// * a collection of arguments of type T on which to apply the function; /// * a reduce function with signature R to be used to squash many; /// returned values together.; ///; /// ### Partial specializations; /// A few partial specializations are provided for less general cases:; /// * TMPWorkerExecutor<F, T, void> handles the case of a function that takes; /// one argument and does not perform reduce operations; /// (TProcessExecutor::Map(F func, T& args)).; /// * TMPWorkerExecutor<F, void, R> handles the case of a function that takes; /// no arguments, to be executed a specified amount of times, which; /// returned values are squashed together (reduced); /// (TProcessExecutor::Map(F func, unsigned nTimes, R redfunc)); /// * TMPWorkerExecutor<F, void, void> handles the case of a function that takes; /// no arguments and whose arguments are not ""reduced""; /// (TProcessExecutor::Map(F func, unsigned nTimes)); ///; /// Since all the important data are passed to TMPWorkerExecutor at construction; /// time, the kind of messages that client and workers have to exchange; /// are usually very simple.; ///; //////////////////////////////////////////////////////////////////////////; // Quick guide to TMPWorkerExecutor:; // For each TProcessExecutor::Map and TProcessExecutor::MapReduce signature; // there's a corresponding; // specialization of TMPWorkerExecutor:; // * Map(func, nTimes) --> TMPWorkerExecutor<F, void, void>; // * Map(func, args) --> TMPWorkerExecutor<F, T, void>; // * MapReduce(func, nTimes, redfunc) --> TMPWorkerExecutor<F, void, R>; // * MapReduce(func, args, redfunc) --> TMPWorkerExecutor<F, T, R>; // I thought about having four different classes (with different names); // instead of four specializations of the same class template, but it really; ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/TMPWorkerExecutor.h:1619,message,messages,1619,core/multiproc/inc/TMPWorkerExecutor.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/TMPWorkerExecutor.h,1,['message'],['messages']
Integrability,"orms when the flag `OpenGL.CanvasPreferGL` is set to `1`; in `$ROOTSYS/etc/system.rootrc`, or on Mac with the Cocoa backend. On the file output; it is visible with PDF, PNG, Gif, JPEG, SVG, TeX ... but not PostScript. Alternatively, you can call at the top of your script `gSytle->SetCanvasPreferGL();`.; Or if you prefer to activate GL for a single canvas `c`, then use `c->SetSupportGL(true);`. \anchor ATTTEXT4; ## Text Size. If the text precision (see next paragraph) is smaller than 3, the text; size (`textsize`) is a fraction of the current pad size. Therefore the; same `textsize` value can generate text outputs with different absolute; sizes in two different pads.; The text size in pixels (`charheight`) is computed the following way:. ~~~ {.cpp}; pad_width = gPad->XtoPixel(gPad->GetX2());; pad_height = gPad->YtoPixel(gPad->GetY1());; if (pad_width < pad_height) charheight = textsize*pad_width;; else charheight = textsize*pad_height;; ~~~. If the text precision is equal to 3, the text size doesn't depend on the pad's; dimensions. A given `textsize` value always generates the same absolute; size. The text size (`charheight`) is given in pixels:. ~~~ {.cpp}; charheight = textsize;; ~~~. Note that to scale fonts to the same size as the old True Type package a; scale factor of `0.93376068` is apply to the text size before drawing. The text size of any class inheriting from `TAttText` can; be changed using the method `SetTextSize` and retrieved using the; method `GetTextSize`. \anchor ATTTEXT5; ## Text Font and Precision. The text font code is combination of the font number and the precision.; ~~~ {.cpp}; Text font code = 10*fontnumber + precision; ~~~; Font numbers must be between 1 and 14. The precision can be:. - `precision = 0` fast hardware fonts (steps in the size); - `precision = 1` scalable and rotatable hardware fonts (see below); - `precision = 2` scalable and rotatable hardware fonts; - `precision = 3` scalable and rotatable hardware fonts. Text size; is give",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TAttText.cxx:3806,depend,depend,3806,core/base/src/TAttText.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TAttText.cxx,1,['depend'],['depend']
Integrability,"other graphs (e.g. the; // graph containing the ORC runtime RTTI support) so we need to handle an; // unknown set of dependencies during bootstrap, and (b) these graphs may; // be linked concurrently if the user has installed a concurrent dispatcher.; //; // We satisfy these constraints by implementing a bootstrap phase during which; // allocation actions generated by MachOPlatform are appended to a list of; // deferred allocation actions, rather than to the graphs themselves. At the; // end of the bootstrap process the deferred actions are attached to a final; // ""complete-bootstrap"" graph that causes them to be run.; //; // The bootstrap steps are as follows:; //; // 1. Request the graph containing the mach header. This graph is guaranteed; // not to have any metadata so the fact that the registration functions; // are not available yet is not a problem.; //; // 2. Look up the registration functions and discard the results. This will; // trigger linking of the graph containing these functions, and; // consequently any graphs that it depends on. We do not use the lookup; // result to find the addresses of the functions requested (as described; // above the lookup will return too late for that), instead we capture the; // addresses in a post-allocation pass injected by the platform runtime; // during bootstrap only.; //; // 3. During bootstrap the MachOPlatformPlugin keeps a count of the number of; // graphs being linked (potentially concurrently), and we block until all; // of these graphs have completed linking. This is to avoid a race on the; // deferred-actions vector: the lookup for the runtime registration; // functions may return while some functions (those that are being; // incidentally linked in, but aren't reachable via the runtime functions); // are still being linked, and we need to capture any allocation actions; // for this incidental code before we proceed.; //; // 4. Once all active links are complete we transfer the deferred actions to; // a newly a",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ExecutionEngine/Orc/MachOPlatform.cpp:1762,depend,depends,1762,interpreter/llvm-project/llvm/lib/ExecutionEngine/Orc/MachOPlatform.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ExecutionEngine/Orc/MachOPlatform.cpp,1,['depend'],['depends']
Integrability,"ound, and; therefore kept, a few implementation details have changed, and this; class can take advantage of MINUIT [4] to improve the errors; of the fitting, thanks to the class TMinuit. In [5] and [6] H. Wind demonstrates the utility; of this procedure in the context of tracking, magnetic field; parameterisation, and so on. The outline of the method used in this; class is based on Winds discussion, and I refer these two excellents; text for more information. And example of usage is given in multidimfit.C. ## The Method; Let \f$ D \f$ by the dependent quantity of interest, which depends smoothly; on the observable quantities \f$ x_1, \ldots, x_N \f$ which we'll denote by; \f$\mathbf{x}\f$. Given a training sample of \f$ M\f$ tuples of the form, (TMultiDimFit::AddRow). \f[; \left(\mathbf{x}_j, D_j, E_j\right)\quad,; \f]; where \f$\mathbf{x}_j = (x_{1,j},\ldots,x_{N,j})\f$ are \f$ N\f$ independent; variables, \f$ D_j\f$ is the known, quantity dependent at \f$\mathbf{x}_j\f$ and \f$ E_j\f$ is; the square error in \f$ D_j\f$, the class will try to find the parameterization; \f[; D_p(\mathbf{x}) = \sum_{l=1}^{L} c_l \prod_{i=1}^{N} p_{li}\left(x_i\right); = \sum_{l=1}^{L} c_l F_l(\mathbf{x}); \f]; such that. \f[; S \equiv \sum_{j=1}^{M} \left(D_j - D_p\left(\mathbf{x}_j\right)\right)^2; \f]; is minimal. Here \f$p_{li}(x_i)\f$ are monomials, or Chebyshev or Legendre; polynomials, labelled \f$l = 1, \ldots, L\f$, in each variable \f$ x_i\f$,\f$ i=1, \ldots, N\f$. So what TMultiDimFit does, is to determine the number of terms \f$ L\f$, and then \f$ L\f$ terms; (or functions) \f$ F_l\f$, and the \f$ L\f$ coefficients \f$ c_l\f$, so that \f$ S\f$ is minimal; (TMultiDimFit::FindParameterization). Of course it's more than a little unlikely that \f$ S\f$ will ever become; exact zero as a result of the procedure outlined below. Therefore, the; user is asked to provide a minimum relative error \f$ \epsilon\f$ (TMultiDimFit::SetMinRelativeError),; and \f$ S\f$ will be considered mi",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TMultiDimFit.cxx:2461,depend,dependent,2461,hist/hist/src/TMultiDimFit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TMultiDimFit.cxx,1,['depend'],['dependent']
Integrability,"oup Roostats. BayesianCalculator is a concrete implementation of IntervalCalculator, providing the computation; of a credible interval using a Bayesian method.; The class works only for one single parameter of interest and it integrates the likelihood function with the given prior; probability density function to compute the posterior probability. The result of the class is a one dimensional interval; (class SimpleInterval ), which is obtained from inverting the cumulative posterior distribution.; This calculator works then only for model with a single parameter of interest.; The model can instead have several nuisance parameters which are integrated (marginalized) in the computation of the posterior function.; The integration and normalization of the posterior is computed using numerical integration methods provided by ROOT.; See the MCMCCalculator for model with multiple parameters of interest. The interface allows one to construct the class by passing the data set, probability density function for the model, the prior; functions and then the parameter of interest to scan. The nuisance parameters can also be passed to be marginalized when; computing the posterior. Alternatively, the class can be constructed by passing the data and the ModelConfig containing; all the needed information (model pdf, prior pdf, parameter of interest, nuisance parameters, etc..). After configuring the calculator, one only needs to ask GetInterval(), which; will return an SimpleInterval object. By default the extreme of the integral are obtained by inverting directly the; cumulative posterior distribution. By using the method SetScanOfPosterior(nbins) the interval is then obtained by; scanning the posterior function in the given number of points. The first method is in general faster but it requires an; integration one extra dimension ( in the poi in addition to the nuisance parameters), therefore in some case it can be; less robust. The class can also return the posterior function (met",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/BayesianCalculator.cxx:1419,interface,interface,1419,roofit/roostats/src/BayesianCalculator.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/BayesianCalculator.cxx,1,['interface'],['interface']
Integrability,"own""`.; /// \param[in] variationName a generic name for this set of varied values, e.g. `""ptvariation""`.; ///; /// Vary provides a natural and flexible syntax to define systematic variations that automatically propagate to; /// Filters, Defines and results. RDataFrame usage of columns with attached variations does not change, but for; /// results that depend on any varied quantity, a map/dictionary of varied results can be produced with; /// ROOT::RDF::Experimental::VariationsFor (see the example below).; ///; /// The dictionary will contain a ""nominal"" value (accessed with the ""nominal"" key) for the unchanged result, and; /// values for each of the systematic variations that affected the result (via upstream Filters or via direct or; /// indirect dependencies of the column values on some registered variations). The keys will be a composition of; /// variation names and tags, e.g. ""pt:up"" and ""pt:down"" for the example below.; ///; /// In the following example we add up/down variations of pt and fill a histogram with a quantity that depends on pt.; /// We automatically obtain three histograms in output (""nominal"", ""pt:up"" and ""pt:down""):; /// ~~~{.cpp}; /// auto nominal_hx =; /// df.Vary(""pt"", [] (double pt) { return RVecD{pt*0.9, pt*1.1}; }, {""down"", ""up""}); /// .Filter(""pt > k""); /// .Define(""x"", someFunc, {""pt""}); /// .Histo1D(""x"");; ///; /// auto hx = ROOT::RDF::Experimental::VariationsFor(nominal_hx);; /// hx[""nominal""].Draw();; /// hx[""pt:down""].Draw(""SAME"");; /// hx[""pt:up""].Draw(""SAME"");; /// ~~~; /// RDataFrame computes all variations as part of a single loop over the data.; /// In particular, this means that I/O and computation of values shared; /// among variations only happen once for all variations. Thus, the event loop; /// run-time typically scales much better than linearly with the number of; /// variations.; ///; /// RDataFrame lazily computes the varied values required to produce the; /// outputs of \ref ROOT::RDF::Experimental::VariationsFor ""Varia",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RDF/RInterface.hxx:1715,depend,depends,1715,tree/dataframe/inc/ROOT/RDF/RInterface.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RDF/RInterface.hxx,1,['depend'],['depends']
Integrability,"parate running compensation (a variable to accumulate small errors).; ///; /// ### Auto-vectorisable accumulation; /// This class can internally use multiple accumulators (template parameter `N`).; /// When filled from a collection that supports index access from a *contiguous* block of memory,; /// compilers such as gcc, clang and icc can auto-vectorise the accumulation. This happens by cycling; /// through the internal accumulators based on the value of ""`index % N`"", so `N` accumulators can be filled from a block; /// of `N` numbers in a single instruction.; ///; /// The usage of multiple accumulators might slightly increase the precision in comparison to the single-accumulator version; /// with `N = 1`.; /// This depends on the order and magnitude of the numbers being accumulated. Therefore, in rare cases, the accumulation; /// result can change *in dependence of N*, even when the data are identical.; /// The magnitude of such differences is well below the precision of the floating point type, and will therefore mostly show; /// in the compensation sum(see Carry()). Increasing the number of accumulators therefore only makes sense to; /// speed up the accumulation, but not to increase precision.; ///; /// \param T The type of the values to be accumulated.; /// \param N Number of accumulators. Defaults to 1. Ideal values are the widths of a vector register on the relevant architecture.; /// Depending on the instruction set, good values are:; /// - AVX2-float: 8; /// - AVX2-double: 4; /// - AVX512-float: 16; /// - AVX512-double: 8; ///; /// ### Examples; ///; /// ~~~{.cpp}; /// std::vector<double> numbers(1000);; /// for (std::size_t i=0; i<1000; ++i) {; /// numbers[i] = rand();; /// }; ///; /// ROOT::Math::KahanSum<double, 4> k;; /// k.Add(numbers.begin(), numbers.end());; /// // or; /// k.Add(numbers);; /// ~~~; /// ~~~{.cpp}; /// double offset = 10.;; /// auto result = ROOT::Math::KahanSum<double, 4>::Accumulate(numbers.begin(), numbers.end(), offset);; /// ~~~",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Util.h:1672,Depend,Depending,1672,math/mathcore/inc/Math/Util.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Util.h,1,['Depend'],['Depending']
Integrability,"paths through; // preferred traces. This is useful for super-scalar CPUs where execution speed; // can be limited both by data dependencies and by limited execution resources.; //; // Out-of-order CPUs will often be executing instructions from multiple basic; // blocks at the same time. This makes it difficult to estimate the resource; // usage accurately in a single basic block. Resources can be estimated better; // by looking at a trace through the current basic block.; //; // For every block, the MachineTraceMetrics pass will pick a preferred trace; // that passes through the block. The trace is chosen based on loop structure,; // branch probabilities, and resource usage. The intention is to pick likely; // traces that would be the most affected by code transformations.; //; // It is expensive to compute a full arbitrary trace for every block, so to; // save some computations, traces are chosen to be convergent. This means that; // if the traces through basic blocks A and B ever cross when moving away from; // A and B, they never diverge again. This applies in both directions - If the; // traces meet above A and B, they won't diverge when going further back.; //; // Traces tend to align with loops. The trace through a block in an inner loop; // will begin at the loop entry block and end at a back edge. If there are; // nested loops, the trace may begin and end at those instead.; //; // For each trace, we compute the critical path length, which is the number of; // cycles required to execute the trace when execution is limited by data; // dependencies only. We also compute the resource height, which is the number; // of cycles required to execute all instructions in the trace when ignoring; // data dependencies.; //; // Every instruction in the current block has a slack - the number of cycles; // execution of the instruction can be delayed without extending the critical; // path.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineTraceMetrics.h:2091,depend,dependencies,2091,interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineTraceMetrics.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineTraceMetrics.h,2,['depend'],['dependencies']
Integrability,"plementing analytical integrals; To implement analytical integrals, two functions must be implemented. First,. ```; Int_t getAnalyticalIntegral(const RooArgSet& integSet, RooArgSet& anaIntSet); ```; should return the analytical integrals that are supported. `integSet`; is the set of dependents for which integration is requested. The; function should copy the subset of dependents it can analytically; integrate to `anaIntSet`, and return a unique identification code for; this integration configuration. If no integration can be; performed, zero should be returned. Second,. ```; double analyticalIntegral(Int_t code); ```. implements the actual analytical integral(s) advertised by; `getAnalyticalIntegral()`. This function will only be called with; codes returned by `getAnalyticalIntegral()`, except code zero. The integration range for each dependent to be integrated can; be obtained from the dependent's proxy functions `min()` and; `max()`. Never call these proxy functions for any proxy not known to; be a dependent via the integration code. Doing so may be; ill-defined, e.g., in case the proxy holds a function, and will; trigger an assert. Integrated category dependents should always be; summed over all of their states. ### Direct generation of observables. Distributions for any PDF can be generated with the accept/reject method,; but for certain PDFs, more efficient methods may be implemented. To; implement direct generation of one or more observables, two; functions need to be implemented, similar to those for analytical; integrals:. ```; Int_t getGenerator(const RooArgSet& generateVars, RooArgSet& directVars); ```; and; ```; void generateEvent(Int_t code); ```. The first function advertises observables, for which distributions can be generated,; similar to the way analytical integrals are advertised. The second; function implements the actual generator for the advertised observables. The generated dependent values should be stored in the proxy; objects. For this, the ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx:4168,depend,dependent,4168,roofit/roofitcore/src/RooAbsPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx,2,"['depend', 'integrat']","['dependent', 'integration']"
Integrability,"pop up the context menu and then select the menu; entry 'Fit Panel'. ""General"" Tab. The first set of GUI elements is related to the function choice; and settings. The status bar on the bottom provides information; about the current minimization settings using the following; abbreviations:; LIB - shows the current choice between Minuit/Minuit2/Fumili; MIGRAD or FUMILI points to the current minimization method in use.; Itr: - shows the maximum number of iterations nnnn set for the fit.; Prn: - can be DEF/VER/QT and shows the current print option in use. ""Predefined"" combo box - contains a list of predefined functions; in ROOT. The default one is Gaussian. ""Operation"" radio button group defines selected operational mode; between functions: NOP - no operation (default); ADD - addition; CONV - convolution (will be implemented in the future). Users can enter the function expression in a text entry field.; The entered string is checked after Enter key was pressed. An; error message shows up if the string is not accepted. The current; prototype is limited and users have no freedom to enter file/user; function names in this field. ""Set Parameters"" button opens a dialog for parameters settings. ""Fit Settings"" provides user interface elements related to the; fitter. Currently there are two method choices: Chi-square and; Binned Likelihood. ""Linear Fit"" check button sets the use of Linear fitter is it is; selected. Otherwise the option 'F' is applied if polN is selected.; ""Robust"" number entry sets the robust value when fitting graphs.; ""No Chi-square"" check button sets ON/OFF option 'C' - do not; calculate Chi-square (for Linear fitter). Fit options:; ""Integral"" check button switch ON/OFF option 'I' - use integral; of function instead of value in bin center.; ""Best Errors"" sets ON/OFF option 'E' - better errors estimation; using Minos technique.; ""All weights = 1"" sets ON/OFF option 'W' - all weights set to 1,; excluding empty bins and ignoring error bars.; ""Empty bins, weight",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/fitpanel/src/TFitEditor.cxx:1639,message,message,1639,gui/fitpanel/src/TFitEditor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/fitpanel/src/TFitEditor.cxx,1,['message'],['message']
Integrability,"port; - BFGS (default); - L-BFGS-S; - Nelder-Mead; - CG; - and more methods, see the Details in the documentation of the function `optimix` of the [optmix R package](https://cran.r-project.org/web/packages/optimx/optimx.pdf). The Minimizer class provides the interface to perform the minimization including. In addition to provide the API for function minimization (via ROOT::Math::Minimizer::Minimize) the Minimizer class provides:; - the interface for setting the function to be minimized. The objective function passed to the Minimizer must implement the multi-dimensional generic interface; ROOT::Math::IBaseFunctionMultiDim. If the function provides gradient calculation (e.g. implementing the ROOT::Math::IGradientFunctionMultiDim interface); the gradient will be used by the Minimizer class, when needed. There are convenient classes for the users to wrap their own functions in this required interface for minimization.; These are the `ROOT::Math::Functor` class and the `ROOT::Math::GradFunctor` class for wrapping functions providing both evaluation and gradient. Some methods, like Fumili, Fumili2 and GSLMultiFit are; specialized method for least-square and also likelihood minimizations. They require then that the given function implements in addition; the `ROOT::Math::FitMethodFunction` interface.; - The interface for setting the initial values for the function variables (which are the parameters in; of the model function in case of solving for fitting) and specifying their limits.; - The interface to set and retrieve basic minimization parameters. These parameter are controlled by the class `ROOT::Math::MinimizerOptions`.; When no parameters are specified the default ones are used. Specific Minimizer options can also be passed via the `MinimizerOptions` class.; For the list of the available option parameter one must look at the documentation of the corresponding derived class.; - The interface to retrieve the result of minimization ( minimum X values, function value, gr",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Minimizer.h:2784,wrap,wrapping,2784,math/mathcore/inc/Math/Minimizer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Minimizer.h,1,['wrap'],['wrapping']
Integrability,"position as a base where they pops up. */; .macro, .variable {; background-color: PaleGoldenRod;; position: relative;; }; .macro { color: DarkMagenta; }. #tooltiphint {; position: fixed;; width: 50em;; margin-left: -25em;; left: 50%;; padding: 10px;; border: 1px solid #b0b0b0;; border-radius: 2px;; box-shadow: 1px 1px 7px black;; background-color: #c0c0c0;; z-index: 2;; }. .num { width:2.5em; padding-right:2ex; background-color:#eeeeee }; .num { text-align:right; font-size:8pt }; .num { color:#444444 }; .line { padding-left: 1ex; border-left: 3px solid #ccc }; .line { white-space: pre }; .msg { -webkit-box-shadow:1px 1px 7px #000 }; .msg { box-shadow:1px 1px 7px #000 }; .msg { -webkit-border-radius:5px }; .msg { border-radius:5px }; .msg { font-family:Helvetica, sans-serif; font-size:8pt }; .msg { float:left }; .msg { position:relative }; .msg { padding:0.25em 1ex 0.25em 1ex }; .msg { margin-top:10px; margin-bottom:10px }; .msg { font-weight:bold }; .msg { max-width:60em; word-wrap: break-word; white-space: pre-wrap }; .msgT { padding:0x; spacing:0x }; .msgEvent { background-color:#fff8b4; color:#000000 }; .msgControl { background-color:#bbbbbb; color:#000000 }; .msgNote { background-color:#ddeeff; color:#000000 }; .mrange { background-color:#dfddf3 }; .mrange { border-bottom:1px solid #6F9DBE }; .PathIndex { font-weight: bold; padding:0px 5px; margin-right:5px; }; .PathIndex { -webkit-border-radius:8px }; .PathIndex { border-radius:8px }; .PathIndexEvent { background-color:#bfba87 }; .PathIndexControl { background-color:#8c8c8c }; .PathIndexPopUp { background-color: #879abc; }; .PathNav a { text-decoration:none; font-size: larger }; .CodeInsertionHint { font-weight: bold; background-color: #10dd10 }; .CodeRemovalHint { background-color:#de1010 }; .CodeRemovalHint { border-bottom:1px solid #6F9DBE }; .msg.selected{ background-color:orange !important; }. table.simpletable {; padding: 5px;; font-size:12pt;; margin:20px;; border-collapse: collapse; border-spacing: 0px;;",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Rewrite/HTMLRewrite.cpp:2538,wrap,wrap,2538,interpreter/llvm-project/clang/lib/Rewrite/HTMLRewrite.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Rewrite/HTMLRewrite.cpp,2,['wrap'],['wrap']
Integrability,"practice to; specify it as a template parameter to the action itself, like this:; ~~~{.cpp}; df.Histo1D(""b1""); // OK, the type of ""b1"" is deduced at runtime; df.Min<MyNumber_t>(""myObject""); // OK, ""myObject"" is deduced to be of type `MyNumber_t`; ~~~. Deducing types at runtime requires the just-in-time compilation of the relevant actions, which has a small runtime; overhead, so specifying the type of the columns as template parameters to the action is good practice when performance is a goal. When strings are passed as expressions to Filter() or Define(), fundamental types are passed as constants. This avoids certaincommon mistakes such as typing `x = 0` rather than `x == 0`:. ~~~{.cpp}; // this throws an error (note the typo); df.Define(""x"", ""0"").Filter(""x = 0"");; ~~~. \anchor generic-actions; ### User-defined custom actions; RDataFrame strives to offer a comprehensive set of standard actions that can be performed on each event. At the same; time, it allows users to inject their own action code to perform arbitrarily complex data reductions. #### Implementing custom actions with Book(). Through the Book() method, users can implement a custom action and have access to the same features; that built-in RDataFrame actions have, e.g. hooks to events related to the start, end and execution of the; event loop, or the possibility to return a lazy RResultPtr to an arbitrary type of result:. ~~~{.cpp}; #include <ROOT/RDataFrame.hxx>; #include <memory>. class MyCounter : public ROOT::Detail::RDF::RActionImpl<MyCounter> {; std::shared_ptr<int> fFinalResult = std::make_shared<int>(0);; std::vector<int> fPerThreadResults;. public:; // We use a public type alias to advertise the type of the result of this action; using Result_t = int;. MyCounter(unsigned int nSlots) : fPerThreadResults(nSlots) {}. // Called before the event loop to retrieve the address of the result that will be filled/generated.; std::shared_ptr<int> GetResultPtr() const { return fFinalResult; }. // Called at the",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx:67242,inject,inject,67242,tree/dataframe/src/RDataFrame.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx,1,['inject'],['inject']
Integrability,"processed basic blocks in the loop. When encountering; // such values, we optimistically asssume their equivalence and store this; // assumption in a BlockDiffCandidate for the pair of compared BBs.; //; // Once we have diffed all BBs, for every BlockDiffCandidate, we check all; // stored assumptions using the Values map that stores proven equivalences; // between the old and new values, and report a diff if an assumption cannot; // be proven to be true.; //; // Note that after having made an assumption, all further determined; // equivalences implicitly depend on that assumption. These will not be; // reverted or reported if the assumption proves to be false, because these; // are considered indirect diffs caused by earlier direct diffs.; //; // We aim to avoid false negatives in llvm-diff, that is, ensure that; // whenever no diff is reported, the functions are indeed equal. If; // assumptions were made, this is not entirely clear, because in principle we; // could end up with a circular proof where the proof of equivalence of two; // nodes is depending on the assumption of their equivalence.; //; // To see that assumptions do not add false negatives, note that if we do not; // report a diff, this means that there is an equivalence mapping between old; // and new values that is consistent with all assumptions made. The circular; // dependency that exists on an IR value level does not exist at run time,; // because the values selected by the phi nodes must always already have been; // computed. Hence, we can prove equivalence of the old and new functions by; // considering step-wise parallel execution, and incrementally proving; // equivalence of every new computed value. Another way to think about it is; // to imagine cloning the loop BBs for every iteration, turning the loops; // into (possibly infinite) DAGs, and proving equivalence by induction on the; // iteration, using the computed value mapping.; // The class BlockDiffCandidate stores pairs which either hav",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-diff/lib/DifferenceEngine.cpp:1187,depend,depending,1187,interpreter/llvm-project/llvm/tools/llvm-diff/lib/DifferenceEngine.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-diff/lib/DifferenceEngine.cpp,1,['depend'],['depending']
Integrability,"protocol changed; // 3 -> 4: introduction of multi-level-master support; // 4 -> 5: added friends support; // 5 -> 6: drop TFTP, support for asynchronous queries; // 6 -> 7: support for multisessions, archieve, retrieve, ...; // 7 -> 8: return number of entries in GetNextPacket; // 8 -> 9: support for stateless connection via xproofd; // 9 -> 10: new features requested, tested at CAF; // 10 -> 11: new merging strategy; // 11 -> 12: new progress message; // 12 -> 13: exchange version/architecture/compiler info; // 13 -> 14: new proofserv environment setting; // 14 -> 15: add support for entry lists; new version of TFileInfo; // 15 -> 16: add support for generic non-data based processing; // 16 -> 17: new dataset handling system; support for TFileCollection processing; // 17 -> 18: support for reconnection on daemon restarts; // 18 -> 19: TProofProgressStatus used in kPROOF_PROGRESS, kPROOF_STOPPROCESS; // and kPROOF_GETNEXTPACKET messages in Master - worker communication; // 19 -> 20: Fix the asynchronous mode (required changes in some messages); // 20 -> 21: Add support for session queuing; // 21 -> 22: Add support for switching from sync to async while running ('Ctrl-Z' functionality); // 22 -> 23: New dataset features (default tree name; classification per fileserver); // 23 -> 24: Merging optimization; // 24 -> 25: Handling of 'data' dir; group information; // 25 -> 26: Use new TProofProgressInfo class; // 26 -> 27: Use new file for updating the session status; // 27 -> 28: Support for multi-datasets, fix global pack dirs, fix AskStatistics,; // package download, dataset caching; // 28 -> 29: Support for config parameters in EnablePackage, idle-timeout; // 29 -> 30: Add information about data dir in TSlaveInfo; // 30 -> 31: Development cycle 5.29; // 31 -> 32: New log path trasmission; // 32 -> 33: Development cycle 5.29/04 (fixed worker activation, new startup technology, ...); // 33 -> 34: Development cycle 5.33/02 (fix load issue, ...); // 34 -> 35: Development",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/inc/TProof.h:569,message,message,569,proof/proof/inc/TProof.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/inc/TProof.h,3,['message'],"['message', 'messages']"
Integrability,"provided clang recognizes them as builtins, and has the; // effect that this type signature is used in place of the one; // that Builtins.def didn't provide. That's how we can get; // structure types that weren't defined until this header was; // included to be part of the type signature of a builtin that; // was known to clang already.; //; // The declarations use __attribute__(__clang_arm_builtin_alias),; // so that each function declared will be recognized as the; // appropriate MVE builtin in spite of its user-facing name.; //; // (That's better than making them all wrapper functions,; // partly because it avoids any compiler error message citing; // the wrapper function definition instead of the user's code,; // and mostly because some MVE intrinsics have arguments; // required to be compile-time constants, and that property; // can't be propagated through a wrapper function. It can be; // propagated through a macro, but macros can't be overloaded; // on argument types very easily - you have to use _Generic,; // which makes error messages very confusing when the user; // gets it wrong.); //; // Finally, the polymorphic versions of the intrinsics are; // also defined with __attribute__(overloadable), so that when; // the same name is defined with several type signatures, the; // right thing happens. Each one of the overloaded; // declarations is given a different builtin id, which; // has exactly the effect we want: first clang resolves the; // overload to the right function, then it knows which builtin; // it's referring to, and then the Sema checking for that; // builtin can check further things like the constant; // arguments.; //; // One more subtlety is the newline just before the return; // type name. That's a cosmetic tweak to make the error; // messages legible if the user gets the types wrong in a call; // to a polymorphic function: this way, clang will print just; // the _final_ line of each declaration in the header, to show; // the type signatures th",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/TableGen/MveEmitter.cpp:1170,message,messages,1170,interpreter/llvm-project/clang/utils/TableGen/MveEmitter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/TableGen/MveEmitter.cpp,1,['message'],['messages']
Integrability,"ps://host.example.com/bucket/path/to/my/file; /// as3://host.example.com/bucket/path/to/my/file; /// ```; ///; /// For files hosted by Google Storage, use the following forms:; ///; /// ```; /// gs://storage.googleapis.com/bucket/path/to/my/file; /// gshttp://storage.googleapis.com/bucket/path/to/my/file; /// gsthttps://storage.googleapis.com/bucket/path/to/my/file; /// ```; ///; /// The 'as3' scheme is accepted for backwards compatibility but its usage is; /// deprecated.; ///; /// The recommended way to create an instance of this class is through; /// TFile::Open, for instance:; ///; /// ```c++; /// TFile* f1 = TFile::Open(""s3://host.example.com/bucket/path/to/my/file""); /// TFile* f2 = TFile::Open(""gs://storage.googleapis.com/bucket/path/to/my/file""); /// ```; ///; /// The specified scheme (i.e. s3, s3http, s3https, ...) determines the underlying; /// transport protocol to use for downloading the file contents, namely HTTP or HTTPS.; /// The 's3', 's3https', 'gs' and 'gshttps' schemes imply using HTTPS as the transport; /// protocol. The 's3http', 'as3' and 'gshttp' schemes imply using HTTP as the transport; /// protocol.; ///; /// The 'options' argument can contain 'NOPROXY' if you want to bypass; /// the HTTP proxy when retrieving this file's contents. As for any TWebFile-derived; /// object, the URL of the web proxy can be specified by setting an environmental; /// variable 'http_proxy'. If this variable is set, we ask that proxy to route our; /// requests HTTP(S) requests to the file server.; ///; /// In addition, you can also use the 'options' argument to provide the access key; /// and secret key to be used for authentication purposes for this file by using a; /// string of the form ""AUTH=myAccessKey:mySecretkey"". This may be useful to; /// open several files hosted by different providers in the same program/macro,; /// where the environemntal variables solution is not convenient (see below).; ///; /// To use AWS temporary security credentials you need to sp",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TS3WebFile.cxx:1351,protocol,protocol,1351,net/net/src/TS3WebFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TS3WebFile.cxx,1,['protocol'],['protocol']
Integrability,"p}; /// branch->SetAddress(0);; /// Event* event = branch->GetObject();; /// ... Do some work.; /// ~~~; /// If addr is not zero, but the pointer addr points at is; /// zero, then we allocate a branch object and set the passed; /// pointer to point at the allocated object. The caller; /// owns the allocated object and is responsible for deleting; /// it when it is no longer needed.; ///; /// Example:; /// ~~~ {.cpp}; /// Event* event = 0;; /// branch->SetAddress(&event);; /// ... Do some work.; /// delete event;; /// event = 0;; /// ~~~; /// If addr is not zero and the pointer addr points at is; /// also not zero, then the caller has allocated a branch; /// object and is asking us to use it. The caller owns it; /// and must delete it when it is no longer needed.; ///; /// Example:; /// ~~~ {.cpp}; /// Event* event = new Event();; /// branch->SetAddress(&event);; /// ... Do some work.; /// delete event;; /// event = 0;; /// ~~~; /// These rules affect users of TTree::Branch(),; /// TTree::SetBranchAddress(), and TChain::SetBranchAddress(); /// as well because those routines call this one.; ///; /// An example of a tree with branches with objects allocated; /// and owned by us:; /// ~~~ {.cpp}; /// TFile* f1 = new TFile(""myfile_original.root"");; /// TTree* t1 = (TTree*) f->Get(""MyTree"");; /// TFile* f2 = new TFile(""myfile_copy.root"", ""recreate"");; /// TTree* t2 = t1->Clone(0);; /// for (Int_t i = 0; i < 10; ++i) {; /// t1->GetEntry(i);; /// t2->Fill();; /// }; /// t2->Write(); /// delete f2;; /// f2 = 0;; /// delete f1;; /// f1 = 0;; /// ~~~; /// An example of a branch with an object allocated by us,; /// but owned by the caller:; /// ~~~ {.cpp}; /// TFile* f = new TFile(""myfile.root"", ""recreate"");; /// TTree* t = new TTree(""t"", ""A test tree.""); /// Event* event = 0;; /// TBranchElement* br = t->Branch(""event."", &event);; /// for (Int_t i = 0; i < 10; ++i) {; /// ... Fill event with meaningful data in some way.; /// t->Fill();; /// }; /// t->Write();; /// delete event",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TBranchElement.cxx:1696,rout,routines,1696,tree/tree/src/TBranchElement.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TBranchElement.cxx,1,['rout'],['routines']
Integrability,"r `<CR>` or `q`; /// to see the next 50 lines. Depending on the Tree structure, one entry might; /// be printed across several lines, distinguished by the `Instance` column.; /// You can change the default number of lines to be shown before `<CR>` or `q`; /// via mytree->SetScanField(maxlines) where maxlines is 50 by default.; /// If maxlines is set to 0 all entries of the Tree are shown, and you are; /// not prompted to press `<CR>` or `q` to end the loop.; ///; /// This option is interesting when dumping the contents of a Tree to; /// an ascii file, eg from the command line.; /// ### with ROOT 5; /// ~~~{.cpp}; /// root [0] tree->SetScanField(0);; /// root [1] tree->Scan(""*""); >tree.log; /// ~~~; /// ### with ROOT 6; /// ~~~{.cpp}; /// root [0] tree->SetScanField(0);; /// root [1] .> tree.log; /// tree->Scan(""*"");; /// .>; /// ~~~; /// will create a file tree.log; ///; /// Arrays (within an entry) are printed in their linear forms.; /// If several arrays with multiple dimensions are printed together,; /// they will NOT be synchronized. For example print; /// arr1[4][2] and arr2[2][3] will results in a printing similar to:; /// ~~~{.cpp}; /// ***********************************************; /// * Row * Instance * arr1 * arr2 *; /// ***********************************************; /// * x * 0 * arr1[0][0]* arr2[0][0]*; /// * x * 1 * arr1[0][1]* arr2[0][1]*; /// * x * 2 * arr1[1][0]* arr2[0][2]*; /// * x * 3 * arr1[1][1]* arr2[1][0]*; /// * x * 4 * arr1[2][0]* arr2[1][1]*; /// * x * 5 * arr1[2][1]* arr2[1][2]*; /// * x * 6 * arr1[3][0]* *; /// * x * 7 * arr1[3][1]* *; /// ~~~; /// However, if there is a selection criterion which is an array, then; /// all the formulas will be synchronized with the selection criterion; /// (see TTreePlayer::DrawSelect for more information).; ///; /// \param option The options string can contains the following parameters:; ///; /// - lenmax=dd; /// Where 'dd' is the maximum number of elements per array that should; /// be printed. If '",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx:1779,synchroniz,synchronized,1779,tree/treeplayer/src/TTreePlayer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx,1,['synchroniz'],['synchronized']
Integrability,"r either signature, func is executed as many times as needed by a pool of; /// n workers; where n tipically defaults to the number of cores.\n; /// A collection containing the result of each execution is returned.\n; /// **Note:** the user is responsible for the deletion of any object that might; /// be created upon execution of func, returned objects included. ROOT::::Internal::TExecutor never; /// deletes what it returns, it simply forgets it.\n; ///; /// \param func; /// \parblock; /// a callable object, such as a lambda expression, an std::function, a; /// functor object or a function that takes zero arguments (for the first signature); /// or one (for the second signature).; /// \endparblock; /// \param args; /// \parblock; /// a standard vector, a ROOT::TSeq of integer type or an initializer list for the second signature.; /// An integer only for the first.\n; /// \endparblock; ///; /// **Note:** in cases where the function to be executed takes more than; /// zero/one argument but all are fixed except zero/one, the function can be wrapped; /// in a lambda or via std::bind to give it the right signature.\n; ///; /// #### Return value:; /// An std::vector. The elements in the container; /// will be the objects returned by func.; ///; /// ### ROOT::Internal::TExecutor::MapReduce; /// This set of methods behaves exactly like Map, but takes an additional; /// function as a third argument. This function is applied to the set of; /// objects returned by the corresponding Map execution to ""squash"" them; /// into a single object. The signature of the reduce function should be `(const std::vector<T>) -> T`; ///; /// An integer can be passed as the fourth argument indicating the number of chunks we want to divide our work in.; /// <b>(Note: Please be aware that chunking is only available when the policy is kMultiThread, ignoring this argument in; /// other cases)</b> This may be useful to avoid the overhead introduced when running really short tasks. In this case,; /// th",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/imt/src/TExecutor.cxx:1718,wrap,wrapped,1718,core/imt/src/TExecutor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/src/TExecutor.cxx,1,['wrap'],['wrapped']
Integrability,"r written permission.; **; ** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS ""AS IS"" ; ** AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE ; ** IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE; ** ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE ; ** LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR ; ** CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF ; ** SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS; ** INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN; ** CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE); ** ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF; ** THE POSSIBILITY OF SUCH DAMAGE.; */; /*; ** Copyright (c) 2007 The Khronos Group Inc.; ** ; ** Permission is hereby granted, free of charge, to any person obtaining a; ** copy of this software and/or associated documentation files (the; ** ""Materials""), to deal in the Materials without restriction, including; ** without limitation the rights to use, copy, modify, merge, publish,; ** distribute, sublicense, and/or sell copies of the Materials, and to; ** permit persons to whom the Materials are furnished to do so, subject to; ** the following conditions:; ** ; ** The above copyright notice and this permission notice shall be included; ** in all copies or substantial portions of the Materials.; ** ; ** THE MATERIALS ARE PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND,; ** EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF; ** MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.; ** IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY; ** CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,; ** TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE; ** MATERIALS OR THE USE OR OTHER DEALINGS IN THE MATERIALS.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/glew/inc/GL/wglew.h:2818,CONTRACT,CONTRACT,2818,builtins/glew/inc/GL/wglew.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/glew/inc/GL/wglew.h,1,['CONTRACT'],['CONTRACT']
Integrability,"r: Fons Rademakers 14/08/97; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /**; \file TNetFile.cxx; \class TNetFile; \ingroup IO. A TNetFile is like a normal TFile except that it reads and writes; its data via a rootd server (for more on the rootd daemon see the; source files in `root/rootd/src/`). TNetFile file names are in; standard URL format with protocol ""root"" or ""roots"". The following; are valid TNetFile URL's:; - `root://hpbrun.cern.ch/root/hsimple.root`; - `root://pcna49a:5151/~na49/data/run821.root`; - `root://pcna49d.cern.ch:5050//v1/data/run810.root`. The only difference with the well known httpd URL's is that the root; of the remote file tree is the user's home directory. Therefore an; absolute pathname requires a // after the host or port specifier; (see last example). Further the expansion of the standard shell; characters, like ~, $, .., are handled as expected.; TNetFile (actually TUrl) uses 1094 as default port for rootd. Connecting to a rootd requires the remote user id and password.; TNetFile allows three ways for you to provide your login:; Setting it globally via the static functions:; 1. TAuthenticate::SetGlobalUser() and TAuthenticate::SetGlobalPasswd(); 2. Getting it from the `~/.netrc` file (same file as used by ftp); 3. Command line prompt; The different methods will be tried in the order given above.; On machines with AFS rootd will authenticate using AFS (if it was; compiled with AFS support). If the protocol is specified as ""rootk"" kerberos5 will be used for; authentication. The rootd daemon lives in the directory `$ROOTSYS/bin`. It can be; started either via inetd or by hand from the command line (no need; to be super user).; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TNetFile.cxx:1795,protocol,protocol,1795,net/net/src/TNetFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TNetFile.cxx,1,['protocol'],['protocol']
Integrability,"racted from the beginning of compressed frame, so providing only the frame's beginning is enough.; Data fragment must be large enough to ensure successful decoding.; `ZSTD_frameHeaderSize_max` bytes is guaranteed to always be large enough.; @result : 0 : successful decoding, the `ZSTD_frameHeader` structure is correctly filled.; >0 : `srcSize` is too small, please provide at least @result bytes on next attempt.; errorCode, which can be tested using ZSTD_isError(). It fills a ZSTD_frameHeader structure with important information to correctly decode the frame,; such as the dictionary ID, content size, or maximum back-reference distance (`windowSize`).; Note that these values could be wrong, either because of data corruption, or because a 3rd party deliberately spoofs false information.; As a consequence, check that values remain within valid application range.; For example, do not allocate memory blindly, check that `windowSize` is within expectation.; Each application can set its own limits, depending on local restrictions.; For extended interoperability, it is recommended to support `windowSize` of at least 8 MB. ZSTD_decompressContinue() needs previous data blocks during decompression, up to `windowSize` bytes.; ZSTD_decompressContinue() is very sensitive to contiguity,; if 2 blocks don't follow each other, make sure that either the compressor breaks contiguity at the same place,; or that previous contiguous segment is large enough to properly handle maximum back-reference distance.; There are multiple ways to guarantee this condition. The most memory efficient way is to use a round buffer of sufficient size.; Sufficient size is determined by invoking ZSTD_decodingBufferSize_min(),; which can @return an error code if required value is too large for current system (in 32-bits mode).; In a round buffer methodology, ZSTD_decompressContinue() decompresses each block next to previous one,; up to the moment there is not enough room left in the buffer to guarantee decoding",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h:1341,depend,depending,1341,builtins/zstd/zstd.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h,1,['depend'],['depending']
Integrability,"rbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooMsgService.cxx; \class RooMsgService; \ingroup Roofitcore. Singleton class that organizes messages generated in RooFit.; Each message has a message level RooFit::MsgLevel (DEBUG,INFO,PROGRESS,WARNING,ERROR or FATAL),; an source object, and a RooFit::MsgTopic.; RooMsgService allows to filter and redirect messages into streams; according to message level, topic, (base) class of originating object, name of originating; object and based on attribute labels attached to individual objects.; The current default configuration creates streams for all messages at WARNING level; or higher (e.g. ERROR and FATAL) and for all INFO message on topics Generation,Plotting,; Integration and Minimization and redirects them to stdout. Users can create additional streams; for logging of e.g. DEBUG messages on particular topics or objects and/or redirect streams to; C++ streams or files. The singleton instance is accessible through RooMsgService::instance(). ### Temporarily change the message level; There is a helper, RooHelpers::LocalChangeMsgLevel, that overrides the default message levels as; long as it is alive. To suppress everything below WARNING:; ~~~{.cpp}; RooHelpers::LocalChangeMessageLevel changeMsgLvl(RooFit::WARNING);; [ statements that normally generate a lot of output ]; ~~~. #### Temporarily capture a message stream; RooHelpers::HijackMessageStream allows to fully capture a message stream in a std::stringstream. With this,; RooFit messages can be evaluated or suppressed.; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMsgService.cxx:1257,message,messages,1257,roofit/roofitcore/src/RooMsgService.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMsgService.cxx,9,"['Integrat', 'message']","['Integration', 'message', 'messages']"
Integrability,"re the `->` represents dependency in; // therms of the import.; // ```; // A->B->C->D; // `->E; // ```; // We would like to import A.; // The import behaves like a DFS, so we will visit the nodes in this order:; // ABCDE.; // During the visitation we will have the following ImportPaths:; // ```; // A; // AB; // ABC; // ABCD; // ABC; // AB; // ABE; // AB; // A; // ```; // If during the visit of E there is an error then we set an error for E,; // then as the call stack shrinks for B, then for A:; // ```; // A; // AB; // ABC; // ABCD; // ABC; // AB; // ABE // Error! Set an error to E; // AB // Set an error to B; // A // Set an error to A; // ```; // However, during the import we could import C and D without any error and; // they are independent from A,B and E.; // We must not set up an error for C and D.; // So, at the end of the import we have an entry in `ImportDeclErrors` for; // A,B,E but not for C,D.; //; // Now what happens if there is a cycle in the import path?; // Let's consider this AST:; // ```; // A->B->C->A; // `->E; // ```; // During the visitation we will have the below ImportPaths and if during; // the visit of E there is an error then we will set up an error for E,B,A.; // But what's up with C?; // ```; // A; // AB; // ABC; // ABCA; // ABC; // AB; // ABE // Error! Set an error to E; // AB // Set an error to B; // A // Set an error to A; // ```; // This time we know that both B and C are dependent on A.; // This means we must set up an error for C too.; // As the call stack reverses back we get to A and we must set up an error; // to all nodes which depend on A (this includes C).; // But C is no longer on the import path, it just had been previously.; // Such situation can happen only if during the visitation we had a cycle.; // If we didn't have any cycle, then the normal way of passing an Error; // object through the call stack could handle the situation.; // This is why we must track cycles during the import process for each; // visited declaration.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/ASTImporter.h:1716,depend,dependent,1716,interpreter/llvm-project/clang/include/clang/AST/ASTImporter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/ASTImporter.h,2,['depend'],"['depend', 'dependent']"
Integrability,"re weight equal the result of the selection expression.; ///; /// where V1,V2,V3 correspond to the expressions in; /// ~~~ {.cpp}; /// TTree::Draw(""V1:V2:V3:V4"",selection);; /// ~~~; /// If the expression has more than 4 component use GetVal(index); ///; /// Example:; /// ~~~ {.cpp}; /// Root > ntuple->Draw(""py:px"",""pz>4"");; /// Root > TGraph *gr = new TGraph(ntuple->GetSelectedRows(),; /// ntuple->GetV2(), ntuple->GetV1());; /// Root > gr->Draw(""ap""); //draw graph in current pad; /// ~~~; ///; /// A more complete complete tutorial (treegetval.C) shows how to use the; /// GetVal() method.; ///; /// creates a TGraph object with a number of points corresponding to the; /// number of entries selected by the expression ""pz>4"", the x points of the graph; /// being the px values of the Tree and the y points the py values.; ///; /// Important note: By default TTree::Draw creates the arrays obtained; /// with GetW, GetV1, GetV2, GetV3, GetV4, GetVal with a length corresponding; /// to the parameter fEstimate. The content will be the last `GetSelectedRows() % GetEstimate()`; /// values calculated.; /// By default fEstimate=1000000 and can be modified; /// via TTree::SetEstimate. To keep in memory all the results (in case; /// where there is only one result per entry), use; /// ~~~ {.cpp}; /// tree->SetEstimate(tree->GetEntries()+1); // same as tree->SetEstimate(-1);; /// ~~~; /// You must call SetEstimate if the expected number of selected rows; /// you need to look at is greater than 1000000.; ///; /// You can use the option ""goff"" to turn off the graphics output; /// of TTree::Draw in the above example.; ///; /// ### Automatic interface to TTree::Draw via the TTreeViewer; ///; /// A complete graphical interface to this function is implemented; /// in the class TTreeViewer.; /// To start the TTreeViewer, three possibilities:; /// - select TTree context menu item ""StartViewer""; /// - type the command ""TTreeViewer TV(treeName)""; /// - execute statement ""tree->StartViewer();""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:28272,interface,interface,28272,tree/tree/src/TTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx,2,['interface'],['interface']
Integrability,"re; // PassManager, FunctionPassManager, MPPassManager, FPPassManager, BBPassManager.; // This class hierarchy uses multiple inheritance but pass managers do not; // derive from another pass manager.; //; // PassManager and FunctionPassManager are two top-level pass manager that; // represents the external interface of this entire pass manager infrastucture.; //; // Important classes :; //; // [o] class PMTopLevelManager;; //; // Two top level managers, PassManager and FunctionPassManager, derive from; // PMTopLevelManager. PMTopLevelManager manages information used by top level; // managers such as last user info.; //; // [o] class PMDataManager;; //; // PMDataManager manages information, e.g. list of available analysis info,; // used by a pass manager to manage execution order of passes. It also provides; // a place to implement common pass manager APIs. All pass managers derive from; // PMDataManager.; //; // [o] class FunctionPassManager;; //; // This is a external interface used to manage FunctionPasses. This; // interface relies on FunctionPassManagerImpl to do all the tasks.; //; // [o] class FunctionPassManagerImpl : public ModulePass, PMDataManager,; // public PMTopLevelManager;; //; // FunctionPassManagerImpl is a top level manager. It manages FPPassManagers; //; // [o] class FPPassManager : public ModulePass, public PMDataManager;; //; // FPPassManager manages FunctionPasses and BBPassManagers; //; // [o] class MPPassManager : public Pass, public PMDataManager;; //; // MPPassManager manages ModulePasses and FPPassManagers; //; // [o] class PassManager;; //; // This is a external interface used by various tools to manages passes. It; // relies on PassManagerImpl to do all the tasks.; //; // [o] class PassManagerImpl : public Pass, public PMDataManager,; // public PMTopLevelManager; //; // PassManagerImpl is a top level pass manager responsible for managing; // MPPassManagers.; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/LegacyPassManagers.h:1578,interface,interface,1578,interpreter/llvm-project/llvm/include/llvm/IR/LegacyPassManagers.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/LegacyPassManagers.h,2,['interface'],['interface']
Integrability,"recated.; ///; /// The recommended way to create an instance of this class is through; /// TFile::Open, for instance:; ///; /// ```c++; /// TFile* f1 = TFile::Open(""s3://host.example.com/bucket/path/to/my/file""); /// TFile* f2 = TFile::Open(""gs://storage.googleapis.com/bucket/path/to/my/file""); /// ```; ///; /// The specified scheme (i.e. s3, s3http, s3https, ...) determines the underlying; /// transport protocol to use for downloading the file contents, namely HTTP or HTTPS.; /// The 's3', 's3https', 'gs' and 'gshttps' schemes imply using HTTPS as the transport; /// protocol. The 's3http', 'as3' and 'gshttp' schemes imply using HTTP as the transport; /// protocol.; ///; /// The 'options' argument can contain 'NOPROXY' if you want to bypass; /// the HTTP proxy when retrieving this file's contents. As for any TWebFile-derived; /// object, the URL of the web proxy can be specified by setting an environmental; /// variable 'http_proxy'. If this variable is set, we ask that proxy to route our; /// requests HTTP(S) requests to the file server.; ///; /// In addition, you can also use the 'options' argument to provide the access key; /// and secret key to be used for authentication purposes for this file by using a; /// string of the form ""AUTH=myAccessKey:mySecretkey"". This may be useful to; /// open several files hosted by different providers in the same program/macro,; /// where the environemntal variables solution is not convenient (see below).; ///; /// To use AWS temporary security credentials you need to specify the session; /// token. This can be added to the options argument with a string of the form; /// TOKEN=mySessionToken. The temporary access and secret keys must also be; /// available, either via the AUTH option or by environmental variable.; ///; /// If you need to specify more than one option separate them by ' '; /// (blank), for instance:; /// ""NOPROXY AUTH=F38XYZABCDeFgH4D0E1F:V+frt4re7J1euSNFnmaf8wwmI4AAAE7kzxZ/TTM+""; ///; /// Examples:; /// ```; /// TF",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TS3WebFile.cxx:1771,rout,route,1771,net/net/src/TS3WebFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TS3WebFile.cxx,1,['rout'],['route']
Integrability,"red in the same matrix as \f$\mathsf{B}\f$ (TMultiDimFit::MakeCoefficients).; The errors in the coefficients is calculated by inverting the curvature matrix; of the non-orthogonal functions \f$ f_{lj}\f$ [1] (TMultiDimFit::MakeCoefficientErrors). ## Considerations; It's important to realize that the training sample should be; representative of the problem at hand, in particular along the borders; of the region of interest. This is because the algorithm presented; here, is a *interpolation*, rather then a *extrapolation* [5]. Also, the independent variables \f$ x_{i}\f$ need to be linear; independent, since the procedure will perform poorly if they are not; [5]. One can find an linear transformation from ones; original variables \f$ \xi_{i}\f$ to a set of linear independent variables; \f$ x_{i}\f$, using a *Principal Components Analysis* (see TPrincipal), and; then use the transformed variable as input to this class [5] [6]. H. Wind also outlines a method for parameterising a multidimensional; dependence over a multidimensional set of variables. An example; of the method from [5], is a follows (please refer to; [5] for a full discussion):. 1. Define \f$\mathbf{P} = (P_1, \ldots, P_5)\f$ are the 5 dependent; quantities that define a track.; 2. Compute, for \f$ M\f$ different values of \f$\mathbf{P}\f$, the tracks; through the magnetic field, and determine the corresponding; \f$\mathbf{x} = (x_1, \ldots, x_N)\f$.; 3. Use the simulated observations to determine, with a simple; approximation, the values of \f$\mathbf{P}_j\f$. We call these values; \f$\mathbf{P}^\prime_j, j = 1, \ldots, M\f$.; 4. Determine from \f$\mathbf{x}\f$ a set of at least five relevant; coordinates \f$\mathbf{x}^\prime\f$, using contrains, *or; alternative:*; 5. Perform a Principal Component Analysis (using TPrincipal), and use; to get a linear transformation \f$\mathbf{x} \rightarrow \mathbf{x}^\prime\f$, so that; \f$\mathbf{x}^\prime\f$ are constrained and linear independent.; 6. Perform a Princi",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TMultiDimFit.cxx:14360,depend,dependence,14360,hist/hist/src/TMultiDimFit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TMultiDimFit.cxx,1,['depend'],['dependence']
Integrability,"red restart marker number (0..7) is passed as a parameter.; * This routine is supposed to apply whatever error recovery strategy seems; * appropriate in order to position the input stream to the next data segment.; * Note that cinfo->unread_marker is treated as a marker appearing before; * the current data-source input point; usually it should be reset to zero; * before returning.; * Returns FALSE if suspension is required.; *; * This implementation is substantially constrained by wanting to treat the; * input as a data stream; this means we can't back up. Therefore, we have; * only the following actions to work with:; * 1. Simply discard the marker and let the entropy decoder resume at next; * byte of file.; * 2. Read forward until we find another marker, discarding intervening; * data. (In theory we could look ahead within the current bufferload,; * without having to discard data if we don't find the desired marker.; * This idea is not implemented here, in part because it makes behavior; * dependent on buffer size and chance buffer-boundary positions.); * 3. Leave the marker unread (by failing to zero cinfo->unread_marker).; * This will cause the entropy decoder to process an empty data segment,; * inserting dummy zeroes, and then we will reprocess the marker.; *; * #2 is appropriate if we think the desired marker lies ahead, while #3 is; * appropriate if the found marker is a future restart marker (indicating; * that we have missed the desired restart marker, probably because it got; * corrupted).; * We apply #2 or #3 if the found marker is a restart marker no more than; * two counts behind or ahead of the expected one. We also apply #2 if the; * found marker is not a legal JPEG marker code (it's certainly bogus data).; * If the found marker is a restart marker more than 2 counts away, we do #1; * (too much risk that the marker is erroneous; with luck we will be able to; * resync at some future point).; * For any valid non-restart JPEG marker, we apply #3. This k",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdmarker.c:1665,depend,dependent,1665,graf2d/asimage/src/libAfterImage/libjpeg/jdmarker.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdmarker.c,1,['depend'],['dependent']
Integrability,"reen; * related stuff.; *; * 2. Scanline handling facility via ASScanline. ASScanline is the most; * widely used structure since image handling is implemented on; * per-scanline basis.; *; * 3. Image storage, trasformation and rendering via ASImage. ASImage; * provides for generic container used for any image or text; * manipulation. It incorporates such a robust facilities as in-memory; * RLE compression, separate channel storage of 4 channels ( Alpha, Red,; * Green, and Blue ) with 8 bit per channel.; *; * 4. Simplified font handling facility via ASFont and ASFointManager.; * All the font handling is done using ASFont structure, no matter what; * type of font is used. Any font supported by X11 and FreeType can be; * used.; *; * 5. Transparent image file reading for many different formats. Included; * built-in XPM reading code and XCF ( GIMP's native format ).; * Overall supported:; * via external libraries :; * XPM, JPEG, PNG, TIFF, GIF; * via built in code :; * XPM, XCF, PNM, PPM, BMP, ICO, CUR; * Note that XPM can be supported both via built-in code or via libXpm,; * depending on compilation configuration.; * Actuall image file format is autodetected from the file contents -; * file name extention is not used and can be anything at all.; *; * 6. Image export into many popular file formats. Currently implemented :; * XPM, JPEG, PNG, GIF. Work is underway to implement support for TIFF,; * XCF, BMP, ICO.; *; * 7. Image quantization to arbitrary size colormap.; *; * 8. libAfterImage could be used without X window system, which is; * coninient for such thing as web development. XML Image manipulation; * tool, that could be used in such activity is included (see ascompose.c); *; * 9. Image reference counting; *; * USES; * libAfterBase - AfterStep basic functionality library. That Includes; * Hash tables, file search methods, message output, generic types.; * However effort has been made to allow for standalone configuration as; * well. If libAfterBase is not found at ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/afterimage.h:4466,depend,depending,4466,graf2d/asimage/src/libAfterImage/afterimage.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/afterimage.h,1,['depend'],['depending']
Integrability,"rent methods](\ref EFF041); - [V. Merging and combining TEfficiency objects](\ref EFF05); - [Example](\ref EFF05a); - [V.1 When should I use merging?](\ref EFF051); - [Example](\ref EFF05b); - [V.2 When should I use combining?](\ref EFF052); - [Example](\ref EFF05c); - [VI. Further operations](\ref EFF06); - [VI.1 Information about the internal histograms](\ref EFF061); - [VI.2 Fitting](\ref EFF062); - [VI.3 Draw a TEfficiency object](\ref EFF063); - [VI.4 TEfficiency object's axis customisation](\ref EFF064). \anchor EFF01; ## I. Overview; This class handles the calculation of efficiencies and their uncertainties. It; provides several statistical methods for calculating frequentist and Bayesian; confidence intervals as well as a function for combining several efficiencies. Efficiencies have a lot of applications and meanings but in principle, they can; be described by the fraction of good/passed events k out of sample containing; N events. One is usually interested in the dependency of the efficiency on other; (binned) variables. The number of passed and total events is therefore stored; internally in two histograms (TEfficiency::fTotalHistogram and TEfficiency::fPassedHistogram).; Then the efficiency, as well as its upper and lower error, can be calculated for each bin; individually. As the efficiency can be regarded as a parameter of a binomial distribution, the; number of passed and total events must always be integer numbers. Therefore a; filling with weights is not possible. However, you can assign a global weight to each; TEfficiency object (TEfficiency::SetWeight).; It is necessary to create one TEfficiency object; for each weight if you investigate a process involving different weights. This; procedure needs more effort but enables you to re-use the filled object in cases; where you want to change one or more weights. This would not be possible if all; events with different weights were filled in the same histogram. \anchor EFF02; ## II. Creating a TEfficie",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TEfficiency.cxx:1485,depend,dependency,1485,hist/hist/src/TEfficiency.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TEfficiency.cxx,1,['depend'],['dependency']
Integrability,"requires CFITSIO library to be installed on your system. It; /// is currently maintained by NASA/GSFC and can be downloaded from; /// [NASA/GSFC web site](http://fits.gsfc.nasa.gov), as well as documentation.; ///; /// Using this interface is easy and straightforward. There is only 1 class; /// called ""TFITSHDU"" which has several methods to extract data from a; /// FITS file, more specifically, from an HDU within the file. An HDU, or; /// Header Data Unit, is a chunk of data with a header containing several; /// ""keyword = value"" tokens. The header describes the structure of data; /// within the HDU. An HDU can be of two types: an ""image HDU"" or a ""table; /// HDU"". The former can be any kind of multidimensional array of real numbers,; /// by which the name ""image"" may be confusing: you can store an image, but; /// you can also store a N-dimensional data cube. On the other hand, table; /// HDUs are sets of several rows and columns (a.k.a fields) which contain; /// generic data, as strings, real or complex numbers and even arrays.; ///; /// Please have a look to the tutorials ($ROOTSYS/tutorials/fitsio/) to see; /// some examples. IMPORTANT: to run tutorials it is required that; /// you change the current working directory of ROOT (CINT) shell to the; /// tutorials directory. Example:; /// ~~~ {.cpp}; /// root [1] gSystem->ChangeDirectory(""tutorials/fitsio""); /// root [1] .x FITS_tutorial1.C; /// ~~~; /// LIST OF TODO; /// - Support for complex values within data tables; /// - Support for reading arrays from table cells; /// - Support for grouping; ///; /// IMPLEMENTATION NOTES:; ///; /// CFITSIO library uses standard C types ('int', 'long', ...). To avoid; /// confusion, the same types are used internally by the access methods.; /// However, class's fields are ROOT-defined types.; /** \class TFITSHDU; \ingroup fitsio. FITS file interface class. TFITSHDU is a class that allows extracting images and data from FITS files and contains; several methods to manage them.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/fitsio/src/TFITS.cxx:3104,interface,interface,3104,graf2d/fitsio/src/TFITS.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/fitsio/src/TFITS.cxx,1,['interface'],['interface']
Integrability,"resting references:; // Alex Read, ""Presentation of search results: the CLs technique""; // Journal of Physics G: Nucl. Part. Phys. 28 2693-2704 (2002).; // http://www.iop.org/EJ/abstract/0954-3899/28/10/313/; //; // A nice article is also available in the CERN yellow report with the proceeding; // of the 2000 CERN workshop on confidence intervals.; //; // Alex Read, ""Modified Frequentist Analysis of Search Results (The CLs Method)""; // CERN 2000-005 (30 May 2000); //; ///////////////////////////////////////////////////////////////////////////; /** \class TLimit; \legacy{TLimit, Consider switching to RooStats.}; \ingroup Hist; Algorithm to compute 95% CL limits using the Likelihood ratio semi-bayesian method. Implemented by C. Delaere from the mclimit code written by Tom Junk [HEP-EX/9902006].; See [http://cern.ch/thomasj/searchlimits/ecl.html](http://cern.ch/thomasj/searchlimits/ecl.html) for more details. It takes signal, background and data histograms wrapped in a; TLimitDataSource as input and runs a set of Monte Carlo experiments in; order to compute the limits. If needed, inputs are fluctuated according; to systematics. The output is a TConfidenceLevel. The class TLimitDataSource takes the signal, background and data histograms as well as different; systematics sources to form the TLimit input. The class TConfidenceLevel represents the final result of the TLimit algorithm. It is created just after the; time-consuming part and can be stored in a TFile for further processing.; It contains light methods to return CLs, CLb and other interesting; quantities. The actual algorithm... From an input (TLimitDataSource) it produces an output TConfidenceLevel.; For this, nmc Monte Carlo experiments are performed.; As usual, the larger this number, the longer the compute time,; but the better the result. Supposing that there is a plotfile.root file containing 3 histograms; (signal, background and data), you can imagine doing things like:. ~~~{.cpp}; TFile* infile=new TFile(""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TLimit.cxx:1415,wrap,wrapped,1415,hist/hist/src/TLimit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TLimit.cxx,1,['wrap'],['wrapped']
Integrability,"rforms can be inscribed with a meaningful tooltip; set by `SetToolTipText(const char* text, Long_t delayms=400). The text button has a label indicating the action to be taken when; the button is pressed. The text can be a hot string (""&Exit"") that; defines the label ""Exit"" and keyboard mnemonics Alt+E for button; selection. A button label can be changed by SetText(new_label). Selecting a text or picture button will generate the event:; - kC_COMMAND, kCM_BUTTON, button id, user data.; */; /** \class TGCheckButton; \ingroup guiwidgets. Selects different options. Like text buttons, they have text or hot string as a label. Selecting a check button will generate the event:; - kC_COMMAND, kCM_CHECKBUTTON, button id, user data. If a command string has been specified (via SetCommand()) then this; command string will be executed via the interpreter whenever a; button is selected. A command string can contain the macros:. - $MSG -- kC_COMMAND, kCMCHECKBUTTON packed message; (use GET_MSG() and GET_SUBMSG() to unpack); - $PARM1 -- button id; - $PARM2 -- user data pointer. Before executing these macros are expanded into the respective Long_t's; */; /** \class TGRadioButton; \ingroup guiwidgets. Selects different options. Like text buttons, they have text or hot string as a label. Radio buttons are grouped usually in logical sets of two or more; buttons to present mutually exclusive choices. Selecting a radio button will generate the event:; - kC_COMMAND, kCM_RADIOBUTTON, button id, user data. If a command string has been specified (via SetCommand()) then this; command string will be executed via the interpreter whenever a; button is selected. A command string can contain the macros:. - $MSG -- kC_COMMAND, kCMRADIOBUTTON packed message; (use GET_MSG() and GET_SUBMSG() to unpack); - $PARM1 -- button id; - $PARM2 -- user data pointer. Before executing these macros are expanded into the respective Long_t's; */; /** \class TGSplitButton; \ingroup guiwidgets. Implements a button with a",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGButton.cxx:3032,message,message,3032,gui/gui/src/TGButton.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGButton.cxx,1,['message'],['message']
Integrability,"rger window. windowBits can also be zero to request that inflate use the window size in; the zlib header of the compressed stream. windowBits can also be -8..-15 for raw inflate. In this case, -windowBits; determines the window size. inflate() will then process raw deflate data,; not looking for a zlib or gzip header, not generating a check value, and not; looking for any check values for comparison at the end of the stream. This; is for use with other formats that use the deflate compressed data format; such as zip. Those formats provide their own check values. If a custom; format is developed using the raw deflate format for compressed data, it is; recommended that a check value such as an adler32 or a crc32 be applied to; the uncompressed data as is done in the zlib, gzip, and zip formats. For; most applications, the zlib format should be used as is. Note that comments; above on the use in deflateInit2() applies to the magnitude of windowBits. windowBits can also be greater than 15 for optional gzip decoding. Add; 32 to windowBits to enable zlib and gzip decoding with automatic header; detection, or add 16 to decode only the gzip format (the zlib format will; return a Z_DATA_ERROR). If a gzip stream is being decoded, strm->adler is a; crc32 instead of an adler32. inflateInit2 returns Z_OK if success, Z_MEM_ERROR if there was not enough; memory, Z_VERSION_ERROR if the zlib library version is incompatible with the; version assumed by the caller, or Z_STREAM_ERROR if the parameters are; invalid, such as a null pointer to the structure. msg is set to null if; there is no error message. inflateInit2 does not perform any decompression; apart from possibly reading the zlib header if present: actual decompression; will be done by inflate(). (So next_in and avail_in may be modified, but; next_out and avail_out are unused and unchanged.) The current implementation; of inflateInit2() does not process any header information -- that is; deferred until inflate() is called.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:3595,message,message,3595,builtins/zlib/zlib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h,1,['message'],['message']
Integrability,"ributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TControlBar; \ingroup gpad. A Control Bar is a fully user configurable tool which provides fast; access to frequently used operations. The user can choose between; buttons and drawn buttons (let's say icons) and assign to them their; own actions (let's say ROOT or C++ commands). The macro below shows an example of control bar.; To execute an item, click with the left mouse button.; To see the HELP of a button, click on the right mouse button. You have access to the last clicked button via the method; GetClicked(). For example, bar->GetClicked()->GetName(); will return the name of the last clicked button. ~~~ {.cpp}; {; // run macro from tutorials directory of ROOT!; TControlBar bar(""vertical"");; bar.AddButton(""Help to run demos"","".x demoshelp.C"",; ""Explains how to run the demos"");; bar.AddButton(""framework"", "".x graphics/framework.C"",; ""An Example of Object Oriented User Interface"");; bar.AddButton(""hsimple"", "".x hsimple.C"",; ""An Example Creating Histograms/Ntuples on File"");; bar.AddButton(""hsum"", "".x hist/hsum.C"",; ""Filling histograms and some graphics options"");; bar.AddButton(""canvas"", "".x graphics/canvas.C"",; ""Canvas and Pad Management"");; bar.AddButton(""formula1"", "".x graphics/formula1.C"",; ""Simple Formula and Functions"");; bar.AddButton(""fillrandom"", "".x hist/fillrandom.C"",; ""Histograms with Random Numbers from a Function"");; bar.AddButton(""fit1"", "".x fit/fit1.C"",; ""A Simple Fitting Example"");; bar.AddButton(""draw2dopt"", "".x hist/draw2dopt.C"",; ""Drawing Options for 2D Histograms"");; bar.AddButton(""graph"", "".x graphs/graph.C"",; ""Examples of a simple graph"");; bar.AddButton(""tornado"", "".x graphics/tornado.C"",; ""Examples of 3-D PolyMarkers"");; bar.AddButton(""shapes"", "".x geom/shapes.C"",; ""The Geometry Shapes"");; bar.AddButton(""file_layout"", "".x io/file.C"",; ""The ROOT file format"");; bar.AddButton(""tree_layout"", "".x tree/tree.C"",; ""The Tr",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TControlBar.cxx:1310,Interface,Interface,1310,graf2d/gpad/src/TControlBar.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TControlBar.cxx,1,['Interface'],['Interface']
Integrability,"right (c) 2014 James Robb, https://github.com/jamesbrobb; *; * Permission is hereby granted, free of charge, to any person obtaining; * a copy of this software and associated documentation files (the; * ""Software""), to deal in the Software without restriction, including; * without limitation the rights to use, copy, modify, merge, publish,; * distribute, sublicense, and/or sell copies of the Software, and to; * permit persons to whom the Software is furnished to do so, subject to; * the following conditions:; *; * The above copyright notice and this permission notice shall be; * included in all copies or substantial portions of the Software.; *; * THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND,; * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF; * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND; * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE; * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION; * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION; * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.; * ====================================================================; */; /**; * @license; * (c) Dean McNamee <dean@gmail.com>, 2013.; *; * https://github.com/deanm/omggif; *; * Permission is hereby granted, free of charge, to any person obtaining a copy; * of this software and associated documentation files (the ""Software""), to; * deal in the Software without restriction, including without limitation the; * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or; * sell copies of the Software, and to permit persons to whom the Software is; * furnished to do so, subject to the following conditions:; *; * The above copyright notice and this permission notice shall be included in; * all copies or substantial portions of the Software.; *; * THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR; * IMPLIED, INCLUDI",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/modules/jspdf.mjs:1027,CONTRACT,CONTRACT,1027,js/modules/jspdf.mjs,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/modules/jspdf.mjs,1,['CONTRACT'],['CONTRACT']
Integrability,"rintUsage(writer, usage); // custom class object; * MyWriteFunctor wfunctor;; * printUsage(&wfunctor, usage); // custom functor; * printUsage(write, 1, usage); // write() to file descriptor 1; * printUsage(cout, usage); // an ostream&; * printUsage(fwrite, stdout, usage); // fwrite() to stdout; * ostringstream sstr;; * printUsage(sstr, usage); // an ostringstream&; *; * @endcode; *; * @par Notes:; * @li the @c write() method of a class that is to be passed as a temporary; * as @c MyWriter() is in the example, must be a @c const method, because; * temporary objects are passed as const reference. This only applies to; * temporary objects that are created and destroyed in the same statement.; * If you create an object like @c writer in the example, this restriction; * does not apply.; * @li a functor like @c MyWriteFunctor in the example must be passed as a pointer.; * This differs from the way functors are passed to e.g. the STL algorithms.; * @li All printUsage() templates are tiny wrappers around a shared non-template implementation.; * So there's no penalty for using different versions in the same program.; * @li printUsage() always interprets Descriptor::help as UTF-8 and always produces UTF-8-encoded; * output. If your system uses a different charset, you must do your own conversion. You; * may also need to change the font of the console to see non-ASCII characters properly.; * This is particularly true for Windows.; * @li @b Security @b warning: Do not insert untrusted strings (such as user-supplied arguments); * into the usage. printUsage() has no protection against malicious UTF-8 sequences.; *; * @param prn The output method to use. See the examples above.; * @param usage the Descriptor[] array whose @c help texts will be formatted.; * @param width the maximum number of characters per output line. Note that this number is; * in actual characters, not bytes. printUsage() supports UTF-8 in @c help and will; * count multi-byte UTF-8 sequences properly. Asian wide",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h:5140,wrap,wrappers,5140,core/dictgen/res/OptionParser.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h,1,['wrap'],['wrappers']
Integrability,"rkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; //////////////////////////////////////////////////////////////////////////////; /** \class RooRealSumPdf; \ingroup Roofitcore. Implements a PDF constructed from a sum of functions:; \f[; \mathrm{PDF}(x) = \frac{ \sum_{i=1}^{n-1} \mathrm{coef}_i * \mathrm{func}_i(x) + \left[ 1 - \sum_{i=1}^{n-1} \mathrm{coef}_i \right] * \mathrm{func}_n(x) }; {\sum_{i=1}^{n-1} \mathrm{coef}_i * \int \mathrm{func}_i(x)dx + \left[ 1 - \sum_{i=1}^{n-1} \mathrm{coef}_i \right] * \int \mathrm{func}_n(x) dx }; \f]. where \f$\mathrm{coef}_i\f$ and \f$\mathrm{func}_i\f$ are RooAbsReal objects, and \f$ x \f$ is the collection of dependents.; In the present version \f$\mathrm{coef}_i\f$ may not depend on \f$ x \f$, but this limitation could be removed should the need arise. If the number of coefficients is one less than the number of functions, the PDF is assumed to be normalised. Due to this additional constraint,; \f$\mathrm{coef}_n\f$ is computed from the other coefficients. ### Extending the PDF; If an \f$ n^\mathrm{th} \f$ coefficient is provided, the PDF **can** be used as an extended PDF, *i.e.* the total number of events will be measured in addition; to the fractions of the various functions. **This requires setting the last argument of the constructor to `true`.**; \note For the RooAddPdf, the extension happens automatically. ### Difference to RooAddPdf / RooRealSumFunc; - RooAddPdf is a PDF of PDFs, *i.e.* its components need to be normalised and non-negative.; - RooRealSumPdf is a PDF of functions, *i.e.*, its components can be negative, but their su",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealSumPdf.cxx:1305,depend,dependents,1305,roofit/roofitcore/src/RooRealSumPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealSumPdf.cxx,1,['depend'],['dependents']
Integrability,"rkby@uci.edu *; * *; * Copyright (c) 2000-2020, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; * \class RooBinSamplingPdf; * The RooBinSamplingPdf is supposed to be used as an adapter between a continuous PDF; * and a binned distribution.; * When RooFit is used to fit binned data, and the PDF is continuous, it takes the probability density; * at the bin centre as a proxy for the probability averaged (integrated) over the entire bin. This is; * correct only if the second derivative of the function vanishes, though. This is shown in the plots; * below.; *; * For PDFs that have larger curvatures, the RooBinSamplingPdf can be used. It integrates the PDF in each; * bin using an adaptive integrator. This usually requires 21 times more function evaluations, but significantly; * reduces biases due to better sampling of the PDF. The integrator can be accessed from the outside; * using integrator(). This can be used to change the integration rules, so less/more function evaluations are; * performed. The target precision of the integrator can be set in the constructor.; *; *; * ### How to use it; * There are two ways to use this class:; * - Manually wrap a PDF:; * ```; * RooBinSamplingPdf binSampler(""<name>"", ""title"", <binned observable of PDF>, <original PDF> [, <precision for integrator>]);; * binSampler.fitTo(data);; * ```; * When a PDF is wrapped with a RooBinSamplingPDF, just use the bin sampling PDF instead of the original one for fits; * or plotting etc.; * \note The binning will be taken from the observable. Make sure that this binning is the same as the one of the dataset that should be fit.; * Use RooRealVar::setBinning() to adapt it.; * - In",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooBinSamplingPdf.cxx:1262,integrat,integrates,1262,roofit/roofitcore/src/RooBinSamplingPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooBinSamplingPdf.cxx,2,['integrat'],"['integrates', 'integrator']"
Integrability,"rmation.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // DependenceAnalysis is an LLVM pass that analyses dependences between memory; // accesses. Currently, it is an (incomplete) implementation of the approach; // described in; //; // Practical Dependence Testing; // Goff, Kennedy, Tseng; // PLDI 1991; //; // There's a single entry point that analyzes the dependence between a pair; // of memory references in a function, returning either NULL, for no dependence,; // or a more-or-less detailed description of the dependence between them.; //; // Currently, the implementation cannot propagate constraints between; // coupled RDIV subscripts and lacks a multi-subscript MIV test.; // Both of these are conservative weaknesses;; // that is, not a source of correctness problems.; //; // Since Clang linearizes some array subscripts, the dependence; // analysis is using SCEV->delinearize to recover the representation of multiple; // subscripts, and thus avoid the more expensive and less precise MIV tests. The; // delinearization is controlled by the flag -da-delinearize.; //; // We should pay some careful attention to the possibility of integer overflow; // in the implementation of the various tests. This could happen with Add,; // Subtract, or Multiply, with both APInt's and SCEV's.; //; // Some non-linear subscript pairs can be handled by the GCD test; // (and perhaps other tests).; // Should explore how often these things occur.; //; // Finally, it seems like certain test cases expose weaknesses in the SCEV; // simplification, especially in the handling of sign and zero extensions.; // It could be useful to spend time exploring these.; //; // Please note that this is work in progress and the interface is subject to; // change.; //; //===----------------------------------------------------------------------===//; // //; // In memory of Ken Kennedy, 1945 - 2007 //; // //; ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/DependenceAnalysis.cpp:1165,depend,dependence,1165,interpreter/llvm-project/llvm/lib/Analysis/DependenceAnalysis.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/DependenceAnalysis.cpp,1,['depend'],['dependence']
Integrability,"roduced by the decoder into; // MCInsts.; //; //; // The X86 disassembler is a table-driven disassembler for the 16-, 32-, and; // 64-bit X86 instruction sets. The main decode sequence for an assembly; // instruction in this disassembler is:; //; // 1. Read the prefix bytes and determine the attributes of the instruction.; // These attributes, recorded in enum attributeBits; // (X86DisassemblerDecoderCommon.h), form a bitmask. The table CONTEXTS_SYM; // provides a mapping from bitmasks to contexts, which are represented by; // enum InstructionContext (ibid.).; //; // 2. Read the opcode, and determine what kind of opcode it is. The; // disassembler distinguishes four kinds of opcodes, which are enumerated in; // OpcodeType (X86DisassemblerDecoderCommon.h): one-byte (0xnn), two-byte; // (0x0f 0xnn), three-byte-38 (0x0f 0x38 0xnn), or three-byte-3a; // (0x0f 0x3a 0xnn). Mandatory prefixes are treated as part of the context.; //; // 3. Depending on the opcode type, look in one of four ClassDecision structures; // (X86DisassemblerDecoderCommon.h). Use the opcode class to determine which; // OpcodeDecision (ibid.) to look the opcode in. Look up the opcode, to get; // a ModRMDecision (ibid.).; //; // 4. Some instructions, such as escape opcodes or extended opcodes, or even; // instructions that have ModRM*Reg / ModRM*Mem forms in LLVM, need the; // ModR/M byte to complete decode. The ModRMDecision's type is an entry from; // ModRMDecisionType (X86DisassemblerDecoderCommon.h) that indicates if the; // ModR/M byte is required and how to interpret it.; //; // 5. After resolving the ModRMDecision, the disassembler has a unique ID; // of type InstrUID (X86DisassemblerDecoderCommon.h). Looking this ID up in; // INSTRUCTIONS_SYM yields the name of the instruction and the encodings and; // meanings of its operands.; //; // 6. For each operand, its encoding is an entry from OperandEncoding; // (X86DisassemblerDecoderCommon.h) and its type is an entry from; // OperandType (ibid.). T",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/Disassembler/X86Disassembler.cpp:1416,Depend,Depending,1416,interpreter/llvm-project/llvm/lib/Target/X86/Disassembler/X86Disassembler.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/Disassembler/X86Disassembler.cpp,1,['Depend'],['Depending']
Integrability,"rom the outside; * using integrator(). This can be used to change the integration rules, so less/more function evaluations are; * performed. The target precision of the integrator can be set in the constructor.; *; *; * ### How to use it; * There are two ways to use this class:; * - Manually wrap a PDF:; * ```; * RooBinSamplingPdf binSampler(""<name>"", ""title"", <binned observable of PDF>, <original PDF> [, <precision for integrator>]);; * binSampler.fitTo(data);; * ```; * When a PDF is wrapped with a RooBinSamplingPDF, just use the bin sampling PDF instead of the original one for fits; * or plotting etc.; * \note The binning will be taken from the observable. Make sure that this binning is the same as the one of the dataset that should be fit.; * Use RooRealVar::setBinning() to adapt it.; * - Instruct test statistics to carry out this wrapping automatically:; * ```; * pdf.fitTo(data, IntegrateBins(<precision>));; * ```; * This method is especially useful when used with a simultaneous PDF, since each component will automatically be wrapped,; * depending on the value of `precision`:; * - `precision < 0.`: None of the PDFs are touched, bin sampling is off.; * - `precision = 0.`: Continuous PDFs that are fit to a RooDataHist are wrapped into a RooBinSamplingPdf. The target precision; * forwarded to the integrator is 1.E-4 (the default argument of the constructor).; * - `precision > 0.`: All continuous PDFs are automatically wrapped into a RooBinSamplingPdf, regardless of what data they are; * fit to (see next paragraph). The same `'precision'` is used for all integrators.; *; * ### Simulating a binned fit using RooDataSet; * Some frameworks use unbinned data (RooDataSet) to simulate binned datasets. By adding one entry for each bin centre with the; * appropriate weight, one can achieve the same result as fitting with RooDataHist. In this case, however, RooFit cannot; * auto-detect that a binned fit is running, and that an integration over the bin is desired (note that the",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooBinSamplingPdf.cxx:2383,Integrat,IntegrateBins,2383,roofit/roofitcore/src/RooBinSamplingPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooBinSamplingPdf.cxx,3,"['Integrat', 'depend', 'wrap']","['IntegrateBins', 'depending', 'wrapped']"
Integrability,"rror estimates. MINUIT always carries around its own current estimates of the parameter; errors, which it will print out on request, no matter how accurate they; are at any given point in the execution. For example, at initialization,; these estimates are just the starting step sizes as specified by the user.; After a HESSE step, the errors are usually quite accurate,; unless there has been a problem. MINUIT, when it prints out error values,; also gives some indication of how reliable it thinks they are. For; example, those marked <TT>CURRENT GUESS ERROR</TT> are only working values; not to be believed, and <TT>APPROXIMATE ERROR</TT> means that they have; been calculated but there is reason to believe that they may not be; accurate. If no mitigating adjective is given, then at least MINUIT believes the; errors are accurate, although there is always a small chance that MINUIT; has been fooled. Some visible signs that MINUIT may have been fooled are:. 1. Warning messages produced during the minimization or error analysis. 2. Failure to find new minimum. 3. Value of <TT>EDM</TT> too big (estimated Distance to Minimum). 4. Correlation coefficients exactly equal to zero, unless some parameters; are known to be uncorrelated with the others. 5. Correlation coefficients very close to one (greater than 0.99). This; indicates both an exceptionally difficult problem, and one which has been; badly parameterised so that individual errors are not very meaningful; because they are so highly correlated. 6. Parameter at limit. This condition, signalled by a MINUIT warning; message, may make both the function minimum and parameter errors; unreliable. See the discussion above ``Getting the right parameter errors; with limits''. The best way to be absolutely sure of the errors, is to use; ``independent'' calculations and compare them, or compare the calculated; errors with a picture of the function. Theoretically, the covariance; matrix for a ``physical'' function must be positive-defin",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TMinuit.cxx:9106,message,messages,9106,math/minuit/src/TMinuit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TMinuit.cxx,1,['message'],['messages']
Integrability,"rs to use in the parallelization. -1 also enables; * RooFit's parallel minimization backend, and sets the number of workers to the number of available processes.; * 0 disables this feature.; * In case parallelization is requested, this option implies `ModularL(true)` in the internal call to the NLL creation method.; * <tr><td> `ParallelGradientOptions(bool enable=true, int orderStrategy=0, int chainFactor=1)` <td> **Experimental** - Control gradient parallelization settings. The first argument; * only disables or enables gradient parallelization, this is on by default.; * The second argument determines the internal partial derivative calculation; * ordering strategy. The third argument determines the number of partial; * derivatives that are executed per task package on each worker.; * <tr><td> `ParallelDescentOptions(bool enable=false, int splitStrategy=0, int numSplits=4)` <td> **Experimental** - Control settings related to the parallelization of likelihoods; * outside of the gradient calculation but in the minimization, most prominently; * in the linesearch step. The first argument this disables or enables likelihood; * parallelization. The second argument determines whether to split the task batches; * per event or per likelihood component. And the third argument how many events or; * respectively components to include in each batch.; * <tr><td> `TimingAnalysis(bool flag)` <td> **Experimental** - Log timings. This feature logs timings with NewStyle likelihoods on multiple processes simultaneously; * and outputs the timings at the end of a run to json log files, which can be analyzed with the; * `RooFit::MultiProcess::HeatmapAnalyzer`. Only works with simultaneous likelihoods.; * </table>; */; /** @brief Protected implementation of the likelihood fitting routine.; *; * This virtual function can be overridden in case you want to change the likelihood fitting logic for custom PDFs.; *; * \note Never call this function directly. Instead, call RooAbsPdf::fitTo().; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx:8794,rout,routine,8794,roofit/roofitcore/src/RooAbsPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx,1,['rout'],['routine']
Integrability,"rson; * libpng versions 1.6.36, December 2018, through 1.6.40, June 2023:; * Cosmin Truta; * See also ""Contributing Authors"", below.; */; /*; * COPYRIGHT NOTICE, DISCLAIMER, and LICENSE; * =========================================; *; * PNG Reference Library License version 2; * ---------------------------------------; *; * * Copyright (c) 1995-2023 The PNG Reference Library Authors.; * * Copyright (c) 2018-2023 Cosmin Truta.; * * Copyright (c) 2000-2002, 2004, 2006-2018 Glenn Randers-Pehrson.; * * Copyright (c) 1996-1997 Andreas Dilger.; * * Copyright (c) 1995-1996 Guy Eric Schalnat, Group 42, Inc.; *; * The software is supplied ""as is"", without warranty of any kind,; * express or implied, including, without limitation, the warranties; * of merchantability, fitness for a particular purpose, title, and; * non-infringement. In no event shall the Copyright owners, or; * anyone distributing the software, be liable for any damages or; * other liability, whether in contract, tort or otherwise, arising; * from, out of, or in connection with the software, or the use or; * other dealings in the software, even if advised of the possibility; * of such damage.; *; * Permission is hereby granted to use, copy, modify, and distribute; * this software, or portions hereof, for any purpose, without fee,; * subject to the following restrictions:; *; * 1. The origin of this software must not be misrepresented; you; * must not claim that you wrote the original software. If you; * use this software in a product, an acknowledgment in the product; * documentation would be appreciated, but is not required.; *; * 2. Altered source versions must be plainly marked as such, and must; * not be misrepresented as being the original software.; *; * 3. This Copyright notice may not be removed or altered from any; * source or altered source distribution.; *; *; * PNG Reference Library License version 1 (for libpng 0.5 through 1.6.35); * ----------------------------------------------------------------",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.h:1606,contract,contract,1606,graf2d/asimage/src/libAfterImage/libpng/png.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.h,1,['contract'],['contract']
Integrability,"rt and; targetEnd. Note: the end pointers are *after* the last item: e.g.; *(sourceEnd - 1) is the last item. The return result indicates whether the conversion was successful,; and if not, whether the problem was in the source or target buffers.; (Only the first encountered problem is indicated.). After the conversion, *sourceStart and *targetStart are both; updated to point to the end of last text successfully converted in; the respective buffers. Input parameters:; sourceStart - pointer to a pointer to the source buffer.; The contents of this are modified on return so that; it points at the next thing to be converted.; targetStart - similarly, pointer to pointer to the target buffer.; sourceEnd, targetEnd - respectively pointers to the ends of the; two buffers, for overflow checking only. These conversion functions take a ConversionFlags argument. When this; flag is set to strict, both irregular sequences and isolated surrogates; will cause an error. When the flag is set to lenient, both irregular; sequences and isolated surrogates are converted. Whether the flag is strict or lenient, all illegal sequences will cause; an error return. This includes sequences such as: <F4 90 80 80>, <C0 80>,; or <A0> in UTF-8, and values above 0x10FFFF in UTF-32. Conformant code; must check for illegal sequences. When the flag is set to lenient, characters over 0x10FFFF are converted; to the replacement character; otherwise (when the flag is set to strict); they constitute an error. Output parameters:; The value ""sourceIllegal"" is returned from some routines if the input; sequence is malformed. When ""sourceIllegal"" is returned, the source; value will point to the illegal value that caused the problem. E.g.,; in UTF-8 when a sequence is malformed, it points to the start of the; malformed sequence. Author: Mark E. Davis, 1994.; Rev History: Rick McGowan, fixes & updates May 2001.; Fixes & updates, Sept 2001. ------------------------------------------------------------------------ */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/ConvertUTF.h:4470,rout,routines,4470,interpreter/llvm-project/llvm/include/llvm/Support/ConvertUTF.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/ConvertUTF.h,1,['rout'],['routines']
Integrability,"s a 20% speed improvement! Added; an explode.c (to replace unimplod.c) that; uses the huft routines here. Removed; register union.; c2 4 Apr 92 M. Adler fixed bug for file sizes a multiple of 32k.; c3 10 Apr 92 M. Adler reduced memory of code tables made by; huft_build significantly (factor of two to; three).; c4 15 Apr 92 M. Adler added NOMEMCPY do kill use of memcpy().; worked around a Turbo C optimization bug.; c5 21 Apr 92 M. Adler added the WSIZE #define to allow reducing; the 32K window size for specialized; applications.; c6 31 May 92 M. Adler added some typecasts to eliminate warnings; c7 27 Jun 92 G. Roelofs added some more typecasts (444: MSC bug).; c8 5 Oct 92 J-l. Gailly added ifdef'd code to deal with PKZIP bug.; c9 9 Oct 92 M. Adler removed a memory error message (~line 416).; c10 17 Oct 92 G. Roelofs changed ULONG/UWORD/byte to ulg/ush/uch,; removed old inflate, renamed inflate_entry; to inflate, added Mark's fix to a comment.; c10.5 14 Dec 92 M. Adler fix up error messages for incomplete trees.; c11 2 Jan 93 M. Adler fixed bug in detection of incomplete; tables, and removed assumption that EOB is; the longest code (bad assumption).; c12 3 Jan 93 M. Adler make tables for fixed blocks only once.; c13 5 Jan 93 M. Adler allow all zero length codes (pkzip 2.04c; outputs one zero length code for an empty; distance tree).; c14 12 Mar 93 M. Adler made inflate.c standalone with the; introduction of inflate.h.; c14b 16 Jul 93 G. Roelofs added (unsigned) typecast to w at 470.; c14c 19 Jul 93 J. Bush changed v[N_MAX], l[288], ll[28x+3x] arrays; to static for Amiga.; c14d 13 Aug 93 J-l. Gailly de-complicatified Mark's c[*p++]++ thing.; c14e 8 Oct 93 G. Roelofs changed memset() to memzero().; c14f 22 Oct 93 G. Roelofs renamed quietflg to qflag; made Trace(); conditional; added inflate_free().; c14g 28 Oct 93 G. Roelofs changed l/(lx+1) macro to pointer (Cray bug); c14h 7 Dec 93 C. Ghisler huft_build() optimizations.; c14i 9 Jan 94 A. Verheijen set fixed_t{d,l} to ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/zip/src/ZInflate.c:2190,message,messages,2190,core/zip/src/ZInflate.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/zip/src/ZInflate.c,1,['message'],['messages']
Integrability,"s a UUID (Universally Unique IDentifier), also; known as GUIDs (Globally Unique IDentifier). A UUID is 128 bits; long, and if generated according to this algorithm, is either; guaranteed to be different from all other UUIDs/GUIDs generated; until 3400 A.D. or extremely likely to be different. UUIDs were; originally used in the Network Computing System (NCS) and; later in the Open Software Foundation's (OSF) Distributed Computing; Environment (DCE). \note In the way this UUID is constructed, when used outside of; their original concept (NCS), they are actually not Globally unique; and indeed multiple distinct concurrent processes are actually likely; to generate the same UUID. Technically this is because the UUID is; constructed only from the node information and time information.; To make a globally unique number, this needs to be combined with; TProcessUUID. Structure of universal unique IDs (UUIDs). Depending on the network data representation, the multi-; octet unsigned integer fields are subject to byte swapping; when communicated between dissimilar endian machines.; ~~~ {.cpp}; +-----------------------------------+; | low 32 bits of time | 0-3 .fTimeLow; +-------------------------------+----; | mid 16 bits of time | 4-5 .fTimeMid; +-------+-----------------------+; | vers. | hi 12 bits of time | 6-7 .fTimeHiAndVersion; +-------+-------+---------------+; |Res | clkSeqHi | 8 .fClockSeqHiAndReserved; +---------------+; | clkSeqLow | 9 .fClockSeqLow; +---------------+------------------+; | node ID | 10-15 .fNode; +----------------------------------+; ~~~. The adjusted time stamp is split into three fields, and the; clockSeq is split into two fields. The timestamp is a 60-bit value. For UUID version 1, this; is represented by Coordinated Universal Time (UTC/GMT) as; a count of 100-nanosecond intervals since 00:00:00.00,; 15 October 1582 (the date of Gregorian reform to the; Christian calendar). The version number is multiplexed in the 4 most significant; bits of the",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TUUID.cxx:1384,Depend,Depending,1384,core/base/src/TUUID.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TUUID.cxx,1,['Depend'],['Depending']
Integrability,"s in LikelihoodJobs.; *; * The default number of workers is set using 'std::thread::hardware_concurrency()'.; * To change it, use 'Config::setDefaultNWorkers()' to set it to a different value; * before creation of a new JobManager instance. Note that it cannot be set to zero; * and also cannot be changed after JobManager has been instantiated.; *; * Use Config::getDefaultNWorkers() to access the current value.; *; * Under Config::LikelihoodJob, we find two members for the number of tasks to use to; * calculate the range of events and components in parallel, respectively:; * defaultNEventTasks and defaultNComponentTasks. Newly created LikelihoodJobs will; * then use these values at construction time. Note that (like with the number of; * workers) the number cannot be changed for an individual LikelihoodJob after it has; * been created.; *; * Both event- and component-based tasks by default are set to automatic mode using; * the automaticNEventTasks and automaticNComponentTasks constants (both under; * Config::LikelihoodJob as well). These are currently set to zero, but this could; * change. Automatic mode for events means that the number of tasks is set to the; * number of workers in the JobManager, with events divided equally over workers. For; * components, the automatic mode uses just 1 task for all components. These automatic; * modes may change in the future (for instance, we may switch them around).; *; * Under Config::Queue, we can set the desired queue type: FIFO or Priority. This; * setting is used when a JobManager is spun up, i.e. usually when the first Job; * starts. At this point, the Queue is also created according to the setting. The; * default is FIFO. When using a Priority Queue, the priority of tasks in a Job; * can be set using either setTaskPriorities or suggestTaskOrder. If no priorities; * are set, the Priority queue simply assumes equal priority for all tasks. The; * resulting order then depends on the implementation of std::priority_queue.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Config.cxx:2420,depend,depends,2420,roofit/multiprocess/src/Config.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Config.cxx,1,['depend'],['depends']
Integrability,"s larger than main memory.; *; * The other routines require a set of destination virtual arrays, so they; * need twice as much memory as jpegtran normally does. The destination; * arrays are always written in normal scan order (top to bottom) because; * the virtual array manager expects this. The source arrays will be scanned; * in the corresponding order, which means multiple passes through the source; * arrays for most of the transforms. That could result in much thrashing; * if the image is larger than main memory.; *; * If cropping or trimming is involved, the destination arrays may be smaller; * than the source arrays. Note it is not possible to do horizontal flip; * in-place when a nonzero Y crop offset is specified, since we'd have to move; * data from one block row to another but the virtual array manager doesn't; * guarantee we can touch more than one row at a time. So in that case,; * we have to use a separate destination array.; *; * Some notes about the operating environment of the individual transform; * routines:; * 1. Both the source and destination virtual arrays are allocated from the; * source JPEG object, and therefore should be manipulated by calling the; * source's memory manager.; * 2. The destination's component count should be used. It may be smaller; * than the source's when forcing to grayscale.; * 3. Likewise the destination's sampling factors should be used. When; * forcing to grayscale the destination's sampling factors will be all 1,; * and we may as well take that as the effective iMCU size.; * 4. When ""trim"" is in effect, the destination's dimensions will be the; * trimmed values but the source's will be untrimmed.; * 5. When ""crop"" is in effect, the destination's dimensions will be the; * cropped values but the source's will be uncropped. Each transform; * routine is responsible for picking up source data starting at the; * correct X and Y offset for the crop region. (The X and Y offsets; * passed to the transform routines are measur",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/transupp.c:1516,rout,routines,1516,graf2d/asimage/src/libAfterImage/libjpeg/transupp.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/transupp.c,1,['rout'],['routines']
Integrability,"s model that can be analytically convolved with a resolution model.; ///; /// To achieve factorization between the physics model and the resolution; /// model, each physics model must be able to be written in the form; /// \f[; /// \mathrm{Phys}(x, \bar{a}, \bar{b}) = \sum_k \mathrm{coef}_k(\bar{a}) * \mathrm{basis}_k(x,\bar{b}); /// \f]; ///; /// where \f$ \mathrm{basis}_k \f$ are a limited number of functions in terms of the variable; /// to be convoluted, and \f$ \mathrm{coef}_k \f$ are coefficients independent of the convolution; /// variable.; ///; /// Classes derived from RooResolutionModel implement; /// \f[; /// R_k(x,\bar{b},\bar{c}) = \int \mathrm{basis}_k(x', \bar{b}) \cdot \mathrm{resModel}(x-x',\bar{c}) \; \mathrm{d}x',; /// \f]; ///; /// which RooAbsAnaConvPdf uses to construct the pdf for [ Phys (x) R ] :; /// \f[; /// \mathrm{PDF}(x,\bar{a},\bar{b},\bar{c}) = \sum_k \mathrm{coef}_k(\bar{a}) * R_k(x,\bar{b},\bar{c}); /// \f]; ///; /// A minimal implementation of a RooAbsAnaConvPdf physics model consists of; ///; /// - A constructor that declares the required basis functions using the declareBasis() method.; /// The declareBasis() function assigns a unique identifier code to each declare basis; ///; /// - An implementation of `coefficient(Int_t code)` returning the coefficient value for each; /// declared basis function; ///; /// Optionally, analytical integrals can be provided for the coefficient functions. The; /// interface for this is quite similar to that for integrals of regular PDFs. Two functions,; /// \code{.cpp}; /// Int_t getCoefAnalyticalIntegral(Int_t coef, RooArgSet& allVars, RooArgSet& analVars, const char* rangeName) const; /// double coefAnalyticalIntegral(Int_t coef, Int_t code, const char* rangeName) const; /// \endcode; ///; /// advertise the coefficient integration capabilities and implement them respectively.; /// Please see RooAbsPdf for additional details. Advertised analytical integrals must be; /// valid for all coefficients.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsAnaConvPdf.cxx:2341,interface,interface,2341,roofit/roofitcore/src/RooAbsAnaConvPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsAnaConvPdf.cxx,2,"['integrat', 'interface']","['integration', 'interface']"
Integrability,"s or substantial portions of the Software.; *; * THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND,; * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF; * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND; * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE; * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION; * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION; * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.; * ====================================================================; */; /**; * @license; * (c) Dean McNamee <dean@gmail.com>, 2013.; *; * https://github.com/deanm/omggif; *; * Permission is hereby granted, free of charge, to any person obtaining a copy; * of this software and associated documentation files (the ""Software""), to; * deal in the Software without restriction, including without limitation the; * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or; * sell copies of the Software, and to permit persons to whom the Software is; * furnished to do so, subject to the following conditions:; *; * The above copyright notice and this permission notice shall be included in; * all copies or substantial portions of the Software.; *; * THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR; * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,; * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE; * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER; * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING; * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS; * IN THE SOFTWARE.; *; * omggif is a JavaScript implementation of a GIF 89a encoder and decoder,; * including animation and compression. It does not rely on any specific; * underlying system, so should run in the browser, Node, or Plask.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/modules/jspdf.mjs:2274,CONTRACT,CONTRACT,2274,js/modules/jspdf.mjs,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/modules/jspdf.mjs,1,['CONTRACT'],['CONTRACT']
Integrability,"s which reach an; /// SCC between the source and the target, and add them to the set of; /// connected SCCs, then recurse through them. Once a complete set of the; /// SCCs the target connects to is known, hoist the remaining SCCs between; /// the source and the target to be above the target. Note that there is no; /// need to process the source SCC, it is already known to connect.; /// 4) At this point, all of the SCCs in the closed range between the source; /// SCC and the target SCC in the postorder sequence are connected,; /// including the target SCC and the source SCC. Inserting the edge from; /// the source SCC to the target SCC will form a cycle out of precisely; /// these SCCs. Thus we can merge all of the SCCs in this closed range into; /// a single SCC.; ///; /// This process has various important properties:; /// - Only mutates the SCCs when adding the edge actually changes the SCC; /// structure.; /// - Never mutates SCCs which are unaffected by the change.; /// - Updates the postorder sequence to correctly satisfy the postorder; /// constraint after the edge is inserted.; /// - Only reorders SCCs in the closed postorder sequence from the source to; /// the target, so easy to bound how much has changed even in the ordering.; /// - Big-O is the number of edges in the closed postorder range of SCCs from; /// source to target.; ///; /// This helper routine, in addition to updating the postorder sequence itself; /// will also update a map from SCCs to indices within that sequence.; ///; /// The sequence and the map must operate on pointers to the SCC type.; ///; /// Two callbacks must be provided. The first computes the subset of SCCs in; /// the postorder closed range from the source to the target which connect to; /// the source SCC via some (transitive) set of edges. The second computes the; /// subset of the same range which the target SCC connects to via some; /// (transitive) set of edges. Both callbacks should populate the set argument; /// provided.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/LazyCallGraph.cpp:3015,rout,routine,3015,interpreter/llvm-project/llvm/lib/Analysis/LazyCallGraph.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/LazyCallGraph.cpp,1,['rout'],['routine']
Integrability,"s, but; * different instances of the background parameters: e.g.; * ```; * ...; * RooExponential bg(""bg"",""background"",x,alpha) ;; * RooGaussian sig(""sig"",""signal"",x,mean,sigma) ;; * RooAddPdf pdf(""pdf"",""pdf"",sig,bg,sigfrac) ;; *; * RooDataSet data(""data"",""dataset"",RooArgSet(x,runblock),...); *; * RooCategory runblock(""runblock"",""run block"") ;; * runblock.defineType(""run1"") ;; * runblock.defineType(""run2"") ;; *; * RooArgSet splitLeaves;; * RooCustomizer cust(pdf,runblock,splitLeaves);; * cust.splitArg(alpha,runblock);; *; * RooAbsPdf* pdf_run1 = cust.build(""run1"") ;; * RooAbsPdf* pdf_run2 = cust.build(""run2"") ;; *; * RooSimultaneous simpdf(""simpdf"",""simpdf"",RooArgSet(*pdf_run1,*pdf_run2)); * ```; * If the master category state is a super category, leaves may be split; * by any subset of that master category. E.g. if the master category; * is 'A x B', leaves may be split by A, B or AxB.; *; * In addition to replacing leaf nodes, RooCustomizer clones all branch; * nodes that depend directly or indirectly on modified leaf nodes, so; * that the input pdf is untouched by each build operation.; *; * The customizer owns all the branch nodes including the returned top; * level node, so the customizer should live as longs as the cloned; * composites are needed.; *; * Any leaf nodes that are created by the customizer will be put into; * the leaf list that is passed into the customizers constructor (splitLeaves in; * the above example. The list owner is responsible for deleting these leaf; * nodes after the customizer is deleted.; *; *; * ## Advanced techniques; *; * ### Reuse nodes to customise a different PDF; * By default, the customizer clones the prototype leaf node when splitting a leaf,; * but the user can feed pre-defined split leaves in leaf list. These leaves; * must have the name `<split_leaf>_<splitcat_label>` to be picked up. The list; * of pre-supplied leaves may be partial, any missing split leaves will be auto; * generated.; *; * Another common construction is t",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooCustomizer.cxx:2885,depend,depend,2885,roofit/roofitcore/src/RooCustomizer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooCustomizer.cxx,1,['depend'],['depend']
Integrability,"s.cpp - Fixup Byte or Word instructions -----------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; /// \file; /// This file defines the pass that looks through the machine instructions; /// late in the compilation, and finds byte or word instructions that; /// can be profitably replaced with 32 bit instructions that give equivalent; /// results for the bits of the results that are used. There are two possible; /// reasons to do this.; ///; /// One reason is to avoid false-dependences on the upper portions; /// of the registers. Only instructions that have a destination register; /// which is not in any of the source registers can be affected by this.; /// Any instruction where one of the source registers is also the destination; /// register is unaffected, because it has a true dependence on the source; /// register already. So, this consideration primarily affects load; /// instructions and register-to-register moves. It would; /// seem like cmov(s) would also be affected, but because of the way cmov is; /// really implemented by most machines as reading both the destination and; /// and source registers, and then ""merging"" the two based on a condition,; /// it really already should be considered as having a true dependence on the; /// destination register as well.; ///; /// The other reason to do this is for potential code size savings. Word; /// operations need an extra override byte compared to their 32 bit; /// versions. So this can convert many word operations to their larger; /// size, saving a byte in encoding. This could introduce partial register; /// dependences where none existed however. As an example take:; /// orw ax, $0x1000; /// addw ax, $3; /// now if this were to get transformed into; /// orw ax, $1",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86FixupBWInsts.cpp:1064,depend,dependence,1064,interpreter/llvm-project/llvm/lib/Target/X86/X86FixupBWInsts.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86FixupBWInsts.cpp,1,['depend'],['dependence']
Integrability,"s3://host.example.com/bucket/path/to/my/file; /// s3http://host.example.com/bucket/path/to/my/file; /// s3https://host.example.com/bucket/path/to/my/file; /// as3://host.example.com/bucket/path/to/my/file; /// ```; ///; /// For files hosted by Google Storage, use the following forms:; ///; /// ```; /// gs://storage.googleapis.com/bucket/path/to/my/file; /// gshttp://storage.googleapis.com/bucket/path/to/my/file; /// gsthttps://storage.googleapis.com/bucket/path/to/my/file; /// ```; ///; /// The 'as3' scheme is accepted for backwards compatibility but its usage is; /// deprecated.; ///; /// The recommended way to create an instance of this class is through; /// TFile::Open, for instance:; ///; /// ```c++; /// TFile* f1 = TFile::Open(""s3://host.example.com/bucket/path/to/my/file""); /// TFile* f2 = TFile::Open(""gs://storage.googleapis.com/bucket/path/to/my/file""); /// ```; ///; /// The specified scheme (i.e. s3, s3http, s3https, ...) determines the underlying; /// transport protocol to use for downloading the file contents, namely HTTP or HTTPS.; /// The 's3', 's3https', 'gs' and 'gshttps' schemes imply using HTTPS as the transport; /// protocol. The 's3http', 'as3' and 'gshttp' schemes imply using HTTP as the transport; /// protocol.; ///; /// The 'options' argument can contain 'NOPROXY' if you want to bypass; /// the HTTP proxy when retrieving this file's contents. As for any TWebFile-derived; /// object, the URL of the web proxy can be specified by setting an environmental; /// variable 'http_proxy'. If this variable is set, we ask that proxy to route our; /// requests HTTP(S) requests to the file server.; ///; /// In addition, you can also use the 'options' argument to provide the access key; /// and secret key to be used for authentication purposes for this file by using a; /// string of the form ""AUTH=myAccessKey:mySecretkey"". This may be useful to; /// open several files hosted by different providers in the same program/macro,; /// where the environemntal variabl",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TS3WebFile.cxx:1185,protocol,protocol,1185,net/net/src/TS3WebFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TS3WebFile.cxx,1,['protocol'],['protocol']
Integrability,"scape character, if a backslash appears in a; /// filename, it should be escaped as well. (As a special case, $ is escaped; /// as $$, which is the normal Make way to handle the $ character.); /// For compatibility with BSD Make and historical practice, if GNU Make; /// un-escapes characters in a filename but doesn't find a match, it will; /// retry with the unmodified original string.; ///; /// GCC tries to accommodate both Make formats by escaping any space or #; /// characters in the original filename, but not escaping backslashes. The; /// apparent intent is so that filenames with backslashes will be handled; /// correctly by BSD Make, and by GNU Make in its fallback mode of using the; /// unmodified original string; filenames with # or space characters aren't; /// supported by BSD Make at all, but will be handled correctly by GNU Make; /// due to the escaping.; ///; /// A corner case that GCC gets only partly right is when the original filename; /// has a backslash immediately followed by space or #. GNU Make would expect; /// this backslash to be escaped; however GCC escapes the original backslash; /// only when followed by space, not #. It will therefore take a dependency; /// from a directive such as; /// #include ""a\ b\#c.h""; /// and emit it as; /// a\\\ b\\#c.h; /// which GNU Make will interpret as; /// a\ b\; /// followed by a comment. Failing to find this file, it will fall back to the; /// original string, which probably doesn't exist either; in any case it won't; /// find; /// a\ b\#c.h; /// which is the actual filename specified by the include directive.; ///; /// Clang does what GCC does, rather than what GNU Make expects.; ///; /// NMake/Jom has a different set of scary characters, but wraps filespecs in; /// double-quotes to avoid misinterpreting them; see; /// https://msdn.microsoft.com/en-us/library/dd9y37ha.aspx for NMake info,; /// https://msdn.microsoft.com/en-us/library/windows/desktop/aa365247(v=vs.85).aspx; /// for Windows file-naming info.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/DependencyFile.cpp:1757,depend,dependency,1757,interpreter/llvm-project/clang/lib/Frontend/DependencyFile.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/DependencyFile.cpp,2,"['depend', 'wrap']","['dependency', 'wraps']"
Integrability,"se is a non-leaf node of the expression.; ///; /// For example:; /// expression graph node names; ///; /// + | I; /// / \ |; /// + + | A, B; /// / \ / \ |; /// * + * | C, D, E; /// / \ / \ / \ |; /// + * | F, G; ///; /// The leaf nodes are C, E, F and G. The Ops array will contain (maybe not in; /// that order) (C, 1), (E, 1), (F, 2), (G, 2).; ///; /// The expression is maximal: if some instruction is a binary operator of the; /// same kind as 'I', and all of its uses are non-leaf nodes of the expression,; /// then the instruction also belongs to the expression, is not a leaf node of; /// it, and its operands also belong to the expression (but may be leaf nodes).; ///; /// NOTE: This routine will set operands of non-leaf non-root nodes to undef in; /// order to ensure that every non-root node in the expression has *exactly one*; /// use by a non-leaf node of the expression. This destruction means that the; /// caller MUST either replace 'I' with a new expression or use something like; /// RewriteExprTree to put the values back in if the routine indicates that it; /// made a change by returning 'true'.; ///; /// In the above example either the right operand of A or the left operand of B; /// will be replaced by undef. If it is B's operand then this gives:; ///; /// + | I; /// / \ |; /// + + | A, B - operand of B replaced with undef; /// / \ \ |; /// * + * | C, D, E; /// / \ / \ / \ |; /// + * | F, G; ///; /// Note that such undef operands can only be reached by passing through 'I'.; /// For example, if you visit operands recursively starting from a leaf node; /// then you will never see such an undef operand unless you get back to 'I',; /// which requires passing through a phi node.; ///; /// Note that this routine may also mutate binary operators of the wrong type; /// that have all uses inside the expression (i.e. only used by non-leaf nodes; /// of the expression) if it can turn them into binary operators of the right; /// type and thus make the expression bigger.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/Reassociate.cpp:2460,rout,routine,2460,interpreter/llvm-project/llvm/lib/Transforms/Scalar/Reassociate.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/Reassociate.cpp,2,['rout'],['routine']
Integrability,"see inflateSetDictionary; below), inflate sets strm->adler to the Adler-32 checksum of the dictionary; chosen by the compressor and returns Z_NEED_DICT; otherwise it sets; strm->adler to the Adler-32 checksum of all output produced so far (that is,; total_out bytes) and returns Z_OK, Z_STREAM_END or an error code as described; below. At the end of the stream, inflate() checks that its computed adler32; checksum is equal to that saved by the compressor and returns Z_STREAM_END; only if the checksum is correct. inflate() can decompress and check either zlib-wrapped or gzip-wrapped; deflate data. The header type is detected automatically, if requested when; initializing with inflateInit2(). Any information contained in the gzip; header is not retained, so applications that need that information should; instead use raw inflate, see inflateInit2() below, or inflateBack() and; perform their own processing of the gzip header and trailer. When processing; gzip-wrapped deflate data, strm->adler32 is set to the CRC-32 of the output; producted so far. The CRC-32 is checked against the gzip trailer. inflate() returns Z_OK if some progress has been made (more input processed; or more output produced), Z_STREAM_END if the end of the compressed data has; been reached and all uncompressed output has been produced, Z_NEED_DICT if a; preset dictionary is needed at this point, Z_DATA_ERROR if the input data was; corrupted (input stream not conforming to the zlib format or incorrect check; value), Z_STREAM_ERROR if the stream structure was inconsistent (for example; next_in or next_out was Z_NULL), Z_MEM_ERROR if there was not enough memory,; Z_BUF_ERROR if no progress is possible or if there was not enough room in the; output buffer when Z_FINISH is used. Note that Z_BUF_ERROR is not fatal, and; inflate() can be called again with more input and more output space to; continue decompressing. If Z_DATA_ERROR is returned, the application may; then call inflateSync() to look for a good com",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:5870,wrap,wrapped,5870,builtins/zlib/zlib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h,1,['wrap'],['wrapped']
Integrability,"ser-facing functions polymorphic would be to either use; // __attribute__((overloadable)) to make a set of vaddq() functions that are; // all inline wrappers on the underlying clang builtins, or to define a single; // vaddq() macro which expands to an instance of _Generic.; //; // The inline-wrappers approach would work fine for most intrinsics, except for; // the ones that take an argument required to be a compile-time constant,; // because if you wrap an inline function around a call to a builtin, the; // constant nature of the argument is not passed through.; //; // The _Generic approach can be made to work with enough effort, but it takes a; // lot of machinery, because of the design feature of _Generic that even the; // untaken branches are required to pass all front-end validity checks such as; // type-correctness. You can work around that by nesting further _Generics all; // over the place to coerce things to the right type in untaken branches, but; // what you get out is complicated, hard to guarantee its correctness, and; // worst of all, gives _completely unreadable_ error messages if the user gets; // the types wrong for an intrinsic call.; //; // Therefore, my strategy is to introduce a new __attribute__ that allows a; // function to be mapped to a clang builtin even though it doesn't have the; // same name, and then declare all the user-facing MVE function names with that; // attribute, mapping each one directly to the clang builtin. And the; // polymorphic ones have __attribute__((overloadable)) as well. So once the; // compiler has resolved the overload, it knows the internal builtin ID of the; // selected function, and can check the immediate arguments against that; and; // if the user gets the types wrong in a call to a polymorphic intrinsic, they; // get a completely clear error message showing all the declarations of that; // function in the header file and explaining why each one doesn't fit their; // call.; //; // The downside of this is that if",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/TableGen/MveEmitter.cpp:2175,message,messages,2175,interpreter/llvm-project/clang/utils/TableGen/MveEmitter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/TableGen/MveEmitter.cpp,1,['message'],['messages']
Integrability,"sers should however realize that the transformation is only a linear; approximation, and that it cannot give a meaningful result if one or more; parameters is very close to a limit, where; \f$\partial P_{\mathrm{ext}} / \partial P_{\mathrm{int}} \approx 0\f$.; Therefore, it is recommended that:. 1. Limits on variable parameters should be used only when needed in order; to prevent the parameter from taking on unphysical values. 2. When a satisfactory minimum has been found using limits, the limits; should then be removed if possible, in order to perform or re-perform the; error analysis without limits. ### How to get the right answer from MINUIT. MINUIT offers the user a choice of several minimization algorithms. The; MIGRAD algorithm is in general the best minimizer for; nearly all functions. It is a variable-metric method with inexact line; search, a stable metric updating scheme, and checks for; positive-definiteness. Its main weakness is that it depends heavily on; knowledge of the first derivatives, and fails miserably if they are very; inaccurate. If parameter limits are needed, in spite of the side effects, then the; user should be aware of the following techniques to alleviate problems; caused by limits:. #### Getting the right minimum with limits. If MIGRAD converges normally to a point where no parameter is near one of; its limits, then the existence of limits has probably not prevented MINUIT; from finding the right minimum. On the other hand, if one or more; parameters is near its limit at the minimum, this may be because the true; minimum is indeed at a limit, or it may be because the minimizer has; become ``blocked'' at a limit. This may normally happen only if the; parameter is so close to a limit (internal value at an odd multiple of; \f$\pm \frac{\pi}{2}\f$; that MINUIT prints a warning to this effect when it prints; the parameter values. The minimizer can become blocked at a limit, because at a limit; the derivative seen by the minimizer; \f$\partial",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TMinuit.cxx:5414,depend,depends,5414,math/minuit/src/TMinuit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TMinuit.cxx,1,['depend'],['depends']
Integrability,"shot() call will have their; entries (block-wise) shuffled with respect to the original tree. Such trees cannot be used as friends of the original; one: rows will be mismatched. Indexed friend trees provide a way to perform simple joins of multiple trees over a common column.; When a certain entry in the main tree (or chain) is loaded, the friend trees (or chains) will then load an entry where the; ""index"" columns have a value identical to the one in the main one. For example, in Python:. ~~~{.py}; main_tree = ...; aux_tree = ... # If a friend tree has an index on `commonColumn`, when the main tree loads; # a given row, it also loads the row of the friend tree that has the same; # value of `commonColumn`; aux_tree.BuildIndex(""commonColumn""). mainTree.AddFriend(aux_tree). df = ROOT.RDataFrame(mainTree); ~~~. RDataFrame supports indexed friend TTrees from ROOT v6.24 in single-thread mode and from v6.28/02 in multi-thread mode. \anchor other-file-formats; ### Reading data formats other than ROOT trees; RDataFrame can be interfaced with RDataSources. The ROOT::RDF::RDataSource interface defines an API that RDataFrame can use to read arbitrary columnar data formats. RDataFrame calls into concrete RDataSource implementations to retrieve information about the data, retrieve (thread-local) readers or ""cursors"" for selected columns; and to advance the readers to the desired data entry.; Some predefined RDataSources are natively provided by ROOT such as the ROOT::RDF::RCsvDS which allows to read comma separated files:; ~~~{.cpp}; auto tdf = ROOT::RDF::FromCSV(""MuRun2010B.csv"");; auto filteredEvents =; tdf.Filter(""Q1 * Q2 == -1""); .Define(""m"", ""sqrt(pow(E1 + E2, 2) - (pow(px1 + px2, 2) + pow(py1 + py2, 2) + pow(pz1 + pz2, 2)))"");; auto h = filteredEvents.Histo1D(""m"");; h->Draw();; ~~~. See also FromNumpy (Python-only), FromRNTuple(), FromArrow(), FromSqlite(). \anchor callgraphs; ### Computation graphs (storing and reusing sets of transformations). As we saw, transformed dataf",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx:73944,interface,interfaced,73944,tree/dataframe/src/RDataFrame.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx,1,['interface'],['interfaced']
Integrability,"significantly reduces numerical errors; /// when adding a sequence of finite-precision floating point numbers.; /// This is done by keeping a separate running compensation (a variable to accumulate small errors).; ///; /// ### Auto-vectorisable accumulation; /// This class can internally use multiple accumulators (template parameter `N`).; /// When filled from a collection that supports index access from a *contiguous* block of memory,; /// compilers such as gcc, clang and icc can auto-vectorise the accumulation. This happens by cycling; /// through the internal accumulators based on the value of ""`index % N`"", so `N` accumulators can be filled from a block; /// of `N` numbers in a single instruction.; ///; /// The usage of multiple accumulators might slightly increase the precision in comparison to the single-accumulator version; /// with `N = 1`.; /// This depends on the order and magnitude of the numbers being accumulated. Therefore, in rare cases, the accumulation; /// result can change *in dependence of N*, even when the data are identical.; /// The magnitude of such differences is well below the precision of the floating point type, and will therefore mostly show; /// in the compensation sum(see Carry()). Increasing the number of accumulators therefore only makes sense to; /// speed up the accumulation, but not to increase precision.; ///; /// \param T The type of the values to be accumulated.; /// \param N Number of accumulators. Defaults to 1. Ideal values are the widths of a vector register on the relevant architecture.; /// Depending on the instruction set, good values are:; /// - AVX2-float: 8; /// - AVX2-double: 4; /// - AVX512-float: 16; /// - AVX512-double: 8; ///; /// ### Examples; ///; /// ~~~{.cpp}; /// std::vector<double> numbers(1000);; /// for (std::size_t i=0; i<1000; ++i) {; /// numbers[i] = rand();; /// }; ///; /// ROOT::Math::KahanSum<double, 4> k;; /// k.Add(numbers.begin(), numbers.end());; /// // or; /// k.Add(numbers);; /// ~~~; /// ~~~{.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Util.h:1122,depend,dependence,1122,math/mathcore/inc/Math/Util.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Util.h,1,['depend'],['dependence']
Integrability,"sing new() operator and their deletion is done by; TGeoManager class. ### Available geometrical transformations. #### TGeoTranslation; Represent a (dx,dy,dz) translation. Data members:; Double_t fTranslation[3]. Translations can be added/subtracted. ~~~ {.cpp}; TGeoTranslation t1;; t1->SetTranslation(-5,10,4);; TGeoTranslation *t2 = new TGeoTranslation(4,3,10);; t2->Subtract(&t1);; ~~~. #### Rotations; Represent a pure rotation. Data members: Double_t fRotationMatrix[3*3].; Rotations can be defined either by Euler angles, either, by GEANT3 angles :. ~~~ {.cpp}; TGeoRotation *r1 = new TGeoRotation();; r1->SetAngles(phi, theta, psi); // all angles in degrees; ~~~. This represent the composition of : first a rotation about Z axis with; angle phi, then a rotation with theta about the rotated X axis, and; finally a rotation with psi about the new Z axis. ~~~ {.cpp}; r1->SetAngles(th1,phi1, th2,phi2, th3,phi3); ~~~. This is a rotation defined in GEANT3 style. Theta and phi are the spherical; angles of each axis of the rotated coordinate system with respect to the; initial one. This construction allows definition of malformed rotations,; e.g. not orthogonal. A check is performed and an error message is issued; in this case. Specific utilities : determinant, inverse. #### Scale transformations; Represent a scale shrinking/enlargement. Data; members :Double_t fScale[3]. Not fully implemented yet. #### Combined transformations; Represent a rotation followed by a translation.; Data members: Double_t fTranslation[3], TGeoRotation *fRotation. ~~~ {.cpp}; TGeoRotation *rot = new TGeoRotation(""rot"",10,20,30);; TGeoTranslation trans;; ...; TGeoCombiTrans *c1 = new TGeoCombiTrans(trans, rot);; TGeoCombiTrans *c2 = new TGeoCombiTrans(""somename"",10,20,30,rot); ~~~. #### TGeoGenTrans; Combined transformations including a scale. Not implemented. #### TGeoIdentity; A generic singleton matrix representing a identity transformation; NOTE: identified by the global variable gGeoIdentity.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoMatrix.cxx:6650,message,message,6650,geom/geom/src/TGeoMatrix.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoMatrix.cxx,1,['message'],['message']
Integrability,"sing the Metropolis algorithm. From the Markov; Chain, the confidence interval can be determined in two ways:. #### Using a Kernel-Estimated PDF: (not the default method). A RooNDKeysPdf is constructed from the data set using adaptive kernel width.; With this RooNDKeysPdf F, we then integrate over the most likely domain in the; parameter space (tallest points in the posterior RooNDKeysPdf) until the target; confidence level is reached within an acceptable neighborhood as defined by; SetEpsilon(). More specifically: we calculate the following for different; cutoff values C until we reach the target confidence level: \f$\int_{ F >= C } F; d{normset} \f$.; Important note: this is not the default method because of a bug in constructing; the RooNDKeysPdf from a weighted data set. Configure to use this method by; calling SetUseKeys(true), and the data set will be interpreted without weights. #### Using a binned data set: (the default method). This is the binned analog of the continuous integrative method that uses the; kernel-estimated PDF. The points in the Markov Chain are put into a binned; data set and the interval is then calculated by adding the heights of the bins; in decreasing order until the desired level of confidence has been reached.; Note that this means the actual confidence level is >= the confidence level; prescribed by the client (unless the user calls SetHistStrict(false)). This; method is the default but may not remain as such in future releases, so you may; wish to explicitly configure to use this method by calling SetUseKeys(false). These are not the only ways for the confidence interval to be determined, and; other possibilities are being considered being added, especially for the; 1-dimensional case. One can ask an MCMCInterval for the lower and upper limits on a specific; parameter of interest in the interval. Note that this works better for some; distributions (ones with exactly one local maximum) than others, and sometimes; has little value.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/MCMCInterval.cxx:1689,integrat,integrative,1689,roofit/roostats/src/MCMCInterval.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/MCMCInterval.cxx,1,['integrat'],['integrative']
Integrability,"sion don't need this; if __name__ == ""__main__"":; # With an already setup cluster that exposes a Dask scheduler endpoint; client = Client(""dask_scheduler.domain.com:8786""). # The Dask RDataFrame constructor accepts the Dask Client object as an optional argument; df = RDataFrame(""mytree"",""myfile.root"", daskclient=client); # Proceed as usual; df.Define(""x"",""someoperation"").Histo1D((""name"", ""title"", 10, 0, 10), ""x""); ~~~. If an instance of [distributed.Client](http://distributed.dask.org/en/stable/api.html#distributed.Client) is not; provided to the RDataFrame object, it will be created for you and it will run the computations in the local machine; using all cores available. ### Choosing the number of distributed tasks. A distributed RDataFrame has internal logic to define in how many chunks the input dataset will be split before sending; tasks to the distributed backend. Each task reads and processes one of said chunks. The logic is backend-dependent, but; generically tries to infer how many cores are available in the cluster through the connection object. The number of; tasks will be equal to the inferred number of cores. There are cases where the connection object of the chosen backend; doesn't have information about the actual resources of the cluster. An example of this is when using Dask to connect to; a batch system. The client object created at the beginning of the application does not automatically know how many cores; will be available during distributed execution, since the jobs are submitted to the batch system after the creation of; the connection. In such cases, the logic is to default to process the whole dataset in 2 tasks. The number of tasks submitted for distributed execution can be also set programmatically, by providing the optional; keyword argument `npartitions` when creating the RDataFrame object. This parameter is accepted irrespectively of the; backend used:. ~~~{.py}; import ROOT. # Define correct imports and access the distributed RDataFrame ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx:40662,depend,dependent,40662,tree/dataframe/src/RDataFrame.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx,1,['depend'],['dependent']
Integrability,"skerRange(double) the whisker definition w=1; will be overwritten. E.g. using a whisker-range of 0.95 and w=1 will redefine the area of; the lower whisker to the upper whisker in order to cover 95% of the distribution inside; that candle. The static function will affect all candle-charts in the running program.; Default is 1. If the distribution is large enough and gaussian shaped, the maximum length of; the whisker will be located at \f$ \pm 2.698 \sigma \f$ (when using the; 1.5*iqr-definition (w=2), where \f$ \sigma \f$ is the standard deviation; (see picture above). In that case 99.3% of the total distribution will be covered; by the box and the whiskers, whereas 0.7% are represented by the outliers. ##### The Anchors; The anchors have no special meaning in terms of statistical calculation. They mark; the end of the whiskers and they have the width of the box. Both representation; with and without anchors are common. ##### The Points; Depending on the configuration the points can have different meanings:; - If p=1 the points represent the outliers. If they are shown, it means; some parts of the underlying distribution are not covered by the whiskers.; This can only occur when the whiskers are set to option w=2. Here the whiskers; can have a maximum length of \f$ 1.5 \times iqr \f$. So any points outside the; whiskers will be drawn as outliers. The outliers will be represented by crosses.; - If p=2 all points in the distribution will be painted as crosses. This is; useful for small datasets only (up to 10 or 20 points per candle).; The outliers are shown along the candle. Because the underlying distribution; is binned, is frequently occurs that a bin contains more than one value.; Because of this the points will be randomly scattered within their bin along; the candle axis. If the bin content for a bin is exactly 1 (usually; this happens for the outliers) if will be drawn in the middle of the bin along; the candle axis. As the maximum number of points per candle i",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:52872,Depend,Depending,52872,hist/histpainter/src/THistPainter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx,1,['Depend'],['Depending']
Integrability,"small; * strings is inspired from that of Rabin & Karp. A brute force approach; * is used to find longer strings when a small match has been found.; * A similar algorithm is used in comic (by Jan-Mark Wams) and freeze; * (by Leonid Broukhis).; * A previous version of this file used a more sophisticated algorithm; * (by Fiala and Greene) which is guaranteed to run in linear amortized; * time, but has a larger average cost, uses more memory and is patented.; * However the F&G algorithm may be faster for some highly redundant; * files if the parameter max_chain_length (described below) is too large.; *; * ACKNOWLEDGEMENTS; *; * The idea of lazy evaluation of matches is due to Jan-Mark Wams, and; * I found it in 'freeze' written by Leonid Broukhis.; * Thanks to many info-zippers for bug reports and testing.; *; * REFERENCES; *; * APPNOTE.TXT documentation file in PKZIP 1.93a distribution.; *; * A description of the Rabin and Karp algorithm is given in the book; * ""Algorithms"" by R. Sedgewick, Addison-Wesley, p252.; *; * Fiala,E.R., and Greene,D.H.; * Data Compression with Finite Windows, Comm.ACM, 32,4 (1989) 490-595; *; * INTERFACE; *; * void lm_init (int pack_level, ush *flags); * Initialize the ""longest match"" routines for a new file; *; * ulg deflate (void); * Processes a new input file and return its compressed length. Sets; * the compressed length, crc, deflate flags and internal file; * attributes.; */; /* #include ""zip.h"" */; /* #include ""ZIP.h"" */; /* ===========================================================================; * Configuration parameters; */; /* Compile with MEDIUM_MEM to reduce the memory requirements or; * with SMALL_MEM to use as little memory as possible. Use BIG_MEM if the; * entire input file can be held in memory (not possible on 16 bit systems).; * Warning: defining these symbols affects HASH_BITS (see below) and thus; * affects the compression ratio. The compressed output; * is still correct, and might even be smaller in some cases.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/zip/src/ZDeflate.c:2107,INTERFACE,INTERFACE,2107,core/zip/src/ZDeflate.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/zip/src/ZDeflate.c,2,"['INTERFACE', 'rout']","['INTERFACE', 'routines']"
Integrability,"so valid for 2-dim); /// - ""N"" include comparison of normalizations; /// - ""D"" Put out a line of ""Debug"" printout; /// - ""M"" Return the Maximum Kolmogorov distance instead of prob; /// - ""X"" Run the pseudo experiments post-processor with the following procedure:; /// make pseudoexperiments based on random values from the parent distribution,; /// compare the KS distance of the pseudoexperiment to the parent; /// distribution, and count all the KS values above the value; /// obtained from the original data to Monte Carlo distribution.; /// The number of pseudo-experiments nEXPT is by default 1000, and; /// it can be changed by specifying the option as ""X=number"",; /// for example ""X=10000"" for 10000 toys.; /// The function returns the probability.; /// (thanks to Ben Kilminster to submit this procedure). Note that; /// this option ""X"" is much slower.; ///; /// The returned function value is the probability of test; /// (much less than one means NOT compatible); ///; /// Code adapted by Rene Brun from original HBOOK routine HDIFF; ///; /// NOTE1; /// A good description of the Kolmogorov test can be seen at:; /// http://www.itl.nist.gov/div898/handbook/eda/section3/eda35g.htm; ///; /// NOTE2; /// see also alternative function TH1::Chi2Test; /// The Kolmogorov test is assumed to give better results than Chi2Test; /// in case of histograms with low statistics.; ///; /// NOTE3 (Jan Conrad, Fred James); /// ""The returned value PROB is calculated such that it will be; /// uniformly distributed between zero and one for compatible histograms,; /// provided the data are not binned (or the number of bins is very large; /// compared with the number of events). Users who have access to unbinned; /// data and wish exact confidence levels should therefore not put their data; /// into histograms, but should call directly TMath::KolmogorovTest. On; /// the other hand, since TH1 is a convenient way of collecting data and; /// saving space, this function has been provided. However, the",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:1701,rout,routine,1701,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,1,['rout'],['routine']
Integrability,"space Util; /// \class KahanSum; /// The Kahan summation is a compensated summation algorithm, which significantly reduces numerical errors; /// when adding a sequence of finite-precision floating point numbers.; /// This is done by keeping a separate running compensation (a variable to accumulate small errors).; ///; /// ### Auto-vectorisable accumulation; /// This class can internally use multiple accumulators (template parameter `N`).; /// When filled from a collection that supports index access from a *contiguous* block of memory,; /// compilers such as gcc, clang and icc can auto-vectorise the accumulation. This happens by cycling; /// through the internal accumulators based on the value of ""`index % N`"", so `N` accumulators can be filled from a block; /// of `N` numbers in a single instruction.; ///; /// The usage of multiple accumulators might slightly increase the precision in comparison to the single-accumulator version; /// with `N = 1`.; /// This depends on the order and magnitude of the numbers being accumulated. Therefore, in rare cases, the accumulation; /// result can change *in dependence of N*, even when the data are identical.; /// The magnitude of such differences is well below the precision of the floating point type, and will therefore mostly show; /// in the compensation sum(see Carry()). Increasing the number of accumulators therefore only makes sense to; /// speed up the accumulation, but not to increase precision.; ///; /// \param T The type of the values to be accumulated.; /// \param N Number of accumulators. Defaults to 1. Ideal values are the widths of a vector register on the relevant architecture.; /// Depending on the instruction set, good values are:; /// - AVX2-float: 8; /// - AVX2-double: 4; /// - AVX512-float: 16; /// - AVX512-double: 8; ///; /// ### Examples; ///; /// ~~~{.cpp}; /// std::vector<double> numbers(1000);; /// for (std::size_t i=0; i<1000; ++i) {; /// numbers[i] = rand();; /// }; ///; /// ROOT::Math::KahanSum<double, 4",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Util.h:983,depend,depends,983,math/mathcore/inc/Math/Util.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Util.h,1,['depend'],['depends']
Integrability,"ssible but; highly not recommended. #### The Structure of Composite Shapes. A composite shape can always be looked as the result of a Boolean; operation between only two shape components. All information identifying; these two components as well as their positions with respect to the; frame of the composite is represented by an object called Boolean node.; A composite shape has a pointer to such a Boolean node. Since the shape; components may also be composites, they will also contain binary Boolean; nodes branching out other two shapes in the hierarchy. Any such branch; ends-up when the final leaves are no longer composite shapes, but basic; primitives. The figure shows the composite shapes structure. \image html geom_composite_shape001.png ""The composite shapes structure"" width=600px. Suppose that A, B, C and D represent basic shapes, we will illustrate; how the internal representation of few combinations look like. We do; this only for understanding how to create them in a proper way, since; the user interface for this purpose is in fact very simple. We will; ignore for the time being the positioning of components. The definition; of a composite shape takes an expression where the identifiers are shape; names. The expression is parsed and decomposed in 2 sub-expressions and; the top-level Boolean operator. 1. Union: `A+B+C`. Just to illustrate the Boolean expression parsing and the composite; shape structure, let's take a simple example. We will describe the union; of A, B and C. Both union operators are at the same level. Since:. `A+B+C = (A+B)+C = A+(B+C)`. The first` (+)` is taken as separator, hence the expression split in:; `A` and `(B+C)`. A Boolean node of type **`TGeoUnion`**`(""A"",""B+C"")` is; created. This tries to replace the 2 expressions by actual pointers to; corresponding shapes. The first expression (A) contains no operators; therefore is interpreted as representing a shape. The shape named ""A"" is; searched into the list of shapes handled by the man",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoCompositeShape.cxx:2548,interface,interface,2548,geom/geom/src/TGeoCompositeShape.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoCompositeShape.cxx,1,['interface'],['interface']
Integrability,"ssing their results, allowing; RDataFrame to run the loop once and produce all results in one go. ### Going parallel; Let's say we would like to run the previous examples in parallel on several cores, dividing events fairly between cores.; The only modification required to the snippets would be the addition of this line *before* constructing the main; dataframe object:; ~~~{.cpp}; ROOT::EnableImplicitMT();; ~~~; Simple as that. More details are given [below](#parallel-execution). \anchor collections; ## Working with collections and object selections. RDataFrame reads collections as the special type [ROOT::RVec](https://root.cern/doc/master/classROOT_1_1VecOps_1_1RVec.html): for example, a column containing an array of floating point numbers can be read as a ROOT::RVecF. C-style arrays (with variable or static size), STL vectors and most other collection types can be read this way. RVec is a container similar to std::vector (and can be used just like a std::vector) but it also offers a rich interface to operate on the array elements in a vectorised fashion, similarly to Python's NumPy arrays. For example, to fill a histogram with the ""pt"" of selected particles for each event, Define() can be used to create a column that contains the desired array elements as follows:. ~~~{.cpp}; // h is filled with all the elements of `good_pts`, for each event; auto h = df.Define(""good_pts"", [](const ROOT::RVecF &pt) { return pt[pt > 0]; }); .Histo1D(""good_pts"");; ~~~. And in Python:. ~~~{.py}; h = df.Define(""good_pts"", ""pt[pt > 0]"").Histo1D(""good_pts""); ~~~. Learn more at ROOT::VecOps::RVec. \anchor transformations; ## Transformations: manipulating data; \anchor Filters; ### Filters; A filter is created through a call to `Filter(f, columnList)` or `Filter(filterString)`. In the first overload, `f` can; be a function, a lambda expression, a functor class, or any other callable object. It must return a `bool` signalling; whether the event has passed the selection (`true`) or not (`fal",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx:27707,interface,interface,27707,tree/dataframe/src/RDataFrame.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx,1,['interface'],['interface']
Integrability,"stats"");; /// st->SetX1NDC(newx1); //new x start position; /// st->SetX2NDC(newx2); //new x end position; ///; /// \anchor HFitExtra; /// ### Additional Notes on Fitting; ///; /// #### Fitting a histogram of dimension N with a function of dimension N-1; ///; /// It is possible to fit a TH2 with a TF1 or a TH3 with a TF2.; /// In this case the chi-square is computed from the squared error distance between the function values and the bin centers weighted by the bin content.; /// For correct error scaling, the obtained parameter error are corrected as in the case when the; /// option ""W"" is used.; ///; /// #### User defined objective functions; ///; /// By default when fitting a chi square function is used for fitting. When option ""L"" is used; /// a Poisson likelihood function is used. Using option ""MULTI"" a multinomial likelihood fit is used.; /// Thes functions are defined in the header Fit/Chi2Func.h or Fit/PoissonLikelihoodFCN and they; /// are implemented using the routines FitUtil::EvaluateChi2 or FitUtil::EvaluatePoissonLogL in; /// the file math/mathcore/src/FitUtil.cxx.; /// It is possible to specify a user defined fitting function, using option ""U"" and; /// calling the following functions:; ///; /// ~~~ {.cpp}; /// TVirtualFitter::Fitter(myhist)->SetFCN(MyFittingFunction);; /// ~~~; ///; /// where MyFittingFunction is of type:; ///; /// ~~~ {.cpp}; /// extern void MyFittingFunction(Int_t &npar, Double_t *gin, Double_t &f, Double_t *u, Int_t flag);; /// ~~~; ///; /// #### Note on treatment of empty bins; ///; /// Empty bins, which have the content equal to zero AND error equal to zero,; /// are excluded by default from the chi-square fit, but they are considered in the likelihood fit.; /// since they affect the likelihood if the function value in these bins is not negligible.; /// Note that if the histogram is having bins with zero content and non zero-errors they are considered as; /// any other bins in the fit. Instead bins with zero error and non-zero conte",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:17328,rout,routines,17328,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,1,['rout'],['routines']
Integrability,"stead of plotting it directly, add it to an existing curve with given name (and relative weight factors).; /// <tr><td> `Components(const char* names)` <td> When plotting sums of PDFs, plot only the named components (*e.g.* only; /// the signal of a signal+background model).; /// <tr><td> `Components(const RooArgSet& compSet)` <td> As above, but pass a RooArgSet of the components themselves.; ///; /// <tr><th> Type of argument <th> Projection control; /// <tr><td> `Slice(const RooArgSet& set)` <td> Override default projection behaviour by omitting observables listed; /// in set from the projection, i.e. by not integrating over these.; /// Slicing is usually only sensible in discrete observables, by e.g. creating a slice; /// of the PDF at the current value of the category observable.; /// <tr><td> `Slice(RooCategory& cat, const char* label)` <td> Override default projection behaviour by omitting the specified category; /// observable from the projection, i.e., by not integrating over all states of this category.; /// The slice is positioned at the given label value. Multiple Slice() commands can be given to specify slices; /// in multiple observables, e.g.; /// ```{.cpp}; /// pdf.plotOn(frame, Slice(tagCategory, ""2tag""), Slice(jetCategory, ""3jet""));; /// ```; /// <tr><td> `Project(const RooArgSet& set)` <td> Override default projection behaviour by projecting; /// over observables given in set, completely ignoring the default projection behavior. Advanced use only.; /// <tr><td> `ProjWData(const RooAbsData& d)` <td> Override default projection _technique_ (integration). For observables; /// present in given dataset projection of PDF is achieved by constructing an average over all observable; /// values in given set. Consult RooFit plotting tutorial for further explanation of meaning & use of this technique; /// <tr><td> `ProjWData(const RooArgSet& s, const RooAbsData& d)` <td> As above but only consider subset 's' of; /// observables in dataset 'd' for projection th",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx:4061,integrat,integrating,4061,roofit/roofitcore/src/RooAbsPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx,1,['integrat'],['integrating']
Integrability,"structor vtables.; // * vtordisps are allocated in a block of memory with size and alignment equal; // to the alignment of the completed structure (before applying __declspec(; // align())). The vtordisp always occur at the end of the allocation block,; // immediately prior to the virtual base.; // * vfptrs are injected after all bases and fields have been laid out. In; // order to guarantee proper alignment of all fields, the vfptr injection; // pushes all bases and fields back by the alignment imposed by those bases; // and fields. This can potentially add a significant amount of padding.; // vfptrs are always injected at offset 0.; // * vbptrs are injected after all bases and fields have been laid out. In; // order to guarantee proper alignment of all fields, the vfptr injection; // pushes all bases and fields back by the alignment imposed by those bases; // and fields. This can potentially add a significant amount of padding.; // vbptrs are injected immediately after the last non-virtual base as; // lexicographically ordered in the code. If this site isn't pointer aligned; // the vbptr is placed at the next properly aligned location. Enough padding; // is added to guarantee a fit.; // * The last zero sized non-virtual base can be placed at the end of the; // struct (potentially aliasing another object), or may alias with the first; // field, even if they are of the same type.; // * The last zero size virtual base may be placed at the end of the struct; // potentially aliasing another object.; // * The ABI attempts to avoid aliasing of zero sized bases by adding padding; // between bases or vbases with specific properties. The criteria for; // additional padding between two bases is that the first base is zero sized; // or ends with a zero sized subobject and the second base is zero sized or; // trails with a zero sized base or field (sharing of vfptrs can reorder the; // layout of the so the leading base is not always the first one declared).; // This rule does ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/RecordLayoutBuilder.cpp:2398,inject,injected,2398,interpreter/llvm-project/clang/lib/AST/RecordLayoutBuilder.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/RecordLayoutBuilder.cpp,1,['inject'],['injected']
Integrability,"t limitation; * the rights to use, copy, modify, merge, publish, distribute, sublicense,; * and/or sell copies of the Software, and to permit persons to whom the; * Software is furnished to do so, subject to the following conditions:; *; * The above copyright notice and this permission notice shall be included; * in all copies or substantial portions of the Software.; *; * THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS; * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,; * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL; * BRIAN PAUL BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN; * AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN; * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.; */; /*; ** Copyright (c) 2007 The Khronos Group Inc.; ** ; ** Permission is hereby granted, free of charge, to any person obtaining a; ** copy of this software and/or associated documentation files (the; ** ""Materials""), to deal in the Materials without restriction, including; ** without limitation the rights to use, copy, modify, merge, publish,; ** distribute, sublicense, and/or sell copies of the Materials, and to; ** permit persons to whom the Materials are furnished to do so, subject to; ** the following conditions:; ** ; ** The above copyright notice and this permission notice shall be included; ** in all copies or substantial portions of the Materials.; ** ; ** THE MATERIALS ARE PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND,; ** EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF; ** MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.; ** IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY; ** CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,; ** TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE; ** MATERIALS OR THE USE OR OTHER DEALINGS IN THE MATERIALS.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/glew/inc/GL/eglew.h:3983,CONTRACT,CONTRACT,3983,builtins/glew/inc/GL/eglew.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/glew/inc/GL/eglew.h,3,['CONTRACT'],['CONTRACT']
Integrability,"t must output an error and it mustn't produce; /// machine code. Cling implements an extension to Clang semantic analyzer; /// that allows the compiler to recover even an unknown symbol is encountered.; /// For instance if the compiler sees a symbol it looks for its definition in; /// a internal structure (symbol table) and it is not found it asks whether; /// somebody else could provide the missing symbol. That is the place where; /// the DynamicIDHandler, which is controlled by DynamicExprTransformer comes; /// into play. It marks all unknown symbols as dependent as if they are; /// templates and are going to be resolved at first instantiation, with the; /// only difference that an instantiation never happens. The advantage is that; /// the unknown symbols are not diagnosed but the disadvantage is that; /// somebody needs to transform them into valid expressions with valid types.; ///; /// 2. Replace all dependent symbols - all artificially dependent symbols need; /// to be replaced with appropriate valid symbols in order the compiler to; /// produce executable machine code. The DynamicExprTransformer walks up all; /// statements and declarations that might be possibly marked earlier as; /// dependent and replaces them with valid expression, which preserves the; /// meant behavior. Main implementation goal is to replace the as little; /// as possible part of the statement. The replacement is done immediately; /// after the expected type can be deduced.; ///; /// 2.1. EvaluateT - this is a templated function, which is put at the; /// place of the dependent expression. It will be called at runtime and it; /// will use the runtime instance of the interpreter (cling interprets itself); /// to evaluate the replaced expression. The template parameter of the; /// function carries the expected expression type. If unknown symbol is; /// encountered as a right-hand-side of an assignment one can claim that; /// the type of the unknown expression should be compatible with the",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLookup.h:1556,depend,dependent,1556,interpreter/cling/lib/Interpreter/DynamicLookup.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLookup.h,2,['depend'],['dependent']
Integrability,"t strategy to calculate the running integrals is; ///; /// - If the integrand (this object) supports analytical integration, construct an integral object; /// that calculate the running integrals value by calculating the analytical integral each; /// time the running integral object is evaluated; ///; /// - If the integrand (this object) requires numeric integration to construct the running integral; /// create an object of class RooNumRunningInt which first samples the entire function and integrates; /// the sampled function numerically. This method has superior performance as there is no need to; /// perform a full (numeric) integration for each evaluation of the running integral object, but; /// only when one of its parameters has changed.; ///; /// The choice of strategy can be changed with the ScanAll() argument, which forces the use of the; /// scanning technique implemented in RooNumRunningInt for all use cases, and with the ScanNone(); /// argument which forces the 'integrate each evaluation' technique for all use cases. The sampling; /// granularity for the scanning technique can be controlled with the ScanParameters technique; /// which allows to specify the number of samples to be taken, and to which order the resulting; /// running integral should be interpolated. The default values are 1000 samples and 2nd order; /// interpolation.; ///; /// The following named arguments are accepted; /// | | Effect on integral creation; /// |-|-------------------------------; /// | `SupNormSet(const RooArgSet&)` | Observables over which should be normalized _in addition_ to the integration observables; /// | `ScanParameters(Int_t nbins, Int_t intOrder)` | Parameters for scanning technique of making CDF: number of sampled bins and order of interpolation applied on numeric cdf; /// | `ScanNum()` | Apply scanning technique if cdf integral involves numeric integration; /// | `ScanAll()` | Always apply scanning technique; /// | `ScanNone()` | Never apply scanning technique",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx:2153,integrat,integration,2153,roofit/roofitcore/src/RooAbsReal.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx,2,['integrat'],['integration']
Integrability,"t until inflateBack() returns. inflateBackInit() must be called first to allocate the internal state; and to initialize the state with the user-provided window buffer.; inflateBack() may then be used multiple times to inflate a complete, raw; deflate stream with each call. inflateBackEnd() is then called to free the; allocated state. A raw deflate stream is one with no zlib or gzip header or trailer.; This routine would normally be used in a utility that reads zip or gzip; files and writes out uncompressed files. The utility would decode the; header and process the trailer on its own, hence this routine expects only; the raw deflate stream to decompress. This is different from the normal; behavior of inflate(), which expects either a zlib or gzip header and; trailer around the deflate stream. inflateBack() uses two subroutines supplied by the caller that are then; called by inflateBack() for input and output. inflateBack() calls those; routines until it reads a complete deflate stream and writes out all of the; uncompressed data, or until it encounters an error. The function's; parameters and return types are defined above in the in_func and out_func; typedefs. inflateBack() will call in(in_desc, &buf) which should return the; number of bytes of provided input, and a pointer to that input in buf. If; there is no input available, in() must return zero--buf is ignored in that; case--and inflateBack() will return a buffer error. inflateBack() will call; out(out_desc, buf, len) to write the uncompressed data buf[0..len-1]. out(); should return zero on success, or non-zero on failure. If out() returns; non-zero, inflateBack() will return with an error. Neither in() nor out(); are permitted to change the contents of the window provided to; inflateBackInit(), which is also the buffer that out() uses to write from.; The length written by out() will be at most the window size. Any non-zero; amount of input may be provided by in(). For convenience, inflateBack() can be provid",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:1437,rout,routines,1437,builtins/zlib/zlib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h,1,['rout'],['routines']
Integrability,"t until inflateBack() returns. inflateBackInit() must be called first to allocate the internal state; and to initialize the state with the user-provided window buffer.; inflateBack() may then be used multiple times to inflate a complete, raw; deflate stream with each call. inflateBackEnd() is then called to free; the allocated state. A raw deflate stream is one with no zlib or gzip header or trailer.; This routine would normally be used in a utility that reads zip or gzip; files and writes out uncompressed files. The utility would decode the; header and process the trailer on its own, hence this routine expects; only the raw deflate stream to decompress. This is different from the; normal behavior of inflate(), which expects either a zlib or gzip header and; trailer around the deflate stream. inflateBack() uses two subroutines supplied by the caller that are then; called by inflateBack() for input and output. inflateBack() calls those; routines until it reads a complete deflate stream and writes out all of the; uncompressed data, or until it encounters an error. The function's; parameters and return types are defined above in the in_func and out_func; typedefs. inflateBack() will call in(in_desc, &buf) which should return the; number of bytes of provided input, and a pointer to that input in buf. If; there is no input available, in() must return zero--buf is ignored in that; case--and inflateBack() will return a buffer error. inflateBack() will call; out(out_desc, buf, len) to write the uncompressed data buf[0..len-1]. out(); should return zero on success, or non-zero on failure. If out() returns; non-zero, inflateBack() will return with an error. Neither in() nor out(); are permitted to change the contents of the window provided to; inflateBackInit(), which is also the buffer that out() uses to write from.; The length written by out() will be at most the window size. Any non-zero; amount of input may be provided by in(). For convenience, inflateBack() can be provid",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/zlib.h:1354,rout,routines,1354,graf2d/asimage/src/libAfterImage/zlib/zlib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/zlib.h,1,['rout'],['routines']
Integrability,"t); - Simplex; - Minimize; - Fumili (Fumili2); - Scan. - Fumili (class TFumiliMinimizer). - GSLMultiMin (class ROOT::Math::GSLMinimizer) available when ROOT is built with `mathmore` support; - BFGS2 (Default); - BFGS; - ConjugateFR; - ConjugatePR; - SteepestDescent. - GSLMultiFit (class ROOT::Math::GSLNLMinimizer) available when ROOT is built `mathmore` support. - GSLSimAn (class ROOT::Math::GSLSimAnMinimizer) available when ROOT is built with `mathmore` support. - Genetic (class ROOT::Math::GeneticMinimizer). - RMinimizer (class ROOT::Math::RMinimizer) available when ROOT is built with `r` support; - BFGS (default); - L-BFGS-S; - Nelder-Mead; - CG; - and more methods, see the Details in the documentation of the function `optimix` of the [optmix R package](https://cran.r-project.org/web/packages/optimx/optimx.pdf). The Minimizer class provides the interface to perform the minimization including. In addition to provide the API for function minimization (via ROOT::Math::Minimizer::Minimize) the Minimizer class provides:; - the interface for setting the function to be minimized. The objective function passed to the Minimizer must implement the multi-dimensional generic interface; ROOT::Math::IBaseFunctionMultiDim. If the function provides gradient calculation (e.g. implementing the ROOT::Math::IGradientFunctionMultiDim interface); the gradient will be used by the Minimizer class, when needed. There are convenient classes for the users to wrap their own functions in this required interface for minimization.; These are the `ROOT::Math::Functor` class and the `ROOT::Math::GradFunctor` class for wrapping functions providing both evaluation and gradient. Some methods, like Fumili, Fumili2 and GSLMultiFit are; specialized method for least-square and also likelihood minimizations. They require then that the given function implements in addition; the `ROOT::Math::FitMethodFunction` interface.; - The interface for setting the initial values for the function variables (which are",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Minimizer.h:2209,interface,interface,2209,math/mathcore/inc/Math/Minimizer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Minimizer.h,1,['interface'],['interface']
Integrability,"tNumber; // Read fEventNumber; /// if (n<10 || n>10) { ... }; /// ~~~; /// is more efficient than; /// ~~~ {.cpp}; /// if (fEventNumber<10 || fEventNumber>10); /// ~~~; /// Also, optionally, the generated selector will also call methods named; /// macrofilename_methodname in each of 6 main selector methods if the method; /// macrofilename_methodname exist (Where macrofilename is stripped of its; /// extension).; ///; /// Concretely, with the script named h1analysisProxy.C,; ///; /// - The method calls the method (if it exist); /// - Begin -> void h1analysisProxy_Begin(TTree*);; /// - SlaveBegin -> void h1analysisProxy_SlaveBegin(TTree*);; /// - Notify -> bool h1analysisProxy_Notify();; /// - Process -> bool h1analysisProxy_Process(Long64_t);; /// - SlaveTerminate -> void h1analysisProxy_SlaveTerminate();; /// - Terminate -> void h1analysisProxy_Terminate();; ///; /// If a file name macrofilename.h (or .hh, .hpp, .hxx, .hPP, .hXX) exist; /// it is included before the declaration of the proxy class. This can; /// be used in particular to insure that the include files needed by; /// the macro file are properly loaded.; ///; /// The default histogram is accessible via the variable named 'htemp'.; ///; /// If the library of the classes describing the data in the branch is; /// loaded, the skeleton will add the needed `include` statements and; /// give the ability to access the object stored in the branches.; ///; /// To draw px using the file hsimple.root (generated by the; /// hsimple.C tutorial), we need a file named hsimple.cxx:; /// ~~~ {.cpp}; /// double hsimple() {; /// return px;; /// }; /// ~~~; /// MakeProxy can then be used indirectly via the TTree::Draw interface; /// as follow:; /// ~~~ {.cpp}; /// new TFile(""hsimple.root""); /// ntuple->Draw(""hsimple.cxx"");; /// ~~~; /// A more complete example is available in the tutorials directory:; /// h1analysisProxy.cxx , h1analysProxy.h and h1analysisProxyCut.C; /// which reimplement the selector found in h1analysis.C",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:4531,interface,interface,4531,tree/tree/src/TTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx,1,['interface'],['interface']
Integrability,"tTransform() to get a pointer to the current; /// transform object.; ///; /// \param[out] h_output histogram for the output. If a null pointer is passed, a new histogram is created; /// and returned, otherwise, the provided histogram is used and should be big enough; /// \param[in] option option parameters consists of 3 parts:; /// - option on what to return; /// - ""RE"" - returns a histogram of the real part of the output; /// - ""IM"" - returns a histogram of the imaginary part of the output; /// - ""MAG""- returns a histogram of the magnitude of the output; /// - ""PH"" - returns a histogram of the phase of the output; /// - option of transform type; /// - ""R2C"" - real to complex transforms - default; /// - ""R2HC"" - real to halfcomplex (special format of storing output data,; /// results the same as for R2C); /// - ""DHT"" - discrete Hartley transform; /// real to real transforms (sine and cosine):; /// - ""R2R_0"", ""R2R_1"", ""R2R_2"", ""R2R_3"" - discrete cosine transforms of types I-IV; /// - ""R2R_4"", ""R2R_5"", ""R2R_6"", ""R2R_7"" - discrete sine transforms of types I-IV; /// To specify the type of each dimension of a 2-dimensional real to real; /// transform, use options of form ""R2R_XX"", for example, ""R2R_02"" for a transform,; /// which is of type ""R2R_0"" in 1st dimension and ""R2R_2"" in the 2nd.; /// - option of transform flag; /// - ""ES"" (from ""estimate"") - no time in preparing the transform, but probably sub-optimal; /// performance; /// - ""M"" (from ""measure"") - some time spend in finding the optimal way to do the transform; /// - ""P"" (from ""patient"") - more time spend in finding the optimal way to do the transform; /// - ""EX"" (from ""exhaustive"") - the most optimal way is found; /// This option should be chosen depending on how many transforms of the same size and; /// type are going to be done. Planning is only done once, for the first transform of this; /// size and type. Default is ""ES"".; ///; /// Examples of valid options: ""Mag R2C M"" ""Re R2R_11"" ""Im R2C ES"" ""PH R2HC EX""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:2053,depend,depending,2053,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,1,['depend'],['depending']
Integrability,"ta is supplied by a TVirtualTableInterface. The table is a TGCanvas to make use of already available viewport; functionality and drawing optimizations. The top left cell in a table has coordinates (0,0). A TObjArray is used internally to ensure little overhead and fast; acces to cells. If the data source has more rows than the default 50 rows of cells in; memory, buttons at the bottom of the table can be used to load the; next or previous chunk of data. At the top of the table, a frame is visible that shows the coordinates; of the top left cell currently in memmory in row,column. The amount of; rows and columns is also shown in rows x columns. These values can be; edited to move to a different area of the data source or to resize the; table. Tab will switch between the enties, return will move to the; currently entered range and resize the table if needed. Clicking the; goto button has the same effect. A TGTable is created by first creating an appropriate; TVirtualTableInterface from the data that needs visualization and; then creating the TGTable using this interface. A simple macro to use a TGTable with a TGSimpleTableInterface:. ~~~; {; Int_t i = 0, j = 0;; UInt_t nrows = 6, ncolumns = 5;; Double_t** data = new Double_t*[nrows];; for (i = 0; i < nrows; i++) {; data[i] = new Double_t[ncolumns];; for (j = 0; j < ncolumns; j++) {; data[i][j] = 10 * i + j;; }; }. // Create a main frame to contain the table; TGMainFrame* mainframe = new TGMainFrame(0, 400, 200);; mainframe->SetCleanup(kDeepCleanup) ;. // Create an interface; TGSimpleTableInterface *iface = new TGSimpleTableInterface(data, 6, 5);. // Create the table; TGTable *table = new TGTable(mainframe, 999, iface);. // Add the table to the main frame; mainframe->AddFrame(table, new TGLayoutHints(kLHintsExpandX | kLHintsExpandY));. //Update data; data[5][1] = 3.01;; //update the table view; table->Update();. // Layout and map the main frame; mainframe->SetWindowName(""Tree Table Test"") ;; mainframe->MapSubwindows() ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGTable.cxx:1238,interface,interface,1238,gui/gui/src/TGTable.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGTable.cxx,1,['interface'],['interface']
Integrability,"tandard C++ interfaces for hashing; // arbitrary data and building hash functions for user-defined types. This; // interface was originally proposed in N3333[1] and is currently under review; // for inclusion in a future TR and/or standard.; //; // The primary interfaces provide are comprised of one type and three functions:; //; // -- 'hash_code' class is an opaque type representing the hash code for some; // data. It is the intended product of hashing, and can be used to implement; // hash tables, checksumming, and other common uses of hashes. It is not an; // integer type (although it can be converted to one) because it is risky; // to assume much about the internals of a hash_code. In particular, each; // execution of the program has a high probability of producing a different; // hash_code for a given input. Thus their values are not stable to save or; // persist, and should only be used during the execution for the; // construction of hashing datastructures.; //; // -- 'hash_value' is a function designed to be overloaded for each; // user-defined type which wishes to be used within a hashing context. It; // should be overloaded within the user-defined type's namespace and found; // via ADL. Overloads for primitive types are provided by this library.; //; // -- 'hash_combine' and 'hash_combine_range' are functions designed to aid; // programmers in easily and intuitively combining a set of data into; // a single hash_code for their object. They should only logically be used; // within the implementation of a 'hash_value' routine or similar context.; //; // Note that 'hash_combine_range' contains very special logic for hashing; // a contiguous array of integers or pointers. This logic is *extremely* fast,; // on a modern Intel ""Gainestown"" Xeon (Nehalem uarch) @2.2 GHz, these were; // benchmarked at over 6.5 GiB/s for large keys, and <20 cycles/hash for keys; // under 32-bytes.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/Hashing.h:1976,rout,routine,1976,interpreter/llvm-project/llvm/include/llvm/ADT/Hashing.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/Hashing.h,1,['rout'],['routine']
Integrability,"te that a faster approach; may be used for the single inflate() call. In this implementation, inflate() always flushes as much output as; possible to the output buffer, and always uses the faster approach on the; first call. So the only effect of the flush parameter in this implementation; is on the return value of inflate(), as noted below, or when it returns early; because Z_BLOCK is used. If a preset dictionary is needed after this call (see inflateSetDictionary; below), inflate sets strm->adler to the adler32 checksum of the dictionary; chosen by the compressor and returns Z_NEED_DICT; otherwise it sets; strm->adler to the adler32 checksum of all output produced so far (that is,; total_out bytes) and returns Z_OK, Z_STREAM_END or an error code as described; below. At the end of the stream, inflate() checks that its computed adler32; checksum is equal to that saved by the compressor and returns Z_STREAM_END; only if the checksum is correct. inflate() will decompress and check either zlib-wrapped or gzip-wrapped; deflate data. The header type is detected automatically. Any information; contained in the gzip header is not retained, so applications that need that; information should instead use raw inflate, see inflateInit2() below, or; inflateBack() and perform their own processing of the gzip header and; trailer. inflate() returns Z_OK if some progress has been made (more input processed; or more output produced), Z_STREAM_END if the end of the compressed data has; been reached and all uncompressed output has been produced, Z_NEED_DICT if a; preset dictionary is needed at this point, Z_DATA_ERROR if the input data was; corrupted (input stream not conforming to the zlib format or incorrect check; value), Z_STREAM_ERROR if the stream structure was inconsistent (for example; if next_in or next_out was NULL), Z_MEM_ERROR if there was not enough memory,; Z_BUF_ERROR if no progress is possible or if there was not enough room in the; output buffer when Z_FINISH is used. N",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/zlib.h:4381,wrap,wrapped,4381,graf2d/asimage/src/libAfterImage/zlib/zlib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/zlib.h,2,['wrap'],['wrapped']
Integrability,"te, and/or sell copies of; * the Data Files or Software, and to permit persons to whom the Data Files; * or Software are furnished to do so, provided that; * (a) this copyright and permission notice appear with all copies; * of the Data Files or Software,; * (b) this copyright and permission notice appear in associated; * documentation, and; * (c) there is clear notice in each modified Data File or in the Software; * as well as in the documentation associated with the Data File(s) or; * Software that the data or software has been modified.; *; * THE DATA FILES AND SOFTWARE ARE PROVIDED ""AS IS"", WITHOUT WARRANTY OF; * ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE; * WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND; * NONINFRINGEMENT OF THIRD PARTY RIGHTS.; * IN NO EVENT SHALL THE COPYRIGHT HOLDER OR HOLDERS INCLUDED IN THIS; * NOTICE BE LIABLE FOR ANY CLAIM, OR ANY SPECIAL INDIRECT OR CONSEQUENTIAL; * DAMAGES, OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE,; * DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER; * TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR; * PERFORMANCE OF THE DATA FILES OR SOFTWARE.; *; * Except as contained in this notice, the name of a copyright holder; * shall not be used in advertising or otherwise to promote the sale,; * use or other dealings in these Data Files or Software without prior; * written authorization of the copyright holder.; */; /* ---------------------------------------------------------------------. Conversions between UTF32, UTF-16, and UTF-8. Header file. Several funtions are included here, forming a complete set of; conversions between the three formats. UTF-7 is not included; here, but is handled in a separate source file. Each of these routines takes pointers to input buffers and output; buffers. The input buffers are const. Each routine converts the text between *sourceStart and sourceEnd,; putting the result into the buffer between *targetS",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/ConvertUTF.h:1964,CONTRACT,CONTRACT,1964,interpreter/llvm-project/llvm/include/llvm/Support/ConvertUTF.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/ConvertUTF.h,1,['CONTRACT'],['CONTRACT']
Integrability,"te, and/or sell copies of; * the Data Files or Software, and to permit persons to whom the Data Files; * or Software are furnished to do so, provided that; * (a) this copyright and permission notice appear with all copies; * of the Data Files or Software,; * (b) this copyright and permission notice appear in associated; * documentation, and; * (c) there is clear notice in each modified Data File or in the Software; * as well as in the documentation associated with the Data File(s) or; * Software that the data or software has been modified.; *; * THE DATA FILES AND SOFTWARE ARE PROVIDED ""AS IS"", WITHOUT WARRANTY OF; * ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE; * WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND; * NONINFRINGEMENT OF THIRD PARTY RIGHTS.; * IN NO EVENT SHALL THE COPYRIGHT HOLDER OR HOLDERS INCLUDED IN THIS; * NOTICE BE LIABLE FOR ANY CLAIM, OR ANY SPECIAL INDIRECT OR CONSEQUENTIAL; * DAMAGES, OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE,; * DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER; * TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR; * PERFORMANCE OF THE DATA FILES OR SOFTWARE.; *; * Except as contained in this notice, the name of a copyright holder; * shall not be used in advertising or otherwise to promote the sale,; * use or other dealings in these Data Files or Software without prior; * written authorization of the copyright holder.; */; /* ---------------------------------------------------------------------. Conversions between UTF32, UTF-16, and UTF-8. Source code file.; Author: Mark E. Davis, 1994.; Rev History: Rick McGowan, fixes & updates May 2001.; Sept 2001: fixed const & error conditions per; mods suggested by S. Parent & A. Lillich.; June 2002: Tim Dodd added detection and handling of incomplete; source sequences, enhanced error detection, added casts; to eliminate compiler warnings.; July 2003: slight mods to back out aggressive FFFE detection.; ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/ConvertUTF.cpp:1964,CONTRACT,CONTRACT,1964,interpreter/llvm-project/llvm/lib/Support/ConvertUTF.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/ConvertUTF.cpp,1,['CONTRACT'],['CONTRACT']
Integrability,"ted below.; * Prefer normal streaming API for an easier experience.; ********************************************************************* */; /**; Buffer-less streaming compression (synchronous mode). A ZSTD_CCtx object is required to track streaming operations.; Use ZSTD_createCCtx() / ZSTD_freeCCtx() to manage resource.; ZSTD_CCtx object can be re-used multiple times within successive compression operations. Start by initializing a context.; Use ZSTD_compressBegin(), or ZSTD_compressBegin_usingDict() for dictionary compression,; or ZSTD_compressBegin_advanced(), for finer parameter control.; It's also possible to duplicate a reference context which has already been initialized, using ZSTD_copyCCtx(). Then, consume your input using ZSTD_compressContinue().; There are some important considerations to keep in mind when using this advanced function :; - ZSTD_compressContinue() has no internal buffer. It uses externally provided buffers only.; - Interface is synchronous : input is consumed entirely and produces 1+ compressed blocks.; - Caller must ensure there is enough space in `dst` to store compressed data under worst case scenario.; Worst case evaluation is provided by ZSTD_compressBound().; ZSTD_compressContinue() doesn't guarantee recover after a failed compression.; - ZSTD_compressContinue() presumes prior input ***is still accessible and unmodified*** (up to maximum distance size, see WindowLog).; It remembers all previous contiguous blocks, plus one separated memory segment (which can itself consists of multiple contiguous blocks); - ZSTD_compressContinue() detects that prior input has been overwritten when `src` buffer overlaps.; In which case, it will ""discard"" the relevant memory section from its history. Finish a frame with ZSTD_compressEnd(), which will write the last block(s) and optional checksum.; It's possible to use srcSize==0, in which case, it will write a final empty block to end the frame.; Without last block mark, frames are considered unfinish",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h:1276,Interface,Interface,1276,builtins/zstd/zstd.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h,1,['Interface'],['Interface']
Integrability,"ted, it will; /// show a projected curve integrated over all variables that were present in the shown; /// dataset except for the one on the x-axis. The normalization of the curve will also; /// be adjusted to the event count of the plotted dataset. An informational message; /// will be printed for each projection step that is performed.; ///; /// This function takes the following named arguments; /// <table>; /// <tr><th><th> Projection control; /// <tr><td> `Slice(const RooArgSet& set)` <td> Override default projection behaviour by omitting observables listed; /// in set from the projection, i.e. by not integrating over these.; /// Slicing is usually only sensible in discrete observables, by e.g. creating a slice; /// of the PDF at the current value of the category observable.; ///; /// <tr><td> `Slice(RooCategory& cat, const char* label)` <td> Override default projection behaviour by omitting the specified category; /// observable from the projection, i.e., by not integrating over all states of this category.; /// The slice is positioned at the given label value. To pass multiple Slice() commands, please use the; /// Slice(std::map<RooCategory*, std::string> const&) argument explained below.; ///; /// <tr><td> `Slice(std::map<RooCategory*, std::string> const&)` <td> Omits multiple categories from the projection, as explianed above.; /// Can be used with initializer lists for convenience, e.g.; /// ```{.cpp}; /// pdf.plotOn(frame, Slice({{&tagCategory, ""2tag""}, {&jetCategory, ""3jet""}});; /// ```; ///; /// <tr><td> `Project(const RooArgSet& set)` <td> Override default projection behaviour by projecting over observables; /// given in the set, ignoring the default projection behavior. Advanced use only.; ///; /// <tr><td> `ProjWData(const RooAbsData& d)` <td> Override default projection _technique_ (integration). For observables present in given dataset; /// projection of PDF is achieved by constructing an average over all observable values in given set.; /// Consult",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx:1498,integrat,integrating,1498,roofit/roofitcore/src/RooAbsReal.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx,1,['integrat'],['integrating']
Integrability,"tefan Schmitt; // DESY, 13/10/08; // Version 17.9, add new methods GetDF(), GetSURE(), ScanSURE(), GetSqrtEvEmatrix(); //; // History:; // Version 17.8, add new method GetDXDY() for histograms; // Version 17.7, change finite() -> TMath::Finite(); // Version 17.6, updated doxygen-style comments, add one argument for scanLCurve; // Version 17.5, fix memory leak with fVyyInv, bugs in GetInputInverseEmatrix(), GetInput(), bug in MultiplyMSparseMSparseTranspVector; // Version 17.4, in parallel to changes in TUnfoldBinning; // Version 17.3, in parallel to changes in TUnfoldBinning; // Version 17.2, bug fix with GetProbabilityMatrix; // Version 17.1, bug fixes in GetFoldedOutput, GetOutput; // Version 17.0, option to specify an error matrix with SetInput(), new ScanRho() method; // Version 16.2, in parallel to bug-fix in TUnfoldSys; // Version 16.1, fix bug with error matrix in case kEConstraintArea is used; // Version 16.0, fix calculation of global correlations, improved error messages; // Version 15, simplified L-curve scan, new tau definition, new error calc., area preservation; // Version 14, with changes in TUnfoldSys.cxx; // Version 13, new methods for derived classes and small bug fix; // Version 12, report singular matrices; // Version 11, reduce the amount of printout; // Version 10, more correct definition of the L curve, update references; // Version 9, faster matrix inversion and skip edge points for L-curve scan; // Version 8, replace all TMatrixSparse matrix operations by private code; // Version 7, fix problem with TMatrixDSparse,TMatrixD multiplication; // Version 6, replace class XY by std::pair; // Version 5, replace run-time dynamic arrays by new and delete[]; // Version 4, fix new bug from V3 with initial regularisation condition; // Version 3, fix bug with initial regularisation condition; // Version 2, with improved ScanLcurve() algorithm; // Version 1, added ScanLcurve() method; // Version 0, stable version of basic unfolding algorithm; /** \class TU",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx:999,message,messages,999,hist/unfold/src/TUnfold.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx,1,['message'],['messages']
Integrability,"tements; ~~~ {.cpp}; TClassTree tc1(""tc1"",""TH1"");; tc1.ShowLinks(""HMR"");; ~~~. \image html gpad_classtree2.png. Note that in case of embedded classes or pointers to classes,; the corresponding dashed lines or arrows respectively start; in the TPaveClass object at an X position reflecting the position; in the list of data members. - References by data members to other classes are show with a full red line; - Multiple inheritance is shown with a dashed blue line; - ""Has a"" relation is shown with a dotted cyan line; - References from code is shown by a full green line. Use TClassTree::SetSourceDir to specify the search path for source files.; By default the search path includes the `$ROOTSYS` directory, the current; directory and the subdirectory `src`. The first time TClassTree::Draw is invoked, all the classes in the; current application are processed, including the parsing of the code; to find all classes referenced by the include statements.; This process may take a few seconds. The following commands will be; much faster. A TClassTree object may be saved in a Root file.; This object can be processed later by a Root program that ignores; the original classes. This interesting possibility allows to send; the class structure of an application to a colleague who does not have; your classes. Example:; ~~~ {.cpp}; TFile f(""myClasses.root"",""recreate""); TClassTree *ct = new TClassTree(""ct"",""ATLF*""); ct->Write();; ~~~; You can send at this point the file myClass.root to a colleague who can; run the following Root basic session; ~~~ {.cpp}; TFile f(""myClass.root""); //connect the file; tt.ls(); //to list all classes and titles; tt.Draw(""ATLFDisplay"") //show class ATLFDisplay with all its dependencies; ~~~; At this point, one has still access to all the classes present; in the original session and select any combination of these classes; to be displayed.; */; ////////////////////////////////////////////////////////////////////////////////; /// TClassTree default constructor.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TClassTree.cxx:4350,depend,dependencies,4350,graf2d/gpad/src/TClassTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TClassTree.cxx,1,['depend'],['dependencies']
Integrability,"terface for input and output. This is potentially more efficient than; inflate() for file i/o applications, in that it avoids copying between the; output and the sliding window by simply making the window itself the output; buffer. inflate() can be faster on modern CPUs when used with large; buffers. inflateBack() trusts the application to not change the output; buffer passed by the output function, at least until inflateBack() returns. inflateBackInit() must be called first to allocate the internal state; and to initialize the state with the user-provided window buffer.; inflateBack() may then be used multiple times to inflate a complete, raw; deflate stream with each call. inflateBackEnd() is then called to free the; allocated state. A raw deflate stream is one with no zlib or gzip header or trailer.; This routine would normally be used in a utility that reads zip or gzip; files and writes out uncompressed files. The utility would decode the; header and process the trailer on its own, hence this routine expects only; the raw deflate stream to decompress. This is different from the normal; behavior of inflate(), which expects either a zlib or gzip header and; trailer around the deflate stream. inflateBack() uses two subroutines supplied by the caller that are then; called by inflateBack() for input and output. inflateBack() calls those; routines until it reads a complete deflate stream and writes out all of the; uncompressed data, or until it encounters an error. The function's; parameters and return types are defined above in the in_func and out_func; typedefs. inflateBack() will call in(in_desc, &buf) which should return the; number of bytes of provided input, and a pointer to that input in buf. If; there is no input available, in() must return zero--buf is ignored in that; case--and inflateBack() will return a buffer error. inflateBack() will call; out(out_desc, buf, len) to write the uncompressed data buf[0..len-1]. out(); should return zero on success, or non-",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:1090,rout,routine,1090,builtins/zlib/zlib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h,1,['rout'],['routine']
Integrability,"ters and observables, the; /// complete tree of objects is imported. If any of the _variables_ of a composite object (parameters/observables) are already; /// in the workspace the imported p.d.f. is connected to the already existing variables. If any of the _function_ objects (p.d.f, formulas); /// to be imported already exists in the workspace an error message is printed and the import of the entire tree of objects is cancelled.; /// Several optional arguments can be provided to modify the import procedure.; ///; /// <table>; /// <tr><th> Accepted arguments; /// <tr><td> `RenameConflictNodes(const char* suffix)` <td> Add suffix to branch node name if name conflicts with existing node in workspace; /// <tr><td> `RenameAllNodes(const char* suffix)` <td> Add suffix to all branch node names including top level node.; /// <tr><td> `RenameAllVariables(const char* suffix)` <td> Add suffix to all variables of objects being imported.; /// <tr><td> `RenameAllVariablesExcept(const char* suffix, const char* exceptionList)` <td> Add suffix to all variables names, except ones listed; /// <tr><td> `RenameVariable(const char* inputName, const char* outputName)` <td> Rename a single variable as specified upon import.; /// <tr><td> `RecycleConflictNodes()` <td> If any of the function objects to be imported already exist in the name space, connect the; /// imported expression to the already existing nodes.; /// \attention Use with care! If function definitions do not match, this alters the definition of your function upon import; ///; /// <tr><td> `Silence()` <td> Do not issue any info message; /// </table>; ///; /// The RenameConflictNodes, RenameNodes and RecycleConflictNodes arguments are mutually exclusive. The RenameVariable argument can be repeated; /// as often as necessary to rename multiple variables. Alternatively, a single RenameVariable argument can be given with; /// two comma separated lists.; /// \note From python, use `Import()`, since `import` is a reserved keyword.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx:1906,message,message,1906,roofit/roofitcore/src/RooWorkspace.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx,1,['message'],['message']
Integrability,"ters are applied on glyph pixmaps, if its size exceeds threshold.; * TODO; * implement proper XFontSet support, when used with I18N enabled.; *********/; /****f* libAfterImage/asfont/get_asfont(); * NAME; * get_asfont(); * SYNOPSIS; * ASFont *get_asfont( ASFontManager *fontman,; * const char *font_string,; * int face_no, int size,; * ASFontType type );; * INPUTS; * fontman - pointer to previously created ASFontManager. Needed for; * connection to FreeType library, path to search fonts; * in, and X Server connection.; * font_string - font name or filename of the file containing font's data.; * face_no - number of face within the font file; * size - font size in points. Applicable only to scalable fonts,; * such as TrueType.; * type - specifies the type of the font, or GuessWho for; * autodetection.; * RETURN VALUE; * pointer to Opened ASFont structure, containing all the glyphs of the; * font, as well as other relevant info. On failure returns NULL.; * DESCRIPTION; * This function provides unified interface to font loading. It performs; * search in ASFontManager's list to see if this specific font has been; * loaded already, and if so - returns pointer to relevant structure.; * Otherwise it tryes to load font as FreeType font first, and then; * Xlib font, unless exact font type is specifyed.; *********/; /****f* libAfterImage/asfont/release_font(); * NAME; * release_font(); * SYNOPSIS; * void release_font( ASFont *font );; * INPUTS; * font - pointer to the valid ASFont structure containing loaded font.; * RETURN VALUE; * returns current reference count. -1 means that object has been; * destroyed.; * DESCRIPTION; * This function will decrement reference count on loaded font and if; * reference count will be less then 0 ( meaning that release_font() has; * been called more times then get_asfont() ) it will close the font,; * remove it from ASFontManager's list, destroy all the glyphs and; * generally free everything else used by ASFont.; * Otherwise font will remain in",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/asfont.h:3293,interface,interface,3293,graf2d/asimage/src/libAfterImage/asfont.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/asfont.h,1,['interface'],['interface']
Integrability,"th an illegal type must be mapped; // by exactly one of PromotedIntegers, ExpandedIntegers, ..., ReplacedValues.; // Values with a legal type may be mapped by ReplacedValues, but not by any of; // the other maps.; // Note that these invariants may not hold momentarily when processing a node:; // the node being processed may be put in a map before being marked Processed.; // Note that it is possible to have nodes marked NewNode in the DAG. This can; // occur in two ways. Firstly, a node may be created during legalization but; // never passed to the legalization core. This is usually due to the implicit; // folding that occurs when using the DAG.getNode operators. Secondly, a new; // node may be passed to the legalization core, but when analyzed may morph; // into a different node, leaving the original node as a NewNode in the DAG.; // A node may morph if one of its operands changes during analysis. Whether; // it actually morphs or not depends on whether, after updating its operands,; // it is equivalent to an existing node: if so, it morphs into that existing; // node (CSE). An operand can change during analysis if the operand is a new; // node that morphs, or it is a processed value that was mapped to some other; // value (as recorded in ReplacedValues) in which case the operand is turned; // into that other value. If a node morphs then the node it morphed into will; // be used instead of it for legalization, however the original node continues; // to live on in the DAG.; // The conclusion is that though there may be nodes marked NewNode in the DAG,; // all uses of such nodes are also marked NewNode: the result is a fungus of; // NewNodes growing on top of the useful nodes, and perhaps using them, but; // not used by them.; // If a value is mapped by ReplacedValues, then it must have no uses, except; // by nodes marked NewNode (see above).; // The final node obtained by mapping by ReplacedValues is not marked NewNode.; // Note that ReplacedValues should be applied i",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/LegalizeTypes.cpp:1138,depend,depends,1138,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/LegalizeTypes.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/LegalizeTypes.cpp,1,['depend'],['depends']
Integrability,"that names that are automatically recognized may be also:; for data fields: either fXXX or fIsXXX; and for getter function; GetXXX() or IsXXX() [where XXX is base name]. As an example of using it let's analyse a few lines which get and set; a fEditable field in TCanvas:; ~~~ {.cpp}; TCanvas *c = new TCanvas(""c""); // create a canvas; TClass *cl = c->IsA(); // get its class description object. TDataMember *dm = cl->GetDataMember(""fEditable""); //This is our data member. TMethodCall *getter = dm->GetterMethod(c); //find a method that gets value!; Long_t l; // declare a storage for this value;. getter->Execute(c,"""",l); // Get this Value !!!! It will appear in l !!!. TMethodCall *setter = dm->SetterMethod(c);; setter->Execute(c,""0"",); // Set Value 0 !!!; ~~~. This trick is widely used in ROOT TContextMenu and dialogs for obtaining; current values and put them as initial values in dialog fields. If you don't want to follow the convention of naming used by ROOT; you still could benefit from Getter/Setter method support: the solution; is to instruct ROOT what the names of these routines are.; The way to do it is putting this information in a comment string to a data; field in your class declaration:. ~~~ {.cpp}; class MyClass{; Int_t mydata; // *OPTIONS={GetMethod=""Get"";SetMethod=""Set""}; ...; Int_t Get() const { return mydata;};; void Set(Int_t i) {mydata=i;};; }; ~~~. However, this getting/setting functions are not the only feature of; this class. The next point is providing lists of possible settings; for the concerned data member. The idea is to have a list of possible; options for this data member, with strings identifying them. This; is used in dialogs with parameters to set - for details see; TMethodArg, TRootContextMenu, TContextMenu. This list not only specifies; the allowed value, but also provides strings naming the options.; Options are managed via TList of TOptionListItem objects. This list; is also created automatically: if a data type is an enum type,; the list",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TDataMember.cxx:3025,rout,routines,3025,core/meta/src/TDataMember.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TDataMember.cxx,1,['rout'],['routines']
Integrability,"the expression, or does belong to the expression but is; /// a leaf node. Every leaf node has at least one use that is a non-leaf node; /// of the expression, while for non-leaf nodes (except for the root 'I') every; /// use is a non-leaf node of the expression.; ///; /// For example:; /// expression graph node names; ///; /// + | I; /// / \ |; /// + + | A, B; /// / \ / \ |; /// * + * | C, D, E; /// / \ / \ / \ |; /// + * | F, G; ///; /// The leaf nodes are C, E, F and G. The Ops array will contain (maybe not in; /// that order) (C, 1), (E, 1), (F, 2), (G, 2).; ///; /// The expression is maximal: if some instruction is a binary operator of the; /// same kind as 'I', and all of its uses are non-leaf nodes of the expression,; /// then the instruction also belongs to the expression, is not a leaf node of; /// it, and its operands also belong to the expression (but may be leaf nodes).; ///; /// NOTE: This routine will set operands of non-leaf non-root nodes to undef in; /// order to ensure that every non-root node in the expression has *exactly one*; /// use by a non-leaf node of the expression. This destruction means that the; /// caller MUST either replace 'I' with a new expression or use something like; /// RewriteExprTree to put the values back in if the routine indicates that it; /// made a change by returning 'true'.; ///; /// In the above example either the right operand of A or the left operand of B; /// will be replaced by undef. If it is B's operand then this gives:; ///; /// + | I; /// / \ |; /// + + | A, B - operand of B replaced with undef; /// / \ \ |; /// * + * | C, D, E; /// / \ / \ / \ |; /// + * | F, G; ///; /// Note that such undef operands can only be reached by passing through 'I'.; /// For example, if you visit operands recursively starting from a leaf node; /// then you will never see such an undef operand unless you get back to 'I',; /// which requires passing through a phi node.; ///; /// Note that this routine may also mutate binary operators of",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/Reassociate.cpp:2100,rout,routine,2100,interpreter/llvm-project/llvm/lib/Transforms/Scalar/Reassociate.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/Reassociate.cpp,1,['rout'],['routine']
Integrability,"the structure; // of the program, e.g. basic block or a statement, while ""reference"" is an; // instance of accessing a register, e.g. a definition or a use. Nodes are; // connected with each other based on the structure of the program (such as; // blocks, instructions, etc.), and based on the data flow (e.g. reaching; // definitions, reached uses, etc.). The single-reaching-definition principle; // of SSA is generally observed, although, due to the non-SSA representation; // of the program, there are some differences between the graph and a ""pure""; // SSA representation.; //; //; // *** Implementation remarks; //; // Since the graph can contain a large number of nodes, memory consumption; // was one of the major design considerations. As a result, there is a single; // base class NodeBase which defines all members used by all possible derived; // classes. The members are arranged in a union, and a derived class cannot; // add any data members of its own. Each derived class only defines the; // functional interface, i.e. member functions. NodeBase must be a POD,; // which implies that all of its members must also be PODs.; // Since nodes need to be connected with other nodes, pointers have been; // replaced with 32-bit identifiers: each node has an id of type NodeId.; // There are mapping functions in the graph that translate between actual; // memory addresses and the corresponding identifiers.; // A node id of 0 is equivalent to nullptr.; //; //; // *** Structure of the graph; //; // A code node is always a collection of other nodes. For example, a code; // node corresponding to a basic block will contain code nodes corresponding; // to instructions. In turn, a code node corresponding to an instruction will; // contain a list of reference nodes that correspond to the definitions and; // uses of registers in that instruction. The members are arranged into a; // circular list, which is yet another consequence of the effort to save; // memory: for each member node it s",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/RDFGraph.h:1800,interface,interface,1800,interpreter/llvm-project/llvm/include/llvm/CodeGen/RDFGraph.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/RDFGraph.h,1,['interface'],['interface']
Integrability,"the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooNumConvPdf.cxx; \class RooNumConvPdf; \ingroup Roofitcore. Numeric 1-dimensional convolution operator PDF. This class can convolve any PDF; with any other PDF using a straightforward numeric calculation of the; convolution integral; This class should be used as last resort as numeric convolution calculated; this way is computationally intensive and prone to stability fitting problems.; <b>The preferred way to compute numeric convolutions is RooFFTConvPdf</b>,; which calculates convolutions using Fourier Transforms (requires external free; FFTW3 package); RooNumConvPdf implements reasonable defaults that should convolve most; functions reasonably well, but results strongly depend on the shape of your; input PDFS so always check your result.; The default integration engine for the numeric convolution is the; adaptive Gauss-Kronrod method, which empirically seems the most robust; for this task. You can override the convolution integration settings via; the RooNumIntConfig object reference returned by the convIntConfig() member; function; By default the numeric convolution is integrated from -infinity to; +infinity through a <pre>x -> 1/x</pre> coordinate transformation of the; tails. For convolution with a very small bandwidth it may be; advantageous (for both CPU consumption and stability) if the; integration domain is limited to a finite range. The function; setConvolutionWindow(mean,width,scale) allows to set a sliding; window around the x value to be calculated taking a RooAbsReal; expression for an offset and a width to be taken around the x; value. These input expression can be RooFormulaVars or other; function objects although the 3d 'scale' argument 'scale'; multiplies the width RooAbsReal expression given in the 2nd; argument, allowing for an appropriate window definition for most; cases wi",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumConvPdf.cxx:1472,integrat,integration,1472,roofit/roofitcore/src/RooNumConvPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumConvPdf.cxx,1,['integrat'],['integration']
Integrability,"there is no code anywhere else that reads the data and preserves; * the Trie. LD64 (sources available at opensource.apple.com) has a similar; * implementation that parses the export trie into a vector. That code as well; * as LLVM's libObject MachO implementation were the basis for this.; *; * The export trie is an encoded trie. The node serialization is a bit awkward.; * The below pseudo-code is the best description I've come up with for it.; *; * struct SerializedNode {; * ULEB128 TerminalSize;; * struct TerminalData { <-- This is only present if TerminalSize > 0; * ULEB128 Flags;; * ULEB128 Address; <-- Present if (! Flags & REEXPORT ); * ULEB128 Other; <-- Present if ( Flags & REEXPORT ||; * Flags & STUB_AND_RESOLVER ); * char[] ImportName; <-- Present if ( Flags & REEXPORT ); * }; * uint8_t ChildrenCount;; * Pair<char[], ULEB128> ChildNameOffsetPair[ChildrenCount];; * SerializedNode Children[ChildrenCount]; * }; *; * Terminal nodes are nodes that represent actual exports. They can appear; * anywhere in the tree other than at the root; they do not need to be leaf; * nodes. When reading the data out of the trie this routine reads it in-order,; * but it puts the child names and offsets directly into the child nodes. This; * results in looping over the children twice during serialization and; * de-serialization, but it makes the YAML representation more human readable.; *; * Below is an example of the graph from a ""Hello World"" executable:; *; * -------; * | '' |; * -------; * |; * -------; * | '_' |; * -------; * |; * |----------------------------------------|; * | |; * ------------------------ ---------------------; * | '_mh_execute_header' | | 'main' |; * | Flags: 0x00000000 | | Flags: 0x00000000 |; * | Addr: 0x00000000 | | Addr: 0x00001160 |; * ------------------------ ---------------------; *; * This graph represents the trie for the exports ""__mh_execute_header"" and; * ""_main"". In the graph only the ""_main"" and ""__mh_execute_header"" nodes are; * terminal.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/obj2yaml/macho2yaml.cpp:1606,rout,routine,1606,interpreter/llvm-project/llvm/tools/obj2yaml/macho2yaml.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/obj2yaml/macho2yaml.cpp,1,['rout'],['routine']
Integrability,"these Minuit ""internal""; /// parameter values or ""regular""/untransformed RooFit parameter space values depends on the situation.; /// - The values that arrive here via DoEval are always ""normal"" parameter values, since Minuit transforms these; /// back into regular space before passing to DoEval (see MnUserFcn::operator() which wraps the Fcn(Gradient)Base; /// in ModularFunctionMinimizer::Minimize and is used for direct function calls from that point on in the minimizer).; /// These can thus always be safely synced with this function's RooFit parameters using SetPdfParamVal.; /// - The values that arrive here via Gradient will be in internal coordinates if that is; /// what this class expects, and indeed this is the case for MinuitFcnGrad's current implementation. This is; /// communicated to Minuit via MinuitFcnGrad::returnsInMinuit2ParameterSpace. Inside Minuit, that function determines; /// whether this class's gradient calculator is wrapped inside a AnalyticalGradientCalculator, to which Minuit passes; /// ""external"" parameter values, or as an ExternalInternalGradientCalculator, which gets ""internal"" parameter values.; /// Long story short: when MinuitFcnGrad::returnsInMinuit2ParameterSpace() returns true, Minuit will pass ""internal""; /// values to Gradient. These cannot be synced with this function's RooFit parameters using; /// SetPdfParamVal, unless a manual transformation step is performed in advance. However, they do need to be passed; /// on to the gradient calculator, since indeed we expect values there to be in ""internal"" space. However, this is; /// calculator dependent. Note that in the current MinuitFcnGrad implementation we do not actually allow for; /// calculators in ""external"" (i.e. regular RooFit parameter space) values, since; /// MinuitFcnGrad::returnsInMinuit2ParameterSpace is hardcoded to true. This should in a future version be changed so; /// that the calculator (the wrapper) is queried for this information.; /// Because some gradient calcu",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/MinuitFcnGrad.cxx:1323,wrap,wrapped,1323,roofit/roofitcore/src/TestStatistics/MinuitFcnGrad.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/MinuitFcnGrad.cxx,1,['wrap'],['wrapped']
Integrability,"this version of the library. The default value is 15 if inflateInit is used; instead. windowBits must be greater than or equal to the windowBits value; provided to deflateInit2() while compressing, or it must be equal to 15 if; deflateInit2() was not used. If a compressed stream with a larger window; size is given as input, inflate() will return with the error code; Z_DATA_ERROR instead of trying to allocate a larger window. windowBits can also be -8..-15 for raw inflate. In this case, -windowBits; determines the window size. inflate() will then process raw deflate data,; not looking for a zlib or gzip header, not generating a check value, and not; looking for any check values for comparison at the end of the stream. This; is for use with other formats that use the deflate compressed data format; such as zip. Those formats provide their own check values. If a custom; format is developed using the raw deflate format for compressed data, it is; recommended that a check value such as an adler32 or a crc32 be applied to; the uncompressed data as is done in the zlib, gzip, and zip formats. For; most applications, the zlib format should be used as is. Note that comments; above on the use in deflateInit2() applies to the magnitude of windowBits. windowBits can also be greater than 15 for optional gzip decoding. Add; 32 to windowBits to enable zlib and gzip decoding with automatic header; detection, or add 16 to decode only the gzip format (the zlib format will; return a Z_DATA_ERROR). If a gzip stream is being decoded, strm->adler is; a crc32 instead of an adler32. inflateInit2 returns Z_OK if success, Z_MEM_ERROR if there was not enough; memory, Z_STREAM_ERROR if a parameter is invalid (such as a null strm). msg; is set to null if there is no error message. inflateInit2 does not perform; any decompression apart from reading the zlib header if present: this will; be done by inflate(). (So next_in and avail_in may be modified, but next_out; and avail_out are unchanged.); */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/zlib.h:3349,message,message,3349,graf2d/asimage/src/libAfterImage/zlib/zlib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/zlib.h,1,['message'],['message']
Integrability,"thods exist to fill a sparse matrix with data entries.; Most are the same like for dense matrices but some care has to be; taken with regard to performance. In the constructor, always the; shape of the matrix has to be specified in some form . Data can be; entered through the following methods :; 1. constructor from COO matrix format; ~~~; TMatrixTSparse(Int_t row_lwb,Int_t row_upb,Int_t dol_lwb,; Int_t col_upb,Int_t nr_nonzeros,; Int_t *row, Int_t *col,Element *data);; ~~~; It uses SetMatrixArray(..), see below; 2. constructor from Harwell-Boeing (CSR) matrix format; ~~~; TMatrixTSparse(Int_t row_lwb,Int_t row_upb,Int_t dol_lwb,; Int_t col_upb,; Int_t *rowptr, Int_t *col,Element *data);; ~~~; It copies input arrays into matrix .; 3. copy constructors; 4. SetMatrixArray(Int_t nr,Int_t *irow,Int_t *icol,Element *data); where it is expected that the irow,icol and data array contain; nr entries . Only the entries with non-zero data[i] value are; inserted. Be aware that the input data array will be modified; inside the routine for doing the necessary sorting of indices !; 5. SetMatrixArray(Int_t nr,Int_t nrows,Int_t ncols,Int_t *irow,; Int_t *icol,Element *data) where it is expected that the irow,; icol and data array contain nr entries . It allows to reshape; the matrix according to nrows and ncols. Only the entries with; non-zero data[i] value are inserted. Be aware that the input; data array will be modified inside the routine for doing the; necessary sorting of indices !; 6. TMatrixTSparse a(n,m); for(....) { a(i,j) = ....; This is a very flexible method but expensive :; - if no entry for slot (i,j) is found in the sparse index table; it will be entered, which involves some memory management !; - before invoking this method in a loop it is smart to first; set the index table through a call to SetSparseIndex(..); 7. SetSub(Int_t row_lwb,Int_t col_lwb,const TMatrixTBase &source); the matrix to be inserted at position (row_lwb,col_lwb) can be; both dense or sparse . */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/matrix/src/TMatrixTSparse.cxx:2613,rout,routine,2613,math/matrix/src/TMatrixTSparse.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/matrix/src/TMatrixTSparse.cxx,2,['rout'],['routine']
Integrability,"timisation of signal efficiency for given background; efficiency, applying rectangular minimum and maximum requirements. Also implemented is a ""decorrelate/diagonalized cuts approach"",; which improves over the uncorrelated cuts approach by; transforming linearly the input variables into a diagonal space,; using the square-root of the covariance matrix. Other optimisation criteria, such as maximising the signal significance-; squared, \f$ \frac{S^2}{(S+B)} \f$, with S and B being the signal and background yields,; correspond to a particular point in the optimised background rejection; versus signal efficiency curve. This working point requires the knowledge; of the expected yields, which is not the case in general. Note also that; for rare signals, Poissonian statistics should be used, which modifies; the significance criterion. The rectangular cut of a volume in the variable space is performed using; a binary tree to sort the training events. This provides a significant; reduction in computing time (up to several orders of magnitudes, depending; on the complexity of the problem at hand). Technically, optimisation is achieved in TMVA by two methods:. 1. Monte Carlo generation using uniform priors for the lower cut value,; and the cut width, thrown within the variable ranges. 2. A Genetic Algorithm (GA) searches for the optimal (""fittest"") cut sample.; The GA is configurable by many external settings through the option; string. For difficult cases (such as many variables), some tuning; may be necessary to achieve satisfying results. Attempts to use Minuit fits (Simplex ot Migrad) instead have not shown; superior results, and often failed due to convergence at local minima. The tests we have performed so far showed that in generic applications,; the GA is superior to MC sampling, and hence GA is the default method.; It is worthwhile trying both anyway. **Decorrelated (or ""diagonalized"") Cuts**. See class description for Method Likelihood for a detailed explanation.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodCuts.cxx:2334,depend,depending,2334,tmva/tmva/src/MethodCuts.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodCuts.cxx,1,['depend'],['depending']
Integrability,"ting. Int_t RooHypatia2::getAnalyticalIntegral(RooArgSet& allVars, RooArgSet& analVars, const char*) const; {; if (matchArgs(allVars, analVars, _x); && _beta == 0. && _beta.arg().isConstant(); && _zeta == 0. && _zeta.arg().isConstant(); && _lambda.max() < 0.) return 1;; return 0 ;; }. double RooHypatia2::analyticalIntegral(Int_t code, const char* rangeName) const; {; if (_beta != 0. || _zeta != 0. || _lambda >= 0) {; auto& logstream = coutF(Integration) << ""When the PDF "" << GetName(); << "" was constructed, beta,zeta were 0, lambda<0 and all three were constant.\n""; << ""This allowed for analytic integration, but now, numeric integration would be required.\n""; << ""These parameters must either be kept constant, or be floating from the beginning. ""; << "" Terminating fit ...""; << std::endl;; RooArgSet vars;; vars.add(_beta.arg());; vars.add(_zeta.arg());; vars.add(_lambda.arg());; vars.printStream(logstream, vars.defaultPrintContents(nullptr), RooPrintable::kVerbose);; throw std::runtime_error(""RooHypatia2 cannot be integrated analytically since parameters changed."");; }. // The formulae to follow still use beta and zeta to facilitate comparisons with the; // evaluate function. Since beta and zeta are zero, all relevant terms will be disabled; // by defining these two constexpr:; constexpr double beta = 0.;; constexpr double cons1 = 1.;. if (code != 1) {; throw std::logic_error(""Trying to compute analytic integral with unknown configuration."");; }. const double asigma = _a * _sigma;; const double a2sigma = _a2 * _sigma;; const double d0 = _x.min(rangeName) - _mu;; const double d1 = _x.max(rangeName) - _mu;. double delta;; if (_lambda <= -1.0) {; delta = _sigma * sqrt(-2. + -2.*_lambda);; }; else {; delta = _sigma;; }; const double deltaSq = delta*delta;. if ((d0 > -asigma) && (d1 < a2sigma)) {; return stIntegral(d1, delta, _lambda) - stIntegral(d0, delta, _lambda);; }. if (d0 > a2sigma) {; const double phi = 1. + a2sigma*a2sigma/deltaSq;; const double k1 = cons1*std::po",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitmore/src/RooHypatia2.cxx:1060,integrat,integrated,1060,roofit/roofitmore/src/RooHypatia2.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitmore/src/RooHypatia2.cxx,1,['integrat'],['integrated']
Integrability,"tion of the posterior function.; The integration and normalization of the posterior is computed using numerical integration methods provided by ROOT.; See the MCMCCalculator for model with multiple parameters of interest. The interface allows one to construct the class by passing the data set, probability density function for the model, the prior; functions and then the parameter of interest to scan. The nuisance parameters can also be passed to be marginalized when; computing the posterior. Alternatively, the class can be constructed by passing the data and the ModelConfig containing; all the needed information (model pdf, prior pdf, parameter of interest, nuisance parameters, etc..). After configuring the calculator, one only needs to ask GetInterval(), which; will return an SimpleInterval object. By default the extreme of the integral are obtained by inverting directly the; cumulative posterior distribution. By using the method SetScanOfPosterior(nbins) the interval is then obtained by; scanning the posterior function in the given number of points. The first method is in general faster but it requires an; integration one extra dimension ( in the poi in addition to the nuisance parameters), therefore in some case it can be; less robust. The class can also return the posterior function (method GetPosteriorFunction) or if needed the normalized; posterior function (the posterior pdf) (method GetPosteriorPdf). A posterior plot is also obtained using; the GetPosteriorPlot method. The class allows to use different integration methods for integrating in (marginalizing) the nuisances and in the poi. All the numerical; integration methods of ROOT can be used via the method SetIntegrationType (see more in the documentation of; this method). Calculator estimating a credible interval using the Bayesian procedure.; The calculator computes given the model the posterior distribution and estimates the; credible interval from the given function.; */; // include other header files",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/BayesianCalculator.cxx:2319,integrat,integration,2319,roofit/roostats/src/BayesianCalculator.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/BayesianCalculator.cxx,4,['integrat'],"['integrating', 'integration']"
Integrability,"tion.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // Place garbage collection safepoints at appropriate locations in the IR. This; // does not make relocation semantics or variable liveness explicit. That's; // done by RewriteStatepointsForGC.; //; // Terminology:; // - A call is said to be ""parseable"" if there is a stack map generated for the; // return PC of the call. A runtime can determine where values listed in the; // deopt arguments and (after RewriteStatepointsForGC) gc arguments are located; // on the stack when the code is suspended inside such a call. Every parse; // point is represented by a call wrapped in an gc.statepoint intrinsic.; // - A ""poll"" is an explicit check in the generated code to determine if the; // runtime needs the generated code to cooperate by calling a helper routine; // and thus suspending its execution at a known state. The call to the helper; // routine will be parseable. The (gc & runtime specific) logic of a poll is; // assumed to be provided in a function of the name ""gc.safepoint_poll"".; //; // We aim to insert polls such that running code can quickly be brought to a; // well defined state for inspection by the collector. In the current; // implementation, this is done via the insertion of poll sites at method entry; // and the backedge of most loops. We try to avoid inserting more polls than; // are necessary to ensure a finite period between poll sites. This is not; // because the poll itself is expensive in the generated code; it's not. Polls; // do tend to impact the optimizer itself in negative ways; we'd like to avoid; // perturbing the optimization of the method as much as we can.; //; // We also need to make most call sites parseable. The callee might execute a; // poll (or otherwise be inspected by the GC). If so, the entire stack; // (including the suspended frame of the current method) must be parseable.; //; /",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Scalar/PlaceSafepoints.h:1224,rout,routine,1224,interpreter/llvm-project/llvm/include/llvm/Transforms/Scalar/PlaceSafepoints.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Scalar/PlaceSafepoints.h,2,['rout'],['routine']
Integrability,"tionDatabase and; // attempts to heuristically determine appropriate compile commands for files; // that are not included, such as headers or newly created files.; //; // Motivating cases include:; // Header files that live next to their implementation files. These typically; // share a base filename. (libclang/CXString.h, libclang/CXString.cpp).; // Some projects separate headers from includes. Filenames still typically; // match, maybe other path segments too. (include/llvm/IR/Use.h, lib/IR/Use.cc).; // Matches are sometimes only approximate (Sema.h, SemaDecl.cpp). This goes; // for directories too (Support/Unix/Process.inc, lib/Support/Process.cpp).; // Even if we can't find a ""right"" compile command, even a random one from; // the project will tend to get important flags like -I and -x right.; //; // We ""borrow"" the compile command for the closest available file:; // - points are awarded if the filename matches (ignoring extension); // - points are awarded if the directory structure matches; // - ties are broken by length of path prefix match; //; // The compile command is adjusted, replacing the filename and removing output; // file arguments. The -x and -std flags may be affected too.; //; // Source language is a tricky issue: is it OK to use a .c file's command; // for building a .cc file? What language is a .h file in?; // - We only consider compile commands for c-family languages as candidates.; // - For files whose language is implied by the filename (e.g. .m, .hpp); // we prefer candidates from the same language.; // If we must cross languages, we drop any -x and -std flags.; // - For .h files, candidates from any c-family language are acceptable.; // We use the candidate's language, inserting e.g. -x c++-header.; //; // This class is only useful when wrapping databases that can enumerate all; // their compile commands. If getAllFilenames() is empty, no inference occurs.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Tooling/InterpolatingCompilationDatabase.cpp:2230,wrap,wrapping,2230,interpreter/llvm-project/clang/lib/Tooling/InterpolatingCompilationDatabase.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Tooling/InterpolatingCompilationDatabase.cpp,1,['wrap'],['wrapping']
Integrability,"tize for global observable values.; * Can be either:; * - `data`: to take the values from the dataset,; * falling back to the pdf value if a given global observable is not available.; * If no `GlobalObservables` or `GlobalObservablesTag` command argument is given, the set; * of global observables will be automatically defined to be the set stored in the data.; * - `model`: to take all values from the pdf and completely ignore the set of global observables stored in the data; * (not even using it to automatically define the set of global observables; * if the `GlobalObservables` or `GlobalObservablesTag` command arguments are not given).; * The default option is `data`.; * <tr><td> `GlobalObservablesTag(const char* tagName)` <td> Define the set of normalization observables to be used for the constraint terms by; * a string attribute associated with pdf observables that match the given tagName.; * <tr><td> `Verbose(bool flag)` <td> Controls RooFit informational messages in likelihood construction; * <tr><td> `CloneData(bool flag)` <td> Use clone of dataset in NLL (default is true).; * \warning Deprecated option that is ignored. It is up to the implementation of the NLL creation method if the data is cloned or not.; * <tr><td> `Offset(std::string const& mode)` <td> Likelihood offsetting mode. Can be either:; * <table>; * <tr><th> Mode <th> Description; * <tr><td> **none** - *default* <td> No offsetting.; * <tr><td> **initial** <td> Offset likelihood by initial value (so that starting value of FCN in minuit is zero).; * This can improve numeric stability in simultaneous fits with components with large likelihood values.; * <tr><td> **bin** <td> Offset likelihood bin-by-bin with a template histogram model based on the obersved data.; * This results in per-bin values that are all in the same order of magnitude, which reduces precision loss in the sum,; * which can drastically improve numeric stability.; * Furthermore, \f$2\cdot \text{NLL}\f$ defined like this is approximat",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx:7915,message,messages,7915,roofit/roofitcore/src/RooAbsPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx,1,['message'],['messages']
Integrability,"to be normalised). #### Normalization/Integration. Although the normalization of a PDF is an integral part of a; probability density function, normalization is treated separately; in RooAbsPdf. The reason is that a RooAbsPdf object is more than a; PDF: it can be a building block for a more complex composite PDF; if any of its variables are functions instead of variables. In; such cases, the normalization of the composite PDF may not simply be; integral over the dependents of the top-level PDF: these are; functions with potentially non-trivial Jacobian terms themselves.; \note Therefore, no explicit attempt should be made to normalize the; function output in evaluate(). In particular, normalisation constants; can be omitted to speed up the function evaluations, and included later; in the integration of the PDF (see below), which is rarely called in; comparison to the `evaluate()` function. In addition, RooAbsPdf objects do not have a static concept of what; variables are parameters, and what variables are dependents (which; need to be integrated over for a correct PDF normalization).; Instead, the choice of normalization is always specified each time a; normalized value is requested from the PDF via the getVal(); method. RooAbsPdf manages the entire normalization logic of each PDF with; the help of a RooRealIntegral object, which coordinates the integration; of a given choice of normalization. By default, RooRealIntegral will; perform an entirely numeric integration of all dependents. However,; PDFs can advertise one or more (partial) analytical integrals of; their function, and these will be used by RooRealIntegral, if it; determines that this is safe (i.e., no hidden Jacobian terms,; multiplication with other PDFs that have one or more dependents in; common, etc). #### Implementing analytical integrals; To implement analytical integrals, two functions must be implemented. First,. ```; Int_t getAnalyticalIntegral(const RooArgSet& integSet, RooArgSet& anaIntSet); ```",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx:2369,depend,dependents,2369,roofit/roofitcore/src/RooAbsPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx,2,"['depend', 'integrat']","['dependents', 'integrated']"
Integrability,"to machine operations.; /// The expectation is that the loop contains three pseudo instructions:; /// - t2*LoopStart - placed in the preheader or pre-preheader. The do-loop; /// form should be in the preheader, whereas the while form should be in the; /// preheaders only predecessor.; /// - t2LoopDec - placed within in the loop body.; /// - t2LoopEnd - the loop latch terminator.; ///; /// In addition to this, we also look for the presence of the VCTP instruction,; /// which determines whether we can generated the tail-predicated low-overhead; /// loop form.; ///; /// Assumptions and Dependencies:; /// Low-overhead loops are constructed and executed using a setup instruction:; /// DLS, WLS, DLSTP or WLSTP and an instruction that loops back: LE or LETP.; /// WLS(TP) and LE(TP) are branching instructions with a (large) limited range; /// but fixed polarity: WLS can only branch forwards and LE can only branch; /// backwards. These restrictions mean that this pass is dependent upon block; /// layout and block sizes, which is why it's the last pass to run. The same is; /// true for ConstantIslands, but this pass does not increase the size of the; /// basic blocks, nor does it change the CFG. Instructions are mainly removed; /// during the transform and pseudo instructions are replaced by real ones. In; /// some cases, when we have to revert to a 'normal' loop, we have to introduce; /// multiple instructions for a single pseudo (see RevertWhile and; /// RevertLoopEnd). To handle this situation, t2WhileLoopStartLR and t2LoopEnd; /// are defined to be as large as this maximum sequence of replacement; /// instructions.; ///; /// A note on VPR.P0 (the lane mask):; /// VPT, VCMP, VPNOT and VCTP won't overwrite VPR.P0 when they update it in a; /// ""VPT Active"" context (which includes low-overhead loops and vpt blocks).; /// They will simply ""and"" the result of their calculation with the current; /// value of VPR.P0. You can think of it like this:; /// \verbatim; /// if VPT activ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMLowOverheadLoops.cpp:1458,depend,dependent,1458,interpreter/llvm-project/llvm/lib/Target/ARM/ARMLowOverheadLoops.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMLowOverheadLoops.cpp,1,['depend'],['dependent']
Integrability,"to the entry numbers in the input dataset (e.g. TChain) in multi-thread runs. \warning By default, RDataFrame will use as many threads as the hardware supports, using up **all** the resources on; a machine. This might be undesirable on shared computing resources such as a batch cluster. Therefore, when running on shared computing resources, use; ~~~{.cpp}; ROOT::EnableImplicitMT(i); ~~~; replacing `i` with the number of CPUs/slots that were allocated for this job. ### Thread-safety of user-defined expressions; RDataFrame operations such as Histo1D() or Snapshot() are guaranteed to work correctly in multi-thread event loops.; User-defined expressions, such as strings or lambdas passed to Filter(), Define(), Foreach(), Reduce() or Aggregate(); will have to be thread-safe, i.e. it should be possible to call them concurrently from different threads. Note that simple Filter() and Define() transformations will inherently satisfy this requirement: Filter() / Define(); expressions will often be *pure* in the functional programming sense (no side-effects, no dependency on external state),; which eliminates all risks of race conditions. In order to facilitate writing of thread-safe operations, some RDataFrame features such as Foreach(), Define() or \link ROOT::RDF::RResultPtr::OnPartialResult OnPartialResult()\endlink; offer thread-aware counterparts (ForeachSlot(), DefineSlot(), \link ROOT::RDF::RResultPtr::OnPartialResultSlot OnPartialResultSlot()\endlink): their only difference is that they; will pass an extra `slot` argument (an unsigned integer) to the user-defined expression. When calling user-defined code; concurrently, RDataFrame guarantees that different threads will employ different values of the `slot` parameter,; where `slot` will be a number between 0 and `GetNSlots() - 1`.; In other words, within a slot, computation runs sequentially and events are processed sequentially.; Note that the same slot might be associated to different threads over the course of a singl",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx:49006,depend,dependency,49006,tree/dataframe/src/RDataFrame.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx,1,['depend'],['dependency']
Integrability,"tors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; ////////////////////////////////////////////////////////////////////////////////; //; // TSQLStatement; //; // Abstract base class defining SQL statements, which can be submitted; // in bulk to DB server.; //; // This is alternative to TSQLServer::Query() method, which allows only pure; // text queries and pure text result in TSQLResult classes.; // TSQLStatement is designed to support following features:; // - usage of basic data types (like int or double) as parameters; // in SQL statements; // - bulk operation when inserting/updating/selecting data in database; // - uasge of basic data types when accessing result set of executed query; //; //; // 1. Creation of statement; // ======================================; // To create an instance of the TSQLStatement class, the TSQLServer::Statement() method; // should be used. Depending on the driver used for an ODBC connection,; // the appropriate object instance will be created. For the moment there are; // six different implementations of the TSQLStatement class: for MySQL,; // Oracle, PostgreSQL, SQLite3 and ODBC. Hopefully, support of ODBC will allow usage of; // statements for most existing RDBMS.; //; // // first, connect to the database; // TSQLServer* serv = TSQLServer::Connect(""mysql://hostname.domain:3306/test"",; // ""user"", ""pass"");; // // check if connection is ok; // if ((serv!=0) && serv->IsConnected()) {; // // create instance of sql-statement; // TSQLStatement* stmt = serv->Statement(""CREATE TABLE TESTTABLE (ID1 INT, ID2 INT, FFIELD VARCHAR(255), FVALUE VARCHAR(255))"";; // // process statement; // stmt->Process();; // // destroy object; // delete stmt;; // }; // delete serv;; //; //; // 2. Insert data to data base; // ===============================================; // There is a special syntax of SQL queries which allows to use values; // provided as parameters. For instance, to insert one ro",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TSQLStatement.cxx:1250,Depend,Depending,1250,net/net/src/TSQLStatement.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TSQLStatement.cxx,1,['Depend'],['Depending']
Integrability,"tput will be discarded, instead; * of going to the same location as the parent's standard output.; * %G_SPAWN_STDERR_TO_DEV_NULL means that the child's standard error; * will be discarded. %G_SPAWN_CHILD_INHERITS_STDIN means that; * the child will inherit the parent's standard input (by default,; * the child's standard input is attached to /dev/null).; *; * @child_setup and @user_data are a function and user data to be; * called in the child after GLib has performed all the setup it plans; * to perform (including creating pipes, closing file descriptors,; * etc.) but before calling exec(). That is, @child_setup is called; * just before calling exec() in the child. Obviously actions taken in; * this function will only affect the child, not the parent. ; *; * If non-NULL, @child_pid will be filled with the child's process; * ID. You can use the process ID to send signals to the child, or; * to waitpid() if you specified the %G_SPAWN_DO_NOT_REAP_CHILD flag.; *; * If non-NULL, the @standard_input, @standard_output, @standard_error; * locations will be filled with file descriptors for writing to the child's; * standard input or reading from its standard output or standard error.; * The caller of g_spawn_async_with_pipes() must close these file descriptors; * when they are no longer in use. If these parameters are NULL, the; * corresponding pipe won't be created.; *; * @error can be NULL to ignore errors, or non-NULL to report errors.; * If an error is set, the function returns FALSE. Errors; * are reported even if they occur in the child (for example if the; * executable in <literal>argv[0]</literal> is not found). Typically; * the <literal>message</literal> field of returned errors should be displayed; * to users. Possible errors are those from the #G_SPAWN_ERROR domain.; *; * If an error occurs, @child_pid, @standard_input, @standard_output,; * and @standard_error will not be filled with valid values.; * ; * Return value: TRUE on success, FALSE if an error was set; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gspawn-win32.c:3848,message,message,3848,graf2d/win32gdk/gdk/src/glib/gspawn-win32.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gspawn-win32.c,1,['message'],['message']
Integrability,"ttleneck analysis report for a dot-product on X86 btver2:; ///; /// Cycles with backend pressure increase [ 40.76% ]; /// Throughput Bottlenecks: ; /// Resource Pressure [ 39.34% ]; /// - JFPA [ 39.34% ]; /// - JFPU0 [ 39.34% ]; /// Data Dependencies: [ 1.42% ]; /// - Register Dependencies [ 1.42% ]; /// - Memory Dependencies [ 0.00% ]; ///; /// According to the example, backend pressure increased during the 40.76% of; /// the simulated cycles. In particular, the major cause of backend pressure; /// increases was the contention on floating point adder JFPA accessible from; /// pipeline resource JFPU0.; ///; /// At the end of each cycle, if pressure on the simulated out-of-order buffers; /// has increased, a backend pressure event is reported.; /// In particular, this occurs when there is a delta between the number of uOps; /// dispatched and the number of uOps issued to the underlying pipelines.; ///; /// The bottleneck analysis view is also responsible for identifying and; /// printing the most ""critical"" sequence of dependent instructions according to; /// the simulated run.; ///; /// Below is the critical sequence computed for the dot-product example on; /// btver2:; ///; /// Instruction Dependency Information; /// +----< 2. vhaddps %xmm3, %xmm3, %xmm4; /// |; /// | < loop carried > ; /// |; /// | 0. vmulps	 %xmm0, %xmm0, %xmm2; /// +----> 1. vhaddps %xmm2, %xmm2, %xmm3 ## RESOURCE interference: JFPA [ probability: 73% ]; /// +----> 2. vhaddps %xmm3, %xmm3, %xmm4 ## REGISTER dependency: %xmm3; /// |; /// | < loop carried > ; /// |; /// +----> 1. vhaddps %xmm2, %xmm2, %xmm3 ## RESOURCE interference: JFPA [ probability: 73% ]; ///; ///; /// The algorithm that computes the critical sequence is very similar to a; /// critical path analysis.; /// ; /// A dependency graph is used internally to track dependencies between nodes.; /// Nodes of the graph represent instructions from the input assembly sequence,; /// and edges of the graph represent data dependencies or proce",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-mca/Views/BottleneckAnalysis.h:1671,depend,dependent,1671,interpreter/llvm-project/llvm/tools/llvm-mca/Views/BottleneckAnalysis.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-mca/Views/BottleneckAnalysis.h,1,['depend'],['dependent']
Integrability,"turn RooFitResult with fit status and parameters if option Save() is used, `nullptr` otherwise. The user takes ownership of the fit result.; *; * @tparam CmdArgs_t Template types for optional command arguments.; * Can either be an arbitrary number of RooCmdArg or a single RooLinkedList.; *; * \note This front-end function should not be re-implemented in derived PDF types.; * If you mean to customize the likelihood fitting routine,; * you need to override the virtual RooAbsPdf::fitToImpl() method.; *; * The following named arguments are supported:; *; * <table>; * <tr><th> Type of CmdArg <th> Options to control construction of -log(L); * <tr><td> <td> All command arguments that can also be passed to the NLL creation method.; * \see RooAbsPdf::createNLL(); *; * <tr><th><th> Options to control flow of fit procedure; * <tr><td> `Minimizer(""<type>"", ""<algo>"")` <td> Choose minimization package and optionally the algorithm to use. Default is MINUIT/MIGRAD through the RooMinimizer interface,; * but others can be specified (through RooMinimizer interface).; * <table>; * <tr><th> Type <th> Algorithm; * <tr><td> Minuit <td> migrad, simplex, minimize (=migrad+simplex), migradimproved (=migrad+improve); * <tr><td> Minuit2 <td> migrad, simplex, minimize, scan; * <tr><td> GSLMultiMin <td> conjugatefr, conjugatepr, bfgs, bfgs2, steepestdescent; * <tr><td> GSLSimAn <td> -; * </table>; *; * <tr><td> `InitialHesse(bool flag)` <td> Flag controls if HESSE before MIGRAD as well, off by default; * <tr><td> `Optimize(bool flag)` <td> Activate constant term optimization of test statistic during minimization (on by default); * <tr><td> `Hesse(bool flag)` <td> Flag controls if HESSE is run after MIGRAD, on by default; * <tr><td> `Minos(bool flag)` <td> Flag controls if MINOS is run after HESSE, off by default; * <tr><td> `Minos(const RooArgSet& set)` <td> Only run MINOS on given subset of arguments; * <tr><td> `Save(bool flag)` <td> Flag controls if RooFitResult object is produced and returne",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx:1661,interface,interface,1661,roofit/roofitcore/src/RooAbsPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx,2,['interface'],['interface']
Integrability,"ty function call; // In WebAssembly EH, the VM is responsible for unwinding the stack once an; // exception is thrown. After the stack is unwound, the control flow is; // transfered to WebAssembly 'catch' instruction.; //; // Unwinding the stack is not done by libunwind but the VM, so the personality; // function in libcxxabi cannot be called from libunwind during the unwinding; // process. So after a catch instruction, we insert a call to a wrapper function; // in libunwind that in turn calls the real personality function.; //; // In Itanium EH, if the personality function decides there is no matching catch; // clause in a call frame and no cleanup action to perform, the unwinder doesn't; // stop there and continues unwinding. But in Wasm EH, the unwinder stops at; // every call frame with a catch intruction, after which the personality; // function is called from the compiler-generated user code here.; //; // In libunwind, we have this struct that serves as a communincation channel; // between the compiler-generated user code and the personality function in; // libcxxabi.; //; // struct _Unwind_LandingPadContext {; // uintptr_t lpad_index;; // uintptr_t lsda;; // uintptr_t selector;; // };; // struct _Unwind_LandingPadContext __wasm_lpad_context = ...;; //; // And this wrapper in libunwind calls the personality function.; //; // _Unwind_Reason_Code _Unwind_CallPersonality(void *exception_ptr) {; // struct _Unwind_Exception *exception_obj =; // (struct _Unwind_Exception *)exception_ptr;; // _Unwind_Reason_Code ret = __gxx_personality_v0(; // 1, _UA_CLEANUP_PHASE, exception_obj->exception_class, exception_obj,; // (struct _Unwind_Context *)__wasm_lpad_context);; // return ret;; // }; //; // We pass a landing pad index, and the address of LSDA for the current function; // to the wrapper function _Unwind_CallPersonality in libunwind, and we retrieve; // the selector after it returns.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/WasmEHPrepare.cpp:2544,wrap,wrapper,2544,interpreter/llvm-project/llvm/lib/CodeGen/WasmEHPrepare.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/WasmEHPrepare.cpp,2,['wrap'],['wrapper']
Integrability,"uadp:$Id$; // Author: Eddy Offermann May 2004; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /*************************************************************************; * Parts of this file are copied from the OOQP distribution and *; * are subject to the following license: *; * *; * COPYRIGHT 2001 UNIVERSITY OF CHICAGO *; * *; * The copyright holder hereby grants you royalty-free rights to use, *; * reproduce, prepare derivative works, and to redistribute this software*; * to others, provided that any changes are clearly documented. This *; * software was authored by: *; * *; * E. MICHAEL GERTZ gertz@mcs.anl.gov *; * Mathematics and Computer Science Division *; * Argonne National Laboratory *; * 9700 S. Cass Avenue *; * Argonne, IL 60439-4844 *; * *; * STEPHEN J. WRIGHT swright@cs.wisc.edu *; * Computer Sciences Department *; * University of Wisconsin *; * 1210 West Dayton Street *; * Madison, WI 53706 FAX: (608)262-9777 *; * *; * Any questions or comments may be directed to one of the authors. *; * *; * ARGONNE NATIONAL LABORATORY (ANL), WITH FACILITIES IN THE STATES OF *; * ILLINOIS AND IDAHO, IS OWNED BY THE UNITED STATES GOVERNMENT, AND *; * OPERATED BY THE UNIVERSITY OF CHICAGO UNDER PROVISION OF A CONTRACT *; * WITH THE DEPARTMENT OF ENERGY. *; *************************************************************************/; ////////////////////////////////////////////////////////////////////////////////; ///; /// \class TGondzioSolver; ///; /// Derived class of TQpSolverBase implementing Gondzio-correction; /// version of Mehrotra's original predictor-corrector algorithm.; ///; ////////////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/quadp/src/TGondzioSolver.cxx:1549,CONTRACT,CONTRACT,1549,math/quadp/src/TGondzioSolver.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/quadp/src/TGondzioSolver.cxx,1,['CONTRACT'],['CONTRACT']
Integrability,"uilt with `mathmore` support; - BFGS2 (Default); - BFGS; - ConjugateFR; - ConjugatePR; - SteepestDescent. - GSLMultiFit (class ROOT::Math::GSLNLMinimizer) available when ROOT is built `mathmore` support. - GSLSimAn (class ROOT::Math::GSLSimAnMinimizer) available when ROOT is built with `mathmore` support. - Genetic (class ROOT::Math::GeneticMinimizer). - RMinimizer (class ROOT::Math::RMinimizer) available when ROOT is built with `r` support; - BFGS (default); - L-BFGS-S; - Nelder-Mead; - CG; - and more methods, see the Details in the documentation of the function `optimix` of the [optmix R package](https://cran.r-project.org/web/packages/optimx/optimx.pdf). The Minimizer class provides the interface to perform the minimization including. In addition to provide the API for function minimization (via ROOT::Math::Minimizer::Minimize) the Minimizer class provides:; - the interface for setting the function to be minimized. The objective function passed to the Minimizer must implement the multi-dimensional generic interface; ROOT::Math::IBaseFunctionMultiDim. If the function provides gradient calculation (e.g. implementing the ROOT::Math::IGradientFunctionMultiDim interface); the gradient will be used by the Minimizer class, when needed. There are convenient classes for the users to wrap their own functions in this required interface for minimization.; These are the `ROOT::Math::Functor` class and the `ROOT::Math::GradFunctor` class for wrapping functions providing both evaluation and gradient. Some methods, like Fumili, Fumili2 and GSLMultiFit are; specialized method for least-square and also likelihood minimizations. They require then that the given function implements in addition; the `ROOT::Math::FitMethodFunction` interface.; - The interface for setting the initial values for the function variables (which are the parameters in; of the model function in case of solving for fitting) and specifying their limits.; - The interface to set and retrieve basic minimization pa",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Minimizer.h:2353,interface,interface,2353,math/mathcore/inc/Math/Minimizer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Minimizer.h,1,['interface'],['interface']
Integrability,"uld have received a copy of the GNU Library General Public; * License along with this library; if not, write to the; * Free Software Foundation, Inc., 59 Temple Place - Suite 330,; * Boston, MA 02111-1307, USA.; */; /* Color Context module; * Copyright 1994,1995 John L. Cwikla; * Copyright (C) 1997 by Ripley Software Development; * Copyright (C) 1997 by Federico Mena (port to Gtk/Gdk); */; /* Copyright 1994,1995 John L. Cwikla; *; * Permission to use, copy, modify, distribute, and sell this software; * and its documentation for any purpose is hereby granted without fee,; * provided that the above copyright notice appears in all copies and that; * both that copyright notice and this permission notice appear in; * supporting documentation, and that the name of John L. Cwikla or; * Wolfram Research, Inc not be used in advertising or publicity; * pertaining to distribution of the software without specific, written; * prior permission. John L. Cwikla and Wolfram Research, Inc make no; * representations about the suitability of this software for any; * purpose. It is provided ""as is"" without express or implied warranty.; *; * John L. Cwikla and Wolfram Research, Inc disclaim all warranties with; * regard to this software, including all implied warranties of; * merchantability and fitness, in no event shall John L. Cwikla or; * Wolfram Research, Inc be liable for any special, indirect or; * consequential damages or any damages whatsoever resulting from loss of; * use, data or profits, whether in an action of contract, negligence or; * other tortious action, arising out of or in connection with the use or; * performance of this software.; *; * Author:; * John L. Cwikla; * X Programmer; * Wolfram Research Inc.; *; * cwikla@wri.com; */; /*; * Modified by the GTK+ Team and others 1997-1999. See the AUTHORS; * file for a list of people on the GTK+ Team. See the ChangeLog; * files for a list of changes. These files are distributed with; * GTK+ at ftp://ftp.gtk.org/pub/gtk/. ; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/win32/gdkcc-win32.c:2165,contract,contract,2165,graf2d/win32gdk/gdk/src/gdk/win32/gdkcc-win32.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/win32/gdkcc-win32.c,1,['contract'],['contract']
Integrability,"umeric convolution of two PDFs,; /// and can convolve any two RooAbsPdfs. The class exploits the convolution theorem; /// \f[; /// f(x) * g(x) \rightarrow F(k_i) \cdot G(k_i); /// \f]; /// to calculate the convolution by calculating a Real->Complex FFT of both input PDFs,; /// multiplying the complex coefficients and performing the reverse Complex->Real FFT; /// to get the result in the input space. This class uses the ROOT FFT interface to; /// the (free) FFTW3 package (www.fftw.org), and requires that your ROOT installation is; /// compiled with the `fftw3=ON` (default). Instructions for manually installing fftw below.; ///; /// Note that the performance in terms of speed and stability of RooFFTConvPdf is; /// vastly superior to that of RooNumConvPdf.; ///; /// An important feature of FFT convolutions is that the observable is assumed to be; /// cyclical. This is correct for cyclical observables such as angles,; /// but does not hold in general. For non-cyclical variables, wrap-around artifacts may be; /// encountered, *e.g.* if the PDF is zero at xMin and non-zero at xMax. A rising tail may appear at xMin.; /// This is inevitable when using FFTs. A distribution with 3 bins therefore looks like:; /// ```; /// ... 0 1 2 0 1 2 0 1 2 ...; /// ```; ///; /// Therefore, if bins 0 and 2 are not equal, the FFT sees a cyclical function with a step at the 2|0 boundary, which causes; /// artifacts in Fourier space.; ///; /// The spillover or discontinuity can be reduced or eliminated by; /// introducing a buffer zone in the FFT calculation. If this feature is activated (on by default),; /// the sampling array for the FFT calculation is extended in both directions,; /// and padded with the lowest/highest bin.; /// Example:; /// ```; /// original: -5 -4 -3 -2 -1 0 +1 +2 +3 +4 +5; /// add buffer zones: U U -5 -4 -3 -2 -1 0 +1 +2 +3 +4 +5 O O; /// rotate: 0 +1 +2 +3 +4 +5 O O U U -5 -4 -3 -2 -1; /// ```; /// The buffer bins are stripped away when the FFT output values; /// are tr",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFFTConvPdf.cxx:1686,wrap,wrap-around,1686,roofit/roofitcore/src/RooFFTConvPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFFTConvPdf.cxx,1,['wrap'],['wrap-around']
Integrability,"utor allows to query in-flight abstract; // attributes through the `Attributor::getAAFor` method (see the method; // description for an example). If the method is used by an abstract attribute; // P, and it results in an abstract attribute Q, the Attributor will; // automatically capture a potential dependence from Q to P. This dependence; // will cause P to be reevaluated whenever Q changes in the future.; //; // The Attributor will only reevaluate abstract attributes that might have; // changed since the last iteration. That means that the Attribute will not; // revisit all instructions/blocks/functions in the module but only query; // an update from a subset of the abstract attributes.; //; // The update method `AbstractAttribute::updateImpl` is implemented by the; // specific ""abstract attribute"" subclasses. The method is invoked whenever the; // currently assumed state (see the AbstractState class) might not be valid; // anymore. This can, for example, happen if the state was dependent on another; // abstract attribute that changed. In every invocation, the update method has; // to adjust the internal state of an abstract attribute to a point that is; // justifiable by the underlying IR and the current state of abstract attributes; // in-flight. Since the IR is given and assumed to be valid, the information; // derived from it can be assumed to hold. However, information derived from; // other abstract attributes is conditional on various things. If the justifying; // state changed, the `updateImpl` has to revisit the situation and potentially; // find another justification or limit the optimistic assumes made.; //; // Change is the key in this framework. Until a state of no-change, thus a; // fixpoint, is reached, the Attributor will query the abstract attributes; // in-flight to re-evaluate their state. If the (current) state is too; // optimistic, hence it cannot be justified anymore through other abstract; // attributes or the state of the IR, the state of t",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h:2416,depend,dependent,2416,interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h,1,['depend'],['dependent']
Integrability,"veraged (integrated) over the entire bin. This is; * correct only if the second derivative of the function vanishes, though. This is shown in the plots; * below.; *; * For PDFs that have larger curvatures, the RooBinSamplingPdf can be used. It integrates the PDF in each; * bin using an adaptive integrator. This usually requires 21 times more function evaluations, but significantly; * reduces biases due to better sampling of the PDF. The integrator can be accessed from the outside; * using integrator(). This can be used to change the integration rules, so less/more function evaluations are; * performed. The target precision of the integrator can be set in the constructor.; *; *; * ### How to use it; * There are two ways to use this class:; * - Manually wrap a PDF:; * ```; * RooBinSamplingPdf binSampler(""<name>"", ""title"", <binned observable of PDF>, <original PDF> [, <precision for integrator>]);; * binSampler.fitTo(data);; * ```; * When a PDF is wrapped with a RooBinSamplingPDF, just use the bin sampling PDF instead of the original one for fits; * or plotting etc.; * \note The binning will be taken from the observable. Make sure that this binning is the same as the one of the dataset that should be fit.; * Use RooRealVar::setBinning() to adapt it.; * - Instruct test statistics to carry out this wrapping automatically:; * ```; * pdf.fitTo(data, IntegrateBins(<precision>));; * ```; * This method is especially useful when used with a simultaneous PDF, since each component will automatically be wrapped,; * depending on the value of `precision`:; * - `precision < 0.`: None of the PDFs are touched, bin sampling is off.; * - `precision = 0.`: Continuous PDFs that are fit to a RooDataHist are wrapped into a RooBinSamplingPdf. The target precision; * forwarded to the integrator is 1.E-4 (the default argument of the constructor).; * - `precision > 0.`: All continuous PDFs are automatically wrapped into a RooBinSamplingPdf, regardless of what data they are; * fit to (see next pa",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooBinSamplingPdf.cxx:1977,wrap,wrapped,1977,roofit/roofitcore/src/RooBinSamplingPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooBinSamplingPdf.cxx,1,['wrap'],['wrapped']
Integrability,"very fast; * averaging/interpolation code. That brings us to the issue of 8 bits; * per channel. Add two pixels together and you get overflow. So all the; * math has to be performed in different colorspace and then converted; * back. On the other side, such a conversion may discard valuable bits,; * so some compensation method has to be implemented.; *; * On the text drawing side of things, there are numerous problems just; * as well. Native X fonts look ugly as soon as you try to show any; * decently sized text. That is supposed to be solved with said Render; * extensions to XFree86, but as experiense has shown, things aren't as; * easy as it looks, besides one wants one's app to run well under any X; * Server. FreeType library provides a solution, but not always; * available. Another problem is that if you keep all your images on the; * client side, you want to draw text on client side as well.; *; * The solution is to provide transparent interface that could use both; * X fonts and FreeType, cache glyphs on the client side and possibly; * perform smoothing of ugly X fonts.; *; * There is no library solving all this problems in one fell swoop,; * except for monstrous ones, like ImLib.; *; * Hence libAfterImage has come to life.; *; * DESCRIPTION; * libAfterStep provides sevarl facilities.; *; * 1. X Visual abstruction layer via ASVisual. This layer handles color; * management, transfer of data to and from X Server, and other screen; * related stuff.; *; * 2. Scanline handling facility via ASScanline. ASScanline is the most; * widely used structure since image handling is implemented on; * per-scanline basis.; *; * 3. Image storage, trasformation and rendering via ASImage. ASImage; * provides for generic container used for any image or text; * manipulation. It incorporates such a robust facilities as in-memory; * RLE compression, separate channel storage of 4 channels ( Alpha, Red,; * Green, and Blue ) with 8 bit per channel.; *; * 4. Simplified font handling facili",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/afterimage.h:2880,interface,interface,2880,graf2d/asimage/src/libAfterImage/afterimage.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/afterimage.h,1,['interface'],['interface']
Integrability,"view //; // area. //; // //; // Executing Macros //; // //; // You can execute the currently loaded macro in the editor by //; // selecting Tools menu / Execute Macro; by clicking on the //; // corresponding toolbar button, or by using Ctrl+F5 accelerator keys. //; // This is identical to the command "".x macro.C"" in the root prompt //; // command line. //; // //; // Compiling Macros //; // //; // The currently loaded macro can be compiled with ACLiC if you select //; // Tools menu / Compile Macro; by clicking on the corresponding //; // toolbar button, or by using Ctrl+F7 accelerator keys. //; // This is identical to the command "".L macro.C++"" in the root prompt //; // command line. //; // //; // Interrupting a Running Macro //; // //; // You can interrupt a running macro by selecting the Tools menu / //; // Interrupt; by clicking on the corresponding toolbar button, or by //; // using Shift+F5 accelerator keys. //; // //; // Interface to CINT Interpreter //; // //; // Any command entered in the Command combo box will be passed to //; // the CINT interpreter. This combo box will keep the commands history //; // and will allow you to re-execute the same commands during an editor //; // session. //; // //; // Keyboard Bindings //; // //; // The following table lists the keyboard shortcuts and accelerator //; // keys. //; // //; // Key: Action: //; // ==== ======= //; // //; // Up Move cursor up. //; // Shift+Up Move cursor up and extend selection. //; // Down Move cursor down. //; // Shift+Down Move cursor down and extend selection. //; // Left Move cursor left. //; // Shift+Left Move cursor left and extend selection. //; // Right Move cursor right. //; // Shift+Right Move cursor right and extend selection. //; // Home Move cursor to begin of line. //; // Shift+Home Move cursor to begin of line and extend selection.//; // Ctrl+Home Move cursor to top of page. //; // End Move cursor to end of line. //; // Shift+End Move cursor to end of line and extend selection. //; /",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/RootIDE/TGRootIDE.cxx:3925,Interface,Interface,3925,test/RootIDE/TGRootIDE.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/RootIDE/TGRootIDE.cxx,1,['Interface'],['Interface']
Integrability,"ways flushes as much output as; possible to the output buffer, and always uses the faster approach on the; first call. So the effects of the flush parameter in this implementation are; on the return value of inflate() as noted below, when inflate() returns early; when Z_BLOCK or Z_TREES is used, and when inflate() avoids the allocation of; memory for a sliding window when Z_FINISH is used. If a preset dictionary is needed after this call (see inflateSetDictionary; below), inflate sets strm->adler to the Adler-32 checksum of the dictionary; chosen by the compressor and returns Z_NEED_DICT; otherwise it sets; strm->adler to the Adler-32 checksum of all output produced so far (that is,; total_out bytes) and returns Z_OK, Z_STREAM_END or an error code as described; below. At the end of the stream, inflate() checks that its computed adler32; checksum is equal to that saved by the compressor and returns Z_STREAM_END; only if the checksum is correct. inflate() can decompress and check either zlib-wrapped or gzip-wrapped; deflate data. The header type is detected automatically, if requested when; initializing with inflateInit2(). Any information contained in the gzip; header is not retained, so applications that need that information should; instead use raw inflate, see inflateInit2() below, or inflateBack() and; perform their own processing of the gzip header and trailer. When processing; gzip-wrapped deflate data, strm->adler32 is set to the CRC-32 of the output; producted so far. The CRC-32 is checked against the gzip trailer. inflate() returns Z_OK if some progress has been made (more input processed; or more output produced), Z_STREAM_END if the end of the compressed data has; been reached and all uncompressed output has been produced, Z_NEED_DICT if a; preset dictionary is needed at this point, Z_DATA_ERROR if the input data was; corrupted (input stream not conforming to the zlib format or incorrect check; value), Z_STREAM_ERROR if the stream structure was inconsisten",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:5465,wrap,wrapped,5465,builtins/zlib/zlib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h,2,['wrap'],['wrapped']
Integrability,"ximum likelihood is performed.; * If the dataset is binned, a binned maximum likelihood is performed.; * By default the fit is executed through the MINUIT commands MIGRAD, HESSE in succession.; *; * @param data Reference to a RooAbsData object representing the dataset.; * @param cmdArgs Variadic template arguments representing optional command arguments.; * You can pass either an arbitrary number of RooCmdArg instances; * or a single RooLinkedList that points to the RooCmdArg objects.; * @return An owning pointer to the created RooAbsReal NLL object.; * @return RooFitResult with fit status and parameters if option Save() is used, `nullptr` otherwise. The user takes ownership of the fit result.; *; * @tparam CmdArgs_t Template types for optional command arguments.; * Can either be an arbitrary number of RooCmdArg or a single RooLinkedList.; *; * \note This front-end function should not be re-implemented in derived PDF types.; * If you mean to customize the likelihood fitting routine,; * you need to override the virtual RooAbsPdf::fitToImpl() method.; *; * The following named arguments are supported:; *; * <table>; * <tr><th> Type of CmdArg <th> Options to control construction of -log(L); * <tr><td> <td> All command arguments that can also be passed to the NLL creation method.; * \see RooAbsPdf::createNLL(); *; * <tr><th><th> Options to control flow of fit procedure; * <tr><td> `Minimizer(""<type>"", ""<algo>"")` <td> Choose minimization package and optionally the algorithm to use. Default is MINUIT/MIGRAD through the RooMinimizer interface,; * but others can be specified (through RooMinimizer interface).; * <table>; * <tr><th> Type <th> Algorithm; * <tr><td> Minuit <td> migrad, simplex, minimize (=migrad+simplex), migradimproved (=migrad+improve); * <tr><td> Minuit2 <td> migrad, simplex, minimize, scan; * <tr><td> GSLMultiMin <td> conjugatefr, conjugatepr, bfgs, bfgs2, steepestdescent; * <tr><td> GSLSimAn <td> -; * </table>; *; * <tr><td> `InitialHesse(bool flag)` <td> Fl",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx:1099,rout,routine,1099,roofit/roofitcore/src/RooAbsPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx,1,['rout'],['routine']
Integrability,"y and OS scheduling. Due to its implementation, the; * poll call can also return early if the remote end of the page sends; * a free page while polling (which is put on that pipe's freelist),; * while that pipe is polled for e.g Reading. The status of the pipe is; * indicated correctly in revents, and the caller can simply poll; * again. (The reason this is done this way is because it helps to; * replenish the pool of free pages and queue busy pages without; * blocking.); *; * Here's a piece of example code waiting on two pipes; if they become; * readable they are read:; * @code; * #include <unistd.h>; * #include <cstdlib>; * #include <string>; * #include <sstream>; * #include <iostream>; *; * #include ""BidirMMapPipe.h""; *; * // what to execute in the child; * int randomchild(BidirMMapPipe& pipe); * {; * ::srand48(::getpid());; * for (int i = 0; i < 5; ++i) {; * // sleep a random time between 0 and .9 seconds; * ::usleep(int(1e6 * ::drand48()));; * std::ostringstream buf;; * buf << ""child pid "" << ::getpid() << "" sends message "" << i;; * std::cout << ""[CHILD] : "" << buf.str() << std::endl;; * pipe << buf.str() << BidirMMapPipe::flush;; * if (!pipe) return -1;; * if (pipe.eof()) break;; * }; * // tell parent we're done; * pipe << """" << BidirMMapPipe::flush;; * // wait for parent to acknowledge; * std::string s;; * pipe >> s;; * pipe.close();; * return 0;; * }; *; * // function to spawn a child; * BidirMMapPipe* spawnChild(int (*childexec)(BidirMMapPipe&)); * {; * BidirMMapPipe *p = new BidirMMapPipe();; * if (p->isChild()) {; * int retVal = childexec(*p);; * delete p;; * std::exit(retVal);; * }; * return p;; * }; *; * int main(); * {; * typedef BidirMMapPipe::PollEntry PollEntry;; * // poll data structure; * BidirMMapPipe::PollVector pipes;; * pipes.reserve(3);; * // spawn children; * for (int i = 0; i < 3; ++i) {; * pipes.push_back(PollEntry(spawnChild(randomchild),; * BidirMMapPipe::Readable));; * }; * // while at least some children alive; * while (!pipes.empty())",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/BidirMMapPipe.h:2144,message,message,2144,roofit/roofitcore/src/BidirMMapPipe.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/BidirMMapPipe.h,1,['message'],['message']
Integrability,"yImpl.h -----------------------*- C++ -*------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This template implementation resides in a separate file so that it; // does not get injected into every .cpp file that includes the; // generic header.; //; // DO NOT INCLUDE THIS FILE WHEN MERELY USING UNIFORMITYINFO.; //; // This file should only be included by files that implement a; // specialization of the relvant templates. Currently these are:; // - UniformityAnalysis.cpp; //; // Note: The DEBUG_TYPE macro should be defined before using this; // file so that any use of LLVM_DEBUG is associated with the; // including file rather than this file.; //; //===----------------------------------------------------------------------===//; ///; /// \file; /// \brief Implementation of uniformity analysis.; ///; /// The algorithm is a fixed point iteration that starts with the assumption; /// that all control flow and all values are uniform. Starting from sources of; /// divergence (whose discovery must be implemented by a CFG- or even; /// target-specific derived class), divergence of values is propagated from; /// definition to uses in a straight-forward way. The main complexity lies in; /// the propagation of the impact of divergent control flow on the divergence of; /// values (sync dependencies).; ///; /// NOTE: In general, no interface exists for a transform to update; /// (Machine)UniformityInfo. Additionally, (Machine)CycleAnalysis is a; /// transitive dependence, but it also does not provide an interface for; /// updating itself. Given that, transforms should not preserve uniformity in; /// their getAnalysisUsage() callback.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/GenericUniformityImpl.h:1583,depend,dependencies,1583,interpreter/llvm-project/llvm/include/llvm/ADT/GenericUniformityImpl.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/GenericUniformityImpl.h,4,"['depend', 'interface']","['dependence', 'dependencies', 'interface']"
Integrability,"you should either explicitly cast the value or; /// use any intermediary variable:; /// ~~~{.cpp}; /// fprintf(stdout,""trs[%d].a = %d\n"",i,(int)trs.a[i]);; /// ~~~; /// Also, optionally, the generated selector will also call methods named; /// macrofilename_methodname in each of 6 main selector methods if the method; /// macrofilename_methodname exist (Where macrofilename is stripped of its; /// extension).; ///; /// Concretely, with the script named h1analysisProxy.C,; ///; /// - The method calls the method (if it exist); /// - Begin -> void h1analysisProxy_Begin(TTree*);; /// - SlaveBegin -> void h1analysisProxy_SlaveBegin(TTree*);; /// - Notify -> bool h1analysisProxy_Notify();; /// - Process -> bool h1analysisProxy_Process(Long64_t);; /// - SlaveTerminate -> void h1analysisProxy_SlaveTerminate();; /// - Terminate -> void h1analysisProxy_Terminate();; ///; /// If a file name macrofilename.h (or .hh, .hpp, .hxx, .hPP, .hXX) exist; /// it is included before the declaration of the proxy class. This can; /// be used in particular to insure that the include files needed by; /// the macro file are properly loaded.; ///; /// The default histogram is accessible via the variable named 'htemp'.; ///; /// If the library of the classes describing the data in the branch is; /// loaded, the skeleton will add the needed `include` statements and; /// give the ability to access the object stored in the branches.; ///; /// To draw px using the file `hsimple.root (generated by the; /// hsimple.C tutorial), we need a file named hsimple.cxx:; ///; /// ~~~{.cpp}; /// double hsimple() {; /// return px;; /// }; /// ~~~; /// MakeProxy can then be used indirectly via the TTree::Draw interface; /// as follow:; /// ~~~{.cpp}; /// new TFile(""hsimple.root""); /// ntuple->Draw(""hsimple.cxx"");; /// ~~~; /// A more complete example is available in the tutorials directory:; /// h1analysisProxy.cxx , h1analysProxy.h and h1analysisProxyCut.C; /// which reimplement the selector found in h1analysis.C",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx:5913,interface,interface,5913,tree/treeplayer/src/TTreePlayer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx,1,['interface'],['interface']
Integrability,"ypeParmType nodes involves substituting the; /// template arguments for their corresponding template parameters; a similar; /// transformation is performed for non-type template parameters and; /// template template parameters.; ///; /// This tree-transformation template uses static polymorphism to allow; /// subclasses to customize any of its operations. Thus, a subclass can; /// override any of the transformation or rebuild operators by providing an; /// operation with the same signature as the default implementation. The; /// overriding function should not be virtual.; ///; /// Semantic tree transformations are split into two stages, either of which; /// can be replaced by a subclass. The ""transform"" step transforms an AST node; /// or the parts of an AST node using the various transformation functions,; /// then passes the pieces on to the ""rebuild"" step, which constructs a new AST; /// node of the appropriate kind from the pieces. The default transformation; /// routines recursively transform the operands to composite AST nodes (e.g.,; /// the pointee type of a PointerType node) and, if any of those operand nodes; /// were changed by the transformation, invokes the rebuild operation to create; /// a new AST node.; ///; /// Subclasses can customize the transformation at various levels. The; /// most coarse-grained transformations involve replacing TransformType(),; /// TransformExpr(), TransformDecl(), TransformNestedNameSpecifierLoc(),; /// TransformTemplateName(), or TransformTemplateArgument() with entirely; /// new implementations.; ///; /// For more fine-grained transformations, subclasses can replace any of the; /// \c TransformXXX functions (where XXX is the name of an AST node, e.g.,; /// PointerType, StmtExpr) to alter the transformation. As mentioned previously,; /// replacing TransformTemplateTypeParmType() allows template instantiation; /// to substitute template arguments for their corresponding template; /// parameters. Additionally, subclasses can ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/TreeTransform.h:1417,rout,routines,1417,interpreter/llvm-project/clang/lib/Sema/TreeTransform.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/TreeTransform.h,1,['rout'],['routines']
Integrability,"zation Examples, Fred James //; // //; // from the //; // Proceedings of the 1972 CERN Computing and Data Processing School //; // Pertisau, Austria, 10-24 September, 1972 (CERN 72-21) //; // //; // Here a collection of test problems is assembled which were found to be //; // useful in verifying and comparing minimization routines. Many of these //; // are standard functions upon which it has become conventional to try all //; // new methods, quoting the performance in the publication of the algorithm //; // //; // Each test will produce one line (Test OK or Test FAILED) . At the end of //; // the test a table is printed showing the global results Real Time and //; // Cpu Time. One single number (ROOTMARKS) is also calculated showing the //; // relative performance of your machine compared to a reference machine //; // a Pentium IV 2.4 Ghz) with 512 MBytes of memory and 120 GBytes IDE disk. //; // //; // In the main routine the fitter can be chosen through TVirtualFitter : //; // - Minuit //; // - Minuit2 //; // - Fumili //; //; // To run the test, do, eg; // root -b -q stressFit.cxx; // root -b -q ""stressFit.cxx(\""Minuit2\"")""; // root -b -q ""stressFit.cxx+(\""Minuit2\"")""; // //; // The verbosity can be set through the global parameter gVerbose : //; // -1: off 1: on //; // The tolerance on the parameter deviation from the minimum can be set //; // through gAbsTolerance . //; // //; // An example of output when all the tests run OK is shown below: //; // ******************************************************************* //; // * Minimization - S T R E S S suite * //; // ******************************************************************* //; // ******************************************************************* //; // * Starting S T R E S S * //; // ******************************************************************* //; // Test 1 : Wood.................................................. OK //; // Test 2 : RosenBrock............................................ OK //; /",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/stressFit.cxx:1169,rout,routine,1169,test/stressFit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/stressFit.cxx,1,['rout'],['routine']
Integrability,"{; /// if (__THREW__ == 0) {; /// __THREW__ = threw;; /// __threwValue = value;; /// }; /// }; //; /// setTempRet0 is called from __cxa_find_matching_catch() in JS glue code.; /// In exception handling, getTempRet0 indicates the type of an exception; /// caught, and in setjmp/longjmp, it means the second argument to longjmp; /// function.; ///; /// 3) Lower; /// invoke @func(arg1, arg2) to label %invoke.cont unwind label %lpad; /// into; /// __THREW__ = 0;; /// call @__invoke_SIG(func, arg1, arg2); /// %__THREW__.val = __THREW__;; /// __THREW__ = 0;; /// if (%__THREW__.val == 1); /// goto %lpad; /// else; /// goto %invoke.cont; /// SIG is a mangled string generated based on the LLVM IR-level function; /// signature. After LLVM IR types are lowered to the target wasm types,; /// the names for these wrappers will change based on wasm types as well,; /// as in invoke_vi (function takes an int and returns void). The bodies of; /// these wrappers will be generated in JS glue code, and inside those; /// wrappers we use JS try-catch to generate actual exception effects. It; /// also calls the original callee function. An example wrapper in JS code; /// would look like this:; /// function invoke_vi(index,a1) {; /// try {; /// Module[""dynCall_vi""](index,a1); // This calls original callee; /// } catch(e) {; /// if (typeof e !== 'number' && e !== 'longjmp') throw e;; /// _setThrew(1, 0); // setThrew is called here; /// }; /// }; /// If an exception is thrown, __THREW__ will be set to true in a wrapper,; /// so we can jump to the right BB based on this value.; ///; /// 4) Lower; /// %val = landingpad catch c1 catch c2 catch c3 ...; /// ... use %val ...; /// into; /// %fmc = call @__cxa_find_matching_catch_N(c1, c2, c3, ...); /// %val = {%fmc, getTempRet0()}; /// ... use %val ...; /// Here N is a number calculated based on the number of clauses.; /// setTempRet0 is called from __cxa_find_matching_catch() in JS glue code.; ///; /// 5) Lower; /// resume {%a, %b}; /// into; /// cal",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyLowerEmscriptenEHSjLj.cpp:4182,wrap,wrappers,4182,interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyLowerEmscriptenEHSjLj.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyLowerEmscriptenEHSjLj.cpp,2,['wrap'],['wrappers']
Integrability,"{Q}^\prime\f$; 7. For each component \f$Q^\prime_i\f$ make a multidimensional fit,; using \f$\mathbf{x}^\prime\f$ as the variables, thus determining a set of; coefficients \f$\mathbf{c}_i\f$. To process data, using this parameterisation, do; 1. Test wether the observation \f$\mathbf{x}\f$ within the domain of; the parameterization, using the result from the Principal Component; Analysis.; 2. Determine \f$\mathbf{P}^\prime\f$ as before.; 3. Determine \f$\mathbf{x}^\prime\f$ as before.; 4. Use the result of the fit to determine \f$\mathbf{Q}^\prime\f$.; 5. Transform back to \f$\mathbf{P}\f$ from \f$\mathbf{Q}^\prime\f$, using; the result from the Principal Component Analysis. ## Testing the parameterization; The class also provides functionality for testing the, over the; training sample, found parameterization (TMultiDimFit::Fit). This is done by passing; the class a test sample of \f$ M_t\f$ tuples of the form; \f$(\mathbf{x}_{t,j},D_{t,j}, E_{t,j})\f$, where \f$\mathbf{x}_{t,j}\f$ are the independent; variables, \f$ D_{t,j}\f$ the known, dependent quantity, and \f$ E_{t,j}\f$ is; the square error in \f$ D_{t,j}\f$ (TMultiDimFit::AddTestRow). The parameterization is then evaluated at every \f$\mathbf{x}_t\f$ in the; test sample, and; \f[; S_t \equiv \sum_{j=1}^{M_t} \left(D_{t,j} -; D_p\left(\mathbf{x}_{t,j}\right)\right)^2; \f]; is evaluated. The relative error over the test sample; \f[; R_t = \frac{S_t}{\sum_{j=1}^{M_t} D_{t,j}^2}; \f]; should not be to low or high compared to \f$ R\f$ from the training; sample. Also, multiple correlation coefficient from both samples should; be fairly close, otherwise one of the samples is not representative of; the problem. A large difference in the reduced \f$ \chi^2\f$ over the two; samples indicate an over fit, and the maximum number of terms in the; parameterisation should be reduced. It's possible to use [4] to further improve the fit, using the test sample. Christian Holm. ## Bibliography; - <a name=""bevington""></a> Philip ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TMultiDimFit.cxx:16593,depend,dependent,16593,hist/hist/src/TMultiDimFit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TMultiDimFit.cxx,1,['depend'],['dependent']
Integrability,"|; /// | LinesX | X | X | X | X |; /// | LinesY | X | X | X | X |; /// | BarsX | X | - | X | - |; /// | BarsY | X | - | X | - |; /// | Needles | X | - | - | - |; /// | Surface | - | X | X | X |; /// | Triangles | X | X | X | X |; ///; /// The Pen Attributes can be changed using pa(color, style, width). Example:; ///; /// h2->Draw(""SPEC dm(1,2) pa(2,1,2)"");; ///; /// sets the line color to 2, line type to 1 and line width to2. Note that if; /// pa() is not specified, the histogram ""h2"" line attributes are used. Note; /// also that operators for SPEC option can be cumulated and specified in; /// any order.; ///; /// The buffer size can be change with bf(size). Example:; ///; /// h2->Draw(""SPEC bf(8000)"");; ///; /// The spectrum painter needs a buffer to paint the spectrum. By default the; /// buffer size is set to 1600. In most cases this buffer size is enough. But; /// if the canvas size is very big, for instance 8000x5000 this buffer size is; /// too small. An error message is issued telling to use the option bf().; ///; /// The number of nodes can be change with n(nodesx, nodesy). Example:; ///; /// h2->Draw(""SPEC n(40,40)"");; ///; /// Sometimes the displayed region is rather large. When displaying all; /// channels pictures become very dense and complicated. It is very difficult; /// to understand the overall shape of data. ""n(nx,ny)"" allows to change the; /// density of displayed channels. Only the channels coinciding with given; /// nodes are displayed.; ///; /// The visualization angles can be changed with a(alpha, beta, view).; /// Example:; ///; /// h2->Draw(""SPEC n(40,40) dm(0,1) a(30,30,0)"");; ///; /// Alpha defines the angle between bottom horizontal screen line and the; /// displayed space on the right side of the picture and beta on the left; /// side, respectively. One can rotate the 3-d space around vertical axis; /// going through the center of it employing the view parameter. Allowed; /// values are 0, 90, 180 and 270 degrees.; ///; /// zs(scale) chan",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/spectrumpainter/src/TSpectrum2Painter.cxx:3364,message,message,3364,hist/spectrumpainter/src/TSpectrum2Painter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrumpainter/src/TSpectrum2Painter.cxx,1,['message'],['message']
Integrability,"} > a_r \\; * \end{cases}; * \f]; * Here, \f$ K_\lambda \f$ are the modified Bessel functions of the second kind; * (""irregular modified cylindrical Bessel functions"" from the gsl,; * ""special Bessel functions of the third kind""),; * and \f$ A^2_\lambda(\zeta) \f$ is a ratio of these:; * \f[; * A_\lambda^{2}(\zeta) = \frac{\zeta K_\lambda(\zeta)}{K_{\lambda+1}(\zeta)}; * \f]; *; * \if false; * TODO Enable once analytic integrals work.; * ### Analytical Integration; * The Hypatia distribution can be integrated analytically if \f$ \beta = \zeta = 0 \f$ and; * \f$ \lambda < 0 \f$. An analytic integral will only be used, though, if the parameters are **constant**; * at zero, and if \f$ \lambda < 0 \f$. This can be ensured as follows:; * ```; * RooRealVar beta(""beta"", ""beta"", 0.); // NOT beta(""beta"", ""beta"", 0., -1., 1.) This would allow it to float.; * RooRealVar zeta(""zeta"", ""zeta"", 0.);; * RooRealVar lambda(""lambda"", ""lambda"", -1., -10., -0.00001);; * ```; * In all other cases, slower / less accurate numeric integration will be used.; * Note that including `0.` in the value range of lambda excludes using analytic integrals.; * \endif; *; * ### Concavity; * Note that unless the parameters \f$ a_l,\ a_r \f$ are very large, the function has non-hyperbolic tails. This requires; * \f$ G \f$ to be strictly concave, *i.e.*, peaked, as otherwise the tails would yield imaginary numbers. Choosing \f$ \lambda,; * \beta, \zeta \f$ inappropriately will therefore lead to evaluation errors.; *; * Further, the original paper establishes that to keep the tails from rising,; * \f[; * \begin{split}; * \beta^2 &< \alpha^2 \\; * \Leftrightarrow \beta^2 &< \frac{\zeta^2}{\delta^2} = \frac{\zeta^2}{\sigma^2 A_{\lambda}^2(\zeta)}; * \end{split}; * \f]; * needs to be satisfied, unless the fit range is very restricted, because otherwise, the function rises in the tails.; *; *; * In case of evaluation errors, it is advisable to choose very large values for \f$ a_l,\ a_r \f$, tweak the parameter",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitmore/src/RooHypatia2.cxx:2814,integrat,integration,2814,roofit/roofitmore/src/RooHypatia2.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitmore/src/RooHypatia2.cxx,1,['integrat'],['integration']
Integrability,"}; /// TChain c;; /// // DO NOT DO THIS; /// // c.Add(""myfile.root/treename"");; /// // DO THIS INSTEAD; /// c.Add(""myfile.root?#treename"");; /// ~~~; /// - Wildcard treatment is triggered by any of the special characters:; /// <b>[]*?</b> which may be used in the file name or subdirectory name,; /// eg. specifying ""xxx*.root"" adds all files starting with xxx in the; /// current file system directory and ""*/*.root"" adds all the files in the; /// current subdirectories (but not in the subsubdirectories).; ///; /// The second format accepted for \p name may have the form of a URL, e.g.:; ///; /// ~~~ {.cpp}; /// root://machine/path/file_name[?[query][#tree_name]]; /// or root://machine/path/file_name; /// or root://machine/path/file_name.root[.oext]/tree_name; /// or root://machine/path/file_name.root[.oext]/tree_name?query; /// ~~~; ///; /// Note the following:; /// - The optional ""query"" token is to be interpreted by the remote server.; /// - Wildcards may be supported in URLs, depending on the protocol plugin and; /// the remote server.; /// - \p http or \p https URLs can contain a query identifier without; /// \p tree_name, but generally URLs can not be written with them because of; /// ambiguity with the wildcard character. (Also see the documentation for; /// TChain::AddFile, which does not support wildcards but allows the URL name; /// to contain a query).; /// - The rules for tagging the name of the tree in the file are the same as; /// in the format above.; ///; /// <h4>Details of the nentries parameter</h4>; /// Depending on the value of the parameter, the number of entries in the file; /// is retrieved differently:; /// - If <tt>nentries <= 0</tt>, the file is connected and the tree header read; /// in memory to get the number of entries.; /// - If <tt>nentries > 0</tt>, the file is not connected, \p nentries is; /// assumed to be the number of entries in the file. In this case, no check is; /// made that the file exists and that the corresponding tree exist",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TChain.cxx:2667,depend,depending,2667,tree/tree/src/TChain.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TChain.cxx,2,"['depend', 'protocol']","['depending', 'protocol']"
Modifiability," ""y"" (eg. missing ET and SumET), see figure.; ## The signal region has high values of both of these variables (top right).; ## One can see low values of ""x"" or ""y"" acting as side-bands. If we; ## just used ""y"" as a sideband, we would have the on/off problem.; ## - In the signal region we observe non events and expect s+b events.; ## - In the region with low values of ""y"" (bottom right); ## we observe noff events and expect tau*b events.; ## Note the significance of tau. In the background only case:; ##; ## ~~~{.cpp}; ## tau ~ <expectation off> / <expectation on>; ## ~~~; ##; ## If tau is known, this model is sufficient, but often tau is not known exactly.; ## So one can use low values of ""x"" as an additional constraint for tau.; ## Note that this technique critically depends on the notion that the; ## joint distribution for ""x"" and ""y"" can be factorized.; ## Generally, these regions have many events, so it the ratio can be; ## measured very precisely there. So we extend the model to describe the; ## left two boxes... denoted with ""bar"".; ## - In the upper left we observe nonbar events and expect bbar events; ## - In the bottom left we observe noffbar events and expect tau bbar events; ## Note again we have:; ##; ## ~~~{.cpp}; ## tau ~ <expectation off bar> / <expectation on bar>; ## ~~~; ##; ## One can further expand the model to account for the systematic associated; ## to assuming the distribution of ""x"" and ""y"" factorizes (eg. that; ## tau is the same for off/on and offbar/onbar). This can be done in several; ## ways, but here we introduce an additional parameter rho, which so that; ## one set of models will use tau and the other tau*rho. The choice is arbitrary,; ## but it has consequences on the numerical stability of the algorithms.; ## The ""bar"" measurements typically have more events (& smaller relative errors).; ## If we choose; ##; ## ~~~{.cpp}; ## <expectation noffbar> = tau * rho * <expectation noonbar>; ## ~~~; ##; ## the product tau*rho will be known ve",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/FourBinInstructional.py:1245,extend,extend,1245,tutorials/roostats/FourBinInstructional.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/FourBinInstructional.py,1,['extend'],['extend']
Modifiability," $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TFolder; \ingroup Base. \legacy{TFolder}. A TFolder object is a collection of objects and folders.; Folders have a name and a title and are identified in the folder hierarchy; by a ""Unix-like"" naming mechanism. The root of all folders is //root.; New folders can be dynamically added or removed to/from a folder.; The folder hierarchy can be visualized via the TBrowser. \image html base_browser.png. The Root folders hierarchy can be seen as a whiteboard where objects; are posted. Other classes/tasks can access these objects by specifying; only a string pathname. This whiteboard facility greatly improves the; modularity of an application, minimizing the class relationship problem; that penalizes large applications. Pointers are efficient to communicate between classes.; However, one has interest to minimize direct coupling between classes; in the form of direct pointers. One better uses the naming and search; service provided by the Root folders hierarchy. This makes the classes; loosely coupled and also greatly facilitates I/O operations.; In a client/server environment, this mechanism facilitates the access; to any kind of object in //root stores running on different processes. A TFolder is created by invoking the TFolder constructor. It is placed; inside an existing folder via the TFolder::AddFolder method.; One can search for a folder or an object in a folder using the FindObject; method. FindObject analyses the string passed as its argument and searches; in the hierarchy until it finds an object or folder matching the name. When a folder is deleted, its reference from the parent folder and; possible other folders is deleted. If a folder has been declared the owner of its objects/folders via; TFolder::SetOwner, then the contained objects are deleted when the; folder is deleted. By default, a fold",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TFolder.cxx:1248,coupling,coupling,1248,core/base/src/TFolder.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TFolder.cxx,1,['coupling'],['coupling']
Modifiability," (x,[p2],[p1])`; - `pol0,1,2,...N` is a substitute for a polynomial of degree `N` :; `([p0]+[p1]*x+[p2]*pow(x,2)+....[pN]*pow(x,N)`; - `cheb0,1,2,...N` is a substitute for a Chebyshev polynomial of degree `N`:; `ROOT::Math::Chebyshev10(x,[p0],[p1],[p2],...[pN])`. Note the maximum N allowed here is 10.; 2. Two Dimensional functions:; - `xygaus` is a substitute for `[Constant]*exp(-0.5*pow(((x-[MeanX])/[SigmaX]),2 )- 0.5*pow(((y-[MeanY])/[SigmaY]),2))`, a 2d Gaussian without correlation.; - `bigaus` is a substitute for `[Constant]*ROOT::Math::bigaussian_pdf (x,y,[SigmaX],[SigmaY],[Rho],[MeanX],[MeanY])`, a 2d gaussian including a correlation parameter.; 3. Three Dimensional functions:; - `xyzgaus` is for a 3d Gaussians without correlations:; `[Constant]*exp(-0.5*pow(((x-[MeanX])/[SigmaX]),2 )- 0.5*pow(((y-[MeanY])/[SigmaY]),2 )- 0.5*pow(((z-[MeanZ])/[SigmaZ]),2))`. ### An expanded note on variables and parameters. In a TFormula, a variable is a defined by a name `x`, `y`, `z` or `t` or an; index like `x[0]`, `x[1]`, `x[2]`; that is `x[N]` where N is an integer. ```; TFormula("""", ""x[0] * x[1] + 10""); ```. Parameters are similar and can take any name. It is specified using brackets; e.g. `[expected_mass]` or `[0]`. ```; TFormula("""", ""exp([expected_mass])-1""); ```. Variables and parameters can be combined in the same TFormula. Here we consider; a very simple case where we have an exponential decay after some time t and a; number of events with timestamps for which we want to evaluate this function. ```; TFormula tf ("""", ""[0]*exp(-[1]*t)"");; tf.SetParameter(0, 1);; tf.SetParameter(1, 0.5);. for (auto & event : events) {; tf.Eval(event.t);; }; ```. The distinction between variables and parameters arose from the TFormula's; application in fitting. There parameters are fitted to the data provided; through variables. In other applications this distinction can go away. Parameter values can be provided dynamically using `TFormula::EvalPar`; instead of `TFormula::Eval`. In this ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TFormula.cxx:5435,variab,variable,5435,hist/hist/src/TFormula.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TFormula.cxx,1,['variab'],['variable']
Modifiability," * @param cmdArgs Variadic template arguments representing optional command arguments.; * You can pass either an arbitrary number of RooCmdArg instances; * or a single RooLinkedList that points to the RooCmdArg objects.; * @return An owning pointer to the created RooAbsReal NLL object.; *; * @tparam CmdArgs_t Template types for optional command arguments.; * Can either be an arbitrary number of RooCmdArg or a single RooLinkedList.; *; * \note This front-end function should not be re-implemented in derived PDF types.; * If you mean to customize the NLL creation routine,; * you need to override the virtual RooAbsPdf::createNLLImpl() method.; *; * The following named arguments are supported:; *; * <table>; * <tr><th> Type of CmdArg <th> Effect on NLL; * <tr><td> `ConditionalObservables(Args_t &&... argsOrArgSet)` <td> Do not normalize PDF over listed observables.; * Arguments can either be multiple RooRealVar or a single RooArgSet containing them.; * <tr><td> `Extended(bool flag)` <td> Add extended likelihood term, off by default.; * <tr><td> `Range(const char* name)` <td> Fit only data inside range with given name. Multiple comma-separated range names can be specified.; * In this case, the unnormalized PDF \f$f(x)\f$ is normalized by the integral over all ranges \f$r_i\f$:; * \f[; * p(x) = \frac{f(x)}{\sum_i \int_{r_i} f(x) dx}.; * \f]; * <tr><td> `Range(double lo, double hi)` <td> Fit only data inside given range. A range named ""fit"" is created on the fly on all observables.; * <tr><td> `SumCoefRange(const char* name)` <td> Set the range in which to interpret the coefficients of RooAddPdf components; * <tr><td> `NumCPU(int num, int istrat)` <td> Parallelize NLL calculation on num CPUs; * <table>; * <tr><th> Strategy <th> Effect; * <tr><td> 0 = RooFit::BulkPartition - *default* <td> Divide events in N equal chunks; * <tr><td> 1 = RooFit::Interleave <td> Process event i%N in process N. Recommended for binned data with; * a substantial number of zero-bins, which will be ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx:1290,Extend,Extended,1290,roofit/roofitcore/src/RooAbsPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx,2,"['Extend', 'extend']","['Extended', 'extended']"
Modifiability," * Copyright (C) 1995-2004, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TPrincipal; \ingroup Hist; Principal Components Analysis (PCA). The current implementation is based on the LINTRA package from CERNLIB; by R. Brun, H. Hansroul, and J. Kubler.; The class has been implemented by Christian Holm Christensen in August 2000. ## Introduction. In many applications of various fields of research, the treatment of; large amounts of data requires powerful techniques capable of rapid; data reduction and analysis. Usually, the quantities most; conveniently measured by the experimentalist, are not necessarily the; most significant for classification and analysis of the data. It is; then useful to have a way of selecting an optimal set of variables; necessary for the recognition process and reducing the dimensionality; of the problem, resulting in an easier classification procedure. This paper describes the implementation of one such method of; feature selection, namely the principal components analysis. This; multidimensional technique is well known in the field of pattern; recognition and and its use in Particle Physics has been documented; elsewhere (cf. H. Wind, <I>Function Parameterization</I>, CERN; 72-21). ## Overview; Suppose we have prototypes which are trajectories of particles,; passing through a spectrometer. If one measures the passage of the; particle at say 8 fixed planes, the trajectory is described by an; 8-component vector:; \f[; \mathbf{x} = \left(x_0, x_1, \ldots, x_7\right); \f]; in 8-dimensional pattern space. One proceeds by generating a representative tracks sample and; building up the covariance matrix \f$\mathsf{C}\f$. Its eigenvectors and; eigenvalues are computed by standard methods, and thus a new basis is; obtained for the origina",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TPrincipal.cxx:1106,variab,variables,1106,hist/hist/src/TPrincipal.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TPrincipal.cxx,1,['variab'],['variables']
Modifiability," *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TGDMLParse; \ingroup Geometry_gdml. This class contains the implementation of the GDML parser associated to; all the supported GDML elements. User should never need to explicitly; instaciate this class. It is internally used by the TGeoManager. Each element process has a 'Binding' to ROOT. The 'binding' is specific; mapping of GDML elements (materials, solids, etc) to specific objects which; should be instanciated by the converted. In the present case (ROOT) the; binding is implemented at the near the end of each process function. Most; bindings follow similar format, dependent on what is being added to the; geometry. This file also contains the implementation of the TGDMLRefl class. This is; just a small helper class used internally by the 'reflection' method (for; reflected solids). The presently supported list of TGeo classes is the following:. #### Materials:; - TGeoElement; - TGeoMaterial; - TGeoMixture. #### Solids:; - TGeoBBox; - TGeoArb8; - TGeoTubeSeg; - TGeoConeSeg; - TGeoCtub; - TGeoPcon; - TGeoTrap; - TGeoGtra; - TGeoTrd2; - TGeoSphere; - TGeoPara; - TGeoTorus; - TGeoHype; - TGeoPgon; - TGeoXtru; - TGeoEltu; - TGeoParaboloid; - TGeoCompositeShape (subtraction, union, intersection). #### Approximated Solids:; - Ellipsoid (approximated to a TGeoBBox); - Elliptical cone (approximated to a TGeoCone). #### Geometry:; - TGeoVolume; - TGeoVolumeAssembly; - divisions; - reflection. When most solids or volumes are added to the geometry they. Whenever a new element is added to GDML schema, this class needs to be extended.; The appropriate method (process) needs to be implemented, as well as the new; element process then needs to be linked thru the function TGDMLParse. For any question or remarks concerning this code, please send an email to; ben.lloyd@cern.ch. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/gdml/src/TGDMLParse.cxx:1966,extend,extended,1966,geom/gdml/src/TGDMLParse.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/gdml/src/TGDMLParse.cxx,1,['extend'],['extended']
Modifiability," - Constructors and destructor have been added. - Instead of passing the FCN function in the argument; list, the addresses of this function is stored as pointer; in the data members of the class. This is by far more elegant; and flexible in an interactive environment.; The member function SetFCN can be used to define this pointer. - The ROOT static function Printf is provided to replace all; format statements and to print on currently defined output file.; - The functions SetObjectFit(TObject * obj)/GetObjectFit() can be; used inside the FCN function to set/get a referenced object; instead of using global variables. ## Basic concepts of MINUIT. The [MINUIT](https://root.cern/download/minuit.pdf); package acts on a multiparameter Fortran function to which one; must give the generic name <TT>FCN</TT>. In the ROOT implementation,; the function <TT>FCN</TT> is defined via the MINUIT SetFCN member function; when an Histogram.Fit command is invoked.; The value of <TT>FCN</TT> will in general depend on one; or more variable parameters. To take a simple example, in case of ROOT histograms (classes TH1C,TH1S,TH1F,TH1D); the Fit function defines the Minuit fitting function as being H1FitChisquare; or H1FitLikelihood depending on the options selected.; H1FitChisquare; calculates the chisquare between the user fitting function (gaussian, polynomial,; user defined,etc) and the data for given values of the parameters.; It is the task of MINUIT to find those values of the parameters; which give the lowest value of chisquare. ### Basic concepts - The transformation for parameters with limits. For variable parameters with limits, MINUIT uses the following; transformation:. \f[; P_{\mathrm{int}} = \arcsin; \left( 2\: \frac{P_{\mathrm{ext}}-a}{b-a} - 1 \right); P_{\mathrm{ext}} = a + \frac{b - a}{2} \left( \sin P_{\mathrm{int}} + 1 \right); \f]. so that the internal value \f$P_{\mathrm{int}}\f$ can take on any value, while; the external value \f$P_{\mathrm{ext}}\f$ can take on values o",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TMinuit.cxx:2292,variab,variable,2292,math/minuit/src/TMinuit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TMinuit.cxx,1,['variab'],['variable']
Modifiability," - `B` : an 8 bit signed integer (`Char_t`); Treated as a character when in an array.; - `b` : an 8 bit unsigned integer (`UChar_t`); - `S` : a 16 bit signed integer (`Short_t`); - `s` : a 16 bit unsigned integer (`UShort_t`); - `I` : a 32 bit signed integer (`Int_t`); - `i` : a 32 bit unsigned integer (`UInt_t`); - `F` : a 32 bit floating point (`Float_t`); - `f` : a 24 bit floating point with truncated mantissa (`Float16_t`); - `D` : a 64 bit floating point (`Double_t`); - `d` : a 24 bit truncated floating point (`Double32_t`); - `L` : a 64 bit signed integer (`Long64_t`); - `l` : a 64 bit unsigned integer (`ULong64_t`); - `G` : a long signed integer, stored as 64 bit (`Long_t`); - `g` : a long unsigned integer, stored as 64 bit (`ULong_t`); - `O` : [the letter `o`, not a zero] a boolean (`bool`). Examples:; - A int: ""myVar/I""; - A float array with fixed size: ""myArrfloat[42]/F""; - An double array with variable size, held by the `myvar` column: ""myArrdouble[myvar]/D""; - An Double32_t array with variable size, held by the `myvar` column , with values between 0 and 16: ""myArr[myvar]/d[0,10]""; - The `myvar` column, which holds the variable size, **MUST** be an `Int_t` (/I). - If the address points to a single numerical variable, the leaflist is optional:; ~~~ {.cpp}; int value;; tree->Branch(branchname, &value);; ~~~; - If the address points to more than one numerical variable, we strongly recommend; that the variable be sorted in decreasing order of size. Any other order will; result in a non-portable TTree (i.e. you will not be able to read it back on a; platform with a different padding strategy).; We recommend to persistify objects rather than composite leaflists.; - In case of the truncated floating point types (Float16_t and Double32_t) you can; furthermore specify the range in the style [xmin,xmax] or [xmin,xmax,nbits] after; the type character. For example, for storing a variable size array `myArr` of; `Double32_t` with values within a range of `[0, 2*pi]` and",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:5174,variab,variable,5174,tree/tree/src/TTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx,3,['variab'],['variable']
Modifiability," -------+; // 0| LIFETIME_START b1, b2 |; // 1| <test 'if' condition> |; // +-----------------------+; // ./ \.; // +------ block 1 -------+ +------ block 2 -------+; // 2| LIFETIME_START b3 | 5| LIFETIME_START b4, b5 |; // 3| <uses of b1, b3> | 6| <uses of b2, b4, b5> |; // 4| LIFETIME_END b3 | 7| LIFETIME_END b4, b5 |; // +-----------------------+ +-----------------------+; // \. /.; // +------ block 3 -------+; // 8| <cleanupcode> |; // 9| LIFETIME_END b1, b2 |; // 10| return |; // +-----------------------+; //; // If we create live intervals for the variables above strictly based; // on the lifetime markers, we'll get the set of intervals on the; // left. If we ignore the lifetime start markers and instead treat a; // variable's lifetime as beginning with the first reference to the; // var, then we get the intervals on the right.; //; // LIFETIME_START First Use; // b1: [0,9] [3,4] [8,9]; // b2: [0,9] [6,9]; // b3: [2,4] [3,4]; // b4: [5,7] [6,7]; // b5: [5,7] [6,7]; //; // For the intervals on the left, the best we can do is overlap two; // variables (b3 and b4, for example); this gives us a stack size of; // 4*1024 bytes, not ideal. When treating first-use as the start of a; // lifetime, we can additionally overlap b1 and b5, giving us a 3*1024; // byte stack (better).; //; // Degenerate Slots:; // -----------------; //; // Relying entirely on first-use of stack slots is problematic,; // however, due to the fact that optimizations can sometimes migrate; // uses of a variable outside of its lifetime start/end region. Here; // is an example:; //; // int bar() {; // char b1[1024], b2[1024];; // if (...) {; // <uses of b2>; // return y;; // } else {; // <uses of b1>; // while (...) {; // char b3[1024];; // <uses of b3>; // }; // }; // }; //; // Before optimization, the control flow graph for the code above; // might look like the following:; //; // +------ block 0 -------+; // 0| LIFETIME_START b1, b2 |; // 1| <test 'if' condition> |; // +-----------------------+; ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/StackColoring.cpp:7537,variab,variables,7537,interpreter/llvm-project/llvm/lib/CodeGen/StackColoring.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/StackColoring.cpp,1,['variab'],['variables']
Modifiability," / //; // Interrupt; by clicking on the corresponding toolbar button, or by //; // using Shift+F5 accelerator keys. //; // //; // Interface to CINT Interpreter //; // //; // Any command entered in the Command combo box will be passed to //; // the CINT interpreter. This combo box will keep the commands history //; // and will allow you to re-execute the same commands during an editor //; // session. //; // //; // Keyboard Bindings //; // //; // The following table lists the keyboard shortcuts and accelerator //; // keys. //; // //; // Key: Action: //; // ==== ======= //; // //; // Up Move cursor up. //; // Shift+Up Move cursor up and extend selection. //; // Down Move cursor down. //; // Shift+Down Move cursor down and extend selection. //; // Left Move cursor left. //; // Shift+Left Move cursor left and extend selection. //; // Right Move cursor right. //; // Shift+Right Move cursor right and extend selection. //; // Home Move cursor to begin of line. //; // Shift+Home Move cursor to begin of line and extend selection.//; // Ctrl+Home Move cursor to top of page. //; // End Move cursor to end of line. //; // Shift+End Move cursor to end of line and extend selection. //; // Ctrl+End Move cursor to end of page. //; // PgUp Move cursor up one page. //; // Shift+PgUp Move cursor up one page and extend selection. //; // PgDn Move cursor down one page. //; // Shift+PgDn Move cursor down one page and extend selection. //; // Delete Delete character after cursor, or text selection. //; // BackSpace Delete character before cursor, or text selection.//; // Ctrl+B Move cursor left. //; // Ctrl+D Delete character after cursor, or text selection. //; // Ctrl+E Move cursor to end of line. //; // Ctrl+H Delete character before cursor, or text selection.//; // Ctrl+K Delete characters from current position to the //; // end of line. //; // Ctrl+U Delete current line. //; // //; //Begin_Html; /*; <img src=""gif/TGRootIDE.gif"">; */; //End_Html; // //; //////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/RootIDE/TGRootIDE.cxx:4813,extend,extend,4813,test/RootIDE/TGRootIDE.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/RootIDE/TGRootIDE.cxx,1,['extend'],['extend']
Modifiability," // To address this limitation, NaryReassociate reassociates an expression in a; // form that reuses existing instructions. As a result, NaryReassociate can; // reassociate (a + 2) + b in the example to (a + b) + 2 because it detects that; // (a + b) is computed before.; //; // NaryReassociate works as follows. For every instruction in the form of (a +; // b) + c, it checks whether a + c or b + c is already computed by a dominating; // instruction. If so, it then reassociates (a + b) + c into (a + c) + b or (b +; // c) + a and removes the redundancy accordingly. To efficiently look up whether; // an expression is computed before, we store each instruction seen and its SCEV; // into an SCEV-to-instruction map.; //; // Although the algorithm pattern-matches only ternary additions, it; // automatically handles many >3-ary expressions by walking through the function; // in the depth-first order. For example, given; //; // (a + c) + d; // ((a + b) + c) + d; //; // NaryReassociate first rewrites (a + b) + c to (a + c) + b, and then rewrites; // ((a + c) + b) + d into ((a + c) + d) + b.; //; // Finally, the above dominator-based algorithm may need to be run multiple; // iterations before emitting optimal code. One source of this need is that we; // only split an operand when it is used only once. The above algorithm can; // eliminate an instruction and decrease the usage count of its operands. As a; // result, an instruction that previously had multiple uses may become a; // single-use instruction and thus eligible for split consideration. For; // example,; //; // ac = a + c; // ab = a + b; // abc = ab + c; // ab2 = ab + b; // ab2c = ab2 + c; //; // In the first iteration, we cannot reassociate abc to ac+b because ab is used; // twice. However, we can reassociate ab2c to abc+b in the first iteration. As a; // result, ab2 becomes dead and ab will be used only once in the second; // iteration.; //; // Limitations and TODO items:; //; // 1) We only considers n-ary adds and mu",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Scalar/NaryReassociate.h:1947,rewrite,rewrites,1947,interpreter/llvm-project/llvm/include/llvm/Transforms/Scalar/NaryReassociate.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Scalar/NaryReassociate.h,4,['rewrite'],['rewrites']
Modifiability," //*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*//; // //; // //; // Set of tests for different minimization algorithms and for //; // different objects. The tests are divided into three types: //; // //; // 1. 1D and 2D Objects, including 1D and 2D histograms, 1D and 2D //; // histograms with variable bins, TGraph, TGraphErrors, TGraph2D, //; // TGraph2DErrors //; // 2. Same as before, but trying linear fitters. //; // 3. Unbinned fits with trees of different dimensions. //; // //; // Each test will performed fits with different functions and //; // different minimization algorithms selected. There is an error //; // tolerance for each one of them. There is also the possibility to //; // inspect each one of the test individually changing the //; // defaultOptions variable. //; // //; // //; // An example of output when all the tests run OK is shown below: //; // ****************************************************************************; // * Starting stress H I S T O F I T *; // ****************************************************************************; // Test 1D and 2D objects; // Test 1: 'Histogram 1D Variable' with 'GAUS'...................OK; // Test 2: 'Histogram 1D' with 'GAUS'............................OK; // Test 3: 'TGraph 1D' with 'GAUS'...............................OK; // Test 4: 'TGraphErrors 1D' with 'GAUS'.........................OK; // Test 5: 'THnSparse 1D' with 'GAUS'............................OK; // Test 6: 'Histogram 1D Variable' with 'Polynomial'.............OK; // Test 7: 'Histogram 1D' with 'Polynomial'......................OK; // Test 8: 'TGraph 1D' with 'Polynomial'.........................OK; // Test 9: 'TGraphErrors 1D' with 'Polynomial'...................OK; // Test 10: 'THnSparse 1D' with 'Polynomial'......................OK; // Test 11: 'Histogram 2D Variable' with 'gaus2D'.................OK; // Test 12: 'Histogram 2D' with 'gaus2D'..........................OK; // Test 13: 'TGraph 2D' with 'gaus",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/stressHistoFit.cxx:1297,Variab,Variable,1297,test/stressHistoFit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/stressHistoFit.cxx,1,['Variab'],['Variable']
Modifiability," /// The primary difference from normal SSA construction is that we cannot; /// _create_ PHI values that contain variable values. CodeGen has already; /// completed, and we can't alter it just to make debug-info complete. Thus:; /// we can identify function positions where we would like a PHI value for a; /// variable, but must search the MachineFunction to see whether such a PHI is; /// available. If no such PHI exists, the variable location must be dropped.; ///; /// To achieve this, we perform two kinds of analysis. First, we identify; /// every value defined by every instruction (ignoring those that only move; /// another value), then re-compute an SSA-form representation of the; /// MachineFunction, using value propagation to eliminate any un-necessary; /// PHI values. This gives us a map of every value computed in the function,; /// and its location within the register file / stack.; ///; /// Secondly, for each variable we perform the same analysis, where each debug; /// instruction is considered a def, and every instruction where the variable; /// is in lexical scope as a use. Value propagation is used again to eliminate; /// any un-necessary PHIs. This gives us a map of each variable to the value; /// it should have in a block.; ///; /// Once both are complete, we have two maps for each block:; /// * Variables to the values they should have,; /// * Values to the register / spill slot they are located in.; /// After which we can marry-up variable values with a location, and emit; /// DBG_VALUE instructions specifying those locations. Variable locations may; /// be dropped in this process due to the desired variable value not being; /// resident in any machine location, or because there is no PHI value in any; /// location that accurately represents the desired value. The building of; /// location lists for each block is left to DbgEntityHistoryCalculator.; ///; /// This pass is kept efficient because the size of the first SSA problem; /// is proportional to th",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/InstrRefBasedImpl.cpp:1941,variab,variable,1941,interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/InstrRefBasedImpl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/InstrRefBasedImpl.cpp,2,['variab'],['variable']
Modifiability," /// file is optionally prefixed with 'commonPath' if such a path is; /// provided; ///; /// \param varList Specify the dimensions of the dataset to be built.; /// This list describes the order in which these dimensions appear in the; /// ascii files to be read.; /// Each line in the ascii file should contain N white-space separated; /// tokens, with N the number of args in `varList`. Any text beyond; /// N tokens will be ignored with a warning message.; /// (NB: This is the default output of RooArgList::writeToStream()); ///; /// \param verbOpt `Q` be quiet, `D` debug mode (verbose); ///; /// \param commonPath All filenames in `fileList` will be prefixed with this optional path.; ///; /// \param indexCatName Interpret the data as belonging to category `indexCatName`.; /// When multiple files are read, a RooCategory arg in `varList` can; /// optionally be designated to hold information about the source file; /// of each data point. This feature is enabled by giving the name; /// of the (already existing) category variable in `indexCatName`.; ///; /// \attention If the value of any of the variables on a given line exceeds the; /// fit range associated with that dimension, the entire line will be; /// ignored. A warning message is printed in each case, unless the; /// `Q` verbose option is given. The number of events read and skipped; /// is always summarized at the end.; ///; /// If no further information is given a label name 'fileNNN' will; /// be assigned to each event, where NNN is the sequential number of; /// the source file in `fileList`.; ///; /// Alternatively, it is possible to override the default label names; /// of the index category by specifying them in the fileList string:; /// When instead of `file1.txt,file2.txt` the string; /// `file1.txt:FOO,file2.txt:BAR` is specified, a state named ""FOO""; /// is assigned to the index category for each event originating from; /// file1.txt. The labels FOO,BAR may be predefined in the index; /// category via define",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx:1291,variab,variable,1291,roofit/roofitcore/src/RooDataSet.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx,1,['variab'],['variable']
Modifiability," /// locations, using the VarLoc class.; ///; /// The canonical ""available expressions"" problem doesn't have expression; /// clobbering, instead when a variable is re-assigned, any expressions using; /// that variable get invalidated. LiveDebugValues can map onto ""available; /// expressions"" by having every register represented by a variable, which is; /// used in an expression that becomes available at a DBG_VALUE instruction.; /// When the register is clobbered, its variable is effectively reassigned, and; /// expressions computed from it become unavailable. A similar construct is; /// needed when a DebugVariable has its location re-specified, to invalidate; /// all other locations for that DebugVariable.; ///; /// Using the dataflow analysis to compute the available expressions, we create; /// a DBG_VALUE at the beginning of each block where the expression is; /// live-in. This propagates variable locations into every basic block where; /// the location can be determined, rather than only having DBG_VALUEs in blocks; /// where locations are specified due to an assignment or some optimization.; /// Movements of values between registers and spill slots are annotated with; /// DBG_VALUEs too to track variable values bewteen locations. All this allows; /// DbgEntityHistoryCalculator to focus on only the locations within individual; /// blocks, facilitating testing and improving modularity.; ///; /// We follow an optimisic dataflow approach, with this lattice:; ///; /// \verbatim; /// ┬ ""Unknown""; /// |; /// v; /// True; /// |; /// v; /// ⊥ False; /// \endverbatim With ""True"" signifying that the expression is available (and; /// thus a DebugVariable's location is the corresponding register), while; /// ""False"" signifies that the expression is unavailable. ""Unknown""s never; /// survive to the end of the analysis (see below).; ///; /// Formally, all DebugVariable locations that are live-out of a block are; /// initialized to \top. A blocks live-in values take the meet o",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/VarLocBasedImpl.cpp:2172,variab,variable,2172,interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/VarLocBasedImpl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/VarLocBasedImpl.cpp,1,['variab'],['variable']
Modifiability," //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // The CodeEmitterGen component for variable-length instructions.; //; // The basic CodeEmitterGen is almost exclusively designed for fixed-; // length instructions. A good analogy for its encoding scheme is how printf; // works: The (immutable) formatting string represent the fixed values in the; // encoded instruction. Placeholders (i.e. %something), on the other hand,; // represent encoding for instruction operands.; // ```; // printf(""1101 %src 1001 %dst"", <encoded value for operand `src`>,; // <encoded value for operand `dst`>);; // ```; // VarLenCodeEmitterGen in this file provides an alternative encoding scheme; // that works more like a C++ stream operator:; // ```; // OS << 0b1101;; // if (Cond); // OS << OperandEncoding0;; // OS << 0b1001 << OperandEncoding1;; // ```; // You are free to concatenate arbitrary types (and sizes) of encoding; // fragments on any bit position, bringing more flexibilities on defining; // encoding for variable-length instructions.; //; // In a more specific way, instruction encoding is represented by a DAG type; // `Inst` field. Here is an example:; // ```; // dag Inst = (descend 0b1101, (operand ""$src"", 4), 0b1001,; // (operand ""$dst"", 4));; // ```; // It represents the following instruction encoding:; // ```; // MSB LSB; // 1101<encoding for operand src>1001<encoding for operand dst>; // ```; // For more details about DAG operators in the above snippet, please; // refer to \file include/llvm/Target/Target.td.; //; // VarLenCodeEmitter will convert the above DAG into the same helper function; // generated by CodeEmitter, `MCCodeEmitter::getBinaryCodeForInstr` (except; // for few details).; //; //===--------------------------------------",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/VarLenCodeEmitterGen.cpp:1332,variab,variable-length,1332,interpreter/llvm-project/llvm/utils/TableGen/VarLenCodeEmitterGen.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/VarLenCodeEmitterGen.cpp,1,['variab'],['variable-length']
Modifiability," //; // | | Higher address; // |-----------------------------------|; // | |; // | arguments passed on the stack |; // | |; // |-----------------------------------| <- (sp at function entry); // | |; // | varargs from registers |; // | |; // |-----------------------------------|; // | |; // | prev_lr |; // | prev_fp |; // | (a.k.a. ""frame record"") |; // | |; // |- - - - - - - - - - - - - - - - - -| <- fp (r7 or r11); // | |; // | callee-saved gpr registers |; // | |; // |-----------------------------------|; // | |; // | callee-saved fp/simd regs |; // | |; // |-----------------------------------|; // |.empty.space.to.make.part.below....|; // |.aligned.in.case.it.needs.more.than| (size of this area is unknown at; // |.the.standard.8-byte.alignment.....| compile time; if present); // |-----------------------------------|; // | |; // | local variables of fixed size |; // | including spill slots |; // |-----------------------------------| <- base pointer (not defined by ABI,; // |.variable-sized.local.variables....| LLVM chooses r6); // |.(VLAs)............................| (size of this area is unknown at; // |...................................| compile time); // |-----------------------------------| <- sp; // | | Lower address; //; //; // To access the data in a frame, at-compile time, a constant offset must be; // computable from one of the pointers (fp, bp, sp) to access it. The size; // of the areas with a dotted background cannot be computed at compile-time; // if they are present, making it required to have all three of fp, bp and; // sp to be set up to be able to access all contents in the frame areas,; // assuming all of the frame areas are non-empty.; //; // For most functions, some of the frame areas are empty. For those functions,; // it may not be necessary to set up fp or bp:; // * A base pointer is definitely needed when there are both VLAs and local; // variables with more-than-default alignment requirements.; // * A frame pointer is definitely needed w",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMFrameLowering.cpp:2397,variab,variable-sized,2397,interpreter/llvm-project/llvm/lib/Target/ARM/ARMFrameLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMFrameLowering.cpp,1,['variab'],['variable-sized']
Modifiability," 1, %else ]; //; // Suppose %tid holds the thread ID. Although %a is not data dependent on %tid; // because %tid is not on its use-def chains, %a is sync dependent on %tid; // because the branch ""br i1 %cond"" depends on %tid and affects which value %a; // is assigned to.; //; //; // -- Reduction to SSA construction --; // There are two disjoint paths from A to X, if a certain variant of SSA; // construction places a phi node in X under the following set-up scheme.; //; // This variant of SSA construction ignores incoming undef values.; // That is paths from the entry without a definition do not result in; // phi nodes.; //; // entry; // / \; // A \; // / \ Y; // B C /; // \ / \ /; // D E; // \ /; // F; //; // Assume that A contains a divergent branch. We are interested; // in the set of all blocks where each block is reachable from A; // via two disjoint paths. This would be the set {D, F} in this; // case.; // To generally reduce this query to SSA construction we introduce; // a virtual variable x and assign to x different values in each; // successor block of A.; //; // entry; // / \; // A \; // / \ Y; // x = 0 x = 1 /; // \ / \ /; // D E; // \ /; // F; //; // Our flavor of SSA construction for x will construct the following; //; // entry; // / \; // A \; // / \ Y; // x0 = 0 x1 = 1 /; // \ / \ /; // x2 = phi E; // \ /; // x3 = phi; //; // The blocks D and F contain phi nodes and are thus each reachable; // by two disjoins paths from A.; //; // -- Remarks --; // * In case of cycle exits we need to check for temporal divergence.; // To this end, we check whether the definition of x differs between the; // cycle exit and the cycle header (_after_ SSA construction).; //; // * In the presence of irreducible control flow, the fixed point is; // reached only after multiple iterations. This is because labels; // reaching the header of a cycle must be repropagated through the; // cycle. This is true even in a reducible cycle, since the labels; // may have been produced by ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/GenericUniformityImpl.h:2302,variab,variable,2302,interpreter/llvm-project/llvm/include/llvm/ADT/GenericUniformityImpl.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/GenericUniformityImpl.h,1,['variab'],['variable']
Modifiability, 2: 'Histogram 1D' with 'GAUS'............................OK; // Test 3: 'TGraph 1D' with 'GAUS'...............................OK; // Test 4: 'TGraphErrors 1D' with 'GAUS'.........................OK; // Test 5: 'THnSparse 1D' with 'GAUS'............................OK; // Test 6: 'Histogram 1D Variable' with 'Polynomial'.............OK; // Test 7: 'Histogram 1D' with 'Polynomial'......................OK; // Test 8: 'TGraph 1D' with 'Polynomial'.........................OK; // Test 9: 'TGraphErrors 1D' with 'Polynomial'...................OK; // Test 10: 'THnSparse 1D' with 'Polynomial'......................OK; // Test 11: 'Histogram 2D Variable' with 'gaus2D'.................OK; // Test 12: 'Histogram 2D' with 'gaus2D'..........................OK; // Test 13: 'TGraph 2D' with 'gaus2D'.............................OK; // Test 14: 'TGraphErrors 2DGE' with 'gaus2D'.....................OK; // Test 15: 'THnSparse 2D' with 'gaus2D'..........................OK; // Test Linear fits; // Test 16: 'Histogram 1D Variable' with 'Polynomial'.............OK; // Test 17: 'Histogram 1D' with 'Polynomial'......................OK; // Test 18: 'TGraph 1D' with 'Polynomial'.........................OK; // Test 19: 'TGraphErrors 1D' with 'Polynomial'...................OK; // Test 20: 'THnSparse 1D' with 'Polynomial'......................OK; // Test 21: 'Histogram 2D Variable' with 'Poly2D'.................OK; // Test 22: 'Histogram 2D' with 'Poly2D'..........................OK; // Test 23: 'TGraph 2D' with 'Poly2D'.............................OK; // Test 24: 'TGraphErrors 2DGE' with 'Poly2D'.....................OK; // Test 25: 'THnSparse 2D' with 'Poly2D'..........................OK; // Test unbinned fits; // Test 26: 'tree' with 'gausn'...................................OK; // Test 27: 'tree' with 'gaus2Dn'.................................OK; // Test 28: 'tree' with 'gausND'..................................OK; // ****************************************************************************; /,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/stressHistoFit.cxx:2360,Variab,Variable,2360,test/stressHistoFit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/stressHistoFit.cxx,1,['Variab'],['Variable']
Modifiability," 32 bit signed integer (`Int_t`); - `i` : a 32 bit unsigned integer (`UInt_t`); - `F` : a 32 bit floating point (`Float_t`); - `f` : a 24 bit floating point with truncated mantissa (`Float16_t`); - `D` : a 64 bit floating point (`Double_t`); - `d` : a 24 bit truncated floating point (`Double32_t`); - `L` : a 64 bit signed integer (`Long64_t`); - `l` : a 64 bit unsigned integer (`ULong64_t`); - `G` : a long signed integer, stored as 64 bit (`Long_t`); - `g` : a long unsigned integer, stored as 64 bit (`ULong_t`); - `O` : [the letter `o`, not a zero] a boolean (`bool`). Examples:; - A int: ""myVar/I""; - A float array with fixed size: ""myArrfloat[42]/F""; - An double array with variable size, held by the `myvar` column: ""myArrdouble[myvar]/D""; - An Double32_t array with variable size, held by the `myvar` column , with values between 0 and 16: ""myArr[myvar]/d[0,10]""; - The `myvar` column, which holds the variable size, **MUST** be an `Int_t` (/I). - If the address points to a single numerical variable, the leaflist is optional:; ~~~ {.cpp}; int value;; tree->Branch(branchname, &value);; ~~~; - If the address points to more than one numerical variable, we strongly recommend; that the variable be sorted in decreasing order of size. Any other order will; result in a non-portable TTree (i.e. you will not be able to read it back on a; platform with a different padding strategy).; We recommend to persistify objects rather than composite leaflists.; - In case of the truncated floating point types (Float16_t and Double32_t) you can; furthermore specify the range in the style [xmin,xmax] or [xmin,xmax,nbits] after; the type character. For example, for storing a variable size array `myArr` of; `Double32_t` with values within a range of `[0, 2*pi]` and the size of which is stored; in an `Int_t` (/I) branch called `myArrSize`, the syntax for the `leaflist` string would; be: `myArr[myArrSize]/d[0,twopi]`. Of course the number of bits could be specified,; the standard rules of opaque t",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:5494,variab,variable,5494,tree/tree/src/TTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx,1,['variab'],['variable']
Modifiability," <evt@uni-bonn.de> - U of Bonn, Germany *; * Jan Therhaag <Jan.Therhaag@cern.ch> - U of Bonn, Germany *; * *; * Copyright (c) 2005-2011: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (http://mva.sourceforge.net/license.txt) *; * *; **********************************************************************************/; /*! \class TMVA::DecisionTree; \ingroup TMVA. Implementation of a Decision Tree. In a decision tree successive decision nodes are used to categorize the; events out of the sample as either signal or background. Each node; uses only a single discriminating variable to decide if the event is; signal-like (""goes right"") or background-like (""goes left""). This; forms a tree like structure with ""baskets"" at the end (leave nodes),; and an event is classified as either signal or background according to; whether the basket where it ends up has been classified signal or; background during the training. Training of a decision tree is the; process to define the ""cut criteria"" for each node. The training; starts with the root node. Here one takes the full training event; sample and selects the variable and corresponding cut value that gives; the best separation between signal and background at this stage. Using; this cut criterion, the sample is then divided into two subsamples, a; signal-like (right) and a background-like (left) sample. Two new nodes; are then created for each of the two sub-samples and they are; constructed using the same mechanism as described for the root; node. The devision is stopped once a certain node has reached either a; minimum number of events, or a minimum or maximum signal purity. These; leave nodes are then called ""signal"" or ""background"" if they contain; more signal respective background events from the training sample. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/DecisionTree.cxx:1971,variab,variable,1971,tmva/tmva/src/DecisionTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/DecisionTree.cxx,1,['variab'],['variable']
Modifiability," <td> Select fill style, default is not filled. If a filled style is selected,; /// also use VLines() to add vertical downward lines at end of curve to ensure proper closure; /// <tr><td> `FillColor(Int_t color)` <td> Select fill color by ROOT color code; /// <tr><td> `Range(const char* name)` <td> Only draw curve in range defined by given name. Multiple comma-separated ranges can be given.; /// An empty string """" or `nullptr` means to use the default range of the variable.; /// <tr><td> `Range(double lo, double hi)` <td> Only draw curve in specified range; /// <tr><td> `VLines()` <td> Add vertical lines to y=0 at end points of curve; /// <tr><td> `Precision(double eps)` <td> Control precision of drawn curve w.r.t to scale of plot, default is 1e-3. A higher precision will; /// result in more and more densely spaced curve points. A negative precision value will disable; /// adaptive point spacing and restrict sampling to the grid point of points defined by the binning; /// of the plotted observable (recommended for expensive functions such as profile likelihoods); /// <tr><td> `Invisible(bool flag)` <td> Add curve to frame, but do not display. Useful in combination AddTo(); /// <tr><td> `VisualizeError(const RooFitResult& fitres, double Z=1, bool linearMethod=true)`; /// <td> Visualize the uncertainty on the parameters, as given in fitres, at 'Z' sigma.; /// The linear method is fast but may not be accurate in the presence of strong correlations (~>0.9) and at Z>2 due to linear and Gaussian approximations made.; /// Intervals from the sampling method can be asymmetric, and may perform better in the presence of strong correlations, but may take (much) longer to calculate; /// \note To include the uncertainty from the expected number of events,; /// the Normalization() argument with `ScaleType` `RooAbsReal::RelativeExpected` has to be passed, e.g.; /// ```{.cpp}; /// pdf.plotOn(frame, VisualizeError(fitResult), Normalization(1.0, RooAbsReal::RelativeExpected));; /// ``",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx:6779,adapt,adaptive,6779,roofit/roofitcore/src/RooAbsPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx,1,['adapt'],['adaptive']
Modifiability," A program has excellent documentation that ANYONE can read.; 2) A program when released has no strange ""features"" or bugs.; 3) A program is robust and handles ALL extreme and unusual cases.; 4) A program is written in phases and modules with hard tests for each one.; 5) A program is written for any user who doesn't need special knowledge; to use the program.; 6) A program has well defined user requirements and functional specifications.; 7) A program is written with regard to future expansion and integreation; with other systems (portability). When programming following these additional principles make programs easier; to maintain. A) Choose variable names that accurately describes what the variable does/is.; B) Write comments to inform someone faced with the task of modifying your code.; C) Avoid excessive comments. Write the code so that it says what it does.; D) Follow a strict one-in, one-out flow of control structues except in the; case of fatal error conditions.; E) Avoid using global variables.; F) Do not cause side effects to variables that were not parameters to a; function.; G) Have a single function perform a single purpose.; H) Select a single indentation style and stick with it.; I) Use a consistent naming convention. The following principles help me when I try optimizing code:. a) If optimizing, use a profiler to determine which sections of code most of; the time is spent in. Spend most of your effort in the most used sections.; Don't bother optimizing a procedure using less than 10% of the time. b) High level optimizations are far more effective than cycle shaving.; (e.g. use quick sort instead of optimizing a bubble sort.). c) Be flexible in your approach to solving a problem. List exactly what you; need as a result at a minimum. Get rid of unnecessary assumptions. d) Become familiar with sets of operations that are equivalent, or nearly so.; Learn the relative expense of basic operations. e) If possible, be careful not to needlessly sacrifice signi",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/x3d/src/x3d.c:2480,variab,variables,2480,graf3d/x3d/src/x3d.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/x3d/src/x3d.c,1,['variab'],['variables']
Modifiability," DAG and drives list; // scheduling while updating the instruction stream, register pressure, and live; // intervals. Most targets don't need to override the DAG builder and list; // scheduler, but subtargets that require custom scheduling heuristics may; // plugin an alternate MachineSchedStrategy. The strategy is responsible for; // selecting the highest priority node from the list:; //; // ScheduleDAGInstrs *<Target>PassConfig::; // createMachineScheduler(MachineSchedContext *C) {; // return new ScheduleDAGMILive(C, CustomStrategy(C));; // }; //; // The DAG builder can also be customized in a sense by adding DAG mutations; // that will run after DAG building and before list scheduling. DAG mutations; // can adjust dependencies based on target-specific knowledge or add weak edges; // to aid heuristics:; //; // ScheduleDAGInstrs *<Target>PassConfig::; // createMachineScheduler(MachineSchedContext *C) {; // ScheduleDAGMI *DAG = createGenericSchedLive(C);; // DAG->addMutation(new CustomDAGMutation(...));; // return DAG;; // }; //; // A target that supports alternative schedulers can use the; // MachineSchedRegistry to allow command line selection. This can be done by; // implementing the following boilerplate:; //; // static ScheduleDAGInstrs *createCustomMachineSched(MachineSchedContext *C) {; // return new CustomMachineScheduler(C);; // }; // static MachineSchedRegistry; // SchedCustomRegistry(""custom"", ""Run my target's custom scheduler"",; // createCustomMachineSched);; //; //; // Finally, subtargets that don't need to implement custom heuristics but would; // like to configure the GenericScheduler's policy for a given scheduler region,; // including scheduling direction and register pressure tracking policy, can do; // this:; //; // void <SubTarget>Subtarget::; // overrideSchedPolicy(MachineSchedPolicy &Policy,; // unsigned NumRegionInstrs) const {; // Policy.<Flag> = true;; // }; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineScheduler.h:2672,config,configure,2672,interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineScheduler.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineScheduler.h,1,['config'],['configure']
Modifiability," Even if a result depends on multiple variations, only one variation is applied at a time, i.e. there will be no result produced; by applying multiple systematic variations at the same time.; For example, in the following example snippet, the RResultMap instance `all_h` will contain keys ""nominal"", ""pt:down"",; ""pt:up"", ""eta:0"", ""eta:1"", but no ""pt:up&&eta:0"" or similar:. ~~~{.cpp}; auto df = _df.Vary(""pt"",; ""ROOT::RVecD{pt*0.9, pt*1.1}"",; {""down"", ""up""}); .Vary(""eta"",; [](float eta) { return RVecF{eta*0.9f, eta*1.1f}; },; {""eta""},; 2);. auto nom_h = df.Histo2D(histoModel, ""pt"", ""eta"");; auto all_hs = VariationsFor(nom_h);; all_hs.GetKeys(); // returns {""nominal"", ""pt:down"", ""pt:up"", ""eta:0"", ""eta:1""}; ~~~. Note how we passed the integer `2` instead of a list of variation tags to the second Vary() invocation: this is a; shorthand that automatically generates tags 0 to N-1 (in this case 0 and 1). \note Currently, VariationsFor() and RResultMap are in the `ROOT::RDF::Experimental` namespace, to indicate that these; interfaces might still evolve and improve based on user feedback. We expect that some aspects of the related; programming model will be streamlined in future versions. \note Currently, the results of a Snapshot(), Report() or Display() call cannot be varied (i.e. it is not possible to; call \ref ROOT::RDF::Experimental::VariationsFor ""VariationsFor()"" on them. These limitations will be lifted in future releases. See the Vary() method for more information and [this tutorial](https://root.cern/doc/master/df106__HiggsToFourLeptons_8C.html) ; for an example usage of Vary and \ref ROOT::RDF::Experimental::VariationsFor ""VariationsFor()"" in the analysis. \anchor rnode; ### RDataFrame objects as function arguments and return values; RDataFrame variables/nodes are relatively cheap to copy and it's possible to both pass them to (or move them into); functions and to return them from functions. However, in general each dataframe node will have a different C++ type,; wh",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx:59510,evolve,evolve,59510,tree/dataframe/src/RDataFrame.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx,1,['evolve'],['evolve']
Modifiability," For example with Event.root, if; /// ~~~{.cpp}; /// Double_t somepx = fTracks.fPx[2];; /// ~~~; /// is executed by one of the method of the skeleton,; /// somepx will be updated with the current value of fPx of the 3rd track.; ///; /// Both macrofilename and the optional cutfilename are expected to be; /// the name of source files which contain at least a free standing; /// function with the signature:; /// ~~~{.cpp}; /// x_t macrofilename(); // i.e function with the same name as the file; /// ~~~; /// and; /// ~~~{.cpp}; /// y_t cutfilename(); // i.e function with the same name as the file; /// ~~~; /// x_t and y_t needs to be types that can convert respectively to a double; /// and a bool (because the skeleton uses:; /// ~~~{.cpp}; /// if (cutfilename()) htemp->Fill(macrofilename());; /// ~~~; /// This 2 functions are run in a context such that the branch names are; /// available as local variables of the correct (read-only) type.; ///; /// Note that if you use the same 'variable' twice, it is more efficient; /// to 'cache' the value. For example; /// ~~~{.cpp}; /// Int_t n = fEventNumber; // Read fEventNumber; /// if (n<10 || n>10) { ... }; /// ~~~; /// is more efficient than; /// ~~~{.cpp}; /// if (fEventNumber<10 || fEventNumber>10); /// ~~~; /// Access to TClonesArray.; ///; /// If a branch (or member) is a TClonesArray (let's say fTracks), you; /// can access the TClonesArray itself by using ->:; /// ~~~{.cpp}; /// fTracks->GetLast();; /// ~~~; /// However this will load the full TClonesArray object and its content.; /// To quickly read the size of the TClonesArray use (note the dot):; /// ~~~{.cpp}; /// fTracks.GetEntries();; /// ~~~; /// This will read only the size from disk if the TClonesArray has been; /// split.; /// To access the content of the TClonesArray, use the [] operator:; /// ~~~; /// float px = fTracks[i].fPx; // fPx of the i-th track; /// ~~~; /// Warning:; ///; /// The variable actually use for access are 'wrapper' around the; /// real data",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx:2914,variab,variable,2914,tree/treeplayer/src/TTreePlayer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx,1,['variab'],['variable']
Modifiability," In case of a 2-Dim expression, one can generate a TProfile histogram; /// instead of a TH2F histogram by specifying option=prof or option=profs; /// or option=profi or option=profg ; the trailing letter select the way; /// the bin error are computed, See TProfile2D::SetErrorOption for; /// details on the differences.; /// The option=prof is automatically selected in case of y:x>>pf; /// where pf is an existing TProfile histogram.; ///; /// ### Making a 2D Profile histogram; ///; /// In case of a 3-Dim expression, one can generate a TProfile2D histogram; /// instead of a TH3F histogram by specifying option=prof or option=profs.; /// or option=profi or option=profg ; the trailing letter select the way; /// the bin error are computed, See TProfile2D::SetErrorOption for; /// details on the differences.; /// The option=prof is automatically selected in case of z:y:x>>pf; /// where pf is an existing TProfile2D histogram.; ///; /// ### Making a 5D plot using GL; ///; /// If option GL5D is specified together with 5 variables, a 5D plot is drawn; /// using OpenGL. See $ROOTSYS/tutorials/tree/staff.C as example.; ///; /// ### Making a parallel coordinates plot; ///; /// In case of a 2-Dim or more expression with the option=para, one can generate; /// a parallel coordinates plot. With that option, the number of dimensions is; /// arbitrary. Giving more than 4 variables without the option=para or; /// option=candle or option=goff will produce an error.; ///; /// ### Making a candle sticks chart; ///; /// In case of a 2-Dim or more expression with the option=candle, one can generate; /// a candle sticks chart. With that option, the number of dimensions is; /// arbitrary. Giving more than 4 variables without the option=para or; /// option=candle or option=goff will produce an error.; ///; /// ### Normalizing the output histogram to 1; ///; /// When option contains ""norm"" the output histogram is normalized to 1.; ///; /// ### Saving the result of Draw to a TEventList, a TEntryList",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:20936,variab,variables,20936,tree/tree/src/TTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx,1,['variab'],['variables']
Modifiability," It is possible that the apparent lack of positive-definiteness is in fact; only due to excessive roundoff errors in numerical calculations in the; user function or not enough precision. This is unlikely in general, but; becomes more likely if the number of free parameters is very large, or if. the parameters are badly scaled (not all of the same order of magnitude),; and correlations are also large. In any case, whether the; non-positive-definiteness is real or only numerical is largely irrelevant,; since in both cases the error matrix will be unreliable and the minimum; suspicious. ##### An ill-posed problem:. For questions of parameter dependence, see the discussion above on; positive-definiteness. Possible other mathematical problems are the following:. ##### Excessive numerical roundoff:. Be especially careful of exponential and factorial functions which get big; very quickly and lose accuracy. ##### Starting too far from the solution:. The function may have unphysical local minima, especially at infinity in; some variables. ##### Minuit parameter errors in the presence of limits; This concerns the way Minuit reports the symmetric (or parabolic) errors; on parameters. It does not apply to the errors reported from Minos, which; are in general asymmetric. The symmetric errors reported by Minuit are always calculated from; the covariance matrix, assuming that this matrix has been calculated,; usually as the result of a Migrad minimization or a direct; calculation by Hesse which inverts the second derivative matrix. When there are no limits on the parameter in question, the error reported; by Minuit should therefore be exactly equal to the square root of the; corresponding diagonal element of the error matrix reported by Minuit. However, when there are limits on the parameter, there is a transformation; between the internal parameter values seen by Minuit (which are unbounded); and the external parameter values seen by the user in FCN (which remain; inside the desi",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TMinuit.cxx:12259,variab,variables,12259,math/minuit/src/TMinuit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TMinuit.cxx,1,['variab'],['variables']
Modifiability," LDS variables are expanded to instructions. This; // may need amending when implementing non-undef initialisers.; //; // Lowering is split between this IR pass and the back end. This pass chooses; // where given variables should be allocated and marks them with metadata,; // MD_absolute_symbol. The backend places the variables in coincidentally the; // same location and raises a fatal error if something has gone awry. This works; // in practice because the only pass between this one and the backend that; // changes LDS is PromoteAlloca and the changes it makes do not conflict.; //; // Addresses are written to constant global arrays based on the same metadata.; //; // The backend lowers LDS variables in the order of traversal of the function.; // This is at odds with the deterministic layout required. The workaround is to; // allocate the fixed-address variables immediately upon starting the function; // where they can be placed as intended. This requires a means of mapping from; // the function to the variables that it allocates. For the module scope lds,; // this is via metadata indicating whether the variable is not required. If a; // pass deletes that metadata, a fatal error on disagreement with the absolute; // symbol metadata will occur. For kernel scope and dynamic, this is by _name_; // correspondence between the function and the variable. It requires the; // kernel to have a name (which is only a limitation for tests in practice) and; // for nothing to rename the corresponding symbols. This is a hazard if the pass; // is run multiple times during debugging. Alternative schemes considered all; // involve bespoke metadata.; //; // If the name correspondence can be replaced, multiple distinct kernels that; // have the same memory layout can map to the same kernel id (as the address; // itself is handled by the absolute symbol metadata) and that will allow more; // uses of the ""kernel"" style faster lowering and reduce the size of the lookup; // tables.; //; // T",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerModuleLDSPass.cpp:8533,variab,variables,8533,interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerModuleLDSPass.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerModuleLDSPass.cpp,1,['variab'],['variables']
Modifiability," Optional: defaults to 1.0; compatibility-version: 1.0 # Optional: defaults to 1.0; swift-version: 0 # Optional: defaults to 0; objc-constraint: retain_release # Optional: defaults to retain_release; parent-umbrella: # Optional:; exports: # List of export sections; ...; undefineds: # List of undefineds sections; ... Each export section is defined as following:. - archs: [ arm64 ] # the list of architecture slices; allowed-clients: [ client ] # Optional: List of clients; re-exports: [ ] # Optional: List of re-exports; symbols: [ _sym ] # Optional: List of symbols; objc-classes: [] # Optional: List of Objective-C classes; objc-ivars: [] # Optional: List of Objective C Instance; # Variables; weak-def-symbols: [] # Optional: List of weak defined symbols; thread-local-symbols: [] # Optional: List of thread local symbols. Each undefineds section is defined as following:; - archs: [ arm64 ] # the list of architecture slices; symbols: [ _sym ] # Optional: List of symbols; objc-classes: [] # Optional: List of Objective-C classes; objc-ivars: [] # Optional: List of Objective C Instance Variables; weak-ref-symbols: [] # Optional: List of weak defined symbols; */; /*. YAML Format specification. --- !tapi-tbd-v3; archs: [ armv7, armv7s, arm64 ] # the list of architecture slices that are; # supported by this file.; uuids: [ armv7:... ] # Optional: List of architecture and UUID pairs.; platform: ios # Specifies the platform (macosx, ios, etc); flags: [] # Optional:; install-name: /u/l/libfoo.dylib #; current-version: 1.2.3 # Optional: defaults to 1.0; compatibility-version: 1.0 # Optional: defaults to 1.0; swift-abi-version: 0 # Optional: defaults to 0; objc-constraint: retain_release # Optional: defaults to retain_release; parent-umbrella: # Optional:; exports: # List of export sections; ...; undefineds: # List of undefineds sections; ... Each export section is defined as following:. - archs: [ arm64 ] # the list of architecture slices; allowed-clients: [ client ] # Optional: List",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/TextAPI/TextStub.cpp:2667,Variab,Variables,2667,interpreter/llvm-project/llvm/lib/TextAPI/TextStub.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/TextAPI/TextStub.cpp,1,['Variab'],['Variables']
Modifiability," Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; ///; /// \file VarLocBasedImpl.cpp; ///; /// LiveDebugValues is an optimistic ""available expressions"" dataflow; /// algorithm. The set of expressions is the set of machine locations; /// (registers, spill slots, constants, and target indices) that a variable; /// fragment might be located, qualified by a DIExpression and indirect-ness; /// flag, while each variable is identified by a DebugVariable object. The; /// availability of an expression begins when a DBG_VALUE instruction specifies; /// the location of a DebugVariable, and continues until that location is; /// clobbered or re-specified by a different DBG_VALUE for the same; /// DebugVariable.; ///; /// The output of LiveDebugValues is additional DBG_VALUE instructions,; /// placed to extend variable locations as far they're available. This file; /// and the VarLocBasedLDV class is an implementation that explicitly tracks; /// locations, using the VarLoc class.; ///; /// The canonical ""available expressions"" problem doesn't have expression; /// clobbering, instead when a variable is re-assigned, any expressions using; /// that variable get invalidated. LiveDebugValues can map onto ""available; /// expressions"" by having every register represented by a variable, which is; /// used in an expression that becomes available at a DBG_VALUE instruction.; /// When the register is clobbered, its variable is effectively reassigned, and; /// expressions computed from it become unavailable. A similar construct is; /// needed when a DebugVariable has its location re-specified, to invalidate; /// all other locations for that DebugVariable.; ///; /// Using the dataflow analysis to compute the available expressions, we create; /// a DBG_VALUE at the beginning of",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/VarLocBasedImpl.cpp:1127,extend,extend,1127,interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/VarLocBasedImpl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/VarLocBasedImpl.cpp,2,"['extend', 'variab']","['extend', 'variable']"
Modifiability," Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class RooStats::NeymanConstruction; \ingroup Roostats. NeymanConstruction is a concrete implementation of the NeymanConstruction; interface that, as the name suggests, performs a NeymanConstruction. It produces; a RooStats::PointSetInterval, which is a concrete implementation of the; ConfInterval interface. The Neyman Construction is not a uniquely defined statistical technique, it; requires that one specify an ordering rule or ordering principle, which is; usually incoded by choosing a specific test statistic and limits of integration; (corresponding to upper/lower/central limits). As a result, this class must be; configured with the corresponding information before it can produce an interval.; Common configurations, such as the Feldman-Cousins approach, can be enforced by; other light weight classes. The Neyman Construction considers every point in the parameter space; independently, no assumptions are made that the interval is connected or of a; particular shape. As a result, the PointSetInterval class is used to represent; the result. The user indicate which points in the parameter space to perform; the construction by providing a PointSetInterval instance with the desired points. This class is fairly light weight, because the choice of parameter points to be; considered is factorized and so is the creation of the sampling distribution of; the test statistic (which is done by a concrete class implementing the; DistributionCreator interface). As a result, this class basically just drives the; construction by:. - using a DistributionCreator to create the SamplingDistribution of a user-; defined test statistic for each parameter point of interest,; - defining the acceptance region in the data by finding the thresholds on the; t",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/NeymanConstruction.cxx:1140,config,configurations,1140,roofit/roostats/src/NeymanConstruction.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/NeymanConstruction.cxx,1,['config'],['configurations']
Modifiability," TEfficiency::Draw method.; At the moment drawing is only supported for 1- and 2-dimensional TEfficiency objects.; In the 1-dimensional case, you can use the same options as for the TGraphAsymmErrors::Draw; method. For 2-dimensional TEfficiency objects, you can pass the same options as; for a TH2::Draw object. \anchor EFF064; ### VI.4 TEfficiency object's axis customisation; The axes of a TEfficiency object can be accessed and customised by calling the; GetPaintedGraph method and then GetXaxis() or GetYaxis() and the corresponding TAxis; methods.; Note that in order to access the painted graph via GetPaintedGraph(), one should either; call Paint or, better, gPad->Update(). Begin_Macro(source); {; //canvas only needed for this documentation; TCanvas* c1 = new TCanvas(""example"","""",600,400);; c1->SetFillStyle(1001);; c1->SetFillColor(kWhite);; c1->Divide(2,1);. //create one-dimensional TEfficiency object with fixed bin size; TEfficiency* pEff = new TEfficiency(""eff"",""my efficiency;x;#epsilon"",20,0,10);; TRandom3 rand3;. bool bPassed;; double x;; for(int i=0; i<10000; ++i); {; //simulate events with variable under investigation; x = rand3.Uniform(10);; //check selection: bPassed = DoesEventPassSelection(x); bPassed = rand3.Rndm() < TMath::Gaus(x,5,4);; pEff->Fill(bPassed,x);; }; c1->cd(1);; pEff->Draw(""AP"");; c1->cd(2);; pEff->Draw(""AP"");; gPad->Update();; pEff->GetPaintedGraph()->GetXaxis()->SetTitleSize(0.05);; pEff->GetPaintedGraph()->GetXaxis()->SetLabelFont(42);; pEff->GetPaintedGraph()->GetXaxis()->SetLabelSize(0.05);; pEff->GetPaintedGraph()->GetYaxis()->SetTitleOffset(0.85);; pEff->GetPaintedGraph()->GetYaxis()->SetTitleSize(0.05);; pEff->GetPaintedGraph()->GetYaxis()->SetLabelFont(42);; pEff->GetPaintedGraph()->GetYaxis()->SetLabelSize(0.05);; pEff->GetPaintedGraph()->GetXaxis()->SetRangeUser(3,7);; }; End_Macro. */; ////////////////////////////////////////////////////////////////////////////////; /// Default constructor; ///; /// Should not be used explicitly",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TEfficiency.cxx:25538,variab,variable,25538,hist/hist/src/TEfficiency.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TEfficiency.cxx,1,['variab'],['variable']
Modifiability," The currently loaded macro can be compiled with ACLiC if you select; Tools menu / Compile Macro; by clicking on the corresponding; toolbar button, or by using Ctrl+F7 accelerator keys.; This is identical to the command "".L macro.C++"" in the root prompt; command line. #### Interrupting a Running Macro. You can interrupt a running macro by selecting the Tools menu /; Interrupt; by clicking on the corresponding toolbar button, or by; using Shift+F5 accelerator keys. #### Interface to CINT Interpreter. Any command entered in the Command combo box will be passed to; the CINT interpreter. This combo box will keep the commands history; and will allow you to re-execute the same commands during an editor; session. #### Keyboard Bindings. The following table lists the keyboard shortcuts and accelerator; keys. | Key: | Action |; |---------------|----------------|; | Up | Move cursor up. |; | Shift+Up | Move cursor up and extend selection. |; | Down | Move cursor down. |; | Shift+Down | Move cursor down and extend selection. |; | Left | Move cursor left. |; | Shift+Left | Move cursor left and extend selection. |; | Right | Move cursor right. |; | Shift+Right | Move cursor right and extend selection. |; | Home | Move cursor to begin of line. |; | Shift+Home | Move cursor to begin of line and extend selection. |; | Ctrl+Home | Move cursor to top of page. |; | End | Move cursor to end of line. |; | Shift+End | Move cursor to end of line and extend selection. |; | Ctrl+End | Move cursor to end of page. |; | PgUp | Move cursor up one page. |; | Shift+PgUp | Move cursor up one page and extend selection. |; | PgDn | Move cursor down one page. |; | Shift+PgDn | Move cursor down one page and extend selection. |; | Delete | Delete character after cursor, or text selection. |; | BackSpace | Delete character before cursor, or text selection. |; | Ctrl+B | Move cursor left. |; | Ctrl+D | Delete character after cursor, or text selection. |; | Ctrl+E | Move cursor to end of line. |; | Ctrl+H ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGTextEditor.cxx:4498,extend,extend,4498,gui/gui/src/TGTextEditor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGTextEditor.cxx,1,['extend'],['extend']
Modifiability," XPM, JPEG, PNG, TIFF, GIF; * via built in code :; * XPM, XCF, PNM, PPM, BMP, ICO, CUR; * Note that XPM can be supported both via built-in code or via libXpm,; * depending on compilation configuration.; * Actuall image file format is autodetected from the file contents -; * file name extention is not used and can be anything at all.; *; * 6. Image export into many popular file formats. Currently implemented :; * XPM, JPEG, PNG, GIF. Work is underway to implement support for TIFF,; * XCF, BMP, ICO.; *; * 7. Image quantization to arbitrary size colormap.; *; * 8. libAfterImage could be used without X window system, which is; * coninient for such thing as web development. XML Image manipulation; * tool, that could be used in such activity is included (see ascompose.c); *; * 9. Image reference counting; *; * USES; * libAfterBase - AfterStep basic functionality library. That Includes; * Hash tables, file search methods, message output, generic types.; * However effort has been made to allow for standalone configuration as; * well. If libAfterBase is not found at compilation time - libAfterImage; * will use extract from libAfterBase included with libAfterImage.; *; * SEE ALSO; * Examples; * API Reference; *; * TODO; * Implement support for Targa and PCX image format and maybe some other; * formats as well.; *; * Implement complete support for I18N internationalization.; *; * Implement color<->pixel conversion for all colordepths.; *; * AUTHOR; * Sasha Vasko <sasha at aftercode dot net>; *********/; /****h* libAfterImage/Examples; * EXAMPLE; * ASView - image loading from the file and displaying in window.; * ASScale - image loading from file and scaling to arbitrary size.; * ASTile - image loading from file, tiling and tinting to arbitrary; * size and color.; * ASMerge - imgae loading and merging with another image.; * ASGrad - mutlipoint gradient drawing.; * ASFlip - image loading from file and rotation.; * ASText - trexturized semitransparent antialised text drawing.; *;",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/afterimage.h:5320,config,configuration,5320,graf2d/asimage/src/libAfterImage/afterimage.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/afterimage.h,1,['config'],['configuration']
Modifiability," `TH2PolyBin` is a very simple class containing the vertices (stored; as `TGraph`s or `TMultiGraph`s ) and contents of the polygonal; bin as well as several related functions. Essentially, a `TH2Poly` is a TList of `TH2PolyBin` objects; with methods to manipulate them. Bins are defined using one of the `AddBin()` methods. The bin definition; should be done before filling. The histogram can be filled with `Fill(Double_t x, Double_t y, Double_t w); `. `w` is the weight.; If no weight is specified, it is assumed to be 1. Not all histogram's area need to be binned. Filling an area without bins,; will falls into the overflows. Adding a bin is not retroactive; it doesn't; affect previous fillings. A `Fill()` call, that; was previously ignored due to the lack of a bin at the specified location, is; not reconsidered when that location is binned later. If there are two overlapping bins, the first one in the list will be incremented; by `Fill()`. The histogram may automatically extends its limits if a bin outside the; histogram limits is added. This is done when the default constructor (with no; arguments) is used. It generates a histogram with no limits along the X and Y; axis. Adding bins to it will extend it up to a proper size. `TH2Poly` implements a partitioning algorithm to speed up bins' filling; (see the ""Partitioning Algorithm"" section for details).; The partitioning algorithm divides the histogram into regions called cells.; The bins that each cell intersects are recorded in an array of `TList`s.; When a coordinate in the histogram is to be filled; the method (quickly) finds; which cell the coordinate belongs. It then only loops over the bins; intersecting that cell to find the bin the input coordinate corresponds to.; The partitioning of the histogram is updated continuously as each bin is added.; The default number of cells on each axis is 25. This number could be set to; another value in the constructor or adjusted later by calling the; `ChangePartition(Int_t, In",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH2Poly.cxx:1228,extend,extends,1228,hist/hist/src/TH2Poly.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH2Poly.cxx,1,['extend'],['extends']
Modifiability," `TH2PolyBin` objects; with methods to manipulate them. Bins are defined using one of the `AddBin()` methods. The bin definition; should be done before filling. The histogram can be filled with `Fill(Double_t x, Double_t y, Double_t w); `. `w` is the weight.; If no weight is specified, it is assumed to be 1. Not all histogram's area need to be binned. Filling an area without bins,; will falls into the overflows. Adding a bin is not retroactive; it doesn't; affect previous fillings. A `Fill()` call, that; was previously ignored due to the lack of a bin at the specified location, is; not reconsidered when that location is binned later. If there are two overlapping bins, the first one in the list will be incremented; by `Fill()`. The histogram may automatically extends its limits if a bin outside the; histogram limits is added. This is done when the default constructor (with no; arguments) is used. It generates a histogram with no limits along the X and Y; axis. Adding bins to it will extend it up to a proper size. `TH2Poly` implements a partitioning algorithm to speed up bins' filling; (see the ""Partitioning Algorithm"" section for details).; The partitioning algorithm divides the histogram into regions called cells.; The bins that each cell intersects are recorded in an array of `TList`s.; When a coordinate in the histogram is to be filled; the method (quickly) finds; which cell the coordinate belongs. It then only loops over the bins; intersecting that cell to find the bin the input coordinate corresponds to.; The partitioning of the histogram is updated continuously as each bin is added.; The default number of cells on each axis is 25. This number could be set to; another value in the constructor or adjusted later by calling the; `ChangePartition(Int_t, Int_t)` method. The partitioning algorithm is; considerably faster than the brute force algorithm (i.e. checking if each bin; contains the input coordinates), especially if the histogram is to be filled; many times. ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH2Poly.cxx:1456,extend,extend,1456,hist/hist/src/TH2Poly.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH2Poly.cxx,1,['extend'],['extend']
Modifiability," a constant; // table in the order matching the kernel unique integer identifier.; // Third, uses from non-kernel functions are replaced with a table lookup using; // the intrinsic function to find the address of the variable.; //; // ""Kernel"" lowering is only applicable for variables that are unambiguously; // reachable from exactly one kernel. For those cases, accesses to the variable; // can be lowered to ConstantExpr address of a struct instance specific to that; // one kernel. This is zero cost in space and in compute. It will raise a fatal; // error on any variable that might be reachable from multiple kernels and is; // thus most easily used as part of the hybrid lowering strategy.; //; // Hybrid lowering is a mixture of the above. It uses the zero cost kernel; // lowering where it can. It lowers the variable accessed by the greatest; // number of kernels using the module strategy as that is free for the first; // variable. Any futher variables that can be lowered with the module strategy; // without incurring LDS memory overhead are. The remaining ones are lowered; // via table.; //; // Consequences; // - No heuristics or user controlled magic numbers, hybrid is the right choice; // - Kernels that don't use functions (or have had them all inlined) are not; // affected by any lowering for kernels that do.; // - Kernels that don't make indirect function calls are not affected by those; // that do.; // - Variables which are used by lots of kernels, e.g. those injected by a; // language runtime in most kernels, are expected to have no overhead; // - Implementations that instantiate templates per-kernel where those templates; // use LDS are expected to hit the ""Kernel"" lowering strategy; // - The runtime properties impose a cost in compiler implementation complexity; //; // Dynamic LDS implementation; // Dynamic LDS is lowered similarly to the ""table"" strategy above and uses the; // same intrinsic to identify which kernel is at the root of the dynamic call; // gra",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerModuleLDSPass.cpp:5655,variab,variables,5655,interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerModuleLDSPass.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerModuleLDSPass.cpp,1,['variab'],['variables']
Modifiability," a stack, with a pointer to the top; of the stack kept in thread-local storage. objc_exception_try_enter pushes a catch buffer onto the EH stack.; objc_exception_try_exit pops the given catch buffer, which is; required to be the top of the EH stack.; objc_exception_throw pops the top of the EH stack, writes the; thrown exception into the appropriate field, and longjmps; to the setjmp buffer. It crashes the process (with a printf; and an abort()) if there are no catch buffers on the stack.; objc_exception_extract just reads the exception pointer out of the; catch buffer. There's no reason an implementation couldn't use a light-weight; setjmp here --- something like __builtin_setjmp, but API-compatible; with the heavyweight setjmp. This will be more important if we ever; want to implement correct ObjC/C++ exception interactions for the; fragile ABI. Note that for this use of setjmp/longjmp to be correct in the presence of; optimization, we use inline assembly on the set of local variables to force; flushing locals to memory immediately before any protected calls and to; inhibit optimizing locals across the setjmp->catch edge. The basic framework for a @try-catch-finally is as follows:; {; objc_exception_data d;; id _rethrow = null;; bool _call_try_exit = true;. objc_exception_try_enter(&d);; if (!setjmp(d.jmp_buf)) {; ... try body ...; } else {; // exception path; id _caught = objc_exception_extract(&d);. // enter new try scope for handlers; if (!setjmp(d.jmp_buf)) {; ... match exception and execute catch blocks ... // fell off end, rethrow.; _rethrow = _caught;; ... jump-through-finally to finally_rethrow ...; } else {; // exception in catch block; _rethrow = objc_exception_extract(&d);; _call_try_exit = false;; ... jump-through-finally to finally_rethrow ...; }; }; ... jump-through-finally to finally_end ... finally:; if (_call_try_exit); objc_exception_try_exit(&d);. ... finally block ....; ... dispatch to finally destination ... finally_rethrow:; objc_exception_th",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGObjCMac.cpp:1256,variab,variables,1256,interpreter/llvm-project/clang/lib/CodeGen/CGObjCMac.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGObjCMac.cpp,1,['variab'],['variables']
Modifiability," a strength reduction on array references inside loops that; // have as one or more of their components the loop induction variable, it; // rewrites expressions to take advantage of scaled-index addressing modes; // available on the target, and it performs a variety of other optimizations; // related to loop induction variables.; //; // Terminology note: this code has a lot of handling for ""post-increment"" or; // ""post-inc"" users. This is not talking about post-increment addressing modes;; // it is instead talking about code like this:; //; // %i = phi [ 0, %entry ], [ %i.next, %latch ]; // ...; // %i.next = add %i, 1; // %c = icmp eq %i.next, %n; //; // The SCEV for %i is {0,+,1}<%L>. The SCEV for %i.next is {1,+,1}<%L>, however; // it's useful to think about these as the same register, with some uses using; // the value of the register before the add and some using it after. In this; // example, the icmp is a post-increment user, since it uses %i.next, which is; // the value of the induction variable after the increment. The other common; // case of post-increment users is users outside the loop.; //; // TODO: More sophistication in the way Formulae are generated and filtered.; //; // TODO: Handle multiple loops at a time.; //; // TODO: Should the addressing mode BaseGV be changed to a ConstantExpr instead; // of a GlobalValue?; //; // TODO: When truncation is free, truncate ICmp users' operands to make it a; // smaller encoding (on x86 at least).; //; // TODO: When a negated register is used by an add (such as in a list of; // multiple base registers, or as the increment expression in an addrec),; // we may not actually need both reg and (-1 * reg) in registers; the; // negation can be implemented by using a sub instead of an add. The; // lack of support for taking this into consideration when making; // register pressure decisions is partly worked around by the ""Special""; // use kind.; //; //===---------------------------------------------------------------------",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopStrengthReduce.cpp:1590,variab,variable,1590,interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopStrengthReduce.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopStrengthReduce.cpp,1,['variab'],['variable']
Modifiability," access protocols to test ROOT IO plugins. The data read are; // tested via tests based on some of stress.cxx tests.; //; // Can be run as:; // stressIOPlugins [name]; //; // The name parameter is a protocol name, as expected; // in a url. The supported names are: xroot, root, http, https.; // If the name is omitted a selection of schemes are tested; // based on feature availability:; //; // feature protocol multithreaded test available; //; // xrootd root no; // davix http no; //; // An example of output of a non multithreaded test, when all the tests; // run OK is shown below:; //; // ****************************************************************************; // * Starting stressIOPlugins test for protocol http; // * Test files will be read from:; // * http://root.cern/files/StressIOPluginsTestFiles/; // ****************************************************************************; // Test 1 : Check size & compression factor of a Root file........ using stress_2.root; // : opened file with plugin class......................... TDavixFile; // : Check size & compression factor of a Root file........ OK; // Test 2 : Test graphics & Postscript............................ using stress_5.root; // : opened file with plugin class......................... TDavixFile; // : Test graphics & Postscript............................ OK; // Test 3 : Trees split and compression modes..................... using Event_8a.root; // : opened file with plugin class......................... TDavixFile; // : Trees split and compression modes..................... using Event_8b.root; // : opened file with plugin class......................... TDavixFile; // : Trees split and compression modes..................... OK; // Test 4 : Filename formats when adding files to TChain.......... using Event_8a.root and Event_8b.root; // : treename in chain..................................... OK; // : treename to AddFile................................... OK; // : treename in filenames, slash-suffix sty",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/stressIOPlugins.cxx:1356,plugin,plugin,1356,test/stressIOPlugins.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/stressIOPlugins.cxx,1,['plugin'],['plugin']
Modifiability," an existing file for reading (default).; /// NET | Used by derived remote file access classes, not a user callable option.; /// WEB | Used by derived remote http access class, not a user callable option.; /// READ_WITHOUT_GLOBALREGISTRATION | Used by TTreeProcessorMT, not a user callable option.; ///; /// If option = """" (default), READ is assumed.; /// The file can be specified as a URL of the form:; ///; /// file:///user/rdm/bla.root or file:/user/rdm/bla.root; ///; /// The file can also be a member of an archive, in which case it is; /// specified as:; ///; /// multi.zip#file.root or multi.zip#0; ///; /// which will open file.root which is a member of the file multi.zip; /// archive or member 1 from the archive. For more on archive file; /// support see the TArchiveFile class.; /// TFile and its remote access plugins can also be used to open any; /// file, i.e. also non ROOT files, using:; ///; /// file.tar?filetype=raw; ///; /// This is convenient because the many remote file access plugins allow; /// easy access to/from the many different mass storage systems.; /// The title of the file (ftitle) will be shown by the ROOT browsers.; /// A ROOT file (like a Unix file system) may contain objects and; /// directories. There are no restrictions for the number of levels; /// of directories.; /// A ROOT file is designed such that one can write in the file in pure; /// sequential mode (case of BATCH jobs). In this case, the file may be; /// read sequentially again without using the file index written; /// at the end of the file. In case of a job crash, all the information; /// on the file is therefore protected.; /// A ROOT file can be used interactively. In this case, one has the; /// possibility to delete existing objects and add new ones.; /// When an object is deleted from the file, the freed space is added; /// into the FREE linked list (fFree). The FREE list consists of a chain; /// of consecutive free segments on the file. At the same time, the first; /// 4 bytes",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TFile.cxx:2175,plugin,plugins,2175,io/io/src/TFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TFile.cxx,1,['plugin'],['plugins']
Modifiability," are reserved and cannot appear anywhere within a; // replacement sequence. Outside of a replacement sequence, in order to print; // a literal '{' it must be doubled as ""{{"".; //; // ===Parameter Indexing===; //; // `index` specifies the index of the parameter in the parameter pack to format; // into the output. Note that it is possible to refer to the same parameter; // index multiple times in a given format string. This makes it possible to; // output the same value multiple times without passing it multiple times to the; // function. For example:; //; // formatv(""{0} {1} {0}"", ""a"", ""bb""); //; // would yield the string ""abba"". This can be convenient when it is expensive; // to compute the value of the parameter, and you would otherwise have had to; // save it to a temporary.; //; // ===Formatter Search===; //; // For a given parameter of type T, the following steps are executed in order; // until a match is found:; //; // 1. If the parameter is of class type, and inherits from format_adapter,; // Then format() is invoked on it to produce the formatted output. The; // implementation should write the formatted text into `Stream`.; // 2. If there is a suitable template specialization of format_provider<>; // for type T containing a method whose signature is:; // void format(const T &Obj, raw_ostream &Stream, StringRef Options); // Then this method is invoked as described in Step 1.; // 3. If an appropriate operator<< for raw_ostream exists, it will be used.; // For this to work, (raw_ostream& << const T&) must return raw_ostream&.; //; // If a match cannot be found through either of the above methods, a compiler; // error is generated.; //; // ===Invalid Format String Handling===; //; // In the case of a format string which does not match the grammar described; // above, the output is undefined. With asserts enabled, LLVM will trigger an; // assertion. Otherwise, it will try to do something reasonable, but in general; // the details of what that is are undefined.; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/FormatVariadic.h:2834,inherit,inherits,2834,interpreter/llvm-project/llvm/include/llvm/Support/FormatVariadic.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/FormatVariadic.h,1,['inherit'],['inherits']
Modifiability," are. The remaining ones are lowered; // via table.; //; // Consequences; // - No heuristics or user controlled magic numbers, hybrid is the right choice; // - Kernels that don't use functions (or have had them all inlined) are not; // affected by any lowering for kernels that do.; // - Kernels that don't make indirect function calls are not affected by those; // that do.; // - Variables which are used by lots of kernels, e.g. those injected by a; // language runtime in most kernels, are expected to have no overhead; // - Implementations that instantiate templates per-kernel where those templates; // use LDS are expected to hit the ""Kernel"" lowering strategy; // - The runtime properties impose a cost in compiler implementation complexity; //; // Dynamic LDS implementation; // Dynamic LDS is lowered similarly to the ""table"" strategy above and uses the; // same intrinsic to identify which kernel is at the root of the dynamic call; // graph. This relies on the specified behaviour that all dynamic LDS variables; // alias one another, i.e. are at the same address, with respect to a given; // kernel. Therefore this pass creates new dynamic LDS variables for each kernel; // that allocates any dynamic LDS and builds a table of addresses out of those.; // The AMDGPUPromoteAlloca pass skips kernels that use dynamic LDS.; // The corresponding optimisation for ""kernel"" lowering where the table lookup; // is elided is not implemented.; //; //; // Implementation notes / limitations; // A single LDS global variable represents an instance per kernel that can reach; // said variables. This pass essentially specialises said variables per kernel.; // Handling ConstantExpr during the pass complicated this significantly so now; // all ConstantExpr uses of LDS variables are expanded to instructions. This; // may need amending when implementing non-undef initialisers.; //; // Lowering is split between this IR pass and the back end. This pass chooses; // where given variables should be all",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerModuleLDSPass.cpp:6764,variab,variables,6764,interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerModuleLDSPass.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerModuleLDSPass.cpp,1,['variab'],['variables']
Modifiability," as a string. Local variables and; functions cannot be used, since the interpreter will not know how to find them. When capturing local state is necessary,; it must first be declared to the ROOT C++ interpreter. More information on filters and how to use them to automatically generate cutflow reports can be found [below](#Filters). ### Defining custom columns; Let's now consider the case in which ""myTree"" contains two quantities ""x"" and ""y"", but our analysis relies on a derived; quantity `z = sqrt(x*x + y*y)`. Using the Define() transformation, we can create a new column in the dataset containing; the variable ""z"":; ~~~{.cpp}; RDataFrame d(""myTree"", ""file.root"");; auto sqrtSum = [](double x, double y) { return sqrt(x*x + y*y); };; auto zMean = d.Define(""z"", sqrtSum, {""x"",""y""}).Mean(""z"");; std::cout << *zMean << std::endl;; ~~~; Define() creates the variable ""z"" by applying `sqrtSum` to ""x"" and ""y"". Later in the chain of calls we refer to; variables created with Define() as if they were actual tree branches/columns, but they are evaluated on demand, at most; once per event. As with filters, Define() calls can be chained with other transformations to create multiple custom; columns. Define() and Filter() transformations can be concatenated and intermixed at will. As with filters, it is possible to specify new columns as string expressions. This snippet is analogous to the one above:; ~~~{.cpp}; RDataFrame d(""myTree"", ""file.root"");; auto zMean = d.Define(""z"", ""sqrt(x*x + y*y)"").Mean(""z"");; std::cout << *zMean << std::endl;; ~~~. Again the names of the columns used in the expression and their types are inferred automatically. The string must be; valid C++ and it is just-in-time compiled. The process has a small runtime overhead and like with filters it is currently the only possible approach when using PyROOT. Previously, when showing the different ways an RDataFrame can be created, we showed a constructor that takes a; number of entries as a parameter. In the following",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx:21401,variab,variables,21401,tree/dataframe/src/RDataFrame.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx,1,['variab'],['variables']
Modifiability," as they; // do not alias, which permits only allocating variables they use; // - if the address is allowed to differ, functions need help to find it; //; // Uses from kernels are implemented here by grouping them in a per-kernel; // struct instance. This duplicates the variables, accurately modelling their; // aliasing properties relative to a single global representation. It also; // permits control over alignment via padding.; //; // Uses from functions are more complicated and the primary purpose of this; // IR pass. Several different lowering are chosen between to meet requirements; // to avoid allocating any LDS where it is not necessary, as that impacts; // occupancy and may fail the compilation, while not imposing overhead on a; // feature whose primary advantage over global memory is performance. The basic; // design goal is to avoid one kernel imposing overhead on another.; //; // Implementation.; //; // LDS variables with constant annotation or non-undef initializer are passed; // through unchanged for simplification or error diagnostics in later passes.; // Non-undef initializers are not yet implemented for LDS.; //; // LDS variables that are always allocated at the same address can be found; // by lookup at that address. Otherwise runtime information/cost is required.; //; // The simplest strategy possible is to group all LDS variables in a single; // struct and allocate that struct in every kernel such that the original; // variables are always at the same address. LDS is however a limited resource; // so this strategy is unusable in practice. It is not implemented here.; //; // Strategy | Precise allocation | Zero runtime cost | General purpose |; // --------+--------------------+-------------------+-----------------+; // Module | No | Yes | Yes |; // Table | Yes | No | Yes |; // Kernel | Yes | Yes | No |; // Hybrid | Yes | Partial | Yes |; //; // ""Module"" spends LDS memory to save cycles. ""Table"" spends cycles and global; // memory to save LDS. ""Kern",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerModuleLDSPass.cpp:2565,variab,variables,2565,interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerModuleLDSPass.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerModuleLDSPass.cpp,1,['variab'],['variables']
Modifiability," at 0; - `gausn(0)` is a substitute for `[0]*exp(-0.5*((x-[1])/[2])**2)/(sqrt(2*pi)*[2]))`; and (0) means start numbering parameters at 0; - `expo(3)` is a substitute for `exp([3]+[4]*x)`; - `pol3(5)` is a substitute for `par[5]+par[6]*x+par[7]*x**2+par[8]*x**3`; (`PolN` stands for Polynomial of degree N); - `gaus(x, [0..2])` is a more explicit way of writing `gaus(0)`; - `expo(y, [3..4])` is a substitute for `exp([3]+[4]*y)`. See below the [full list of predefined functions](\ref FormulaFuncs) which can be used as shortcuts in; TFormula. `TMath` functions can be part of the expression, eg:. - `TMath::Landau(x)*sin(x)`; - `TMath::Erf(x)`. Formula may contain constants, eg:. - `sqrt2`; - `e`; - `pi`; - `ln10`; - `infinity`. and more. Formulas may also contain other user-defined ROOT functions defined with a; TFormula, eg, where `f1` is defined on one x-dimension and 2 parameters:. - `f1(x, [omega], [phi])`; - `f1([0..1])`; - `f1([1], [0])`; - `f1(y)`. To replace only parameter names, the dimension variable can be dropped.; Alternatively, to change only the dimension variable, the parameters can be; dropped. Note that if a parameter is dropped or keeps its old name, its old; value will be copied to the new function. The syntax used in the examples; above also applies to the predefined parametrized functions like `gaus` and; `expo`. Comparisons operators are also supported `(&amp;&amp;, ||, ==, &lt;=, &gt;=, !)`. Examples:. `sin(x*(x&lt;0.5 || x&gt;1))`. If the result of a comparison is TRUE, the result is 1, otherwise 0. Already predefined names can be given. For example, if the formula. `TFormula old(""old"",sin(x*(x&lt;0.5 || x&gt;1)))`. one can assign a name to the formula. By default the name of the object = title = formula itself. `TFormula new(""new"",""x*old"")`. is equivalent to:. `TFormula new(""new"",""x*sin(x*(x&lt;0.5 || x&gt;1))"")`. The class supports unlimited number of variables and parameters.; By default the names which can be used for the variables are `x,y,z",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TFormula.cxx:2017,variab,variable,2017,hist/hist/src/TFormula.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TFormula.cxx,1,['variab'],['variable']
Modifiability," be forwarded to the hasher type:; /// * decltype(std::declval<HasherT &>().final()) final(); /// * decltype(std::declval<HasherT &>().result()) result(); ///; /// From a user point of view, the interface provides the following:; /// * `template<typename T> add(const T &Value)`; /// The `add` function implements hashing of various types.; /// * `template <typename ItT> void addRange(ItT First, ItT Last)`; /// The `addRange` function is designed to aid hashing a range of values.; /// It explicitly adds the size of the range in the hash.; /// * `template <typename ItT> void addRangeElements(ItT First, ItT Last)`; /// The `addRangeElements` function is also designed to aid hashing a range of; /// values. In contrast to `addRange`, it **ignores** the size of the range,; /// behaving as if elements were added one at a time with `add`.; ///; /// User-defined `struct` types can participate in this interface by providing; /// an `addHash` templated function. See the associated template specialization; /// for details.; ///; /// This interface does not impose requirements on the hasher; /// `update(ArrayRef<uint8_t> Data)` method. We want to avoid collisions for; /// variable-size types; for example for; /// ```; /// builder.add({1});; /// builder.add({2, 3});; /// ```; /// and; /// ```; /// builder.add({1, 2});; /// builder.add({3});; /// ```; /// . Thus, specializations of `add` and `addHash` for variable-size types must; /// not assume that the hasher type considers the size as part of the hash; they; /// must explicitly add the size to the hash. See for example specializations; /// for `ArrayRef` and `StringRef`.; ///; /// Additionally, since types are eventually forwarded to the hasher's; /// `void update(ArrayRef<uint8_t>)` method, endianness plays a role in the hash; /// computation (for example when computing `add((int)123)`).; /// Specifiying a non-`native` `Endianness` template parameter allows to compute; /// stable hash across platforms with different endianness.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/HashBuilder.h:1654,variab,variable-size,1654,interpreter/llvm-project/llvm/include/llvm/Support/HashBuilder.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/HashBuilder.h,2,['variab'],['variable-size']
Modifiability," because the error; bars do not incorporate two known properties of the PDFs: PDFs are; positive definite and can be non-zero in a given x-bin, even if in the; particular data sample at hand, no event is observed in this bin. The; latter limitation is not specific to \f$\hbox {$_s$}{\cal P}lots\f$ ,; rather it is always present when one is willing to infer the PDF at the; origin of an histogram, when, for some bins, the number of entries does; not guaranty the applicability of the Gaussian regime. In such; situations, a satisfactory practice is to attach allowed ranges to the; histogram to indicate the upper and lower limits of the PDF value which; are consistent with the actual observation, at a given confidence; level. \image html splot_mass-bkg-sPlot.png Figure 3 width=600. The \f$\hbox {$_s$}{\cal P}lots\f$ (signal on top, background on bottom); obtained for \f${m_{\rm ES}}\f$ are represented as dots with error bars.; They are obtained from a fit using only information from \f$\Delta E\f$ and; \f${\cal F}\f$. <p>; Choosing \f${m_{\rm ES}}\f$ and \f$\Delta E\f$ as discriminating variables to; determine \f$N_1\f$ and \f$N_2\f$ through a maximum Likelihood fit, one builds,; for the control variable \f${\cal F}\f$ which is unknown to the fit, the two; \f$\hbox {$_s$}{\cal P}lots\f$ for signal and background shown in; Fig. 4.; In the \f$\hbox{$_s$}{\cal P}lot\f$ for signal one observes that error bars are; the largest in the \f$x\f$ regions where the background is the largest. \image html splot_fisher-bkg-sPlot.png Figure 4 width=600. The \f$\hbox {$_s$}{\cal P}lots\f$ (signal on top, background on bottom) obtained; for \f${\cal F}\f$ are represented as dots with error bars. They are obtained; from a fit using only information from \f${m_{\rm ES}}\f$ and \f$\Delta E\f$. The results above can be obtained by running the tutorial TestSPlot.C; */; ////////////////////////////////////////////////////////////////////////////////; /// default constructor (used by I/O only)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/splot/src/TSPlot.cxx:10608,variab,variables,10608,math/splot/src/TSPlot.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/splot/src/TSPlot.cxx,2,['variab'],"['variable', 'variables']"
Modifiability," bits of this store are dead and are going to be DSEd:; //; // store i64 %v, ptr %dest, !DIAssignID !1; // dbg.assign(..., !DIExpression(fragment, 128, 32), !1, %dest,; // !DIExpression(DW_OP_plus_uconst, 4)); //; // Goal: Given our dead bits at offset:0 size:32 for the store, determine the; // part of the variable, which fits in the fragment expressed by the; // dbg.assign, that has been killed, if any.; //; // calculateFragmentIntersect(..., SliceOffsetInBits=0,; // SliceSizeInBits=32, Dest=%dest, Assign=dbg.assign); //; // Drawing the store (s) in memory followed by the shortened version ($),; // then the dbg.assign (d), with the fragment information on a seperate scale; // underneath:; //; // Memory; // offset; // from; // dest 0 63; // | |; // s[######] - Original stores 64 bits to Dest.; // $----[##] - DSE says the lower 32 bits are dead, to be removed.; // d [##] - Assign's address-modifying expression adds 4 bytes to; // dest.; // Variable | |; // Fragment 128|; // Offsets 159; //; // The answer is achieved in a few steps:; // 1. Add the fragment offset to the store offset:; // SliceOffsetInBits:0 + VarFrag.OffsetInBits:128 = 128; //; // 2. Subtract the address-modifying expression offset plus difference; // between d.address and dest:; // 128 - (expression_offset:32 + (d.address - dest):0) = 96; //; // 3. That offset along with the store size (32) represents the bits of the; // variable that'd be affected by the store. Call it SliceOfVariable.; // Intersect that with Assign's fragment info:; // SliceOfVariable ∩ Assign_fragment = none; //; // In this case: none of the dead bits of the store affect Assign.; //; // # Example 2; // Similar example with the same goal. This time the upper 16 bits; // of the store are going to be DSE'd.; //; // store i64 %v, ptr %dest, !DIAssignID !1; // dbg.assign(..., !DIExpression(fragment, 128, 32), !1, %dest,; // !DIExpression(DW_OP_plus_uconst, 4)); //; // calculateFragmentIntersect(..., SliceOffsetInBits=48,; // SliceSizeIn",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/DebugInfo.cpp:1785,Variab,Variable,1785,interpreter/llvm-project/llvm/lib/IR/DebugInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/DebugInfo.cpp,1,['Variab'],['Variable']
Modifiability," by adding them to the end of the list.; Macros for identical plugin handlers in later directories will; override previous ones (the inverse of normal search path behavior).; The macros must have names like `<BaseClass>/PX0_<PluginClass>.C`,; e.g. TSQLServer/P20_TMySQLServer.C, to allow easy sorting and grouping.; If the BaseClass is in a namespace the directory must have the name; NameSpace@@BaseClass as `:` is a reserved pathname character on some; operating systems. Macros not beginning with 'P' and ending with "".C""; are ignored. These macros typically look like:; ~~~ {.cpp}; void P10_TDCacheFile(); {; gPluginMgr->AddHandler(""TFile"", ""^dcache"", ""TDCacheFile"",; ""DCache"", ""TDCacheFile(const char*,Option_t*)"");; }; ~~~; Plugin handlers can also be defined via resources in the .rootrc; file. Although now deprecated this method still works for backward; compatibility, e.g.:; ~~~ {.cpp}; Plugin.TSQLServer: ^mysql: TMySQLServer MySQL ""<constructor>""; +Plugin.TSQLServer: ^pgsql: TPgSQLServer PgSQL ""<constructor>""; Plugin.TVirtualFitter: * TFitter Minuit ""TFitter(Int_t)""; ~~~; Where the + in front of Plugin.TSQLServer says that it extends the; existing definition of TSQLServer, useful when there is more than; one plugin that can extend the same base class. The ""<constructor>""; should be the constructor or a static method that generates an; instance of the specified class. Global methods should start with; ""::"" in their name, like ""::CreateFitter()"".; Instead of being a shared library a plugin can also be a CINT; script, so instead of libDialog.so one can have Dialog.C.; The * is a placeholder in case there is no need for a URI to; differentiate between different plugins for the same base class.; For the default plugins see $ROOTSYS/etc/system.rootrc. Plugin handlers can also be registered at run time, e.g.:; ~~~ {.cpp}; gPluginMgr->AddHandler(""TSQLServer"", ""^sqlite:"",; ""TSQLiteServer"", ""RSQLite"",; ""TSQLiteServer(const char*,const char*,const char*)"");; ~~~; A list of curre",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TPluginManager.cxx:2259,Plugin,Plugin,2259,core/base/src/TPluginManager.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TPluginManager.cxx,1,['Plugin'],['Plugin']
Modifiability," calculated, or because constant parameters have; /// changed value or parameters have changed const/float status, the minimum is recalculated. void RooStats::HistFactory::RooBarlowBeestonLL::validateAbsMin() const; {; // Check if constant status of any of the parameters have changed; if (_absMinValid) {; _piter->Reset() ;; RooAbsArg* par ;; while((par=(RooAbsArg*)_piter->Next())) {; if (_paramFixed[par->GetName()] != par->isConstant()) {; cxcoutI(Minimization) << ""RooStats::HistFactory::RooBarlowBeestonLL::evaluate("" << GetName() << "") constant status of parameter "" << par->GetName() << "" has changed from ""; << (_paramFixed[par->GetName()]?""fixed"":""floating"") << "" to "" << (par->isConstant()?""fixed"":""floating""); << "", recalculating absolute minimum"" << endl ;; _absMinValid = false ;; break ;; }; }; }. // If we don't have the absolute minimum w.r.t all observables, calculate that first; if (!_absMinValid) {. cxcoutI(Minimization) << ""RooStats::HistFactory::RooBarlowBeestonLL::evaluate("" << GetName() << "") determining minimum likelihood for current configurations w.r.t all observable"" << endl ;. // Save current values of non-marginalized parameters; std::unique_ptr<RooArgSet> obsStart{(RooArgSet*) _obs.snapshot(false)};. // Start from previous global minimum; if (_paramAbsMin.size()>0) {; const_cast<RooSetProxy&>(_par).assignValueOnly(_paramAbsMin) ;; }; if (_obsAbsMin.size()>0) {; const_cast<RooSetProxy&>(_obs).assignValueOnly(_obsAbsMin) ;; }. // Find minimum with all observables floating; const_cast<RooSetProxy&>(_obs).setAttribAll(""Constant"",false) ;; _minuit->migrad() ;. // Save value and remember; _absMin = _nll ;; _absMinValid = true ;. // Save parameter values at abs minimum as well; _paramAbsMin.removeAll() ;. // Only store non-constant parameters here!; std::unique_ptr<RooArgSet> tmp{(RooArgSet*) _par.selectByAttrib(""Constant"",false)};; _paramAbsMin.addClone(*tmp) ;. _obsAbsMin.addClone(_obs) ;. // Save constant status of all parameters; _piter->Reset() ;; R",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/RooBarlowBeestonLL.cxx:1276,config,configurations,1276,roofit/histfactory/src/RooBarlowBeestonLL.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/RooBarlowBeestonLL.cxx,1,['config'],['configurations']
Modifiability," can store the status of the dataframe for further use (more; on this [below](#callgraphs)). You can read more about defining new columns [here](#custom-columns). \image html RDF_Graph.png ""A graph composed of two branches, one starting with a filter and one with a define. The end point of a branch is always an action."". ### Running on a range of entries; It is sometimes necessary to limit the processing of the dataset to a range of entries. For this reason, the RDataFrame; offers the concept of ranges as a node of the RDataFrame chain of transformations; this means that filters, columns and; actions can be concatenated to and intermixed with Range()s. If a range is specified after a filter, the range will act; exclusively on the entries passing the filter -- it will not even count the other entries! The same goes for a Range(); hanging from another Range(). Here are some commented examples:; ~~~{.cpp}; RDataFrame d(""myTree"", ""file.root"");; // Here we store a dataframe that loops over only the first 30 entries in a variable; auto d30 = d.Range(30);; // This is how you pick all entries from 15 onwards; auto d15on = d.Range(15, 0);; // We can specify a stride too, in this case we pick an event every 3; auto d15each3 = d.Range(0, 15, 3);; ~~~; Note that ranges are not available when multi-threading is enabled. More information on ranges is available; [here](#ranges). ### Executing multiple actions in the same event loop; As a final example let us apply two different cuts on branch ""MET"" and fill two different histograms with the ""pt_v"" of; the filtered events.; By now, you should be able to easily understand what is happening:; ~~~{.cpp}; RDataFrame d(""treeName"", ""file.root"");; auto h1 = d.Filter(""MET > 10"").Histo1D(""pt_v"");; auto h2 = d.Histo1D(""pt_v"");; h1->Draw(); // event loop is run once here; h2->Draw(""SAME""); // no need to run the event loop again; ~~~; RDataFrame executes all above actions by **running the event-loop only once**. The trick is that actions are n",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx:24338,variab,variable,24338,tree/dataframe/src/RDataFrame.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx,1,['variab'],['variable']
Modifiability," color:#000000; background-color:#ffffff }; body { font-family:Helvetica, sans-serif; font-size:10pt }; h1 { font-size:14pt }; .FileName { margin-top: 5px; margin-bottom: 5px; display: inline; }; .FileNav { margin-left: 5px; margin-right: 5px; display: inline; }; .FileNav a { text-decoration:none; font-size: larger; }; .divider { margin-top: 30px; margin-bottom: 30px; height: 15px; }; .divider { background-color: gray; }; .code { border-collapse:collapse; width:100%; }; .code { font-family: ""Monospace"", monospace; font-size:10pt }; .code { line-height: 1.2em }; .comment { color: green; font-style: oblique }; .keyword { color: blue }; .string_literal { color: red }; .directive { color: darkmagenta }. /* Macros and variables could have pop-up notes hidden by default.; - Macro pop-up: expansion of the macro; - Variable pop-up: value (table) of the variable */; .macro_popup, .variable_popup { display: none; }. /* Pop-up appears on mouse-hover event. */; .macro:hover .macro_popup, .variable:hover .variable_popup {; display: block;; padding: 2px;; -webkit-border-radius:5px;; -webkit-box-shadow:1px 1px 7px #000;; border-radius:5px;; box-shadow:1px 1px 7px #000;; position: absolute;; top: -1em;; left:10em;; z-index: 1; }. .macro_popup {; border: 2px solid red;; background-color:#FFF0F0;; font-weight: normal;; }. .variable_popup {; border: 2px solid blue;; background-color:#F0F0FF;; font-weight: bold;; font-family: Helvetica, sans-serif;; font-size: 9pt;; }. /* Pop-up notes needs a relative position as a base where they pops up. */; .macro, .variable {; background-color: PaleGoldenRod;; position: relative;; }; .macro { color: DarkMagenta; }. #tooltiphint {; position: fixed;; width: 50em;; margin-left: -25em;; left: 50%;; padding: 10px;; border: 1px solid #b0b0b0;; border-radius: 2px;; box-shadow: 1px 1px 7px black;; background-color: #c0c0c0;; z-index: 2;; }. .num { width:2.5em; padding-right:2ex; background-color:#eeeeee }; .num { text-align:right; font-size:8pt }; .num { c",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Rewrite/HTMLRewrite.cpp:1031,variab,variable,1031,interpreter/llvm-project/clang/lib/Rewrite/HTMLRewrite.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Rewrite/HTMLRewrite.cpp,1,['variab'],['variable']
Modifiability," converted to a 2 bits unsigned integer; /// - In case D the array elements of fVertex are converted to an unsigned 10 bits integer; /// - In case E fChi2 is converted to a Float_t with truncated precision at 6 bits; /// - In case F the fNsp elements of array fPointvalue are converted to an unsigned 32 bit integer; /// Note that the range specifier must follow the dimension specifier.; /// Case B has more precision (9 to 10 significative digits than case A (6 to 7 digits).; /// In Case A and E, the exponent is stored as is (8 bits), for a total of 21 bits (including 1 bit for sign); ///; /// The range specifier has the general format: [xmin,xmax] or [xmin,xmax,nbits]; /// - [0,1];; /// - [-10,100];; /// - [-pi,pi], [-pi/2,pi/4],[-2pi,2*pi]; /// - [-10,100,16]; /// - [0,0,8]; /// if nbits is not specified, or nbits <2 or nbits>16 it is set to 16. If; /// (xmin==0 and xmax==0 and nbits <=14) the float word will have; /// its mantissa truncated to nbits significative bits.; ///; /// ## IMPORTANT NOTE; /// ### NOTE 1; /// Lets assume an original variable float x:; /// When using the format [0,0,8] (ie range not specified) you get the best; /// relative precision when storing and reading back the truncated x, say xt.; /// The variance of (x-xt)/x will be better than when specifying a range; /// for the same number of bits. However the precision relative to the; /// range (x-xt)/(xmax-xmin) will be worst, and vice-versa.; /// The format [0,0,8] is also interesting when the range of x is infinite; /// or unknown.; ///; /// ### NOTE 2; /// It is important to understand the difference with the meaning of nbits; /// - in case of [-1,1,nbits], nbits is the total number of bits used to make; /// the conversion from a float to an integer; /// - in case of [0,0,nbits], nbits is the number of bits used for the mantissa, to which is added 8 bits for the exponent.; ///; /// See example of use of the Float16_t data type in tutorial float16.C; /// \image html tbufferfile_double32.gif",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TBufferFile.cxx:1842,variab,variable,1842,io/io/src/TBufferFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TBufferFile.cxx,1,['variab'],['variable']
Modifiability," copy of the object is shared; memory call Update() also whenever the mapped object(s) change(s); call Update() to put a fresh copy in the shared memory. This extra; step is necessary since it is not possible to share objects with; virtual pointers between processes (the vtbl ptr points to the; originators unique address space and can not be used by the; consumer process(es)). Consumer processes can map the memory region; from this file and access the objects stored in it via the Get(); method (which returns a copy of the object stored in the shared; memory with correct vtbl ptr set). Only objects of classes with a; Streamer() member function defined can be shared. I know the current implementation is not ideal (you need to copy to; and from the shared memory file) but the main problem is with the; class' virtual_table pointer. This pointer points to a table unique; for every process. Therefore, different options are:; -# One could allocate an object directly in shared memory in the; producer, but the consumer still has to copy the object from; shared memory into a local object which has the correct vtbl; pointer for that process (copy ctor's can be used for creating; the local copy).; -# Another possibility is to only allow objects without virtual; functions in shared memory (like simple C structs), or to; forbid (how?) the consumer from calling any virtual functions; of the objects in shared memory.; -# A last option is to copy the object internals to shared memory; and copy them again from there. This is what is done in the; TMapFile (using the object Streamer() to make a deep copy). Option 1) saves one copy, but requires solid copy ctor's (along the; full inheritance chain) to rebuild the object in the consumer. Most; classes don't provide these copy ctor's, especially not when objects; contain collections, etc. 2) is too limiting or dangerous (calling; accidentally a virtual function will segv). So since we have a; robust Streamer mechanism I opted for 3).; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TMapFile.cxx:1891,inherit,inheritance,1891,io/io/src/TMapFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TMapFile.cxx,1,['inherit'],['inheritance']
Modifiability," created until in the; // main function body, after the prologue is run. However, it's depicted here; // for completeness.; //; // | | Higher address; // |-----------------------------------|; // | |; // | arguments passed on the stack |; // | |; // |-----------------------------------| <- (sp at function entry); // | |; // | varargs from registers |; // | |; // |-----------------------------------|; // | |; // | prev_lr |; // | prev_fp |; // | (a.k.a. ""frame record"") |; // | |; // |- - - - - - - - - - - - - - - - - -| <- fp (r7 or r11); // | |; // | callee-saved gpr registers |; // | |; // |-----------------------------------|; // | |; // | callee-saved fp/simd regs |; // | |; // |-----------------------------------|; // |.empty.space.to.make.part.below....|; // |.aligned.in.case.it.needs.more.than| (size of this area is unknown at; // |.the.standard.8-byte.alignment.....| compile time; if present); // |-----------------------------------|; // | |; // | local variables of fixed size |; // | including spill slots |; // |-----------------------------------| <- base pointer (not defined by ABI,; // |.variable-sized.local.variables....| LLVM chooses r6); // |.(VLAs)............................| (size of this area is unknown at; // |...................................| compile time); // |-----------------------------------| <- sp; // | | Lower address; //; //; // To access the data in a frame, at-compile time, a constant offset must be; // computable from one of the pointers (fp, bp, sp) to access it. The size; // of the areas with a dotted background cannot be computed at compile-time; // if they are present, making it required to have all three of fp, bp and; // sp to be set up to be able to access all contents in the frame areas,; // assuming all of the frame areas are non-empty.; //; // For most functions, some of the frame areas are empty. For those functions,; // it may not be necessary to set up fp or bp:; // * A base pointer is definitely needed when there are bo",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMFrameLowering.cpp:2256,variab,variables,2256,interpreter/llvm-project/llvm/lib/Target/ARM/ARMFrameLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMFrameLowering.cpp,1,['variab'],['variables']
Modifiability," data as it is unnecessary for the; // purposes of validation, with the synthesis being required only by a proper; // unwinder.; //; // For functions that are large or do not match canonical forms, the data is; // split up into two portions, with the actual data residing in the ""exception; // data"" table (.xdata) with a reference to the entry from the ""procedure data""; // (.pdata) entry.; //; // The exception data contains information about the frame setup, all of the; // epilogue scopes (for functions for which there are multiple exit points) and; // the associated exception handler. Additionally, the entry contains byte-code; // describing how to unwind the function (c.f. Decoder::decodeOpcodes).; //; // +---------------------------------------+; // | Function Entry Address |; // +---------------------------------------+; // | Exception Data Entry Address |; // +---------------------------------------+; //; // This layout is parsed by Decoder::dumpUnpackedEntry. Such an entry must; // first resolve the exception data entry address. This structure; // (ExceptionDataRecord) has a variable sized header; // (c.f. ARM::WinEH::HeaderWords) and encodes most of the same information as; // the packed form. However, because this information is insufficient to; // synthesize the unwinding, there are associated unwinding bytecode which make; // up the bulk of the Decoder.; //; // The decoder itself is table-driven, using the first byte to determine the; // opcode and dispatching to the associated printing routine. The bytecode; // itself is a variable length instruction encoding that can fully describe the; // state of the stack and the necessary operations for unwinding to the; // beginning of the frame.; //; // The byte-code maintains a 1-1 instruction mapping, indicating both the width; // of the instruction (Thumb2 instructions are variable length, 16 or 32 bits; // wide) allowing the program to unwind from any point in the prologue, body, or; // epilogue of the function.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-readobj/ARMWinEHPrinter.cpp:2340,variab,variable,2340,interpreter/llvm-project/llvm/tools/llvm-readobj/ARMWinEHPrinter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-readobj/ARMWinEHPrinter.cpp,3,['variab'],['variable']
Modifiability," down. Starting with how variables may be stored in allocas:; //; // 1 Simplest case: variable is alloca sized and starts at offset 0.; // 2 Variable is larger than the alloca: the alloca holds just a part of it.; // 3 Variable is smaller than the alloca: the alloca may hold multiple; // variables.; //; // Imagine we have a store to the entire alloca. In case (3) the store; // affects bits outside of the bounds of each variable. In case (2), where; // the alloca holds the Xth bit to the Yth bit of a variable, the; // zero-offset store doesn't represent an assignment at offset zero to the; // variable. It is an assignment to offset X.; //; // # Example 1; // Obviously, not all stores are alloca-sized and have zero offset. Imagine; // the lower 32 bits of this store are dead and are going to be DSEd:; //; // store i64 %v, ptr %dest, !DIAssignID !1; // dbg.assign(..., !DIExpression(fragment, 128, 32), !1, %dest,; // !DIExpression(DW_OP_plus_uconst, 4)); //; // Goal: Given our dead bits at offset:0 size:32 for the store, determine the; // part of the variable, which fits in the fragment expressed by the; // dbg.assign, that has been killed, if any.; //; // calculateFragmentIntersect(..., SliceOffsetInBits=0,; // SliceSizeInBits=32, Dest=%dest, Assign=dbg.assign); //; // Drawing the store (s) in memory followed by the shortened version ($),; // then the dbg.assign (d), with the fragment information on a seperate scale; // underneath:; //; // Memory; // offset; // from; // dest 0 63; // | |; // s[######] - Original stores 64 bits to Dest.; // $----[##] - DSE says the lower 32 bits are dead, to be removed.; // d [##] - Assign's address-modifying expression adds 4 bytes to; // dest.; // Variable | |; // Fragment 128|; // Offsets 159; //; // The answer is achieved in a few steps:; // 1. Add the fragment offset to the store offset:; // SliceOffsetInBits:0 + VarFrag.OffsetInBits:128 = 128; //; // 2. Subtract the address-modifying expression offset plus difference; // between d.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/DebugInfo.cpp:1140,variab,variable,1140,interpreter/llvm-project/llvm/lib/IR/DebugInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/DebugInfo.cpp,1,['variab'],['variable']
Modifiability," each; /// other's library.; /// See also TSystem::SetBuildDir.; ///; /// If dirmode is not zero and we need to create the target directory, the; /// file mode bit will be change to 'dirmode' using chmod.; ///; /// If library_specified is not specified, CompileMacro generate a default name; /// for library by taking the name of the file ""filename"" but replacing the; /// dot before the extension by an underscore and by adding the shared; /// library extension for the current platform.; /// For example on most platform, hsimple.cxx will generate hsimple_cxx.so; ///; /// It uses the directive fMakeSharedLibs to create a shared library.; /// If loading the shared library fails, it tries to output a list of missing; /// symbols by creating an executable (on some platforms like OSF, this does; /// not HAVE to be an executable) containing the script. It uses the; /// directive fMakeExe to do so.; /// For both directives, before passing them to TSystem::Exec, it expands the; /// variables $SourceFiles, $SharedLib, $LibName, $IncludePath, $LinkedLibs,; /// $DepLibs, $ExeName and $ObjectFiles. See SetMakeSharedLib() for more; /// information on those variables.; ///; /// This method is used to implement the following feature:; ///; /// Synopsis:; ///; /// The purpose of this addition is to allow the user to use an external; /// compiler to create a shared library from its C++ macro (scripts).; /// Currently in order to execute a script, a user has to type at the root; /// prompt; /// ~~~ {.cpp}; /// .X myfunc.C(arg1,arg2); /// ~~~; /// We allow them to type:; /// ~~~ {.cpp}; /// .X myfunc.C++(arg1,arg2); /// ~~~; /// or; /// ~~~ {.cpp}; /// .X myfunc.C+(arg1,arg2); /// ~~~; /// In which case an external compiler will be called to create a shared; /// library. This shared library will then be loaded and the function; /// myfunc will be called with the two arguments. With '++' the shared library; /// is always recompiled. With '+' the shared library is recompiled only; /// if it",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx:2400,variab,variables,2400,core/base/src/TSystem.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx,1,['variab'],['variables']
Modifiability," extracted; /// \param[in] axisSteering (default=nullptr) detailed steering within the extracted; /// distribution; /// \param[in] useAxisBinning (default=true) if set to true, try to extract a histogram with; /// proper binning and axis labels; ///; /// return value: pointer to a new histogram. If; /// <b>useAxisBinning</b> is set and if the selected distribution fits; /// into a root histogram (1,2,3 dimensions) then return a histogram; /// with the proper binning on each axis. Otherwise, return a 1D; /// histogram with equidistant binning. If the histogram title is; /// zero, a title is assigned automatically.; ///; /// The <b>axisSteering</b> is defines as follows: ""axis[mode];axis[mode];...""; /// where:; /// <ul>; /// <li>axis = name of an axis or *</li>; /// <li>mode = any combination of the letters CUO0123456789; /// <ul>; /// <li>C collapse axis into one bin (add up results). If; /// any of the numbers 0-9 are given in addition, only these bins are added up.; /// Here bins are counted from zero, whereas in root, bins are counted; /// from 1. Obviously, this only works for up to 10 bins.</li>; /// <li>U discarde underflow bin</li>; /// <li>O discarde overflow bin</li>; /// </ul>; /// </ul>; /// examples: imagine the binning has two axis, named x and y.; /// <ul>; /// <li>""*[UO]"" exclude underflow and overflow bins for all axis.; /// So here a TH2 is returned but all undeflow and overflow bins are empty</li>; /// <li>""x[UOC123]"" integrate over the variable x but only using the; /// bins 1,2,3 and not the underflow and overflow in x.; /// Here a TH1 is returned, the axis is labelled ""y"" and; /// the underflow and overflow (in y) are filled. However only the x-bins; /// 1,2,3 are used to determine the content.</li>; /// <li>""x[C];y[UO]"" integrate over the variable x, including; /// underflow and overflow but exclude underflow and overflow in y.; /// Here a TH1 is returned, the axis is labelled ""y"". The underflow; /// and overflow in y are empty.</li>; /// </ul>",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldDensity.cxx:1816,variab,variable,1816,hist/unfold/src/TUnfoldDensity.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldDensity.cxx,2,['variab'],['variable']
Modifiability," facts.; //; // However, we aren't interested in the *set* of points of interference; // between 2 stack slots, only *whether* there *is* such a point. So we; // can rely on a little trick: for `S` and `T` to be in-use together,; // one of them needs to become in-use while the other is in-use (or; // they might both become in use simultaneously). We can check this; // by also keeping track of the points at which a stack slot might *start*; // being in-use.; //; // Exact first use:; // ----------------; //; // Consider the following motivating example:; //; // int foo() {; // char b1[1024], b2[1024];; // if (...) {; // char b3[1024];; // <uses of b1, b3>;; // return x;; // } else {; // char b4[1024], b5[1024];; // <uses of b2, b4, b5>;; // return y;; // }; // }; //; // In the code above, ""b3"" and ""b4"" are declared in distinct lexical; // scopes, meaning that it is easy to prove that they can share the; // same stack slot. Variables ""b1"" and ""b2"" are declared in the same; // scope, meaning that from a lexical point of view, their lifetimes; // overlap. From a control flow pointer of view, however, the two; // variables are accessed in disjoint regions of the CFG, thus it; // should be possible for them to share the same stack slot. An ideal; // stack allocation for the function above would look like:; //; // slot 0: b1, b2; // slot 1: b3, b4; // slot 2: b5; //; // Achieving this allocation is tricky, however, due to the way; // lifetime markers are inserted. Here is a simplified view of the; // control flow graph for the code above:; //; // +------ block 0 -------+; // 0| LIFETIME_START b1, b2 |; // 1| <test 'if' condition> |; // +-----------------------+; // ./ \.; // +------ block 1 -------+ +------ block 2 -------+; // 2| LIFETIME_START b3 | 5| LIFETIME_START b4, b5 |; // 3| <uses of b1, b3> | 6| <uses of b2, b4, b5> |; // 4| LIFETIME_END b3 | 7| LIFETIME_END b4, b5 |; // +-----------------------+ +-----------------------+; // \. /.; // +------ block 3 -------+; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/StackColoring.cpp:5830,Variab,Variables,5830,interpreter/llvm-project/llvm/lib/CodeGen/StackColoring.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/StackColoring.cpp,1,['Variab'],['Variables']
Modifiability," files marked as 'non-staged'; /// are ignored; /// and 'csopt' controls if an actual check on the staged status (via TFileStager) is done; /// 0 check that the file is staged using TFileStager; /// 1 do not hard check the staged status; /// (example: use fopt = -101 to check the staged status of all the files, or fopt = 110; /// to re-check the stage status of all the files marked as staged); ///; /// If 'dbg' is true, some information about the ongoing operations is reguraly; /// printed; this can be useful when processing very large datasets, an operation; /// which can take a very long time.; ///; /// The int 'sopt' controls what is done on the selected files (this is effective only; /// if ropt is 0 or 2 - see below):; /// -1 no action (fopt = 2 and sopt = -1 touches all staged files); /// 0 do the full process: open the files and fill the meta-information; /// in the TFileInfo object, including the end-point URL; /// 1 only locate the files, by updating the end-point URL (uses TFileStager::Locate; /// which is must faster of an TFile::Open); /// 2 issue a stage request on the files; ///; /// The int 'ropt' controls which actions are performed:; /// 0 do the full process: get list of files to process and process them; /// 1 get the list of files to be scanned and return it in flist; /// 2 process the files in flist (according to sopt); /// When defined flist is under the responsability the caller.; ///; /// If avgsz > 0 it is used for the final update of the dataset global counters.; ///; /// If 'mss' is defined use it to initialize the stager (instead of the Url in the; /// TFileInfo objects); ///; /// If maxfiles > 0, select for processing a maximum of 'filesmax' files (but if fopt is 1 or 2; /// all files marked as 'staged' are still open or touched); ///; /// Return code; /// 1 dataset was not changed; /// 2 dataset was changed; ///; /// The number of touched, opened and disappeared files are returned in the respective; /// variables, if these are defined.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManager.cxx:2765,variab,variables,2765,proof/proof/src/TDataSetManager.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManager.cxx,1,['variab'],['variables']
Modifiability," from the same group. Each color chip is identified by a mnemonic (eg kYellow) and a number.; The keywords, kRed, kBlue, kYellow, kPink, etc are defined in the header file __Rtypes.h__; that is included in all ROOT other header files. We strongly recommend to use these keywords; in your code instead of hardcoded color numbers, eg:; ~~~ {.cpp}; myObject.SetFillColor(kRed);; myObject.SetFillColor(kYellow-10);; myLine.SetLineColor(kMagenta+2);; ~~~. Begin_Macro; {; TColorWheel *w = new TColorWheel();; auto cw = new TCanvas(""cw"",""cw"",0,0,400,400);; w->SetCanvas(cw);; w->Draw();; }; End_Macro. ### Special case forcing black&white output.; If the current style fill area color is set to 0, then ROOT will force; a black&white output for all objects with a fill area defined and independently; of the object fill style. \anchor ATTFILL2; ## Fill Area style; The fill area style defines the pattern used to fill a polygon.; The fill area style of any class inheriting from `TAttFill` can; be changed using the method `SetFillStyle` and retrieved using the; method `GetFillStyle`.; ### Conventions for fill styles:. - 0 : hollow; - 1001 : Solid; - 3000+pattern_number (see below); - For TPad only:. - 4000 :the window is transparent.; - 4000 to 4100 the window is 100% transparent to 100% opaque. The pad transparency is visible in binary outputs files like gif, jpg, png etc ..; but not in vector graphics output files like PS, PDF and SVG. This convention; (fill style > 4000) is kept for backward compatibility. It is better to use; the color transparency instead. pattern_number can have any value from 1 to 25 (see table), or any; value from 100 to 999. For the latest the numbering convention is the following:; ~~~ {.cpp}; pattern_number = ijk (FillStyle = 3ijk). i (1-9) : specify the space between each hatch; 1 = 1/2mm 9 = 6mm. j (0-9) : specify angle between 0 and 90 degrees; 0 = 0; 1 = 10; 2 = 20; 3 = 30; 4 = 45; 5 = Not drawn; 6 = 60; 7 = 70; 8 = 80; 9 = 90. k (0-9) : specify angle betw",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TAttFill.cxx:3160,inherit,inheriting,3160,core/base/src/TAttFill.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TAttFill.cxx,1,['inherit'],['inheriting']
Modifiability," has some additional limitation that make; // it can only run after SIAnnotateControlFlow.; //; // To achieve optimal code generation for AMDGPU, we assume that uniformity; // analysis reports the PHI in join block of divergent branch as uniform if; // it has one unique uniform value plus additional undefined/poisoned incoming; // value. That is to say the later compiler pipeline will ensure such PHI always; // return uniform value and ensure it work correctly. Let's take a look at two; // typical patterns in structured CFG that need to be taken care: (In both; // patterns, block %if terminate with divergent branch.); //; // Pattern A: Block with undefined incoming value dominates defined predecessor; // %if; // | \; // | %then; // | /; // %endif: %phi = phi [%undef, %if], [%uniform, %then]; //; // Pattern B: Block with defined incoming value dominates undefined predecessor; // %if; // | \; // | %then; // | /; // %endif: %phi = phi [%uniform, %if], [%undef, %then]; //; // For pattern A, by reporting %phi as uniform, the later pipeline need to make; // sure it be handled correctly. The backend usually allocates a scalar register; // and if any thread in a wave takes %then path, the scalar register will get; // the %uniform value.; //; // For pattern B, we will replace the undef operand with the other defined value; // in this pass. So the scalar register allocated for such PHI will get correct; // liveness. Without this transformation, the scalar register may be overwritten; // in the %then block.; //; // Limitation note:; // If the join block of divergent threads is a loop header, the pass cannot; // handle it correctly right now. For below case, the undef in %phi should also; // be rewritten. Currently we depend on SIAnnotateControlFlow to split %header; // block to get a separate join block, then we can rewrite the undef correctly.; // %if; // | \; // | %then; // | /; // -> %header: %phi = phi [%uniform, %if], [%undef, %then], [%uniform2, %header]; // | |; // \---",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPURewriteUndefForPHI.cpp:2410,rewrite,rewrite,2410,interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPURewriteUndefForPHI.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPURewriteUndefForPHI.cpp,1,['rewrite'],['rewrite']
Modifiability," has the following general structure.; // Note that technically the last frame area (VLAs) doesn't get created until; // in the main function body, after the prologue is run. However, it's depicted; // here for completeness.; //; // | | Higher address; // |----------------------------------------------|; // | Parameter area for this function |; // |----------------------------------------------|; // | Register save area (RSA) for this function |; // |----------------------------------------------|; // | Return address for this function |; // |----------------------------------------------|; // | Frame pointer for this function |; // |----------------------------------------------| <- fp(=old sp); // |.empty.space.to.make.part.below.aligned.in....|; // |.case.it.needs.more.than.the.standard.16-byte.| (size of this area is; // |.alignment....................................| unknown at compile time); // |----------------------------------------------|; // | Local variables of fixed size including spill|; // | slots |; // |----------------------------------------------| <- bp(not defined by ABI,; // |.variable-sized.local.variables.(VLAs)........| LLVM chooses SX17); // |..............................................| (size of this area is; // |..............................................| unknown at compile time); // |----------------------------------------------| <- stack top (returned by; // | Parameter area for callee | alloca); // |----------------------------------------------|; // | Register save area (RSA) for callee |; // |----------------------------------------------|; // | Return address for callee |; // |----------------------------------------------|; // | Frame pointer for callee |; // |----------------------------------------------| <- sp; // | | Lower address; //; // To access the data in a frame, at-compile time, a constant offset must be; // computable from one of the pointers (fp, bp, sp) to access it. The size; // of the areas with a dotted back",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/VE/VEFrameLowering.cpp:2627,variab,variables,2627,interpreter/llvm-project/llvm/lib/Target/VE/VEFrameLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/VE/VEFrameLowering.cpp,1,['variab'],['variables']
Modifiability," have the name; NameSpace@@BaseClass as `:` is a reserved pathname character on some; operating systems. Macros not beginning with 'P' and ending with "".C""; are ignored. These macros typically look like:; ~~~ {.cpp}; void P10_TDCacheFile(); {; gPluginMgr->AddHandler(""TFile"", ""^dcache"", ""TDCacheFile"",; ""DCache"", ""TDCacheFile(const char*,Option_t*)"");; }; ~~~; Plugin handlers can also be defined via resources in the .rootrc; file. Although now deprecated this method still works for backward; compatibility, e.g.:; ~~~ {.cpp}; Plugin.TSQLServer: ^mysql: TMySQLServer MySQL ""<constructor>""; +Plugin.TSQLServer: ^pgsql: TPgSQLServer PgSQL ""<constructor>""; Plugin.TVirtualFitter: * TFitter Minuit ""TFitter(Int_t)""; ~~~; Where the + in front of Plugin.TSQLServer says that it extends the; existing definition of TSQLServer, useful when there is more than; one plugin that can extend the same base class. The ""<constructor>""; should be the constructor or a static method that generates an; instance of the specified class. Global methods should start with; ""::"" in their name, like ""::CreateFitter()"".; Instead of being a shared library a plugin can also be a CINT; script, so instead of libDialog.so one can have Dialog.C.; The * is a placeholder in case there is no need for a URI to; differentiate between different plugins for the same base class.; For the default plugins see $ROOTSYS/etc/system.rootrc. Plugin handlers can also be registered at run time, e.g.:; ~~~ {.cpp}; gPluginMgr->AddHandler(""TSQLServer"", ""^sqlite:"",; ""TSQLiteServer"", ""RSQLite"",; ""TSQLiteServer(const char*,const char*,const char*)"");; ~~~; A list of currently defined handlers can be printed using:; ~~~ {.cpp}; gPluginMgr->Print(); // use option=""a"" to see ctors; ~~~; The use of the plugin library manager removes all textual references; to hard-coded class and library names and the resulting dependencies; in the base classes. The plugin manager is used to extend a.o.; TFile, TSQLServer, TGrid, etc. functionality.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TPluginManager.cxx:2739,plugin,plugin,2739,core/base/src/TPluginManager.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TPluginManager.cxx,7,"['Plugin', 'extend', 'plugin']","['Plugin', 'extend', 'plugin', 'plugins']"
Modifiability," here !; //; </pre>; <p>Note that <b><i>everything</i></b> until the first non-commented line is considered; as a valid class description block.</p>. <h4><a name=""syntax:classidx"">III.2 Class index</a></h4>. <p>All classes to be documented will have an entry in the ClassIndex.html,; showing their name with a link to their documentation page and a miniature; description. This description for e.g. the class MyClass has to be given; in MyClass's header as a comment right after ClassDef(MyClass, n).</p>. <h4><a name=""syntax:meth"">III.3 Method documentation</a></h4>; <p>A member function description block starts immediately after '{'; and looks like this:</p>; <pre>; void TWorld::HelloWorldFunc(string *text); {; // This is an example of description for the; // TWorld member function. helloWorld.Print( text );; }; </pre>; Like in a class description block, <b><i>everything</i></b> until the first; non-commented line is considered as a valid member function; description block. If the rootrc variable <tt>Root.Html.DescriptionStyle</tt> is set to; <tt>Doc++</tt> THtml will also look for method documentation in front of; the function implementation. This feature is not recommended; source code; making use of this does not comply to the ROOT documentation standards, which; means future versions of THtml might not support it anymore. <h4><a name=""syntax:datamem"">III.4 Data member documentation</a></h4>. <p>Data members are documented by putting a C++ comment behind their; declaration in the header file, e.g.</p>; <pre>; int fIAmADataMember; // this is a data member; </pre>. <h3><a name=""directive"">IV. Documentation directives</a></h3>; <em>NOTE that THtml does not yet support nested directives; (i.e. latex inside html etc)!</em>. <h4><a name=""directive:html"">IV.1 <tt>BEGIN<!-- -->_HTML</tt> <tt>END<!-- -->_HTML</tt>: include 'raw' HTML</a></h4>. <p>You can insert pure html code into your documentation comments. During the; generation of the documentation, this code will be inser",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx:14615,variab,variable,14615,html/src/THtml.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx,1,['variab'],['variable']
Modifiability," in a \f$\hbox{$_s$}{\cal P}lot\f$ for a given species, one recovers the yield of the; species, as provided by the fit.; The property 4 is implemented in the TSPlot class as a check. - the sum of the statistical uncertainties per bin. \f[; \sigma[N_{\rm n}\ _s\tilde{\rm M}_{\rm n}(x) {\delta x}]~=~\sqrt{\sum_{e \subset {\delta x}} ({_s{\cal P}}_{\rm n})^2} ~. \tag{6}; \f]. reproduces the statistical uncertainty on the yield \f$N_{\rm n}\f$, as provided by the fit:; \f$\sigma[N_{\rm n}]\equiv\sqrt{\hbox{ V}_{{\rm n}{\rm n}}}\f$ .; Because of that and since the determination of the yields is optimal; when obtained using a Likelihood fit, one can conclude that the \f$\hbox{$_s$}{\cal P}lot\f$; technique is itself an optimal method to reconstruct distributions of control variables. ### Different steps followed by TSPlot. 1. A maximum Likelihood fit is performed to obtain the yields \f$N_i\f$; of the various species.The fit relies on discriminating variables \f$y\f$; uncorrelated with a control variable \f$x\f$:; the later is therefore totally absent from the fit. 2. The weights \f${_s{\cal P}}\f$ are calculated using Eq.; (2); where the covariance matrix is taken from Minuit. 3. Histograms of \f$x\f$ are filled by weighting the events with \f${_s{\cal P}}\f$ . 4. Error bars per bin are given by Eq. (6). The \f$\hbox {$_s$}{\cal P}lots\f$ reproduce the true distributions of the species; in the control variable \f$x\f$, within the above defined statistical uncertainties. ### Illustrations. To illustrate the technique, one considers an example derived from the analysis where; \f$\hbox {$_s$}{\cal P}lots\f$; have been first used (charmless B decays). One is dealing with a data; sample in which two species are present: the first is termed signal and; the second background. A maximum Likelihood fit is performed to obtain; the two yields \f$N_1\f$ and \f$N_2\f$ . The fit relies on two discriminating; variables collectively denoted \f$y\f$ which are chosen within three possible",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/splot/src/TSPlot.cxx:5776,variab,variables,5776,math/splot/src/TSPlot.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/splot/src/TSPlot.cxx,2,['variab'],"['variable', 'variables']"
Modifiability," in the computation graph. |; | GetNRuns() | Return the number of event loops run by this RDataFrame instance so far. |; | GetNSlots() | Return the number of processing slots that RDataFrame will use during the event loop (i.e. the concurrency level). |; | SaveGraph() | Store the computation graph of an RDataFrame in [DOT format (graphviz)](https://en.wikipedia.org/wiki/DOT_(graph_description_language)) for easy inspection. See the [relevant section](\ref representgraph) for details. |. \anchor introduction; ## Introduction; Users define their analysis as a sequence of operations to be performed on the dataframe object; the framework; takes care of the management of the loop over entries as well as low-level details such as I/O and parallelization.; RDataFrame provides methods to perform most common operations required by ROOT analyses;; at the same time, users can just as easily specify custom code that will be executed in the event loop. RDataFrame is built with a *modular* and *flexible* workflow in mind, summarised as follows:. 1. Construct a dataframe object by specifying a dataset. RDataFrame supports TTree as well as TChain, [CSV files](https://root.cern/doc/master/df014__CSVDataSource_8C.html), [SQLite files](https://root.cern/doc/master/df027__SQliteDependencyOverVersion_8C.html), [RNTuples](https://root.cern/doc/master/structROOT_1_1Experimental_1_1RNTuple.html), and it can be extended to custom data formats. From Python, [NumPy arrays can be imported into RDataFrame](https://root.cern/doc/master/df032__MakeNumpyDataFrame_8py.html) as well. 2. Transform the dataframe by:. - [Applying filters](https://root.cern/doc/master/classROOT_1_1RDataFrame.html#transformations). This selects only specific rows of the dataset. - [Creating custom columns](https://root.cern/doc/master/classROOT_1_1RDataFrame.html#transformations). Custom columns can, for example, contain the results of a computation that must be performed for every row of the dataset. 3. [Produce results",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx:11870,flexible,flexible,11870,tree/dataframe/src/RDataFrame.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx,1,['flexible'],['flexible']
Modifiability," in the given region (fXmin, fXmax) by the given; /// fEnhanceCoeff and transforms it back; /// Processed data are written into dest spectrum.; ///; /// Function parameters:; /// - source-pointer to the vector of source spectrum, its length should; /// be size except for inverse FOURIER, FOUR-WALSh, FOUR-HAAR; /// transform. These need 2*size length to supply real and; /// imaginary coefficients.; /// - destVector-pointer to the vector of dest data, its length should be; /// size except for direct FOURIER, FOUR-WALSh, FOUR-HAAR. These; /// need 2*size length to store real and imaginary coefficients; ///; /// ### Example - script Enhance.c:; ///; /// \image html spectrumtransform_enhance_image001.jpg Fig. 1 Original spectrum (black line) and enhanced spectrum (red line) using Cosine transform (channels 0-1024 were multiplied by 2); ///; /// #### Script:; ///; /// Example to illustrate Enhance function (class TSpectrumTransform).; /// To execute this example, do:; ///; /// `root > .x Enhance.C`; ///; /// ~~~ {.cpp}; /// void Enhance() {; /// Int_t i;; /// Double_t nbins = 4096;; /// Double_t xmin = 0;; /// Double_t xmax = (Double_t)nbins;; /// Double_t * source = new Double_t[nbins];; /// Double_t * dest = new Double_t[nbins];; /// TH1F *h = new TH1F(""h"",""Enhancement using Cosine transform"",nbins,xmin,xmax);; /// TH1F *d = new TH1F(""d"","""",nbins,xmin,xmax);; /// TFile *f = new TFile(""spectra/TSpectrum.root"");; /// h=(TH1F*) f->Get(""transform1;1"");; /// for (i = 0; i < nbins; i++) source[i]=h->GetBinContent(i + 1);; /// TCanvas *Transform1 = gROOT->GetListOfCanvases()->FindObject(""Transform1"");; /// if (!Transform1) Transform1 = new TCanvas(""Transform"",""Transform1"",10,10,1000,700);; /// h->SetAxisRange(700,1024);; /// h->Draw(""L"");; /// TSpectrum *s = new TSpectrum();; /// TSpectrumTransform *t = new TSpectrumTransform(4096);; /// t->SetTransformType(t->kTransformCos,0);; /// t->SetRegion(0, 1024);; /// t->SetEnhanceCoeff(2);; /// t->Enhance(source,dest);; /// for (i = ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrumTransform.cxx:1236,Enhance,Enhance,1236,hist/spectrum/src/TSpectrumTransform.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrumTransform.cxx,1,['Enhance'],['Enhance']
Modifiability," including. In addition to provide the API for function minimization (via ROOT::Math::Minimizer::Minimize) the Minimizer class provides:; - the interface for setting the function to be minimized. The objective function passed to the Minimizer must implement the multi-dimensional generic interface; ROOT::Math::IBaseFunctionMultiDim. If the function provides gradient calculation (e.g. implementing the ROOT::Math::IGradientFunctionMultiDim interface); the gradient will be used by the Minimizer class, when needed. There are convenient classes for the users to wrap their own functions in this required interface for minimization.; These are the `ROOT::Math::Functor` class and the `ROOT::Math::GradFunctor` class for wrapping functions providing both evaluation and gradient. Some methods, like Fumili, Fumili2 and GSLMultiFit are; specialized method for least-square and also likelihood minimizations. They require then that the given function implements in addition; the `ROOT::Math::FitMethodFunction` interface.; - The interface for setting the initial values for the function variables (which are the parameters in; of the model function in case of solving for fitting) and specifying their limits.; - The interface to set and retrieve basic minimization parameters. These parameter are controlled by the class `ROOT::Math::MinimizerOptions`.; When no parameters are specified the default ones are used. Specific Minimizer options can also be passed via the `MinimizerOptions` class.; For the list of the available option parameter one must look at the documentation of the corresponding derived class.; - The interface to retrieve the result of minimization ( minimum X values, function value, gradient, error on the minimum, etc...); - The interface to perform a Scan, Hesse or a Contour plot (for the minimizers that support this, i.e. Minuit and Minuit2). An example on how to use this interface is the tutorial NumericalMinimization.C in the tutorials/fit directory. @ingroup MultiMin; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Minimizer.h:3148,variab,variables,3148,math/mathcore/inc/Math/Minimizer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Minimizer.h,1,['variab'],['variables']
Modifiability," info.; // Example:; // Before the Pre Register Allocation Load Store Pass; // inst_a; // %2 = ld ...; // inst_b; // DBG_VALUE %2, ""x"", ...; // %3 = ld ...; // After the Pass:; // inst_a; // inst_b; // DBG_VALUE %2, ""x"", ...; // %2 = ld ...; // %3 = ld ...; // The code below addresses this by moving the DBG_VALUE to the position; // immediately after the load.; // Example:; // After the code below:; // inst_a; // inst_b; // %2 = ld ...; // DBG_VALUE %2, ""x"", ...; // %3 = ld ...; // The algorithm works in two phases: First RescheduleOps() populates the; // RegisterMap with registers that were moved as keys, there is no value; // inserted. In the next phase, every MachineInstr in a basic block is; // iterated over. If it is a valid DBG_VALUE or DBG_VALUE_LIST and it uses one; // or more registers in the RegisterMap, the RegisterMap and InstrMap are; // populated with the MachineInstr. If the DBG_VALUE or DBG_VALUE_LIST; // describes debug information for a variable that already exists in the; // DbgValueSinkCandidates, the MachineInstr in the DbgValueSinkCandidates must; // be set to undef. If the current MachineInstr is a load that was moved,; // undef the corresponding DBG_VALUE or DBG_VALUE_LIST and clone it to below; // the load.; // To illustrate the above algorithm visually let's take this example.; // Before the Pre Register Allocation Load Store Pass:; // %2 = ld ...; // DBG_VALUE %2, A, .... # X; // DBG_VALUE 0, A, ... # Y; // %3 = ld ...; // DBG_VALUE %3, A, ..., # Z; // %4 = ld ...; // After Pre Register Allocation Load Store Pass:; // DBG_VALUE %2, A, .... # X; // DBG_VALUE 0, A, ... # Y; // DBG_VALUE %3, A, ..., # Z; // %2 = ld ...; // %3 = ld ...; // %4 = ld ...; // The algorithm below does the following:; // In the beginning, the RegisterMap will have been populated with the virtual; // registers %2, and %3, the DbgValueSinkCandidates and the InstrMap will be; // empty. DbgValueSinkCandidates = {}, RegisterMap = {2 -> {}, 3 -> {}},; // InstrMap {}; // -",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMLoadStoreOptimizer.cpp:1170,variab,variable,1170,interpreter/llvm-project/llvm/lib/Target/ARM/ARMLoadStoreOptimizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMLoadStoreOptimizer.cpp,1,['variab'],['variable']
Modifiability," inspection. See the [relevant section](\ref representgraph) for details. |. \anchor introduction; ## Introduction; Users define their analysis as a sequence of operations to be performed on the dataframe object; the framework; takes care of the management of the loop over entries as well as low-level details such as I/O and parallelization.; RDataFrame provides methods to perform most common operations required by ROOT analyses;; at the same time, users can just as easily specify custom code that will be executed in the event loop. RDataFrame is built with a *modular* and *flexible* workflow in mind, summarised as follows:. 1. Construct a dataframe object by specifying a dataset. RDataFrame supports TTree as well as TChain, [CSV files](https://root.cern/doc/master/df014__CSVDataSource_8C.html), [SQLite files](https://root.cern/doc/master/df027__SQliteDependencyOverVersion_8C.html), [RNTuples](https://root.cern/doc/master/structROOT_1_1Experimental_1_1RNTuple.html), and it can be extended to custom data formats. From Python, [NumPy arrays can be imported into RDataFrame](https://root.cern/doc/master/df032__MakeNumpyDataFrame_8py.html) as well. 2. Transform the dataframe by:. - [Applying filters](https://root.cern/doc/master/classROOT_1_1RDataFrame.html#transformations). This selects only specific rows of the dataset. - [Creating custom columns](https://root.cern/doc/master/classROOT_1_1RDataFrame.html#transformations). Custom columns can, for example, contain the results of a computation that must be performed for every row of the dataset. 3. [Produce results](https://root.cern/doc/master/classROOT_1_1RDataFrame.html#actions). *Actions* are used to aggregate data into results. Most actions are *lazy*, i.e. they are not executed on the spot, but registered with RDataFrame and executed only when a result is accessed for the first time. Make sure to book all transformations and actions before you access the contents of any of the results. This lets RDataFrame accumulate",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx:12284,extend,extended,12284,tree/dataframe/src/RDataFrame.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx,1,['extend'],['extended']
Modifiability," integrates the PDF in each; * bin using an adaptive integrator. This usually requires 21 times more function evaluations, but significantly; * reduces biases due to better sampling of the PDF. The integrator can be accessed from the outside; * using integrator(). This can be used to change the integration rules, so less/more function evaluations are; * performed. The target precision of the integrator can be set in the constructor.; *; *; * ### How to use it; * There are two ways to use this class:; * - Manually wrap a PDF:; * ```; * RooBinSamplingPdf binSampler(""<name>"", ""title"", <binned observable of PDF>, <original PDF> [, <precision for integrator>]);; * binSampler.fitTo(data);; * ```; * When a PDF is wrapped with a RooBinSamplingPDF, just use the bin sampling PDF instead of the original one for fits; * or plotting etc.; * \note The binning will be taken from the observable. Make sure that this binning is the same as the one of the dataset that should be fit.; * Use RooRealVar::setBinning() to adapt it.; * - Instruct test statistics to carry out this wrapping automatically:; * ```; * pdf.fitTo(data, IntegrateBins(<precision>));; * ```; * This method is especially useful when used with a simultaneous PDF, since each component will automatically be wrapped,; * depending on the value of `precision`:; * - `precision < 0.`: None of the PDFs are touched, bin sampling is off.; * - `precision = 0.`: Continuous PDFs that are fit to a RooDataHist are wrapped into a RooBinSamplingPdf. The target precision; * forwarded to the integrator is 1.E-4 (the default argument of the constructor).; * - `precision > 0.`: All continuous PDFs are automatically wrapped into a RooBinSamplingPdf, regardless of what data they are; * fit to (see next paragraph). The same `'precision'` is used for all integrators.; *; * ### Simulating a binned fit using RooDataSet; * Some frameworks use unbinned data (RooDataSet) to simulate binned datasets. By adding one entry for each bin centre with the; *",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooBinSamplingPdf.cxx:2275,adapt,adapt,2275,roofit/roofitcore/src/RooBinSamplingPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooBinSamplingPdf.cxx,1,['adapt'],['adapt']
Modifiability," into; one single I/O buffer or to make several branches.; Making several branches is particularly interesting in the data analysis phase,; when it is desirable to have a high reading rate and not all columns are equally interesting. \anchor creatingattreetoc; ## Create a TTree to store columnar data; - [Construct a TTree](\ref creatingattree); - [Add a column of Fundamental Types and Arrays thereof](\ref addcolumnoffundamentaltypes); - [Add a column of a STL Collection instances](\ref addingacolumnofstl); - [Add a column holding an object](\ref addingacolumnofobjs); - [Add a column holding a TObjectArray](\ref addingacolumnofobjs); - [Fill the tree](\ref fillthetree); - [Add a column to an already existing Tree](\ref addcoltoexistingtree); - [An Example](\ref fullexample). \anchor creatingattree; ## Construct a TTree. ~~~ {.cpp}; TTree tree(name, title); ~~~; Creates a Tree with name and title. Various kinds of branches can be added to a tree:; - Variables representing fundamental types, simple classes/structures or list of variables: for example for C or Fortran; structures.; - Any C++ object or collection, provided by the STL or ROOT. In the following, the details about the creation of different types of branches are given. \anchor addcolumnoffundamentaltypes; ## Add a column (""branch"") holding fundamental types and arrays thereof; This strategy works also for lists of variables, e.g. to describe simple structures.; It is strongly recommended to persistify those as objects rather than lists of leaves. ~~~ {.cpp}; auto branch = tree.Branch(branchname, address, leaflist, bufsize); ~~~; - address is the address of the first item of a structure; - leaflist is the concatenation of all the variable names and types; separated by a colon character :; The variable name and the variable type are separated by a; slash (/). The variable type must be 1 character. (Characters; after the first are legal and will be appended to the visible; name of the leaf, but have no effect.) ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:2923,Variab,Variables,2923,tree/tree/src/TTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx,2,"['Variab', 'variab']","['Variables', 'variables']"
Modifiability," involving induction; // variables in loops.; //; // There are several aspects to this library. First is the representation of; // scalar expressions, which are represented as subclasses of the SCEV class.; // These classes are used to represent certain types of subexpressions that we; // can handle. We only create one SCEV of a particular shape, so; // pointer-comparisons for equality are legal.; //; // One important aspect of the SCEV objects is that they are never cyclic, even; // if there is a cycle in the dataflow for an expression (ie, a PHI node). If; // the PHI node is one of the idioms that we can represent (e.g., a polynomial; // recurrence) then we represent it directly as a recurrence node, otherwise we; // represent it as a SCEVUnknown node.; //; // In addition to being able to represent expressions of various types, we also; // have folders that are used to build the *canonical* representation for a; // particular expression. These folders are capable of using a variety of; // rewrite rules to simplify the expressions.; //; // Once the folders are defined, we can implement the more interesting; // higher-level code, such as the code that recognizes PHI nodes of various; // types, computes the execution count of a loop, etc.; //; // TODO: We should use these routines and value representations to implement; // dependence analysis!; //; //===----------------------------------------------------------------------===//; //; // There are several good references for the techniques used in this analysis.; //; // Chains of recurrences -- a method to expedite the evaluation; // of closed-form functions; // Olaf Bachmann, Paul S. Wang, Eugene V. Zima; //; // On computational properties of chains of recurrences; // Eugene V. Zima; //; // Symbolic Evaluation of Chains of Recurrences for Loop Optimization; // Robert A. van Engelen; //; // Efficient Symbolic Analysis for Optimizing Compilers; // Robert A. van Engelen; //; // Using the chains of recurrences algebra for ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/ScalarEvolution.cpp:1518,rewrite,rewrite,1518,interpreter/llvm-project/llvm/lib/Analysis/ScalarEvolution.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/ScalarEvolution.cpp,1,['rewrite'],['rewrite']
Modifiability," is the most straightforward, and; certainly among the most elegant multivariate analyser approaches.; We define the likelihood ratio, \f$ R_L \f$, for event; \f$ i \f$, by:. \f[; R_L(i) = \frac{L_S(i)}{L_B(i) + L_B(i)}; \f]. Here the signal and background likelihoods, \f$ L_S \f$,; \f$ L_B \f$, are products of the corresponding probability; densities, \f$ p_S \f$, \f$ p_B \f$, of the; \f$ N_{var} \f$ discriminating variables used in the MVA:. \f[; L_S(i) \ \prod_{j=1}^{N_{var}} p_{Sj} (i); \f]. and accordingly for \f$ L_B \f$.; In practise, TMVA uses polynomial splines to estimate the probability; density functions (PDF) obtained from the distributions of the; training variables. Note that in TMVA the output of the likelihood ratio is transformed by:. \f[; R_L(i) \to R'_L(i) = -\frac{1}{\tau} ln(R_L^{-1}(i) -1); \f]. to avoid the occurrence of heavy peaks at \f$ R_L = 0.1 \f$ . #### Decorrelated (or ""diagonalized"") Likelihood. The biggest drawback of the Likelihood approach is that it assumes; that the discriminant variables are uncorrelated. If it were the case,; it can be proven that the discrimination obtained by the above likelihood; ratio is optimal, ie, no other method can beat it. However, in most; practical applications of MVAs correlations are present. </p>. Linear correlations, measured from the training sample, can be taken; into account in a straightforward manner through the square-root; of the covariance matrix. The square-root of a matrix; \f$ C \f$ is the matrix \f$ C&prime; \f$ that multiplied with itself; yields \f$ C \f$: \f$ C \f$=\f$ C&prime;C&prime; \f$. We compute the; square-root matrix (SQM) by means of diagonalising (\f$ D \f$) the; covariance matrix:. \f[; D = S^TCS \Rightarrow C' = S \sqrt{DS^T}; \f]. and the linear transformation of the linearly correlated into the; uncorrelated variables space is then given by multiplying the measured; variable tuple by the inverse of the SQM. Note that these transformations; are performed for both sig",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodLikelihood.cxx:2568,variab,variables,2568,tmva/tmva/src/MethodLikelihood.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodLikelihood.cxx,1,['variab'],['variables']
Modifiability," it allocates. For the module scope lds,; // this is via metadata indicating whether the variable is not required. If a; // pass deletes that metadata, a fatal error on disagreement with the absolute; // symbol metadata will occur. For kernel scope and dynamic, this is by _name_; // correspondence between the function and the variable. It requires the; // kernel to have a name (which is only a limitation for tests in practice) and; // for nothing to rename the corresponding symbols. This is a hazard if the pass; // is run multiple times during debugging. Alternative schemes considered all; // involve bespoke metadata.; //; // If the name correspondence can be replaced, multiple distinct kernels that; // have the same memory layout can map to the same kernel id (as the address; // itself is handled by the absolute symbol metadata) and that will allow more; // uses of the ""kernel"" style faster lowering and reduce the size of the lookup; // tables.; //; // There is a test that checks this does not fire for a graphics shader. This; // lowering is expected to work for graphics if the isKernel test is changed.; //; // The current markUsedByKernel is sufficient for PromoteAlloca but is elided; // before codegen. Replacing this with an equivalent intrinsic which lasts until; // shortly after the machine function lowering of LDS would help break the name; // mapping. The other part needed is probably to amend PromoteAlloca to embed; // the LDS variables it creates in the same struct created here. That avoids the; // current hazard where a PromoteAlloca LDS variable might be allocated before; // the kernel scope (and thus error on the address check). Given a new invariant; // that no LDS variables exist outside of the structs managed here, and an; // intrinsic that lasts until after the LDS frame lowering, it should be; // possible to drop the name mapping and fold equivalent memory layouts.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerModuleLDSPass.cpp:10006,variab,variables,10006,interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerModuleLDSPass.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerModuleLDSPass.cpp,3,['variab'],"['variable', 'variables']"
Modifiability," it off if you really want to.; *; * In 1-pass quantization the colormap must be chosen in advance of seeing the; * image. We use a map consisting of all combinations of Ncolors[i] color; * values for the i'th component. The Ncolors[] values are chosen so that; * their product, the total number of colors, is no more than that requested.; * (In most cases, the product will be somewhat less.); *; * Since the colormap is orthogonal, the representative value for each color; * component can be determined without considering the other components;; * then these indexes can be combined into a colormap index by a standard; * N-dimensional-array-subscript calculation. Most of the arithmetic involved; * can be precalculated and stored in the lookup table colorindex[].; * colorindex[i][j] maps pixel value j in component i to the nearest; * representative value (grid plane) for that component; this index is; * multiplied by the array stride for component i, so that the; * index of the colormap entry closest to a given pixel value is just; * sum( colorindex[component-number][pixel-component-value] ); * Aside from being fast, this scheme allows for variable spacing between; * representative values with no additional lookup cost.; *; * If gamma correction has been applied in color conversion, it might be wise; * to adjust the color grid spacing so that the representative colors are; * equidistant in linear space. At this writing, gamma correction is not; * implemented by jdcolor, so nothing is done here.; */; /* Declarations for ordered dithering.; *; * We use a standard 16x16 ordered dither array. The basic concept of ordered; * dithering is described in many references, for instance Dale Schumacher's; * chapter II.2 of Graphics Gems II (James Arvo, ed. Academic Press, 1991).; * In place of Schumacher's comparisons against a ""threshold"" value, we add a; * ""dither"" value to the input pixel and then round the result to the nearest; * output value. The dither value is equivalent to (",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jquant1.c:1495,variab,variable,1495,graf2d/asimage/src/libAfterImage/libjpeg/jquant1.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jquant1.c,1,['variab'],['variable']
Modifiability," kernel.; // Handling ConstantExpr during the pass complicated this significantly so now; // all ConstantExpr uses of LDS variables are expanded to instructions. This; // may need amending when implementing non-undef initialisers.; //; // Lowering is split between this IR pass and the back end. This pass chooses; // where given variables should be allocated and marks them with metadata,; // MD_absolute_symbol. The backend places the variables in coincidentally the; // same location and raises a fatal error if something has gone awry. This works; // in practice because the only pass between this one and the backend that; // changes LDS is PromoteAlloca and the changes it makes do not conflict.; //; // Addresses are written to constant global arrays based on the same metadata.; //; // The backend lowers LDS variables in the order of traversal of the function.; // This is at odds with the deterministic layout required. The workaround is to; // allocate the fixed-address variables immediately upon starting the function; // where they can be placed as intended. This requires a means of mapping from; // the function to the variables that it allocates. For the module scope lds,; // this is via metadata indicating whether the variable is not required. If a; // pass deletes that metadata, a fatal error on disagreement with the absolute; // symbol metadata will occur. For kernel scope and dynamic, this is by _name_; // correspondence between the function and the variable. It requires the; // kernel to have a name (which is only a limitation for tests in practice) and; // for nothing to rename the corresponding symbols. This is a hazard if the pass; // is run multiple times during debugging. Alternative schemes considered all; // involve bespoke metadata.; //; // If the name correspondence can be replaced, multiple distinct kernels that; // have the same memory layout can map to the same kernel id (as the address; // itself is handled by the absolute symbol metadata) and that w",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerModuleLDSPass.cpp:8380,variab,variables,8380,interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerModuleLDSPass.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerModuleLDSPass.cpp,1,['variab'],['variables']
Modifiability," least one virtual function is a pure virtual function. Due to; /// multiple, virtual inheritance, it is possible for a class to have; /// more than one final overrider. Although this is an error (per C++; /// [class.virtual]p2), it is not considered an error here: the final; /// overrider map can represent multiple final overriders for a; /// method, and it is up to the client to determine whether they are; /// problem. For example, the following class \c D has two final; /// overriders for the virtual function \c A::f(), one in \c C and one; /// in \c D:; ///; /// \code; /// struct A { virtual void f(); };; /// struct B : virtual A { virtual void f(); };; /// struct C : virtual A { virtual void f(); };; /// struct D : B, C { };; /// \endcode; ///; /// This data structure contains a mapping from every virtual; /// function *that does not override an existing virtual function* and; /// in every subobject where that virtual function occurs to the set; /// of virtual functions that override it. Thus, the same virtual; /// function \c A::f can actually occur in multiple subobjects of type; /// \c A due to multiple inheritance, and may be overridden by; /// different virtual functions in each, as in the following example:; ///; /// \code; /// struct A { virtual void f(); };; /// struct B : A { virtual void f(); };; /// struct C : A { virtual void f(); };; /// struct D : B, C { };; /// \endcode; ///; /// Unlike in the previous example, where the virtual functions \c; /// B::f and \c C::f both overrode \c A::f in the same subobject of; /// type \c A, in this example the two virtual functions both override; /// \c A::f but in *different* subobjects of type A. This is; /// represented by numbering the subobjects in which the overridden; /// and the overriding virtual member functions are located. Subobject; /// 0 represents the virtual base class subobject of that type, while; /// subobject numbers greater than 0 refer to non-virtual base class; /// subobjects of that type.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/CXXInheritance.h:1692,inherit,inheritance,1692,interpreter/llvm-project/clang/include/clang/AST/CXXInheritance.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/CXXInheritance.h,1,['inherit'],['inheritance']
Modifiability," look for; some strings (""tags"") in the source file, which have to appear right in; front of e.g. the author's name, copyright notice, etc. These tags can be; defined with the following environment variables: Root.Html.Author,; Root.Html.LastUpdate and Root.Html.Copyright, or with; SetAuthorTag(), SetLastUpdateTag(), SetCopyrightTag().</p>. <p>If the LastUpdate tag is not found, the current date and time are used.; This is useful when using; <a href=""http://root.cern.ch/root/html/THtml.html#THtml:MakeAll"">THtml::MakeAll()</a>'s; default option force=kFALSE, in which case; <a href=""http://root.cern.ch/root/html/THtml.html"">THtml</a> generates; documentation only for changed classes.</p>. Authors can be a comma separated list of author entries. Each entry has; one of the following two formats; <ul><li><tt>Name (non-alpha)</tt>.; <p><a href=""http://root.cern.ch/root/html/THtml.html"">THtml</a> will generate an; HTML link for <tt>Name</tt>, taking the Root.Html.XWho configuration; variable (defaults to ""http://consult.cern.ch/xwho/people?"") and adding; all parts of the name with spaces replaces by '+'. Non-alphanumerical; characters are printed out behind <tt>Name</tt>.</p>. <p>Example:</p>; <tt>// Author: Enrico Fermi</tt> appears in the source file.; <a href=""http://root.cern.ch/root/html/THtml.html"">THtml</a> will generate the link; <tt>http://consult.cern.ch/xwho/people?Enrico+Fermi</tt>. This works well for; people at CERN.</li>. <li><tt>Name &lt;link&gt; Info</tt>.; <p><a href=""http://root.cern.ch/root/html/THtml.html"">THtml</a> will generate; an HTML link for <tt>Name</tt> as specified by <tt>link</tt> and print; <tt>Info</tt> behind <tt>Name</tt>.</p>. <p>Example:</p>; <tt>// Author: Enrico Fermi &lt;http://www.enricos-home.it&gt;</tt> or<br/>; <tt>// Author: Enrico Fermi &lt;mailto:enrico@fnal.gov&gt;</tt> in the; source file. That's world compatible.</li>; </ul>. <p>Example (with defaults given):</p><pre>; Root.Html.Author: // Author:; Root.Html.LastUpdate: // ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx:7954,config,configuration,7954,html/src/THtml.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx,2,"['config', 'variab']","['configuration', 'variable']"
Modifiability," of a custom action using a user-defined helper object.; /// \tparam FirstColumn The type of the first column used by this action. Inferred together with OtherColumns if not present.; /// \tparam OtherColumns A list of the types of the other columns used by this action; /// \tparam Helper The type of the user-defined helper. See below for the required interface it should expose.; /// \param[in] helper The Action Helper to be scheduled.; /// \param[in] columns The names of the columns on which the helper acts.; /// \return the result of the helper wrapped in a RResultPtr.; ///; /// This method books a custom action for execution. The behavior of the action is completely dependent on the; /// Helper object provided by the caller. The required interface for the helper is described below (more; /// methods that the ones required can be present, e.g. a constructor that takes the number of worker threads is usually useful):; ///; /// ### Mandatory interface; ///; /// * `Helper` must publicly inherit from `ROOT::Detail::RDF::RActionImpl<Helper>`; /// * `Helper::Result_t`: public alias for the type of the result of this action helper. `Result_t` must be default-constructible.; /// * `Helper(Helper &&)`: a move-constructor is required. Copy-constructors are discouraged.; /// * `std::shared_ptr<Result_t> GetResultPtr() const`: return a shared_ptr to the result of this action (of type; /// Result_t). The RResultPtr returned by Book will point to this object. Note that this method can be called; /// _before_ Initialize(), because the RResultPtr is constructed before the event loop is started.; /// * `void Initialize()`: this method is called once before starting the event-loop. Useful for setup operations.; /// It must reset the state of the helper to the expected state at the beginning of the event loop: the same helper,; /// or copies of it, might be used for multiple event loops (e.g. in the presence of systematic variations).; /// * `void InitTask(TTreeReader *, unsigned int",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RDF/RInterface.hxx:1125,inherit,inherit,1125,tree/dataframe/inc/ROOT/RDF/RInterface.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RDF/RInterface.hxx,1,['inherit'],['inherit']
Modifiability, of output when all the tests run OK is shown below: //; // ****************************************************************************; // * Starting stress H I S T O F I T *; // ****************************************************************************; // Test 1D and 2D objects; // Test 1: 'Histogram 1D Variable' with 'GAUS'...................OK; // Test 2: 'Histogram 1D' with 'GAUS'............................OK; // Test 3: 'TGraph 1D' with 'GAUS'...............................OK; // Test 4: 'TGraphErrors 1D' with 'GAUS'.........................OK; // Test 5: 'THnSparse 1D' with 'GAUS'............................OK; // Test 6: 'Histogram 1D Variable' with 'Polynomial'.............OK; // Test 7: 'Histogram 1D' with 'Polynomial'......................OK; // Test 8: 'TGraph 1D' with 'Polynomial'.........................OK; // Test 9: 'TGraphErrors 1D' with 'Polynomial'...................OK; // Test 10: 'THnSparse 1D' with 'Polynomial'......................OK; // Test 11: 'Histogram 2D Variable' with 'gaus2D'.................OK; // Test 12: 'Histogram 2D' with 'gaus2D'..........................OK; // Test 13: 'TGraph 2D' with 'gaus2D'.............................OK; // Test 14: 'TGraphErrors 2DGE' with 'gaus2D'.....................OK; // Test 15: 'THnSparse 2D' with 'gaus2D'..........................OK; // Test Linear fits; // Test 16: 'Histogram 1D Variable' with 'Polynomial'.............OK; // Test 17: 'Histogram 1D' with 'Polynomial'......................OK; // Test 18: 'TGraph 1D' with 'Polynomial'.........................OK; // Test 19: 'TGraphErrors 1D' with 'Polynomial'...................OK; // Test 20: 'THnSparse 1D' with 'Polynomial'......................OK; // Test 21: 'Histogram 2D Variable' with 'Poly2D'.................OK; // Test 22: 'Histogram 2D' with 'Poly2D'..........................OK; // Test 23: 'TGraph 2D' with 'Poly2D'.............................OK; // Test 24: 'TGraphErrors 2DGE' with 'Poly2D'.....................OK; // Test 25: 'THnSparse,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/stressHistoFit.cxx:1989,Variab,Variable,1989,test/stressHistoFit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/stressHistoFit.cxx,1,['Variab'],['Variable']
Modifiability," of the resulting image; * to_height - desired height of the resulting image; * tint - ARGB32 value describing tinting color.; * out_format 	- optionally describes alternative ASImage format that; * should be produced as the result - XImage, ARGB32, etc.; * compression_out- compression level of resulting image in range 0-100.; * quality - output quality; * RETURN VALUE; * returns newly created and encoded ASImage on success, NULL of failure.; * DESCRIPTION; * Offset_x and offset_y define origin on source image from which; * tiling will start. If offset_x or offset_y is outside of the image; * boundaries, then it will be reduced by whole number of image sizes to; * fit inside the image. At the time of tiling image will be tinted; * unless tint == 0.; * EXAMPLE; * ASTile; *********/; /****f* libAfterImage/transform/merge_layers(); * NAME; * merge_layers(); * SYNOPSIS; * ASImage *merge_layers ( struct ASVisual *asv,; * ASImageLayer *layers, int count,; * unsigned int dst_width,; * unsigned int dst_height,; * ASAltImFormats out_format,; * unsigned int compression_out, int quality);; * INPUTS; * asv - pointer to valid ASVisual structure; * layers - array of ASImageLayer structures that will be rendered; * one on top of another. First element corresponds to; * the bottommost layer.; * dst_width - desired width of the resulting image; * dst_height - desired height of the resulting image; * out_format 	- optionally describes alternative ASImage format that; * should be produced as the result - XImage, ARGB32, etc.; * compression_out - compression level of resulting image in range 0-100.; * quality - output quality; * RETURN VALUE; * returns newly created and encoded ASImage on success, NULL of failure.; * DESCRIPTION; * merge_layers() will create new ASImage of requested size. It will then; * go through all the layers, and fill image with composition.; * Bottommost layer will be used unchanged and above layers will be; * superimposed on it, using algorithm specified in ASIm",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/transform.h:4046,layers,layers,4046,graf2d/asimage/src/libAfterImage/transform.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/transform.h,2,['layers'],['layers']
Modifiability," of the species; in the control variable \f$x\f$, within the above defined statistical uncertainties. ### Illustrations. To illustrate the technique, one considers an example derived from the analysis where; \f$\hbox {$_s$}{\cal P}lots\f$; have been first used (charmless B decays). One is dealing with a data; sample in which two species are present: the first is termed signal and; the second background. A maximum Likelihood fit is performed to obtain; the two yields \f$N_1\f$ and \f$N_2\f$ . The fit relies on two discriminating; variables collectively denoted \f$y\f$ which are chosen within three possible; variables denoted \f${m_{\rm ES}}\f$ , \f$\Delta E\f$ and \f${\cal F}\f$.; The variable which is not incorporated in \f$y\f$ is used as the control variable; \f$x\f$ . The six distributions of the three variables are assumed to be the ones; depicted in Fig. 1. \image html splot_pdfmesNIM.png Figure 1 width=800. Distributions of the three discriminating variables available to perform the Likelihood fit:; \f${m_{\rm ES}}\f$ , \f$\Delta E\f$ , \f${\cal F}\f$ .; Among the three variables, two are used to perform the fit while one is; kept out of the fit to serve the purpose of a control variable. The; three distributions on the top (resp. bottom) of the figure correspond; to the signal (resp. background). The unit of the vertical axis is; chosen such that it indicates the number of entries per bin, if one; slices the histograms in 25 bins. A data sample being built through a Monte Carlo simulation based on the; distributions shown in Fig.; 1,; one obtains the three distributions of Fig. 2.; Whereas the distribution of \f$\Delta E\f$ clearly indicates the presence of the signal,; the distribution of \f${m_{\rm ES}}\f$ and \f${\cal F}\f$ are less obviously populated by signal. \image html splot_genfiTOTNIM.png Figure 2 width=800. Distributions of the three discriminating variables for signal plus; background. The three distributions are the ones obtained from a data; sam",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/splot/src/TSPlot.cxx:7175,variab,variables,7175,math/splot/src/TSPlot.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/splot/src/TSPlot.cxx,1,['variab'],['variables']
Modifiability," or expectedEvents() if not specified.; /// \param[in] whatVars Choose variables in which to generate events. Variables not listed here will remain; /// constant and not be used for event generation.; /// \param[in] arg1,arg2,arg3,arg4,arg5,arg6 Optional RooCmdArg() to change behaviour of generate().; /// \return RooDataSet *, owned by caller.; ///; /// Any variables of this PDF that are not in whatVars will use their; /// current values and be treated as fixed parameters. Returns zero; /// in case of an error.; ///; /// <table>; /// <tr><th> Type of CmdArg <th> Effect on generate; /// <tr><td> `Name(const char* name)` <td> Name of the output dataset; /// <tr><td> `Verbose(bool flag)` <td> Print informational messages during event generation; /// <tr><td> `NumEvents(int nevt)` <td> Generate specified number of events; /// <tr><td> `Extended()` <td> If no number of events to be generated is given,; /// use expected number of events from extended likelihood term.; /// This evidently only works for extended PDFs.; /// <tr><td> `GenBinned(const char* tag)` <td> Use binned generation for all component pdfs that have 'setAttribute(tag)' set; /// <tr><td> `AutoBinned(bool flag)` <td> Automatically deploy binned generation for binned distributions (e.g. RooHistPdf, sums and products of; /// RooHistPdfs etc); /// \note Datasets that are generated in binned mode are returned as weighted unbinned datasets. This means that; /// for each bin, there will be one event in the dataset with a weight corresponding to the (possibly randomised) bin content.; ///; ///; /// <tr><td> `AllBinned()` <td> As above, but for all components.; /// \note The notion of components is only meaningful for simultaneous PDFs; /// as binned generation is always executed at the top-level node for a regular; /// PDF, so for those it only mattes that the top-level node is tagged.; ///; /// <tr><td> ProtoData(const RooDataSet& data, bool randOrder); /// <td> Use specified dataset as prototype dataset. If ran",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx:1242,extend,extended,1242,roofit/roofitcore/src/RooAbsPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx,1,['extend'],['extended']
Modifiability," parameter names, the dimension variable can be dropped.; Alternatively, to change only the dimension variable, the parameters can be; dropped. Note that if a parameter is dropped or keeps its old name, its old; value will be copied to the new function. The syntax used in the examples; above also applies to the predefined parametrized functions like `gaus` and; `expo`. Comparisons operators are also supported `(&amp;&amp;, ||, ==, &lt;=, &gt;=, !)`. Examples:. `sin(x*(x&lt;0.5 || x&gt;1))`. If the result of a comparison is TRUE, the result is 1, otherwise 0. Already predefined names can be given. For example, if the formula. `TFormula old(""old"",sin(x*(x&lt;0.5 || x&gt;1)))`. one can assign a name to the formula. By default the name of the object = title = formula itself. `TFormula new(""new"",""x*old"")`. is equivalent to:. `TFormula new(""new"",""x*sin(x*(x&lt;0.5 || x&gt;1))"")`. The class supports unlimited number of variables and parameters.; By default the names which can be used for the variables are `x,y,z,t` or; `x[0],x[1],x[2],x[3],....x[N]` for N-dimensional formulas. This class is not anymore the base class for the function classes `TF1`, but it has now; a data member of TF1 which can be accessed via `TF1::GetFormula`. TFormula supports gradient and hessian calculations through clad.; To calculate the gradient one needs to first declare a `CladStorage` of the; same size as the number of parameters and then pass the variables and the; created `CladStorage`:. ```; TFormula f(""f"", ""x*[0] - y*[1]"");; Double_t p[] = {40, 30};; Double_t x[] = {1, 2};; f.SetParameters(p);; TFormula::CladStorage grad(2);; f.GradientPar(x, grad);; ```. The process is similar for hessians, except that the size of the created; CladStorage should be the square of the number of parameters because; `HessianPar` returns a flattened matrix:. ```; TFormula::CladStorage hess(4);; f.HessianPar(x, hess);; ```. \anchor FormulaFuncs; ### List of predefined functions. The list of available predefined fu",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TFormula.cxx:2985,variab,variables,2985,hist/hist/src/TFormula.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TFormula.cxx,1,['variab'],['variables']
Modifiability," please migrate to [doxygen](https://www.doxygen.nl) instead. <p>The THtml class is designed to easily document; classes, code, and code related text files (like change logs). It generates HTML; pages conforming to the XHTML 1.0 transitional specifications; an example of; these pages is ROOT's own <a href=""http://root.cern.ch/root/html/ClassIndex.html"">; reference guide</a>. This page was verified to be valid XHTML 1.0 transitional,; which proves that all pages generated by THtml can be valid, as long as the user; provided XHTML (documentation, header, etc) is valid. You can check the current; THtml by clicking this icon:; <a href=""http://validator.w3.org/check?uri=referer""><img; src=""http://www.w3.org/Icons/valid-xhtml10""; alt=""Valid XHTML 1.0 Transitional"" height=""31"" width=""88"" style=""border: none;""/></a></p>; Overview:; <ol style=""list-style-type: upper-roman;"">; <li><a href=""#usage"">Usage</a></li>; <li><a href=""#conf"">Configuration</a>; <ol><li><a href=""#conf:input"">Input files</a></li>; <li><a href=""#conf:output"">Output directory</a></li>; <li><a href=""#conf:liblink"">Linking other documentation</a></li>; <li><a href=""#conf:classdoc"">Recognizing class documentation</a></li>; <li><a href=""#conf:tags"">Author, copyright, etc.</a></li>; <li><a href=""#conf:header"">Header and footer</a></li>; <li><a href=""#conf:search"">Links to searches, home page, ViewVC</a></li>; <li><a href=""#conf:charset"">HTML Charset</a></li>; </ol></li>; <li><a href=""#syntax"">Documentation syntax</a>; <ol><li><a href=""#syntax:classdesc"">Class description</a></li>; <li><a href=""#syntax:classidx"">Class index</a></li>; <li><a href=""#syntax:meth"">Method documentation</a></li>; <li><a href=""#syntax:datamem"">Data member documentation</a></li>; </ol></li>; <li><a href=""#directive"">Documentation directives</a>; <ol><li><a href=""#directive:html""><tt>BEGIN<!-- -->_HTML</tt> <tt>END<!-- -->_HTML</tt>: include 'raw' HTML</a></li>; <li><a href=""#directive:macro""><tt>BEGIN<!-- -->_MACRO</tt> <tt>END<!-- -->_",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx:1220,Config,Configuration,1220,html/src/THtml.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx,1,['Config'],['Configuration']
Modifiability," requested. Must not exceed maxpts.; if minpts < 1 minpts is set to \f$ 2^n +2n(n+1) +1 \f$ where n is the function dimension; - \f$ maxpts \f$: Maximum number of function evaluations to be allowed.; \f$ maxpts >= 2^n +2n(n+1) +1 \f$; if \f$ maxpts<minpts \f$, \f$ maxpts \f$ is set to \f$ 10minpts \f$; - \f$ epstol \f$, \f$ epsrel \f$ : Specified relative and absolute accuracy. The integral will stop if the relative error is less than relative tolerance OR the; absolute error is less than the absolute tolerance. The class computes in addition to the integral of the function in the desired interval:. - an estimation of the relative accuracy of the result.; - number of function evaluations performed.; - status code:; 0. Normal exit. . At least minpts and at most maxpts calls to the function were performed.; 1. maxpts is too small for the specified accuracy eps.; The result and relerr contain the values obtainable for the; specified value of maxpts.; 2. size is too small for the specified number MAXPTS of function evaluations.; 3. n<2 or n>15. ### Method:. An integration rule of degree seven is used together with a certain; strategy of subdivision.; For a more detailed description of the method see References. ### Notes:. 1..Multi-dimensional integration is time-consuming. For each rectangular; subregion, the routine requires function evaluations.; Careful programming of the integrand might result in substantial saving; of time.; 2..Numerical integration usually works best for smooth functions.; Some analysis or suitable transformations of the integral prior to; numerical work may contribute to numerical efficiency. ### References:. 1. A.C. Genz and A.A. Malik, Remarks on algorithm 006:; An adaptive algorithm for numerical integration over; an N-dimensional rectangular region, J. Comput. Appl. Math. 6 (1980) 295-302.; 2. A. van Doren and L. de Ridder, An adaptive algorithm for numerical; integration over an n-dimensional cube, J.Comput. Appl. Math. 2 (1976) 207-217. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/AdaptiveIntegratorMultiDim.h:2266,adapt,adaptive,2266,math/mathcore/inc/Math/AdaptiveIntegratorMultiDim.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/AdaptiveIntegratorMultiDim.h,2,['adapt'],['adaptive']
Modifiability," residuals; ///\f[; /// r_{i} = \frac{w_{i}-W\hat{p}_{i}}{z_{i}}; ///\f]; /// have approximately a normal distribution with mean equal to 0 and standard; /// deviation equal to 1.; ///; /// #### Two weighted histograms comparison:; ///; /// Let us denote the common weight of events of the ith bin in the first; /// histogram as w1i and as w2i in the second one. The total weight of events; /// in the first histogram is equal to; ///\f[; /// W_{1} = \sum_{i=1}^{r} w_{1i}; ///\f]; /// and; ///\f[; /// W_{2} = \sum_{i=1}^{r} w_{2i}; ///\f]; /// in the second histogram. Let us formulate the hypothesis of identity of; /// weighted histograms so that there exist r constants p1,...,pr, such that; ///\f[; /// \sum_{i=1}^{r} p_{i} = 1; ///\f]; /// and also expectation value of weight w1i equal to W1pi and expectation value; /// of weight w2i equal to W2pi. Weights in both the histograms are random; /// variables with distributions which can be approximated by a normal; /// probability distribution \f$ N(W_{1}p_{i},\sigma_{1i}^{2}) \f$ for the first histogram; /// and by a distribution \f$ N(W_{2}p_{i},\sigma_{2i}^{2}) \f$ for the second.; /// Here \f$ \sigma_{1i}^{2} \f$ and \f$ \sigma_{2i}^{2} \f$ are the variances; /// of w1i and w2i with estimators \f$ s_{1i}^{2} \f$ and \f$ s_{2i}^{2} \f$ respectively.; /// If the hypothesis of identity is valid, then the maximum likelihood and; /// Least Square Method estimator of pi,i=1,...,r, is; ///\f[; /// \hat{p}_{i} = \frac{w_{1i}W_{1}/s_{1i}^{2}+w_{2i}W_{2} /s_{2i}^{2}}{W_{1}^{2}/s_{1i}^{2}+W_{2}^{2}/s_{2i}^{2}}; ///\f]; /// We may then use the test statistic; ///\f[; /// X^{2} = \sum_{i=1}^{r} \frac{(w_{1i}-W_{1}\hat{p}_{i})^{2}}{s_{1i}^{2}} + \sum_{i=1}^{r} \frac{(w_{2i}-W_{2}\hat{p}_{i})^{2}}{s_{2i}^{2}} = \sum_{i=1}^{r} \frac{(W_{1}w_{2i}-W_{2}w_{1i})^{2}}{W_{1}^{2}s_{2i}^{2}+W_{2}^{2}s_{1i}^{2}}; ///\f]; /// and it has approximately a \f$ \chi^{2}_{(r-1)} \f$ distribution [2].; /// The normalized or studentised residuals [6]; /",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:9634,variab,variables,9634,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,1,['variab'],['variables']
Modifiability," right in front of its declaration. It is introduced by a string; defined by Root.Html.Description or SetClassDocTag(). See the section on; <a href=""#syntax"">documentation syntax</a> for further details.</p>. <p>Example:</p><pre>; Root.Html.Description: //____________________</pre>. <p>The class documentation will show which include statement is to be used; and which library needs to be linked to access it.; The include file name is determined via; <a href=""http://root.cern.ch/root/html/TClass.html#TClass:GetDeclFileName"">; TClass::GetDeclFileName()</a>;; leading parts are removed if they match any of the ':' separated entries in; THtml::GetIncludePath().</p>. <h4><a name=""conf:tags"">II.5 Author, copyright, etc.</a></h4>. <p>During the conversion,; <a href=""http://root.cern.ch/root/html/THtml.html"">THtml</a> will look for; some strings (""tags"") in the source file, which have to appear right in; front of e.g. the author's name, copyright notice, etc. These tags can be; defined with the following environment variables: Root.Html.Author,; Root.Html.LastUpdate and Root.Html.Copyright, or with; SetAuthorTag(), SetLastUpdateTag(), SetCopyrightTag().</p>. <p>If the LastUpdate tag is not found, the current date and time are used.; This is useful when using; <a href=""http://root.cern.ch/root/html/THtml.html#THtml:MakeAll"">THtml::MakeAll()</a>'s; default option force=kFALSE, in which case; <a href=""http://root.cern.ch/root/html/THtml.html"">THtml</a> generates; documentation only for changed classes.</p>. Authors can be a comma separated list of author entries. Each entry has; one of the following two formats; <ul><li><tt>Name (non-alpha)</tt>.; <p><a href=""http://root.cern.ch/root/html/THtml.html"">THtml</a> will generate an; HTML link for <tt>Name</tt>, taking the Root.Html.XWho configuration; variable (defaults to ""http://consult.cern.ch/xwho/people?"") and adding; all parts of the name with spaces replaces by '+'. Non-alphanumerical; characters are printed out behind <tt>Name",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx:7176,variab,variables,7176,html/src/THtml.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx,1,['variab'],['variables']
Modifiability," save LDS. ""Kernel"" is as fast as kernel allocation but only works; // for variables that are known reachable from a single kernel. ""Hybrid"" picks; // between all three. When forced to choose between LDS and cycles we minimise; // LDS use.; // The ""module"" lowering implemented here finds LDS variables which are used by; // non-kernel functions and creates a new struct with a field for each of those; // LDS variables. Variables that are only used from kernels are excluded.; //; // The ""table"" lowering implemented here has three components.; // First kernels are assigned a unique integer identifier which is available in; // functions it calls through the intrinsic amdgcn_lds_kernel_id. The integer; // is passed through a specific SGPR, thus works with indirect calls.; // Second, each kernel allocates LDS variables independent of other kernels and; // writes the addresses it chose for each variable into an array in consistent; // order. If the kernel does not allocate a given variable, it writes undef to; // the corresponding array location. These arrays are written to a constant; // table in the order matching the kernel unique integer identifier.; // Third, uses from non-kernel functions are replaced with a table lookup using; // the intrinsic function to find the address of the variable.; //; // ""Kernel"" lowering is only applicable for variables that are unambiguously; // reachable from exactly one kernel. For those cases, accesses to the variable; // can be lowered to ConstantExpr address of a struct instance specific to that; // one kernel. This is zero cost in space and in compute. It will raise a fatal; // error on any variable that might be reachable from multiple kernels and is; // thus most easily used as part of the hybrid lowering strategy.; //; // Hybrid lowering is a mixture of the above. It uses the zero cost kernel; // lowering where it can. It lowers the variable accessed by the greatest; // number of kernels using the module strategy as that is free fo",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerModuleLDSPass.cpp:4605,variab,variable,4605,interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerModuleLDSPass.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerModuleLDSPass.cpp,1,['variab'],['variable']
Modifiability," simplest strategy possible is to group all LDS variables in a single; // struct and allocate that struct in every kernel such that the original; // variables are always at the same address. LDS is however a limited resource; // so this strategy is unusable in practice. It is not implemented here.; //; // Strategy | Precise allocation | Zero runtime cost | General purpose |; // --------+--------------------+-------------------+-----------------+; // Module | No | Yes | Yes |; // Table | Yes | No | Yes |; // Kernel | Yes | Yes | No |; // Hybrid | Yes | Partial | Yes |; //; // ""Module"" spends LDS memory to save cycles. ""Table"" spends cycles and global; // memory to save LDS. ""Kernel"" is as fast as kernel allocation but only works; // for variables that are known reachable from a single kernel. ""Hybrid"" picks; // between all three. When forced to choose between LDS and cycles we minimise; // LDS use.; // The ""module"" lowering implemented here finds LDS variables which are used by; // non-kernel functions and creates a new struct with a field for each of those; // LDS variables. Variables that are only used from kernels are excluded.; //; // The ""table"" lowering implemented here has three components.; // First kernels are assigned a unique integer identifier which is available in; // functions it calls through the intrinsic amdgcn_lds_kernel_id. The integer; // is passed through a specific SGPR, thus works with indirect calls.; // Second, each kernel allocates LDS variables independent of other kernels and; // writes the addresses it chose for each variable into an array in consistent; // order. If the kernel does not allocate a given variable, it writes undef to; // the corresponding array location. These arrays are written to a constant; // table in the order matching the kernel unique integer identifier.; // Third, uses from non-kernel functions are replaced with a table lookup using; // the intrinsic function to find the address of the variable.; //; // ""Kernel"" lowe",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerModuleLDSPass.cpp:3910,variab,variables,3910,interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerModuleLDSPass.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerModuleLDSPass.cpp,2,['variab'],['variables']
Modifiability," source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; //////////////////////////////////////////////////////////////////////////////; /** \class RooRealSumPdf; \ingroup Roofitcore. Implements a PDF constructed from a sum of functions:; \f[; \mathrm{PDF}(x) = \frac{ \sum_{i=1}^{n-1} \mathrm{coef}_i * \mathrm{func}_i(x) + \left[ 1 - \sum_{i=1}^{n-1} \mathrm{coef}_i \right] * \mathrm{func}_n(x) }; {\sum_{i=1}^{n-1} \mathrm{coef}_i * \int \mathrm{func}_i(x)dx + \left[ 1 - \sum_{i=1}^{n-1} \mathrm{coef}_i \right] * \int \mathrm{func}_n(x) dx }; \f]. where \f$\mathrm{coef}_i\f$ and \f$\mathrm{func}_i\f$ are RooAbsReal objects, and \f$ x \f$ is the collection of dependents.; In the present version \f$\mathrm{coef}_i\f$ may not depend on \f$ x \f$, but this limitation could be removed should the need arise. If the number of coefficients is one less than the number of functions, the PDF is assumed to be normalised. Due to this additional constraint,; \f$\mathrm{coef}_n\f$ is computed from the other coefficients. ### Extending the PDF; If an \f$ n^\mathrm{th} \f$ coefficient is provided, the PDF **can** be used as an extended PDF, *i.e.* the total number of events will be measured in addition; to the fractions of the various functions. **This requires setting the last argument of the constructor to `true`.**; \note For the RooAddPdf, the extension happens automatically. ### Difference to RooAddPdf / RooRealSumFunc; - RooAddPdf is a PDF of PDFs, *i.e.* its components need to be normalised and non-negative.; - RooRealSumPdf is a PDF of functions, *i.e.*, its components can be negative, but their sum cannot be. The normalisation; is computed automatically, unless the PDF is extended (see above).; - RooRealSumFunc is a sum of functions. It is neither normalised, nor need it be positive. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealSumPdf.cxx:1664,Extend,Extending,1664,roofit/roofitcore/src/RooRealSumPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealSumPdf.cxx,3,"['Extend', 'extend']","['Extending', 'extended']"
Modifiability," specific to that; // one kernel. This is zero cost in space and in compute. It will raise a fatal; // error on any variable that might be reachable from multiple kernels and is; // thus most easily used as part of the hybrid lowering strategy.; //; // Hybrid lowering is a mixture of the above. It uses the zero cost kernel; // lowering where it can. It lowers the variable accessed by the greatest; // number of kernels using the module strategy as that is free for the first; // variable. Any futher variables that can be lowered with the module strategy; // without incurring LDS memory overhead are. The remaining ones are lowered; // via table.; //; // Consequences; // - No heuristics or user controlled magic numbers, hybrid is the right choice; // - Kernels that don't use functions (or have had them all inlined) are not; // affected by any lowering for kernels that do.; // - Kernels that don't make indirect function calls are not affected by those; // that do.; // - Variables which are used by lots of kernels, e.g. those injected by a; // language runtime in most kernels, are expected to have no overhead; // - Implementations that instantiate templates per-kernel where those templates; // use LDS are expected to hit the ""Kernel"" lowering strategy; // - The runtime properties impose a cost in compiler implementation complexity; //; // Dynamic LDS implementation; // Dynamic LDS is lowered similarly to the ""table"" strategy above and uses the; // same intrinsic to identify which kernel is at the root of the dynamic call; // graph. This relies on the specified behaviour that all dynamic LDS variables; // alias one another, i.e. are at the same address, with respect to a given; // kernel. Therefore this pass creates new dynamic LDS variables for each kernel; // that allocates any dynamic LDS and builds a table of addresses out of those.; // The AMDGPUPromoteAlloca pass skips kernels that use dynamic LDS.; // The corresponding optimisation for ""kernel"" lowering where the ta",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerModuleLDSPass.cpp:6132,Variab,Variables,6132,interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerModuleLDSPass.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerModuleLDSPass.cpp,1,['Variab'],['Variables']
Modifiability," string. Note that whitespaces between characters are not allowed.; # We define first the DNN layout:; # - **input layout** : this defines the input data format for the DNN as ``input depth | height | width``.; # In case of a dense layer as first layer the input layout should be ``1 | 1 | number of input variables`` (features); # - **batch layout** : this defines how are the input batch. It is related to input layout but not the same.; # If the first layer is dense it should be ``1 | batch size ! number of variables`` (features); # *(note the use of the character `|` as separator of input parameters for DNN layout)*; # note that in case of only dense layer the input layout could be omitted but it is required when defining more; # complex architectures; # - **layer layout** string defining the layer architecture. The syntax is; # - layer type (e.g. DENSE, CONV, RNN); # - layer parameters (e.g. number of units); # - activation function (e.g TANH, RELU,...); # *the different layers are separated by the ``"",""`` *; #### 2. Define Training Strategy; # We define here the training strategy parameters for the DNN. The parameters are separated by the ``"",""`` separator.; # One can then concatenate different training strategy with different parameters. The training strategy are separated by; # the ``""|""`` separator.; # - Optimizer; # - Learning rate; # - Momentum (valid for SGD and RMSPROP); # - Regularization and Weight Decay; # - Dropout; # - Max number of epochs; # - Convergence steps. if the test error will not decrease after that value the training will stop; # - Batch size (This value must be the same specified in the input layout); # - Test Repetitions (the interval when the test error will be computed); #### 3. Define general DNN options; # We define the general DNN options concatenating in the final string the previously defined layout and training strategy.; # Note we use the ``"":""`` separator to separate the different higher level options, as in the other TMVA method",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_Higgs_Classification.py:1285,layers,layers,1285,tutorials/tmva/TMVA_Higgs_Classification.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_Higgs_Classification.py,1,['layers'],['layers']
Modifiability," the <c> VPCMPESTRM / PCMPESTRM </c>; /// instruction.; ///; /// \param A; /// A 128-bit integer vector containing one of the source operands to be; /// compared.; /// \param LA; /// An integer that specifies the length of the string in \a A.; /// \param B; /// A 128-bit integer vector containing one of the source operands to be; /// compared.; /// \param LB; /// An integer that specifies the length of the string in \a B.; /// \param M; /// An 8-bit immediate operand specifying whether the characters are bytes or; /// words, the type of comparison to perform, and the format of the return; /// value. \n; /// Bits [1:0]: Determine source data format. \n; /// 00: 16 unsigned bytes \n; /// 01: 8 unsigned words \n; /// 10: 16 signed bytes \n; /// 11: 8 signed words \n; /// Bits [3:2]: Determine comparison type and aggregation method. \n; /// 00: Subset: Each character in \a B is compared for equality with all; /// the characters in \a A. \n; /// 01: Ranges: Each character in \a B is compared to \a A. The comparison; /// basis is greater than or equal for even-indexed elements in \a A,; /// and less than or equal for odd-indexed elements in \a A. \n; /// 10: Match: Compare each pair of corresponding characters in \a A and; /// \a B for equality. \n; /// 11: Substring: Search \a B for substring matches of \a A. \n; /// Bits [5:4]: Determine whether to perform a one's complement on the bit; /// mask of the comparison results. \n; /// 00: No effect. \n; /// 01: Negate the bit mask. \n; /// 10: No effect. \n; /// 11: Negate the bit mask only for bits with an index less than or equal; /// to the size of \a A or \a B. \n; /// Bit [6]: Determines whether the result is zero-extended or expanded to 16; /// bytes. \n; /// 0: The result is zero-extended to 16 bytes. \n; /// 1: The result is expanded to 16 bytes (this expansion is performed by; /// repeating each bit 8 or 16 times). \n; /// \returns Returns a 128-bit integer vector representing the result mask of; /// the comparison.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/smmintrin.h:2127,extend,extended,2127,interpreter/llvm-project/clang/lib/Headers/smmintrin.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/smmintrin.h,2,['extend'],['extended']
Modifiability," the TClassTree constructor as a second argument; - or the parameter to TClassTree::Draw. Note that the ClassTree viewer can also be started from the canvas; pull down menu ""Classes"". In the list of classes, class names are separated by a "":""; wildcarding is supported.; The following formats are supported, eg in TClassTree::Draw; 1. `Draw(""ClassA"")`; - Draw inheritance tree for ClassA; - Show all classes referenced by ClassA; 2. `Draw(""*ClassB"")`; - Draw inheritance tree for ClassB; and all the classes deriving from ClassB; 3. `Draw("">ClassC"")`; - Draw inheritance tree for ClassC; - Show classes referencing ClassC; 4. `Draw(""ClassD<"")`; - Draw inheritance tree for ClassD; - Show classes referenced by ClassD; - Show all classes referencing ClassD; 5. `Draw(""Cla*"")`; - Draw inheritance tree for all classes with name starting with ""Cla""; - Show classes referenced by these classes; 6. `Draw(""ClassA:ClassB<"")`; - Draw inheritance tree for ClassA; - Show all classes referenced by ClassA; - Draw inheritance tree for ClassB; - Show classes referenced by ClassB; - Show all classes referencing ClassB. Example: `Draw(""TTree<"")`; - Draw inheritance tree for the Root class TTree; - Show all classes referenced by TTree; - Show all classes using TTree. By default, only direct inheritance is drawn.; Use TClassTree::ShowLinks(option) to show additional references; - option = ""H"" to show links to embedded classes; - option = ""M"" to show multiple inheritance; - option = ""R"" to show pointers to other classes from data members; - option = ""C"" to show classes used by the code(implementation) of a class. The following picture is produced directly by:; ~~~ {.cpp}; TClassTree ct(""ct"",""*TH1""); ~~~; It shows all the classes derived from the base class TH1. \image html gpad_classtree1.png. The TClassTree class uses the services of the class TPaveClass to; show the class names. By clicking with the right mouse button in; one TPaveClass object, one can invoke the following functions of TClassTree",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TClassTree.cxx:1259,inherit,inheritance,1259,graf2d/gpad/src/TClassTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TClassTree.cxx,2,['inherit'],['inheritance']
Modifiability," the bootstrap process the deferred actions are attached to a final; // ""complete-bootstrap"" graph that causes them to be run.; //; // The bootstrap steps are as follows:; //; // 1. Request the graph containing the mach header. This graph is guaranteed; // not to have any metadata so the fact that the registration functions; // are not available yet is not a problem.; //; // 2. Look up the registration functions and discard the results. This will; // trigger linking of the graph containing these functions, and; // consequently any graphs that it depends on. We do not use the lookup; // result to find the addresses of the functions requested (as described; // above the lookup will return too late for that), instead we capture the; // addresses in a post-allocation pass injected by the platform runtime; // during bootstrap only.; //; // 3. During bootstrap the MachOPlatformPlugin keeps a count of the number of; // graphs being linked (potentially concurrently), and we block until all; // of these graphs have completed linking. This is to avoid a race on the; // deferred-actions vector: the lookup for the runtime registration; // functions may return while some functions (those that are being; // incidentally linked in, but aren't reachable via the runtime functions); // are still being linked, and we need to capture any allocation actions; // for this incidental code before we proceed.; //; // 4. Once all active links are complete we transfer the deferred actions to; // a newly added CompleteBootstrap graph and then request a symbol from; // the CompleteBootstrap graph to trigger materialization. This will cause; // all deferred actions to be run, and once this lookup returns we can; // proceed.; //; // 5. Finally, we associate runtime support methods in MachOPlatform with; // the corresponding jit-dispatch tag variables in the ORC runtime to make; // the support methods callable. The bootstrap is now complete.; // Step (1) Add header materialization unit and request.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ExecutionEngine/Orc/MachOPlatform.cpp:3051,variab,variables,3051,interpreter/llvm-project/llvm/lib/ExecutionEngine/Orc/MachOPlatform.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ExecutionEngine/Orc/MachOPlatform.cpp,1,['variab'],['variables']
Modifiability," the main function body, after the prologue is run. However, it's depicted; // here for completeness.; //; // | | Higher address; // |----------------------------------------------|; // | Parameter area for this function |; // |----------------------------------------------|; // | Register save area (RSA) for this function |; // |----------------------------------------------|; // | Return address for this function |; // |----------------------------------------------|; // | Frame pointer for this function |; // |----------------------------------------------| <- fp(=old sp); // |.empty.space.to.make.part.below.aligned.in....|; // |.case.it.needs.more.than.the.standard.16-byte.| (size of this area is; // |.alignment....................................| unknown at compile time); // |----------------------------------------------|; // | Local variables of fixed size including spill|; // | slots |; // |----------------------------------------------| <- bp(not defined by ABI,; // |.variable-sized.local.variables.(VLAs)........| LLVM chooses SX17); // |..............................................| (size of this area is; // |..............................................| unknown at compile time); // |----------------------------------------------| <- stack top (returned by; // | Parameter area for callee | alloca); // |----------------------------------------------|; // | Register save area (RSA) for callee |; // |----------------------------------------------|; // | Return address for callee |; // |----------------------------------------------|; // | Frame pointer for callee |; // |----------------------------------------------| <- sp; // | | Lower address; //; // To access the data in a frame, at-compile time, a constant offset must be; // computable from one of the pointers (fp, bp, sp) to access it. The size; // of the areas with a dotted background cannot be computed at compile-time; // if they are present, making it required to have all three of fp, bp and; // sp",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/VE/VEFrameLowering.cpp:2767,variab,variable-sized,2767,interpreter/llvm-project/llvm/lib/Target/VE/VEFrameLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/VE/VEFrameLowering.cpp,1,['variab'],['variable-sized']
Modifiability," the nearest; /// enclosing lambda (to the current lambda) that is 'capture-capable' for; /// the variable referenced in the current lambda (i.e. \p VarToCapture).; /// If successful, returns the index into Sema's FunctionScopeInfo stack; /// of the capture-capable lambda's LambdaScopeInfo.; ///; /// Given the current stack of lambdas being processed by Sema and; /// the variable of interest, to identify the nearest enclosing lambda (to the; /// current lambda at the top of the stack) that can truly capture; /// a variable, it has to have the following two properties:; /// a) 'capture-ready' - be the innermost lambda that is 'capture-ready':; /// - climb down the stack (i.e. starting from the innermost and examining; /// each outer lambda step by step) checking if each enclosing; /// lambda can either implicitly or explicitly capture the variable.; /// Record the first such lambda that is enclosed in a non-dependent; /// context. If no such lambda currently exists return failure.; /// b) 'capture-capable' - make sure the 'capture-ready' lambda can truly; /// capture the variable by checking all its enclosing lambdas:; /// - check if all outer lambdas enclosing the 'capture-ready' lambda; /// identified above in 'a' can also capture the variable (this is done; /// via tryCaptureVariable for variables and CheckCXXThisCapture for; /// 'this' by passing in the index of the Lambda identified in step 'a'); ///; /// \param FunctionScopes - Sema's stack of nested FunctionScopeInfo's (which a; /// LambdaScopeInfo inherits from). The current/deepest/innermost lambda; /// is at the top of the stack.; ///; /// \param VarToCapture - the variable to capture. If NULL, capture 'this'.; ///; ///; /// \returns An std::optional<unsigned> Index that if evaluates to 'true'; /// contains the index (into Sema's FunctionScopeInfo stack) of the innermost; /// lambda which is capture-capable. If the return value evaluates to 'false'; /// then no lambda is capture-capable for \p VarToCapture.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaLambda.cpp:1140,variab,variable,1140,interpreter/llvm-project/clang/lib/Sema/SemaLambda.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaLambda.cpp,5,"['inherit', 'variab']","['inherits', 'variable', 'variables']"
Modifiability," tint_scanlines(), add_scanlines(), sub_scanlines(),; * diff_scanlines(), darken_scanlines(), lighten_scanlines(),; * screen_scanlines(), overlay_scanlines(), hue_scanlines(),; * saturate_scanlines(), value_scanlines(),; * colorize_scanlines(), dissipate_scanlines().; *; * ASImage handling :; * asimage_init(), asimage_start(), create_asimage(),; * clone_asimage(), destroy_asimage(); *; * ASImage channel data manipulations :; * get_asimage_chanmask(), move_asimage_channel(),; * copy_asimage_channel(), copy_asimage_lines(); *; * ImageManager Reference counting and managing :; * create_image_manager(), destroy_image_manager(),; * store_asimage(), fetch_asimage(), dup_asimage(),; * release_asimage(), release_asimage_by_name(); *; * Layers helper functions :; * init_image_layers(), create_image_layers(),; * destroy_image_layers(); *; * Encoding :; * asimage_add_line(),	asimage_add_line_mono(),; * asimage_print_line(); *; * Decoding :; * start_image_decoding(), stop_image_decoding(),; * asimage_decode_line (), set_decoder_shift(),; * set_decoder_bevel_geom(), set_decoder_back_color(); *; * ASImage from scientific data :; * set_asimage_vector(), colorize_asimage_vector(),; * create_asimage_from_vector(); *; * Output :; * start_image_output(), set_image_output_back_color(),; * toggle_image_output_direction(), stop_image_output(); *; * X11 conversions :; * ximage2asimage(), pixmap2asimage(), asimage2ximage(),; * asimage2mask_ximage(), asimage2pixmap(), asimage2mask(); *; * Transformations :; * scale_asimage(), tile_asimage(), merge_layers(),; * 			make_gradient(),; * flip_asimage(), mirror_asimage(), pad_asimage(),; * blur_asimage_gauss(), fill_asimage(), adjust_asimage_hsv(); *; * Import :; * file2ASImage(), file2pixmap(); * Export :; * 		ASImage2file(); *; * Text Drawing :; * create_font_manager(), destroy_font_manager(),; * open_freetype_font(), open_X11_font(), get_asfont(),; * release_font(), print_asfont(), print_asglyph(),; * draw_text(), draw_fancy_text(); *********/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/afterimage.h:8374,Layers,Layers,8374,graf2d/asimage/src/libAfterImage/afterimage.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/afterimage.h,1,['Layers'],['Layers']
Modifiability," to be used for authentication purposes for this file by using a; /// string of the form ""AUTH=myAccessKey:mySecretkey"". This may be useful to; /// open several files hosted by different providers in the same program/macro,; /// where the environemntal variables solution is not convenient (see below).; ///; /// To use AWS temporary security credentials you need to specify the session; /// token. This can be added to the options argument with a string of the form; /// TOKEN=mySessionToken. The temporary access and secret keys must also be; /// available, either via the AUTH option or by environmental variable.; ///; /// If you need to specify more than one option separate them by ' '; /// (blank), for instance:; /// ""NOPROXY AUTH=F38XYZABCDeFgH4D0E1F:V+frt4re7J1euSNFnmaf8wwmI4AAAE7kzxZ/TTM+""; ///; /// Examples:; /// ```; /// TFile* f1 = TFile::Open(""s3://host.example.com/bucket/path/to/my/file"",; /// ""NOPROXY AUTH=F38XYZABCDeFgH4D0E1F:V+frt4re7J1euSNFnmaf8wwmI4AAAE7kzxZ/TTM+"");; /// TFile* f2 = TFile::Open(""s3://host.example.com/bucket/path/to/my/file"",; /// ""AUTH=F38XYZABCDeFgH4D0E1F:V+frt4re7J1euSNFnmaf8wwmI4AAAE7kzxZ/TTM+"");; /// TFile* f3 = TFile::Open(""s3://host.example.com/bucket/path/to/my/file"",; /// ""TOKEN=AQoDYXdzEM///////////wEa8AHEYmCinjD+TsGEjtgKSMAT6wnY"");; /// ```; ///; /// If there is no authentication information in the 'options' argument; /// (i.e. not AUTH=""...."") the values of the environmental variables; /// S3_ACCESS_KEY and S3_SECRET_KEY (if set) are expected to contain; /// the access key id and the secret access key, respectively. You have; /// been provided with these credentials by your S3 service provider.; ///; /// If neither the AUTH information is provided in the 'options' argument; /// nor the environmental variables are set, we try to open the file; /// without providing any authentication information to the server. This; /// is useful when the file is set an access control that allows for; /// any unidentified user to read the file.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TS3WebFile.cxx:3377,variab,variables,3377,net/net/src/TS3WebFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TS3WebFile.cxx,2,['variab'],['variables']
Modifiability," to control construction of chi2; /// <tr><td> `Extended(bool flag)` <td> **Only applicable when fitting a RooAbsPdf**. Scale the normalized pdf by the number of events predicted by the model instead of scaling by the total data weight.; /// This imposes a constraint on the predicted number of events analogous to the extended term in a likelihood fit.; /// - If you don't pass this command, an extended fit will be done by default if the pdf makes a prediction on the number of events; /// (in RooFit jargon, ""if the pdf can be extended"").; /// - Passing `Extended(true)` when the the pdf makes no prediction on the expected number of events will result in error messages,; /// and the chi2 will fall back to the total data weight to scale the normalized pdf.; /// - There are cases where the fit **must** be done in extended mode. This happens for example when you have a RooAddPdf; /// where the coefficients represent component yields. If the fit is not extended, these coefficients will not be; /// well-defined, as the RooAddPdf always normalizes itself. If you pass `Extended(false)` in such a case, an error will be; /// printed and you'll most likely get garbage results.; /// <tr><td> `Range(const char* name)` <td> Fit only data inside range with given name; /// <tr><td> `Range(double lo, double hi)` <td> Fit only data inside given range. A range named ""fit"" is created on the fly on all observables.; /// Multiple comma separated range names can be specified.; /// <tr><td> `NumCPU(int num)` <td> Parallelize NLL calculation on num CPUs; /// <tr><td> `Optimize(bool flag)` <td> Activate constant term optimization (on by default); /// <tr><td> `IntegrateBins()` <td> Integrate PDF within each bin. This sets the desired precision.; ///; /// <tr><th> <th> Options to control flow of fit procedure; /// <tr><td> `InitialHesse(bool flag)` <td> Flag controls if HESSE before MIGRAD as well, off by default; /// <tr><td> `Hesse(bool flag)` <td> Flag controls if HESSE is run after MIGRAD, on",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx:1284,extend,extended,1284,roofit/roofitcore/src/RooAbsReal.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx,1,['extend'],['extended']
Modifiability," to facilitate the; // communication with other non ROOT applications. Currently; // writing and reading XML files is limited to ROOT applications.; // It is our intention to develop a simple reader independent; // of the ROOT libraries that could be used as an example for; // real applications. One of possible approach with code generation; // is implemented in TXMLPlayer class.; //; // The XML format should be used only for small data volumes,; // typically histogram files, pictures, geometries, calibrations.; // The XML file is built in memory before being dumped to disk.; //; // Like for normal ROOT files, XML files use the same I/O mechanism; // exploiting the ROOT/CINT dictionary. Any class having a dictionary; // can be saved in XML format.; //; // This first implementation does not support subdirectories; // or Trees.; //; // The shared library libRXML.so may be loaded dynamically; // via gSystem->Load(""libRXML""). This library is automatically; // loaded by the plugin manager as soon as a XML file is created; // via, eg; // TFile::Open(""file.xml"",""recreate"");; // TFile::Open returns a TXMLFile object. When a XML file is open in write mode,; // one can use the normal TObject::Write to write an object in the file.; // Alternatively one can use the new functions TDirectoryFile::WriteObject and; // TDirectoryFile::WriteObjectAny to write a TObject* or any class not deriving; // from TObject.; //; // example of a session saving a histogram to a XML file; // =====================================================; // TFile *f = TFile::Open(""Example.xml"",""recreate"");; // TH1F *h = new TH1F(""h"",""test"",1000,-2,2);; // h->FillRandom(""gaus"");; // h->Write();; // delete f;; //; // example of a session reading the histogram from the file; // ========================================================; // TFile *f = TFile::Open(""Example.xml"");; // TH1F *h = (TH1F*)f->Get(""h"");; // h->Draw();; //; // A new option in the canvas ""File"" menu is available to save; // a TCanvas as a ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/xml/src/TXMLFile.cxx:1578,plugin,plugin,1578,io/xml/src/TXMLFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/xml/src/TXMLFile.cxx,1,['plugin'],['plugin']
Modifiability," to the command "".x macro.C"" in the root prompt; command line. #### Compiling Macros. The currently loaded macro can be compiled with ACLiC if you select; Tools menu / Compile Macro; by clicking on the corresponding; toolbar button, or by using Ctrl+F7 accelerator keys.; This is identical to the command "".L macro.C++"" in the root prompt; command line. #### Interrupting a Running Macro. You can interrupt a running macro by selecting the Tools menu /; Interrupt; by clicking on the corresponding toolbar button, or by; using Shift+F5 accelerator keys. #### Interface to CINT Interpreter. Any command entered in the Command combo box will be passed to; the CINT interpreter. This combo box will keep the commands history; and will allow you to re-execute the same commands during an editor; session. #### Keyboard Bindings. The following table lists the keyboard shortcuts and accelerator; keys. | Key: | Action |; |---------------|----------------|; | Up | Move cursor up. |; | Shift+Up | Move cursor up and extend selection. |; | Down | Move cursor down. |; | Shift+Down | Move cursor down and extend selection. |; | Left | Move cursor left. |; | Shift+Left | Move cursor left and extend selection. |; | Right | Move cursor right. |; | Shift+Right | Move cursor right and extend selection. |; | Home | Move cursor to begin of line. |; | Shift+Home | Move cursor to begin of line and extend selection. |; | Ctrl+Home | Move cursor to top of page. |; | End | Move cursor to end of line. |; | Shift+End | Move cursor to end of line and extend selection. |; | Ctrl+End | Move cursor to end of page. |; | PgUp | Move cursor up one page. |; | Shift+PgUp | Move cursor up one page and extend selection. |; | PgDn | Move cursor down one page. |; | Shift+PgDn | Move cursor down one page and extend selection. |; | Delete | Delete character after cursor, or text selection. |; | BackSpace | Delete character before cursor, or text selection. |; | Ctrl+B | Move cursor left. |; | Ctrl+D | Delete character af",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGTextEditor.cxx:4411,extend,extend,4411,gui/gui/src/TGTextEditor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGTextEditor.cxx,1,['extend'],['extend']
Modifiability," to the slider position. To change the min value press the mouse near to the left / bottom; edge of the slider.; To change the max value press the mouse near to the right / top; edge of the slider.; To change both values simultaneously press the mouse near to the; center of the slider.; To change pointer value press the mouse on the pointer and drag it; to the desired position. Dragging the slider will generate the event:; - kC_VSLIDER, kSL_POS, slider id, 0. Pressing the mouse will generate the event:; - kC_VSLIDER, kSL_PRESS, slider id, 0. Releasing the mouse will generate the event:; - kC_VSLIDER, kSL_RELEASE, slider id, 0. Moving the pointer will generate the event:; - kC_VSLIDER, kSL_POINTER, slider id, 0. Use the functions GetMinPosition(), GetMaxPosition() and; GetPosition() to retrieve the position of the slider.; Use the function GetPointerPosition() to retrieve the position of; the pointer. */; /** \class TGTripleHSlider; \ingroup guiwidgets; TripleSlider inherit from DoubleSlider widgets and allow easy; selection of a min, max and pointer value out of a range.; The pointer position can be constrained to edges of slider and / or; can be relative to the slider position. To change the min value press the mouse near to the left / bottom; edge of the slider.; To change the max value press the mouse near to the right / top; edge of the slider.; To change both values simultaneously press the mouse near to the; center of the slider.; To change pointer value press the mouse on the pointer and drag it; to the desired position. Dragging the slider will generate the event:; - kC_HSLIDER, kSL_POS, slider id, 0. Pressing the mouse will generate the event:; - kC_HSLIDER, kSL_PRESS, slider id, 0. Releasing the mouse will generate the event:; - kC_HSLIDER, kSL_RELEASE, slider id, 0. Moving the pointer will generate the event:; - kC_HSLIDER, kSL_POINTER, slider id, 0. Use the functions GetMinPosition(), GetMaxPosition() and; GetPosition() to retrieve the position of the sl",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGTripleSlider.cxx:2270,inherit,inherit,2270,gui/gui/src/TGTripleSlider.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGTripleSlider.cxx,1,['inherit'],['inherit']
Modifiability," unbinned datasets. This means that; /// for each bin, there will be one event in the dataset with a weight corresponding to the (possibly randomised) bin content.; ///; ///; /// <tr><td> `AllBinned()` <td> As above, but for all components.; /// \note The notion of components is only meaningful for simultaneous PDFs; /// as binned generation is always executed at the top-level node for a regular; /// PDF, so for those it only mattes that the top-level node is tagged.; ///; /// <tr><td> ProtoData(const RooDataSet& data, bool randOrder); /// <td> Use specified dataset as prototype dataset. If randOrder in ProtoData() is set to true,; /// the order of the events in the dataset will be read in a random order if the requested; /// number of events to be generated does not match the number of events in the prototype dataset.; /// \note If ProtoData() is used, the specified existing dataset as a prototype: the new dataset will contain; /// the same number of events as the prototype (unless otherwise specified), and any prototype variables not in; /// whatVars will be copied into the new dataset for each generated event and also used to set our PDF parameters.; /// The user can specify a number of events to generate that will override the default. The result is a; /// copy of the prototype dataset with only variables in whatVars randomized. Variables in whatVars that; /// are not in the prototype will be added as new columns to the generated dataset.; ///; /// </table>; ///; /// #### Accessing the underlying event generator; /// Depending on the fit model (if it is difficult to sample), it may be necessary to change generator settings.; /// For the default generator (RooFoamGenerator), the number of samples or cells could be increased by e.g. using; /// myPdf->specialGeneratorConfig()->getConfigSection(""RooFoamGenerator"").setRealValue(""nSample"",1e4);; ///; /// The foam generator e.g. has the following config options:; /// - nCell[123N]D; /// - nSample; /// - chatLevel; /// ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx:2668,variab,variables,2668,roofit/roofitcore/src/RooAbsPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx,1,['variab'],['variables']
Modifiability," value; /// it should have in a block.; ///; /// Once both are complete, we have two maps for each block:; /// * Variables to the values they should have,; /// * Values to the register / spill slot they are located in.; /// After which we can marry-up variable values with a location, and emit; /// DBG_VALUE instructions specifying those locations. Variable locations may; /// be dropped in this process due to the desired variable value not being; /// resident in any machine location, or because there is no PHI value in any; /// location that accurately represents the desired value. The building of; /// location lists for each block is left to DbgEntityHistoryCalculator.; ///; /// This pass is kept efficient because the size of the first SSA problem; /// is proportional to the working-set size of the function, which the compiler; /// tries to keep small. (It's also proportional to the number of blocks).; /// Additionally, we repeatedly perform the second SSA problem analysis with; /// only the variables and blocks in a single lexical scope, exploiting their; /// locality.; ///; /// ### Terminology; ///; /// A machine location is a register or spill slot, a value is something that's; /// defined by an instruction or PHI node, while a variable value is the value; /// assigned to a variable. A variable location is a machine location, that must; /// contain the appropriate variable value. A value that is a PHI node is; /// occasionally called an mphi.; ///; /// The first SSA problem is the ""machine value location"" problem,; /// because we're determining which machine locations contain which values.; /// The ""locations"" are constant: what's unknown is what value they contain.; ///; /// The second SSA problem (the one for variables) is the ""variable value; /// problem"", because it's determining what values a variable has, rather than; /// what location those values are placed in.; ///; /// TODO:; /// Overlapping fragments; /// Entry values; /// Add back DEBUG statements for",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/InstrRefBasedImpl.cpp:3234,variab,variables,3234,interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/InstrRefBasedImpl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/InstrRefBasedImpl.cpp,1,['variab'],['variables']
Modifiability," will work with bignum integers whose parts are; /// any unsigned type at least 16 bits wide, but 64 bits is recommended.; ///; /// Written for clarity rather than speed, in particular with a view to use in; /// the front-end of a cross compiler so that target arithmetic can be correctly; /// performed on the host. Performance should nonetheless be reasonable,; /// particularly for its intended use. It may be useful as a base; /// implementation for a run-time library during development of a faster; /// target-specific one.; ///; /// All 5 rounding modes in the IEEE-754R draft are handled correctly for all; /// implemented operations. Currently implemented operations are add, subtract,; /// multiply, divide, fused-multiply-add, conversion-to-float,; /// conversion-to-integer and conversion-from-integer. New rounding modes; /// (e.g. away from zero) can be added with three or four lines of code.; ///; /// Four formats are built-in: IEEE single precision, double precision,; /// quadruple precision, and x87 80-bit extended double (when operating with; /// full extended precision). Adding a new format that obeys IEEE semantics; /// only requires adding two lines of code: a declaration and definition of the; /// format.; ///; /// All operations return the status of that operation as an exception bit-mask,; /// so multiple operations can be done consecutively with their results or-ed; /// together. The returned status can be useful for compiler diagnostics; e.g.,; /// inexact, underflow and overflow can be easily diagnosed on constant folding,; /// and compiler optimizers can determine what exceptions would be raised by; /// folding operations and optimize, or perhaps not optimize, accordingly.; ///; /// At present, underflow tininess is detected after rounding; it should be; /// straight forward to add support for the before-rounding case too.; ///; /// The library reads hexadecimal floating point numbers as per C99, and; /// correctly rounds if necessary according to the",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/APFloat.h:1259,extend,extended,1259,interpreter/llvm-project/llvm/include/llvm/ADT/APFloat.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/APFloat.h,2,['extend'],['extended']
Modifiability," with ACLiC if you select //; // Tools menu / Compile Macro; by clicking on the corresponding //; // toolbar button, or by using Ctrl+F7 accelerator keys. //; // This is identical to the command "".L macro.C++"" in the root prompt //; // command line. //; // //; // Interrupting a Running Macro //; // //; // You can interrupt a running macro by selecting the Tools menu / //; // Interrupt; by clicking on the corresponding toolbar button, or by //; // using Shift+F5 accelerator keys. //; // //; // Interface to CINT Interpreter //; // //; // Any command entered in the Command combo box will be passed to //; // the CINT interpreter. This combo box will keep the commands history //; // and will allow you to re-execute the same commands during an editor //; // session. //; // //; // Keyboard Bindings //; // //; // The following table lists the keyboard shortcuts and accelerator //; // keys. //; // //; // Key: Action: //; // ==== ======= //; // //; // Up Move cursor up. //; // Shift+Up Move cursor up and extend selection. //; // Down Move cursor down. //; // Shift+Down Move cursor down and extend selection. //; // Left Move cursor left. //; // Shift+Left Move cursor left and extend selection. //; // Right Move cursor right. //; // Shift+Right Move cursor right and extend selection. //; // Home Move cursor to begin of line. //; // Shift+Home Move cursor to begin of line and extend selection.//; // Ctrl+Home Move cursor to top of page. //; // End Move cursor to end of line. //; // Shift+End Move cursor to end of line and extend selection. //; // Ctrl+End Move cursor to end of page. //; // PgUp Move cursor up one page. //; // Shift+PgUp Move cursor up one page and extend selection. //; // PgDn Move cursor down one page. //; // Shift+PgDn Move cursor down one page and extend selection. //; // Delete Delete character after cursor, or text selection. //; // BackSpace Delete character before cursor, or text selection.//; // Ctrl+B Move cursor left. //; // Ctrl+D Delete character afte",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/RootIDE/TGRootIDE.cxx:4437,extend,extend,4437,test/RootIDE/TGRootIDE.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/RootIDE/TGRootIDE.cxx,1,['extend'],['extend']
Modifiability," {; // int x = 0;; // int y = 0;; // int a = 0;; // for(int i = 0; i <100000; ++i) {; // g(x);; // x = y;; // g(a);; // y = a + 1;; // a = 5;; // }; // }; // Peeling 3 iterations is beneficial because the values for x, y and a; // become known. The IR for this loop looks something like the following:; //; // %i = phi i32 [ 0, %entry ], [ %inc, %if.end ]; // %a = phi i32 [ 0, %entry ], [ 5, %if.end ]; // %y = phi i32 [ 0, %entry ], [ %add, %if.end ]; // %x = phi i32 [ 0, %entry ], [ %y, %if.end ]; // ...; // tail call void @_Z1gi(i32 signext %x); // tail call void @_Z1gi(i32 signext %a); // %add = add nuw nsw i32 %a, 1; // %inc = add nuw nsw i32 %i, 1; // %exitcond = icmp eq i32 %inc, 100000; // br i1 %exitcond, label %for.cond.cleanup, label %for.body; //; // The arguments for the calls to g will become known after 3 iterations; // of the loop, because the phi nodes values become known after 3 iterations; // of the loop (ie, they are known on the 4th iteration, so peel 3 iterations).; // The first iteration has g(0), g(0); the second has g(0), g(5); the; // third has g(1), g(5) and the fourth (and all subsequent) have g(6), g(5).; // Now consider the phi nodes:; // %a is a phi with constants so it is determined after iteration 1.; // %y is a phi based on a constant and %a so it is determined on; // the iteration after %a is determined, so iteration 2.; // %x is a phi based on a constant and %y so it is determined on; // the iteration after %y, so iteration 3.; // %i is based on itself (and is an induction variable) so it is; // never determined.; // This means that peeling off 3 iterations will result in being able to; // remove the phi nodes for %a, %y, and %x. The arguments for the; // corresponding calls to g are determined and the code for computing; // x, y, and a can be removed.; //; // The PhiAnalyzer class calculates how many times a loop should be; // peeled based on the above analysis of the phi nodes in the loop while; // respecting the maximum specified.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/LoopPeel.cpp:1745,variab,variable,1745,interpreter/llvm-project/llvm/lib/Transforms/Utils/LoopPeel.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/LoopPeel.cpp,1,['variab'],['variable']
Modifiability," | (Win64 only) varargs from reg |; // | |; // |-----------------------------------|; // | |; // | callee-saved gpr registers | <--.; // | | | On Darwin platforms these; // |- - - - - - - - - - - - - - - - - -| | callee saves are swapped,; // | prev_lr | | (frame record first); // | prev_fp | <--'; // | async context if needed |; // | (a.k.a. ""frame record"") |; // |-----------------------------------| <- fp(=x29); // | |; // | callee-saved fp/simd/SVE regs |; // | |; // |-----------------------------------|; // | |; // | SVE stack objects |; // | |; // |-----------------------------------|; // |.empty.space.to.make.part.below....|; // |.aligned.in.case.it.needs.more.than| (size of this area is unknown at; // |.the.standard.16-byte.alignment....| compile time; if present); // |-----------------------------------|; // | |; // | local variables of fixed size |; // | including spill slots |; // |-----------------------------------| <- bp(not defined by ABI,; // |.variable-sized.local.variables....| LLVM chooses X19); // |.(VLAs)............................| (size of this area is unknown at; // |...................................| compile time); // |-----------------------------------| <- sp; // | | Lower address; //; //; // To access the data in a frame, at-compile time, a constant offset must be; // computable from one of the pointers (fp, bp, sp) to access it. The size; // of the areas with a dotted background cannot be computed at compile-time; // if they are present, making it required to have all three of fp, bp and; // sp to be set up to be able to access all contents in the frame areas,; // assuming all of the frame areas are non-empty.; //; // For most functions, some of the frame areas are empty. For those functions,; // it may not be necessary to set up fp or bp:; // * A base pointer is definitely needed when there are both VLAs and local; // variables with more-than-default alignment requirements.; // * A frame pointer is definitely needed when there are loc",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64FrameLowering.cpp:2492,variab,variables,2492,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64FrameLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64FrameLowering.cpp,1,['variab'],['variables']
Modifiability,""""""" This module is responsible to capture the compiler invocation of any; build process. The result of that should be a compilation database. This implementation is using the LD_PRELOAD or DYLD_INSERT_LIBRARIES; mechanisms provided by the dynamic linker. The related library is implemented; in C language and can be found under 'libear' directory. The 'libear' library is capturing all child process creation and logging the; relevant information about it into separate files in a specified directory.; The parameter of this process is the output directory name, where the report; files shall be placed. This parameter is passed as an environment variable. The module also implements compiler wrappers to intercept the compiler calls. The module implements the build command execution and the post-processing of; the output files, which will condensates into a compilation database. """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/intercept.py:647,variab,variable,647,interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/intercept.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/intercept.py,1,['variab'],['variable']
Modifiability,"""""""*************************************************; * Principal Component Analysis *; * *; * Number of variables: {0:4d} *; * Number of data points: {1:8d} *; * Number of dependent variables: {2:4d} *; * *; *************************************************""""""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/math/principal.py:105,variab,variables,105,tutorials/math/principal.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/math/principal.py,2,['variab'],['variables']
Modifiability,""""""". <div id=""{jsDivId}"" style=""width: {jsCanvasWidth}px; height: {jsCanvasHeight}px; position: relative"">; </div>. <script>. function display_{jsDivId}(Core) {{; let obj = Core.parse({jsonContent});; Core.settings.HandleKeys = false;; Core.draw(""{jsDivId}"", obj, ""{jsDrawOptions}"");; }}. function script_load_{jsDivId}(src, on_error) {{; let script = document.createElement('script');; script.src = src;; script.onload = function() {{ display_{jsDivId}(JSROOT); }};; script.onerror = function() {{ script.remove(); on_error(); }};; document.head.appendChild(script);; }}. if (typeof requirejs !== 'undefined') {{. // We are in jupyter notebooks, use require.js which should be configured already; requirejs.config({{; paths: {{ 'JSRootCore' : [ 'build/jsroot', 'https://root.cern/js/7.7.4/build/jsroot', 'https://jsroot.gsi.de/7.7.4/build/jsroot' ] }}; }})(['JSRootCore'], function(Core) {{; display_{jsDivId}(Core);; }});. }} else if (typeof JSROOT !== 'undefined') {{. // JSROOT already loaded, just use it; display_{jsDivId}(JSROOT);. }} else {{. // We are in jupyterlab without require.js, directly loading jsroot; // Jupyterlab might be installed in a different base_url so we need to know it.; try {{; var base_url = JSON.parse(document.getElementById('jupyter-config-data').innerHTML).baseUrl;; }} catch(_) {{; var base_url = '/';; }}. // Try loading a local version of requirejs and fallback to cdn if not possible.; script_load_{jsDivId}(base_url + 'static/build/jsroot.js', function(){{; console.error('Fail to load JSROOT locally, please check your jupyter_notebook_config.py file');; script_load_{jsDivId}('https://root.cern/js/7.7.4/build/jsroot.js', function(){{; document.getElementById(""{jsDivId}"").innerHTML = ""Failed to load JSROOT"";; }});; }});; }}. </script>; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/jupyroot/python/JupyROOT/helpers/utils.py:678,config,configured,678,bindings/jupyroot/python/JupyROOT/helpers/utils.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/jupyroot/python/JupyROOT/helpers/utils.py,3,['config'],"['config', 'config-data', 'configured']"
Modifiability,"""""""; <script type=""text/javascript"">; require.config({; paths: {; 'JsMVA':'$PATH/JsMVA.min'; }; });; </script>; <link rel=""stylesheet"" href=""$CSSFile""></link>; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/JsMVA/JPyInterface.py:46,config,config,46,bindings/pyroot/pythonizations/python/ROOT/JsMVA/JPyInterface.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/JsMVA/JPyInterface.py,1,['config'],['config']
Modifiability,"""""""; A Class that represents a node in RDataFrame operations graph. A Node; houses an operation and has references to children nodes. Attributes:; get_head: A function returning the head node in the graph. node_id: The id of this node, given sequentially in the order of; creation with respect to the head node of the graph. operation: The operation that this node represents. `None` if the node; is the head node. parent: A reference to the parent node of this node. `None` if the node; is the head node. nchildren: A counter of how many children this node has. _new_op_name (str): The name of the new incoming operation of the next; child, which is the last child node among the current node's; children. value: The computed value after executing the operation in the current; node for a particular DistRDF graph. This is permanently :obj:`None`; for transformation nodes and the action nodes get a; :obj:`ROOT.RResultPtr` after event-loop execution. has_user_references (bool): A flag to check whether the node has; direct user references, that is if it is assigned to a variable.; Default value is :obj:`True`, turns to :obj:`False` if the proxy; that wraps the node gets garbage collected by Python. rdf_node: A reference to the result of calling a function of the; RDataFrame API with the current operation. This is practically a; node of the true computation graph, which is being executed in some; distributed task. It is a transient attribute. On the client, it; is always None. The value is computed and stored only during a task; on a worker.; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Node.py:1074,variab,variable,1074,bindings/experimental/distrdf/python/DistRDF/Node.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Node.py,1,['variab'],['variable']
Modifiability,"""""""; A class that can be used to portably generate formatted output to; a terminal. `TerminalController` defines a set of instance variables whose; values are initialized to the control sequence necessary to; perform a given action. These can be simply included in normal; output to the terminal:. >>> term = TerminalController(); >>> print('This is '+term.GREEN+'green'+term.NORMAL). Alternatively, the `render()` method can used, which replaces; '${action}' with the string required to perform 'action':. >>> term = TerminalController(); >>> print(term.render('This is ${GREEN}green${NORMAL}')). If the terminal doesn't support a given action, then the value of; the corresponding instance variable will be set to ''. As a; result, the above code will still work on terminals that do not; support color, except that their output will not be colored.; Also, this means that you can test whether the terminal supports a; given action by simply testing the truth value of the; corresponding instance variable:. >>> term = TerminalController(); >>> if term.CLEAR_SCREEN:; ... print('This terminal supports clearning the screen.'). Finally, if the width and height of the terminal are known, then; they will be stored in the `COLS` and `LINES` attributes.; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/ProgressBar.py:33,portab,portably,33,interpreter/llvm-project/llvm/utils/lit/lit/ProgressBar.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/ProgressBar.py,4,"['portab', 'variab']","['portably', 'variable', 'variables']"
Modifiability,"""""""; A wrapper class that inherits from `numpy.ndarray` and allows to attach the; result pointer of the `Take` action in an `RDataFrame` event loop to the; collection of values returned by that action. See; https://docs.scipy.org/doc/numpy/user/basics.subclassing.html for more; information on subclassing numpy arrays.; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_rdf_utils.py:26,inherit,inherits,26,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_rdf_utils.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_rdf_utils.py,1,['inherit'],['inherits']
Modifiability,"""""""; Abstract class for proxies objects. These objects help to keep track of; nodes' variable assignment. That is, when a node is no longer assigned; to a variable by the user, the role of the proxy is to show that. This is; done via changing the value of the :obj:`has_user_references` of the; proxied node from :obj:`True` to :obj:`False`.; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Proxy.py:85,variab,variable,85,bindings/experimental/distrdf/python/DistRDF/Proxy.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Proxy.py,2,['variab'],['variable']
Modifiability,"""""""; Allow access to objects through the method Get(). This concerns both TDirectoryFile and TFile, since the latter; inherits the Get method from the former.; We decided not to inject this behavior directly in TDirectory; because this one already has a templated method Get which, when; invoked from Python, returns an object of the derived class (e.g. TH1F); and not a generic TObject.; In case the object is not found, a null pointer is returned.; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tdirectoryfile.py:118,inherit,inherits,118,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tdirectoryfile.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tdirectoryfile.py,1,['inherit'],['inherits']
Modifiability,"""""""; Application class for PyROOT.; Configures the interactive usage of ROOT from Python.; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_application.py:36,Config,Configures,36,bindings/pyroot/pythonizations/python/ROOT/_application.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_application.py,1,['Config'],['Configures']
Modifiability,"""""""; Configure the git repo in `git_dir` with the llvmbot account so; commits are attributed to llvmbot.; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/git/github-automation.py:5,Config,Configure,5,interpreter/llvm-project/llvm/utils/git/github-automation.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/git/github-automation.py,1,['Config'],['Configure']
Modifiability,"""""""; Convert the initialization function and its arguments into a callable; without arguments. This callable is saved on the backend parent class.; Therefore, changes on the runtime backend do not require users to set; the initialization function again. Args:; fun (function): Function to be executed. *args (list): Variable length argument list used to execute the; function. **kwargs (dict): Keyword arguments used to execute the function.; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Backends/Base.py:316,Variab,Variable,316,bindings/experimental/distrdf/python/DistRDF/Backends/Base.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Backends/Base.py,1,['Variab'],['Variable']
Modifiability,"""""""; Converts comments delimited by # or ## and on a new line into a markdown cell.; For python files only; >>> pythonComments('''## This is a; ... ## multiline comment; ... def function()'''); '# <markdowncell>\\n## This is a\\n## multiline comment\\n# <codecell>\\ndef function()\\n'; >>> pythonComments('''def function():; ... variable = 5 # Comment not in cell; ... # Comment also not in cell'''); 'def function():\\n variable = 5 # Comment not in cell\\n # Comment also not in cell\\n'; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/documentation/doxygen/converttonotebook.py:330,variab,variable,330,documentation/doxygen/converttonotebook.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/doxygen/converttonotebook.py,2,['variab'],['variable']
Modifiability,"""""""; Converts comments delimited by // and on a new line into a markdown cell. Skips comments inside; blocks and braces, though, since these would otherwise be ripped apart. For C++ files only.; >>> cppComments('''// This is a; ... // multiline comment; ... void function(){}'''); '# <markdowncell>\\n# This is a\\n# multiline comment\\n# <codecell>\\nvoid function(){}\\n'; >>> cppComments('''void function(){; ... int variable = 5 // Comment not in cell; ... // Comment also not in cell; ... }'''); 'void function(){\\n int variable = 5 // Comment not in cell\\n // Comment also not in cell\\n}\\n'; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/documentation/doxygen/converttonotebook.py:420,variab,variable,420,documentation/doxygen/converttonotebook.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/doxygen/converttonotebook.py,2,['variab'],['variable']
Modifiability,"""""""; Copy objects from a file or directory (sourceFile,sourcePathSplit); to an other file or directory (destFile,destPathSplit); - Has the will to be unix-like; - that's a recursive function; - Python adaptation of a root input/output tutorial :; $ROOTSYS/tutorials/io/copyFiles.C; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/main/python/cmdLineUtils.py:201,adapt,adaptation,201,main/python/cmdLineUtils.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/main/python/cmdLineUtils.py,1,['adapt'],['adaptation']
Modifiability,"""""""; Creates an instance of the Spark backend class. Args:; config (dict, optional): The config options for Spark backend.; The default value is an empty Python dictionary :obj:`{}`.; :obj:`config` should be a dictionary of Spark configuration; options and their values with :obj:'npartitions' as the only; allowed extra parameter. Example::. config = {; 'npartitions':20,; 'spark.master':'myMasterURL',; 'spark.executor.instances':10,; 'spark.app.name':'mySparkAppName'; }. Note:; If a SparkContext is already set in the current environment, the; Spark configuration parameters from :obj:'config' will be ignored; and the already existing SparkContext would be used. """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Backends/Spark/Backend.py:60,config,config,60,bindings/experimental/distrdf/python/DistRDF/Backends/Spark/Backend.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Backends/Spark/Backend.py,7,['config'],"['config', 'configuration']"
Modifiability,"""""""; Define the variables which shall be used for training; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/tmva100_DataPreparation.py:16,variab,variables,16,tutorials/tmva/tmva100_DataPreparation.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/tmva100_DataPreparation.py,1,['variab'],['variables']
Modifiability,"""""""; Expand each path in a test suite to a Lit test using that path and assuming; it is a file containing the test. File extensions excluded by the configuration; or not contained in the allowed extensions are ignored.; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/formats/base.py:148,config,configuration,148,interpreter/llvm-project/llvm/utils/lit/lit/formats/base.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/formats/base.py,1,['config'],['configuration']
Modifiability,"""""""; Extends the list of paths in which ROOT looks for headers and; libraries. Every header directory is added to the internal include; path of ROOT so the interpreter can find them. Even if the same path; is added twice, ROOT keeps a collection of unique paths. Find more at; `TInterpreter<https://root.cern.ch/doc/master/classTInterpreter.html>`_. Args:; include_path (str): the path to the directory containing files; needed for the analysis.; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Backends/Utils.py:5,Extend,Extends,5,bindings/experimental/distrdf/python/DistRDF/Backends/Utils.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Backends/Utils.py,1,['Extend'],['Extends']
Modifiability,"""""""; Factory function, decorated with `contextlib.contextmanager` to make it; work in a `with` context manager. It creates a `ROOT.TDirectory.TContext`; that will store the current `ROOT.gDirectory` variable. At the end of the; context, the C++ destructor of the `TContext` object will be explicitly; called, thanks to the `__destruct__` dunder method implemented in PyROOT.; This will restore the `gDirectory` variable to its initial value, allowing; changing it in the context manager without permanent effects.; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Proxy.py:199,variab,variable,199,bindings/experimental/distrdf/python/DistRDF/Proxy.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Proxy.py,2,['variab'],['variable']
Modifiability,"""""""; Function to determine the type of a variable x.; If x is a string. It maps it to the corresponding column's type in RDF. (String constants are not supported); Else it determines the fundamental type of x. (int, float, bool); Else it is an a numpy array and maps it to corresponding RVec.; Otherwise flags a type error; Args:; 	 ` x: Variable whose type is to be determined. Returns:; type of the variable x; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_rdf_pyz.py:41,variab,variable,41,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_rdf_pyz.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_rdf_pyz.py,3,"['Variab', 'variab']","['Variable', 'variable']"
Modifiability,"""""""; Generate the translation for a type. :param tag: ""typedef"", ""variable"" etc.; :param parent: The typed object.; :param level: Recursion level controls indentation.; :return: Info().; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/cling/python/cppyy_backend/_cppyy_generator.py:66,variab,variable,66,bindings/pyroot/cppyy/cppyy-backend/cling/python/cppyy_backend/_cppyy_generator.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/cling/python/cppyy_backend/_cppyy_generator.py,1,['variab'],['variable']
Modifiability,"""""""; Given the path to a test in the test suite, generates the Lit tests associated; to that path. There can be zero, one or more tests. For example, some testing; formats allow expanding a single path in the test suite into multiple Lit tests; (e.g. they are generated on the fly). Note that this method is only used when Lit needs to actually perform test; discovery, which is not the case for configs with standalone tests.; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/formats/base.py:396,config,configs,396,interpreter/llvm-project/llvm/utils/lit/lit/formats/base.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/formats/base.py,1,['config'],['configs']
Modifiability,"""""""; Helper class to indicate that the substitutions contains backreferences. This can be used as the following in lit.cfg to mark subsitutions as having; back-references::. config.substutions.append(('\b[^ ]*.cpp', SubstituteCaptures('\0.txt'))). """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/TestingConfig.py:174,config,config,174,interpreter/llvm-project/llvm/utils/lit/lit/TestingConfig.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/TestingConfig.py,1,['config'],['config']
Modifiability,"""""""; Jupyter.CodeCell.options_default.highlight_modes['magic_{cppMIME}'] = {{'reg':[/^%%cpp/]}};; console.log(""JupyROOT - %%cpp magic configured"");; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/jupyroot/python/JupyROOT/helpers/utils.py:134,config,configured,134,bindings/jupyroot/python/JupyROOT/helpers/utils.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/jupyroot/python/JupyROOT/helpers/utils.py,1,['config'],['configured']
Modifiability,"""""""; Minimal clang-rename integration with Vim. Before installing make sure one of the following is satisfied:. * clang-rename is in your PATH; * `g:clang_rename_path` in ~/.vimrc points to valid clang-rename executable; * `binary` in clang-rename.py points to valid to clang-rename executable. To install, simply put this into your ~/.vimrc for python2 support. noremap <leader>cr :pyf <path-to>/clang-rename.py<cr>. For python3 use the following command (note the change from :pyf to :py3f). noremap <leader>cr :py3f <path-to>/clang-rename.py<cr>. IMPORTANT NOTE: Before running the tool, make sure you saved the file. All you have to do now is to place a cursor on a variable/function/class which; you would like to rename and press '<leader>cr'. You will be prompted for a new; name if the cursor points to a valid symbol.; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/clang-rename/clang-rename.py:670,variab,variable,670,interpreter/llvm-project/clang/tools/clang-rename/clang-rename.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/clang-rename/clang-rename.py,1,['variab'],['variable']
Modifiability,"""""""; Reset the integrator config to disable the RooBinIntegrator.; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf614_binned_fit_problems.py:26,config,config,26,tutorials/roofit/rf614_binned_fit_problems.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf614_binned_fit_problems.py,1,['config'],['config']
Modifiability,"""""""; Return True if the object, corresponding to (rootFile,pathSplit), inherits from TDirectory; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/main/python/cmdLineUtils.py:71,inherit,inherits,71,main/python/cmdLineUtils.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/main/python/cmdLineUtils.py,1,['inherit'],['inherits']
Modifiability,"""""""; Return True if the object, corresponding to (rootFile,pathSplit), inherits from TTree; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/main/python/cmdLineUtils.py:71,inherit,inherits,71,main/python/cmdLineUtils.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/main/python/cmdLineUtils.py,1,['inherit'],['inherits']
Modifiability,"""""""; Return True if the object, corresponding to the key, inherits from TDirectory; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/main/python/cmdLineUtils.py:58,inherit,inherits,58,main/python/cmdLineUtils.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/main/python/cmdLineUtils.py,1,['inherit'],['inherits']
Modifiability,"""""""; Return True if the object, corresponding to the key, inherits from THnSparse; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/main/python/cmdLineUtils.py:58,inherit,inherits,58,main/python/cmdLineUtils.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/main/python/cmdLineUtils.py,1,['inherit'],['inherits']
Modifiability,"""""""; Return True if the object, corresponding to the key, inherits from TTree; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/main/python/cmdLineUtils.py:58,inherit,inherits,58,main/python/cmdLineUtils.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/main/python/cmdLineUtils.py,1,['inherit'],['inherits']
Modifiability,"""""""; Set a function that will be executed as a first step on every backend before; any other operation. This method also executes the function on the current; user environment so changes are visible on the running session. This allows users to inject and execute custom code on the worker; environment without being part of the RDataFrame computational graph. Args:; fun (function): Function to be executed. *args (list): Variable length argument list used to execute the; function. **kwargs (dict): Keyword arguments used to execute the function.; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/__init__.py:422,Variab,Variable,422,bindings/experimental/distrdf/python/DistRDF/__init__.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/__init__.py,1,['Variab'],['Variable']
Modifiability,"""""""; Static Analyzer qualification infrastructure. The goal is to test the analyzer against different projects,; check for failures, compare results, and measure performance. Repository Directory will contain sources of the projects as well as the; information on how to build them and the expected output.; Repository Directory structure:; - ProjectMap file; - Historical Performance Data; - Project Dir1; - ReferenceOutput; - Project Dir2; - ReferenceOutput; ..; Note that the build tree must be inside the project dir. To test the build of the analyzer one would:; - Copy over a copy of the Repository Directory. (TODO: Prefer to ensure that; the build directory does not pollute the repository to min network; traffic).; - Build all projects, until error. Produce logs to report errors.; - Compare results. The files which should be kept around for failure investigations:; RepositoryCopy/Project DirI/ScanBuildResults; RepositoryCopy/Project DirI/run_static_analyzer.log. Assumptions (TODO: shouldn't need to assume these.):; The script is being run from the Repository Directory.; The compiler for scan-build and scan-build are in the PATH.; export PATH=/Users/zaks/workspace/c2llvm/build/Release+Asserts/bin:$PATH. For more logging, set the env variables:; zaks:TI zaks$ export CCC_ANALYZER_LOG=1; zaks:TI zaks$ export CCC_ANALYZER_VERBOSE=1. The list of checkers tested are hardcoded in the Checkers variable.; For testing additional checkers, use the SA_ADDITIONAL_CHECKERS environment; variable. It should contain a comma separated list.; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/analyzer/SATestBuild.py:1252,variab,variables,1252,interpreter/llvm-project/clang/utils/analyzer/SATestBuild.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/analyzer/SATestBuild.py,3,['variab'],"['variable', 'variables']"
Modifiability,"""""""; Static Analyzer qualification infrastructure: adding a new project to; the Repository Directory. Add a new project for testing: build it and add to the Project Map file.; Assumes it's being run from the Repository Directory.; The project directory should be added inside the Repository Directory and; have the same name as the project ID. The project should use the following files for set up:; - cleanup_run_static_analyzer.sh - prepare the build environment.; Ex: make clean can be a part of it.; - run_static_analyzer.cmd - a list of commands to run through scan-build.; Each command should be on a separate line.; Choose from: configure, make, xcodebuild; - download_project.sh - download the project into the CachedSource/; directory. For example, download a zip of; the project source from GitHub, unzip it,; and rename the unzipped directory to; 'CachedSource'. This script is not called; when 'CachedSource' is already present,; so an alternative is to check the; 'CachedSource' directory into the; repository directly.; - CachedSource/ - An optional directory containing the source of the; project being analyzed. If present,; download_project.sh will not be called.; - changes_for_analyzer.patch - An optional patch file for any local; changes; (e.g., to adapt to newer version of clang); that should be applied to CachedSource; before analysis. To construct this patch,; run the download script to download; the project to CachedSource, copy the; CachedSource to another directory (for; example, PatchedSource) and make any; needed modifications to the copied; source.; Then run:; diff -ur CachedSource PatchedSource \; > changes_for_analyzer.patch; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/analyzer/SATestAdd.py:636,config,configure,636,interpreter/llvm-project/clang/utils/analyzer/SATestAdd.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/analyzer/SATestAdd.py,2,"['adapt', 'config']","['adapt', 'configure']"
Modifiability,"""""""; TDirectoryFile inherits from TDirectory the pythonized attr syntax (__getattr__); and WriteObject method.; On the other side, the Get() method is pythonised only in TDirectoryFile.; Thus, the situation is now the following:. 1) __getattr__ : TDirectory --> TDirectoryFile --> TFile; 1.1) caches the returned object for future attempts; 1.2) raises AttributeError if object not found. 2) Get() : TDirectoryFile --> TFile; 2.1) does not cache the returned object; 2.2 returns nullptr if object not found; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tdirectoryfile.py:20,inherit,inherits,20,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tdirectoryfile.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tdirectoryfile.py,1,['inherit'],['inherits']
Modifiability,"""""""; TFile inherits from; - TDirectory the pythonized attr syntax (__getattr__) and WriteObject method.; - TDirectoryFile the pythonized Get method (pythonized only in Python); and defines the __enter__ and __exit__ methods to work as a context manager.; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tfile.py:11,inherit,inherits,11,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tfile.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tfile.py,1,['inherit'],['inherits']
Modifiability,"""""""; Test for the Python-list-like methods added to TCollection (and subclasses):; append, remove, extend, count; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tcollection_listmethods.py:99,extend,extend,99,bindings/pyroot/pythonizations/test/tcollection_listmethods.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tcollection_listmethods.py,1,['extend'],['extend']
Modifiability,"""""""; Test wrapper with different input/output configurations; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py:46,config,configurations,46,bindings/pyroot/pythonizations/test/numbadeclare.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py,29,['config'],['configurations']
Modifiability,"""""""; TestCase adaptor for providing a Python 'unittest' compatible interface to 'lit'; tests.; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/LitTestCase.py:14,adapt,adaptor,14,interpreter/llvm-project/llvm/utils/lit/lit/LitTestCase.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/LitTestCase.py,1,['adapt'],['adaptor']
Modifiability,"""""""; Testing reading a std::vector with variable size; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rdataframe_asnumpy.py:40,variab,variable,40,bindings/pyroot/pythonizations/test/rdataframe_asnumpy.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rdataframe_asnumpy.py,1,['variab'],['variable']
Modifiability,"""""""; The functions in this module are meant to run on a separate worker process.; Exception: in single process mode _execute is called directly. For efficiency, we copy all data needed to execute all tests into each worker; and store it in global variables. This reduces the cost of each task.; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/worker.py:247,variab,variables,247,interpreter/llvm-project/llvm/utils/lit/lit/worker.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/worker.py,1,['variab'],['variables']
Modifiability,"""""""; This script is run by GitHub actions to ensure that the code in PR's conform to; the coding style of LLVM. It can also be installed as a pre-commit git hook to; check the coding style before submitting it. The canonical source of this script; is in the LLVM source tree under llvm/utils/git. For C/C++ code it uses clang-format and for Python code it uses darker (which; in turn invokes black). You can learn more about the LLVM coding style on llvm.org:; https://llvm.org/docs/CodingStandards.html. You can install this script as a git hook by symlinking it to the .git/hooks; directory:. ln -s $(pwd)/llvm/utils/git/code-format-helper.py .git/hooks/pre-commit. You can control the exact path to clang-format or darker with the following; environment variables: $CLANG_FORMAT_PATH and $DARKER_FORMAT_PATH.; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/git/code-format-helper.py:757,variab,variables,757,interpreter/llvm-project/llvm/utils/git/code-format-helper.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/git/code-format-helper.py,1,['variab'],['variables']
Modifiability,"""""""; When calling Snapshot on a distributed worker, a list with the path to; the snapshotted file on the worker is stored. This function extends the; list of the current object with the elements from the list of the other; object.; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/PythonMergeables.py:137,extend,extends,137,bindings/experimental/distrdf/python/DistRDF/PythonMergeables.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/PythonMergeables.py,1,['extend'],['extends']
Modifiability,"""""""; Wrap an arbitrary function defined in Python or C++. If you're wrapping a Python function, it must take numpy arrays of type; float64 as input and output types. Parameters:; - name (str): Name of the function.; - func (callable): Function that defines the function.; - variables (list): List of variables to be used in the function. Returns:; - RooAbsReal wrapping the given function; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_rooglobalfunc.py:274,variab,variables,274,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_rooglobalfunc.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_rooglobalfunc.py,2,['variab'],['variables']
Modifiability,"""""""; find_tests_for_inputs(lit_config, inputs) -> [Test]. Given a configuration object and a list of input specifiers, find all the; tests to execute.; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/discovery.py:66,config,configuration,66,interpreter/llvm-project/llvm/utils/lit/lit/discovery.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/discovery.py,1,['config'],['configuration']
Modifiability,"""""""; getUnsupportedFeatures() -> list of strings. Returns a list of features from UNSUPPORTED that are present; in the test configuration's features.; Throws ValueError if an UNSUPPORTED line has a syntax error.; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/Test.py:124,config,configuration,124,interpreter/llvm-project/llvm/utils/lit/lit/Test.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/Test.py,1,['config'],['configuration']
Modifiability,"""""""; isExpectedToFail() -> bool. Check whether this test is expected to fail in the current; configuration. This check relies on the test xfails property which by; some test formats may not be computed until the test has first been; executed.; Throws ValueError if an XFAIL line has a syntax error.; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/Test.py:93,config,configuration,93,interpreter/llvm-project/llvm/utils/lit/lit/Test.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/Test.py,1,['config'],['configuration']
Modifiability,"""""""; load_from_path(path, litConfig). Load the configuration module at the provided path into the given config; object.; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/TestingConfig.py:47,config,configuration,47,interpreter/llvm-project/llvm/utils/lit/lit/TestingConfig.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/TestingConfig.py,2,['config'],"['config', 'configuration']"
Modifiability,"""""""; template<class T, int nlayers>; struct MultiDimTest {; T* layers[nlayers];. MultiDimTest(int width, int height) {; for (int i=0; i<nlayers; ++i) {; layers[i] = new T[width*height];; for (int j=0; j<width*height; ++j); layers[i][j] = j*2;; }; }; ~MultiDimTest() { for (int i=0; i<nlayers; ++i) delete[] layers[i]; }; };; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_datatypes.py:63,layers,layers,63,bindings/pyroot/cppyy/cppyy/test/test_datatypes.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_datatypes.py,4,['layers'],['layers']
Modifiability,"""""""A concrete, configured testing run.""""""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/run.py:15,config,configured,15,interpreter/llvm-project/llvm/utils/lit/lit/run.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/run.py,1,['config'],['configured']
Modifiability,"""""""Access to int8_t/uint8_t arrays that are global variables""""""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_datatypes.py:51,variab,variables,51,bindings/pyroot/cppyy/cppyy/test/test_datatypes.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_datatypes.py,1,['variab'],['variables']
Modifiability,"""""""Adapted test for array overloading""""""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_overloads.py:3,Adapt,Adapted,3,bindings/pyroot/cppyy/cppyy/test/test_overloads.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_overloads.py,1,['Adapt'],['Adapted']
Modifiability,"""""""Basic multiple inheritance""""""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_crossinheritance.py:18,inherit,inheritance,18,bindings/pyroot/cppyy/cppyy/test/test_crossinheritance.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_crossinheritance.py,1,['inherit'],['inheritance']
Modifiability,"""""""Bindings for {}.; These bindings are based on https://cppyy.readthedocs.io/en/latest/, and can be; used as per the documentation provided via the cppyy.cgl namespace. The environment; variable LD_LIBRARY_PATH must contain the path of the {}.rootmap file. Use; ""import cppyy; from cppyy.gbl import <some-C++-entity>"". Alternatively, use ""import {}"". This convenience wrapper supports ""discovery"" of the; available C++ entities using, for example Python 3's command line completion support.; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/cling/python/cppyy_backend/bindings_utils.py:187,variab,variable,187,bindings/pyroot/cppyy/cppyy-backend/cling/python/cppyy_backend/bindings_utils.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/cling/python/cppyy_backend/bindings_utils.py,1,['variab'],['variable']
Modifiability,"""""""CTU configuration is created from the chosen phases and dir.""""""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/analyze.py:7,config,configuration,7,interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/analyze.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/analyze.py,2,['config'],['configuration']
Modifiability,"""""""Check the intent of the build command. When static analyzer run against project configure step, it should be; silent and no need to run the analyzer or generate report. To run `scan-build` against the configure step might be necessary,; when compiler wrappers are used. That's the moment when build setup; check the compiler and capture the location for the build process.""""""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/analyze.py:83,config,configure,83,interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/analyze.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/analyze.py,2,['config'],['configure']
Modifiability,"""""""Class for configuring PyROOT""""""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_facade.py:13,config,configuring,13,bindings/pyroot/pythonizations/python/ROOT/_facade.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_facade.py,1,['config'],['configuring']
Modifiability,"""""""Config should be a list of parameters given to the %config command.; We allow only one setting per %config line and that setting can only; have one value. Assuming the parameters are valid, update the kernel's setting with; the new value. If there is an error, raise a TableGenKernelException. >>> k.parse_config_magic([]); Traceback (most recent call last):; ...; TableGenKernelException: Incorrect number of parameters to %config. Expected %config <setting> <value>.; >>> k._cell_reset; False; >>> k.parse_config_magic([""a"", ""b"", ""c""]); Traceback (most recent call last):; ...; TableGenKernelException: Incorrect number of parameters to %config. Expected %config <setting> <value>.; >>> k.parse_config_magic([""notasetting"", ""...""]); Traceback (most recent call last):; ...; TableGenKernelException: Unknown kernel setting ""notasetting"". Possible settings are: ""cellreset"".; >>> k.parse_config_magic([""cellreset"", ""food""]); Traceback (most recent call last):; ...; TableGenKernelException: Invalid value for setting ""cellreset"", expected ""on"" or ""off"".; >>> k.parse_config_magic([""cellreset"", ""on""]); >>> k._cell_reset; True; >>> k.parse_config_magic([""cellreset"", ""off""]); >>> k._cell_reset; False; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/jupyter/tablegen_kernel/kernel.py:3,Config,Config,3,interpreter/llvm-project/llvm/utils/TableGen/jupyter/tablegen_kernel/kernel.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/jupyter/tablegen_kernel/kernel.py,7,"['Config', 'config']","['Config', 'config']"
Modifiability,"""""""Configure ROOT graphics to be used interactively""""""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_application.py:3,Config,Configure,3,bindings/pyroot/pythonizations/python/ROOT/_application.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_application.py,1,['Config'],['Configure']
Modifiability,"""""""Configure the test suite to be able to invoke clang. Sets up some environment variables important to clang, locates a; just-built or optionally an installed clang, and add a set of standard; substitutions useful to any test suite that makes use of clang. """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/llvm/config.py:3,Config,Configure,3,interpreter/llvm-project/llvm/utils/lit/lit/llvm/config.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/llvm/config.py,2,"['Config', 'variab']","['Configure', 'variables']"
Modifiability,"""""""Configure the test suite to be able to invoke lld. Sets up some environment variables important to lld, locates a; just-built or optionally an installed lld, and add a set of standard; substitutions useful to any test suite that makes use of lld. """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/llvm/config.py:3,Config,Configure,3,interpreter/llvm-project/llvm/utils/lit/lit/llvm/config.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/llvm/config.py,2,"['Config', 'variab']","['Configure', 'variables']"
Modifiability,"""""""Create a RooDataSet from a dictionary of numpy arrays.; Args:; data (dict): Dictionary with strings as keys and numpy arrays as; values, to be imported into the RooDataSet.; variables (RooArgSet, or list/tuple of RooAbsArgs):; Specification of the variables in the RooDataSet, will be; forwarded to the RooDataSet constructor. Both real values and; categories are supported.; name (str): Name of the RooDataSet, `None` is equivalent to an; empty string.; title (str): Title of the RooDataSet, `None` is equivalent to an; empty string.; weight_name (str): Key of the array in `data` that will be used for; the dataset weights. Returns:; RooDataSet; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_roodataset.py:177,variab,variables,177,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_roodataset.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_roodataset.py,2,['variab'],['variables']
Modifiability,"""""""Create a RooDataSet from a pandas DataFrame.; Args:; df (pandas.DataFrame): Pandas DataFrame to import.; variables (RooArgSet, or list/tuple of RooAbsArgs):; Specification of the variables in the RooDataSet, will be; forwarded to the RooDataSet constructor. Both real values and; categories are supported.; name (str): Name of the RooDataSet, `None` is equivalent to an; empty string.; title (str): Title of the RooDataSet, `None` is equivalent to an; empty string.; weight_name (str): Key of the array in `data` that will be used for; the dataset weights. Returns:; RooDataSet; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_roodataset.py:108,variab,variables,108,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_roodataset.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_roodataset.py,2,['variab'],['variables']
Modifiability,"""""""Cross-inheritance example""""""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_doc_features.py:9,inherit,inheritance,9,bindings/pyroot/cppyy/cppyy/test/test_doc_features.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_doc_features.py,1,['inherit'],['inheritance']
Modifiability,"""""""Deep inheritance hierarchy""""""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_crossinheritance.py:8,inherit,inheritance,8,bindings/pyroot/cppyy/cppyy/test/test_crossinheritance.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_crossinheritance.py,1,['inherit'],['inheritance']
Modifiability,"""""""Deep multi-inheritance hierarchy""""""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_crossinheritance.py:14,inherit,inheritance,14,bindings/pyroot/cppyy/cppyy/test/test_crossinheritance.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_crossinheritance.py,1,['inherit'],['inheritance']
Modifiability,"""""""Do not store the headers' directories in the dictionary; Instead, rely on the environment variable $ROOT_INCLUDE_PATH at runtime; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling-argparse.py:93,variab,variable,93,core/dictgen/src/rootcling-argparse.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling-argparse.py,1,['variab'],['variable']
Modifiability,"""""""Export a RooDataSet to a dictionary of numpy arrays. Args:; copy (bool): If False, the data will not be copied. Use with; caution, as the numpy arrays and the RooAbsData now; own the same memory. If the dataset uses a; RooTreeDataStore, there will always be a copy and the; copy argument is ignored. Returns:; dict: A dictionary with the variable or weight names as keys and; the numpy arrays as values.; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_roodataset.py:341,variab,variable,341,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_roodataset.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_roodataset.py,1,['variab'],['variable']
Modifiability,"""""""Export a RooDataSet to a pandas DataFrame. Args:. Note:; Pandas copies the data from the numpy arrays when creating a; DataFrame. That's why we can disable copying in the to_numpy call. Returns:; pandas.DataFrame: A dataframe with the variable or weight names as; column names and the a row for each variable or; weight in the dataset.; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_roodataset.py:238,variab,variable,238,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_roodataset.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_roodataset.py,2,['variab'],['variable']
Modifiability,"""""""Extend a life line to references into a vector if needed""""""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_regression.py:3,Extend,Extend,3,bindings/pyroot/cppyy/cppyy/test/test_regression.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_regression.py,1,['Extend'],['Extend']
Modifiability,"""""""Extend existing compilation database with new entries.; Duplicate entries are detected and not present in the final output.; The output is not continuously updated, it's done when the build; command finished. """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/arguments.py:3,Extend,Extend,3,interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/arguments.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/arguments.py,1,['Extend'],['Extend']
Modifiability,"""""""Find the executable program 'name', optionally using the specified; environment variable as an override before searching the build directory; and then optionally the configuration's PATH.""""""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/llvm/config.py:83,variab,variable,83,interpreter/llvm-project/llvm/utils/lit/lit/llvm/config.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/llvm/config.py,2,"['config', 'variab']","['configuration', 'variable']"
Modifiability,"""""""Flexible enumeration of C types.""""""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/ABITest/TypeGen.py:3,Flexible,Flexible,3,interpreter/llvm-project/clang/utils/ABITest/TypeGen.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/ABITest/TypeGen.py,1,['Flexible'],['Flexible']
Modifiability,"""""""Get all the available checkers from default and from the plugins. :param clang: the compiler we are using; :param plugins: list of plugins which was requested by the user; :return: a dictionary of all available checkers and its status. {<checker name>: (<checker description>, <is active by default>)}""""""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/clang.py:60,plugin,plugins,60,interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/clang.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/clang.py,3,['plugin'],['plugins']
Modifiability,"""""""Get the active checker list. :param clang: the compiler we are using; :param plugins: list of plugins which was requested by the user; :return: list of checker names which are active. To get the default checkers we execute Clang to print how this; compilation would be called. And take out the enabled checker from the; arguments. For input file we specify stdin and pass only language; information.""""""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/clang.py:80,plugin,plugins,80,interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/clang.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/clang.py,2,['plugin'],['plugins']
Modifiability,"""""""Hierarchy with multiple inheritance on the C++ side""""""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_crossinheritance.py:27,inherit,inheritance,27,bindings/pyroot/cppyy/cppyy/test/test_crossinheritance.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_crossinheritance.py,1,['inherit'],['inheritance']
Modifiability,"""""""Implement intercept compiler wrapper functionality. It does generate execution report into target directory.; The target directory name is from environment variables.""""""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/intercept.py:159,variab,variables,159,interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/intercept.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/intercept.py,1,['variab'],['variables']
Modifiability,"""""""Inherit from base with non-standard offset""""""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_crossinheritance.py:3,Inherit,Inherit,3,bindings/pyroot/cppyy/cppyy/test/test_crossinheritance.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_crossinheritance.py,1,['Inherit'],['Inherit']
Modifiability,"""""""Inheritance with access and overload complications""""""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_crossinheritance.py:3,Inherit,Inheritance,3,bindings/pyroot/cppyy/cppyy/test/test_crossinheritance.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_crossinheritance.py,1,['Inherit'],['Inheritance']
Modifiability,"""""""Inheriting from a non-copyable base class""""""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_crossinheritance.py:3,Inherit,Inheriting,3,bindings/pyroot/cppyy/cppyy/test/test_crossinheritance.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_crossinheritance.py,1,['Inherit'],['Inheriting']
Modifiability,"""""""Injection of TDirectory.__getitem__ that raises AttributeError on failure. Method that is assigned to TDirectory.__getitem__. It relies on Get to; obtain the object from the TDirectory and adds on top:; - Raising an AttributeError if the object does not exist; - Caching the result of a successful get for future re-attempts.; Once cached, the same object is retrieved every time.; This pythonisation is inherited by TDirectoryFile and TFile. Example:; ```; myfile.mydir.mysubdir.myHist.Draw(); ```; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tdirectory.py:407,inherit,inherited,407,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tdirectory.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tdirectory.py,1,['inherit'],['inherited']
Modifiability,"""""""Kernel using llvm-tblgen inside jupyter. All input is treated as TableGen unless the first non whitespace character; is ""%"" in which case it is a ""magic"" line. The supported cell magic is:; * %args - to set the arguments passed to llvm-tblgen.; * %reset - to reset the cached code and magic state.; * %noreset - to not reset the cached code and magic state; (useful when you have changed the default to always; reset the cache). These are ""cell magic"" meaning it applies to the whole cell. Therefore; it must be the first line, or part of a run of magic lines starting; from the first line. The following are global magic (that applies to all cells going; forward):; * %config - to change the behaviour of the kernel overall, including; changing defaults for things like resets. Global magic must be written in the same way as cell magic. ```tablgen; %args; %reset; %args --print-records --print-detailed-records; class Stuff {; string Name;; }. def a_thing : Stuff {}; ```. """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/jupyter/tablegen_kernel/kernel.py:673,config,config,673,interpreter/llvm-project/llvm/utils/TableGen/jupyter/tablegen_kernel/kernel.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/jupyter/tablegen_kernel/kernel.py,1,['config'],['config']
Modifiability,"""""""LitConfig - Configuration data for a 'lit' test runner instance, shared; across all tests. The LitConfig object is also used to communicate with client configuration; files, it is always passed in as the global variable 'lit' so that; configuration files can access common functionality and internal components; easily.; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/LitConfig.py:15,Config,Configuration,15,interpreter/llvm-project/llvm/utils/lit/lit/LitConfig.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/LitConfig.py,4,"['Config', 'config', 'variab']","['Configuration', 'configuration', 'variable']"
Modifiability,"""""""Loading external checkers using the clang plugin interface.""""""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/arguments.py:45,plugin,plugin,45,interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/arguments.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/arguments.py,1,['plugin'],['plugin']
Modifiability,"""""""Mix of (non-)templated across inheritance""""""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_templates.py:33,inherit,inheritance,33,bindings/pyroot/cppyy/cppyy/test/test_templates.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_templates.py,1,['inherit'],['inheritance']
Modifiability,"""""""Multiple cross-inheritance""""""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_doc_features.py:18,inherit,inheritance,18,bindings/pyroot/cppyy/cppyy/test/test_doc_features.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_doc_features.py,1,['inherit'],['inheritance']
Modifiability,"""""""Multiple inheritance with constructors""""""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_crossinheritance.py:12,inherit,inheritance,12,bindings/pyroot/cppyy/cppyy/test/test_crossinheritance.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_crossinheritance.py,1,['inherit'],['inheritance']
Modifiability,"""""""Multiple inheritance with defaults""""""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_crossinheritance.py:12,inherit,inheritance,12,bindings/pyroot/cppyy/cppyy/test/test_crossinheritance.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_crossinheritance.py,1,['inherit'],['inheritance']
Modifiability,"""""""Mutable shell environment containing things like CWD and env vars. Environment variables are not implemented, but cwd tracking is. In addition,; we maintain a dir stack for pushd/popd.; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/TestRunner.py:82,variab,variables,82,interpreter/llvm-project/llvm/utils/lit/lit/TestRunner.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/TestRunner.py,1,['variab'],['variables']
Modifiability,"""""""Numba-JITing of a increment method belonging to a class, and also swaps the pointers and reflects the change on the python ctypes variables""""""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_numba.py:133,variab,variables,133,bindings/pyroot/cppyy/cppyy/test/test_numba.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_numba.py,1,['variab'],['variables']
Modifiability,"""""""Provide options to pass through to the analyzer's; -analyzer-config flag. Several options are separated with comma:; 'key1=val1,key2=val2'. Available options:; stable-report-filename=true or false (default). Switch the page naming to:; report-<filename>-<function/method name>-<id>.html; instead of report-XXXXXX.html""""""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/arguments.py:64,config,config,64,interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/arguments.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/arguments.py,1,['config'],['config']
Modifiability,"""""""Resolve metaclasses for multiple inheritance.""""""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/python/cppyy/__init__.py:36,inherit,inheritance,36,bindings/pyroot/cppyy/cppyy/python/cppyy/__init__.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/python/cppyy/__init__.py,1,['inherit'],['inheritance']
Modifiability,"""""""Returns the PATH variable modified to remove the path to this program.""""""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/check_cfc/check_cfc.py:20,variab,variable,20,interpreter/llvm-project/clang/utils/check_cfc/check_cfc.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/check_cfc/check_cfc.py,1,['variab'],['variable']
Modifiability,"""""""STL sequence iterator injected in RooAbsCollection, inherited by RooArgSet""""""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/roofit/rooabscollection.py:55,inherit,inherited,55,bindings/pyroot/pythonizations/test/roofit/rooabscollection.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/roofit/rooabscollection.py,1,['inherit'],['inherited']
Modifiability,"""""""Sets up the environment for the build command. It sets the required environment variables and execute the given command.; The exec calls will be logged by the 'libear' preloaded library or by the; 'wrapper' programs.""""""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/intercept.py:83,variab,variables,83,interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/intercept.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/intercept.py,1,['variab'],['variables']
Modifiability,"""""""Setting of global gDebug variable""""""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_fragile.py:28,variab,variable,28,bindings/pyroot/cppyy/cppyy/test/test_fragile.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_fragile.py,1,['variab'],['variable']
Modifiability,"""""""Support C-style enum variable declarations""""""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_regression.py:24,variab,variable,24,bindings/pyroot/cppyy/cppyy/test/test_regression.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_regression.py,1,['variab'],['variable']
Modifiability,"""""""Template instantiation with cross-inheritance example""""""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_doc_features.py:37,inherit,inheritance,37,bindings/pyroot/cppyy/cppyy/test/test_doc_features.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_doc_features.py,1,['inherit'],['inheritance']
Modifiability,"""""""Test auto-downcast in adverse inheritance situation""""""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_advancedcpp.py:33,inherit,inheritance,33,bindings/pyroot/cppyy/cppyy/test/test_advancedcpp.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_advancedcpp.py,1,['inherit'],['inheritance']
Modifiability,"""""""Test binding of a basic inheritance structure""""""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_advancedcpp.py:27,inherit,inheritance,27,bindings/pyroot/cppyy/cppyy/test/test_advancedcpp.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_advancedcpp.py,1,['inherit'],['inheritance']
Modifiability,"""""""Test calling of methods from multiple inheritance""""""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_advancedcpp.py:41,inherit,inheritance,41,bindings/pyroot/cppyy/cppyy/test/test_advancedcpp.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_advancedcpp.py,1,['inherit'],['inheritance']
Modifiability,"""""""Test data member access when using virtual inheritence""""""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_advancedcpp.py:46,inherit,inheritence,46,bindings/pyroot/cppyy/cppyy/test/test_advancedcpp.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_advancedcpp.py,1,['inherit'],['inheritence']
Modifiability,"""""""Test reference passing when using virtual inheritance""""""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_advancedcpp.py:45,inherit,inheritance,45,bindings/pyroot/cppyy/cppyy/test/test_advancedcpp.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_advancedcpp.py,1,['inherit'],['inheritance']
Modifiability,"""""""Vector of polymorphic types should auto-cast""""""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_stltypes.py:13,polymorphi,polymorphic,13,bindings/pyroot/cppyy/cppyy/test/test_stltypes.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_stltypes.py,1,['polymorphi'],['polymorphic']
Modifiability,"""""""When '%(prog)s' analyzes a project by interposing a compiler; wrapper, which executes a real compiler for compilation and do other; tasks (record the compiler invocation). Because of this interposing,; '%(prog)s' does not know what compiler your project normally uses.; Instead, it simply overrides the CC environment variable, and guesses; your default compiler. If you need '%(prog)s' to use a specific compiler for *compilation*; then you can use this option to specify a path to that compiler.""""""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/arguments.py:321,variab,variable,321,interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/arguments.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/arguments.py,1,['variab'],['variable']
Modifiability,"""""""\; LLVM {} Release. # A note on binaries. Volunteers make binaries for the LLVM project, which will be uploaded; when they have had time to test and build these binaries. They might; not be available directly or not at all for each release. We suggest; you use the binaries from your distribution or build your own if you; rely on a specific platform or configuration.""""""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/release/github-upload-release.py:357,config,configuration,357,interpreter/llvm-project/llvm/utils/release/github-upload-release.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/release/github-upload-release.py,1,['config'],['configuration']
Modifiability,"""""""\; namespace ExceptionTypeTest {. class ConfigFileNotFoundError : public std::exception {; std::string fMsg;; public:; ConfigFileNotFoundError(const std::string& msg) : fMsg(msg) {}; const char* what() const throw() { return fMsg.c_str(); }; };. class MyClass1 {; public:; MyClass1(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; MyClass1(const MyClass1& other) {}; };. class MyClass1a {; public:; MyClass1a() {}; void initialize(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; };. class MyClass2 {; public:; MyClass2(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; MyClass2(const char* configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; };. class MyClass2a {; public:; MyClass2a() {}; void initialize(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; void initialize(const char* configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; };. class MyClass3 {; public:; MyClass3(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; MyClass3(const char* configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; MyClass3(const MyClass3& other) = delete;; MyClass3(const MyClass3&& other) = delete;; };. class MyClass4 {; public:; MyClass4(int) {}; MyClass4(const MyClass3& other) {}; };. class MyClass4a {; public:; MyClass4a() {}; void initialize(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; void initialize(const char* configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; void initialize(int) {}; }; }""""""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_overloads.py:43,Config,ConfigFileNotFoundError,43,bindings/pyroot/cppyy/cppyy/test/test_overloads.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_overloads.py,32,"['Config', 'config']","['ConfigFileNotFoundError', 'configfilename']"
Modifiability,"""""""\; namespace Polymorphic {; class vertex {; public:; virtual ~vertex() {}; };. class Mvertex : public vertex {};. class vCont {; public:; virtual ~vCont() { for (auto& v: verts) delete v; }; std::vector<vertex*> verts { new vertex(), new Mvertex() };; const std::vector<vertex*>& vertices() { return verts; }; }; }""""""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_stltypes.py:16,Polymorphi,Polymorphic,16,bindings/pyroot/cppyy/cppyy/test/test_stltypes.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_stltypes.py,1,['Polymorphi'],['Polymorphic']
Modifiability,"""""""executeBuiltinExport - Set an environment variable.""""""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/TestRunner.py:45,variab,variable,45,interpreter/llvm-project/llvm/utils/lit/lit/TestRunner.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/TestRunner.py,1,['variab'],['variable']
Modifiability,"""""""finish() - Finish this config object, after loading is complete.""""""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/TestingConfig.py:26,config,config,26,interpreter/llvm-project/llvm/utils/lit/lit/TestingConfig.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/TestingConfig.py,1,['config'],['config']
Modifiability,"""""""load_config(config, path) - Load a config object from an alternate; path.""""""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/LitConfig.py:15,config,config,15,interpreter/llvm-project/llvm/utils/lit/lit/LitConfig.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/LitConfig.py,2,['config'],['config']
Modifiability,"""""""root attribute - The root configuration for the test suite.""""""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/TestingConfig.py:29,config,configuration,29,interpreter/llvm-project/llvm/utils/lit/lit/TestingConfig.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/TestingConfig.py,1,['config'],['configuration']
Modifiability,"""""""struct Variable {; Variable(double lb, double ub, double value, bool binary, bool integer, const std::string& name) {}; Variable(int) {}; };""""""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_fragile.py:10,Variab,Variable,10,bindings/pyroot/cppyy/cppyy/test/test_fragile.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_fragile.py,3,['Variab'],['Variable']
Modifiability,"""""""which(command, [paths]) - Look up the given command in the paths string; (or the PATH environment variable, if unspecified).""""""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/analyzer/SATestUtils.py:101,variab,variable,101,interpreter/llvm-project/clang/utils/analyzer/SATestUtils.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/analyzer/SATestUtils.py,2,['variab'],['variable']
Modifiability,"""rhode_island"", ""south_carolina"", ""south_dakota"", ""tennessee"",; ""texas"", ""utah"", ""vermont"", ""virginia"",; ""washington"", ""west_virginia"", ""wisconsin"", ""wyoming""; };; Double_t pop[nx] = {; 4708708, 6595778, 2889450, 36961664, 5024748, 3518288, 885122, 18537969,; 9829211, 1545801, 12910409, 6423113, 3007856, 2818747, 4314113, 4492076,; 1318301, 5699478, 6593587, 9969727, 5266214, 2951996, 5987580, 974989,; 1796619, 2643085, 1324575, 8707739, 2009671, 19541453, 9380884, 646844,; 11542645, 3687050, 3825657, 12604767, 1053209, 4561242, 812383, 6296254,; 24782302, 2784572, 621760, 7882590, 6664195, 1819777, 5654774, 544270; };. Double_t lon1 = -130;; Double_t lon2 = -65;; Double_t lat1 = 24;; Double_t lat2 = 50;; auto p = new TH2Poly(""USA"",""USA Population"",lon1,lon2,lat1,lat2);. TFile::SetCacheFileDir(""."");; auto f = TFile::Open(""http://root.cern/files/usa.root"", ""CACHEREAD"");. TMultiGraph *mg;; TKey *key;; TIter nextkey(gDirectory->GetListOfKeys());; while ((key = (TKey*)nextkey())) {; TObject *obj = key->ReadObj();; if (obj->InheritsFrom(""TMultiGraph"")) {; mg = (TMultiGraph*)obj;; bin = p->AddBin(mg);; }; }. for (i=0; i<nx; i++) p->Fill(states[i], pop[i]);. gStyle->SetOptStat(11);; p->Draw(""COLZ L"");; }; End_Macro. `TH2Poly` histograms can also be plotted using the GL interface using; the option ""GLLEGO"". \since **ROOT version 6.09/01**. In some cases it can be useful to not draw the empty bins. the option ""0""; combined with the option ""COL"" et COLZ allows to do that. Begin_Macro(source); {; auto chc = new TCanvas(""chc"",""chc"",600,400);. auto hc = new TH2Poly();; hc->Honeycomb(0,0,.1,25,25);; hc->SetName(""hc"");; hc->SetTitle(""Option COLZ 0"");; TRandom ran;; for (int i = 0; i<300; i++) hc->Fill(ran.Gaus(2.,1), ran.Gaus(2.,1));; hc->Draw(""colz 0"");; }; End_Macro. \anchor HP21; ### The SPEC option. This option allows to use the `TSpectrum2Painter` tools. See the full; documentation in `TSpectrum2Painter::PaintSpectrum`. \anchor HP22; ### Option ""Z"" : Adding the color palette o",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:86559,Inherit,InheritsFrom,86559,hist/histpainter/src/THistPainter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx,1,['Inherit'],['InheritsFrom']
Modifiability,"# ## Write it to disk in ROOT format; # We now write to disk a new dataset with one of the variables originally; # present in the tree and the new variables.; # The user can explicitly specify the types of the columns as template; # arguments of the Snapshot method, otherwise they will be automatically; # inferred.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df007_snapshot.py:91,variab,variables,91,tutorials/dataframe/df007_snapshot.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df007_snapshot.py,2,['variab'],['variables']
Modifiability,"# '-P' means the output is in portable format,; # '-g' means we only get global symbols,; # '-Xany' enforce handling both 32- and 64-bit objects on AIX,; # '--no-demangle' ensure that C++ symbol names are not demangled; note; # that llvm-nm do not demangle by default, but the system nm on AIX does; # that, so the behavior may change in the future,; # '-p' do not waste time sorting the symbols.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/extract_symbols.py:30,portab,portable,30,interpreter/llvm-project/llvm/utils/extract_symbols.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/extract_symbols.py,1,['portab'],['portable']
Modifiability,"# ***** Condition 1 *****; # If the node does not have children, it might be prunable.; # ***** Condition 2 *****; # If the node is wrapped by a proxy which is not directly; # assigned to a variable, then it will be flagged for pruning; # ***** Condition 3 *****; # If the current node's value was already computed, it should; # get pruned. Only action nodes may possess a value attribute; # which is not None",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Node.py:190,variab,variable,190,bindings/experimental/distrdf/python/DistRDF/Node.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Node.py,1,['variab'],['variable']
Modifiability,"# -*- coding: utf-8 -*-; #; # Clang Static Analyzer documentation build configuration file, created by; # sphinx-quickstart on Wed Jan 2 15:54:28 2013.; #; # This file is execfile()d with the current directory set to its containing dir.; #; # Note that not all possible configuration values are present in this; # autogenerated file.; #; # All configuration values have a default; values that are commented out; # serve to show the default.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/docs/analyzer/conf.py:72,config,configuration,72,interpreter/llvm-project/clang/docs/analyzer/conf.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/docs/analyzer/conf.py,3,['config'],['configuration']
Modifiability,"# -*- coding: utf-8 -*-; #; # Clang documentation build configuration file, created by; # sphinx-quickstart on Sun Dec 9 20:01:55 2012.; #; # This file is execfile()d with the current directory set to its containing dir.; #; # Note that not all possible configuration values are present in this; # autogenerated file.; #; # All configuration values have a default; values that are commented out; # serve to show the default.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/docs/conf.py:56,config,configuration,56,interpreter/llvm-project/clang/docs/conf.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/docs/conf.py,3,['config'],['configuration']
Modifiability,"# -*- coding: utf-8 -*-; #; # Cling documentation build configuration file, created by; # sphinx-quickstart on Sun Dec 9 20:01:55 2012.; #; # This file is execfile()d with the current directory set to its containing dir.; #; # Note that not all possible configuration values are present in this; # autogenerated file.; #; # All configuration values have a default; values that are commented out; # serve to show the default.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/docs/conf.py:56,config,configuration,56,interpreter/cling/docs/conf.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/docs/conf.py,3,['config'],['configuration']
Modifiability,# -*- coding: utf-8 -*-; #; # LLVM documentation build configuration file.; #; # This file is execfile()d with the current directory set to its containing dir.; #; # Note that not all possible configuration values are present in this; # autogenerated file.; #; # All configuration values have a default; values that are commented out; # serve to show the default.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/docs/conf.py:55,config,configuration,55,interpreter/llvm-project/llvm/docs/conf.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/docs/conf.py,3,['config'],['configuration']
Modifiability,"# -*- coding: utf-8 -*-; #; # cppyy documentation build configuration file, created by; # sphinx-quickstart on Wed Jul 12 14:35:45 2017.; #; # This file is execfile()d with the current directory set to its; # containing dir.; #; # Note that not all possible configuration values are present in this; # autogenerated file.; #; # All configuration values have a default; values that are commented out; # serve to show the default.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/doc/source/conf.py:56,config,configuration,56,bindings/pyroot/cppyy/cppyy/doc/source/conf.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/doc/source/conf.py,3,['config'],['configuration']
Modifiability,"# -- General configuration -----------------------------------------------------; # If your documentation needs a minimal Sphinx version, state it here.; # needs_sphinx = '1.0'; # Add any Sphinx extension module names here, as strings. They can be extensions; # coming with Sphinx (named 'sphinx.ext.*') or your custom ones.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/docs/conf.py:13,config,configuration,13,interpreter/llvm-project/llvm/docs/conf.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/docs/conf.py,1,['config'],['configuration']
Modifiability,"# --- Perform extended ML fit of composite PDF to toy data ---",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/rs601_HLFactoryexample.py:14,extend,extended,14,tutorials/roostats/rs601_HLFactoryexample.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/rs601_HLFactoryexample.py,1,['extend'],['extended']
Modifiability,"# ----- Evaluate and compare performance of all configured MVAs",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_RNN_Classification.py:48,config,configured,48,tutorials/tmva/TMVA_RNN_Classification.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_RNN_Classification.py,1,['config'],['configured']
Modifiability,"# --------------------------------------------------------------; # P A R T 4 : U S I N G H Y B R I D C A L C U L A T O R; # ==============================================================; # Now we demonstrate the RooStats HybridCalculator.; #; # Like all RooStats calculators it needs the data and a ModelConfig; # for the relevant hypotheses. Since we are doing hypothesis testing; # we need a ModelConfig for the null (background only) and the alternate; # (signal+background) hypotheses. We also need to specify the PDF,; # the parameters of interest, and the observables. Furthermore, since; # the parameter of interest is floating, we need to specify which values; # of the parameter corresponds to the null and alternate (eg. s=0 and s=50); #; # define some sets of variables obs={x} and poi={s}; # note here, x is the only observable in the main measurement; # and y is treated as a separate measurement, which is used; # to produce the prior that will be used in this calculation; # to randomize the nuisance parameters.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridStandardForm.py:773,variab,variables,773,tutorials/roostats/HybridStandardForm.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridStandardForm.py,1,['variab'],['variables']
Modifiability,"# -------------------------------------------------------------; # P A R T 4 : U S I N G H Y B R I D C A L C U L A T O R; # =============================================================; # Now we demonstrate the RooStats HybridCalculator.; #; # Like all RooStats calculators it needs the data and a ModelConfig; # for the relevant hypotheses. Since we are doing hypothesis testing; # we need a ModelConfig for the null (background only) and the alternate; # (signal+background) hypotheses. We also need to specify the PDF,; # the parameters of interest, and the observables. Furthermore, since; # the parameter of interest is floating, we need to specify which values; # of the parameter corresponds to the null and alternate (eg. s=0 and s=50); #; # define some sets of variables obs={x} and poi={s}; # note here, x is the only observable in the main measurement; # and y is treated as a separate measurement, which is used; # to produce the prior that will be used in this calculation; # to randomize the nuisance parameters.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridInstructional.py:771,variab,variables,771,tutorials/roostats/HybridInstructional.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridInstructional.py,1,['variab'],['variables']
Modifiability,"# -------------------------------------------------------; # User configuration parameters",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/TwoSidedFrequentistUpperLimitWithBands.py:66,config,configuration,66,tutorials/roostats/TwoSidedFrequentistUpperLimitWithBands.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/TwoSidedFrequentistUpperLimitWithBands.py,1,['config'],['configuration']
Modifiability,"# ---------------------------------------------; # create and use the ProfileLikelihoodCalculator; # to find and plot the 95% confidence interval; # on the parameter of interest as specified; # in the model config",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/StandardProfileLikelihoodDemo.py:207,config,config,207,tutorials/roostats/StandardProfileLikelihoodDemo.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/StandardProfileLikelihoodDemo.py,1,['config'],['config']
Modifiability,"# ----------------------------------; # Now the statistical tests; # model config",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/FourBinInstructional.py:75,config,config,75,tutorials/roostats/FourBinInstructional.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/FourBinInstructional.py,1,['config'],['config']
Modifiability,"# 2. Each sample should have its own signal yield, but there is an extra complication:; # We need the yields 1 and 2 to be a function of the variable ""mass"".; # For this, we pre-define nodes with exactly the names that the customiser would have created automatically,; # that is, ""<nodeName>_<categoryName>"", and we register them in the set of customiser nodes.; # The customiser will pick them up instead of creating new ones.; # If we don't provide one (e.g. for ""yieldSig_Sample3""), it will be created automatically by cloning `yieldSig`.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf514_RooCustomizer.py:141,variab,variable,141,tutorials/roofit/rf514_RooCustomizer.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf514_RooCustomizer.py,1,['variab'],['variable']
Modifiability,# A simple evaluator of boolean expressions.; #; # Grammar:; # expr :: or_expr; # or_expr :: and_expr ('||' and_expr)*; # and_expr :: not_expr ('&&' not_expr)*; # not_expr :: '!' not_expr; # '(' or_expr ')'; # match_expr; # match_expr :: braced_regex; # identifier; # braced_regex match_expr; # identifier match_expr; # identifier :: [-+=._a-zA-Z0-9]+; # braced_regex :: '{{' python_regex '}}'; # Evaluates `string` as a boolean expression.; # Returns True or False. Throws a ValueError on syntax error.; #; # Variables in `variables` are true.; # Regexes that match any variable in `variables` are true.; # 'true' is true.; # All other identifiers are false.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/BooleanExpression.py:510,Variab,Variables,510,interpreter/llvm-project/llvm/utils/lit/lit/BooleanExpression.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/BooleanExpression.py,4,"['Variab', 'variab']","['Variables', 'variable', 'variables']"
Modifiability,# Access in this fashion as a hackish way to portably; # access vectors.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/ABITest/ABITestGen.py:45,portab,portably,45,interpreter/llvm-project/clang/utils/ABITest/ABITestGen.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/ABITest/ABITestGen.py,2,['portab'],['portably']
Modifiability,"# Access metadata information that is stored in the JSON config file of the RDataFrame.; # The metadata contained in the JSON file is accessible within a `DefinePerSample` call, through the `RSampleInfo` class.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df106_HiggsToFourLeptons.py:57,config,config,57,tutorials/dataframe/df106_HiggsToFourLeptons.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df106_HiggsToFourLeptons.py,1,['config'],['config']
Modifiability,# Adapt the result to unittest.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/LitTestCase.py:2,Adapt,Adapt,2,interpreter/llvm-project/llvm/utils/lit/lit/LitTestCase.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/LitTestCase.py,1,['Adapt'],['Adapt']
Modifiability,"# Adaptive kernel estimation pdf with increased bandwidth scale factor; # (promotes smoothness over detail preservation)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf707_kernelestimation.py:2,Adapt,Adaptive,2,tutorials/roofit/rf707_kernelestimation.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf707_kernelestimation.py,1,['Adapt'],['Adaptive']
Modifiability,"# Add a Python reference to the plot variable to the RooPlot because; # the plot variable needs to survive at least as long as the plot.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_rooabsreallvalue.py:37,variab,variable,37,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_rooabsreallvalue.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_rooabsreallvalue.py,2,['variab'],['variable']
Modifiability,"# Add column with variable w to previously generated dataset",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/roofit/roodataset_numpy.py:18,variab,variable,18,bindings/pyroot/pythonizations/test/roofit/roodataset_numpy.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/roofit/roodataset_numpy.py,2,['variab'],['variable']
Modifiability,"# Adding integration topic to existing INFO stream; # ---------------------------------------------------; # Print streams configuration",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf506_msgservice.py:123,config,configuration,123,tutorials/roofit/rf506_msgservice.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf506_msgservice.py,1,['config'],['configuration']
Modifiability,"# AddressSanitizer runtime and ROOT configuration",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/import_load_libs.py:36,config,configuration,36,bindings/pyroot/pythonizations/test/import_load_libs.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/import_load_libs.py,1,['config'],['configuration']
Modifiability,"# Adjust global 1D integration precision; # ----------------------------------------------------------------------------; # Print current global default configuration for numeric integration; # strategies",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf901_numintconfig.py:153,config,configuration,153,tutorials/roofit/rf901_numintconfig.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf901_numintconfig.py,1,['config'],['configuration']
Modifiability,"# Adjusting default config for a specific pdf; # -------------------------------------------------------------------------------------; # Another possibility: associate custom MC sampling configuration as default for object 'model'; # The kTRUE argument will install a clone of the default configuration as specialized configuration; # for self model if none existed so far",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf902_numgenconfig.py:20,config,config,20,tutorials/roofit/rf902_numgenconfig.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf902_numgenconfig.py,4,['config'],"['config', 'configuration']"
Modifiability,"# Adjusting default config for a specific pdf; # -------------------------------------------------------------------------------------; # Another possibility: associate custom numeric integration configuration; # as default for object 'landau'",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf901_numintconfig.py:20,config,config,20,tutorials/roofit/rf901_numintconfig.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf901_numintconfig.py,2,['config'],"['config', 'configuration']"
Modifiability,"# Adjusting parameters of a specific technique; # ---------------------------------------------------------------------------------------; # Adjust maximum number of steps of ROOT.RooIntegrator1D in the global; # default configuration",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf901_numintconfig.py:221,config,configuration,221,tutorials/roofit/rf901_numintconfig.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf901_numintconfig.py,2,['config'],['configuration']
Modifiability,# Allow a very limited set of variables. This is pretty gross.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/scan-view/share/ScanView.py:30,variab,variables,30,interpreter/llvm-project/clang/tools/scan-view/share/ScanView.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/scan-view/share/ScanView.py,1,['variab'],['variables']
Modifiability,# An IR variable named '%.' matches the FileCheck regex string.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/UpdateTestChecks/common.py:8,variab,variable,8,interpreter/llvm-project/llvm/utils/UpdateTestChecks/common.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/UpdateTestChecks/common.py,1,['variab'],['variable']
Modifiability,"# An adaptive kernel estimation pdf on the same data without mirroring option; # for comparison",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf707_kernelestimation.py:5,adapt,adaptive,5,tutorials/roofit/rf707_kernelestimation.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf707_kernelestimation.py,1,['adapt'],['adaptive']
Modifiability,# Ask llvm-config about the specified feature.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/llvm/config.py:11,config,config,11,interpreter/llvm-project/llvm/utils/lit/lit/llvm/config.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/llvm/config.py,1,['config'],['config']
Modifiability,"# Avoid Windows heuristics which try to detect potential installer; # programs (which may need to run with elevated privileges) and ask; # if the user wants to run them in that way. This heuristic may; # match for executables containing the substrings ""patch"" (which is; # a substring of ""dispatch""), ""update"", ""setup"", etc. Set this; # environment variable indicating that we want to execute them with; # the current user.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/TestingConfig.py:349,variab,variable,349,interpreter/llvm-project/llvm/utils/lit/lit/TestingConfig.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/TestingConfig.py,1,['variab'],['variable']
Modifiability,"# B-physics pdf with truth resolution; # ---------------------------------------------------------------------; # Variables of decay pdf",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf209_anaconv.py:114,Variab,Variables,114,tutorials/roofit/rf209_anaconv.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf209_anaconv.py,1,['Variab'],['Variables']
Modifiability,"# Basic information requests; # ---------------------------------------------; # Get list of observables; # ---------------------------------------------; # Get list of observables of pdf in context of a dataset; #; # Observables are define each context as the variables; # shared between a model and a dataset. In self case; # that is the variable 'x'",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf207_comptools.py:261,variab,variables,261,tutorials/roofit/rf207_comptools.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf207_comptools.py,2,['variab'],"['variable', 'variables']"
Modifiability,"# Bind ROOT::Math::beta_pdf C function; # -----------------------------------------------------------------------; # Bind pdf ROOT.Math.Beta with three variables as ROOT.RooAbsPdf function",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf105_funcbinding.py:152,variab,variables,152,tutorials/roofit/rf105_funcbinding.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf105_funcbinding.py,1,['variab'],['variables']
Modifiability,"# Booking the creation of RooDataSet / RooDataHist in RDataFrame; # ----------------------------------------------------------------; # Method 1:; # ---------; # We directly book the RooDataSetHelper action.; # We need to pass; # - the RDataFrame column types as template parameters; # - the constructor arguments for RooDataSet (they follow the same syntax as the usual RooDataSet constructors); # - the column names that RDataFrame should fill into the dataset; # NOTE: RDataFrame columns are matched to RooFit variables by position, *not by name*!; #; # The returned object is not yet a RooDataSet, but an RResultPtr that will be; # lazy-evaluated once you call GetValue() on it. We will only evaluate the; # RResultPtr once all other RDataFrame related actions are declared. This way; # we trigger the event loop computation only once, which will improve the; # runtime significantly.; #; # To learn more about lazy actions, see:; # https://root.cern/doc/master/classROOT_1_1RDataFrame.html#actions",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf408_RDataFrameToRooFit.py:513,variab,variables,513,tutorials/roofit/rf408_RDataFrameToRooFit.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf408_RDataFrameToRooFit.py,1,['variab'],['variables']
Modifiability,"# Build the regexp that matches an ""IR value"". This can be a local variable,; # argument, global, or metadata, anything that is ""named"". It is important that; # the PREFIX and SUFFIX below only contain a single group, if that changes; # other locations will need adjustment as well.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/UpdateTestChecks/common.py:67,variab,variable,67,interpreter/llvm-project/llvm/utils/UpdateTestChecks/common.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/UpdateTestChecks/common.py,1,['variab'],['variable']
Modifiability,"# Build the workspace and extract variables",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf617_simulation_based_inference_multidimensional.py:34,variab,variables,34,tutorials/roofit/rf617_simulation_based_inference_multidimensional.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf617_simulation_based_inference_multidimensional.py,1,['variab'],['variables']
Modifiability,"# Case 1 - 'Barlow Beeston'; # Construct parameterized histogram shapes for signal and background",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf709_BarlowBeeston.py:41,parameteriz,parameterized,41,tutorials/roofit/rf709_BarlowBeeston.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf709_BarlowBeeston.py,1,['parameteriz'],['parameterized']
Modifiability,"# Change global strategy for 1D sampling problems without conditional observable; # (1st kFALSE) and without discrete observable (2nd kFALSE) from ROOT.RooFoamGenerator,; # ( an interface to the ROOT.TFoam MC generator with adaptive subdivisioning strategy ) to ROOT.RooAcceptReject,; # a plain accept/reject sampling algorithm [ ROOT.RooFit default before; # ROOT 5.23/04 ]",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf902_numgenconfig.py:224,adapt,adaptive,224,tutorials/roofit/rf902_numgenconfig.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf902_numgenconfig.py,1,['adapt'],['adaptive']
Modifiability,# Check for a site config or a lit config.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/discovery.py:19,config,config,19,interpreter/llvm-project/llvm/utils/lit/lit/discovery.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/discovery.py,2,['config'],['config']
Modifiability,# Check for empty string as some variables such as LD_PRELOAD cannot be empty; # ('') for OS's such as OpenBSD.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/TestingConfig.py:33,variab,variables,33,interpreter/llvm-project/llvm/utils/lit/lit/TestingConfig.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/TestingConfig.py,1,['variab'],['variables']
Modifiability,"# Check for nested test suites, first in the execpath in case there is a; # site configuration and then in the source path.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/discovery.py:81,config,configuration,81,interpreter/llvm-project/llvm/utils/lit/lit/discovery.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/discovery.py,1,['config'],['configuration']
Modifiability,# Check if there is a local configuration file.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/discovery.py:28,config,configuration,28,interpreter/llvm-project/llvm/utils/lit/lit/discovery.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/discovery.py,1,['config'],['configuration']
Modifiability,"# Check the substitution's name.; #; # Do not extend this to permit '.' or any sequence that's special in a; # python pattern. We could escape that automatically for; # DEFINE/REDEFINE directives in test files. However, lit configuration; # file authors would still have to remember to escape them manually in; # substitution names but not in values. Moreover, the manually chosen; # and automatically chosen escape sequences would have to be consistent; # (e.g., '\.' vs. '[.]') in order for REDEFINE to successfully redefine; # a substitution previously defined by a lit configuration file. All; # this seems too error prone and confusing to be worthwhile. If you; # want your name to express structure, use ':' instead of '.'.; #; # Actually, '{' and '}' are special if they contain only digits possibly; # separated by a comma. Requiring a leading letter avoids that.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/TestRunner.py:46,extend,extend,46,interpreter/llvm-project/llvm/utils/lit/lit/TestRunner.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/TestRunner.py,3,"['config', 'extend']","['configuration', 'extend']"
Modifiability,# Class to represent any value (variable) that can be used.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/shuffle_select_fuzz_tester.py:32,variab,variable,32,interpreter/llvm-project/llvm/utils/shuffle_select_fuzz_tester.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/shuffle_select_fuzz_tester.py,1,['variab'],['variable']
Modifiability,"# Clear some environment variables that might affect Clang.; #; # This first set of vars are read by Clang, but shouldn't affect tests; # that aren't specifically looking for these features, or are required; # simply to run the tests at all.; #; # FIXME: Should we have a tool that enforces this?; # safe_env_vars = (; # 'TMPDIR', 'TEMP', 'TMP', 'USERPROFILE', 'PWD',; # 'MACOSX_DEPLOYMENT_TARGET', 'IPHONEOS_DEPLOYMENT_TARGET',; # 'VCINSTALLDIR', 'VC100COMNTOOLS', 'VC90COMNTOOLS',; # 'VC80COMNTOOLS')",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/llvm/config.py:25,variab,variables,25,interpreter/llvm-project/llvm/utils/lit/lit/llvm/config.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/llvm/config.py,1,['variab'],['variables']
Modifiability,# Command line overrides configuration for maxIndividualTestTime.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/main.py:25,config,configuration,25,interpreter/llvm-project/llvm/utils/lit/lit/main.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/main.py,1,['config'],['configuration']
Modifiability,# Configuration files to look for when discovering test suites.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/LitConfig.py:2,Config,Configuration,2,interpreter/llvm-project/llvm/utils/lit/lit/LitConfig.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/LitConfig.py,1,['Config'],['Configuration']
Modifiability,"# Configuration for usage from Jupyter notebooks",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/__init__.py:2,Config,Configuration,2,bindings/pyroot/pythonizations/python/ROOT/__init__.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/__init__.py,1,['Config'],['Configuration']
Modifiability,"# Configure ROOT facade module",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/__init__.py:2,Config,Configure,2,bindings/pyroot/pythonizations/python/ROOT/__init__.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/__init__.py,1,['Config'],['Configure']
Modifiability,"# Configure convolution to construct a 2-D cache in (x,mean); # rather than a 1-d cache in mean that needs to be recalculated; # for each value of x",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf211_paramconv.py:2,Config,Configure,2,tutorials/roofit/rf211_paramconv.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf211_paramconv.py,1,['Config'],['Configure']
Modifiability,"# Configure meta-path finder for ROOT namespaces, following the Python; # documentation and an example:; #; # * https://docs.python.org/3/library/importlib.html#module-importlib.abc; #; # * https://python.plainenglish.io/metapathfinders-or-how-to-change-python-import-behavior-a1cf3b5a13ec",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/__init__.py:2,Config,Configure,2,bindings/pyroot/pythonizations/python/ROOT/__init__.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/__init__.py,1,['Config'],['Configure']
Modifiability,"# Construct a chi^2 of the data and the model.; # When a p.d.f. is used in a chi^2 fit, probability density scaled; # by the number of events in the dataset to obtain the fit function; # If model is an extended p.d.f, expected number events is used; # instead of the observed number of events.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf602_chi2fit.py:202,extend,extended,202,tutorials/roofit/rf602_chi2fit.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf602_chi2fit.py,1,['extend'],['extended']
Modifiability,"# Construct an extended pdf, which measures the event count N **on the full range**.; # If the actual domain of x that is fitted is identical to FULL, this has no affect.; #; # If the fitted domain is a subset of `FULL`, though, the expected event count is divided by; # \f[; # \mathrm{frac} = \frac{; # \int_{\mathrm{Fit range}} \mathrm{model}(x) \; \mathrm{d}x }{; # \int_{\mathrm{Full range}} \mathrm{model}(x) \; \mathrm{d}x }.; # \f]; # `N` will therefore return the count extrapolated to the full range instead of the fit range.; #; # **Note**: When using a RooAddPdf for extending the likelihood, the same effect can be achieved with; # [RooAddPdf::fixCoefRange()](https://root.cern.ch/doc/master/classRooAddPdf.html#ab631caf4b59e4c4221f8967aecbf2a65),",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf204b_extendedLikelihood_rangedFit.py:15,extend,extended,15,tutorials/roofit/rf204b_extendedLikelihood_rangedFit.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf204b_extendedLikelihood_rangedFit.py,2,['extend'],"['extended', 'extending']"
Modifiability,"# Construct efficiency function e(x); # -------------------------------------------------------------------; # Declare variables x,mean, with associated name, title, value and allowed; # range",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf701_efficiencyfit.py:119,variab,variables,119,tutorials/roofit/rf701_efficiencyfit.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf701_efficiencyfit.py,1,['variab'],['variables']
Modifiability,"# Construct efficiency function e(x,y); # -----------------------------------------------------------------------; # Declare variables x,mean, with associated name, title, value and allowed; # range",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf702_efficiencyfit_2D.py:125,variab,variables,125,tutorials/roofit/rf702_efficiencyfit_2D.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf702_efficiencyfit_2D.py,1,['variab'],['variables']
Modifiability,"# Construct parameterized ranged ""R"" in z [ 0, 0.1*y^2 ]",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf313_paramranges.py:12,parameteriz,parameterized,12,tutorials/roofit/rf313_paramranges.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf313_paramranges.py,1,['parameteriz'],['parameterized']
Modifiability,"# Create 1D kernel estimation pdf; # ---------------------------------------------------------------; # Create adaptive kernel estimation pdf. In self configuration the input data; # is mirrored over the boundaries to minimize edge effects in distribution; # that do not fall to zero towards the edges",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf707_kernelestimation.py:111,adapt,adaptive,111,tutorials/roofit/rf707_kernelestimation.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf707_kernelestimation.py,2,"['adapt', 'config']","['adaptive', 'configuration']"
Modifiability,"# Create 2D adaptive kernel estimation pdf with mirroring and double; # bandwidth",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf707_kernelestimation.py:12,adapt,adaptive,12,tutorials/roofit/rf707_kernelestimation.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf707_kernelestimation.py,1,['adapt'],['adaptive']
Modifiability,"# Create 2D kernel estimation pdf; # ---------------------------------------------------------------; # Create 2D adaptive kernel estimation pdf with mirroring",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf707_kernelestimation.py:114,adapt,adaptive,114,tutorials/roofit/rf707_kernelestimation.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf707_kernelestimation.py,1,['adapt'],['adaptive']
Modifiability,# Create a FileCheck variable from regex.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/UpdateTestChecks/common.py:21,variab,variable,21,interpreter/llvm-project/llvm/utils/UpdateTestChecks/common.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/UpdateTestChecks/common.py,1,['variab'],['variable']
Modifiability,# Create a FileCheck variable name based on an IR name.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/UpdateTestChecks/common.py:21,variab,variable,21,interpreter/llvm-project/llvm/utils/UpdateTestChecks/common.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/UpdateTestChecks/common.py,1,['variab'],['variable']
Modifiability,"# Create a SparkContext with the configuration stored in `sparkconf`",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/distrdf001_spark_connection.py:33,config,configuration,33,tutorials/dataframe/distrdf001_spark_connection.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/distrdf001_spark_connection.py,1,['config'],['configuration']
Modifiability,"# Create a binning real -> cat function; # ----------------------------------------------------------------------; # A RooBinningCategory is a category function that maps bins of a (named) binning definition; # in a real-valued input observable observables to state names. The state names are automatically; # constructed from the variable name, binning name and the bin number. If no binning name; # is specified the default binning is mapped",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf405_realtocatfuncs.py:331,variab,variable,331,tutorials/roofit/rf405_realtocatfuncs.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf405_realtocatfuncs.py,1,['variab'],['variable']
Modifiability,"# Create canvas and configure frame with axis attributes",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/df105.py:20,config,configure,20,tutorials/rcanvas/df105.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/df105.py,1,['config'],['configure']
Modifiability,"# Create combined variable list for ROOT",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf617_simulation_based_inference_multidimensional.py:18,variab,variable,18,tutorials/roofit/rf617_simulation_based_inference_multidimensional.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf617_simulation_based_inference_multidimensional.py,1,['variab'],['variable']
Modifiability,"# Create component pdfs in x and y; # ----------------------------------------------------------------; # Create two pdfs gaussx(x,meanx,sigmax) gaussy(y,meany,sigmay) and its; # variables",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf304_uncorrprod.py:179,variab,variables,179,tutorials/roofit/rf304_uncorrprod.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf304_uncorrprod.py,1,['variab'],['variables']
Modifiability,# Create configuration defaults from list of checks,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/check_cfc/check_cfc.py:9,config,configuration,9,interpreter/llvm-project/clang/utils/check_cfc/check_cfc.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/check_cfc/check_cfc.py,1,['config'],['configuration']
Modifiability,"# Create dummy objects; # ---------------------------------------; # Create some variables",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf508_listsetmanip.py:81,variab,variables,81,tutorials/roofit/rf508_listsetmanip.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf508_listsetmanip.py,1,['variab'],['variables']
Modifiability,"# Create interpolating pdf; # -----------------------------------------------; # Create interpolation variable",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf705_linearmorph.py:102,variab,variable,102,tutorials/roofit/rf705_linearmorph.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf705_linearmorph.py,1,['variab'],['variable']
Modifiability,"# Create manager; # ---------------------------; # Configure manager to perform binned extended likelihood fits (Binned=True, Extended=True) on data generated; # with a Poisson fluctuation on Nobs (Extended=True)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf803_mcstudy_addons2.py:51,Config,Configure,51,tutorials/roofit/rf803_mcstudy_addons2.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf803_mcstudy_addons2.py,4,"['Config', 'Extend', 'extend']","['Configure', 'Extended', 'extended']"
Modifiability,"# Create manager; # ---------------------------; # Instantiate ROOT.RooMCStudy manager on model with x as observable and given choice of fit options; #; # The Silence() option kills all messages below the PROGRESS level, only a single message; # per sample executed, any error message that occur during fitting; #; # The Extended() option has two effects:; # 1) The extended ML term is included in the likelihood and; # 2) A poisson fluctuation is introduced on the number of generated events; #; # The FitOptions() given here are passed to the fitting stage of each toy experiment.; # If Save() is specified, fit result of each experiment is saved by the manager; #; # A Binned() option is added in self example to bin the data between generation and fitting; # to speed up the study at the expemse of some precision",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf801_mcstudy.py:321,Extend,Extended,321,tutorials/roofit/rf801_mcstudy.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf801_mcstudy.py,2,"['Extend', 'extend']","['Extended', 'extended']"
Modifiability,"# Create study manager with separate generation and fit model. ROOT.This configuration; # is set up to generate bad fits as the fit and generator model have different means; # and the mean parameter is not floating in the fit",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf802_mcstudy_addons.py:73,config,configuration,73,tutorials/roofit/rf802_mcstudy_addons.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf802_mcstudy_addons.py,1,['config'],['configuration']
Modifiability,# Create the global config object.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/LitTestCase.py:20,config,config,20,interpreter/llvm-project/llvm/utils/lit/lit/LitTestCase.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/LitTestCase.py,1,['config'],['config']
Modifiability,# Create the table for Variable bugs.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/llvm-original-di-preservation.py:23,Variab,Variable,23,interpreter/llvm-project/llvm/utils/llvm-original-di-preservation.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/llvm-original-di-preservation.py,1,['Variab'],['Variable']
Modifiability,"# Create variables to store std::vector elements",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/stl_set.py:9,variab,variables,9,bindings/pyroot/pythonizations/test/stl_set.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/stl_set.py,2,['variab'],['variables']
Modifiability,"# Creating and adding basic pdfs; # ----------------------------------------------------------------; # Remake example pdf of tutorial rs502_wspacewrite.C:; #; # Basic pdf construction: ClassName.ObjectName(constructor arguments); # Variable construction : VarName[x,xlo,xhi], VarName[xlo,xhi], VarName[x]; # P.d.f. addition : SUM.ObjectName(coef1*pdf1,...coefM*pdfM,pdfN); #",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf511_wsfactory_basic.py:233,Variab,Variable,233,tutorials/roofit/rf511_wsfactory_basic.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf511_wsfactory_basic.py,1,['Variab'],['Variable']
Modifiability,# Custom analyzer invocation specified by project.; # Communicate required information using environment variables; # instead.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/analyzer/SATestBuild.py:105,variab,variables,105,interpreter/llvm-project/clang/utils/analyzer/SATestBuild.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/analyzer/SATestBuild.py,1,['variab'],['variables']
Modifiability,# DIVarBugs with same pass & variable name.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/llvm-original-di-preservation.py:29,variab,variable,29,interpreter/llvm-project/llvm/utils/llvm-original-di-preservation.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/llvm-original-di-preservation.py,1,['variab'],['variable']
Modifiability,"# Define a gaussean distribution with a variable mean",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/distrdf003_live_visualization.py:40,variab,variable,40,tutorials/dataframe/distrdf003_live_visualization.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/distrdf003_live_visualization.py,1,['variab'],['variable']
Modifiability,"# Defined non-rectangular region R in (x, y, z); # -------------------------------------------------------------------------------------; #; # R = Z[0 - 0.1*Y^2] * Y[0.1*X - 0.9*X] * X[0 - 10]; #; # Construct range parameterized in ""R"" in y [ 0.1*x, 0.9*x ]",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf313_paramranges.py:215,parameteriz,parameterized,215,tutorials/roofit/rf313_paramranges.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf313_paramranges.py,1,['parameteriz'],['parameterized']
Modifiability,# Determine the builtin includes directory so that we can update tests that; # depend on the builtin headers. See get_clang_builtin_include_dir() and; # use_clang() in llvm/utils/lit/lit/llvm/config.py.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/update_cc_test_checks.py:192,config,config,192,interpreter/llvm-project/llvm/utils/update_cc_test_checks.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/update_cc_test_checks.py,1,['config'],['config']
Modifiability,# Do not make this a global variable. Values needed to be propagated through; # to individual classes and functions to be portable with multiprocessing across; # Windows and non-Windows.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/opt-viewer/opt-viewer.py:28,variab,variable,28,interpreter/llvm-project/llvm/tools/opt-viewer/opt-viewer.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/opt-viewer/opt-viewer.py,2,"['portab', 'variab']","['portable', 'variable']"
Modifiability,"# Documents to append as an appendix to all manuals.; # texinfo_appendices = []; # If false, no module index is generated.; # texinfo_domain_indices = True; # How to display URL addresses: 'footnote', 'no', or 'inline'.; # texinfo_show_urls = 'footnote'; # Example configuration for intersphinx: refer to the Python standard library.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/docs/analyzer/conf.py:265,config,configuration,265,interpreter/llvm-project/clang/docs/analyzer/conf.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/docs/analyzer/conf.py,1,['config'],['configuration']
Modifiability,"# Encode definition of parameters in workspace; # ---------------------------------------------------------------------------------------; # Define named sets ""parameters"" and ""observables"", list which variables should be considered; # parameters and observables by the users convention; #; # Variables appearing in sets _must_ live in the workspace already, the autoImport flag; # of defineSet must be set to import them on the fly. Named sets contain only references; # to the original variables, the value of observables in named sets already; # reflect their 'current' value",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf510_wsnamedsets.py:202,variab,variables,202,tutorials/roofit/rf510_wsnamedsets.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf510_wsnamedsets.py,3,"['Variab', 'variab']","['Variables', 'variables']"
Modifiability,"# Encode reference value for parameters in workspace; # ---------------------------------------------------------------------------------------------------; # Define a parameter 'snapshot' in the p.d.f.; # Unlike a named set, parameter snapshot stores an independent set of values for; # a given set of variables in the workspace. The values can be stored and reloaded; # into the workspace variable objects using the loadSnapshot() and saveSnapshot(); # methods. A snapshot saves the value of each variable, errors that are stored; # with it as well as the 'Constant' flag that is used in fits to determine if a; # parameter is kept fixed or not.; # Do a dummy fit to a (supposedly) reference dataset here and store the results; # of that fit into a snapshot",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf510_wsnamedsets.py:303,variab,variables,303,tutorials/roofit/rf510_wsnamedsets.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf510_wsnamedsets.py,3,['variab'],"['variable', 'variables']"
Modifiability,"# Environment variable CLING_OPTS used to pass arguments to cling",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/Jupyter/kernel/clingkernel.py:14,variab,variable,14,interpreter/cling/tools/Jupyter/kernel/clingkernel.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/Jupyter/kernel/clingkernel.py,1,['variab'],['variable']
Modifiability,"# Example of RooSimWSTool interface; # ------------------------------------------------------------------; # Introduce a flavour tagging category tagCat as observable with 4 states corresponding; # to 4 flavour tagging techniques with different performance that require different; # parameterizations of the fit model; #; # ROOT.RooSimWSTool operation:; # - Make 4 clones of model (for each tagCat) state, will gain an individual; # copy of parameters w, and biasC. The other parameters remain common; # - Make a simultaneous pdf of the 4 clones assigning each to the appropriate; # state of the tagCat index category; # ROOT.RooSimWSTool is interfaced as meta-type SIMCLONE in the factory. The $SplitParam(); # argument maps to the SplitParam() named argument in the; # ROOT.RooSimWSTool constructor",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf513_wsfactory_tools.py:283,parameteriz,parameterizations,283,tutorials/roofit/rf513_wsfactory_tools.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf513_wsfactory_tools.py,1,['parameteriz'],['parameterizations']
Modifiability,"# Example of how to change the parameters of a numeric integrator; # (Each config section is a ROOT.RooArgSet with ROOT.RooRealVars holding real-valued parameters; # and ROOT.RooCategories holding parameters with a finite set of options)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf901_numintconfig.py:75,config,config,75,tutorials/roofit/rf901_numintconfig.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf901_numintconfig.py,2,['config'],['config']
Modifiability,# Execute the config script to initialize the object.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/TestingConfig.py:14,config,config,14,interpreter/llvm-project/llvm/utils/lit/lit/TestingConfig.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/TestingConfig.py,1,['config'],['config']
Modifiability,"# Extend the pdfs; # -----------------------------; # Define signal range in which events counts are to be defined",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf204a_extendedLikelihood.py:2,Extend,Extend,2,tutorials/roofit/rf204a_extendedLikelihood.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf204a_extendedLikelihood.py,1,['Extend'],['Extend']
Modifiability,"# Extended PDF addition is done with SUM (yield1*pdf1,yield2*pdf2)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf512_wsfactory_oper.py:2,Extend,Extended,2,tutorials/roofit/rf512_wsfactory_oper.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf512_wsfactory_oper.py,1,['Extend'],['Extended']
Modifiability,"# Extended slices",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_stltypes.py:2,Extend,Extended,2,bindings/pyroot/cppyy/cppyy/test/test_stltypes.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_stltypes.py,1,['Extend'],['Extended']
Modifiability,# FIXME: Get config parameters,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/scan-view/share/Reporter.py:13,config,config,13,interpreter/llvm-project/clang/tools/scan-view/share/Reporter.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/scan-view/share/Reporter.py,1,['config'],['config']
Modifiability,# FIXME: Record some information on the lit configuration used?; # FIXME: Record information from the individual test suites?; # Encode the tests.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/reports.py:44,config,configuration,44,interpreter/llvm-project/llvm/utils/lit/lit/reports.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/reports.py,1,['config'],['configuration']
Modifiability,# FIXME: This should really only be suite in test suite config; # files. Should we distinguish them?,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/TestingConfig.py:56,config,config,56,interpreter/llvm-project/llvm/utils/lit/lit/TestingConfig.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/TestingConfig.py,2,['config'],['config']
Modifiability,"# First we create the un-correlated, random variables, according; # to one of three distributions",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/math/principal.py:44,variab,variables,44,tutorials/math/principal.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/math/principal.py,1,['variab'],['variables']
Modifiability,"# For IR output, change all defs to FileCheck variables, so we're immune; # to variable naming fashions.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/UpdateTestChecks/common.py:46,variab,variables,46,interpreter/llvm-project/llvm/utils/UpdateTestChecks/common.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/UpdateTestChecks/common.py,2,['variab'],"['variable', 'variables']"
Modifiability,"# General view configuration",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/settings.py:15,config,configuration,15,interpreter/cling/tools/packaging/settings.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/settings.py,1,['config'],['configuration']
Modifiability,"# Get a mask that filters out all entries that are outside the variable definition range",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_roodataset.py:63,variab,variable,63,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_roodataset.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_roodataset.py,1,['variab'],['variable']
Modifiability,# Get the parent config.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/discovery.py:17,config,config,17,interpreter/llvm-project/llvm/utils/lit/lit/discovery.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/discovery.py,1,['config'],['config']
Modifiability,"# Handle GTest parameterized and typed tests, whose name includes; # some '/'s.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/formats/googletest.py:15,parameteriz,parameterized,15,interpreter/llvm-project/llvm/utils/lit/lit/formats/googletest.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/formats/googletest.py,1,['parameteriz'],['parameterized']
Modifiability,# Handle libc++ config header,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/release/bump-version.py:16,config,config,16,interpreter/llvm-project/llvm/utils/release/bump-version.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/release/bump-version.py,1,['config'],['config']
Modifiability,"# Here we make plots of the discriminating variable (invMass) after the fit; # and of the control variable (isolation) after unfolding with sPlot.; # make our canvas",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/rs301_splot.py:43,variab,variable,43,tutorials/roostats/rs301_splot.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/rs301_splot.py,2,['variab'],['variable']
Modifiability,"# Icon view configuration",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/settings.py:12,config,configuration,12,interpreter/cling/tools/packaging/settings.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/settings.py,1,['config'],['configuration']
Modifiability,"# If a quote character is present, lex_arg_quoted will remove the quotes; # and append the argument directly. This causes a problem when the; # quoted portion contains a glob character, as the character will no; # longer be treated literally. If glob characters occur *only* inside; # of quotes, then we can handle this by not globbing at all, and if; # glob characters occur *only* outside of quotes, we can still glob just; # fine. But if a glob character occurs both inside and outside of; # quotes this presents a problem. In practice this is such an obscure; # edge case that it doesn't seem worth the added complexity to support.; # By adding an assertion, it means some bot somewhere will catch this; # and flag the user of a non-portable test (which could almost certainly; # be re-written to work correctly without triggering this).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/ShUtil.py:737,portab,portable,737,interpreter/llvm-project/llvm/utils/lit/lit/ShUtil.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/ShUtil.py,1,['portab'],['portable']
Modifiability,"# If extensions (or modules to document with autodoc) are in another directory,; # add these directories to sys.path here. If the directory is relative to the; # documentation root, use os.path.abspath to make it absolute, like shown here.; # sys.path.insert(0, os.path.abspath('.')); # -- General configuration -----------------------------------------------------; # If your documentation needs a minimal Sphinx version, state it here.; # needs_sphinx = '1.0'; # Add any Sphinx extension module names here, as strings. They can be extensions; # coming with Sphinx (named 'sphinx.ext.*') or your custom ones.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/docs/conf.py:298,config,configuration,298,interpreter/llvm-project/clang/docs/conf.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/docs/conf.py,2,['config'],['configuration']
Modifiability,"# If extensions (or modules to document with autodoc) are in another directory,; # add these directories to sys.path here. If the directory is relative to the; # documentation root, use os.path.abspath to make it absolute, like shown here.; #sys.path.insert(0, os.path.abspath('.')); # -- General configuration -----------------------------------------------------; # If your documentation needs a minimal Sphinx version, state it here.; #needs_sphinx = '1.0'; # Add any Sphinx extension module names here, as strings. They can be extensions; # coming with Sphinx (named 'sphinx.ext.*') or your custom ones.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/docs/conf.py:297,config,configuration,297,interpreter/cling/docs/conf.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/docs/conf.py,1,['config'],['configuration']
Modifiability,"# If extensions (or modules to document with autodoc) are in another directory,; # add these directories to sys.path here. If the directory is relative to the; # documentation root, use os.path.abspath to make it absolute, like shown here.; #sys.path.insert(0, os.path.abspath('.')); # -- General configuration ------------------------------------------------; # If your documentation needs a minimal Sphinx version, state it here.; #needs_sphinx = '1.0'; # Add any Sphinx extension module names here, as strings. They can be; # extensions coming with Sphinx (named 'sphinx.ext.*') or your custom; # ones.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/doc/source/conf.py:297,config,configuration,297,bindings/pyroot/cppyy/cppyy/doc/source/conf.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/doc/source/conf.py,1,['config'],['configuration']
Modifiability,"# If not, just reuse the parent config.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/discovery.py:32,config,config,32,interpreter/llvm-project/llvm/utils/lit/lit/discovery.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/discovery.py,1,['config'],['config']
Modifiability,"# If true, show URL addresses after external links.; # man_show_urls = False; # FIXME: Define intersphinx configuration.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/docs/conf.py:106,config,configuration,106,interpreter/llvm-project/llvm/docs/conf.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/docs/conf.py,1,['config'],['configuration']
Modifiability,"# If we didn't find a config file, keep looking.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/discovery.py:22,config,config,22,interpreter/llvm-project/llvm/utils/lit/lit/discovery.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/discovery.py,1,['config'],['config']
Modifiability,"# If we now do a simultaneous fit to the extended model, instead of the; # original model, the LEFT and RIGHT range will each correct their local `N`; # such that it refers to the `FULL` range.; #; # This joint fit of the extmodel will include (w.r.t. the plain model fit) a product of extended terms; # \f[; # L_\mathrm{ext} = L; # \cdot \mathrm{Poisson} \left( N_\mathrm{obs}^\mathrm{LEFT} | N_\mathrm{exp} / \mathrm{frac LEFT} \right); # \cdot \mathrm{Poisson} \left( N_\mathrm{obs}^\mathrm{RIGHT} | N_\mathrm{exp} / \mathrm{frac RIGHT} \right); # \f]",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf204b_extendedLikelihood_rangedFit.py:41,extend,extended,41,tutorials/roofit/rf204b_extendedLikelihood_rangedFit.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf204b_extendedLikelihood_rangedFit.py,2,['extend'],['extended']
Modifiability,"# Initialize configuration",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_facade.py:13,config,configuration,13,bindings/pyroot/pythonizations/python/ROOT/_facade.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_facade.py,1,['config'],['configuration']
Modifiability,# Initialize the variable names to be rotated,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/examples/Kaleidoscope/MCJIT/cached/genk-timing.py:17,variab,variable,17,interpreter/llvm-project/llvm/examples/Kaleidoscope/MCJIT/cached/genk-timing.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/examples/Kaleidoscope/MCJIT/cached/genk-timing.py,3,['variab'],['variable']
Modifiability,"# Initializes variables",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_rooworkspace.py:14,variab,variables,14,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_rooworkspace.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_rooworkspace.py,1,['variab'],['variables']
Modifiability,"# Initilase the TPrincipal object. Use the empty string for the; # final argument, if you don't wan't the covariance; # matrix. Normalising the covariance matrix is a good idea if your; # variables have different orders of magnitude.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/math/principal.py:188,variab,variables,188,tutorials/math/principal.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/math/principal.py,1,['variab'],['variables']
Modifiability,"# Inputs to setup config; # -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf711_lagrangianmorph.py:18,config,config,18,tutorials/roofit/rf711_lagrangianmorph.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf711_lagrangianmorph.py,2,['config'],['config']
Modifiability,"# JupyROOT sample configuration file for nbconvert",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/etc/notebook/html/sample_config.py:18,config,configuration,18,etc/notebook/html/sample_config.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/etc/notebook/html/sample_config.py,1,['config'],['configuration']
Modifiability,"# Kick tau a bit, and run an unbinned fit where the blinded data are missing.; # ----------------------------------------------------------------------------------------------------------; # The fit should be done only in the unblinded regions, otherwise it would try; # to make the model adapt to the empty bins in the blinded region.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf212_plottingInRanges_blinding.py:289,adapt,adapt,289,tutorials/roofit/rf212_plottingInRanges_blinding.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf212_plottingInRanges_blinding.py,1,['adapt'],['adapt']
Modifiability,# LIT is special: environment variables override command line arguments.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/cl_arguments.py:30,variab,variables,30,interpreter/llvm-project/llvm/utils/lit/lit/cl_arguments.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/cl_arguments.py,1,['variab'],['variables']
Modifiability,"# List view configuration",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/settings.py:12,config,configuration,12,interpreter/cling/tools/packaging/settings.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/settings.py,1,['config'],['configuration']
Modifiability,# Lit configuration,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/release/bump-version.py:6,config,configuration,6,interpreter/llvm-project/llvm/utils/release/bump-version.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/release/bump-version.py,1,['config'],['configuration']
Modifiability,"# Load CMake options from .github/workflows/root-ci-config/buildconfig/[platform].txt",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/.github/workflows/root-ci-config/build_root.py:52,config,config,52,.github/workflows/root-ci-config/build_root.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/.github/workflows/root-ci-config/build_root.py,1,['config'],['config']
Modifiability,"# Load dataset, filter the required events and define the training variables",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/tmva100_DataPreparation.py:67,variab,variables,67,tutorials/tmva/tmva100_DataPreparation.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/tmva100_DataPreparation.py,1,['variab'],['variables']
Modifiability,# Load the config script data.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/TestingConfig.py:11,config,config,11,interpreter/llvm-project/llvm/utils/lit/lit/TestingConfig.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/TestingConfig.py,1,['config'],['config']
Modifiability,"# Make parameterized range in t : [tmin,5]",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf314_paramfitrange.py:7,parameteriz,parameterized,7,tutorials/roofit/rf314_paramfitrange.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf314_paramfitrange.py,1,['parameteriz'],['parameterized']
Modifiability,"# Make some plots showing the discriminating variable and; # the control variable after unfolding.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/rs301_splot.py:45,variab,variable,45,tutorials/roostats/rs301_splot.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/rs301_splot.py,2,['variab'],['variable']
Modifiability,"# Make sure we only consider errors, warnings, and extensions.; # FIXME: Make this configurable?",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/clangdiag.py:83,config,configurable,83,interpreter/llvm-project/clang/utils/clangdiag.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/clangdiag.py,2,['config'],['configurable']
Modifiability,"# Make the m data-points; # Make a variable to hold our data; # Allocate memory for the data point",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/math/principal.py:35,variab,variable,35,tutorials/math/principal.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/math/principal.py,1,['variab'],['variable']
Modifiability,# Many tools behave strangely if these environment variables aren't; # set.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/llvm/config.py:51,variab,variables,51,interpreter/llvm-project/llvm/utils/lit/lit/llvm/config.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/llvm/config.py,1,['variab'],['variables']
Modifiability,"# Method 1 - Construct extended composite model; # -------------------------------------------------------------------; # Sum the composite signal and background into an extended pdf; # nsig*sig+nbkg*bkg",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf202_extendedmlfit.py:23,extend,extended,23,tutorials/roofit/rf202_extendedmlfit.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf202_extendedmlfit.py,2,['extend'],['extended']
Modifiability,"# Method 2 - Construct extended components first; # ---------------------------------------------------------------------; # Associated nsig/nbkg as expected number of events with sig/bkg",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf202_extendedmlfit.py:23,extend,extended,23,tutorials/roofit/rf202_extendedmlfit.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf202_extendedmlfit.py,1,['extend'],['extended']
Modifiability,"# NB: Note that bin density for each bin is adjusted to that of default frame binning as shown; # in Y axis label (100 bins -. Events/0.4*Xaxis-dim) so that all bins; # represent a consistent density distribution; # Show mixstate asymmetry with custom binning; # ------------------------------------------------------------------------------------; # Make plot of dt distribution of data asymmetry in 'mixState' with; # variable binning; # Create binning object with range (-10,10)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf108_plotbinning.py:420,variab,variable,420,tutorials/roofit/rf108_plotbinning.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf108_plotbinning.py,1,['variab'],['variable']
Modifiability,# Native compilation: host arch == default triple arch; # Both of these values should probably be in every site config (e.g. as; # part of the standard header. But currently they aren't),MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/llvm/config.py:112,config,config,112,interpreter/llvm-project/llvm/utils/lit/lit/llvm/config.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/llvm/config.py,1,['config'],['config']
Modifiability,"# Note: in the C++ tutorial, the parameter value sync is done in one line with:; # ```C++; # f_sum->SetParameters(fnorm_exp_cb->GetParameters().data());; # ```; # However, TF1NormSum::GetParameters() returns an std::vector by value, which; # doesn't survive long enough in Python. That's why we have to explicitly; # assign it to a variable first and can't use a temporary.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/fit/fitNormSum.py:332,variab,variable,332,tutorials/fit/fitNormSum.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/fit/fitNormSum.py,1,['variab'],['variable']
Modifiability,"# Now use the sWeights to show isolation distribution for Z and QCD.; # The SPlot class can make this easier, but here we demonstrate in more; # detail how the sWeights are used. The SPlot class should make this; # very easy and needs some more development.; # Plot isolation for Z component.; # Do this by plotting all events weighted by the sWeight for the Z component.; # The SPlot class adds a new variable that has the name of the corresponding; # yield + ""_sw"".",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/rs301_splot.py:402,variab,variable,402,tutorials/roostats/rs301_splot.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/rs301_splot.py,1,['variab'],['variable']
Modifiability,"# Now we use the SPlot class to add SWeights for the isolation variable to; # our data set based on fitting the yields to the invariant mass variable.; # Any keyword arguments will be forwarded to the underlying call to RooAbsPdf::fitTo().",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/rs301_splot.py:63,variab,variable,63,tutorials/roostats/rs301_splot.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/rs301_splot.py,2,['variab'],['variable']
Modifiability,# Only if we are processing all the variables output the total; # availability.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/llvm-locstats/llvm-locstats.py:36,variab,variables,36,interpreter/llvm-project/llvm/utils/llvm-locstats/llvm-locstats.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/llvm-locstats/llvm-locstats.py,1,['variab'],['variables']
Modifiability,"# Operations on the dataframe; # We now review some *actions* which can be performed on the data frame.; # Actions can be divided into instant actions (e. g. Foreach()) and lazy; # actions (e. g. Count()), depending on whether they trigger the event ; # loop immediately or only when one of the results is accessed for the ; # first time. Actions that return ""something"" either return their result ; # wrapped in a RResultPtr or in a RDataFrame.; # But first of all, let us we define now our cut-flow with two strings.; # Filters can be expressed as strings. The content must be C++ code. The; # name of the variables must be the name of the branches. The code is; # just-in-time compiled.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df001_introduction.py:608,variab,variables,608,tutorials/dataframe/df001_introduction.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df001_introduction.py,1,['variab'],['variables']
Modifiability,"# Otherwise we have a directory to search for tests, start by getting the; # local configuration.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/discovery.py:83,config,configuration,83,interpreter/llvm-project/llvm/utils/lit/lit/discovery.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/discovery.py,1,['config'],['configuration']
Modifiability,"# Otherwise, copy the current config and load the local configuration; # file into it.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/discovery.py:30,config,config,30,interpreter/llvm-project/llvm/utils/lit/lit/discovery.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/discovery.py,2,['config'],"['config', 'configuration']"
Modifiability,"# Otherwise, we have a symbol name which isn't present in the; # binary. We assume it is truncated, and try to extend it.; # Get all the symbols with this prefix.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/perf-training/perf-helper.py:111,extend,extend,111,interpreter/llvm-project/clang/utils/perf-training/perf-helper.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/perf-training/perf-helper.py,1,['extend'],['extend']
Modifiability,"# PART 2: Extending with RooAddPdf; # --------------------------------; #; # Now we repeat the above exercise, but instead of explicitly adding an extended term to a single shape pdf (RooExponential),; # we assume that we already have an extended likelihood model in the form of a RooAddPdf constructed in the form `Nsig * sigPdf + Nbkg * bkgPdf`.; #; # We add a Gaussian to the previously defined exponential background.; # The signal shape parameters are chosen constant, since the signal region is entirely in the blinded region, i.e., the fit has no sensitivity.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf204b_extendedLikelihood_rangedFit.py:10,Extend,Extending,10,tutorials/roofit/rf204b_extendedLikelihood_rangedFit.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf204b_extendedLikelihood_rangedFit.py,3,"['Extend', 'extend']","['Extending', 'extended']"
Modifiability,"# Parameters:; # - self: collection; # - c: collection to extend self with",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tcollection.py:58,extend,extend,58,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tcollection.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tcollection.py,1,['extend'],['extend']
Modifiability,"# Parameters:; # klass: class to be pythonized; # TChain needs to be explicitly pythonized because it redefines; # SetBranchAddress in C++. As a consequence, TChain does not; # inherit TTree's pythonization for SetBranchAddress, which; # needs to be injected to TChain too. This is not the case for; # other classes like TNtuple, which will inherit all the; # pythonizations added here for TTree.; # SetBranchAddress",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_ttree.py:177,inherit,inherit,177,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_ttree.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_ttree.py,2,['inherit'],['inherit']
Modifiability,# Parse the clang JSON and add all children of type FunctionDecl.; # TODO: Should we add checks for global variables being emitted?,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/update_cc_test_checks.py:107,variab,variables,107,interpreter/llvm-project/llvm/utils/update_cc_test_checks.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/update_cc_test_checks.py,1,['variab'],['variables']
Modifiability,"# Part 3b : Choose Test Statistic; # --------------------------------------------------------------; # To make an equivalent calculation we need to use x as the test; # statistic. This is not a built-in test statistic in RooStats; # so we define it above. The new class inherits from the; # RooStats.TestStatistic interface, and simply returns the value; # of x in the dataset.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridStandardForm.py:270,inherit,inherits,270,tutorials/roostats/HybridStandardForm.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridStandardForm.py,1,['inherit'],['inherits']
Modifiability,"# Part 3b : Choose Test Statistic; # ----------------------------------; # To make an equivalent calculation we need to use x as the test; # statistic. This is not a built-in test statistic in RooStats; # so we define it above. The new class inherits from the; # TestStatistic interface, and simply returns the value; # of x in the dataset.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridInstructional.py:242,inherit,inherits,242,tutorials/roostats/HybridInstructional.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridInstructional.py,1,['inherit'],['inherits']
Modifiability,"# Perform another fit. In self configuration only the number of errors per; # likelihood evaluation is shown, it is greater than zero. The; # EvalErrorWall(kFALSE) arguments disables the default error handling strategy; # and will cause the actual (problematic) value of the likelihood to be passed; # to MINUIT.; #; # NB: Use of self option is NOT recommended as default strategt as broken -log(L) values; # can often be lower than 'good' ones because offending events are removed.; # ROOT.This may effectively create a False minimum in problem areas. ROOT.This is clearly; # illustrated in the second plot",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf606_nllerrorhandling.py:31,config,configuration,31,tutorials/roofit/rf606_nllerrorhandling.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf606_nllerrorhandling.py,1,['config'],['configuration']
Modifiability,"# Plot isolation for QCD component.; # Eg. plot all events weighted by the sWeight for the QCD component.; # The SPlot class adds a new variable that has the name of the corresponding; # yield + ""_sw"".",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/rs301_splot.py:136,variab,variable,136,tutorials/roostats/rs301_splot.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/rs301_splot.py,1,['variab'],['variable']
Modifiability,"# Plot likelihood in m0 in range that includes problematic values; # In self configuration no messages are printed for likelihood evaluation errors,; # but if an likelihood value evaluates with error, corresponding value; # on the curve will be set to the value given in EvalErrorValue().",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf606_nllerrorhandling.py:77,config,configuration,77,tutorials/roofit/rf606_nllerrorhandling.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf606_nllerrorhandling.py,1,['config'],['configuration']
Modifiability,"# Prepare workspace with variables and a PDF",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/roofit/rooworkspace.py:25,variab,variables,25,bindings/pyroot/pythonizations/test/roofit/rooworkspace.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/roofit/rooworkspace.py,1,['variab'],['variables']
Modifiability,"# Prepend variable name to suggestions. Do not prepend if the; # suggestion already contains the variable name, this can happen if; # e.g. there is only one valid completion",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/jupyroot/python/JupyROOT/helpers/cppcompleter.py:10,variab,variable,10,bindings/jupyroot/python/JupyROOT/helpers/cppcompleter.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/jupyroot/python/JupyROOT/helpers/cppcompleter.py,2,['variab'],['variable']
Modifiability,"# Print CMake cached config",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/.github/workflows/root-ci-config/build_root.py:21,config,config,21,.github/workflows/root-ci-config/build_root.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/.github/workflows/root-ci-config/build_root.py,1,['config'],['config']
Modifiability,"# Print configuration of message service; # ------------------------------------------; # Print streams configuration",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf506_msgservice.py:8,config,configuration,8,tutorials/roofit/rf506_msgservice.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf506_msgservice.py,2,['config'],['configuration']
Modifiability,"# Print streams configuration in verbose, also shows inactive streams",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf506_msgservice.py:16,config,configuration,16,tutorials/roofit/rf506_msgservice.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf506_msgservice.py,1,['config'],['configuration']
Modifiability,"# Probability density function of the addition of two variables is the; # convolution of two density functions.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/fit/fitConvolution.py:54,variab,variables,54,tutorials/fit/fitConvolution.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/fit/fitConvolution.py,1,['variab'],['variables']
Modifiability,"# Read data from input stream. The variables of the dataset need to be supplied; # to the RooDataSet::read() function.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf102_dataimport.py:35,variab,variables,35,tutorials/roofit/rf102_dataimport.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf102_dataimport.py,1,['variab'],['variables']
Modifiability,"# Read parameters from section 'Section3' of file. Mark all; # variables that were processed with the ""READ"" attribute",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf505_asciicfg.py:63,variab,variables,63,tutorials/roofit/rf505_asciicfg.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf505_asciicfg.py,1,['variab'],['variables']
Modifiability,# Read the JSON for both local variables and formal parameters.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/llvm-locstats/llvm-locstats.py:31,variab,variables,31,interpreter/llvm-project/llvm/utils/llvm-locstats/llvm-locstats.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/llvm-locstats/llvm-locstats.py,1,['variab'],['variables']
Modifiability,# Read the JSON only for local variables.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/llvm-locstats/llvm-locstats.py:31,variab,variables,31,interpreter/llvm-project/llvm/utils/llvm-locstats/llvm-locstats.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/llvm-locstats/llvm-locstats.py,1,['variab'],['variables']
Modifiability,# Remembe new global variables we have not seen before,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/UpdateTestChecks/common.py:21,variab,variables,21,interpreter/llvm-project/llvm/utils/UpdateTestChecks/common.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/UpdateTestChecks/common.py,1,['variab'],['variables']
Modifiability,# Remember new global variables we have not seen before,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/UpdateTestChecks/common.py:22,variab,variables,22,interpreter/llvm-project/llvm/utils/UpdateTestChecks/common.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/UpdateTestChecks/common.py,3,['variab'],['variables']
Modifiability,# Replace IR value defs and uses with FileCheck variables.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/UpdateTestChecks/common.py:48,variab,variables,48,interpreter/llvm-project/llvm/utils/UpdateTestChecks/common.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/UpdateTestChecks/common.py,1,['variab'],['variables']
Modifiability,# Replace variable with an incrementing counter,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/UpdateTestChecks/common.py:10,variab,variable,10,interpreter/llvm-project/llvm/utils/UpdateTestChecks/common.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/UpdateTestChecks/common.py,1,['variab'],['variable']
Modifiability,"# Reset message service to default stream configuration",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf506_msgservice.py:42,config,configuration,42,tutorials/roofit/rf506_msgservice.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf506_msgservice.py,3,['config'],['configuration']
Modifiability,"# Returns a list with a Bool for each dimension of the histogram that; # flags whether the variable in this dimension is a RooAbsCategory.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_roodatahist.py:91,variab,variable,91,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_roodatahist.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_roodatahist.py,1,['variab'],['variable']
Modifiability,# Rotate the variables,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/examples/Kaleidoscope/MCJIT/cached/genk-timing.py:13,variab,variables,13,interpreter/llvm-project/llvm/examples/Kaleidoscope/MCJIT/cached/genk-timing.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/examples/Kaleidoscope/MCJIT/cached/genk-timing.py,3,['variab'],['variables']
Modifiability,"# Run against a build command. there are cases, when analyzer run; # is not required. But we need to set up everything for the; # wrappers, because 'configure' needs to capture the CC/CXX values; # for the Makefile.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/analyze.py:149,config,configure,149,interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/analyze.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/analyze.py,1,['config'],['configure']
Modifiability,"# Run checks, if they are enabled in config and if they are appropriate for; # this command line.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/check_cfc/check_cfc.py:37,config,config,37,interpreter/llvm-project/clang/utils/check_cfc/check_cfc.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/check_cfc/check_cfc.py,1,['config'],['config']
Modifiability,"# Run manager, make plots; # ---------------------------------------------; # Run 1000 experiments. ROOT.This configuration will generate a fair number; # of (harmless) MINUIT warnings due to the instability of the Chebychev polynomial fit; # at low statistics.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf803_mcstudy_addons2.py:110,config,configuration,110,tutorials/roofit/rf803_mcstudy_addons2.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf803_mcstudy_addons2.py,1,['config'],['configuration']
Modifiability,"# Sample, fit and plot extended model; # ---------------------------------------------------------------------; # Generate a data sample of expected number events in x from model; # = model.expectedEvents() = nsig+nbkg",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf202_extendedmlfit.py:23,extend,extended,23,tutorials/roofit/rf202_extendedmlfit.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf202_extendedmlfit.py,1,['extend'],['extended']
Modifiability,"# Set Config; # -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf711_lagrangianmorph.py:6,Config,Config,6,tutorials/roofit/rf711_lagrangianmorph.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf711_lagrangianmorph.py,2,['Config'],['Config']
Modifiability,"# Set bins for each x variable",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf617_simulation_based_inference_multidimensional.py:22,variab,variable,22,tutorials/roofit/rf617_simulation_based_inference_multidimensional.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf617_simulation_based_inference_multidimensional.py,1,['variab'],['variable']
Modifiability,"# Set individual event weights (the variables must exist in the original TTree); # for signal : factory->SetSignalWeightExpression (""weight1*weight2"");; # for background: factory->SetBackgroundWeightExpression(""weight1*weight2"");; # loader->SetBackgroundWeightExpression( ""weight"" );; # Apply additional cuts on the signal and background samples (can be different)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_CNN_Classification.py:36,variab,variables,36,tutorials/tmva/TMVA_CNN_Classification.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_CNN_Classification.py,2,['variab'],['variables']
Modifiability,"# Set the configuration for the X and Y axis for the cumulative normal; # distribution.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/math/normalDist.py:10,config,configuration,10,tutorials/math/normalDist.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/math/normalDist.py,1,['config'],['configuration']
Modifiability,"# Set the configuration for the X and Y axis.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/math/normalDist.py:10,config,configuration,10,tutorials/math/normalDist.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/math/normalDist.py,1,['config'],['configuration']
Modifiability,"# Set the configuration of X and Y axis",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/math/normalDist.py:10,config,configuration,10,tutorials/math/normalDist.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/math/normalDist.py,1,['config'],['configuration']
Modifiability,"# Set the free variables to be minimized !",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/fit/NumericalMinimization.py:15,variab,variables,15,tutorials/fit/NumericalMinimization.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/fit/NumericalMinimization.py,1,['variab'],['variables']
Modifiability,"# Set up model; # ---------------------; # Declare variables x,mean, with associated name, title, value and allowed; # range",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf111_derivatives.py:51,variab,variables,51,tutorials/roofit/rf111_derivatives.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf111_derivatives.py,1,['variab'],['variables']
Modifiability,"# Set up model; # ---------------------; # Declare variables x,mean,sigma with associated name, title, initial; # value and allowed range",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf101_basics.py:51,variab,variables,51,tutorials/roofit/rf101_basics.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf101_basics.py,1,['variab'],['variables']
Modifiability,"# Setup the connection to Spark; # First create a dictionary with keys representing Spark specific configuration; # parameters. In this tutorial we use the following configuration parameters:; #; # 1. spark.app.name: The name of the Spark application; # 2. spark.master: The Spark endpoint responsible for running the; # application. With the syntax ""local[2]"" we signal Spark we want to run; # locally on the same machine with 2 cores, each running a separate; # process. The default behaviour of a Spark application would run; # locally on the same machine with as many concurrent processes as; # available cores, that could be also written as ""local[*]"".; #; # If you have access to a remote cluster you should substitute the endpoint URL; # of your Spark master in the form ""spark://HOST:PORT"" in the value of; # `spark.master`. Depending on the availability of your cluster you may request; # more computing nodes or cores per node with a similar configuration:; #; # sparkconf = pyspark.SparkConf().setAll(; # {""spark.master"": ""spark://HOST:PORT"",; # ""spark.executor.instances"": <number_of_nodes>,; # ""spark.executor.cores"" <cores_per_node>,}.items()); #; # You can find all configuration options and more details in the official Spark; # documentation at https://spark.apache.org/docs/latest/configuration.html .; # Create a SparkConf object with all the desired Spark configuration parameters",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/distrdf001_spark_connection.py:99,config,configuration,99,tutorials/dataframe/distrdf001_spark_connection.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/distrdf001_spark_connection.py,6,['config'],['configuration']
Modifiability,"# Setup two couplings that enters the morphing function; # kSM -> SM coupling set to constant (1); # cHq3 -> EFT parameter with NewPhysics attribute set to true",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf711_lagrangianmorph.py:12,coupling,couplings,12,tutorials/roofit/rf711_lagrangianmorph.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf711_lagrangianmorph.py,2,['coupling'],"['coupling', 'couplings']"
Modifiability,"# Since this tool needs to throw toy MC the PDF needs to be; # extended or the tool needs to know how many entries in a dataset; # per pseudo experiment.; # In the 'number counting form' where the entries in the dataset; # are counts, and not values of discriminating variables, the; # datasets typically only have one entry and the PDF is not; # extended.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/TwoSidedFrequentistUpperLimitWithBands.py:63,extend,extended,63,tutorials/roostats/TwoSidedFrequentistUpperLimitWithBands.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/TwoSidedFrequentistUpperLimitWithBands.py,3,"['extend', 'variab']","['extended', 'variables']"
Modifiability,"# Some variable numbers (e.g. MCINST1234) will change based on unrelated; # modifications to LLVM, replace those with an incrementing counter.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/UpdateTestChecks/common.py:7,variab,variable,7,interpreter/llvm-project/llvm/utils/UpdateTestChecks/common.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/UpdateTestChecks/common.py,1,['variab'],['variable']
Modifiability,"# Specify sampling density on observable and interpolation variable",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf705_linearmorph.py:59,variab,variable,59,tutorials/roofit/rf705_linearmorph.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf705_linearmorph.py,1,['variab'],['variable']
Modifiability,"# Sum extended components without coefs; # -------------------------------------------------------------------------; # Construct sum of two extended pdf (no coefficients required)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf202_extendedmlfit.py:6,extend,extended,6,tutorials/roofit/rf202_extendedmlfit.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf202_extendedmlfit.py,2,['extend'],['extended']
Modifiability,"# TODO : Should the address have to be passed here and stored in meminfo; # value: representation inside function body. Maybe stored in stack.; # The representation here are flexible.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/python/cppyy/numba_ext.py:174,flexible,flexible,174,bindings/pyroot/cppyy/cppyy/python/cppyy/numba_ext.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/python/cppyy/numba_ext.py,1,['flexible'],['flexible']
Modifiability,"# TODO Refactor all fetch_ functions to use this class will remove a lot of dup",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py:7,Refactor,Refactor,7,interpreter/cling/tools/packaging/cpt.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py,1,['Refactor'],['Refactor']
Modifiability,"# TODO: any type should be replaced with the correct github type, but it requires refactoring to; # not require the github module to be installed everywhere.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/git/code-format-helper.py:82,refactor,refactoring,82,interpreter/llvm-project/llvm/utils/git/code-format-helper.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/git/code-format-helper.py,1,['refactor'],['refactoring']
Modifiability,# TODO: implement private headers; # TODO: implement gtest headers; # TODO: implement top-level llvm/* headers; # TODO: implement llvm/Support/* headers; # Process Config/* headers,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lint/cpp_lint.py:164,Config,Config,164,interpreter/llvm-project/llvm/utils/lint/cpp_lint.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lint/cpp_lint.py,1,['Config'],['Config']
Modifiability,"# TODO: it's deeply silly that namespaces inherit from CPPInstance (in CPyCppyy)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_regression.py:42,inherit,inherit,42,bindings/pyroot/cppyy/cppyy/test/test_regression.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_regression.py,1,['inherit'],['inherit']
Modifiability,"# TODO: this is b/c unsigned char is considered a ""byte"" type by default;; # it's meaning should probably be configurable?",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_datatypes.py:109,config,configurable,109,bindings/pyroot/cppyy/cppyy/test/test_datatypes.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_datatypes.py,1,['config'],['configurable']
Modifiability,"# TODO:; # - struct improvements (flexible arrays, packed &; # unpacked, alignment); # - objective-c qualified id; # - anonymous / transparent unions; # - VLAs; # - block types; # - K&R functions; # - pass arguments of different types (test extension, transparent union); # - varargs; ###; # Actual type types",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/ABITest/TypeGen.py:34,flexible,flexible,34,interpreter/llvm-project/clang/utils/ABITest/TypeGen.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/ABITest/TypeGen.py,1,['flexible'],['flexible']
Modifiability,"# Test inherited class",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/pretty_printing.py:7,inherit,inherited,7,bindings/pyroot/pythonizations/test/pretty_printing.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/pretty_printing.py,1,['inherit'],['inherited']
Modifiability,"# Test to check if new variables are created",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/roofit/rooworkspace.py:23,variab,variables,23,bindings/pyroot/pythonizations/test/roofit/rooworkspace.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/roofit/rooworkspace.py,2,['variab'],['variables']
Modifiability,"# Test whether this attribute was inherited",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_cpp11features.py:34,inherit,inherited,34,bindings/pyroot/cppyy/cppyy/test/test_cpp11features.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_cpp11features.py,1,['inherit'],['inherited']
Modifiability,"# The RooFit variable ""x"" is only defined from -1 to 2, and the; # category doesn't have the 0-state.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/roofit/roodataset_numpy.py:13,variab,variable,13,bindings/pyroot/pythonizations/test/roofit/roodataset_numpy.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/roofit/roodataset_numpy.py,1,['variab'],['variable']
Modifiability,# The SDKs used by default in compiler-rt/cmake/base-config-ix.cmake.; # COMPILER_RT_ENABLE_IOS defaults to on.; # COMPILER_RT_ENABLE_WATCHOS and COMPILER_RT_ENABLE_TV default to off.; # compiler-rt/cmake/config-ix.cmake sets DARWIN_EMBEDDED_PLATFORMS; # depending on these.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/sysroot.py:53,config,config-ix,53,interpreter/llvm-project/llvm/utils/sysroot.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/sysroot.py,2,['config'],['config-ix']
Modifiability,"# The array values should be the same!; # Importing a RooDataHist from NumPy arrays with histogram counts and bin edges; # -----------------------------------------------------------------------------; # There is also a `RooDataHist.from_numpy` function, again with an interface; # inspired by `numpy.histogramdd`. You need to pass at least the histogram; # counts and the list of variables. The binning is optional: the default; # binning of the RooRealVars is used if not explicitly specified.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf409_NumPyPandasToRooFit.py:381,variab,variables,381,tutorials/roofit/rf409_NumPyPandasToRooFit.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf409_NumPyPandasToRooFit.py,1,['variab'],['variables']
Modifiability,"# The binning of real variables (like x,y) is done using their fit range; # 'get/setRange()' and number of specified fit bins 'get/setBins()'.; # Category dimensions of binned datasets get one bin per defined category; # state",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf402_datahandling.py:22,variab,variables,22,tutorials/roofit/rf402_datahandling.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf402_datahandling.py,1,['variab'],['variables']
Modifiability,"# The following create a unique type for fixed-size C arrays: ctypes.c_char_Array_9; # and neither inherits from a non-sized type nor implements the buffer interface.; # As such, it can't be handled. TODO?; #pbuf = ctypes.create_string_buffer(len(buf), buf); #assert f(pbuf, len(buf)) == total",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_datatypes.py:99,inherit,inherits,99,bindings/pyroot/cppyy/cppyy/test/test_datatypes.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_datatypes.py,1,['inherit'],['inherits']
Modifiability,# The items to add to the PATH environment variable.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/LitConfig.py:43,variab,variable,43,interpreter/llvm-project/llvm/utils/lit/lit/LitConfig.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/LitConfig.py,1,['variab'],['variable']
Modifiability,"# The next variable has a duplicate name on purpose the check if it's; # really the name that is used as the key in RooAbsCollections.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/roofit/rooabscollection.py:11,variab,variable,11,bindings/pyroot/pythonizations/test/roofit/rooabscollection.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/roofit/rooabscollection.py,1,['variab'],['variable']
Modifiability,# The test suite configuration.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/Test.py:17,config,configuration,17,interpreter/llvm-project/llvm/utils/lit/lit/Test.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/Test.py,1,['config'],['configuration']
Modifiability,"# The tolerance sets the probability to add an unnecessary term.; # lower tolerance will add fewer terms, while higher tolerance; # will add more terms and provide a more flexible function.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/rs_bernsteinCorrection.py:171,flexible,flexible,171,tutorials/roostats/rs_bernsteinCorrection.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/rs_bernsteinCorrection.py,1,['flexible'],['flexible']
Modifiability,"# Then we create the correlated variables",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/math/principal.py:32,variab,variables,32,tutorials/math/principal.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/math/principal.py,1,['variab'],['variables']
Modifiability,# There might be more then one folder underneath - one per each scan-build; # command (Ex: one for configure and one for make).,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/analyzer/SATestBuild.py:99,config,configure,99,interpreter/llvm-project/clang/utils/analyzer/SATestBuild.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/analyzer/SATestBuild.py,1,['config'],['configure']
Modifiability,"# These need to be passed as variables and not as class attributes; # otherwise the `spark_mapper` function would be referencing this; # this instance of the Spark backend along with the referenced; # SparkContext. This would cause the errors described in SPARK-5063.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Backends/Spark/Backend.py:29,variab,variables,29,bindings/experimental/distrdf/python/DistRDF/Backends/Spark/Backend.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Backends/Spark/Backend.py,1,['variab'],['variables']
Modifiability,"# Third, use a Calculator based on Markov Chain monte carlo; # Before configuring the calculator, let's make a ProposalFunction; # that will achieve a high acceptance rate",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/rs101_limitexample.py:70,config,configuring,70,tutorials/roostats/rs101_limitexample.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/rs101_limitexample.py,1,['config'],['configuring']
Modifiability,"# This class contains the necessary HTML, JavaScript, CSS codes (templates); # for the new Factory methods. Some parts of these variables will be replaced and the new string will be the cell output.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/JsMVA/Factory.py:128,variab,variables,128,bindings/pyroot/pythonizations/python/ROOT/JsMVA/Factory.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/JsMVA/Factory.py,1,['variab'],['variables']
Modifiability,"# This code is adapted from the pprint_list function here :; # http://stackoverflow.com/questions/25026556/output-list-like-ls; # Thanks hawkjo !!",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/main/python/cmdLineUtils.py:15,adapt,adapted,15,main/python/cmdLineUtils.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/main/python/cmdLineUtils.py,1,['adapt'],['adapted']
Modifiability,"# This file is a minimal clang-format sublime-integration. To install:; # - Change 'binary' if clang-format is not on the path (see below).; # - Put this file into your sublime Packages directory, e.g. on Linux:; # ~/.config/sublime-text-2/Packages/User/clang-format-sublime.py; # - Add a key binding:; # { ""keys"": [""ctrl+shift+c""], ""command"": ""clang_format"" },; #; # With this integration you can press the bound key and clang-format will; # format the current lines and selections for all cursor positions. The lines; # or regions are extended to the next bigger syntactic entities.; #; # It operates on the current, potentially unsaved buffer and does not create; # or save any files. To revert a formatting, just undo.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/clang-format/clang-format-sublime.py:218,config,config,218,interpreter/llvm-project/clang/tools/clang-format/clang-format-sublime.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/clang-format/clang-format-sublime.py,2,"['config', 'extend']","['config', 'extended']"
Modifiability,"# This file is a minimal clang-format vim-integration. To install:; # - Change 'binary' if clang-format is not on the path (see below).; # - Add to your .vimrc:; #; # if has('python'); # map <C-I> :pyf <path-to-this-file>/clang-format.py<cr>; # imap <C-I> <c-o>:pyf <path-to-this-file>/clang-format.py<cr>; # elseif has('python3'); # map <C-I> :py3f <path-to-this-file>/clang-format.py<cr>; # imap <C-I> <c-o>:py3f <path-to-this-file>/clang-format.py<cr>; # endif; #; # The if-elseif-endif conditional should pick either the python3 or python2; # integration depending on your vim setup.; #; # The first mapping enables clang-format for NORMAL and VISUAL mode, the second; # mapping adds support for INSERT mode. Change ""C-I"" to another binding if you; # need clang-format on a different key (C-I stands for Ctrl+i).; #; # With this integration you can press the bound key and clang-format will; # format the current line in NORMAL and INSERT mode or the selected region in; # VISUAL mode. The line or region is extended to the next bigger syntactic; # entity.; #; # You can also pass in the variable ""l:lines"" to choose the range for; # formatting. This variable can either contain ""<start line>:<end line>"" or; # ""all"" to format the full file. So, to format the full file, write a function; # like:; # :function FormatFile(); # : let l:lines=""all""; # : if has('python'); # : pyf <path-to-this-file>/clang-format.py; # : elseif has('python3'); # : py3f <path-to-this-file>/clang-format.py; # : endif; # :endfunction; #; # It operates on the current, potentially unsaved buffer and does not create; # or save any files. To revert a formatting, just undo.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/clang-format/clang-format.py:1012,extend,extended,1012,interpreter/llvm-project/clang/tools/clang-format/clang-format.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/clang-format/clang-format.py,3,"['extend', 'variab']","['extended', 'variable']"
Modifiability,"# This gets called for each match that occurs in; # a line. We transform variables we haven't seen; # into defs, and variables we have seen into uses.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/UpdateTestChecks/common.py:73,variab,variables,73,interpreter/llvm-project/llvm/utils/UpdateTestChecks/common.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/UpdateTestChecks/common.py,2,['variab'],['variables']
Modifiability,"# This is a private builtin parameter which can be used to perform; # translation of configuration paths. Specifically, this parameter; # can be set to a dictionary that the discovery process will consult; # when it finds a configuration it is about to load. If the given; # path is in the map, the value of that key is a path to the; # configuration to load instead.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/discovery.py:85,config,configuration,85,interpreter/llvm-project/llvm/utils/lit/lit/discovery.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/discovery.py,3,['config'],['configuration']
Modifiability,# This list is used by TestRunner.py to restrict running only tests that; # require one of the features in this list if this list is non-empty.; # Configurations can set this list to restrict the set of tests to run.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/TestingConfig.py:147,Config,Configurations,147,interpreter/llvm-project/llvm/utils/lit/lit/TestingConfig.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/TestingConfig.py,1,['Config'],['Configurations']
Modifiability,# This variable will body of the mappings function,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/unicode-case-fold.py:7,variab,variable,7,interpreter/llvm-project/llvm/utils/unicode-case-fold.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/unicode-case-fold.py,1,['variab'],['variable']
Modifiability,"# Unlike ROOT.RooAbsArgs (ROOT.RooAbsPdf, ROOT.RooFormulaVar,....) datasets are not attached to; # the variables they are constructed from. Instead they are attached to an internal; # clone of the supplied set of arguments; # Fill d with dummy values",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf402_datahandling.py:103,variab,variables,103,tutorials/roofit/rf402_datahandling.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf402_datahandling.py,1,['variab'],['variables']
Modifiability,# Update config defaults.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/scan-view/share/ScanView.py:9,config,config,9,interpreter/llvm-project/clang/tools/scan-view/share/ScanView.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/scan-view/share/ScanView.py,1,['config'],['config']
Modifiability,"# Update kernel configuration first, if needed.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/jupyter/tablegen_kernel/kernel.py:16,config,configuration,16,interpreter/llvm-project/llvm/utils/TableGen/jupyter/tablegen_kernel/kernel.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/jupyter/tablegen_kernel/kernel.py,1,['config'],['configuration']
Modifiability,"# Updates the number of partitions for this dataframe if the user did; # not specify one initially. This is done each time the computations are; # triggered, in case the user changed the resource configuration; # between runs (e.g. changing the number of available cores).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/HeadNode.py:196,config,configuration,196,bindings/experimental/distrdf/python/DistRDF/HeadNode.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/HeadNode.py,1,['config'],['configuration']
Modifiability,"# Use AddPdf to extend the model. Giving as many coefficients as pdfs switches on extension.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf204a_extendedLikelihood.py:16,extend,extend,16,tutorials/roofit/rf204a_extendedLikelihood.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf204a_extendedLikelihood.py,1,['extend'],['extend']
Modifiability,# Use a FileCheck variable.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/UpdateTestChecks/common.py:18,variab,variable,18,interpreter/llvm-project/llvm/utils/UpdateTestChecks/common.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/UpdateTestChecks/common.py,1,['variab'],['variable']
Modifiability,"# User configuration parameters",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridInstructional.py:7,config,configuration,7,tutorials/roostats/HybridInstructional.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridInstructional.py,2,['config'],['configuration']
Modifiability,"# Variable overrides",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py:2,Variab,Variable,2,interpreter/cling/tools/packaging/cpt.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py,1,['Variab'],['Variable']
Modifiability,"# Variable to store previous functions so as to not rejit.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_rdf_pyz.py:2,Variab,Variable,2,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_rdf_pyz.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_rdf_pyz.py,1,['Variab'],['Variable']
Modifiability,"# WVE Add reduction by range; # Binned (RooDataHist) and unbinned datasets (RooDataSet) share; # many properties and inherit from a common abstract base class; # (RooAbsData), provides an interface for all operations; # that can be performed regardless of the data format",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf402_datahandling.py:117,inherit,inherit,117,tutorials/roofit/rf402_datahandling.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf402_datahandling.py,1,['inherit'],['inherit']
Modifiability,# We allow normal system exit inside a config file to just; # return control without error.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/TestingConfig.py:39,config,config,39,interpreter/llvm-project/llvm/utils/lit/lit/TestingConfig.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/TestingConfig.py,1,['config'],['config']
Modifiability,"# We could have seen a different prefix for the global variables first,; # ensure we use that one instead of the prefix for the current match.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/UpdateTestChecks/common.py:55,variab,variables,55,interpreter/llvm-project/llvm/utils/UpdateTestChecks/common.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/UpdateTestChecks/common.py,1,['variab'],['variables']
Modifiability,"# We create RooFit variables that will represent the dataset.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf408_RDataFrameToRooFit.py:19,variab,variables,19,tutorials/roofit/rf408_RDataFrameToRooFit.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf408_RDataFrameToRooFit.py,1,['variab'],['variables']
Modifiability,"# We create a formula object and compute the value of this formula; # for two different values of the x variable.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/pyroot/formula1.py:104,variab,variable,104,tutorials/pyroot/formula1.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/pyroot/formula1.py,1,['variab'],['variable']
Modifiability,"# We found a test suite, create a new config for it and load it.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/discovery.py:38,config,config,38,interpreter/llvm-project/llvm/utils/lit/lit/discovery.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/discovery.py,1,['config'],['config']
Modifiability,"# We had to search through the 'not' commands to find all the 'env'; # commands and any other in-process builtin command. We don't want to; # reimplement 'not' and its '--crash' here, so just push all 'not'; # commands back to be called as external commands. Because this; # approach effectively moves all 'env' commands up front, it relies on; # the assumptions that (1) environment variables are not intended to be; # relevant to 'not' commands and (2) the 'env' command should always; # blindly pass along the status it receives from any command it calls.; # For plain negations, either 'not' without '--crash', or the shell; # operator '!', leave them out from the command to execute and; # invert the result code afterwards.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/TestRunner.py:384,variab,variables,384,interpreter/llvm-project/llvm/utils/lit/lit/TestRunner.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/TestRunner.py,1,['variab'],['variables']
Modifiability,"# We have already set the ownership while initializing,; # so we do not need the custom Draw inherited from TPad to; # do it again in case it is executed.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_drawables.py:93,inherit,inherited,93,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_drawables.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_drawables.py,1,['inherit'],['inherited']
Modifiability,# We have to set this useless variable in order for the TF C API to correctly; # intake it,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/models/gen-regalloc-eviction-test-model.py:30,variab,variable,30,interpreter/llvm-project/llvm/lib/Analysis/models/gen-regalloc-eviction-test-model.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/models/gen-regalloc-eviction-test-model.py,2,['variab'],['variable']
Modifiability,"# We parse the function name from OpName, and grab the variable name 'var'; # for this function. Then we match that when the variable is assigned with; # OpFunction and match its body.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/UpdateTestChecks/asm.py:55,variab,variable,55,interpreter/llvm-project/llvm/utils/UpdateTestChecks/asm.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/UpdateTestChecks/asm.py,2,['variab'],['variable']
Modifiability,"# With added analytical integral expression; # ---------------------------------------------------------------------------------; # Write skeleton pdf class with variable x,a,b, given formula expression _and_; # given expression for analytical integral over x; # To use this class,; # - Compile and link class with '.x MyPdfV3.cxx+'; #",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf104_classfactory.py:162,variab,variable,162,tutorials/roofit/rf104_classfactory.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf104_classfactory.py,1,['variab'],['variable']
Modifiability,"# With added initial value expression; # ---------------------------------------------------------------------; # Write skeleton pdf class with variable x,a,b and given formula expression; # To use this class,; # - Compile and link class with '.x MyPdfV2.cxx+'; #",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf104_classfactory.py:144,variab,variable,144,tutorials/roofit/rf104_classfactory.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf104_classfactory.py,1,['variab'],['variable']
Modifiability,"# Write class skeleton code; # --------------------------------------------------; # Write skeleton pdf class with variable x,a,b; # To use this class,; # - Edit the file MyPdfV1.cxx and implement the evaluate() method in terms of x,a and b; # - Compile and link class with '.x MyPdfV1.cxx+'; #",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf104_classfactory.py:115,variab,variable,115,tutorials/roofit/rf104_classfactory.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf104_classfactory.py,1,['variab'],['variable']
Modifiability,"# \file; # \ingroup roostats_python_tutorials; # \notebook -js; # SPlot tutorial; #; # This tutorial shows an example of using SPlot to unfold two distributions.; # The physics context for the example is that we want to know; # the isolation distribution for real electrons from Z events; # and fake electrons from QCD. Isolation is our 'control' variable.; # To unfold them, we need a model for an uncorrelated variable that; # discriminates between Z and QCD. To do this, we use the invariant; # mass of two electrons. We model the Z with a Gaussian and the QCD; # with a falling exponential.; #; # Note, since we don't have real data in this tutorial, we need to generate; # toy data. To do that we need a model for the isolation variable for; # both Z and QCD. This is only used to generate the toy data, and would; # not be needed if we had real data.; #; # \macro_image; # \macro_code; # \macro_output; #; # \authors P. P., Kyle Cranmer (C++ version)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/rs301_splot.py:347,variab,variable,347,tutorials/roostats/rs301_splot.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/rs301_splot.py,3,['variab'],['variable']
Modifiability,"# \file; # \ingroup tutorial_dataframe; #; # Configure a Dask connection to a HTCondor cluster hosted by the CERN batch; # service. To reproduce this tutorial, run the following steps:; #; # 1. Login to lxplus; # 2. Source an LCG release (minimum LCG104). See; # https://lcgdocs.web.cern.ch/lcgdocs/lcgreleases/introduction/ for details; # 3. Install the `dask_lxplus` package, which provides the `CernCluster` class; # needed to properly connect to the CERN condor pools. See; # https://batchdocs.web.cern.ch/specialpayload/dask.html for instructions; # 4. Run this tutorial; #; # The tutorial defines resources that each job will request to the condor; # scheduler, then creates a Dask client that can be used by RDataFrame to; # distribute computations.; #; # \macro_code; #; # \date September 2023; # \author Vincenzo Eduardo Padulano CERN",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/distrdf004_dask_lxbatch.py:45,Config,Configure,45,tutorials/dataframe/distrdf004_dask_lxbatch.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/distrdf004_dask_lxbatch.py,1,['Config'],['Configure']
Modifiability,"# \file; # \ingroup tutorial_roostats; # \notebook -js; # A hypothesis testing example based on number counting with background uncertainty.; #; # A hypothesis testing example based on number counting; # with background uncertainty.; #; # NOTE: This example is like HybridInstructional, but the model is more clearly; # generalizable to an analysis with shapes. There is a lot of flexibility; # for how one models a problem in RooFit/RooStats. Models come in a few; # common forms:; # - standard form: extended PDF of some discriminating variable m:; # eg: P(m) ~ S*fs(m) + B*fb(m), with S+B events expected; # in this case the dataset has N rows corresponding to N events; # and the extended term is Pois(N|S+B); #; # - fractional form: non-extended PDF of some discriminating variable m:; # eg: P(m) ~ s*fs(m) + (1-s)*fb(m), where s is a signal fraction; # in this case the dataset has N rows corresponding to N events; # and there is no extended term; #; # - number counting form: in which there is no discriminating variable; # and the counts are modeled directly (see HybridInstructional); # eg: P(N) = Pois(N|S+B); # in this case the dataset has 1 row corresponding to N events; # and the extended term is the PDF itself.; #; # Here we convert the number counting form into the standard form by; # introducing a dummy discriminating variable m with a uniform distribution.; #; # This example:; # - demonstrates the usage of the HybridCalcultor (Part 4-6); # - demonstrates the numerical integration of RooFit (Part 2); # - validates the RooStats against an example with a known analytic answer; # - demonstrates usage of different test statistics; # - explains subtle choices in the prior used for hybrid methods; # - demonstrates usage of different priors for the nuisance parameters; # - demonstrates usage of PROOF; #; # The basic setup here is that a main measurement has observed x events with an; # expectation of s+b. One can choose an ad hoc prior for the uncertainty on b,; # or try to ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridStandardForm.py:502,extend,extended,502,tutorials/roostats/HybridStandardForm.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridStandardForm.py,8,"['extend', 'variab']","['extended', 'variable']"
Modifiability,"# `check-llvm` and `check-clang` are cheap ways to increase coverage. The; # former lets us touch on the non-x86 backends a bit if configured, and the; # latter gives us more C to chew on (and will send us through diagnostic; # paths a fair amount, though the `if (stuff_is_broken) { diag() ... }`; # branches should still heavily be weighted in the not-taken direction,; # since we built all of LLVM/etc).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/collect_and_build_with_pgo.py:131,config,configured,131,interpreter/llvm-project/llvm/utils/collect_and_build_with_pgo.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/collect_and_build_with_pgo.py,1,['config'],['configured']
Modifiability,"# classes in namespace should inherit",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_fragile.py:30,inherit,inherit,30,bindings/pyroot/cppyy/cppyy/test/test_fragile.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_fragile.py,1,['inherit'],['inherit']
Modifiability,"# combined model; # These variables represent the number of Z or QCD events; # They will be fitted.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/rs301_splot.py:26,variab,variables,26,tutorials/roostats/rs301_splot.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/rs301_splot.py,1,['variab'],['variables']
Modifiability,"# configure cling",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py:2,config,configure,2,interpreter/cling/tools/packaging/cpt.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py,1,['config'],['configure']
Modifiability,"# copy stdout_fd before it is overwritten; # NOTE: `copied` is inheritable on Windows when duplicating a standard stream",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/main/python/cmdLineUtils.py:63,inherit,inheritable,63,main/python/cmdLineUtils.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/main/python/cmdLineUtils.py,1,['inherit'],['inheritable']
Modifiability,"# create Keras model with 4 layers of 64 units and relu activations",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_Higgs_Classification.py:28,layers,layers,28,tutorials/tmva/TMVA_Higgs_Classification.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_Higgs_Classification.py,1,['layers'],['layers']
Modifiability,"# data: representation used when storing into containers (e.g. arrays).; # TODO ...; # value: representation inside function body. Maybe stored in stack.; # The representation here are flexible.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/python/cppyy/numba_ext.py:185,flexible,flexible,185,bindings/pyroot/cppyy/cppyy/python/cppyy/numba_ext.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/python/cppyy/numba_ext.py,1,['flexible'],['flexible']
Modifiability,"# firstPOI.setMin(0); # firstPOI.setMax(10); # -------------------------------------------------------; # create and use the FeldmanCousins tool; # to find and plot the 95% confidence interval; # on the parameter of interest as specified; # in the model config; # REMEMBER, we will change the test statistic; # so this is NOT a Feldman-Cousins interval",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/TwoSidedFrequentistUpperLimitWithBands.py:254,config,config,254,tutorials/roostats/TwoSidedFrequentistUpperLimitWithBands.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/TwoSidedFrequentistUpperLimitWithBands.py,1,['config'],['config']
Modifiability,"# for example: TCut mycutb = ""abs(var1)<0.5"";; # Tell the factory how to use the training and testing events; # If no numbers of events are given, half of the events in the tree are used; # for training, and the other half for testing:; # loader.PrepareTrainingAndTestTree( mycut, ""SplitMode=random:!V"" );; # It is possible also to specify the number of training and testing events,; # note we disable the computation of the correlation matrix of the input variables",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_CNN_Classification.py:457,variab,variables,457,tutorials/tmva/TMVA_CNN_Classification.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_CNN_Classification.py,1,['variab'],['variables']
Modifiability,# global variable names should be matched literally,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/UpdateTestChecks/common.py:9,variab,variable,9,interpreter/llvm-project/llvm/utils/UpdateTestChecks/common.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/UpdateTestChecks/common.py,1,['variab'],['variable']
Modifiability,"# happens on Windows b/c root-config is a bash script; the; # following covers the most important options until that; # gets fixed upstream",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/cling/python/cppyy_backend/_cling_config.py:30,config,config,30,bindings/pyroot/cppyy/cppyy-backend/cling/python/cppyy_backend/_cling_config.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/cling/python/cppyy_backend/_cling_config.py,1,['config'],['config']
Modifiability,"# helper for multiple inheritance",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/python/cppyy/__init__.py:22,inherit,inheritance,22,bindings/pyroot/cppyy/cppyy/python/cppyy/__init__.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/python/cppyy/__init__.py,1,['inherit'],['inheritance']
Modifiability,"# if this name is for the current node, add the dot variable name; # for the node (it will be Node(hex number)) to our set of nodes",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/DSAextract.py:52,variab,variable,52,interpreter/llvm-project/llvm/utils/DSAextract.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/DSAextract.py,1,['variab'],['variable']
Modifiability,"# libcxx's configure step messes with our link order: we'll link; # libclang_rt.profile after libgcc, and the former requires atexit from the; # latter. So, configure checks fail.; #; # Since we don't need libcxx or compiler-rt anyway, just disable them.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/collect_and_build_with_pgo.py:11,config,configure,11,interpreter/llvm-project/llvm/utils/collect_and_build_with_pgo.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/collect_and_build_with_pgo.py,2,['config'],['configure']
Modifiability,"# m is a dummy discriminating variable",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridStandardForm.py:30,variab,variable,30,tutorials/roostats/HybridStandardForm.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridStandardForm.py,1,['variab'],['variable']
Modifiability,"# make it go faster; # Here, we consider only ensembles with 100 events; # The PDF could be extended and this could be removed",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/IntervalExamples.py:92,extend,extended,92,tutorials/roostats/IntervalExamples.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/IntervalExamples.py,1,['extend'],['extended']
Modifiability,# make plugins always a list. (it might be None when not specified.),MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/arguments.py:7,plugin,plugins,7,interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/arguments.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/arguments.py,1,['plugin'],['plugins']
Modifiability,"# name for internal binning that is created for the RooDataHist to adapt",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_roodatahist.py:67,adapt,adapt,67,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_roodatahist.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_roodatahist.py,1,['adapt'],['adapt']
Modifiability,"# now create the model config for this problem",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/MultivariateGaussianTest.py:23,config,config,23,tutorials/roostats/MultivariateGaussianTest.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/MultivariateGaussianTest.py,1,['config'],['config']
