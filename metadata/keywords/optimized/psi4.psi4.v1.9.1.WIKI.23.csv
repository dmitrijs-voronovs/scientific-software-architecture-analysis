quality_attribute,sentence,source,author,repo,version,id,keyword,matched_word,match_idx,filename,wiki,url,total_similar,target_keywords,target_matched_words
Deployability,"﻿. git_version. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; git_version. git_version¶. psi4.core.git_version() → None¶. Deprecated since version 1.4. table of contents. git_version; git_version(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; git_version. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/api/psi4.core.git_version.html:469,update,updated,469,psi4manual/master/api/psi4.core.git_version.html,https://psicode.org,https://psicode.org/psi4manual/master/api/psi4.core.git_version.html,1,['update'],['updated']
Deployability,"﻿. git_version. Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. git_version¶. psi4.core.git_version() → str¶; Returns the git version of this copy of Psi. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2018, The Psi4 Project.; Last updated on Wednesday, 25 July 2018 04:21AM.; Created using Sphinx 1.7.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/api/psi4.core.git_version-1.html:391,update,updated,391,psi4manual/1.2.1/api/psi4.core.git_version-1.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/api/psi4.core.git_version-1.html,2,['update'],['updated']
Deployability,"﻿. git_version. Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. git_version¶. psi4.core.git_version() → str¶; Returns the git version of this copy of Psi. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2019, The Psi4 Project.; Last updated on Wednesday, 15 May 2019 08:49PM.; Created using Sphinx 1.8.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/api/psi4.core.git_version-1.html:391,update,updated,391,psi4manual/1.3.2/api/psi4.core.git_version-1.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/api/psi4.core.git_version-1.html,2,['update'],['updated']
Deployability,"﻿. git_version. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; git_version. git_version¶. psi4.core.git_version() → None¶. Deprecated since version 1.4. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; git_version. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/api/psi4.core.git_version-1.html:399,update,updated,399,psi4manual/1.4.0/api/psi4.core.git_version-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/api/psi4.core.git_version-1.html,2,['update'],['updated']
Deployability,"﻿. git_version. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; git_version. git_version¶. psi4.core.git_version() → None¶. Deprecated since version 1.4. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; git_version. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/api/psi4.core.git_version-1.html:399,update,updated,399,psi4manual/1.5.0/api/psi4.core.git_version-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/api/psi4.core.git_version-1.html,2,['update'],['updated']
Deployability,"﻿. git_version. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; git_version. git_version¶. psi4.core.git_version() → None¶. Deprecated since version 1.4. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; git_version. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/api/psi4.core.git_version.html:399,update,updated,399,psi4manual/1.6.x/api/psi4.core.git_version.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/api/psi4.core.git_version.html,1,['update'],['updated']
Deployability,"﻿. git_version. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; git_version. git_version¶. psi4.core.git_version() → None¶. Deprecated since version 1.4. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; git_version. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/api/psi4.core.git_version.html:404,update,updated,404,psi4manual/1.7.x/api/psi4.core.git_version.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/api/psi4.core.git_version.html,1,['update'],['updated']
Deployability,"﻿. git_version. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; git_version. git_version¶. psi4.core.git_version() → None¶. Deprecated since version 1.4. table of contents. git_version; git_version(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; git_version. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/api/psi4.core.git_version.html:455,update,updated,455,psi4manual/1.8.x/api/psi4.core.git_version.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/api/psi4.core.git_version.html,1,['update'],['updated']
Deployability,"﻿. git_version. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; git_version. git_version¶. psi4.core.git_version() → None¶. Deprecated since version 1.4. table of contents. git_version; git_version(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; git_version. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/api/psi4.core.git_version.html:455,update,updated,455,psi4manual/1.9.x/api/psi4.core.git_version.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/api/psi4.core.git_version.html,1,['update'],['updated']
Deployability,"﻿. gradient. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; gradient. gradient¶. psi4.driver.gradient(name, **kwargs)[source]¶; Function complementary to optimize(). Carries out one gradient pass,; deciding analytic or finite difference. Returns:; Matrix – Total electronic gradient in Hartrees/Bohr. Returns:; (Matrix, Wavefunction) – gradient and wavefunction when return_wfn specified. Examples:. >>> # [1] Single-point dft gradient getting the gradient; >>> # in file, core.Matrix, and np.array forms; >>> set gradient_write on; >>> G, wfn = gradient('b3lyp-d', return_wfn=True); >>> wfn.gradient().print_out(); >>> np.array(G). table of contents. gradient; gradient(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; gradient. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/api/psi4.driver.gradient.html:940,update,updated,940,psi4manual/master/api/psi4.driver.gradient.html,https://psicode.org,https://psicode.org/psi4manual/master/api/psi4.driver.gradient.html,1,['update'],['updated']
Deployability,"﻿. gradient. Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. gradient¶. psi4.driver.gradient(name, **kwargs)[source]¶; Function complementary to :py:func:~driver.optimize(). Carries out one gradient pass,; deciding analytic or finite difference. Returns:Matrix – Total electronic gradient in Hartrees/Bohr. Returns:(Matrix, Wavefunction) – gradient and wavefunction when return_wfn specified. Examples:. 1; 2; 3; 4; 5; 6>>> # [1] Single-point dft gradient getting the gradient; >>> # in file, core.Matrix, and np.array forms; >>> set gradient_write on; >>> G, wfn = gradient('b3lyp-d', return_wfn=True); >>> wfn.gradient().print_out(); >>> np.array(G). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2018, The Psi4 Project.; Last updated on Wednesday, 25 July 2018 04:21AM.; Created using Sphinx 1.7.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/api/psi4.driver.gradient-1.html:889,update,updated,889,psi4manual/1.2.1/api/psi4.driver.gradient-1.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/api/psi4.driver.gradient-1.html,2,['update'],['updated']
Deployability,"﻿. gradient. Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. gradient¶. psi4.driver.gradient(name, **kwargs)[source]¶; Function complementary to :py:func:~driver.optimize(). Carries out one gradient pass,; deciding analytic or finite difference. Returns:Matrix – Total electronic gradient in Hartrees/Bohr. Returns:(Matrix, Wavefunction) – gradient and wavefunction when return_wfn specified. Examples:. >>> # [1] Single-point dft gradient getting the gradient; >>> # in file, core.Matrix, and np.array forms; >>> set gradient_write on; >>> G, wfn = gradient('b3lyp-d', return_wfn=True); >>> wfn.gradient().print_out(); >>> np.array(G). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2019, The Psi4 Project.; Last updated on Wednesday, 15 May 2019 08:49PM.; Created using Sphinx 1.8.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/api/psi4.driver.gradient-1.html:873,update,updated,873,psi4manual/1.3.2/api/psi4.driver.gradient-1.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/api/psi4.driver.gradient-1.html,2,['update'],['updated']
Deployability,"﻿. gradient. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; gradient. gradient¶. psi4.driver.gradient(name, **kwargs)[source]¶; Function complementary to optimize(). Carries out one gradient pass,; deciding analytic or finite difference. Returns; Matrix – Total electronic gradient in Hartrees/Bohr. Returns; (Matrix, Wavefunction) – gradient and wavefunction when return_wfn specified. Examples. >>> # [1] Single-point dft gradient getting the gradient; >>> # in file, core.Matrix, and np.array forms; >>> set gradient_write on; >>> G, wfn = gradient('b3lyp-d', return_wfn=True); >>> wfn.gradient().print_out(); >>> np.array(G). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; gradient. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/api/psi4.driver.gradient-1.html:873,update,updated,873,psi4manual/1.4.0/api/psi4.driver.gradient-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/api/psi4.driver.gradient-1.html,2,['update'],['updated']
Deployability,"﻿. gradient. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; gradient. gradient¶. psi4.driver.gradient(name, **kwargs)[source]¶; Function complementary to optimize(). Carries out one gradient pass,; deciding analytic or finite difference. Returns; Matrix – Total electronic gradient in Hartrees/Bohr. Returns; (Matrix, Wavefunction) – gradient and wavefunction when return_wfn specified. Examples. >>> # [1] Single-point dft gradient getting the gradient; >>> # in file, core.Matrix, and np.array forms; >>> set gradient_write on; >>> G, wfn = gradient('b3lyp-d', return_wfn=True); >>> wfn.gradient().print_out(); >>> np.array(G). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; gradient. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/api/psi4.driver.gradient-1.html:873,update,updated,873,psi4manual/1.5.0/api/psi4.driver.gradient-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/api/psi4.driver.gradient-1.html,2,['update'],['updated']
Deployability,"﻿. gradient. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; gradient. gradient¶. psi4.driver.gradient(name, **kwargs)[source]¶; Function complementary to optimize(). Carries out one gradient pass,; deciding analytic or finite difference. Returns; Matrix – Total electronic gradient in Hartrees/Bohr. Returns; (Matrix, Wavefunction) – gradient and wavefunction when return_wfn specified. Examples. >>> # [1] Single-point dft gradient getting the gradient; >>> # in file, core.Matrix, and np.array forms; >>> set gradient_write on; >>> G, wfn = gradient('b3lyp-d', return_wfn=True); >>> wfn.gradient().print_out(); >>> np.array(G). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; gradient. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/api/psi4.driver.gradient.html:873,update,updated,873,psi4manual/1.6.x/api/psi4.driver.gradient.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/api/psi4.driver.gradient.html,1,['update'],['updated']
Deployability,"﻿. gradient. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; gradient. gradient¶. psi4.driver.gradient(name, **kwargs)[source]¶; Function complementary to optimize(). Carries out one gradient pass,; deciding analytic or finite difference. Returns:; Matrix – Total electronic gradient in Hartrees/Bohr. Returns:; (Matrix, Wavefunction) – gradient and wavefunction when return_wfn specified. Examples:. >>> # [1] Single-point dft gradient getting the gradient; >>> # in file, core.Matrix, and np.array forms; >>> set gradient_write on; >>> G, wfn = gradient('b3lyp-d', return_wfn=True); >>> wfn.gradient().print_out(); >>> np.array(G). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; gradient. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/api/psi4.driver.gradient.html:881,update,updated,881,psi4manual/1.7.x/api/psi4.driver.gradient.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/api/psi4.driver.gradient.html,1,['update'],['updated']
Deployability,"﻿. gradient. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; gradient. gradient¶. psi4.driver.gradient(name, **kwargs)[source]¶; Function complementary to optimize(). Carries out one gradient pass,; deciding analytic or finite difference. Returns:; Matrix – Total electronic gradient in Hartrees/Bohr. Returns:; (Matrix, Wavefunction) – gradient and wavefunction when return_wfn specified. Examples:. >>> # [1] Single-point dft gradient getting the gradient; >>> # in file, core.Matrix, and np.array forms; >>> set gradient_write on; >>> G, wfn = gradient('b3lyp-d', return_wfn=True); >>> wfn.gradient().print_out(); >>> np.array(G). table of contents. gradient; gradient(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; gradient. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/api/psi4.driver.gradient.html:926,update,updated,926,psi4manual/1.8.x/api/psi4.driver.gradient.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/api/psi4.driver.gradient.html,1,['update'],['updated']
Deployability,"﻿. gradient. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; gradient. gradient¶. psi4.driver.gradient(name, **kwargs)[source]¶; Function complementary to optimize(). Carries out one gradient pass,; deciding analytic or finite difference. Returns:; Matrix – Total electronic gradient in Hartrees/Bohr. Returns:; (Matrix, Wavefunction) – gradient and wavefunction when return_wfn specified. Examples:. >>> # [1] Single-point dft gradient getting the gradient; >>> # in file, core.Matrix, and np.array forms; >>> set gradient_write on; >>> G, wfn = gradient('b3lyp-d', return_wfn=True); >>> wfn.gradient().print_out(); >>> np.array(G). table of contents. gradient; gradient(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; gradient. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/api/psi4.driver.gradient.html:926,update,updated,926,psi4manual/1.9.x/api/psi4.driver.gradient.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/api/psi4.driver.gradient.html,1,['update'],['updated']
Deployability,"﻿. has_array_variable. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; has_array_variable. has_array_variable¶. psi4.core.has_array_variable(key: str) → bool¶; Is the Matrix QCVariable key (case-insensitive) set? Prefer has_variable(). table of contents. has_array_variable; has_array_variable(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; has_array_variable. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/api/psi4.core.has_array_variable.html:572,update,updated,572,psi4manual/master/api/psi4.core.has_array_variable.html,https://psicode.org,https://psicode.org/psi4manual/master/api/psi4.core.has_array_variable.html,1,['update'],['updated']
Deployability,"﻿. has_array_variable. Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. has_array_variable¶. psi4.core.has_array_variable(arg0: str) → bool¶; Is the Matrix QC variable (case-insensitive) set?. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2019, The Psi4 Project.; Last updated on Wednesday, 15 May 2019 08:49PM.; Created using Sphinx 1.8.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/api/psi4.core.has_array_variable-1.html:428,update,updated,428,psi4manual/1.3.2/api/psi4.core.has_array_variable-1.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/api/psi4.core.has_array_variable-1.html,2,['update'],['updated']
Deployability,"﻿. has_array_variable. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; has_array_variable. has_array_variable¶. psi4.core.has_array_variable(key: str) → bool¶; Is the Matrix QCVariable key (case-insensitive) set? Prefer has_variable(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; has_array_variable. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/api/psi4.core.has_array_variable-1.html:488,update,updated,488,psi4manual/1.4.0/api/psi4.core.has_array_variable-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/api/psi4.core.has_array_variable-1.html,2,['update'],['updated']
Deployability,"﻿. has_array_variable. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; has_array_variable. has_array_variable¶. psi4.core.has_array_variable(key: str) → bool¶; Is the Matrix QCVariable key (case-insensitive) set? Prefer has_variable(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; has_array_variable. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/api/psi4.core.has_array_variable-1.html:488,update,updated,488,psi4manual/1.5.0/api/psi4.core.has_array_variable-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/api/psi4.core.has_array_variable-1.html,2,['update'],['updated']
Deployability,"﻿. has_array_variable. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; has_array_variable. has_array_variable¶. psi4.core.has_array_variable(key: str) → bool¶; Is the Matrix QCVariable key (case-insensitive) set? Prefer has_variable(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; has_array_variable. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/api/psi4.core.has_array_variable.html:488,update,updated,488,psi4manual/1.6.x/api/psi4.core.has_array_variable.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/api/psi4.core.has_array_variable.html,1,['update'],['updated']
Deployability,"﻿. has_array_variable. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; has_array_variable. has_array_variable¶. psi4.core.has_array_variable(key: str) → bool¶; Is the Matrix QCVariable key (case-insensitive) set? Prefer has_variable(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; has_array_variable. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/api/psi4.core.has_array_variable.html:493,update,updated,493,psi4manual/1.7.x/api/psi4.core.has_array_variable.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/api/psi4.core.has_array_variable.html,1,['update'],['updated']
Deployability,"﻿. has_array_variable. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; has_array_variable. has_array_variable¶. psi4.core.has_array_variable(key: str) → bool¶; Is the Matrix QCVariable key (case-insensitive) set? Prefer has_variable(). table of contents. has_array_variable; has_array_variable(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; has_array_variable. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/api/psi4.core.has_array_variable.html:558,update,updated,558,psi4manual/1.8.x/api/psi4.core.has_array_variable.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/api/psi4.core.has_array_variable.html,1,['update'],['updated']
Deployability,"﻿. has_array_variable. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; has_array_variable. has_array_variable¶. psi4.core.has_array_variable(key: str) → bool¶; Is the Matrix QCVariable key (case-insensitive) set? Prefer has_variable(). table of contents. has_array_variable; has_array_variable(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; has_array_variable. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/api/psi4.core.has_array_variable.html:558,update,updated,558,psi4manual/1.9.x/api/psi4.core.has_array_variable.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/api/psi4.core.has_array_variable.html,1,['update'],['updated']
Deployability,"﻿. has_global_option_changed. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; has_global_option_changed. has_global_option_changed¶. psi4.core.has_global_option_changed(key: str) → bool¶; Whether keyword key value has been touched at global (all-module) scope. Has it been touched in the global scope, by either user or code. Notwithstanding, code is written such that in practice, this returns whether the option has been touched in the global scope by the user. table of contents. has_global_option_changed; has_global_option_changed(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; has_global_option_changed. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/api/psi4.core.has_global_option_changed.html:821,update,updated,821,psi4manual/master/api/psi4.core.has_global_option_changed.html,https://psicode.org,https://psicode.org/psi4manual/master/api/psi4.core.has_global_option_changed.html,1,['update'],['updated']
Deployability,"﻿. has_global_option_changed. Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. has_global_option_changed¶. psi4.core.has_global_option_changed(arg0: str) → bool¶; Returns boolean for whether the keyword arg1 has been touched in the global scope, by either user or code. Notwithstanding, code is written such that in practice, this returns whether the option has been touched in the global scope by the user. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2018, The Psi4 Project.; Last updated on Wednesday, 25 July 2018 04:21AM.; Created using Sphinx 1.7.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/api/psi4.core.has_global_option_changed-1.html:643,update,updated,643,psi4manual/1.2.1/api/psi4.core.has_global_option_changed-1.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/api/psi4.core.has_global_option_changed-1.html,2,['update'],['updated']
Deployability,"﻿. has_global_option_changed. Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. has_global_option_changed¶. psi4.core.has_global_option_changed(arg0: str) → bool¶; Returns boolean for whether the keyword arg1 has been touched in the global scope, by either user or code. Notwithstanding, code is written such that in practice, this returns whether the option has been touched in the global scope by the user. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2019, The Psi4 Project.; Last updated on Wednesday, 15 May 2019 08:49PM.; Created using Sphinx 1.8.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/api/psi4.core.has_global_option_changed-1.html:643,update,updated,643,psi4manual/1.3.2/api/psi4.core.has_global_option_changed-1.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/api/psi4.core.has_global_option_changed-1.html,2,['update'],['updated']
Deployability,"﻿. has_global_option_changed. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; has_global_option_changed. has_global_option_changed¶. psi4.core.has_global_option_changed(key: str) → bool¶; Whether keyword key value has been touched at global (all-module) scope. Has it been touched in the global scope, by either user or code. Notwithstanding, code is written such that in practice, this returns whether the option has been touched in the global scope by the user. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; has_global_option_changed. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/api/psi4.core.has_global_option_changed-1.html:723,update,updated,723,psi4manual/1.4.0/api/psi4.core.has_global_option_changed-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/api/psi4.core.has_global_option_changed-1.html,2,['update'],['updated']
Deployability,"﻿. has_global_option_changed. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; has_global_option_changed. has_global_option_changed¶. psi4.core.has_global_option_changed(key: str) → bool¶; Whether keyword key value has been touched at global (all-module) scope. Has it been touched in the global scope, by either user or code. Notwithstanding, code is written such that in practice, this returns whether the option has been touched in the global scope by the user. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; has_global_option_changed. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/api/psi4.core.has_global_option_changed-1.html:723,update,updated,723,psi4manual/1.5.0/api/psi4.core.has_global_option_changed-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/api/psi4.core.has_global_option_changed-1.html,2,['update'],['updated']
Deployability,"﻿. has_global_option_changed. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; has_global_option_changed. has_global_option_changed¶. psi4.core.has_global_option_changed(key: str) → bool¶; Whether keyword key value has been touched at global (all-module) scope. Has it been touched in the global scope, by either user or code. Notwithstanding, code is written such that in practice, this returns whether the option has been touched in the global scope by the user. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; has_global_option_changed. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/api/psi4.core.has_global_option_changed.html:723,update,updated,723,psi4manual/1.6.x/api/psi4.core.has_global_option_changed.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/api/psi4.core.has_global_option_changed.html,1,['update'],['updated']
Deployability,"﻿. has_global_option_changed. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; has_global_option_changed. has_global_option_changed¶. psi4.core.has_global_option_changed(key: str) → bool¶; Whether keyword key value has been touched at global (all-module) scope. Has it been touched in the global scope, by either user or code. Notwithstanding, code is written such that in practice, this returns whether the option has been touched in the global scope by the user. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; has_global_option_changed. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/api/psi4.core.has_global_option_changed.html:728,update,updated,728,psi4manual/1.7.x/api/psi4.core.has_global_option_changed.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/api/psi4.core.has_global_option_changed.html,1,['update'],['updated']
Deployability,"﻿. has_global_option_changed. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; has_global_option_changed. has_global_option_changed¶. psi4.core.has_global_option_changed(key: str) → bool¶; Whether keyword key value has been touched at global (all-module) scope. Has it been touched in the global scope, by either user or code. Notwithstanding, code is written such that in practice, this returns whether the option has been touched in the global scope by the user. table of contents. has_global_option_changed; has_global_option_changed(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; has_global_option_changed. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/api/psi4.core.has_global_option_changed.html:807,update,updated,807,psi4manual/1.8.x/api/psi4.core.has_global_option_changed.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/api/psi4.core.has_global_option_changed.html,1,['update'],['updated']
Deployability,"﻿. has_global_option_changed. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; has_global_option_changed. has_global_option_changed¶. psi4.core.has_global_option_changed(key: str) → bool¶; Whether keyword key value has been touched at global (all-module) scope. Has it been touched in the global scope, by either user or code. Notwithstanding, code is written such that in practice, this returns whether the option has been touched in the global scope by the user. table of contents. has_global_option_changed; has_global_option_changed(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; has_global_option_changed. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/api/psi4.core.has_global_option_changed.html:807,update,updated,807,psi4manual/1.9.x/api/psi4.core.has_global_option_changed.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/api/psi4.core.has_global_option_changed.html,1,['update'],['updated']
Deployability,"﻿. has_local_option_changed. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; has_local_option_changed. has_local_option_changed¶. psi4.core.has_local_option_changed(module: str, key: str) → bool¶; Whether keyword key value has been touched at module scope. Has it been touched in the scope of the specified module by either user or code.Notwithstanding, code is written such that in practice, this returns whether the option has been touched in the module scope by the user. table of contents. has_local_option_changed; has_local_option_changed(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; has_local_option_changed. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/api/psi4.core.has_local_option_changed.html:829,update,updated,829,psi4manual/master/api/psi4.core.has_local_option_changed.html,https://psicode.org,https://psicode.org/psi4manual/master/api/psi4.core.has_local_option_changed.html,1,['update'],['updated']
Deployability,"﻿. has_local_option_changed. Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. has_local_option_changed¶. psi4.core.has_local_option_changed(arg0: str, arg1: str) → bool¶; Returns boolean for whether the keyword arg2 has been touched in the scope of the specified module arg1, by either user or code. Notwithstanding, code is written such that in practice, this returns whether the option has been touched in the module scope by the user. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2018, The Psi4 Project.; Last updated on Wednesday, 25 July 2018 04:21AM.; Created using Sphinx 1.7.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/api/psi4.core.has_local_option_changed-1.html:673,update,updated,673,psi4manual/1.2.1/api/psi4.core.has_local_option_changed-1.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/api/psi4.core.has_local_option_changed-1.html,2,['update'],['updated']
Deployability,"﻿. has_local_option_changed. Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. has_local_option_changed¶. psi4.core.has_local_option_changed(arg0: str, arg1: str) → bool¶; Returns boolean for whether the keyword arg2 has been touched in the scope of the specified module arg1, by either user or code. Notwithstanding, code is written such that in practice, this returns whether the option has been touched in the module scope by the user. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2019, The Psi4 Project.; Last updated on Wednesday, 15 May 2019 08:49PM.; Created using Sphinx 1.8.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/api/psi4.core.has_local_option_changed-1.html:673,update,updated,673,psi4manual/1.3.2/api/psi4.core.has_local_option_changed-1.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/api/psi4.core.has_local_option_changed-1.html,2,['update'],['updated']
Deployability,"﻿. has_local_option_changed. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; has_local_option_changed. has_local_option_changed¶. psi4.core.has_local_option_changed(module: str, key: str) → bool¶; Whether keyword key value has been touched at module scope. Has it been touched in the scope of the specified module by either user or code.Notwithstanding, code is written such that in practice, this returns whether the option has been touched in the module scope by the user. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; has_local_option_changed. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/api/psi4.core.has_local_option_changed-1.html:733,update,updated,733,psi4manual/1.4.0/api/psi4.core.has_local_option_changed-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/api/psi4.core.has_local_option_changed-1.html,2,['update'],['updated']
Deployability,"﻿. has_local_option_changed. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; has_local_option_changed. has_local_option_changed¶. psi4.core.has_local_option_changed(module: str, key: str) → bool¶; Whether keyword key value has been touched at module scope. Has it been touched in the scope of the specified module by either user or code.Notwithstanding, code is written such that in practice, this returns whether the option has been touched in the module scope by the user. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; has_local_option_changed. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/api/psi4.core.has_local_option_changed-1.html:733,update,updated,733,psi4manual/1.5.0/api/psi4.core.has_local_option_changed-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/api/psi4.core.has_local_option_changed-1.html,2,['update'],['updated']
Deployability,"﻿. has_local_option_changed. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; has_local_option_changed. has_local_option_changed¶. psi4.core.has_local_option_changed(module: str, key: str) → bool¶; Whether keyword key value has been touched at module scope. Has it been touched in the scope of the specified module by either user or code.Notwithstanding, code is written such that in practice, this returns whether the option has been touched in the module scope by the user. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; has_local_option_changed. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/api/psi4.core.has_local_option_changed.html:733,update,updated,733,psi4manual/1.6.x/api/psi4.core.has_local_option_changed.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/api/psi4.core.has_local_option_changed.html,1,['update'],['updated']
Deployability,"﻿. has_local_option_changed. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; has_local_option_changed. has_local_option_changed¶. psi4.core.has_local_option_changed(module: str, key: str) → bool¶; Whether keyword key value has been touched at module scope. Has it been touched in the scope of the specified module by either user or code.Notwithstanding, code is written such that in practice, this returns whether the option has been touched in the module scope by the user. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; has_local_option_changed. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/api/psi4.core.has_local_option_changed.html:738,update,updated,738,psi4manual/1.7.x/api/psi4.core.has_local_option_changed.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/api/psi4.core.has_local_option_changed.html,1,['update'],['updated']
Deployability,"﻿. has_local_option_changed. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; has_local_option_changed. has_local_option_changed¶. psi4.core.has_local_option_changed(module: str, key: str) → bool¶; Whether keyword key value has been touched at module scope. Has it been touched in the scope of the specified module by either user or code.Notwithstanding, code is written such that in practice, this returns whether the option has been touched in the module scope by the user. table of contents. has_local_option_changed; has_local_option_changed(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; has_local_option_changed. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/api/psi4.core.has_local_option_changed.html:815,update,updated,815,psi4manual/1.8.x/api/psi4.core.has_local_option_changed.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/api/psi4.core.has_local_option_changed.html,1,['update'],['updated']
Deployability,"﻿. has_local_option_changed. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; has_local_option_changed. has_local_option_changed¶. psi4.core.has_local_option_changed(module: str, key: str) → bool¶; Whether keyword key value has been touched at module scope. Has it been touched in the scope of the specified module by either user or code.Notwithstanding, code is written such that in practice, this returns whether the option has been touched in the module scope by the user. table of contents. has_local_option_changed; has_local_option_changed(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; has_local_option_changed. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/api/psi4.core.has_local_option_changed.html:815,update,updated,815,psi4manual/1.9.x/api/psi4.core.has_local_option_changed.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/api/psi4.core.has_local_option_changed.html,1,['update'],['updated']
Deployability,"﻿. has_option_changed. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; has_option_changed. has_option_changed¶. psi4.core.has_option_changed(module: str, key: str) → bool¶; Whether keyword key value has been touched or is default. Has it been touched either locally to the specified module or globally, by either user or code. Notwithstanding, code is written such that in practice, this returns whether the option has been touched by the user. table of contents. has_option_changed; has_option_changed(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; has_option_changed. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/api/psi4.core.has_option_changed.html:781,update,updated,781,psi4manual/master/api/psi4.core.has_option_changed.html,https://psicode.org,https://psicode.org/psi4manual/master/api/psi4.core.has_option_changed.html,1,['update'],['updated']
Deployability,"﻿. has_option_changed. Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. has_option_changed¶. psi4.core.has_option_changed(arg0: str, arg1: str) → bool¶; Returns boolean for whether the option arg2 has been touched either locally to the specified module arg1 or globally, by either user or code. Notwithstanding, code is written such that in practice, this returns whether the option has been touched by the user. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2018, The Psi4 Project.; Last updated on Wednesday, 25 July 2018 04:21AM.; Created using Sphinx 1.7.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/api/psi4.core.has_option_changed-1.html:648,update,updated,648,psi4manual/1.2.1/api/psi4.core.has_option_changed-1.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/api/psi4.core.has_option_changed-1.html,2,['update'],['updated']
Deployability,"﻿. has_option_changed. Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. has_option_changed¶. psi4.core.has_option_changed(arg0: str, arg1: str) → bool¶; Returns boolean for whether the option arg2 has been touched either locally to the specified module arg1 or globally, by either user or code. Notwithstanding, code is written such that in practice, this returns whether the option has been touched by the user. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2019, The Psi4 Project.; Last updated on Wednesday, 15 May 2019 08:49PM.; Created using Sphinx 1.8.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/api/psi4.core.has_option_changed-1.html:648,update,updated,648,psi4manual/1.3.2/api/psi4.core.has_option_changed-1.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/api/psi4.core.has_option_changed-1.html,2,['update'],['updated']
Deployability,"﻿. has_option_changed. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; has_option_changed. has_option_changed¶. psi4.core.has_option_changed(module: str, key: str) → bool¶; Whether keyword key value has been touched or is default. Has it been touched either locally to the specified module or globally, by either user or code. Notwithstanding, code is written such that in practice, this returns whether the option has been touched by the user. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; has_option_changed. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/api/psi4.core.has_option_changed-1.html:697,update,updated,697,psi4manual/1.4.0/api/psi4.core.has_option_changed-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/api/psi4.core.has_option_changed-1.html,2,['update'],['updated']
Deployability,"﻿. has_option_changed. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; has_option_changed. has_option_changed¶. psi4.core.has_option_changed(module: str, key: str) → bool¶; Whether keyword key value has been touched or is default. Has it been touched either locally to the specified module or globally, by either user or code. Notwithstanding, code is written such that in practice, this returns whether the option has been touched by the user. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; has_option_changed. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/api/psi4.core.has_option_changed-1.html:697,update,updated,697,psi4manual/1.5.0/api/psi4.core.has_option_changed-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/api/psi4.core.has_option_changed-1.html,2,['update'],['updated']
Deployability,"﻿. has_option_changed. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; has_option_changed. has_option_changed¶. psi4.core.has_option_changed(module: str, key: str) → bool¶; Whether keyword key value has been touched or is default. Has it been touched either locally to the specified module or globally, by either user or code. Notwithstanding, code is written such that in practice, this returns whether the option has been touched by the user. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; has_option_changed. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/api/psi4.core.has_option_changed.html:697,update,updated,697,psi4manual/1.6.x/api/psi4.core.has_option_changed.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/api/psi4.core.has_option_changed.html,1,['update'],['updated']
Deployability,"﻿. has_option_changed. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; has_option_changed. has_option_changed¶. psi4.core.has_option_changed(module: str, key: str) → bool¶; Whether keyword key value has been touched or is default. Has it been touched either locally to the specified module or globally, by either user or code. Notwithstanding, code is written such that in practice, this returns whether the option has been touched by the user. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; has_option_changed. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/api/psi4.core.has_option_changed.html:702,update,updated,702,psi4manual/1.7.x/api/psi4.core.has_option_changed.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/api/psi4.core.has_option_changed.html,1,['update'],['updated']
Deployability,"﻿. has_option_changed. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; has_option_changed. has_option_changed¶. psi4.core.has_option_changed(module: str, key: str) → bool¶; Whether keyword key value has been touched or is default. Has it been touched either locally to the specified module or globally, by either user or code. Notwithstanding, code is written such that in practice, this returns whether the option has been touched by the user. table of contents. has_option_changed; has_option_changed(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; has_option_changed. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/api/psi4.core.has_option_changed.html:767,update,updated,767,psi4manual/1.8.x/api/psi4.core.has_option_changed.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/api/psi4.core.has_option_changed.html,1,['update'],['updated']
Deployability,"﻿. has_option_changed. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; has_option_changed. has_option_changed¶. psi4.core.has_option_changed(module: str, key: str) → bool¶; Whether keyword key value has been touched or is default. Has it been touched either locally to the specified module or globally, by either user or code. Notwithstanding, code is written such that in practice, this returns whether the option has been touched by the user. table of contents. has_option_changed; has_option_changed(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; has_option_changed. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/api/psi4.core.has_option_changed.html:767,update,updated,767,psi4manual/1.9.x/api/psi4.core.has_option_changed.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/api/psi4.core.has_option_changed.html,1,['update'],['updated']
Deployability,"﻿. has_scalar_variable. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; has_scalar_variable. has_scalar_variable¶. psi4.core.has_scalar_variable(key: str) → bool¶; Is the double QCVariable key (case-insensitive) set? Prefer has_variable(). table of contents. has_scalar_variable; has_scalar_variable(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; has_scalar_variable. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/api/psi4.core.has_scalar_variable.html:579,update,updated,579,psi4manual/master/api/psi4.core.has_scalar_variable.html,https://psicode.org,https://psicode.org/psi4manual/master/api/psi4.core.has_scalar_variable.html,1,['update'],['updated']
Deployability,"﻿. has_scalar_variable. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; has_scalar_variable. has_scalar_variable¶. psi4.core.has_scalar_variable(key: str) → bool¶; Is the double QCVariable key (case-insensitive) set? Prefer has_variable(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; has_scalar_variable. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/api/psi4.core.has_scalar_variable-1.html:493,update,updated,493,psi4manual/1.4.0/api/psi4.core.has_scalar_variable-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/api/psi4.core.has_scalar_variable-1.html,2,['update'],['updated']
Deployability,"﻿. has_scalar_variable. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; has_scalar_variable. has_scalar_variable¶. psi4.core.has_scalar_variable(key: str) → bool¶; Is the double QCVariable key (case-insensitive) set? Prefer has_variable(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; has_scalar_variable. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/api/psi4.core.has_scalar_variable-1.html:493,update,updated,493,psi4manual/1.5.0/api/psi4.core.has_scalar_variable-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/api/psi4.core.has_scalar_variable-1.html,2,['update'],['updated']
Deployability,"﻿. has_scalar_variable. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; has_scalar_variable. has_scalar_variable¶. psi4.core.has_scalar_variable(key: str) → bool¶; Is the double QCVariable key (case-insensitive) set? Prefer has_variable(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; has_scalar_variable. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/api/psi4.core.has_scalar_variable.html:493,update,updated,493,psi4manual/1.6.x/api/psi4.core.has_scalar_variable.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/api/psi4.core.has_scalar_variable.html,1,['update'],['updated']
Deployability,"﻿. has_scalar_variable. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; has_scalar_variable. has_scalar_variable¶. psi4.core.has_scalar_variable(key: str) → bool¶; Is the double QCVariable key (case-insensitive) set? Prefer has_variable(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; has_scalar_variable. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/api/psi4.core.has_scalar_variable.html:498,update,updated,498,psi4manual/1.7.x/api/psi4.core.has_scalar_variable.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/api/psi4.core.has_scalar_variable.html,1,['update'],['updated']
Deployability,"﻿. has_scalar_variable. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; has_scalar_variable. has_scalar_variable¶. psi4.core.has_scalar_variable(key: str) → bool¶; Is the double QCVariable key (case-insensitive) set? Prefer has_variable(). table of contents. has_scalar_variable; has_scalar_variable(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; has_scalar_variable. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/api/psi4.core.has_scalar_variable.html:565,update,updated,565,psi4manual/1.8.x/api/psi4.core.has_scalar_variable.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/api/psi4.core.has_scalar_variable.html,1,['update'],['updated']
Deployability,"﻿. has_scalar_variable. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; has_scalar_variable. has_scalar_variable¶. psi4.core.has_scalar_variable(key: str) → bool¶; Is the double QCVariable key (case-insensitive) set? Prefer has_variable(). table of contents. has_scalar_variable; has_scalar_variable(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; has_scalar_variable. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/api/psi4.core.has_scalar_variable.html:565,update,updated,565,psi4manual/1.9.x/api/psi4.core.has_scalar_variable.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/api/psi4.core.has_scalar_variable.html,1,['update'],['updated']
Deployability,"﻿. has_scalar_variable. Navigation. Index. modules    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. has_scalar_variable¶. psi4.core.has_scalar_variable(arg0: str) → bool¶; Is the double QC variable (case-insensitive) set?. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2019, The Psi4 Project.; Last updated on Wednesday, 15 May 2019 08:49PM.; Created using Sphinx 1.8.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/api/psi4.core.has_scalar_variable-1.html:421,update,updated,421,psi4manual/1.3.2/api/psi4.core.has_scalar_variable-1.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/api/psi4.core.has_scalar_variable-1.html,2,['update'],['updated']
Deployability,"﻿. has_variable. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; has_variable. has_variable¶. psi4.core.has_variable(key)¶; Whether scalar or array QCVariable key has been set in global memory. Parameters:; key (str) – Case-insensitive key to global double or Matrix; storage maps. Return type:; bool. table of contents. has_variable; has_variable(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; has_variable. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/api/psi4.core.has_variable.html:620,update,updated,620,psi4manual/master/api/psi4.core.has_variable.html,https://psicode.org,https://psicode.org/psi4manual/master/api/psi4.core.has_variable.html,1,['update'],['updated']
Deployability,"﻿. has_variable. Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. has_variable¶. psi4.core.has_variable(arg0: str) → bool¶; Returns true if the PSI variable exists/is set. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2018, The Psi4 Project.; Last updated on Wednesday, 25 July 2018 04:21AM.; Created using Sphinx 1.7.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/api/psi4.core.has_variable-1.html:407,update,updated,407,psi4manual/1.2.1/api/psi4.core.has_variable-1.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/api/psi4.core.has_variable-1.html,2,['update'],['updated']
Deployability,"﻿. has_variable. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; has_variable. has_variable¶. psi4.core.has_variable(key)¶; Whether scalar or array QCVariable key has been set in global memory. Return type; bool. Parameters; key (str) – . «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; has_variable. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/api/psi4.core.has_variable-1.html:485,update,updated,485,psi4manual/1.4.0/api/psi4.core.has_variable-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/api/psi4.core.has_variable-1.html,2,['update'],['updated']
Deployability,"﻿. has_variable. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; has_variable. has_variable¶. psi4.core.has_variable(key)¶; Whether scalar or array QCVariable key has been set in global memory. Return type; bool. Parameters; key (str) – . «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; has_variable. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/api/psi4.core.has_variable-1.html:485,update,updated,485,psi4manual/1.5.0/api/psi4.core.has_variable-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/api/psi4.core.has_variable-1.html,2,['update'],['updated']
Deployability,"﻿. has_variable. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; has_variable. has_variable¶. psi4.core.has_variable(key)¶; Whether scalar or array QCVariable key has been set in global memory. Return type; bool. Parameters; key (str) – . «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; has_variable. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/api/psi4.core.has_variable.html:485,update,updated,485,psi4manual/1.6.x/api/psi4.core.has_variable.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/api/psi4.core.has_variable.html,1,['update'],['updated']
Deployability,"﻿. has_variable. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; has_variable. has_variable¶. psi4.core.has_variable(key)¶; Whether scalar or array QCVariable key; has been set in global memory. Parameters:; key (str) – Case-insensitive key to global double or Matrix; storage maps. Return type:; bool. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; has_variable. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/api/psi4.core.has_variable.html:554,update,updated,554,psi4manual/1.7.x/api/psi4.core.has_variable.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/api/psi4.core.has_variable.html,1,['update'],['updated']
Deployability,"﻿. has_variable. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; has_variable. has_variable¶. psi4.core.has_variable(key)¶; Whether scalar or array QCVariable key; has been set in global memory. Parameters:; key (str) – Case-insensitive key to global double or Matrix; storage maps. Return type:; bool. table of contents. has_variable; has_variable(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; has_variable. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/api/psi4.core.has_variable.html:607,update,updated,607,psi4manual/1.8.x/api/psi4.core.has_variable.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/api/psi4.core.has_variable.html,1,['update'],['updated']
Deployability,"﻿. has_variable. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; has_variable. has_variable¶. psi4.core.has_variable(key)¶; Whether scalar or array QCVariable key has been set in global memory.; :rtype: bool. Parameters:; key (str) – Case-insensitive key to global double or Matrix; storage maps. Return type:; bool. table of contents. has_variable; has_variable(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; has_variable. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/api/psi4.core.has_variable.html:621,update,updated,621,psi4manual/1.9.x/api/psi4.core.has_variable.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/api/psi4.core.has_variable.html,1,['update'],['updated']
Deployability,"﻿. hessian. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; hessian. hessian¶. psi4.driver.hessian(name, **kwargs)[source]¶; Function complementary to frequency(). Computes force; constants, deciding analytic, finite difference of gradients, or; finite difference of energies. Returns:; Matrix – Total non-mass-weighted electronic Hessian in Hartrees/Bohr/Bohr. Returns:; (Matrix, Wavefunction) – Hessian and wavefunction when return_wfn specified. Examples:. >>> # [1] Frequency calculation without thermochemical analysis; >>> hessian('mp3'). >>> # [2] Frequency calc w/o thermo analysis getting the Hessian; >>> # in file, core.Matrix, and np.array forms; >>> set hessian_write on; >>> H, wfn = hessian('ccsd', return_wfn=True); >>> wfn.hessian().print_out(); >>> np.array(H). table of contents. hessian; hessian(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; hessian. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/api/psi4.driver.hessian.html:1083,update,updated,1083,psi4manual/master/api/psi4.driver.hessian.html,https://psicode.org,https://psicode.org/psi4manual/master/api/psi4.driver.hessian.html,1,['update'],['updated']
Deployability,"﻿. hessian. Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. hessian¶. psi4.driver.hessian(name, **kwargs)[source]¶; Function complementary to frequency(). Computes force; constants, deciding analytic, finite difference of gradients, or; finite difference of energies. Returns:Matrix – Total non-mass-weighted electronic Hessian in Hartrees/Bohr/Bohr. Returns:(Matrix, Wavefunction) – Hessian and wavefunction when return_wfn specified. Examples:. 1; 2>>> # [1] Frequency calculation without thermochemical analysis; >>> hessian('mp3'). 1; 2; 3; 4; 5; 6>>> # [2] Frequency calc w/o thermo analysis getting the Hessian; >>> # in file, core.Matrix, and np.array forms; >>> set hessian_write on; >>> H, wfn = hessian('ccsd', return_wfn=True); >>> wfn.hessian().print_out(); >>> np.array(H). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2018, The Psi4 Project.; Last updated on Wednesday, 25 July 2018 04:21AM.; Created using Sphinx 1.7.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/api/psi4.driver.hessian-1.html:1023,update,updated,1023,psi4manual/1.2.1/api/psi4.driver.hessian-1.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/api/psi4.driver.hessian-1.html,2,['update'],['updated']
Deployability,"﻿. hessian. Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. hessian¶. psi4.driver.hessian(name, **kwargs)[source]¶; Function complementary to frequency(). Computes force; constants, deciding analytic, finite difference of gradients, or; finite difference of energies. Returns:Matrix – Total non-mass-weighted electronic Hessian in Hartrees/Bohr/Bohr. Returns:(Matrix, Wavefunction) – Hessian and wavefunction when return_wfn specified. Examples:. >>> # [1] Frequency calculation without thermochemical analysis; >>> hessian('mp3'). >>> # [2] Frequency calc w/o thermo analysis getting the Hessian; >>> # in file, core.Matrix, and np.array forms; >>> set hessian_write on; >>> H, wfn = hessian('ccsd', return_wfn=True); >>> wfn.hessian().print_out(); >>> np.array(H). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2019, The Psi4 Project.; Last updated on Wednesday, 15 May 2019 08:49PM.; Created using Sphinx 1.8.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/api/psi4.driver.hessian-1.html:1003,update,updated,1003,psi4manual/1.3.2/api/psi4.driver.hessian-1.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/api/psi4.driver.hessian-1.html,2,['update'],['updated']
Deployability,"﻿. hessian. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; hessian. hessian¶. psi4.driver.hessian(name, **kwargs)[source]¶; Function complementary to frequency(). Computes force; constants, deciding analytic, finite difference of gradients, or; finite difference of energies. Returns; Matrix – Total non-mass-weighted electronic Hessian in Hartrees/Bohr/Bohr. Returns; (Matrix, Wavefunction) – Hessian and wavefunction when return_wfn specified. Examples. >>> # [1] Frequency calculation without thermochemical analysis; >>> hessian('mp3'). >>> # [2] Frequency calc w/o thermo analysis getting the Hessian; >>> # in file, core.Matrix, and np.array forms; >>> set hessian_write on; >>> H, wfn = hessian('ccsd', return_wfn=True); >>> wfn.hessian().print_out(); >>> np.array(H). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; hessian. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/api/psi4.driver.hessian-1.html:1018,update,updated,1018,psi4manual/1.4.0/api/psi4.driver.hessian-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/api/psi4.driver.hessian-1.html,2,['update'],['updated']
Deployability,"﻿. hessian. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; hessian. hessian¶. psi4.driver.hessian(name, **kwargs)[source]¶; Function complementary to frequency(). Computes force; constants, deciding analytic, finite difference of gradients, or; finite difference of energies. Returns; Matrix – Total non-mass-weighted electronic Hessian in Hartrees/Bohr/Bohr. Returns; (Matrix, Wavefunction) – Hessian and wavefunction when return_wfn specified. Examples. >>> # [1] Frequency calculation without thermochemical analysis; >>> hessian('mp3'). >>> # [2] Frequency calc w/o thermo analysis getting the Hessian; >>> # in file, core.Matrix, and np.array forms; >>> set hessian_write on; >>> H, wfn = hessian('ccsd', return_wfn=True); >>> wfn.hessian().print_out(); >>> np.array(H). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; hessian. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/api/psi4.driver.hessian-1.html:1018,update,updated,1018,psi4manual/1.5.0/api/psi4.driver.hessian-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/api/psi4.driver.hessian-1.html,2,['update'],['updated']
Deployability,"﻿. hessian. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; hessian. hessian¶. psi4.driver.hessian(name, **kwargs)[source]¶; Function complementary to frequency(). Computes force; constants, deciding analytic, finite difference of gradients, or; finite difference of energies. Returns; Matrix – Total non-mass-weighted electronic Hessian in Hartrees/Bohr/Bohr. Returns; (Matrix, Wavefunction) – Hessian and wavefunction when return_wfn specified. Examples. >>> # [1] Frequency calculation without thermochemical analysis; >>> hessian('mp3'). >>> # [2] Frequency calc w/o thermo analysis getting the Hessian; >>> # in file, core.Matrix, and np.array forms; >>> set hessian_write on; >>> H, wfn = hessian('ccsd', return_wfn=True); >>> wfn.hessian().print_out(); >>> np.array(H). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; hessian. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/api/psi4.driver.hessian.html:1018,update,updated,1018,psi4manual/1.6.x/api/psi4.driver.hessian.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/api/psi4.driver.hessian.html,1,['update'],['updated']
Deployability,"﻿. hessian. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; hessian. hessian¶. psi4.driver.hessian(name, **kwargs)[source]¶; Function complementary to frequency(). Computes force; constants, deciding analytic, finite difference of gradients, or; finite difference of energies. Returns:; Matrix – Total non-mass-weighted electronic Hessian in Hartrees/Bohr/Bohr. Returns:; (Matrix, Wavefunction) – Hessian and wavefunction when return_wfn specified. Examples:. >>> # [1] Frequency calculation without thermochemical analysis; >>> hessian('mp3'). >>> # [2] Frequency calc w/o thermo analysis getting the Hessian; >>> # in file, core.Matrix, and np.array forms; >>> set hessian_write on; >>> H, wfn = hessian('ccsd', return_wfn=True); >>> wfn.hessian().print_out(); >>> np.array(H). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; hessian. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/api/psi4.driver.hessian.html:1026,update,updated,1026,psi4manual/1.7.x/api/psi4.driver.hessian.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/api/psi4.driver.hessian.html,1,['update'],['updated']
Deployability,"﻿. hessian. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; hessian. hessian¶. psi4.driver.hessian(name, **kwargs)[source]¶; Function complementary to frequency(). Computes force; constants, deciding analytic, finite difference of gradients, or; finite difference of energies. Returns:; Matrix – Total non-mass-weighted electronic Hessian in Hartrees/Bohr/Bohr. Returns:; (Matrix, Wavefunction) – Hessian and wavefunction when return_wfn specified. Examples:. >>> # [1] Frequency calculation without thermochemical analysis; >>> hessian('mp3'). >>> # [2] Frequency calc w/o thermo analysis getting the Hessian; >>> # in file, core.Matrix, and np.array forms; >>> set hessian_write on; >>> H, wfn = hessian('ccsd', return_wfn=True); >>> wfn.hessian().print_out(); >>> np.array(H). table of contents. hessian; hessian(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; hessian. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/api/psi4.driver.hessian.html:1069,update,updated,1069,psi4manual/1.8.x/api/psi4.driver.hessian.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/api/psi4.driver.hessian.html,1,['update'],['updated']
Deployability,"﻿. hessian. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; hessian. hessian¶. psi4.driver.hessian(name, **kwargs)[source]¶; Function complementary to frequency(). Computes force; constants, deciding analytic, finite difference of gradients, or; finite difference of energies. Returns:; Matrix – Total non-mass-weighted electronic Hessian in Hartrees/Bohr/Bohr. Returns:; (Matrix, Wavefunction) – Hessian and wavefunction when return_wfn specified. Examples:. >>> # [1] Frequency calculation without thermochemical analysis; >>> hessian('mp3'). >>> # [2] Frequency calc w/o thermo analysis getting the Hessian; >>> # in file, core.Matrix, and np.array forms; >>> set hessian_write on; >>> H, wfn = hessian('ccsd', return_wfn=True); >>> wfn.hessian().print_out(); >>> np.array(H). table of contents. hessian; hessian(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; hessian. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/api/psi4.driver.hessian.html:1069,update,updated,1069,psi4manual/1.9.x/api/psi4.driver.hessian.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/api/psi4.driver.hessian.html,1,['update'],['updated']
Deployability,"﻿. hessian_symmetrize. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Psithon Functions: Invoking a Calculation; Harmonic Vibrational Analysis and Visualization of Normal Modes — frequency() and hessian(); hessian_symmetrize. hessian_symmetrize¶. psi4.driver.qcdb.vib.hessian_symmetrize(hess, mol)[source]¶; Apply Abelian symmetry of mol to Hessian hess. Parameters:. hess (ndarray) – (3 * nat, 3 * nat) Hessian array perhaps with jitter unbecoming a symmetric molecule.; mol (Molecule) – Molecule at which Hessian computed. Returns:; (3 * nat, 3 * nat) symmetrized Hessian array. Return type:; numpy.ndarray. table of contents. hessian_symmetrize; hessian_symmetrize(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Psithon Functions: Invoking a Calculation; Harmonic Vibrational Analysis and Visualization of Normal Modes — frequency() and hessian(); hessian_symmetrize. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/api/psi4.driver.qcdb.vib.hessian_symmetrize.html:1015,update,updated,1015,psi4manual/master/api/psi4.driver.qcdb.vib.hessian_symmetrize.html,https://psicode.org,https://psicode.org/psi4manual/master/api/psi4.driver.qcdb.vib.hessian_symmetrize.html,1,['update'],['updated']
Deployability,"﻿. hessian_symmetrize. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Psithon Functions: Invoking a Calculation; Harmonic Vibrational Analysis and Visualization of Normal Modes — frequency() and hessian(); hessian_symmetrize. hessian_symmetrize¶. psi4.driver.qcdb.vib.hessian_symmetrize(hess, mol)[source]¶; Apply Abelian symmetry of mol to Hessian hess. Parameters. hess (ndarray) – (3 * nat, 3 * nat) Hessian array perhaps with jitter unbecoming a symmetric molecule.; mol (Molecule) – Molecule at which Hessian computed. Returns; (3 * nat, 3 * nat) symmetrized Hessian array. Return type; numpy.ndarray. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Psithon Functions: Invoking a Calculation; Harmonic Vibrational Analysis and Visualization of Normal Modes — frequency() and hessian(); hessian_symmetrize. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/api/psi4.driver.qcdb.vib.hessian_symmetrize-1.html:928,update,updated,928,psi4manual/1.4.0/api/psi4.driver.qcdb.vib.hessian_symmetrize-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/api/psi4.driver.qcdb.vib.hessian_symmetrize-1.html,2,['update'],['updated']
Deployability,"﻿. hessian_symmetrize. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Psithon Functions: Invoking a Calculation; Harmonic Vibrational Analysis and Visualization of Normal Modes — frequency() and hessian(); hessian_symmetrize. hessian_symmetrize¶. psi4.driver.qcdb.vib.hessian_symmetrize(hess, mol)[source]¶; Apply Abelian symmetry of mol to Hessian hess. Parameters. hess (ndarray) – (3 * nat, 3 * nat) Hessian array perhaps with jitter unbecoming a symmetric molecule.; mol (Molecule) – Molecule at which Hessian computed. Returns; (3 * nat, 3 * nat) symmetrized Hessian array. Return type; numpy.ndarray. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Psithon Functions: Invoking a Calculation; Harmonic Vibrational Analysis and Visualization of Normal Modes — frequency() and hessian(); hessian_symmetrize. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/api/psi4.driver.qcdb.vib.hessian_symmetrize-1.html:928,update,updated,928,psi4manual/1.5.0/api/psi4.driver.qcdb.vib.hessian_symmetrize-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/api/psi4.driver.qcdb.vib.hessian_symmetrize-1.html,2,['update'],['updated']
Deployability,"﻿. hessian_symmetrize. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Psithon Functions: Invoking a Calculation; Harmonic Vibrational Analysis and Visualization of Normal Modes — frequency() and hessian(); hessian_symmetrize. hessian_symmetrize¶. psi4.driver.qcdb.vib.hessian_symmetrize(hess, mol)[source]¶; Apply Abelian symmetry of mol to Hessian hess. Parameters. hess (ndarray) – (3 * nat, 3 * nat) Hessian array perhaps with jitter unbecoming a symmetric molecule.; mol (Molecule) – Molecule at which Hessian computed. Returns; (3 * nat, 3 * nat) symmetrized Hessian array. Return type; numpy.ndarray. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Psithon Functions: Invoking a Calculation; Harmonic Vibrational Analysis and Visualization of Normal Modes — frequency() and hessian(); hessian_symmetrize. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/api/psi4.driver.qcdb.vib.hessian_symmetrize.html:928,update,updated,928,psi4manual/1.6.x/api/psi4.driver.qcdb.vib.hessian_symmetrize.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/api/psi4.driver.qcdb.vib.hessian_symmetrize.html,1,['update'],['updated']
Deployability,"﻿. hessian_symmetrize. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Psithon Functions: Invoking a Calculation; Harmonic Vibrational Analysis and Visualization of Normal Modes — frequency() and hessian(); hessian_symmetrize. hessian_symmetrize¶. psi4.driver.qcdb.vib.hessian_symmetrize(hess, mol)[source]¶; Apply Abelian symmetry of mol to Hessian hess. Parameters:. hess (ndarray) – (3 * nat, 3 * nat) Hessian array perhaps with jitter unbecoming a symmetric molecule.; mol (Molecule) – Molecule at which Hessian computed. Returns:; (3 * nat, 3 * nat) symmetrized Hessian array. Return type:; numpy.ndarray. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Psithon Functions: Invoking a Calculation; Harmonic Vibrational Analysis and Visualization of Normal Modes — frequency() and hessian(); hessian_symmetrize. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/api/psi4.driver.qcdb.vib.hessian_symmetrize.html:936,update,updated,936,psi4manual/1.7.x/api/psi4.driver.qcdb.vib.hessian_symmetrize.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/api/psi4.driver.qcdb.vib.hessian_symmetrize.html,1,['update'],['updated']
Deployability,"﻿. hessian_symmetrize. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Psithon Functions: Invoking a Calculation; Harmonic Vibrational Analysis and Visualization of Normal Modes — frequency() and hessian(); hessian_symmetrize. hessian_symmetrize¶. psi4.driver.qcdb.vib.hessian_symmetrize(hess, mol)[source]¶; Apply Abelian symmetry of mol to Hessian hess. Parameters:. hess (ndarray) – (3 * nat, 3 * nat) Hessian array perhaps with jitter unbecoming a symmetric molecule.; mol (Molecule) – Molecule at which Hessian computed. Returns:; (3 * nat, 3 * nat) symmetrized Hessian array. Return type:; numpy.ndarray. table of contents. hessian_symmetrize; hessian_symmetrize(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Psithon Functions: Invoking a Calculation; Harmonic Vibrational Analysis and Visualization of Normal Modes — frequency() and hessian(); hessian_symmetrize. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/api/psi4.driver.qcdb.vib.hessian_symmetrize.html:1001,update,updated,1001,psi4manual/1.8.x/api/psi4.driver.qcdb.vib.hessian_symmetrize.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/api/psi4.driver.qcdb.vib.hessian_symmetrize.html,1,['update'],['updated']
Deployability,"﻿. hessian_symmetrize. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Psithon Functions: Invoking a Calculation; Harmonic Vibrational Analysis and Visualization of Normal Modes — frequency() and hessian(); hessian_symmetrize. hessian_symmetrize¶. psi4.driver.qcdb.vib.hessian_symmetrize(hess, mol)[source]¶; Apply Abelian symmetry of mol to Hessian hess. Parameters:. hess (ndarray) – (3 * nat, 3 * nat) Hessian array perhaps with jitter unbecoming a symmetric molecule.; mol (Molecule) – Molecule at which Hessian computed. Returns:; (3 * nat, 3 * nat) symmetrized Hessian array. Return type:; numpy.ndarray. table of contents. hessian_symmetrize; hessian_symmetrize(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Psithon Functions: Invoking a Calculation; Harmonic Vibrational Analysis and Visualization of Normal Modes — frequency() and hessian(); hessian_symmetrize. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/api/psi4.driver.qcdb.vib.hessian_symmetrize.html:1001,update,updated,1001,psi4manual/1.9.x/api/psi4.driver.qcdb.vib.hessian_symmetrize.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/api/psi4.driver.qcdb.vib.hessian_symmetrize.html,1,['update'],['updated']
Deployability,"﻿. hold_options_state. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; hold_options_state. hold_options_state¶. psi4.driver.p4util.hold_options_state()[source]¶; Return a context manager that will collect the current state of; Process:environment.options on entry to the with-statement and clear; and restore the collected keywords state when exiting the with-statement. Return type:; Iterator[None]. table of contents. hold_options_state; hold_options_state(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; hold_options_state. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/api/psi4.driver.p4util.hold_options_state.html:737,update,updated,737,psi4manual/master/api/psi4.driver.p4util.hold_options_state.html,https://psicode.org,https://psicode.org/psi4manual/master/api/psi4.driver.p4util.hold_options_state.html,1,['update'],['updated']
Deployability,"﻿. hold_options_state. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; hold_options_state. hold_options_state¶. psi4.driver.p4util.hold_options_state()[source]¶; Return a context manager that will collect the current state of; Process:environment.options on entry to the with-statement and clear; and restore the collected keywords state when exiting the with-statement. Return type:; Iterator[None]. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; hold_options_state. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/api/psi4.driver.p4util.hold_options_state.html:658,update,updated,658,psi4manual/1.7.x/api/psi4.driver.p4util.hold_options_state.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/api/psi4.driver.p4util.hold_options_state.html,1,['update'],['updated']
Deployability,"﻿. hold_options_state. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; hold_options_state. hold_options_state¶. psi4.driver.p4util.hold_options_state()[source]¶; Return a context manager that will collect the current state of; Process:environment.options on entry to the with-statement and clear; and restore the collected keywords state when exiting the with-statement. Return type:; Iterator[None]. table of contents. hold_options_state; hold_options_state(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; hold_options_state. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/api/psi4.driver.p4util.hold_options_state.html:723,update,updated,723,psi4manual/1.8.x/api/psi4.driver.p4util.hold_options_state.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/api/psi4.driver.p4util.hold_options_state.html,1,['update'],['updated']
Deployability,"﻿. hold_options_state. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; hold_options_state. hold_options_state¶. psi4.driver.p4util.hold_options_state()[source]¶; Return a context manager that will collect the current state of; :rtype: Iterator[None]; Process:environment.options on entry to the with-statement and clear; and restore the collected keywords state when exiting the with-statement. Return type:; Iterator[None]. table of contents. hold_options_state; hold_options_state(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; hold_options_state. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/api/psi4.driver.p4util.hold_options_state.html:747,update,updated,747,psi4manual/1.9.x/api/psi4.driver.p4util.hold_options_state.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/api/psi4.driver.p4util.hold_options_state.html,1,['update'],['updated']
Deployability,"﻿. import_ignorecase. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; import_ignorecase. import_ignorecase¶. psi4.driver.p4util.import_ignorecase(module)[source]¶; Import loader for module in any possible lettercase permutation. Parameters:; module (str) – Name of module with uncertain case. Returns:; Module object. Return type:; types.ModuleType. table of contents. import_ignorecase; import_ignorecase(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; import_ignorecase. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/api/psi4.driver.p4util.import_ignorecase.html:683,update,updated,683,psi4manual/master/api/psi4.driver.p4util.import_ignorecase.html,https://psicode.org,https://psicode.org/psi4manual/master/api/psi4.driver.p4util.import_ignorecase.html,1,['update'],['updated']
Deployability,"﻿. import_ignorecase. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; import_ignorecase. import_ignorecase¶. psi4.driver.p4util.import_ignorecase(module)[source]¶; Import loader for module in any possible lettercase permutation. Parameters:; module (str) – Name of module with uncertain case. Returns:; Module object. Return type:; types.ModuleType. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; import_ignorecase. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/api/psi4.driver.p4util.import_ignorecase.html:606,update,updated,606,psi4manual/1.7.x/api/psi4.driver.p4util.import_ignorecase.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/api/psi4.driver.p4util.import_ignorecase.html,1,['update'],['updated']
Deployability,"﻿. import_ignorecase. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; import_ignorecase. import_ignorecase¶. psi4.driver.p4util.import_ignorecase(module)[source]¶; Import loader for module in any possible lettercase permutation. Parameters:; module (str) – Name of module with uncertain case. Returns:; Module object. Return type:; types.ModuleType. table of contents. import_ignorecase; import_ignorecase(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; import_ignorecase. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/api/psi4.driver.p4util.import_ignorecase.html:669,update,updated,669,psi4manual/1.8.x/api/psi4.driver.p4util.import_ignorecase.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/api/psi4.driver.p4util.import_ignorecase.html,1,['update'],['updated']
Deployability,"﻿. import_ignorecase. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; import_ignorecase. import_ignorecase¶. psi4.driver.p4util.import_ignorecase(module)[source]¶; Import loader for module in any possible lettercase permutation. Parameters:; module (str) – Name of module with uncertain case. Returns:; Module object. Return type:; types.ModuleType. table of contents. import_ignorecase; import_ignorecase(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; import_ignorecase. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/api/psi4.driver.p4util.import_ignorecase.html:669,update,updated,669,psi4manual/1.9.x/api/psi4.driver.p4util.import_ignorecase.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/api/psi4.driver.p4util.import_ignorecase.html,1,['update'],['updated']
Deployability,"﻿. initialize. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; initialize. initialize¶. psi4.core.initialize() → bool¶; Called upon psi4 module import to initialize timers, singletons, and I/O. Idempotent. table of contents. initialize; initialize(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; initialize. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/api/psi4.core.initialize.html:518,update,updated,518,psi4manual/master/api/psi4.core.initialize.html,https://psicode.org,https://psicode.org/psi4manual/master/api/psi4.core.initialize.html,1,['update'],['updated']
Deployability,"﻿. initialize. Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. initialize¶. psi4.core.initialize() → bool¶. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2018, The Psi4 Project.; Last updated on Wednesday, 25 July 2018 04:21AM.; Created using Sphinx 1.7.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/api/psi4.core.initialize-1.html:344,update,updated,344,psi4manual/1.2.1/api/psi4.core.initialize-1.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/api/psi4.core.initialize-1.html,2,['update'],['updated']
Deployability,"﻿. initialize. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; initialize. initialize¶. psi4.core.initialize() → bool¶; Called upon psi4 module import to initialize timers, singletons, and I/O. Idempotent. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; initialize. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/api/psi4.core.initialize-1.html:450,update,updated,450,psi4manual/1.4.0/api/psi4.core.initialize-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/api/psi4.core.initialize-1.html,2,['update'],['updated']
Deployability,"﻿. initialize. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; initialize. initialize¶. psi4.core.initialize() → bool¶; Called upon psi4 module import to initialize timers, singletons, and I/O. Idempotent. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; initialize. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/api/psi4.core.initialize-1.html:450,update,updated,450,psi4manual/1.5.0/api/psi4.core.initialize-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/api/psi4.core.initialize-1.html,2,['update'],['updated']
Deployability,"﻿. initialize. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; initialize. initialize¶. psi4.core.initialize() → bool¶; Called upon psi4 module import to initialize timers, singletons, and I/O. Idempotent. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; initialize. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/api/psi4.core.initialize.html:450,update,updated,450,psi4manual/1.6.x/api/psi4.core.initialize.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/api/psi4.core.initialize.html,1,['update'],['updated']
Deployability,"﻿. initialize. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; initialize. initialize¶. psi4.core.initialize() → bool¶; Called upon psi4 module import to initialize timers, singletons, and I/O. Idempotent. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; initialize. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/api/psi4.core.initialize.html:455,update,updated,455,psi4manual/1.7.x/api/psi4.core.initialize.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/api/psi4.core.initialize.html,1,['update'],['updated']
Deployability,"﻿. initialize. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; initialize. initialize¶. psi4.core.initialize() → bool¶; Called upon psi4 module import to initialize timers, singletons, and I/O. Idempotent. table of contents. initialize; initialize(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; initialize. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/api/psi4.core.initialize.html:504,update,updated,504,psi4manual/1.8.x/api/psi4.core.initialize.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/api/psi4.core.initialize.html,1,['update'],['updated']
Deployability,"﻿. initialize. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; initialize. initialize¶. psi4.core.initialize() → bool¶; Called upon psi4 module import to initialize timers, singletons, and I/O. Idempotent. table of contents. initialize; initialize(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; initialize. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/api/psi4.core.initialize.html:504,update,updated,504,psi4manual/1.9.x/api/psi4.core.initialize.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/api/psi4.core.initialize.html,1,['update'],['updated']
Deployability,"﻿. initialize. Navigation. Index. modules    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. initialize¶. psi4.core.initialize() → bool¶. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2019, The Psi4 Project.; Last updated on Wednesday, 15 May 2019 08:49PM.; Created using Sphinx 1.8.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/api/psi4.core.initialize-1.html:334,update,updated,334,psi4manual/1.3.2/api/psi4.core.initialize-1.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/api/psi4.core.initialize-1.html,2,['update'],['updated']
Deployability,"﻿. input — PSI4 [beta2] documentation. Navigation. index. modules |; PSI4 [beta2] » ; Module code ». Source code for input; """"""Module import"""""". [docs]def process_input(raw_input, print_level=1):; pass. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules |; PSI4 [beta2] » ; Module code ». © Copyright 2012, Psi4 Project.; Last updated on Aug 25, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b2/_modules/input.html:376,update,updated,376,psi4manual/4.0b2/_modules/input.html,https://psicode.org,https://psicode.org/psi4manual/4.0b2/_modules/input.html,1,['update'],['updated']
Deployability,"﻿. interactive — PSI4 [beta5] documentation. Navigation. index. modules    . toc    ; PSI4 [beta5] » ; Module code ». Source code for interactive; from psi4 import *; import readline # optional, will allow Up/Down/History in the console; import code. [docs]def run():; print_out(""\nStarting interactive session.\n\n""). vars = globals().copy(); vars.update(locals()); shell = code.InteractiveConsole(vars); shell.interact(). Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    ; PSI4 [beta5] » ; Module code ». © Copyright 2013, The Psi4 Project.; Last updated on Jul 08, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b5/_modules/interactive.html:349,update,update,349,psi4manual/4.0b5/_modules/interactive.html,https://psicode.org,https://psicode.org/psi4manual/4.0b5/_modules/interactive.html,2,['update'],"['update', 'updated']"
Deployability,"﻿. interactive — Psi4 [1.0.0 6a9a71b] Docs. Navigation. index. modules    . toc    ; Psi4 [1.0.0 6a9a71b] » ; Module code ». Source code for interactive; #; # @BEGIN LICENSE; #; # Psi4: an open-source quantum chemistry software package; #; # Copyright (c) 2007-2016 The Psi4 Developers.; #; # The copyrights for code used from other parties are included in; # the corresponding files.; #; # This program is free software; you can redistribute it and/or modify; # it under the terms of the GNU General Public License as published by; # the Free Software Foundation; either version 2 of the License, or; # (at your option) any later version.; #; # This program is distributed in the hope that it will be useful,; # but WITHOUT ANY WARRANTY; without even the implied warranty of; # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the; # GNU General Public License for more details.; #; # You should have received a copy of the GNU General Public License along; # with this program; if not, write to the Free Software Foundation, Inc.,; # 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.; #; # @END LICENSE; #. from __future__ import absolute_import; from psi4 import *; import readline # optional, will allow Up/Down/History in the console; import code. [docs]def run():; print_out(""\nStarting interactive session.\n\n""). vars = globals().copy(); vars.update(locals()); shell = code.InteractiveConsole(vars); shell.interact(). Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    ; Psi4 [1.0.0 6a9a71b] » ; Module code ». © Copyright 2016, The Psi4 Project.; Last updated on Tuesday, 05 July 2016 02:54AM.; Created using Sphinx 1.3.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/_modules/interactive.html:1369,update,update,1369,psi4manual/1.0.0/_modules/interactive.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/_modules/interactive.html,2,['update'],"['update', 'updated']"
Deployability,"﻿. ipi_broker. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; ipi_broker. ipi_broker¶. psi4.driver.ipi_broker(LOT, molecule=None, serverdata=False, options=None)[source]¶; Runs IPIBroker to connect to i-PI (https://ipi-code.org/). Parameters:. LOT (str) – level of theory; molecule (Optional[Molecule]) – Initial molecule; serverdata (Union[str, bool]) – Configuration where to connect to ipi; options (Optional[Dict]) – any additional Psi4 options. Return type:; IPIBroker. table of contents. ipi_broker; ipi_broker(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; ipi_broker. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/api/psi4.driver.ipi_broker.html:788,update,updated,788,psi4manual/master/api/psi4.driver.ipi_broker.html,https://psicode.org,https://psicode.org/psi4manual/master/api/psi4.driver.ipi_broker.html,1,['update'],['updated']
Deployability,"﻿. ipi_broker. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; ipi_broker. ipi_broker¶. psi4.driver.ipi_broker(LOT, molecule=None, serverdata=False, options=None)[source]¶; Run IPIBroker to connect to i-pi. Parameters. molecule – Initial molecule; serverdata – Configuration where to connect to ipi; options – any additional Psi4 options. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; ipi_broker. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/api/psi4.driver.ipi_broker-1.html:583,update,updated,583,psi4manual/1.4.0/api/psi4.driver.ipi_broker-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/api/psi4.driver.ipi_broker-1.html,2,['update'],['updated']
Deployability,"﻿. ipi_broker. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; ipi_broker. ipi_broker¶. psi4.driver.ipi_broker(LOT, molecule=None, serverdata=False, options=None)[source]¶; Run IPIBroker to connect to i-pi. Parameters. molecule – Initial molecule; serverdata – Configuration where to connect to ipi; options – any additional Psi4 options. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; ipi_broker. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/api/psi4.driver.ipi_broker-1.html:583,update,updated,583,psi4manual/1.5.0/api/psi4.driver.ipi_broker-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/api/psi4.driver.ipi_broker-1.html,2,['update'],['updated']
Deployability,"﻿. ipi_broker. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; ipi_broker. ipi_broker¶. psi4.driver.ipi_broker(LOT, molecule=None, serverdata=False, options=None)[source]¶; Run IPIBroker to connect to i-pi. Parameters. molecule – Initial molecule; serverdata – Configuration where to connect to ipi; options – any additional Psi4 options. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; ipi_broker. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/api/psi4.driver.ipi_broker.html:583,update,updated,583,psi4manual/1.6.x/api/psi4.driver.ipi_broker.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/api/psi4.driver.ipi_broker.html,1,['update'],['updated']
Deployability,"﻿. ipi_broker. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; ipi_broker. ipi_broker¶. psi4.driver.ipi_broker(LOT, molecule=None, serverdata=False, options=None)[source]¶; Runs IPIBroker to connect to i-PI (https://ipi-code.org/). Parameters:. LOT (str) – level of theory; molecule (Optional[Molecule]) – Initial molecule; serverdata (Union[str, bool]) – Configuration where to connect to ipi; options (Optional[Dict]) – any additional Psi4 options. Return type:; IPIBroker. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; ipi_broker. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/api/psi4.driver.ipi_broker.html:725,update,updated,725,psi4manual/1.7.x/api/psi4.driver.ipi_broker.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/api/psi4.driver.ipi_broker.html,1,['update'],['updated']
Deployability,"﻿. ipi_broker. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; ipi_broker. ipi_broker¶. psi4.driver.ipi_broker(LOT, molecule=None, serverdata=False, options=None)[source]¶; Runs IPIBroker to connect to i-PI (https://ipi-code.org/). Parameters:. LOT (str) – level of theory; molecule (Optional[Molecule]) – Initial molecule; serverdata (Union[str, bool]) – Configuration where to connect to ipi; options (Optional[Dict]) – any additional Psi4 options. Return type:; IPIBroker. table of contents. ipi_broker; ipi_broker(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; ipi_broker. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/api/psi4.driver.ipi_broker.html:774,update,updated,774,psi4manual/1.8.x/api/psi4.driver.ipi_broker.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/api/psi4.driver.ipi_broker.html,1,['update'],['updated']
Deployability,"﻿. ipi_broker. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; ipi_broker. ipi_broker¶. psi4.driver.ipi_broker(LOT, molecule=None, serverdata=False, options=None)[source]¶; Runs IPIBroker to connect to i-PI (https://ipi-code.org/).; :rtype: IPIBroker. Parameters:. LOT (str) – level of theory; molecule (Optional[Molecule]) – Initial molecule; serverdata (Union[str, bool]) – Configuration where to connect to ipi; options (Optional[Dict]) – any additional Psi4 options. Return type:; IPIBroker. table of contents. ipi_broker; ipi_broker(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; ipi_broker. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/api/psi4.driver.ipi_broker.html:794,update,updated,794,psi4manual/1.9.x/api/psi4.driver.ipi_broker.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/api/psi4.driver.ipi_broker.html,1,['update'],['updated']
Deployability,"﻿. join_path. Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. join_path¶. psi4.driver.join_path(prefix, *args)[source]¶. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2018, The Psi4 Project.; Last updated on Wednesday, 25 July 2018 04:21AM.; Created using Sphinx 1.7.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/api/psi4.driver.join_path-1.html:357,update,updated,357,psi4manual/1.2.1/api/psi4.driver.join_path-1.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/api/psi4.driver.join_path-1.html,2,['update'],['updated']
Deployability,"﻿. join_path. Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. join_path¶. psi4.driver.join_path(prefix, *args)[source]¶. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2019, The Psi4 Project.; Last updated on Wednesday, 15 May 2019 08:49PM.; Created using Sphinx 1.8.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/api/psi4.driver.join_path-1.html:357,update,updated,357,psi4manual/1.3.2/api/psi4.driver.join_path-1.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/api/psi4.driver.join_path-1.html,2,['update'],['updated']
Deployability,"﻿. join_path. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; join_path. join_path¶. psi4.driver.join_path(prefix, *args)[source]¶. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; join_path. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/api/psi4.driver.join_path-1.html:375,update,updated,375,psi4manual/1.4.0/api/psi4.driver.join_path-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/api/psi4.driver.join_path-1.html,2,['update'],['updated']
Deployability,"﻿. join_path. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; join_path. join_path¶. psi4.driver.join_path(prefix, *args)[source]¶. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; join_path. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/api/psi4.driver.join_path-1.html:375,update,updated,375,psi4manual/1.5.0/api/psi4.driver.join_path-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/api/psi4.driver.join_path-1.html,2,['update'],['updated']
Deployability,"﻿. join_path. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; join_path. join_path¶. psi4.driver.join_path(prefix, *args)[source]¶. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; join_path. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/api/psi4.driver.join_path.html:375,update,updated,375,psi4manual/1.6.x/api/psi4.driver.join_path.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/api/psi4.driver.join_path.html,1,['update'],['updated']
Deployability,"﻿. kwargs_lower. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; kwargs_lower. kwargs_lower¶. psi4.driver.p4util.kwargs_lower(kwargs)[source]¶; Function to rebuild and return kwargs dictionary sanitized. Should be; called by every function that could be called directly by the user. Parameters:; kwargs (Dict[str, Any]) – Input kwargs for any user-facing function. Returns:; lowered – Sanitized kwargs with all keys made lowercase. Also turns boolean-like; values into actual booleans. Also turns values lowercase if sensible. Return type:; Dict[str, Any]. table of contents. kwargs_lower; kwargs_lower(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; kwargs_lower. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/api/psi4.driver.p4util.kwargs_lower.html:875,update,updated,875,psi4manual/master/api/psi4.driver.p4util.kwargs_lower.html,https://psicode.org,https://psicode.org/psi4manual/master/api/psi4.driver.p4util.kwargs_lower.html,1,['update'],['updated']
Deployability,"﻿. kwargs_lower. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; kwargs_lower. kwargs_lower¶. psi4.driver.p4util.kwargs_lower(kwargs)[source]¶; Function to rebuild and return kwargs dictionary sanitized. Should be; called by every function that could be called directly by the user. Parameters:; kwargs (Dict[str, Any]) – Input kwargs for any user-facing function. Returns:; lowered – Sanitized kwargs with all keys made lowercase. Also turns boolean-like; values into actual booleans. Also turns values lowercase if sensible. Return type:; Dict[str, Any]. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; kwargs_lower. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/api/psi4.driver.p4util.kwargs_lower.html:808,update,updated,808,psi4manual/1.7.x/api/psi4.driver.p4util.kwargs_lower.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/api/psi4.driver.p4util.kwargs_lower.html,1,['update'],['updated']
Deployability,"﻿. kwargs_lower. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; kwargs_lower. kwargs_lower¶. psi4.driver.p4util.kwargs_lower(kwargs)[source]¶; Function to rebuild and return kwargs dictionary sanitized. Should be; called by every function that could be called directly by the user. Parameters:; kwargs (Dict[str, Any]) – Input kwargs for any user-facing function. Returns:; lowered – Sanitized kwargs with all keys made lowercase. Also turns boolean-like; values into actual booleans. Also turns values lowercase if sensible. Return type:; Dict[str, Any]. table of contents. kwargs_lower; kwargs_lower(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; kwargs_lower. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/api/psi4.driver.p4util.kwargs_lower.html:861,update,updated,861,psi4manual/1.8.x/api/psi4.driver.p4util.kwargs_lower.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/api/psi4.driver.p4util.kwargs_lower.html,1,['update'],['updated']
Deployability,"﻿. kwargs_lower. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; kwargs_lower. kwargs_lower¶. psi4.driver.p4util.kwargs_lower(kwargs)[source]¶; Function to rebuild and return kwargs dictionary sanitized. Should be; called by every function that could be called directly by the user. Parameters:; kwargs (Dict[str, Any]) – Input kwargs for any user-facing function. Returns:; lowered – Sanitized kwargs with all keys made lowercase. Also turns boolean-like; values into actual booleans. Also turns values lowercase if sensible. Return type:; Dict[str, Any]. table of contents. kwargs_lower; kwargs_lower(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; kwargs_lower. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/api/psi4.driver.p4util.kwargs_lower.html:861,update,updated,861,psi4manual/1.9.x/api/psi4.driver.p4util.kwargs_lower.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/api/psi4.driver.p4util.kwargs_lower.html,1,['update'],['updated']
Deployability,"﻿. legacy_wavefunction. Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. legacy_wavefunction¶. psi4.core.legacy_wavefunction() → psi::Wavefunction¶; Returns the current legacy_wavefunction object from the most recent computation. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2018, The Psi4 Project.; Last updated on Wednesday, 25 July 2018 04:21AM.; Created using Sphinx 1.7.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/api/psi4.core.legacy_wavefunction-1.html:465,update,updated,465,psi4manual/1.2.1/api/psi4.core.legacy_wavefunction-1.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/api/psi4.core.legacy_wavefunction-1.html,2,['update'],['updated']
Deployability,"﻿. legacy_wavefunction. Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. legacy_wavefunction¶. psi4.core.legacy_wavefunction() → psi::Wavefunction¶; Returns the current legacy_wavefunction object from the most recent computation. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2019, The Psi4 Project.; Last updated on Wednesday, 15 May 2019 08:49PM.; Created using Sphinx 1.8.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/api/psi4.core.legacy_wavefunction-1.html:465,update,updated,465,psi4manual/1.3.2/api/psi4.core.legacy_wavefunction-1.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/api/psi4.core.legacy_wavefunction-1.html,2,['update'],['updated']
Deployability,"﻿. legacy_wavefunction. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; legacy_wavefunction. legacy_wavefunction¶. psi4.core.legacy_wavefunction() → psi4.core.Wavefunction¶; Returns the current legacy_wavefunction object from the most recent computation. FOR AGED PLUGIN USE ONLY. Deprecated since version 1.5. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; legacy_wavefunction. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/api/psi4.core.legacy_wavefunction-1.html:564,update,updated,564,psi4manual/1.4.0/api/psi4.core.legacy_wavefunction-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/api/psi4.core.legacy_wavefunction-1.html,2,['update'],['updated']
Deployability,"﻿. legacy_wavefunction. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; legacy_wavefunction. legacy_wavefunction¶. psi4.core.legacy_wavefunction() → psi4.core.Wavefunction¶; Returns the current legacy_wavefunction object from the most recent computation. FOR AGED PLUGIN USE ONLY. Deprecated since version 1.5. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; legacy_wavefunction. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/api/psi4.core.legacy_wavefunction-1.html:564,update,updated,564,psi4manual/1.5.0/api/psi4.core.legacy_wavefunction-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/api/psi4.core.legacy_wavefunction-1.html,2,['update'],['updated']
Deployability,"﻿. legacy_wavefunction. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; legacy_wavefunction. legacy_wavefunction¶. psi4.core.legacy_wavefunction() → psi4.core.Wavefunction¶; Returns the current legacy_wavefunction object from the most recent computation. FOR AGED PLUGIN USE ONLY. Deprecated since version 1.5. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; legacy_wavefunction. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/api/psi4.core.legacy_wavefunction.html:564,update,updated,564,psi4manual/1.6.x/api/psi4.core.legacy_wavefunction.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/api/psi4.core.legacy_wavefunction.html,1,['update'],['updated']
Deployability,"﻿. levenshtein. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; levenshtein. levenshtein¶. psi4.driver.levenshtein(seq1, seq2)[source]¶; Compute the Levenshtein distance between two strings. Parameters:. seq1 (str) – First string.; seq2 (str) – Second string. Return type:; int. table of contents. levenshtein; levenshtein(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; levenshtein. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/api/psi4.driver.levenshtein.html:594,update,updated,594,psi4manual/master/api/psi4.driver.levenshtein.html,https://psicode.org,https://psicode.org/psi4manual/master/api/psi4.driver.levenshtein.html,1,['update'],['updated']
Deployability,"﻿. levenshtein. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; levenshtein. levenshtein¶. psi4.driver.p4util.levenshtein(seq1, seq2)[source]¶; Compute the Levenshtein distance between two strings. Parameters:. seq1 (str) – First string.; seq2 (str) – Second string. Return type:; int. table of contents. levenshtein; levenshtein(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; levenshtein. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/api/psi4.driver.p4util.levenshtein.html:601,update,updated,601,psi4manual/master/api/psi4.driver.p4util.levenshtein.html,https://psicode.org,https://psicode.org/psi4manual/master/api/psi4.driver.p4util.levenshtein.html,1,['update'],['updated']
Deployability,"﻿. levenshtein. Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. levenshtein¶. psi4.driver.levenshtein(seq1, seq2)[source]¶; Function to compute the Levenshtein distance between two strings. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2018, The Psi4 Project.; Last updated on Wednesday, 25 July 2018 04:21AM.; Created using Sphinx 1.7.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/api/psi4.driver.levenshtein-1.html:426,update,updated,426,psi4manual/1.2.1/api/psi4.driver.levenshtein-1.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/api/psi4.driver.levenshtein-1.html,2,['update'],['updated']
Deployability,"﻿. levenshtein. Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. levenshtein¶. psi4.driver.levenshtein(seq1, seq2)[source]¶; Compute the Levenshtein distance between two strings. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2019, The Psi4 Project.; Last updated on Wednesday, 15 May 2019 08:49PM.; Created using Sphinx 1.8.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/api/psi4.driver.levenshtein-1.html:414,update,updated,414,psi4manual/1.3.2/api/psi4.driver.levenshtein-1.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/api/psi4.driver.levenshtein-1.html,2,['update'],['updated']
Deployability,"﻿. levenshtein. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; levenshtein. levenshtein¶. psi4.driver.levenshtein(seq1, seq2)[source]¶; Compute the Levenshtein distance between two strings. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; levenshtein. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/api/psi4.driver.levenshtein-1.html:436,update,updated,436,psi4manual/1.4.0/api/psi4.driver.levenshtein-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/api/psi4.driver.levenshtein-1.html,2,['update'],['updated']
Deployability,"﻿. levenshtein. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; levenshtein. levenshtein¶. psi4.driver.levenshtein(seq1, seq2)[source]¶; Compute the Levenshtein distance between two strings. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; levenshtein. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/api/psi4.driver.levenshtein-1.html:436,update,updated,436,psi4manual/1.5.0/api/psi4.driver.levenshtein-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/api/psi4.driver.levenshtein-1.html,2,['update'],['updated']
Deployability,"﻿. levenshtein. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; levenshtein. levenshtein¶. psi4.driver.levenshtein(seq1, seq2)[source]¶; Compute the Levenshtein distance between two strings. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; levenshtein. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/api/psi4.driver.levenshtein.html:436,update,updated,436,psi4manual/1.6.x/api/psi4.driver.levenshtein.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/api/psi4.driver.levenshtein.html,1,['update'],['updated']
Deployability,"﻿. levenshtein. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; levenshtein. levenshtein¶. psi4.driver.levenshtein(seq1, seq2)[source]¶; Compute the Levenshtein distance between two strings. Parameters:. seq1 (str) – First string.; seq2 (str) – Second string. Return type:; int. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; levenshtein. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/api/psi4.driver.levenshtein.html:529,update,updated,529,psi4manual/1.7.x/api/psi4.driver.levenshtein.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/api/psi4.driver.levenshtein.html,1,['update'],['updated']
Deployability,"﻿. levenshtein. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; levenshtein. levenshtein¶. psi4.driver.p4util.levenshtein(seq1, seq2)[source]¶; Compute the Levenshtein distance between two strings. Parameters:. seq1 (str) – First string.; seq2 (str) – Second string. Return type:; int. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; levenshtein. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/api/psi4.driver.p4util.levenshtein.html:536,update,updated,536,psi4manual/1.7.x/api/psi4.driver.p4util.levenshtein.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/api/psi4.driver.p4util.levenshtein.html,1,['update'],['updated']
Deployability,"﻿. levenshtein. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; levenshtein. levenshtein¶. psi4.driver.levenshtein(seq1, seq2)[source]¶; Compute the Levenshtein distance between two strings. Parameters:. seq1 (str) – First string.; seq2 (str) – Second string. Return type:; int. table of contents. levenshtein; levenshtein(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; levenshtein. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/api/psi4.driver.levenshtein.html:580,update,updated,580,psi4manual/1.8.x/api/psi4.driver.levenshtein.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/api/psi4.driver.levenshtein.html,1,['update'],['updated']
Deployability,"﻿. levenshtein. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; levenshtein. levenshtein¶. psi4.driver.p4util.levenshtein(seq1, seq2)[source]¶; Compute the Levenshtein distance between two strings. Parameters:. seq1 (str) – First string.; seq2 (str) – Second string. Return type:; int. table of contents. levenshtein; levenshtein(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; levenshtein. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/api/psi4.driver.p4util.levenshtein.html:587,update,updated,587,psi4manual/1.8.x/api/psi4.driver.p4util.levenshtein.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/api/psi4.driver.p4util.levenshtein.html,1,['update'],['updated']
Deployability,"﻿. levenshtein. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; levenshtein. levenshtein¶. psi4.driver.levenshtein(seq1, seq2)[source]¶; Compute the Levenshtein distance between two strings.; :rtype: int. Parameters:. seq1 (str) – First string.; seq2 (str) – Second string. Return type:; int. table of contents. levenshtein; levenshtein(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; levenshtein. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/api/psi4.driver.levenshtein.html:594,update,updated,594,psi4manual/1.9.x/api/psi4.driver.levenshtein.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/api/psi4.driver.levenshtein.html,1,['update'],['updated']
Deployability,"﻿. levenshtein. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; levenshtein. levenshtein¶. psi4.driver.p4util.levenshtein(seq1, seq2)[source]¶; Compute the Levenshtein distance between two strings.; :rtype: int. Parameters:. seq1 (str) – First string.; seq2 (str) – Second string. Return type:; int. table of contents. levenshtein; levenshtein(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; levenshtein. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/api/psi4.driver.p4util.levenshtein.html:601,update,updated,601,psi4manual/1.9.x/api/psi4.driver.p4util.levenshtein.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/api/psi4.driver.p4util.levenshtein.html,1,['update'],['updated']
Deployability,"﻿. libfock. Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. libfock¶. psi4.core.libfock(arg0: psi::Wavefunction) → psi::Wavefunction¶; Runs a CPHF calculation, using libfock. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2018, The Psi4 Project.; Last updated on Wednesday, 25 July 2018 04:21AM.; Created using Sphinx 1.7.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/api/psi4.core.libfock-1.html:411,update,updated,411,psi4manual/1.2.1/api/psi4.core.libfock-1.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/api/psi4.core.libfock-1.html,2,['update'],['updated']
Deployability,"﻿. libint2_configuration. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; libint2_configuration. libint2_configuration¶. psi4.driver.libint2_configuration()[source]¶; Returns information on integral classes, derivatives, and AM from currently linked Libint2. Return type:; Dict[str, List[int]]. Returns:. Dictionary of integrals classes with values an array of max angular momentum per derivative level.; Usual configuration returns – {‘eri’: [5, 4, 3], ‘eri2’: [6, 5, 4], ‘eri3’: [6, 5, 4], ‘onebody’: [6, 5, 4]}. table of contents. libint2_configuration; libint2_configuration(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; libint2_configuration. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/api/psi4.driver.libint2_configuration.html:474,configurat,configuration,474,psi4manual/master/api/psi4.driver.libint2_configuration.html,https://psicode.org,https://psicode.org/psi4manual/master/api/psi4.driver.libint2_configuration.html,2,"['configurat', 'update']","['configuration', 'updated']"
Deployability,"﻿. libint2_configuration. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; libint2_configuration. libint2_configuration¶. psi4.driver.p4util.libint2_configuration()[source]¶; Returns information on integral classes, derivatives, and AM from currently linked Libint2. Return type:; Dict[str, List[int]]. Returns:. Dictionary of integrals classes with values an array of max angular momentum per derivative level.; Usual configuration returns – {‘eri’: [5, 4, 3], ‘eri2’: [6, 5, 4], ‘eri3’: [6, 5, 4], ‘onebody’: [6, 5, 4]}. table of contents. libint2_configuration; libint2_configuration(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; libint2_configuration. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/api/psi4.driver.p4util.libint2_configuration.html:481,configurat,configuration,481,psi4manual/master/api/psi4.driver.p4util.libint2_configuration.html,https://psicode.org,https://psicode.org/psi4manual/master/api/psi4.driver.p4util.libint2_configuration.html,2,"['configurat', 'update']","['configuration', 'updated']"
Deployability,"﻿. libint2_configuration. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; libint2_configuration. libint2_configuration¶. psi4.driver.libint2_configuration()[source]¶; Returns information on integral classes, derivatives, and AM from currently linked Libint2. Return type:; Dict[str, List[int]]. Returns:. Dictionary of integrals classes with values an array of max angular momentum per derivative level.; Usual configuration returns – {‘eri’: [5, 4, 3], ‘eri2’: [6, 5, 4], ‘eri3’: [6, 5, 4], ‘onebody’: [6, 5, 4]}. table of contents. libint2_configuration; libint2_configuration(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; libint2_configuration. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/api/psi4.driver.libint2_configuration.html:467,configurat,configuration,467,psi4manual/1.8.x/api/psi4.driver.libint2_configuration.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/api/psi4.driver.libint2_configuration.html,2,"['configurat', 'update']","['configuration', 'updated']"
Deployability,"﻿. libint2_configuration. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; libint2_configuration. libint2_configuration¶. psi4.driver.p4util.libint2_configuration()[source]¶; Returns information on integral classes, derivatives, and AM from currently linked Libint2. Return type:; Dict[str, List[int]]. Returns:. Dictionary of integrals classes with values an array of max angular momentum per derivative level.; Usual configuration returns – {‘eri’: [5, 4, 3], ‘eri2’: [6, 5, 4], ‘eri3’: [6, 5, 4], ‘onebody’: [6, 5, 4]}. table of contents. libint2_configuration; libint2_configuration(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; libint2_configuration. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/api/psi4.driver.p4util.libint2_configuration.html:474,configurat,configuration,474,psi4manual/1.8.x/api/psi4.driver.p4util.libint2_configuration.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/api/psi4.driver.p4util.libint2_configuration.html,2,"['configurat', 'update']","['configuration', 'updated']"
Deployability,"﻿. libint2_configuration. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; libint2_configuration. libint2_configuration¶. psi4.driver.libint2_configuration()[source]¶; Returns information on integral classes, derivatives, and AM from currently linked Libint2. Return type:; Dict[str, List[int]]. Returns:. Dictionary of integrals classes with values an array of max angular momentum per derivative level.; Usual configuration returns – {‘eri’: [5, 4, 3], ‘eri2’: [6, 5, 4], ‘eri3’: [6, 5, 4], ‘onebody’: [6, 5, 4]}. table of contents. libint2_configuration; libint2_configuration(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; libint2_configuration. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/api/psi4.driver.libint2_configuration.html:467,configurat,configuration,467,psi4manual/1.9.x/api/psi4.driver.libint2_configuration.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/api/psi4.driver.libint2_configuration.html,2,"['configurat', 'update']","['configuration', 'updated']"
Deployability,"﻿. libint2_configuration. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; libint2_configuration. libint2_configuration¶. psi4.driver.p4util.libint2_configuration()[source]¶; Returns information on integral classes, derivatives, and AM from currently linked Libint2. Return type:; Dict[str, List[int]]. Returns:. Dictionary of integrals classes with values an array of max angular momentum per derivative level.; Usual configuration returns – {‘eri’: [5, 4, 3], ‘eri2’: [6, 5, 4], ‘eri3’: [6, 5, 4], ‘onebody’: [6, 5, 4]}. table of contents. libint2_configuration; libint2_configuration(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; libint2_configuration. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/api/psi4.driver.p4util.libint2_configuration.html:474,configurat,configuration,474,psi4manual/1.9.x/api/psi4.driver.p4util.libint2_configuration.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/api/psi4.driver.p4util.libint2_configuration.html,2,"['configurat', 'update']","['configuration', 'updated']"
Deployability,"﻿. libint2_print_out. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; libint2_print_out. libint2_print_out¶. psi4.driver.libint2_print_out()[source]¶. Return type:; None. table of contents. libint2_print_out; libint2_print_out(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; libint2_print_out. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/api/psi4.driver.libint2_print_out.html:504,update,updated,504,psi4manual/master/api/psi4.driver.libint2_print_out.html,https://psicode.org,https://psicode.org/psi4manual/master/api/psi4.driver.libint2_print_out.html,1,['update'],['updated']
Deployability,"﻿. libint2_print_out. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; libint2_print_out. libint2_print_out¶. psi4.driver.p4util.libint2_print_out()[source]¶. Return type:; None. table of contents. libint2_print_out; libint2_print_out(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; libint2_print_out. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/api/psi4.driver.p4util.libint2_print_out.html:511,update,updated,511,psi4manual/master/api/psi4.driver.p4util.libint2_print_out.html,https://psicode.org,https://psicode.org/psi4manual/master/api/psi4.driver.p4util.libint2_print_out.html,1,['update'],['updated']
Deployability,"﻿. libint2_print_out. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; libint2_print_out. libint2_print_out¶. psi4.driver.libint2_print_out()[source]¶. Return type:; None. table of contents. libint2_print_out; libint2_print_out(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; libint2_print_out. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/api/psi4.driver.libint2_print_out.html:490,update,updated,490,psi4manual/1.8.x/api/psi4.driver.libint2_print_out.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/api/psi4.driver.libint2_print_out.html,1,['update'],['updated']
Deployability,"﻿. libint2_print_out. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; libint2_print_out. libint2_print_out¶. psi4.driver.p4util.libint2_print_out()[source]¶. Return type:; None. table of contents. libint2_print_out; libint2_print_out(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; libint2_print_out. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/api/psi4.driver.p4util.libint2_print_out.html:497,update,updated,497,psi4manual/1.8.x/api/psi4.driver.p4util.libint2_print_out.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/api/psi4.driver.p4util.libint2_print_out.html,1,['update'],['updated']
Deployability,"﻿. libint2_print_out. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; libint2_print_out. libint2_print_out¶. psi4.driver.libint2_print_out()[source]¶. Return type:; None. table of contents. libint2_print_out; libint2_print_out(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; libint2_print_out. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/api/psi4.driver.libint2_print_out.html:490,update,updated,490,psi4manual/1.9.x/api/psi4.driver.libint2_print_out.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/api/psi4.driver.libint2_print_out.html,1,['update'],['updated']
Deployability,"﻿. libint2_print_out. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; libint2_print_out. libint2_print_out¶. psi4.driver.p4util.libint2_print_out()[source]¶. Return type:; None. table of contents. libint2_print_out; libint2_print_out(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; libint2_print_out. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/api/psi4.driver.p4util.libint2_print_out.html:497,update,updated,497,psi4manual/1.9.x/api/psi4.driver.p4util.libint2_print_out.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/api/psi4.driver.p4util.libint2_print_out.html,1,['update'],['updated']
Deployability,"﻿. libint2_solid_harmonics_ordering. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; libint2_solid_harmonics_ordering. libint2_solid_harmonics_ordering¶. psi4.core.libint2_solid_harmonics_ordering() → str¶; The solid harmonics setting of Libint2 currently active for Psi4. table of contents. libint2_solid_harmonics_ordering; libint2_solid_harmonics_ordering(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; libint2_solid_harmonics_ordering. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/api/psi4.core.libint2_solid_harmonics_ordering.html:651,update,updated,651,psi4manual/master/api/psi4.core.libint2_solid_harmonics_ordering.html,https://psicode.org,https://psicode.org/psi4manual/master/api/psi4.core.libint2_solid_harmonics_ordering.html,1,['update'],['updated']
Deployability,"﻿. libint2_solid_harmonics_ordering. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; libint2_solid_harmonics_ordering. libint2_solid_harmonics_ordering¶. psi4.core.libint2_solid_harmonics_ordering() → str¶; The solid harmonics setting of Libint2 currently active for Psi4. table of contents. libint2_solid_harmonics_ordering; libint2_solid_harmonics_ordering(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; libint2_solid_harmonics_ordering. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/api/psi4.core.libint2_solid_harmonics_ordering.html:637,update,updated,637,psi4manual/1.9.x/api/psi4.core.libint2_solid_harmonics_ordering.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/api/psi4.core.libint2_solid_harmonics_ordering.html,1,['update'],['updated']
Deployability,"﻿. mat2arr. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; mat2arr. mat2arr¶. psi4.driver.p4util.mat2arr(mat)[source]¶; Convert Matrix to List. Parameters:; mat (Matrix) – PSI4 matrix. Should be flat with respect to symmetry. Returns:; Pure Python representation of mat. Return type:; List[List[float]]. table of contents. mat2arr; mat2arr(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; mat2arr. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/api/psi4.driver.p4util.mat2arr.html:608,update,updated,608,psi4manual/master/api/psi4.driver.p4util.mat2arr.html,https://psicode.org,https://psicode.org/psi4manual/master/api/psi4.driver.p4util.mat2arr.html,1,['update'],['updated']
Deployability,"﻿. mat2arr. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; mat2arr. mat2arr¶. psi4.driver.p4util.mat2arr(mat)[source]¶; Convert Matrix to List. Parameters:; mat (Matrix) – PSI4 matrix. Should be flat with respect to symmetry. Returns:; Pure Python representation of mat. Return type:; List[List[float]]. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; mat2arr. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/api/psi4.driver.p4util.mat2arr.html:551,update,updated,551,psi4manual/1.7.x/api/psi4.driver.p4util.mat2arr.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/api/psi4.driver.p4util.mat2arr.html,1,['update'],['updated']
Deployability,"﻿. mat2arr. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; mat2arr. mat2arr¶. psi4.driver.p4util.mat2arr(mat)[source]¶; Convert Matrix to List. Parameters:; mat (Matrix) – PSI4 matrix. Should be flat with respect to symmetry. Returns:; Pure Python representation of mat. Return type:; List[List[float]]. table of contents. mat2arr; mat2arr(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; mat2arr. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/api/psi4.driver.p4util.mat2arr.html:594,update,updated,594,psi4manual/1.8.x/api/psi4.driver.p4util.mat2arr.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/api/psi4.driver.p4util.mat2arr.html,1,['update'],['updated']
Deployability,"﻿. mat2arr. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; mat2arr. mat2arr¶. psi4.driver.p4util.mat2arr(mat)[source]¶; Convert Matrix to List. Parameters:; mat (Matrix) – PSI4 matrix. Should be flat with respect to symmetry. Returns:; Pure Python representation of mat. Return type:; List[List[float]]. table of contents. mat2arr; mat2arr(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; mat2arr. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/api/psi4.driver.p4util.mat2arr.html:594,update,updated,594,psi4manual/1.9.x/api/psi4.driver.p4util.mat2arr.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/api/psi4.driver.p4util.mat2arr.html,1,['update'],['updated']
Deployability,"﻿. mcscf. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; mcscf. mcscf¶. psi4.core.mcscf(arg0: psi4.core.Wavefunction) → psi4.core.Wavefunction¶; Runs the MCSCF code, (N.B. restricted to certain active spaces). table of contents. mcscf; mcscf(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; mcscf. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/api/psi4.core.mcscf.html:508,update,updated,508,psi4manual/master/api/psi4.core.mcscf.html,https://psicode.org,https://psicode.org/psi4manual/master/api/psi4.core.mcscf.html,1,['update'],['updated']
Deployability,"﻿. mcscf. Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. mcscf¶. psi4.core.mcscf(arg0: psi::Wavefunction) → psi::Wavefunction¶; Runs the MCSCF code, (N.B. restricted to certain active spaces). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2018, The Psi4 Project.; Last updated on Wednesday, 25 July 2018 04:21AM.; Created using Sphinx 1.7.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/api/psi4.core.mcscf-1.html:430,update,updated,430,psi4manual/1.2.1/api/psi4.core.mcscf-1.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/api/psi4.core.mcscf-1.html,2,['update'],['updated']
Deployability,"﻿. mcscf. Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. mcscf¶. psi4.core.mcscf(arg0: psi::Wavefunction) → psi::Wavefunction¶; Runs the MCSCF code, (N.B. restricted to certain active spaces). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2019, The Psi4 Project.; Last updated on Wednesday, 15 May 2019 08:49PM.; Created using Sphinx 1.8.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/api/psi4.core.mcscf-1.html:430,update,updated,430,psi4manual/1.3.2/api/psi4.core.mcscf-1.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/api/psi4.core.mcscf-1.html,2,['update'],['updated']
Deployability,"﻿. mcscf. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; mcscf. mcscf¶. psi4.core.mcscf(arg0: psi4.core.Wavefunction) → psi4.core.Wavefunction¶; Runs the MCSCF code, (N.B. restricted to certain active spaces). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; mcscf. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/api/psi4.core.mcscf-1.html:450,update,updated,450,psi4manual/1.4.0/api/psi4.core.mcscf-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/api/psi4.core.mcscf-1.html,2,['update'],['updated']
Deployability,"﻿. mcscf. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; mcscf. mcscf¶. psi4.core.mcscf(arg0: psi4.core.Wavefunction) → psi4.core.Wavefunction¶; Runs the MCSCF code, (N.B. restricted to certain active spaces). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; mcscf. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/api/psi4.core.mcscf-1.html:450,update,updated,450,psi4manual/1.5.0/api/psi4.core.mcscf-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/api/psi4.core.mcscf-1.html,2,['update'],['updated']
Deployability,"﻿. mcscf. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; mcscf. mcscf¶. psi4.core.mcscf(arg0: psi4.core.Wavefunction) → psi4.core.Wavefunction¶; Runs the MCSCF code, (N.B. restricted to certain active spaces). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; mcscf. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/api/psi4.core.mcscf.html:450,update,updated,450,psi4manual/1.6.x/api/psi4.core.mcscf.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/api/psi4.core.mcscf.html,1,['update'],['updated']
Deployability,"﻿. mcscf. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; mcscf. mcscf¶. psi4.core.mcscf(arg0: psi4.core.Wavefunction) → psi4.core.Wavefunction¶; Runs the MCSCF code, (N.B. restricted to certain active spaces). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; mcscf. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/api/psi4.core.mcscf.html:455,update,updated,455,psi4manual/1.7.x/api/psi4.core.mcscf.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/api/psi4.core.mcscf.html,1,['update'],['updated']
Deployability,"﻿. mcscf. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; mcscf. mcscf¶. psi4.core.mcscf(arg0: psi4.core.Wavefunction) → psi4.core.Wavefunction¶; Runs the MCSCF code, (N.B. restricted to certain active spaces). table of contents. mcscf; mcscf(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; mcscf. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/api/psi4.core.mcscf.html:494,update,updated,494,psi4manual/1.8.x/api/psi4.core.mcscf.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/api/psi4.core.mcscf.html,1,['update'],['updated']
Deployability,"﻿. mcscf. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; mcscf. mcscf¶. psi4.core.mcscf(arg0: psi4.core.Wavefunction) → psi4.core.Wavefunction¶; Runs the MCSCF code, (N.B. restricted to certain active spaces). table of contents. mcscf; mcscf(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; mcscf. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/api/psi4.core.mcscf.html:494,update,updated,494,psi4manual/1.9.x/api/psi4.core.mcscf.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/api/psi4.core.mcscf.html,1,['update'],['updated']
Deployability,"﻿. mdi_run. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; mdi_run. mdi_run¶. psi4.driver.mdi_run(scf_method, **kwargs)[source]¶; Begin functioning as an MDI (MolSSI driver interface) engine. Parameters:. scf_method (str) – Method (SCF or post-SCF) used when calculating energies or gradients.; molecule – The target molecule, if not the last molecule defined.; kwargs – Any additional arguments to pass to psi4.driver.energy() or; psi4.driver.gradient() computation. table of contents. mdi_run; mdi_run(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; mdi_run. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/api/psi4.driver.mdi_run.html:772,update,updated,772,psi4manual/master/api/psi4.driver.mdi_run.html,https://psicode.org,https://psicode.org/psi4manual/master/api/psi4.driver.mdi_run.html,1,['update'],['updated']
Deployability,"﻿. mdi_run. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; mdi_run. mdi_run¶. psi4.driver.mdi_run(scf_method, **kwargs)[source]¶; Begin functioning as an MDI engine. Parameters; scf_method – Method used when calculating energies or gradients. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; mdi_run. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/api/psi4.driver.mdi_run-1.html:485,update,updated,485,psi4manual/1.4.0/api/psi4.driver.mdi_run-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/api/psi4.driver.mdi_run-1.html,2,['update'],['updated']
Deployability,"﻿. mdi_run. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; mdi_run. mdi_run¶. psi4.driver.mdi_run(scf_method, **kwargs)[source]¶; Begin functioning as an MDI engine. Parameters; scf_method – Method used when calculating energies or gradients. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; mdi_run. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/api/psi4.driver.mdi_run-1.html:485,update,updated,485,psi4manual/1.5.0/api/psi4.driver.mdi_run-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/api/psi4.driver.mdi_run-1.html,2,['update'],['updated']
Deployability,"﻿. mdi_run. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; mdi_run. mdi_run¶. psi4.driver.mdi_run(scf_method, **kwargs)[source]¶; Begin functioning as an MDI engine. Parameters; scf_method – Method used when calculating energies or gradients. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; mdi_run. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/api/psi4.driver.mdi_run.html:485,update,updated,485,psi4manual/1.6.x/api/psi4.driver.mdi_run.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/api/psi4.driver.mdi_run.html,1,['update'],['updated']
Deployability,"﻿. mdi_run. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; mdi_run. mdi_run¶. psi4.driver.mdi_run(scf_method, **kwargs)[source]¶; Begin functioning as an MDI (MolSSI driver interface) engine. Parameters:. scf_method (str) – Method (SCF or post-SCF) used when calculating energies or gradients.; molecule – The target molecule, if not the last molecule defined.; kwargs – Any additional arguments to pass to psi4.driver.energy() or; psi4.driver.gradient() computation. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; mdi_run. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/api/psi4.driver.mdi_run.html:715,update,updated,715,psi4manual/1.7.x/api/psi4.driver.mdi_run.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/api/psi4.driver.mdi_run.html,1,['update'],['updated']
Deployability,"﻿. mdi_run. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; mdi_run. mdi_run¶. psi4.driver.mdi_run(scf_method, **kwargs)[source]¶; Begin functioning as an MDI (MolSSI driver interface) engine. Parameters:. scf_method (str) – Method (SCF or post-SCF) used when calculating energies or gradients.; molecule – The target molecule, if not the last molecule defined.; kwargs – Any additional arguments to pass to psi4.driver.energy() or; psi4.driver.gradient() computation. table of contents. mdi_run; mdi_run(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; mdi_run. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/api/psi4.driver.mdi_run.html:758,update,updated,758,psi4manual/1.8.x/api/psi4.driver.mdi_run.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/api/psi4.driver.mdi_run.html,1,['update'],['updated']
Deployability,"﻿. mdi_run. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; mdi_run. mdi_run¶. psi4.driver.mdi_run(scf_method, **kwargs)[source]¶; Begin functioning as an MDI (MolSSI driver interface) engine. Parameters:. scf_method (str) – Method (SCF or post-SCF) used when calculating energies or gradients.; molecule – The target molecule, if not the last molecule defined.; kwargs – Any additional arguments to pass to psi4.driver.energy() or; psi4.driver.gradient() computation. table of contents. mdi_run; mdi_run(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; mdi_run. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/api/psi4.driver.mdi_run.html:758,update,updated,758,psi4manual/1.9.x/api/psi4.driver.mdi_run.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/api/psi4.driver.mdi_run.html,1,['update'],['updated']
Deployability,"﻿. message_box. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; message_box. message_box¶. psi4.driver.message_box(message, max_width=80, min_width=30)[source]¶; Put a message string into a box for extra attention. Parameters:. message (str) – Message string to be boxed.; max_width (int) – Maximal character width of the box.; min_width (int) – Minimal character width of the box. Returns:; Box containing the message as a multiline string. Return type:; str. table of contents. message_box; message_box(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; message_box. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/api/psi4.driver.message_box.html:776,update,updated,776,psi4manual/master/api/psi4.driver.message_box.html,https://psicode.org,https://psicode.org/psi4manual/master/api/psi4.driver.message_box.html,1,['update'],['updated']
Deployability,"﻿. message_box. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; message_box. message_box¶. psi4.driver.p4util.message_box(message, max_width=80, min_width=30)[source]¶; Put a message string into a box for extra attention. Parameters:. message (str) – Message string to be boxed.; max_width (int) – Maximal character width of the box.; min_width (int) – Minimal character width of the box. Returns:; Box containing the message as a multiline string. Return type:; str. table of contents. message_box; message_box(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; message_box. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/api/psi4.driver.p4util.message_box.html:783,update,updated,783,psi4manual/master/api/psi4.driver.p4util.message_box.html,https://psicode.org,https://psicode.org/psi4manual/master/api/psi4.driver.p4util.message_box.html,1,['update'],['updated']
Deployability,"﻿. message_box. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; message_box. message_box¶. psi4.driver.message_box(message=None, max_width=80, min_width=30)[source]¶; put a message string into a box for extra attention. Parameters. message (Optional[str]) – message string to be boxed; max_width (int) – maximal character width of the box; min_width (int) – . Returns; box containing the message as a multiline string. Return type; str. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; message_box. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/api/psi4.driver.message_box-1.html:682,update,updated,682,psi4manual/1.4.0/api/psi4.driver.message_box-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/api/psi4.driver.message_box-1.html,2,['update'],['updated']
Deployability,"﻿. message_box. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; message_box. message_box¶. psi4.driver.message_box(message=None, max_width=80, min_width=30)[source]¶; put a message string into a box for extra attention. Parameters. message (Optional[str]) – message string to be boxed; max_width (int) – maximal character width of the box; min_width (int) – . Returns; box containing the message as a multiline string. Return type; str. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; message_box. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/api/psi4.driver.message_box-1.html:682,update,updated,682,psi4manual/1.5.0/api/psi4.driver.message_box-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/api/psi4.driver.message_box-1.html,2,['update'],['updated']
Deployability,"﻿. message_box. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; message_box. message_box¶. psi4.driver.message_box(message=None, max_width=80, min_width=30)[source]¶; put a message string into a box for extra attention. Parameters. message (Optional[str]) – message string to be boxed; max_width (int) – maximal character width of the box; min_width (int) – . Returns; box containing the message as a multiline string. Return type; str. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; message_box. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/api/psi4.driver.message_box.html:682,update,updated,682,psi4manual/1.6.x/api/psi4.driver.message_box.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/api/psi4.driver.message_box.html,1,['update'],['updated']
Deployability,"﻿. message_box. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; message_box. message_box¶. psi4.driver.message_box(message, max_width=80, min_width=30)[source]¶; Put a message string into a box for extra attention. Parameters:. message (str) – Message string to be boxed.; max_width (int) – Maximal character width of the box.; min_width (int) – Minimal character width of the box. Returns:; Box containing the message as a multiline string. Return type:; str. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; message_box. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/api/psi4.driver.message_box.html:711,update,updated,711,psi4manual/1.7.x/api/psi4.driver.message_box.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/api/psi4.driver.message_box.html,1,['update'],['updated']
Deployability,"﻿. message_box. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; message_box. message_box¶. psi4.driver.p4util.message_box(message, max_width=80, min_width=30)[source]¶; Put a message string into a box for extra attention. Parameters:. message (str) – Message string to be boxed.; max_width (int) – Maximal character width of the box.; min_width (int) – Minimal character width of the box. Returns:; Box containing the message as a multiline string. Return type:; str. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; message_box. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/api/psi4.driver.p4util.message_box.html:718,update,updated,718,psi4manual/1.7.x/api/psi4.driver.p4util.message_box.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/api/psi4.driver.p4util.message_box.html,1,['update'],['updated']
Deployability,"﻿. message_box. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; message_box. message_box¶. psi4.driver.message_box(message, max_width=80, min_width=30)[source]¶; Put a message string into a box for extra attention. Parameters:. message (str) – Message string to be boxed.; max_width (int) – Maximal character width of the box.; min_width (int) – Minimal character width of the box. Returns:; Box containing the message as a multiline string. Return type:; str. table of contents. message_box; message_box(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; message_box. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/api/psi4.driver.message_box.html:762,update,updated,762,psi4manual/1.8.x/api/psi4.driver.message_box.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/api/psi4.driver.message_box.html,1,['update'],['updated']
Deployability,"﻿. message_box. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; message_box. message_box¶. psi4.driver.p4util.message_box(message, max_width=80, min_width=30)[source]¶; Put a message string into a box for extra attention. Parameters:. message (str) – Message string to be boxed.; max_width (int) – Maximal character width of the box.; min_width (int) – Minimal character width of the box. Returns:; Box containing the message as a multiline string. Return type:; str. table of contents. message_box; message_box(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; message_box. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/api/psi4.driver.p4util.message_box.html:769,update,updated,769,psi4manual/1.8.x/api/psi4.driver.p4util.message_box.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/api/psi4.driver.p4util.message_box.html,1,['update'],['updated']
Deployability,"﻿. message_box. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; message_box. message_box¶. psi4.driver.message_box(message, max_width=80, min_width=30)[source]¶; Put a message string into a box for extra attention. Parameters:. message (str) – Message string to be boxed.; max_width (int) – Maximal character width of the box.; min_width (int) – Minimal character width of the box. Returns:; Box containing the message as a multiline string. Return type:; str. table of contents. message_box; message_box(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; message_box. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/api/psi4.driver.message_box.html:762,update,updated,762,psi4manual/1.9.x/api/psi4.driver.message_box.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/api/psi4.driver.message_box.html,1,['update'],['updated']
Deployability,"﻿. message_box. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; message_box. message_box¶. psi4.driver.p4util.message_box(message, max_width=80, min_width=30)[source]¶; Put a message string into a box for extra attention. Parameters:. message (str) – Message string to be boxed.; max_width (int) – Maximal character width of the box.; min_width (int) – Minimal character width of the box. Returns:; Box containing the message as a multiline string. Return type:; str. table of contents. message_box; message_box(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; message_box. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/api/psi4.driver.p4util.message_box.html:769,update,updated,769,psi4manual/1.9.x/api/psi4.driver.p4util.message_box.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/api/psi4.driver.p4util.message_box.html,1,['update'],['updated']
Deployability,"﻿. molecule_get_attr. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; molecule_get_attr. molecule_get_attr¶. psi4.driver.molecule_get_attr(self, name)[source]¶; Function to redefine __getattr__ method of molecule class. table of contents. molecule_get_attr; molecule_get_attr(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; molecule_get_attr. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/api/psi4.driver.molecule_get_attr.html:553,update,updated,553,psi4manual/master/api/psi4.driver.molecule_get_attr.html,https://psicode.org,https://psicode.org/psi4manual/master/api/psi4.driver.molecule_get_attr.html,1,['update'],['updated']
Deployability,"﻿. molecule_get_attr. Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. molecule_get_attr¶. psi4.driver.molecule_get_attr(self, name)[source]¶; Function to redefine __getattr__ method of molecule class. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2018, The Psi4 Project.; Last updated on Wednesday, 25 July 2018 04:21AM.; Created using Sphinx 1.7.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/api/psi4.driver.molecule_get_attr-1.html:437,update,updated,437,psi4manual/1.2.1/api/psi4.driver.molecule_get_attr-1.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/api/psi4.driver.molecule_get_attr-1.html,2,['update'],['updated']
Deployability,"﻿. molecule_get_attr. Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. molecule_get_attr¶. psi4.driver.molecule_get_attr(self, name)[source]¶; Function to redefine __getattr__ method of molecule class. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2019, The Psi4 Project.; Last updated on Wednesday, 15 May 2019 08:49PM.; Created using Sphinx 1.8.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/api/psi4.driver.molecule_get_attr-1.html:437,update,updated,437,psi4manual/1.3.2/api/psi4.driver.molecule_get_attr-1.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/api/psi4.driver.molecule_get_attr-1.html,2,['update'],['updated']
Deployability,"﻿. molecule_get_attr. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; molecule_get_attr. molecule_get_attr¶. psi4.driver.molecule_get_attr(self, name)[source]¶; Function to redefine __getattr__ method of molecule class. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; molecule_get_attr. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/api/psi4.driver.molecule_get_attr-1.html:471,update,updated,471,psi4manual/1.4.0/api/psi4.driver.molecule_get_attr-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/api/psi4.driver.molecule_get_attr-1.html,2,['update'],['updated']
Deployability,"﻿. molecule_get_attr. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; molecule_get_attr. molecule_get_attr¶. psi4.driver.molecule_get_attr(self, name)[source]¶; Function to redefine __getattr__ method of molecule class. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; molecule_get_attr. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/api/psi4.driver.molecule_get_attr-1.html:471,update,updated,471,psi4manual/1.5.0/api/psi4.driver.molecule_get_attr-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/api/psi4.driver.molecule_get_attr-1.html,2,['update'],['updated']
Deployability,"﻿. molecule_get_attr. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; molecule_get_attr. molecule_get_attr¶. psi4.driver.molecule_get_attr(self, name)[source]¶; Function to redefine __getattr__ method of molecule class. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; molecule_get_attr. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/api/psi4.driver.molecule_get_attr.html:471,update,updated,471,psi4manual/1.6.x/api/psi4.driver.molecule_get_attr.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/api/psi4.driver.molecule_get_attr.html,1,['update'],['updated']
Deployability,"﻿. molecule_get_attr. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; molecule_get_attr. molecule_get_attr¶. psi4.driver.molecule_get_attr(self, name)[source]¶; Function to redefine __getattr__ method of molecule class. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; molecule_get_attr. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/api/psi4.driver.molecule_get_attr.html:476,update,updated,476,psi4manual/1.7.x/api/psi4.driver.molecule_get_attr.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/api/psi4.driver.molecule_get_attr.html,1,['update'],['updated']
Deployability,"﻿. molecule_get_attr. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; molecule_get_attr. molecule_get_attr¶. psi4.driver.molecule_get_attr(self, name)[source]¶; Function to redefine __getattr__ method of molecule class. table of contents. molecule_get_attr; molecule_get_attr(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; molecule_get_attr. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/api/psi4.driver.molecule_get_attr.html:539,update,updated,539,psi4manual/1.8.x/api/psi4.driver.molecule_get_attr.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/api/psi4.driver.molecule_get_attr.html,1,['update'],['updated']
Deployability,"﻿. molecule_get_attr. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; molecule_get_attr. molecule_get_attr¶. psi4.driver.molecule_get_attr(self, name)[source]¶; Function to redefine __getattr__ method of molecule class. table of contents. molecule_get_attr; molecule_get_attr(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; molecule_get_attr. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/api/psi4.driver.molecule_get_attr.html:539,update,updated,539,psi4manual/1.9.x/api/psi4.driver.molecule_get_attr.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/api/psi4.driver.molecule_get_attr.html,1,['update'],['updated']
Deployability,"﻿. molecule_set_attr. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; molecule_set_attr. molecule_set_attr¶. psi4.driver.molecule_set_attr(self, name, value)[source]¶; Function to redefine __setattr__ method of molecule class. table of contents. molecule_set_attr; molecule_set_attr(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; molecule_set_attr. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/api/psi4.driver.molecule_set_attr.html:560,update,updated,560,psi4manual/master/api/psi4.driver.molecule_set_attr.html,https://psicode.org,https://psicode.org/psi4manual/master/api/psi4.driver.molecule_set_attr.html,1,['update'],['updated']
Deployability,"﻿. molecule_set_attr. Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. molecule_set_attr¶. psi4.driver.molecule_set_attr(self, name, value)[source]¶; Function to redefine __setattr__ method of molecule class. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2018, The Psi4 Project.; Last updated on Wednesday, 25 July 2018 04:21AM.; Created using Sphinx 1.7.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/api/psi4.driver.molecule_set_attr-1.html:444,update,updated,444,psi4manual/1.2.1/api/psi4.driver.molecule_set_attr-1.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/api/psi4.driver.molecule_set_attr-1.html,2,['update'],['updated']
Deployability,"﻿. molecule_set_attr. Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. molecule_set_attr¶. psi4.driver.molecule_set_attr(self, name, value)[source]¶; Function to redefine __setattr__ method of molecule class. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2019, The Psi4 Project.; Last updated on Wednesday, 15 May 2019 08:49PM.; Created using Sphinx 1.8.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/api/psi4.driver.molecule_set_attr-1.html:444,update,updated,444,psi4manual/1.3.2/api/psi4.driver.molecule_set_attr-1.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/api/psi4.driver.molecule_set_attr-1.html,2,['update'],['updated']
Deployability,"﻿. molecule_set_attr. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; molecule_set_attr. molecule_set_attr¶. psi4.driver.molecule_set_attr(self, name, value)[source]¶; Function to redefine __setattr__ method of molecule class. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; molecule_set_attr. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/api/psi4.driver.molecule_set_attr-1.html:478,update,updated,478,psi4manual/1.4.0/api/psi4.driver.molecule_set_attr-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/api/psi4.driver.molecule_set_attr-1.html,2,['update'],['updated']
Deployability,"﻿. molecule_set_attr. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; molecule_set_attr. molecule_set_attr¶. psi4.driver.molecule_set_attr(self, name, value)[source]¶; Function to redefine __setattr__ method of molecule class. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; molecule_set_attr. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/api/psi4.driver.molecule_set_attr-1.html:478,update,updated,478,psi4manual/1.5.0/api/psi4.driver.molecule_set_attr-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/api/psi4.driver.molecule_set_attr-1.html,2,['update'],['updated']
Deployability,"﻿. molecule_set_attr. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; molecule_set_attr. molecule_set_attr¶. psi4.driver.molecule_set_attr(self, name, value)[source]¶; Function to redefine __setattr__ method of molecule class. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; molecule_set_attr. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/api/psi4.driver.molecule_set_attr.html:478,update,updated,478,psi4manual/1.6.x/api/psi4.driver.molecule_set_attr.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/api/psi4.driver.molecule_set_attr.html,1,['update'],['updated']
Deployability,"﻿. molecule_set_attr. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; molecule_set_attr. molecule_set_attr¶. psi4.driver.molecule_set_attr(self, name, value)[source]¶; Function to redefine __setattr__ method of molecule class. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; molecule_set_attr. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/api/psi4.driver.molecule_set_attr.html:483,update,updated,483,psi4manual/1.7.x/api/psi4.driver.molecule_set_attr.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/api/psi4.driver.molecule_set_attr.html,1,['update'],['updated']
Deployability,"﻿. molecule_set_attr. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; molecule_set_attr. molecule_set_attr¶. psi4.driver.molecule_set_attr(self, name, value)[source]¶; Function to redefine __setattr__ method of molecule class. table of contents. molecule_set_attr; molecule_set_attr(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; molecule_set_attr. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/api/psi4.driver.molecule_set_attr.html:546,update,updated,546,psi4manual/1.8.x/api/psi4.driver.molecule_set_attr.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/api/psi4.driver.molecule_set_attr.html,1,['update'],['updated']
Deployability,"﻿. molecule_set_attr. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; molecule_set_attr. molecule_set_attr¶. psi4.driver.molecule_set_attr(self, name, value)[source]¶; Function to redefine __setattr__ method of molecule class. table of contents. molecule_set_attr; molecule_set_attr(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; molecule_set_attr. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/api/psi4.driver.molecule_set_attr.html:546,update,updated,546,psi4manual/1.9.x/api/psi4.driver.molecule_set_attr.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/api/psi4.driver.molecule_set_attr.html,1,['update'],['updated']
Deployability,"﻿. mrcc_generate_input. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; mrcc_generate_input. mrcc_generate_input¶. psi4.core.mrcc_generate_input(arg0: psi4.core.Wavefunction, arg1: dict) → psi4.core.PsiReturnType¶; Generates an input for Kallay’s MRCC code. table of contents. mrcc_generate_input; mrcc_generate_input(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; mrcc_generate_input. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/api/psi4.core.mrcc_generate_input.html:597,update,updated,597,psi4manual/master/api/psi4.core.mrcc_generate_input.html,https://psicode.org,https://psicode.org/psi4manual/master/api/psi4.core.mrcc_generate_input.html,1,['update'],['updated']
Deployability,"﻿. mrcc_generate_input. Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. mrcc_generate_input¶. psi4.core.mrcc_generate_input(arg0: psi::Wavefunction, arg1: dict) → psi4.core.PsiReturnType¶; Generates an input for Kallay’s MRCC code. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2018, The Psi4 Project.; Last updated on Wednesday, 25 July 2018 04:21AM.; Created using Sphinx 1.7.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/api/psi4.core.mrcc_generate_input-1.html:468,update,updated,468,psi4manual/1.2.1/api/psi4.core.mrcc_generate_input-1.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/api/psi4.core.mrcc_generate_input-1.html,2,['update'],['updated']
Deployability,"﻿. mrcc_generate_input. Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. mrcc_generate_input¶. psi4.core.mrcc_generate_input(arg0: psi::Wavefunction, arg1: dict) → psi4.core.PsiReturnType¶; Generates an input for Kallay’s MRCC code. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2019, The Psi4 Project.; Last updated on Wednesday, 15 May 2019 08:49PM.; Created using Sphinx 1.8.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/api/psi4.core.mrcc_generate_input-1.html:468,update,updated,468,psi4manual/1.3.2/api/psi4.core.mrcc_generate_input-1.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/api/psi4.core.mrcc_generate_input-1.html,2,['update'],['updated']
Deployability,"﻿. mrcc_generate_input. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; mrcc_generate_input. mrcc_generate_input¶. psi4.core.mrcc_generate_input(arg0: psi4.core.Wavefunction, arg1: dict) → psi4.core.PsiReturnType¶; Generates an input for Kallay’s MRCC code. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; mrcc_generate_input. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/api/psi4.core.mrcc_generate_input-1.html:511,update,updated,511,psi4manual/1.4.0/api/psi4.core.mrcc_generate_input-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/api/psi4.core.mrcc_generate_input-1.html,2,['update'],['updated']
Deployability,"﻿. mrcc_generate_input. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; mrcc_generate_input. mrcc_generate_input¶. psi4.core.mrcc_generate_input(arg0: psi4.core.Wavefunction, arg1: dict) → psi4.core.PsiReturnType¶; Generates an input for Kallay’s MRCC code. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; mrcc_generate_input. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/api/psi4.core.mrcc_generate_input-1.html:511,update,updated,511,psi4manual/1.5.0/api/psi4.core.mrcc_generate_input-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/api/psi4.core.mrcc_generate_input-1.html,2,['update'],['updated']
Deployability,"﻿. mrcc_generate_input. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; mrcc_generate_input. mrcc_generate_input¶. psi4.core.mrcc_generate_input(arg0: psi4.core.Wavefunction, arg1: dict) → psi4.core.PsiReturnType¶; Generates an input for Kallay’s MRCC code. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; mrcc_generate_input. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/api/psi4.core.mrcc_generate_input.html:511,update,updated,511,psi4manual/1.6.x/api/psi4.core.mrcc_generate_input.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/api/psi4.core.mrcc_generate_input.html,1,['update'],['updated']
Deployability,"﻿. mrcc_generate_input. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; mrcc_generate_input. mrcc_generate_input¶. psi4.core.mrcc_generate_input(arg0: psi4.core.Wavefunction, arg1: dict) → psi4.core.PsiReturnType¶; Generates an input for Kallay’s MRCC code. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; mrcc_generate_input. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/api/psi4.core.mrcc_generate_input.html:516,update,updated,516,psi4manual/1.7.x/api/psi4.core.mrcc_generate_input.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/api/psi4.core.mrcc_generate_input.html,1,['update'],['updated']
Deployability,"﻿. mrcc_generate_input. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; mrcc_generate_input. mrcc_generate_input¶. psi4.core.mrcc_generate_input(arg0: psi4.core.Wavefunction, arg1: dict) → psi4.core.PsiReturnType¶; Generates an input for Kallay’s MRCC code. table of contents. mrcc_generate_input; mrcc_generate_input(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; mrcc_generate_input. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/api/psi4.core.mrcc_generate_input.html:583,update,updated,583,psi4manual/1.8.x/api/psi4.core.mrcc_generate_input.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/api/psi4.core.mrcc_generate_input.html,1,['update'],['updated']
Deployability,"﻿. mrcc_generate_input. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; mrcc_generate_input. mrcc_generate_input¶. psi4.core.mrcc_generate_input(arg0: psi4.core.Wavefunction, arg1: dict) → psi4.core.PsiReturnType¶; Generates an input for Kallay’s MRCC code. table of contents. mrcc_generate_input; mrcc_generate_input(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; mrcc_generate_input. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/api/psi4.core.mrcc_generate_input.html:583,update,updated,583,psi4manual/1.9.x/api/psi4.core.mrcc_generate_input.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/api/psi4.core.mrcc_generate_input.html,1,['update'],['updated']
Deployability,"﻿. mrcc_load_densities. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; mrcc_load_densities. mrcc_load_densities¶. psi4.core.mrcc_load_densities(arg0: psi4.core.Wavefunction, arg1: dict) → psi4.core.PsiReturnType¶; Reads in the density matrices from Kallay’s MRCC code. table of contents. mrcc_load_densities; mrcc_load_densities(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; mrcc_load_densities. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/api/psi4.core.mrcc_load_densities.html:609,update,updated,609,psi4manual/master/api/psi4.core.mrcc_load_densities.html,https://psicode.org,https://psicode.org/psi4manual/master/api/psi4.core.mrcc_load_densities.html,1,['update'],['updated']
Deployability,"﻿. mrcc_load_densities. Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. mrcc_load_densities¶. psi4.core.mrcc_load_densities(arg0: psi::Wavefunction, arg1: dict) → psi4.core.PsiReturnType¶; Reads in the density matrices from Kallay’s MRCC code. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2018, The Psi4 Project.; Last updated on Wednesday, 25 July 2018 04:21AM.; Created using Sphinx 1.7.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/api/psi4.core.mrcc_load_densities-1.html:480,update,updated,480,psi4manual/1.2.1/api/psi4.core.mrcc_load_densities-1.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/api/psi4.core.mrcc_load_densities-1.html,2,['update'],['updated']
Deployability,"﻿. mrcc_load_densities. Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. mrcc_load_densities¶. psi4.core.mrcc_load_densities(arg0: psi::Wavefunction, arg1: dict) → psi4.core.PsiReturnType¶; Reads in the density matrices from Kallay’s MRCC code. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2019, The Psi4 Project.; Last updated on Wednesday, 15 May 2019 08:49PM.; Created using Sphinx 1.8.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/api/psi4.core.mrcc_load_densities-1.html:480,update,updated,480,psi4manual/1.3.2/api/psi4.core.mrcc_load_densities-1.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/api/psi4.core.mrcc_load_densities-1.html,2,['update'],['updated']
Deployability,"﻿. mrcc_load_densities. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; mrcc_load_densities. mrcc_load_densities¶. psi4.core.mrcc_load_densities(arg0: psi4.core.Wavefunction, arg1: dict) → psi4.core.PsiReturnType¶; Reads in the density matrices from Kallay’s MRCC code. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; mrcc_load_densities. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/api/psi4.core.mrcc_load_densities-1.html:523,update,updated,523,psi4manual/1.4.0/api/psi4.core.mrcc_load_densities-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/api/psi4.core.mrcc_load_densities-1.html,2,['update'],['updated']
Deployability,"﻿. mrcc_load_densities. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; mrcc_load_densities. mrcc_load_densities¶. psi4.core.mrcc_load_densities(arg0: psi4.core.Wavefunction, arg1: dict) → psi4.core.PsiReturnType¶; Reads in the density matrices from Kallay’s MRCC code. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; mrcc_load_densities. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/api/psi4.core.mrcc_load_densities-1.html:523,update,updated,523,psi4manual/1.5.0/api/psi4.core.mrcc_load_densities-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/api/psi4.core.mrcc_load_densities-1.html,2,['update'],['updated']
Deployability,"﻿. mrcc_load_densities. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; mrcc_load_densities. mrcc_load_densities¶. psi4.core.mrcc_load_densities(arg0: psi4.core.Wavefunction, arg1: dict) → psi4.core.PsiReturnType¶; Reads in the density matrices from Kallay’s MRCC code. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; mrcc_load_densities. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/api/psi4.core.mrcc_load_densities.html:523,update,updated,523,psi4manual/1.6.x/api/psi4.core.mrcc_load_densities.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/api/psi4.core.mrcc_load_densities.html,1,['update'],['updated']
Deployability,"﻿. mrcc_load_densities. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; mrcc_load_densities. mrcc_load_densities¶. psi4.core.mrcc_load_densities(arg0: psi4.core.Wavefunction, arg1: dict) → psi4.core.PsiReturnType¶; Reads in the density matrices from Kallay’s MRCC code. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; mrcc_load_densities. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/api/psi4.core.mrcc_load_densities.html:528,update,updated,528,psi4manual/1.7.x/api/psi4.core.mrcc_load_densities.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/api/psi4.core.mrcc_load_densities.html,1,['update'],['updated']
Deployability,"﻿. mrcc_load_densities. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; mrcc_load_densities. mrcc_load_densities¶. psi4.core.mrcc_load_densities(arg0: psi4.core.Wavefunction, arg1: dict) → psi4.core.PsiReturnType¶; Reads in the density matrices from Kallay’s MRCC code. table of contents. mrcc_load_densities; mrcc_load_densities(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; mrcc_load_densities. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/api/psi4.core.mrcc_load_densities.html:595,update,updated,595,psi4manual/1.8.x/api/psi4.core.mrcc_load_densities.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/api/psi4.core.mrcc_load_densities.html,1,['update'],['updated']
Deployability,"﻿. mrcc_load_densities. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; mrcc_load_densities. mrcc_load_densities¶. psi4.core.mrcc_load_densities(arg0: psi4.core.Wavefunction, arg1: dict) → psi4.core.PsiReturnType¶; Reads in the density matrices from Kallay’s MRCC code. table of contents. mrcc_load_densities; mrcc_load_densities(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; mrcc_load_densities. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/api/psi4.core.mrcc_load_densities.html:595,update,updated,595,psi4manual/1.9.x/api/psi4.core.mrcc_load_densities.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/api/psi4.core.mrcc_load_densities.html,1,['update'],['updated']
Deployability,"﻿. occ. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; occ. occ¶. psi4.core.occ(ref_wfn: psi4.core.Wavefunction) → psi4.core.Wavefunction¶; Runs the orbital optimized CC codes. table of contents. occ; occ(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; occ. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/api/psi4.core.occ.html:469,update,updated,469,psi4manual/master/api/psi4.core.occ.html,https://psicode.org,https://psicode.org/psi4manual/master/api/psi4.core.occ.html,1,['update'],['updated']
Deployability,"﻿. occ. Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. occ¶. psi4.core.occ(arg0: psi::Wavefunction) → psi::Wavefunction¶; Runs the orbital optimized CC codes. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2018, The Psi4 Project.; Last updated on Wednesday, 25 July 2018 04:21AM.; Created using Sphinx 1.7.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/api/psi4.core.occ-1.html:396,update,updated,396,psi4manual/1.2.1/api/psi4.core.occ-1.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/api/psi4.core.occ-1.html,2,['update'],['updated']
Deployability,"﻿. occ. Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. occ¶. psi4.core.occ(arg0: psi::Wavefunction) → psi::Wavefunction¶; Runs the orbital optimized CC codes. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2019, The Psi4 Project.; Last updated on Wednesday, 15 May 2019 08:49PM.; Created using Sphinx 1.8.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/api/psi4.core.occ-1.html:396,update,updated,396,psi4manual/1.3.2/api/psi4.core.occ-1.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/api/psi4.core.occ-1.html,2,['update'],['updated']
Deployability,"﻿. occ. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; occ. occ¶. psi4.core.occ(ref_wfn: psi4.core.Wavefunction) → psi4.core.Wavefunction¶; Runs the orbital optimized CC codes. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; occ. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/api/psi4.core.occ-1.html:415,update,updated,415,psi4manual/1.4.0/api/psi4.core.occ-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/api/psi4.core.occ-1.html,2,['update'],['updated']
Deployability,"﻿. occ. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; occ. occ¶. psi4.core.occ(ref_wfn: psi4.core.Wavefunction) → psi4.core.Wavefunction¶; Runs the orbital optimized CC codes. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; occ. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/api/psi4.core.occ-1.html:415,update,updated,415,psi4manual/1.5.0/api/psi4.core.occ-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/api/psi4.core.occ-1.html,2,['update'],['updated']
Deployability,"﻿. occ. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; occ. occ¶. psi4.core.occ(ref_wfn: psi4.core.Wavefunction) → psi4.core.Wavefunction¶; Runs the orbital optimized CC codes. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; occ. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/api/psi4.core.occ.html:415,update,updated,415,psi4manual/1.6.x/api/psi4.core.occ.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/api/psi4.core.occ.html,1,['update'],['updated']
Deployability,"﻿. occ. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; occ. occ¶. psi4.core.occ(ref_wfn: psi4.core.Wavefunction) → psi4.core.Wavefunction¶; Runs the orbital optimized CC codes. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; occ. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/api/psi4.core.occ.html:420,update,updated,420,psi4manual/1.7.x/api/psi4.core.occ.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/api/psi4.core.occ.html,1,['update'],['updated']
Deployability,"﻿. occ. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; occ. occ¶. psi4.core.occ(ref_wfn: psi4.core.Wavefunction) → psi4.core.Wavefunction¶; Runs the orbital optimized CC codes. table of contents. occ; occ(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; occ. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/api/psi4.core.occ.html:455,update,updated,455,psi4manual/1.8.x/api/psi4.core.occ.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/api/psi4.core.occ.html,1,['update'],['updated']
Deployability,"﻿. occ. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; occ. occ¶. psi4.core.occ(ref_wfn: psi4.core.Wavefunction) → psi4.core.Wavefunction¶; Runs the orbital optimized CC codes. table of contents. occ; occ(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; occ. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/api/psi4.core.occ.html:455,update,updated,455,psi4manual/1.9.x/api/psi4.core.occ.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/api/psi4.core.occ.html,1,['update'],['updated']
Deployability,"﻿. oeprop. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; oeprop. oeprop¶. psi4.driver.oeprop(wfn, *args, **kwargs)[source]¶; Evaluate one-electron properties. Returns:; None. Parameters:. wfn (Wavefunction) – set of molecule, basis, orbitals from which to compute properties; args (List[str]) – Arbitrary-number of properties to be computed from wfn.; See Available One-Electron Properties.; title (str) – label prepended to all psivars computed. Examples:. >>> # [1] Moments with specific label; >>> E, wfn = energy('hf', return_wfn=True); >>> oeprop(wfn, 'DIPOLE', 'QUADRUPOLE', title='H3O+ SCF'). table of contents. oeprop; oeprop(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; oeprop. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/api/psi4.driver.oeprop.html:902,update,updated,902,psi4manual/master/api/psi4.driver.oeprop.html,https://psicode.org,https://psicode.org/psi4manual/master/api/psi4.driver.oeprop.html,1,['update'],['updated']
Deployability,"﻿. oeprop. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; oeprop. oeprop¶. psi4.driver.p4util.oeprop(wfn, *args, **kwargs)[source]¶; Evaluate one-electron properties. Returns:; None. Parameters:. wfn (Wavefunction) – set of molecule, basis, orbitals from which to compute properties; args (List[str]) – Arbitrary-number of properties to be computed from wfn.; See Available One-Electron Properties.; title (str) – label prepended to all psivars computed. Examples:. >>> # [1] Moments with specific label; >>> E, wfn = energy('hf', return_wfn=True); >>> oeprop(wfn, 'DIPOLE', 'QUADRUPOLE', title='H3O+ SCF'). table of contents. oeprop; oeprop(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; oeprop. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/api/psi4.driver.p4util.oeprop.html:909,update,updated,909,psi4manual/master/api/psi4.driver.p4util.oeprop.html,https://psicode.org,https://psicode.org/psi4manual/master/api/psi4.driver.p4util.oeprop.html,1,['update'],['updated']
Deployability,"﻿. oeprop. Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. oeprop¶. psi4.driver.oeprop(wfn, *args, **kwargs)[source]¶; Evaluate one-electron properties. Returns:None. Parameters:wfn (Wavefunction) – set of molecule, basis, orbitals from which to compute properties. How to specify args, which are actually the most important. Parameters:title (string) – label prepended to all psivars computed. Examples:. 1; 2; 3>>> # [1] Moments with specific label; >>> E, wfn = energy('hf', return_wfn=True); >>> oeprop(wfn, 'DIPOLE', 'QUADRUPOLE', title='H3O+ SCF'). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2018, The Psi4 Project.; Last updated on Wednesday, 25 July 2018 04:21AM.; Created using Sphinx 1.7.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/api/psi4.driver.oeprop-1.html:791,update,updated,791,psi4manual/1.2.1/api/psi4.driver.oeprop-1.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/api/psi4.driver.oeprop-1.html,2,['update'],['updated']
Deployability,"﻿. oeprop. Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. oeprop¶. psi4.driver.oeprop(wfn, *args, **kwargs)[source]¶; Evaluate one-electron properties. Returns:None. Parameters:wfn (Wavefunction) – set of molecule, basis, orbitals from which to compute properties. How to specify args, which are actually the most important. Parameters:title (string) – label prepended to all psivars computed. Examples:. >>> # [1] Moments with specific label; >>> E, wfn = energy('hf', return_wfn=True); >>> oeprop(wfn, 'DIPOLE', 'QUADRUPOLE', title='H3O+ SCF'). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2019, The Psi4 Project.; Last updated on Wednesday, 15 May 2019 08:49PM.; Created using Sphinx 1.8.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/api/psi4.driver.oeprop-1.html:784,update,updated,784,psi4manual/1.3.2/api/psi4.driver.oeprop-1.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/api/psi4.driver.oeprop-1.html,2,['update'],['updated']
Deployability,"﻿. oeprop. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; oeprop. oeprop¶. psi4.driver.oeprop(wfn, *args, **kwargs)[source]¶; Evaluate one-electron properties. Returns; None. Parameters; wfn (Wavefunction) – set of molecule, basis, orbitals from which to compute properties. How to specify args, which are actually the most important. Parameters. title (str) – label prepended to all psivars computed; wfn (psi4.core.Wavefunction) – . Examples. >>> # [1] Moments with specific label; >>> E, wfn = energy('hf', return_wfn=True); >>> oeprop(wfn, 'DIPOLE', 'QUADRUPOLE', title='H3O+ SCF'). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; oeprop. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/api/psi4.driver.oeprop-1.html:828,update,updated,828,psi4manual/1.4.0/api/psi4.driver.oeprop-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/api/psi4.driver.oeprop-1.html,2,['update'],['updated']
Deployability,"﻿. oeprop. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; oeprop. oeprop¶. psi4.driver.oeprop(wfn, *args, **kwargs)[source]¶; Evaluate one-electron properties. Returns; None. Parameters; wfn (Wavefunction) – set of molecule, basis, orbitals from which to compute properties. How to specify args, which are actually the most important. Parameters. title (str) – label prepended to all psivars computed; wfn (psi4.core.Wavefunction) – . Examples. >>> # [1] Moments with specific label; >>> E, wfn = energy('hf', return_wfn=True); >>> oeprop(wfn, 'DIPOLE', 'QUADRUPOLE', title='H3O+ SCF'). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; oeprop. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/api/psi4.driver.oeprop-1.html:828,update,updated,828,psi4manual/1.5.0/api/psi4.driver.oeprop-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/api/psi4.driver.oeprop-1.html,2,['update'],['updated']
Deployability,"﻿. oeprop. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; oeprop. oeprop¶. psi4.driver.oeprop(wfn, *args, **kwargs)[source]¶; Evaluate one-electron properties. Returns; None. Parameters; wfn (Wavefunction) – set of molecule, basis, orbitals from which to compute properties. How to specify args, which are actually the most important. Parameters. title (str) – label prepended to all psivars computed; wfn (psi4.core.Wavefunction) – . Examples. >>> # [1] Moments with specific label; >>> E, wfn = energy('hf', return_wfn=True); >>> oeprop(wfn, 'DIPOLE', 'QUADRUPOLE', title='H3O+ SCF'). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; oeprop. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/api/psi4.driver.oeprop.html:828,update,updated,828,psi4manual/1.6.x/api/psi4.driver.oeprop.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/api/psi4.driver.oeprop.html,1,['update'],['updated']
Deployability,"﻿. oeprop. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; oeprop. oeprop¶. psi4.driver.oeprop(wfn, *args, **kwargs)[source]¶; Evaluate one-electron properties. Returns:; None. Parameters:. wfn (Wavefunction) – set of molecule, basis, orbitals from which to compute properties; args (List[str]) – Arbitrary-number of properties to be computed from wfn.; See Available One-Electron Properties.; title (str) – label prepended to all psivars computed. Examples:. >>> # [1] Moments with specific label; >>> E, wfn = energy('hf', return_wfn=True); >>> oeprop(wfn, 'DIPOLE', 'QUADRUPOLE', title='H3O+ SCF'). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; oeprop. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/api/psi4.driver.oeprop.html:847,update,updated,847,psi4manual/1.7.x/api/psi4.driver.oeprop.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/api/psi4.driver.oeprop.html,1,['update'],['updated']
Deployability,"﻿. oeprop. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; oeprop. oeprop¶. psi4.driver.p4util.oeprop(wfn, *args, **kwargs)[source]¶; Evaluate one-electron properties. Returns:; None. Parameters:. wfn (Wavefunction) – set of molecule, basis, orbitals from which to compute properties; args (List[str]) – Arbitrary-number of properties to be computed from wfn.; See Available One-Electron Properties.; title (str) – label prepended to all psivars computed. Examples:. >>> # [1] Moments with specific label; >>> E, wfn = energy('hf', return_wfn=True); >>> oeprop(wfn, 'DIPOLE', 'QUADRUPOLE', title='H3O+ SCF'). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; oeprop. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/api/psi4.driver.p4util.oeprop.html:854,update,updated,854,psi4manual/1.7.x/api/psi4.driver.p4util.oeprop.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/api/psi4.driver.p4util.oeprop.html,1,['update'],['updated']
Deployability,"﻿. oeprop. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; oeprop. oeprop¶. psi4.driver.oeprop(wfn, *args, **kwargs)[source]¶; Evaluate one-electron properties. Returns:; None. Parameters:. wfn (Wavefunction) – set of molecule, basis, orbitals from which to compute properties; args (List[str]) – Arbitrary-number of properties to be computed from wfn.; See Available One-Electron Properties.; title (str) – label prepended to all psivars computed. Examples:. >>> # [1] Moments with specific label; >>> E, wfn = energy('hf', return_wfn=True); >>> oeprop(wfn, 'DIPOLE', 'QUADRUPOLE', title='H3O+ SCF'). table of contents. oeprop; oeprop(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; oeprop. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/api/psi4.driver.oeprop.html:888,update,updated,888,psi4manual/1.8.x/api/psi4.driver.oeprop.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/api/psi4.driver.oeprop.html,1,['update'],['updated']
Deployability,"﻿. oeprop. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; oeprop. oeprop¶. psi4.driver.p4util.oeprop(wfn, *args, **kwargs)[source]¶; Evaluate one-electron properties. Returns:; None. Parameters:. wfn (Wavefunction) – set of molecule, basis, orbitals from which to compute properties; args (List[str]) – Arbitrary-number of properties to be computed from wfn.; See Available One-Electron Properties.; title (str) – label prepended to all psivars computed. Examples:. >>> # [1] Moments with specific label; >>> E, wfn = energy('hf', return_wfn=True); >>> oeprop(wfn, 'DIPOLE', 'QUADRUPOLE', title='H3O+ SCF'). table of contents. oeprop; oeprop(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; oeprop. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/api/psi4.driver.p4util.oeprop.html:895,update,updated,895,psi4manual/1.8.x/api/psi4.driver.p4util.oeprop.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/api/psi4.driver.p4util.oeprop.html,1,['update'],['updated']
Deployability,"﻿. oeprop. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; oeprop. oeprop¶. psi4.driver.oeprop(wfn, *args, **kwargs)[source]¶; Evaluate one-electron properties. Returns:; None. Parameters:. wfn (Wavefunction) – set of molecule, basis, orbitals from which to compute properties; args (List[str]) – Arbitrary-number of properties to be computed from wfn.; See Available One-Electron Properties.; title (str) – label prepended to all psivars computed. Examples:. >>> # [1] Moments with specific label; >>> E, wfn = energy('hf', return_wfn=True); >>> oeprop(wfn, 'DIPOLE', 'QUADRUPOLE', title='H3O+ SCF'). table of contents. oeprop; oeprop(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; oeprop. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/api/psi4.driver.oeprop.html:888,update,updated,888,psi4manual/1.9.x/api/psi4.driver.oeprop.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/api/psi4.driver.oeprop.html,1,['update'],['updated']
Deployability,"﻿. oeprop. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; oeprop. oeprop¶. psi4.driver.p4util.oeprop(wfn, *args, **kwargs)[source]¶; Evaluate one-electron properties. Returns:; None. Parameters:. wfn (Wavefunction) – set of molecule, basis, orbitals from which to compute properties; args (List[str]) – Arbitrary-number of properties to be computed from wfn.; See Available One-Electron Properties.; title (str) – label prepended to all psivars computed. Examples:. >>> # [1] Moments with specific label; >>> E, wfn = energy('hf', return_wfn=True); >>> oeprop(wfn, 'DIPOLE', 'QUADRUPOLE', title='H3O+ SCF'). table of contents. oeprop; oeprop(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; oeprop. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/api/psi4.driver.p4util.oeprop.html:895,update,updated,895,psi4manual/1.9.x/api/psi4.driver.p4util.oeprop.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/api/psi4.driver.p4util.oeprop.html,1,['update'],['updated']
Deployability,"﻿. opt_clean. Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. opt_clean¶. psi4.core.opt_clean() → None¶; Cleans up the optimizer’s scratch files. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2018, The Psi4 Project.; Last updated on Wednesday, 25 July 2018 04:21AM.; Created using Sphinx 1.7.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/api/psi4.core.opt_clean-1.html:382,update,updated,382,psi4manual/1.2.1/api/psi4.core.opt_clean-1.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/api/psi4.core.opt_clean-1.html,2,['update'],['updated']
Deployability,"﻿. opt_clean. Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. opt_clean¶. psi4.core.opt_clean() → None¶; Cleans up the optimizer’s scratch files. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2019, The Psi4 Project.; Last updated on Wednesday, 15 May 2019 08:49PM.; Created using Sphinx 1.8.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/api/psi4.core.opt_clean-1.html:382,update,updated,382,psi4manual/1.3.2/api/psi4.core.opt_clean-1.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/api/psi4.core.opt_clean-1.html,2,['update'],['updated']
Deployability,"﻿. opt_clean. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; opt_clean. opt_clean¶. psi4.core.opt_clean() → None¶; Cleans up the optimizer’s scratch files. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; opt_clean. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/api/psi4.core.opt_clean-1.html:400,update,updated,400,psi4manual/1.4.0/api/psi4.core.opt_clean-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/api/psi4.core.opt_clean-1.html,2,['update'],['updated']
Deployability,"﻿. opt_clean. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; opt_clean. opt_clean¶. psi4.core.opt_clean() → None¶; Cleans up the optimizer’s scratch files. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; opt_clean. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/api/psi4.core.opt_clean-1.html:400,update,updated,400,psi4manual/1.5.0/api/psi4.core.opt_clean-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/api/psi4.core.opt_clean-1.html,2,['update'],['updated']
Deployability,"﻿. opt_clean. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; opt_clean. opt_clean¶. psi4.core.opt_clean() → None¶; Cleans up the optimizer’s scratch files. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; opt_clean. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/api/psi4.core.opt_clean.html:400,update,updated,400,psi4manual/1.6.x/api/psi4.core.opt_clean.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/api/psi4.core.opt_clean.html,1,['update'],['updated']
Deployability,"﻿. optimize_geometric. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; optimize_geometric. optimize_geometric¶. psi4.driver.optimize_geometric(name, **kwargs)[source]¶. table of contents. optimize_geometric; optimize_geometric(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; optimize_geometric. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/api/psi4.driver.optimize_geometric.html:505,update,updated,505,psi4manual/master/api/psi4.driver.optimize_geometric.html,https://psicode.org,https://psicode.org/psi4manual/master/api/psi4.driver.optimize_geometric.html,1,['update'],['updated']
Deployability,"﻿. optimize_geometric. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; optimize_geometric. optimize_geometric¶. psi4.driver.optimize_geometric(name, **kwargs)[source]¶. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; optimize_geometric. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/api/psi4.driver.optimize_geometric-1.html:421,update,updated,421,psi4manual/1.4.0/api/psi4.driver.optimize_geometric-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/api/psi4.driver.optimize_geometric-1.html,2,['update'],['updated']
Deployability,"﻿. optimize_geometric. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; optimize_geometric. optimize_geometric¶. psi4.driver.optimize_geometric(name, **kwargs)[source]¶. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; optimize_geometric. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/api/psi4.driver.optimize_geometric-1.html:421,update,updated,421,psi4manual/1.5.0/api/psi4.driver.optimize_geometric-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/api/psi4.driver.optimize_geometric-1.html,2,['update'],['updated']
Deployability,"﻿. optimize_geometric. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; optimize_geometric. optimize_geometric¶. psi4.driver.optimize_geometric(name, **kwargs)[source]¶. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; optimize_geometric. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/api/psi4.driver.optimize_geometric.html:421,update,updated,421,psi4manual/1.6.x/api/psi4.driver.optimize_geometric.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/api/psi4.driver.optimize_geometric.html,1,['update'],['updated']
Deployability,"﻿. optimize_geometric. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; optimize_geometric. optimize_geometric¶. psi4.driver.optimize_geometric(name, **kwargs)[source]¶. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; optimize_geometric. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/api/psi4.driver.optimize_geometric.html:426,update,updated,426,psi4manual/1.7.x/api/psi4.driver.optimize_geometric.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/api/psi4.driver.optimize_geometric.html,1,['update'],['updated']
Deployability,"﻿. optimize_geometric. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; optimize_geometric. optimize_geometric¶. psi4.driver.optimize_geometric(name, **kwargs)[source]¶. table of contents. optimize_geometric; optimize_geometric(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; optimize_geometric. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/api/psi4.driver.optimize_geometric.html:491,update,updated,491,psi4manual/1.8.x/api/psi4.driver.optimize_geometric.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/api/psi4.driver.optimize_geometric.html,1,['update'],['updated']
Deployability,"﻿. optimize_geometric. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; optimize_geometric. optimize_geometric¶. psi4.driver.optimize_geometric(name, **kwargs)[source]¶. table of contents. optimize_geometric; optimize_geometric(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; optimize_geometric. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/api/psi4.driver.optimize_geometric.html:491,update,updated,491,psi4manual/1.9.x/api/psi4.driver.optimize_geometric.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/api/psi4.driver.optimize_geometric.html,1,['update'],['updated']
Deployability,"﻿. option_exists_in_module. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; option_exists_in_module. option_exists_in_module¶. psi4.core.option_exists_in_module(module: str, key: str) → bool¶; Whether keyword key is a valid keyword for module. table of contents. option_exists_in_module; option_exists_in_module(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; option_exists_in_module. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/api/psi4.core.option_exists_in_module.html:595,update,updated,595,psi4manual/master/api/psi4.core.option_exists_in_module.html,https://psicode.org,https://psicode.org/psi4manual/master/api/psi4.core.option_exists_in_module.html,1,['update'],['updated']
Deployability,"﻿. option_exists_in_module. Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. option_exists_in_module¶. psi4.core.option_exists_in_module(arg0: str, arg1: str) → bool¶; Given a string of a keyword name arg1 and a particular module arg0, returns whether arg1 is a valid option for arg0. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2018, The Psi4 Project.; Last updated on Wednesday, 25 July 2018 04:21AM.; Created using Sphinx 1.7.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/api/psi4.core.option_exists_in_module-1.html:520,update,updated,520,psi4manual/1.2.1/api/psi4.core.option_exists_in_module-1.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/api/psi4.core.option_exists_in_module-1.html,2,['update'],['updated']
Deployability,"﻿. option_exists_in_module. Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. option_exists_in_module¶. psi4.core.option_exists_in_module(arg0: str, arg1: str) → bool¶; Given a string of a keyword name arg1 and a particular module arg0, returns whether arg1 is a valid option for arg0. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2019, The Psi4 Project.; Last updated on Wednesday, 15 May 2019 08:49PM.; Created using Sphinx 1.8.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/api/psi4.core.option_exists_in_module-1.html:520,update,updated,520,psi4manual/1.3.2/api/psi4.core.option_exists_in_module-1.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/api/psi4.core.option_exists_in_module-1.html,2,['update'],['updated']
Deployability,"﻿. option_exists_in_module. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; option_exists_in_module. option_exists_in_module¶. psi4.core.option_exists_in_module(module: str, key: str) → bool¶; Whether keyword key is a valid keyword for module. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; option_exists_in_module. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/api/psi4.core.option_exists_in_module-1.html:501,update,updated,501,psi4manual/1.4.0/api/psi4.core.option_exists_in_module-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/api/psi4.core.option_exists_in_module-1.html,2,['update'],['updated']
Deployability,"﻿. option_exists_in_module. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; option_exists_in_module. option_exists_in_module¶. psi4.core.option_exists_in_module(module: str, key: str) → bool¶; Whether keyword key is a valid keyword for module. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; option_exists_in_module. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/api/psi4.core.option_exists_in_module-1.html:501,update,updated,501,psi4manual/1.5.0/api/psi4.core.option_exists_in_module-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/api/psi4.core.option_exists_in_module-1.html,2,['update'],['updated']
Deployability,"﻿. option_exists_in_module. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; option_exists_in_module. option_exists_in_module¶. psi4.core.option_exists_in_module(module: str, key: str) → bool¶; Whether keyword key is a valid keyword for module. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; option_exists_in_module. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/api/psi4.core.option_exists_in_module.html:501,update,updated,501,psi4manual/1.6.x/api/psi4.core.option_exists_in_module.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/api/psi4.core.option_exists_in_module.html,1,['update'],['updated']
Deployability,"﻿. option_exists_in_module. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; option_exists_in_module. option_exists_in_module¶. psi4.core.option_exists_in_module(module: str, key: str) → bool¶; Whether keyword key is a valid keyword for module. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; option_exists_in_module. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/api/psi4.core.option_exists_in_module.html:506,update,updated,506,psi4manual/1.7.x/api/psi4.core.option_exists_in_module.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/api/psi4.core.option_exists_in_module.html,1,['update'],['updated']
Deployability,"﻿. option_exists_in_module. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; option_exists_in_module. option_exists_in_module¶. psi4.core.option_exists_in_module(module: str, key: str) → bool¶; Whether keyword key is a valid keyword for module. table of contents. option_exists_in_module; option_exists_in_module(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; option_exists_in_module. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/api/psi4.core.option_exists_in_module.html:581,update,updated,581,psi4manual/1.8.x/api/psi4.core.option_exists_in_module.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/api/psi4.core.option_exists_in_module.html,1,['update'],['updated']
Deployability,"﻿. option_exists_in_module. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; option_exists_in_module. option_exists_in_module¶. psi4.core.option_exists_in_module(module: str, key: str) → bool¶; Whether keyword key is a valid keyword for module. table of contents. option_exists_in_module; option_exists_in_module(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; option_exists_in_module. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/api/psi4.core.option_exists_in_module.html:581,update,updated,581,psi4manual/1.9.x/api/psi4.core.option_exists_in_module.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/api/psi4.core.option_exists_in_module.html,1,['update'],['updated']
Deployability,"﻿. options_to_python. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; options_to_python. options_to_python¶. psi4.core.options_to_python(arg0: str) → dict¶; Get dictionary of whether options of module have changed. table of contents. options_to_python; options_to_python(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; options_to_python. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/api/psi4.core.options_to_python.html:548,update,updated,548,psi4manual/master/api/psi4.core.options_to_python.html,https://psicode.org,https://psicode.org/psi4manual/master/api/psi4.core.options_to_python.html,1,['update'],['updated']
Deployability,"﻿. options_to_python. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; options_to_python. options_to_python¶. psi4.core.options_to_python(arg0: str) → dict¶; Get dictionary of whether options of module have changed. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; options_to_python. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/api/psi4.core.options_to_python-1.html:466,update,updated,466,psi4manual/1.4.0/api/psi4.core.options_to_python-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/api/psi4.core.options_to_python-1.html,2,['update'],['updated']
Deployability,"﻿. options_to_python. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; options_to_python. options_to_python¶. psi4.core.options_to_python(arg0: str) → dict¶; Get dictionary of whether options of module have changed. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; options_to_python. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/api/psi4.core.options_to_python-1.html:466,update,updated,466,psi4manual/1.5.0/api/psi4.core.options_to_python-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/api/psi4.core.options_to_python-1.html,2,['update'],['updated']
Deployability,"﻿. options_to_python. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; options_to_python. options_to_python¶. psi4.core.options_to_python(arg0: str) → dict¶; Get dictionary of whether options of module have changed. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; options_to_python. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/api/psi4.core.options_to_python.html:466,update,updated,466,psi4manual/1.6.x/api/psi4.core.options_to_python.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/api/psi4.core.options_to_python.html,1,['update'],['updated']
Deployability,"﻿. options_to_python. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; options_to_python. options_to_python¶. psi4.core.options_to_python(arg0: str) → dict¶; Get dictionary of whether options of module have changed. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; options_to_python. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/api/psi4.core.options_to_python.html:471,update,updated,471,psi4manual/1.7.x/api/psi4.core.options_to_python.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/api/psi4.core.options_to_python.html,1,['update'],['updated']
Deployability,"﻿. options_to_python. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; options_to_python. options_to_python¶. psi4.core.options_to_python(arg0: str) → dict¶; Get dictionary of whether options of module have changed. table of contents. options_to_python; options_to_python(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; options_to_python. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/api/psi4.core.options_to_python.html:534,update,updated,534,psi4manual/1.8.x/api/psi4.core.options_to_python.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/api/psi4.core.options_to_python.html,1,['update'],['updated']
Deployability,"﻿. options_to_python. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; options_to_python. options_to_python¶. psi4.core.options_to_python(arg0: str) → dict¶; Get dictionary of whether options of module have changed. table of contents. options_to_python; options_to_python(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; options_to_python. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/api/psi4.core.options_to_python.html:534,update,updated,534,psi4manual/1.9.x/api/psi4.core.options_to_python.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/api/psi4.core.options_to_python.html,1,['update'],['updated']
Deployability,"﻿. optking. Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. optking¶. psi4.core.optking() → int¶; Runs the geometry optimization / frequency analysis code. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2018, The Psi4 Project.; Last updated on Wednesday, 25 July 2018 04:21AM.; Created using Sphinx 1.7.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/api/psi4.core.optking-1.html:392,update,updated,392,psi4manual/1.2.1/api/psi4.core.optking-1.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/api/psi4.core.optking-1.html,2,['update'],['updated']
Deployability,"﻿. optking. Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. optking¶. psi4.core.optking() → int¶; Runs the geometry optimization / frequency analysis code. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2019, The Psi4 Project.; Last updated on Wednesday, 15 May 2019 08:49PM.; Created using Sphinx 1.8.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/api/psi4.core.optking-1.html:392,update,updated,392,psi4manual/1.3.2/api/psi4.core.optking-1.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/api/psi4.core.optking-1.html,2,['update'],['updated']
Deployability,"﻿. optking. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; optking. optking¶. psi4.core.optking() → int¶; Runs the geometry optimization code. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; optking. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/api/psi4.core.optking-1.html:385,update,updated,385,psi4manual/1.4.0/api/psi4.core.optking-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/api/psi4.core.optking-1.html,2,['update'],['updated']
Deployability,"﻿. optking. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; optking. optking¶. psi4.core.optking() → int¶; Runs the geometry optimization code. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; optking. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/api/psi4.core.optking-1.html:385,update,updated,385,psi4manual/1.5.0/api/psi4.core.optking-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/api/psi4.core.optking-1.html,2,['update'],['updated']
Deployability,"﻿. optking. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; optking. optking¶. psi4.core.optking() → int¶; Runs the geometry optimization code. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; optking. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/api/psi4.core.optking.html:385,update,updated,385,psi4manual/1.6.x/api/psi4.core.optking.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/api/psi4.core.optking.html,1,['update'],['updated']
Deployability,"﻿. outfile_name. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; outfile_name. outfile_name¶. psi4.core.outfile_name() → str¶; Returns the name of the output file. table of contents. outfile_name; outfile_name(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; outfile_name. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/api/psi4.core.outfile_name.html:482,update,updated,482,psi4manual/master/api/psi4.core.outfile_name.html,https://psicode.org,https://psicode.org/psi4manual/master/api/psi4.core.outfile_name.html,1,['update'],['updated']
Deployability,"﻿. outfile_name. Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. outfile_name¶. psi4.core.outfile_name() → str¶; Returns the name of the output file. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2018, The Psi4 Project.; Last updated on Wednesday, 25 July 2018 04:21AM.; Created using Sphinx 1.7.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/api/psi4.core.outfile_name-1.html:386,update,updated,386,psi4manual/1.2.1/api/psi4.core.outfile_name-1.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/api/psi4.core.outfile_name-1.html,2,['update'],['updated']
Deployability,"﻿. outfile_name. Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. outfile_name¶. psi4.core.outfile_name() → str¶; Returns the name of the output file. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2019, The Psi4 Project.; Last updated on Wednesday, 15 May 2019 08:49PM.; Created using Sphinx 1.8.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/api/psi4.core.outfile_name-1.html:386,update,updated,386,psi4manual/1.3.2/api/psi4.core.outfile_name-1.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/api/psi4.core.outfile_name-1.html,2,['update'],['updated']
Deployability,"﻿. outfile_name. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; outfile_name. outfile_name¶. psi4.core.outfile_name() → str¶; Returns the name of the output file. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; outfile_name. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/api/psi4.core.outfile_name-1.html:410,update,updated,410,psi4manual/1.4.0/api/psi4.core.outfile_name-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/api/psi4.core.outfile_name-1.html,2,['update'],['updated']
Deployability,"﻿. outfile_name. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; outfile_name. outfile_name¶. psi4.core.outfile_name() → str¶; Returns the name of the output file. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; outfile_name. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/api/psi4.core.outfile_name-1.html:410,update,updated,410,psi4manual/1.5.0/api/psi4.core.outfile_name-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/api/psi4.core.outfile_name-1.html,2,['update'],['updated']
Deployability,"﻿. outfile_name. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; outfile_name. outfile_name¶. psi4.core.outfile_name() → str¶; Returns the name of the output file. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; outfile_name. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/api/psi4.core.outfile_name.html:410,update,updated,410,psi4manual/1.6.x/api/psi4.core.outfile_name.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/api/psi4.core.outfile_name.html,1,['update'],['updated']
Deployability,"﻿. outfile_name. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; outfile_name. outfile_name¶. psi4.core.outfile_name() → str¶; Returns the name of the output file. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; outfile_name. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/api/psi4.core.outfile_name.html:415,update,updated,415,psi4manual/1.7.x/api/psi4.core.outfile_name.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/api/psi4.core.outfile_name.html,1,['update'],['updated']
Deployability,"﻿. outfile_name. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; outfile_name. outfile_name¶. psi4.core.outfile_name() → str¶; Returns the name of the output file. table of contents. outfile_name; outfile_name(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; outfile_name. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/api/psi4.core.outfile_name.html:468,update,updated,468,psi4manual/1.8.x/api/psi4.core.outfile_name.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/api/psi4.core.outfile_name.html,1,['update'],['updated']
Deployability,"﻿. outfile_name. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; outfile_name. outfile_name¶. psi4.core.outfile_name() → str¶; Returns the name of the output file. table of contents. outfile_name; outfile_name(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; outfile_name. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/api/psi4.core.outfile_name.html:468,update,updated,468,psi4manual/1.9.x/api/psi4.core.outfile_name.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/api/psi4.core.outfile_name.html,1,['update'],['updated']
Deployability,"﻿. pcm_helper. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; pcm_helper. pcm_helper¶. psi4.driver.p4util.pcm_helper(block)[source]¶; Helper to specify the multiline PCMSolver syntax for PCM.; Prefer to use set_options() with key ""PCM__INPUT"". Parameters:; block (str) – Text that goes in a PSIthon pcm = {...} block. table of contents. pcm_helper; pcm_helper(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; pcm_helper. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/api/psi4.driver.p4util.pcm_helper.html:631,update,updated,631,psi4manual/master/api/psi4.driver.p4util.pcm_helper.html,https://psicode.org,https://psicode.org/psi4manual/master/api/psi4.driver.p4util.pcm_helper.html,1,['update'],['updated']
Deployability,"﻿. pcm_helper. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; pcm_helper. pcm_helper¶. psi4.driver.pcm_helper(block)[source]¶; Helper to specify the multiline PCMSolver syntax for PCM.; Prefer to use set_options() with key ""PCM__INPUT"". Parameters:; block (str) – Text that goes in a PSIthon pcm = {...} block. table of contents. pcm_helper; pcm_helper(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; pcm_helper. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/api/psi4.driver.pcm_helper.html:624,update,updated,624,psi4manual/master/api/psi4.driver.pcm_helper.html,https://psicode.org,https://psicode.org/psi4manual/master/api/psi4.driver.pcm_helper.html,1,['update'],['updated']
Deployability,"﻿. pcm_helper. Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. pcm_helper¶. psi4.driver.pcm_helper(block)[source]¶; Passes multiline string block to PCMSolver parser. Parameters:block (multiline string with PCM input in PCMSolver syntax.) – . «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2018, The Psi4 Project.; Last updated on Wednesday, 25 July 2018 04:21AM.; Created using Sphinx 1.7.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/api/psi4.driver.pcm_helper-1.html:479,update,updated,479,psi4manual/1.2.1/api/psi4.driver.pcm_helper-1.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/api/psi4.driver.pcm_helper-1.html,2,['update'],['updated']
Deployability,"﻿. pcm_helper. Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. pcm_helper¶. psi4.driver.pcm_helper(block)[source]¶; Passes multiline string block to PCMSolver parser. Parameters:block (multiline string with PCM input in PCMSolver syntax.) – . «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2019, The Psi4 Project.; Last updated on Wednesday, 15 May 2019 08:49PM.; Created using Sphinx 1.8.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/api/psi4.driver.pcm_helper-1.html:479,update,updated,479,psi4manual/1.3.2/api/psi4.driver.pcm_helper-1.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/api/psi4.driver.pcm_helper-1.html,2,['update'],['updated']
Deployability,"﻿. pcm_helper. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; pcm_helper. pcm_helper¶. psi4.driver.pcm_helper(block)[source]¶; Passes multiline string block to PCMSolver parser. Parameters; block (str) – multiline string with PCM input in PCMSolver syntax. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; pcm_helper. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/api/psi4.driver.pcm_helper-1.html:502,update,updated,502,psi4manual/1.4.0/api/psi4.driver.pcm_helper-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/api/psi4.driver.pcm_helper-1.html,2,['update'],['updated']
Deployability,"﻿. pcm_helper. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; pcm_helper. pcm_helper¶. psi4.driver.pcm_helper(block)[source]¶; Passes multiline string block to PCMSolver parser. Parameters; block (str) – multiline string with PCM input in PCMSolver syntax. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; pcm_helper. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/api/psi4.driver.pcm_helper-1.html:502,update,updated,502,psi4manual/1.5.0/api/psi4.driver.pcm_helper-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/api/psi4.driver.pcm_helper-1.html,2,['update'],['updated']
Deployability,"﻿. pcm_helper. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; pcm_helper. pcm_helper¶. psi4.driver.pcm_helper(block)[source]¶; Passes multiline string block to PCMSolver parser. Parameters; block (str) – multiline string with PCM input in PCMSolver syntax. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; pcm_helper. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/api/psi4.driver.pcm_helper.html:502,update,updated,502,psi4manual/1.6.x/api/psi4.driver.pcm_helper.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/api/psi4.driver.pcm_helper.html,1,['update'],['updated']
Deployability,"﻿. pcm_helper. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; pcm_helper. pcm_helper¶. psi4.driver.p4util.pcm_helper(block)[source]¶; Helper to specify the multiline PCMSolver syntax for PCM.; Prefer to use set_options() with key ""PCM__INPUT"". Parameters:; block (str) – Text that goes in a PSIthon pcm = {...} block. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; pcm_helper. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/api/psi4.driver.p4util.pcm_helper.html:568,update,updated,568,psi4manual/1.7.x/api/psi4.driver.p4util.pcm_helper.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/api/psi4.driver.p4util.pcm_helper.html,1,['update'],['updated']
Deployability,"﻿. pcm_helper. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; pcm_helper. pcm_helper¶. psi4.driver.pcm_helper(block)[source]¶; Helper to specify the multiline PCMSolver syntax for PCM.; Prefer to use set_options() with key ""PCM__INPUT"". Parameters:; block (str) – Text that goes in a PSIthon pcm = {...} block. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; pcm_helper. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/api/psi4.driver.pcm_helper.html:561,update,updated,561,psi4manual/1.7.x/api/psi4.driver.pcm_helper.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/api/psi4.driver.pcm_helper.html,1,['update'],['updated']
Deployability,"﻿. pcm_helper. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; pcm_helper. pcm_helper¶. psi4.driver.p4util.pcm_helper(block)[source]¶; Helper to specify the multiline PCMSolver syntax for PCM.; Prefer to use set_options() with key ""PCM__INPUT"". Parameters:; block (str) – Text that goes in a PSIthon pcm = {...} block. table of contents. pcm_helper; pcm_helper(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; pcm_helper. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/api/psi4.driver.p4util.pcm_helper.html:617,update,updated,617,psi4manual/1.8.x/api/psi4.driver.p4util.pcm_helper.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/api/psi4.driver.p4util.pcm_helper.html,1,['update'],['updated']
Deployability,"﻿. pcm_helper. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; pcm_helper. pcm_helper¶. psi4.driver.pcm_helper(block)[source]¶; Helper to specify the multiline PCMSolver syntax for PCM.; Prefer to use set_options() with key ""PCM__INPUT"". Parameters:; block (str) – Text that goes in a PSIthon pcm = {...} block. table of contents. pcm_helper; pcm_helper(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; pcm_helper. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/api/psi4.driver.pcm_helper.html:610,update,updated,610,psi4manual/1.8.x/api/psi4.driver.pcm_helper.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/api/psi4.driver.pcm_helper.html,1,['update'],['updated']
Deployability,"﻿. pcm_helper. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; pcm_helper. pcm_helper¶. psi4.driver.p4util.pcm_helper(block)[source]¶; Helper to specify the multiline PCMSolver syntax for PCM.; Prefer to use set_options() with key ""PCM__INPUT"". Parameters:; block (str) – Text that goes in a PSIthon pcm = {...} block. table of contents. pcm_helper; pcm_helper(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; pcm_helper. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/api/psi4.driver.p4util.pcm_helper.html:617,update,updated,617,psi4manual/1.9.x/api/psi4.driver.p4util.pcm_helper.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/api/psi4.driver.p4util.pcm_helper.html,1,['update'],['updated']
Deployability,"﻿. pcm_helper. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; pcm_helper. pcm_helper¶. psi4.driver.pcm_helper(block)[source]¶; Helper to specify the multiline PCMSolver syntax for PCM.; Prefer to use set_options() with key ""PCM__INPUT"". Parameters:; block (str) – Text that goes in a PSIthon pcm = {...} block. table of contents. pcm_helper; pcm_helper(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; pcm_helper. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/api/psi4.driver.pcm_helper.html:610,update,updated,610,psi4manual/1.9.x/api/psi4.driver.pcm_helper.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/api/psi4.driver.pcm_helper.html,1,['update'],['updated']
Deployability,"﻿. plugin. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; plugin. plugin¶. psi4.core.plugin(arg0: str, arg1: psi4.core.Wavefunction) → psi4.core.Wavefunction¶; Call the plugin of name arg0. Returns the plugin code result. table of contents. plugin; plugin(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; plugin. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/api/psi4.core.plugin.html:523,update,updated,523,psi4manual/master/api/psi4.core.plugin.html,https://psicode.org,https://psicode.org/psi4manual/master/api/psi4.core.plugin.html,1,['update'],['updated']
Deployability,"﻿. plugin. Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. plugin¶. psi4.core.plugin(arg0: str, arg1: psi::Wavefunction) → psi::Wavefunction¶; Call the plugin of name arg0. Returns the plugin code result. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2018, The Psi4 Project.; Last updated on Wednesday, 25 July 2018 04:21AM.; Created using Sphinx 1.7.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/api/psi4.core.plugin-1.html:441,update,updated,441,psi4manual/1.2.1/api/psi4.core.plugin-1.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/api/psi4.core.plugin-1.html,2,['update'],['updated']
Deployability,"﻿. plugin. Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. plugin¶. psi4.core.plugin(arg0: str, arg1: psi::Wavefunction) → psi::Wavefunction¶; Call the plugin of name arg0. Returns the plugin code result. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2019, The Psi4 Project.; Last updated on Wednesday, 15 May 2019 08:49PM.; Created using Sphinx 1.8.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/api/psi4.core.plugin-1.html:441,update,updated,441,psi4manual/1.3.2/api/psi4.core.plugin-1.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/api/psi4.core.plugin-1.html,2,['update'],['updated']
Deployability,"﻿. plugin. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; plugin. plugin¶. psi4.core.plugin(arg0: str, arg1: psi4.core.Wavefunction) → psi4.core.Wavefunction¶; Call the plugin of name arg0. Returns the plugin code result. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; plugin. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/api/psi4.core.plugin-1.html:463,update,updated,463,psi4manual/1.4.0/api/psi4.core.plugin-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/api/psi4.core.plugin-1.html,2,['update'],['updated']
Deployability,"﻿. plugin. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; plugin. plugin¶. psi4.core.plugin(arg0: str, arg1: psi4.core.Wavefunction) → psi4.core.Wavefunction¶; Call the plugin of name arg0. Returns the plugin code result. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; plugin. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/api/psi4.core.plugin-1.html:463,update,updated,463,psi4manual/1.5.0/api/psi4.core.plugin-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/api/psi4.core.plugin-1.html,2,['update'],['updated']
Deployability,"﻿. plugin. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; plugin. plugin¶. psi4.core.plugin(arg0: str, arg1: psi4.core.Wavefunction) → psi4.core.Wavefunction¶; Call the plugin of name arg0. Returns the plugin code result. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; plugin. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/api/psi4.core.plugin.html:463,update,updated,463,psi4manual/1.6.x/api/psi4.core.plugin.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/api/psi4.core.plugin.html,1,['update'],['updated']
Deployability,"﻿. plugin. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; plugin. plugin¶. psi4.core.plugin(arg0: str, arg1: psi4.core.Wavefunction) → psi4.core.Wavefunction¶; Call the plugin of name arg0. Returns the plugin code result. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; plugin. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/api/psi4.core.plugin.html:468,update,updated,468,psi4manual/1.7.x/api/psi4.core.plugin.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/api/psi4.core.plugin.html,1,['update'],['updated']
Deployability,"﻿. plugin. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; plugin. plugin¶. psi4.core.plugin(arg0: str, arg1: psi4.core.Wavefunction) → psi4.core.Wavefunction¶; Call the plugin of name arg0. Returns the plugin code result. table of contents. plugin; plugin(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; plugin. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/api/psi4.core.plugin.html:509,update,updated,509,psi4manual/1.8.x/api/psi4.core.plugin.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/api/psi4.core.plugin.html,1,['update'],['updated']
Deployability,"﻿. plugin. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; plugin. plugin¶. psi4.core.plugin(arg0: str, arg1: psi4.core.Wavefunction) → psi4.core.Wavefunction¶; Call the plugin of name arg0. Returns the plugin code result. table of contents. plugin; plugin(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; plugin. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/api/psi4.core.plugin.html:509,update,updated,509,psi4manual/1.9.x/api/psi4.core.plugin.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/api/psi4.core.plugin.html,1,['update'],['updated']
Deployability,"﻿. plugin_aointegrals — PSI4 [beta2] documentation. Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Emerging Theoretical Methods: Plugins DFADC to RQCHF ». plugin_aointegrals¶. C-side Documentation¶. DO_TEI (PLUGIN_AOINTEGRALS); Whether to compute two-electron integrals. Type: boolean; Default: true. PRINT (PLUGIN_AOINTEGRALS); The amount of information printed to the output file. Type: integer; Default: 1. Table Of Contents. plugin_aointegrals; C-side Documentation. Previous topic; SOLVER_PRECONDITION; Next topic; <no title>; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Emerging Theoretical Methods: Plugins DFADC to RQCHF ». © Copyright 2012, Psi4 Project.; Last updated on Sep 30, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b2/autodir_plugins/module__plugin_aointegrals-1.html:810,update,updated,810,psi4manual/4.0b2/autodir_plugins/module__plugin_aointegrals-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b2/autodir_plugins/module__plugin_aointegrals-1.html,2,['update'],['updated']
Deployability,"﻿. plugin_backtrans — PSI4 [beta2] documentation. Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Emerging Theoretical Methods: Plugins DFADC to RQCHF ». plugin_backtrans¶. C-side Documentation¶. PRINT (PLUGIN_BACKTRANS); The amount of information printed to the output file. Type: integer; Default: 1. Table Of Contents. plugin_backtrans; C-side Documentation. Previous topic; PRINT; Next topic; <no title>; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Emerging Theoretical Methods: Plugins DFADC to RQCHF ». © Copyright 2012, Psi4 Project.; Last updated on Sep 30, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b2/autodir_plugins/module__plugin_backtrans-1.html:686,update,updated,686,psi4manual/4.0b2/autodir_plugins/module__plugin_backtrans-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b2/autodir_plugins/module__plugin_backtrans-1.html,2,['update'],['updated']
Deployability,"﻿. plugin_ccsd_serial — PSI4 [beta2] documentation. Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Emerging Theoretical Methods: Plugins DFADC to RQCHF ». plugin_ccsd_serial¶. Previous topic; TILE_SIZE; Next topic; <no title>; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Emerging Theoretical Methods: Plugins DFADC to RQCHF ». © Copyright 2012, Psi4 Project.; Last updated on Sep 30, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b2/autodir_plugins/module__plugin_ccsd_serial-1.html:505,update,updated,505,psi4manual/4.0b2/autodir_plugins/module__plugin_ccsd_serial-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b2/autodir_plugins/module__plugin_ccsd_serial-1.html,2,['update'],['updated']
Deployability,"﻿. plugin_ccsort — PSI4 [beta2] documentation. Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Emerging Theoretical Methods: Plugins DFADC to RQCHF ». plugin_ccsort¶. C-side Documentation¶. AO_BASIS (PLUGIN_CCSORT); How to handle the <AB|CD> term in coupled cluster. Type: string; Possible Values: NONE, DISK, DIRECT; Default: NONE. PRINT (PLUGIN_CCSORT); The amount of information printed to the output file. Type: integer; Default: 1. SEMICANONICAL (PLUGIN_CCSORT); Should we semicanonicalize ROHF references?. Type: boolean; Default: false. Table Of Contents. plugin_ccsort; C-side Documentation. Previous topic; <no title>; Next topic; <no title>; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Emerging Theoretical Methods: Plugins DFADC to RQCHF ». © Copyright 2012, Psi4 Project.; Last updated on Sep 30, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b2/autodir_plugins/module__plugin_ccsort-1.html:929,update,updated,929,psi4manual/4.0b2/autodir_plugins/module__plugin_ccsort-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b2/autodir_plugins/module__plugin_ccsort-1.html,2,['update'],['updated']
Deployability,"﻿. plugin_cepa — PSI4 [beta2] documentation. Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Emerging Theoretical Methods: Plugins DFADC to RQCHF ». plugin_cepa¶. Previous topic; Emerging Theoretical Methods: Plugins DFADC to RQCHF; Next topic; <no title>; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Emerging Theoretical Methods: Plugins DFADC to RQCHF ». © Copyright 2012, Psi4 Project.; Last updated on Sep 30, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b2/autodir_plugins/module__plugin_cepa-1.html:534,update,updated,534,psi4manual/4.0b2/autodir_plugins/module__plugin_cepa-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b2/autodir_plugins/module__plugin_cepa-1.html,2,['update'],['updated']
Deployability,"﻿. plugin_close. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; plugin_close. plugin_close¶. psi4.core.plugin_close(arg0: str) → None¶; Close the plugin of name arg0. table of contents. plugin_close; plugin_close(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; plugin_close. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/api/psi4.core.plugin_close.html:486,update,updated,486,psi4manual/master/api/psi4.core.plugin_close.html,https://psicode.org,https://psicode.org/psi4manual/master/api/psi4.core.plugin_close.html,1,['update'],['updated']
Deployability,"﻿. plugin_close. Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. plugin_close¶. psi4.core.plugin_close(arg0: str) → None¶; Close the plugin of name arg0. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2018, The Psi4 Project.; Last updated on Wednesday, 25 July 2018 04:21AM.; Created using Sphinx 1.7.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/api/psi4.core.plugin_close-1.html:390,update,updated,390,psi4manual/1.2.1/api/psi4.core.plugin_close-1.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/api/psi4.core.plugin_close-1.html,2,['update'],['updated']
Deployability,"﻿. plugin_close. Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. plugin_close¶. psi4.core.plugin_close(arg0: str) → None¶; Close the plugin of name arg0. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2019, The Psi4 Project.; Last updated on Wednesday, 15 May 2019 08:49PM.; Created using Sphinx 1.8.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/api/psi4.core.plugin_close-1.html:390,update,updated,390,psi4manual/1.3.2/api/psi4.core.plugin_close-1.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/api/psi4.core.plugin_close-1.html,2,['update'],['updated']
Deployability,"﻿. plugin_close. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; plugin_close. plugin_close¶. psi4.core.plugin_close(arg0: str) → None¶; Close the plugin of name arg0. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; plugin_close. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/api/psi4.core.plugin_close-1.html:414,update,updated,414,psi4manual/1.4.0/api/psi4.core.plugin_close-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/api/psi4.core.plugin_close-1.html,2,['update'],['updated']
Deployability,"﻿. plugin_close. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; plugin_close. plugin_close¶. psi4.core.plugin_close(arg0: str) → None¶; Close the plugin of name arg0. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; plugin_close. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/api/psi4.core.plugin_close-1.html:414,update,updated,414,psi4manual/1.5.0/api/psi4.core.plugin_close-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/api/psi4.core.plugin_close-1.html,2,['update'],['updated']
Deployability,"﻿. plugin_close. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; plugin_close. plugin_close¶. psi4.core.plugin_close(arg0: str) → None¶; Close the plugin of name arg0. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; plugin_close. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/api/psi4.core.plugin_close.html:414,update,updated,414,psi4manual/1.6.x/api/psi4.core.plugin_close.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/api/psi4.core.plugin_close.html,1,['update'],['updated']
Deployability,"﻿. plugin_close. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; plugin_close. plugin_close¶. psi4.core.plugin_close(arg0: str) → None¶; Close the plugin of name arg0. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; plugin_close. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/api/psi4.core.plugin_close.html:419,update,updated,419,psi4manual/1.7.x/api/psi4.core.plugin_close.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/api/psi4.core.plugin_close.html,1,['update'],['updated']
Deployability,"﻿. plugin_close. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; plugin_close. plugin_close¶. psi4.core.plugin_close(arg0: str) → None¶; Close the plugin of name arg0. table of contents. plugin_close; plugin_close(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; plugin_close. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/api/psi4.core.plugin_close.html:472,update,updated,472,psi4manual/1.8.x/api/psi4.core.plugin_close.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/api/psi4.core.plugin_close.html,1,['update'],['updated']
Deployability,"﻿. plugin_close. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; plugin_close. plugin_close¶. psi4.core.plugin_close(arg0: str) → None¶; Close the plugin of name arg0. table of contents. plugin_close; plugin_close(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; plugin_close. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/api/psi4.core.plugin_close.html:472,update,updated,472,psi4manual/1.9.x/api/psi4.core.plugin_close.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/api/psi4.core.plugin_close.html,1,['update'],['updated']
Deployability,"﻿. plugin_close_all. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; plugin_close_all. plugin_close_all¶. psi4.core.plugin_close_all() → None¶; Close all open plugins. table of contents. plugin_close_all; plugin_close_all(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; plugin_close_all. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/api/psi4.core.plugin_close_all.html:498,update,updated,498,psi4manual/master/api/psi4.core.plugin_close_all.html,https://psicode.org,https://psicode.org/psi4manual/master/api/psi4.core.plugin_close_all.html,1,['update'],['updated']
Deployability,"﻿. plugin_close_all. Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. plugin_close_all¶. psi4.core.plugin_close_all() → None¶; Close all open plugins. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2018, The Psi4 Project.; Last updated on Wednesday, 25 July 2018 04:21AM.; Created using Sphinx 1.7.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/api/psi4.core.plugin_close_all-1.html:386,update,updated,386,psi4manual/1.2.1/api/psi4.core.plugin_close_all-1.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/api/psi4.core.plugin_close_all-1.html,2,['update'],['updated']
Deployability,"﻿. plugin_close_all. Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. plugin_close_all¶. psi4.core.plugin_close_all() → None¶; Close all open plugins. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2019, The Psi4 Project.; Last updated on Wednesday, 15 May 2019 08:49PM.; Created using Sphinx 1.8.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/api/psi4.core.plugin_close_all-1.html:386,update,updated,386,psi4manual/1.3.2/api/psi4.core.plugin_close_all-1.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/api/psi4.core.plugin_close_all-1.html,2,['update'],['updated']
Deployability,"﻿. plugin_close_all. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; plugin_close_all. plugin_close_all¶. psi4.core.plugin_close_all() → None¶; Close all open plugins. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; plugin_close_all. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/api/psi4.core.plugin_close_all-1.html:418,update,updated,418,psi4manual/1.4.0/api/psi4.core.plugin_close_all-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/api/psi4.core.plugin_close_all-1.html,2,['update'],['updated']
Deployability,"﻿. plugin_close_all. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; plugin_close_all. plugin_close_all¶. psi4.core.plugin_close_all() → None¶; Close all open plugins. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; plugin_close_all. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/api/psi4.core.plugin_close_all-1.html:418,update,updated,418,psi4manual/1.5.0/api/psi4.core.plugin_close_all-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/api/psi4.core.plugin_close_all-1.html,2,['update'],['updated']
Deployability,"﻿. plugin_close_all. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; plugin_close_all. plugin_close_all¶. psi4.core.plugin_close_all() → None¶; Close all open plugins. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; plugin_close_all. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/api/psi4.core.plugin_close_all.html:418,update,updated,418,psi4manual/1.6.x/api/psi4.core.plugin_close_all.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/api/psi4.core.plugin_close_all.html,1,['update'],['updated']
Deployability,"﻿. plugin_close_all. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; plugin_close_all. plugin_close_all¶. psi4.core.plugin_close_all() → None¶; Close all open plugins. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; plugin_close_all. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/api/psi4.core.plugin_close_all.html:423,update,updated,423,psi4manual/1.7.x/api/psi4.core.plugin_close_all.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/api/psi4.core.plugin_close_all.html,1,['update'],['updated']
Deployability,"﻿. plugin_close_all. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; plugin_close_all. plugin_close_all¶. psi4.core.plugin_close_all() → None¶; Close all open plugins. table of contents. plugin_close_all; plugin_close_all(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; plugin_close_all. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/api/psi4.core.plugin_close_all.html:484,update,updated,484,psi4manual/1.8.x/api/psi4.core.plugin_close_all.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/api/psi4.core.plugin_close_all.html,1,['update'],['updated']
Deployability,"﻿. plugin_close_all. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; plugin_close_all. plugin_close_all¶. psi4.core.plugin_close_all() → None¶; Close all open plugins. table of contents. plugin_close_all; plugin_close_all(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; plugin_close_all. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/api/psi4.core.plugin_close_all.html:484,update,updated,484,psi4manual/1.9.x/api/psi4.core.plugin_close_all.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/api/psi4.core.plugin_close_all.html,1,['update'],['updated']
Deployability,"﻿. plugin_dfadc — PSI4 [beta2] documentation. Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Emerging Theoretical Methods: Plugins DFADC to RQCHF ». plugin_dfadc¶. C-side Documentation¶. CUTOFF (PLUGIN_DFADC); Indicates whether three-virtual integral is processed by semi-direct algorithm. Type: integer; Default: 2. DIM_RITZ (PLUGIN_DFADC); Initial and the maximum dimension of the Ritz space. Type: array; Default: No Default. DO_PR (PLUGIN_DFADC); Partial renormalization scheme for the ground state wavefunction. Type: boolean; Default: false. DO_RESIDUAL (PLUGIN_DFADC); Whether convergence of residual norm is necessary or not. Type: boolean; Default: true. MEMORY (PLUGIN_DFADC); The amount of memory available (in Mb). Type: integer; Default: 1000. NEWTON_CONV (PLUGIN_DFADC); The convergence criterion for pole searching step. Type: integer; Default: 7. NORM_TOL (PLUGIN_DFADC); The cutoff norm of residual vector in SEM step. Type: integer; Default: 6. POLE_MAX (PLUGIN_DFADC); The maximum numbers of the pole searching iteration. Type: integer; Default: 20. PRINT (PLUGIN_DFADC); The amount of information printed to the output file. Type: integer; Default: 1. REFERENCE (PLUGIN_DFADC); The Reference. Type: string; Default: No Default. RI_BASIS_ADC (PLUGIN_DFADC); The DF basis. Type: string; Default: No Default. SEM_MAX (PLUGIN_DFADC); Maximu iteration number in simultaneous expansion method. Type: integer; Default: 100. Table Of Contents. plugin_dfadc; C-side Documentation. Previous topic; SEMICANONICAL; Next topic; <no title>; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Emerging Theoretical Methods: Plugins DFADC to RQCHF ». © Copyright 2012, Psi4 Project.; Last updated on Sep 30, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b2/autodir_plugins/module__plugin_dfadc-1.html:1825,update,updated,1825,psi4manual/4.0b2/autodir_plugins/module__plugin_dfadc-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b2/autodir_plugins/module__plugin_dfadc-1.html,2,['update'],['updated']
Deployability,"﻿. plugin_load. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; plugin_load. plugin_load¶. psi4.core.plugin_load(arg0: str) → int¶; Load the plugin of name arg0. Returns 0 if not loaded, 1 if loaded, 2 if already loaded. table of contents. plugin_load; plugin_load(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; plugin_load. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/api/psi4.core.plugin_load.html:536,update,updated,536,psi4manual/master/api/psi4.core.plugin_load.html,https://psicode.org,https://psicode.org/psi4manual/master/api/psi4.core.plugin_load.html,1,['update'],['updated']
Deployability,"﻿. plugin_load. Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. plugin_load¶. psi4.core.plugin_load(arg0: str) → int¶; Load the plugin of name arg0. Returns 0 if not loaded, 1 if loaded, 2 if already loaded. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2018, The Psi4 Project.; Last updated on Wednesday, 25 July 2018 04:21AM.; Created using Sphinx 1.7.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/api/psi4.core.plugin_load-1.html:444,update,updated,444,psi4manual/1.2.1/api/psi4.core.plugin_load-1.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/api/psi4.core.plugin_load-1.html,2,['update'],['updated']
Deployability,"﻿. plugin_load. Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. plugin_load¶. psi4.core.plugin_load(arg0: str) → int¶; Load the plugin of name arg0. Returns 0 if not loaded, 1 if loaded, 2 if already loaded. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2019, The Psi4 Project.; Last updated on Wednesday, 15 May 2019 08:49PM.; Created using Sphinx 1.8.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/api/psi4.core.plugin_load-1.html:444,update,updated,444,psi4manual/1.3.2/api/psi4.core.plugin_load-1.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/api/psi4.core.plugin_load-1.html,2,['update'],['updated']
Deployability,"﻿. plugin_load. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; plugin_load. plugin_load¶. psi4.core.plugin_load(arg0: str) → int¶; Load the plugin of name arg0. Returns 0 if not loaded, 1 if loaded, 2 if already loaded. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; plugin_load. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/api/psi4.core.plugin_load-1.html:466,update,updated,466,psi4manual/1.4.0/api/psi4.core.plugin_load-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/api/psi4.core.plugin_load-1.html,2,['update'],['updated']
Deployability,"﻿. plugin_load. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; plugin_load. plugin_load¶. psi4.core.plugin_load(arg0: str) → int¶; Load the plugin of name arg0. Returns 0 if not loaded, 1 if loaded, 2 if already loaded. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; plugin_load. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/api/psi4.core.plugin_load-1.html:466,update,updated,466,psi4manual/1.5.0/api/psi4.core.plugin_load-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/api/psi4.core.plugin_load-1.html,2,['update'],['updated']
Deployability,"﻿. plugin_load. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; plugin_load. plugin_load¶. psi4.core.plugin_load(arg0: str) → int¶; Load the plugin of name arg0. Returns 0 if not loaded, 1 if loaded, 2 if already loaded. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; plugin_load. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/api/psi4.core.plugin_load.html:466,update,updated,466,psi4manual/1.6.x/api/psi4.core.plugin_load.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/api/psi4.core.plugin_load.html,1,['update'],['updated']
Deployability,"﻿. plugin_load. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; plugin_load. plugin_load¶. psi4.core.plugin_load(arg0: str) → int¶; Load the plugin of name arg0. Returns 0 if not loaded, 1 if loaded, 2 if already loaded. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; plugin_load. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/api/psi4.core.plugin_load.html:471,update,updated,471,psi4manual/1.7.x/api/psi4.core.plugin_load.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/api/psi4.core.plugin_load.html,1,['update'],['updated']
Deployability,"﻿. plugin_load. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; plugin_load. plugin_load¶. psi4.core.plugin_load(arg0: str) → int¶; Load the plugin of name arg0. Returns 0 if not loaded, 1 if loaded, 2 if already loaded. table of contents. plugin_load; plugin_load(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; plugin_load. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/api/psi4.core.plugin_load.html:522,update,updated,522,psi4manual/1.8.x/api/psi4.core.plugin_load.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/api/psi4.core.plugin_load.html,1,['update'],['updated']
Deployability,"﻿. plugin_load. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; plugin_load. plugin_load¶. psi4.core.plugin_load(arg0: str) → int¶; Load the plugin of name arg0. Returns 0 if not loaded, 1 if loaded, 2 if already loaded. table of contents. plugin_load; plugin_load(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; plugin_load. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/api/psi4.core.plugin_load.html:522,update,updated,522,psi4manual/1.9.x/api/psi4.core.plugin_load.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/api/psi4.core.plugin_load.html,1,['update'],['updated']
Deployability,"﻿. plugin_mointegrals — PSI4 [beta2] documentation. Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Emerging Theoretical Methods: Plugins DFADC to RQCHF ». plugin_mointegrals¶. C-side Documentation¶. PRINT (PLUGIN_MOINTEGRALS); The amount of information printed to the output file. Type: integer; Default: 1. Table Of Contents. plugin_mointegrals; C-side Documentation. Previous topic; PRINT; Next topic; <no title>; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Emerging Theoretical Methods: Plugins DFADC to RQCHF ». © Copyright 2012, Psi4 Project.; Last updated on Sep 30, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b2/autodir_plugins/module__plugin_mointegrals-1.html:694,update,updated,694,psi4manual/4.0b2/autodir_plugins/module__plugin_mointegrals-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b2/autodir_plugins/module__plugin_mointegrals-1.html,2,['update'],['updated']
Deployability,"﻿. plugin_mp2 — PSI4 [beta2] documentation. Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Emerging Theoretical Methods: Plugins DFADC to RQCHF ». plugin_mp2¶. C-side Documentation¶. CACHELEV (PLUGIN_MP2); How to cache quantities within the DPD library. Type: integer; Default: 2. MEMORY (PLUGIN_MP2); The amount of memory available (in Mb). Type: integer; Default: 2000. PRINT (PLUGIN_MP2); The amount of information printed to the output file. Type: integer; Default: 1. REFERENCE (PLUGIN_MP2); The Reference. Type: string; Default: No Default. Table Of Contents. plugin_mp2; C-side Documentation. Previous topic; PRINT; Next topic; <no title>; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Emerging Theoretical Methods: Plugins DFADC to RQCHF ». © Copyright 2012, Psi4 Project.; Last updated on Sep 30, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b2/autodir_plugins/module__plugin_mp2-1.html:925,update,updated,925,psi4manual/4.0b2/autodir_plugins/module__plugin_mp2-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b2/autodir_plugins/module__plugin_mp2-1.html,2,['update'],['updated']
Deployability,"﻿. plugin_rqchf — PSI4 [beta2] documentation. Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Emerging Theoretical Methods: Plugins DFADC to RQCHF ». plugin_rqchf¶. C-side Documentation¶. BASIS (QCSCF); The orbital basis set. Type: string; Possible Values: basis string; Default: No Default. DF_BASIS_SCF (QCSCF); The auxilliary basis set. Type: string; Possible Values: basis string; Default: No Default. PRINT (QCSCF); The amount of information printed to the output file. Type: integer; Default: 1. Table Of Contents. plugin_rqchf; C-side Documentation. Previous topic; <no title>; Next topic; <no title>; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Emerging Theoretical Methods: Plugins DFADC to RQCHF ». © Copyright 2012, Psi4 Project.; Last updated on Sep 30, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b2/autodir_plugins/module__plugin_rqchf-1.html:886,update,updated,886,psi4manual/4.0b2/autodir_plugins/module__plugin_rqchf-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b2/autodir_plugins/module__plugin_rqchf-1.html,2,['update'],['updated']
Deployability,"﻿. plugin_sointegrals — PSI4 [beta2] documentation. Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Emerging Theoretical Methods: Plugins DFADC to RQCHF ». plugin_sointegrals¶. C-side Documentation¶. DO_TEI (PLUGIN_SOINTEGRALS); Whether to compute two-electron integrals. Type: boolean; Default: true. PRINT (PLUGIN_SOINTEGRALS); The amount of information printed to the output file. Type: integer; Default: 1. Table Of Contents. plugin_sointegrals; C-side Documentation. Previous topic; REFERENCE; Next topic; <no title>; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Emerging Theoretical Methods: Plugins DFADC to RQCHF ». © Copyright 2012, Psi4 Project.; Last updated on Sep 30, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b2/autodir_plugins/module__plugin_sointegrals-1.html:800,update,updated,800,psi4manual/4.0b2/autodir_plugins/module__plugin_sointegrals-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b2/autodir_plugins/module__plugin_sointegrals-1.html,2,['update'],['updated']
Deployability,"﻿. plugin_test_matrix — PSI4 [beta2] documentation. Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Emerging Theoretical Methods: Plugins DFADC to RQCHF ». plugin_test_matrix¶. C-side Documentation¶. CACHELEV (PLUGIN_TEST_MATRIX); How to cache quantities within the DPD library. Type: integer; Default: 2. MATRIX_SIZE (PLUGIN_TEST_MATRIX); The size of the matrices. Type: integer; Default: 1000. MEMORY (PLUGIN_TEST_MATRIX); The amount of memory available (in Mb). Type: integer; Default: 2000. PRINT (PLUGIN_TEST_MATRIX); The amount of information printed to the output file. Type: integer; Default: 1. TILE_SIZE (PLUGIN_TEST_MATRIX); The size of the tiles. Type: integer; Default: 10. Table Of Contents. plugin_test_matrix; C-side Documentation. Previous topic; SEM_MAX; Next topic; <no title>; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Emerging Theoretical Methods: Plugins DFADC to RQCHF ». © Copyright 2012, Psi4 Project.; Last updated on Sep 30, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b2/autodir_plugins/module__plugin_test_matrix-1.html:1074,update,updated,1074,psi4manual/4.0b2/autodir_plugins/module__plugin_test_matrix-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b2/autodir_plugins/module__plugin_test_matrix-1.html,2,['update'],['updated']
Deployability,"﻿. plugin_testparse — PSI4 [beta2] documentation. Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Emerging Theoretical Methods: Plugins DFADC to RQCHF ». plugin_testparse¶. Theory, Usage, and Notes¶; Code author: Psi4 Developer; Section author: Psi4 Developer; Casual documentation for this plugin goes here.; Uncomment the .. comment for some examples. Py-side Documentation¶; Plugin docstring. C-side Documentation¶. Table Of Contents. plugin_testparse; Theory, Usage, and Notes; Py-side Documentation; C-side Documentation. Previous topic; PRINT; Next topic; <no title>; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Emerging Theoretical Methods: Plugins DFADC to RQCHF ». © Copyright 2012, Psi4 Project.; Last updated on Sep 30, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b2/autodir_plugins/module__plugin_testparse-1.html:851,update,updated,851,psi4manual/4.0b2/autodir_plugins/module__plugin_testparse-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b2/autodir_plugins/module__plugin_testparse-1.html,2,['update'],['updated']
Deployability,"﻿. plump_qcvar. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; plump_qcvar. plump_qcvar¶. psi4.driver.p4util.plump_qcvar(key, val)[source]¶; Prepare serialized QCVariables for QCSchema AtomicResult.extras[“qcvars”] by; converting flat arrays into numpy, shaped ones and floating strings.; Unlike _qcvar_reshape_get/set, multipoles aren’t compressed or plumped, only reshaped. Parameters:. key (str) – Shape clue (usually QCVariable key) that includes (case insensitive) an identifier like; ‘gradient’ as a clue to the array’s natural dimensions.; val (Union[float, str, List]) – flat (?, ) list or scalar or string, probably from JSON storage. Returns:; Reshaped array of val with natural dimensions of key. Return type:; float or numpy.ndarray. table of contents. plump_qcvar; plump_qcvar(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; plump_qcvar. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/api/psi4.driver.p4util.plump_qcvar.html:1062,update,updated,1062,psi4manual/master/api/psi4.driver.p4util.plump_qcvar.html,https://psicode.org,https://psicode.org/psi4manual/master/api/psi4.driver.p4util.plump_qcvar.html,1,['update'],['updated']
Deployability,"﻿. plump_qcvar. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; plump_qcvar. plump_qcvar¶. psi4.driver.p4util.plump_qcvar(val, shape_clue, ret='np')[source]¶; Prepare serialized QCVariable for set_variable() by; converting flat arrays into shaped ones and floating strings. Parameters:. val (Union[float, str, List]) – flat (?, ) list or scalar or string, probably from JSON storage.; shape_clue (str) – Label that includes (case insensitive) one of the following as; a clue to the array’s natural dimensions: ‘gradient’, ‘hessian’; ret (str) – {‘np’, ‘psi4’}; Whether for arrays to return numpy.ndarray or; psi4.core.Matrix. Returns:; Reshaped array of type ret with natural dimensions of shape_clue. Return type:; float or numpy.ndarray or Matrix. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; plump_qcvar. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/api/psi4.driver.p4util.plump_qcvar.html:1000,update,updated,1000,psi4manual/1.7.x/api/psi4.driver.p4util.plump_qcvar.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/api/psi4.driver.p4util.plump_qcvar.html,1,['update'],['updated']
Deployability,"﻿. plump_qcvar. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; plump_qcvar. plump_qcvar¶. psi4.driver.p4util.plump_qcvar(key, val)[source]¶; Prepare serialized QCVariables for QCSchema AtomicResult.extras[“qcvars”] by; converting flat arrays into numpy, shaped ones and floating strings.; Unlike _qcvar_reshape_get/set, multipoles aren’t compressed or plumped, only reshaped. Parameters:. key (str) – Shape clue (usually QCVariable key) that includes (case insensitive) an identifier like; ‘gradient’ as a clue to the array’s natural dimensions.; val (Union[float, str, List]) – flat (?, ) list or scalar or string, probably from JSON storage. Returns:; Reshaped array of val with natural dimensions of key. Return type:; float or numpy.ndarray. table of contents. plump_qcvar; plump_qcvar(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; plump_qcvar. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/api/psi4.driver.p4util.plump_qcvar.html:1048,update,updated,1048,psi4manual/1.8.x/api/psi4.driver.p4util.plump_qcvar.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/api/psi4.driver.p4util.plump_qcvar.html,1,['update'],['updated']
Deployability,"﻿. plump_qcvar. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; plump_qcvar. plump_qcvar¶. psi4.driver.p4util.plump_qcvar(key, val)[source]¶; Prepare serialized QCVariables for QCSchema AtomicResult.extras[“qcvars”] by; converting flat arrays into numpy, shaped ones and floating strings.; Unlike _qcvar_reshape_get/set, multipoles aren’t compressed or plumped, only reshaped. Parameters:. key (str) – Shape clue (usually QCVariable key) that includes (case insensitive) an identifier like; ‘gradient’ as a clue to the array’s natural dimensions.; val (Union[float, str, List]) – flat (?, ) list or scalar or string, probably from JSON storage. Returns:; Reshaped array of val with natural dimensions of key. Return type:; float or numpy.ndarray. table of contents. plump_qcvar; plump_qcvar(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; plump_qcvar. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/api/psi4.driver.p4util.plump_qcvar.html:1048,update,updated,1048,psi4manual/1.9.x/api/psi4.driver.p4util.plump_qcvar.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/api/psi4.driver.p4util.plump_qcvar.html,1,['update'],['updated']
Deployability,"﻿. prefactor_ecd. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; prefactor_ecd. prefactor_ecd¶. psi4.driver.p4util.prefactor_ecd()[source]¶; Prefactor for converting microscopic observable to decadic molar; extinction coefficient in electronic circular dichroism. Return type:; float. Notes; This function implements the calculation of the following prefactor:. \[k = \frac{16\pi^{2}N_{\mathrm{A}}}{3\times 1000\times \ln(10) (4 \pi \epsilon_{0}) n \hbar c^{2}}\]; The prefactor is computed in SI units and then adjusted for the fact that; we use atomic units to express microscopic observables: excitation energies; and transition dipole moments.; The refractive index \(n\) is, in general, frequency-dependent. We; assume it to be constant and equal to 1. table of contents. prefactor_ecd; prefactor_ecd(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; prefactor_ecd. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/api/psi4.driver.p4util.prefactor_ecd.html:1080,update,updated,1080,psi4manual/master/api/psi4.driver.p4util.prefactor_ecd.html,https://psicode.org,https://psicode.org/psi4manual/master/api/psi4.driver.p4util.prefactor_ecd.html,1,['update'],['updated']
Deployability,"﻿. prefactor_ecd. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; prefactor_ecd. prefactor_ecd¶. psi4.driver.p4util.prefactor_ecd()[source]¶; Prefactor for converting microscopic observable to decadic molar; extinction coefficient in electronic circular dichroism.; Notes; This function implements the calculation of the following prefactor:. \[k = \frac{16\pi^{2}N_{\mathrm{A}}}{3\times 1000\times \ln(10) (4 \pi \epsilon_{0}) n \hbar c^{2}}\]; The prefactor is computed in SI units and then adjusted for the fact that; we use atomic units to express microscopic observables: excitation energies; and transition dipole moments.; The refractive index \(n\) is, in general, frequency-dependent. We; assume it to be constant and equal to 1. Return type:; float. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; prefactor_ecd. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/api/psi4.driver.p4util.prefactor_ecd.html:1012,update,updated,1012,psi4manual/1.7.x/api/psi4.driver.p4util.prefactor_ecd.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/api/psi4.driver.p4util.prefactor_ecd.html,1,['update'],['updated']
Deployability,"﻿. prefactor_ecd. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; prefactor_ecd. prefactor_ecd¶. psi4.driver.p4util.prefactor_ecd()[source]¶; Prefactor for converting microscopic observable to decadic molar; extinction coefficient in electronic circular dichroism. Return type:; float. Notes; This function implements the calculation of the following prefactor:. \[k = \frac{16\pi^{2}N_{\mathrm{A}}}{3\times 1000\times \ln(10) (4 \pi \epsilon_{0}) n \hbar c^{2}}\]; The prefactor is computed in SI units and then adjusted for the fact that; we use atomic units to express microscopic observables: excitation energies; and transition dipole moments.; The refractive index \(n\) is, in general, frequency-dependent. We; assume it to be constant and equal to 1. table of contents. prefactor_ecd; prefactor_ecd(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; prefactor_ecd. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/api/psi4.driver.p4util.prefactor_ecd.html:1066,update,updated,1066,psi4manual/1.8.x/api/psi4.driver.p4util.prefactor_ecd.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/api/psi4.driver.p4util.prefactor_ecd.html,1,['update'],['updated']
Deployability,"﻿. prefactor_ecd. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; prefactor_ecd. prefactor_ecd¶. psi4.driver.p4util.prefactor_ecd()[source]¶; Prefactor for converting microscopic observable to decadic molar; extinction coefficient in electronic circular dichroism. Return type:; float. Notes; This function implements the calculation of the following prefactor:. \[k = \frac{16\pi^{2}N_{\mathrm{A}}}{3\times 1000\times \ln(10) (4 \pi \epsilon_{0}) n \hbar c^{2}}\]; The prefactor is computed in SI units and then adjusted for the fact that; we use atomic units to express microscopic observables: excitation energies; and transition dipole moments.; The refractive index \(n\) is, in general, frequency-dependent. We; assume it to be constant and equal to 1. table of contents. prefactor_ecd; prefactor_ecd(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; prefactor_ecd. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/api/psi4.driver.p4util.prefactor_ecd.html:1066,update,updated,1066,psi4manual/1.9.x/api/psi4.driver.p4util.prefactor_ecd.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/api/psi4.driver.p4util.prefactor_ecd.html,1,['update'],['updated']
Deployability,"﻿. prefactor_opa. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; prefactor_opa. prefactor_opa¶. psi4.driver.p4util.prefactor_opa()[source]¶; Prefactor for converting microscopic observable to decadic molar; extinction coefficient in one-photon absorption. Return type:; float. Notes; This function implements the calculation of the following prefactor:. \[k = \frac{4\pi^{2}N_{\mathrm{A}}}{3\times 1000\times \ln(10) (4 \pi \epsilon_{0}) n \hbar c}\]; The prefactor is computed in SI units and then adjusted for the fact that; we use atomic units to express microscopic observables: excitation energies; and transition dipole moments.; The refractive index \(n\) is, in general, frequency-dependent. We; assume it to be constant and equal to 1. table of contents. prefactor_opa; prefactor_opa(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; prefactor_opa. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/api/psi4.driver.p4util.prefactor_opa.html:1067,update,updated,1067,psi4manual/master/api/psi4.driver.p4util.prefactor_opa.html,https://psicode.org,https://psicode.org/psi4manual/master/api/psi4.driver.p4util.prefactor_opa.html,1,['update'],['updated']
Deployability,"﻿. prefactor_opa. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; prefactor_opa. prefactor_opa¶. psi4.driver.p4util.prefactor_opa()[source]¶; Prefactor for converting microscopic observable to decadic molar; extinction coefficient in one-photon absorption.; Notes; This function implements the calculation of the following prefactor:. \[k = \frac{4\pi^{2}N_{\mathrm{A}}}{3\times 1000\times \ln(10) (4 \pi \epsilon_{0}) n \hbar c}\]; The prefactor is computed in SI units and then adjusted for the fact that; we use atomic units to express microscopic observables: excitation energies; and transition dipole moments.; The refractive index \(n\) is, in general, frequency-dependent. We; assume it to be constant and equal to 1. Return type:; float. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; prefactor_opa. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/api/psi4.driver.p4util.prefactor_opa.html:999,update,updated,999,psi4manual/1.7.x/api/psi4.driver.p4util.prefactor_opa.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/api/psi4.driver.p4util.prefactor_opa.html,1,['update'],['updated']
Deployability,"﻿. prefactor_opa. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; prefactor_opa. prefactor_opa¶. psi4.driver.p4util.prefactor_opa()[source]¶; Prefactor for converting microscopic observable to decadic molar; extinction coefficient in one-photon absorption. Return type:; float. Notes; This function implements the calculation of the following prefactor:. \[k = \frac{4\pi^{2}N_{\mathrm{A}}}{3\times 1000\times \ln(10) (4 \pi \epsilon_{0}) n \hbar c}\]; The prefactor is computed in SI units and then adjusted for the fact that; we use atomic units to express microscopic observables: excitation energies; and transition dipole moments.; The refractive index \(n\) is, in general, frequency-dependent. We; assume it to be constant and equal to 1. table of contents. prefactor_opa; prefactor_opa(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; prefactor_opa. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/api/psi4.driver.p4util.prefactor_opa.html:1053,update,updated,1053,psi4manual/1.8.x/api/psi4.driver.p4util.prefactor_opa.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/api/psi4.driver.p4util.prefactor_opa.html,1,['update'],['updated']
Deployability,"﻿. prefactor_opa. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; prefactor_opa. prefactor_opa¶. psi4.driver.p4util.prefactor_opa()[source]¶; Prefactor for converting microscopic observable to decadic molar; extinction coefficient in one-photon absorption. Return type:; float. Notes; This function implements the calculation of the following prefactor:. \[k = \frac{4\pi^{2}N_{\mathrm{A}}}{3\times 1000\times \ln(10) (4 \pi \epsilon_{0}) n \hbar c}\]; The prefactor is computed in SI units and then adjusted for the fact that; we use atomic units to express microscopic observables: excitation energies; and transition dipole moments.; The refractive index \(n\) is, in general, frequency-dependent. We; assume it to be constant and equal to 1. table of contents. prefactor_opa; prefactor_opa(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; prefactor_opa. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/api/psi4.driver.p4util.prefactor_opa.html:1053,update,updated,1053,psi4manual/1.9.x/api/psi4.driver.p4util.prefactor_opa.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/api/psi4.driver.p4util.prefactor_opa.html,1,['update'],['updated']
Deployability,"﻿. prepare_options_for_module. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; prepare_options_for_module. prepare_options_for_module¶. psi4.core.prepare_options_for_module(name: str) → None¶; Sets up the options library to return options pertaining to the module or plugin name (e.g. SCF). table of contents. prepare_options_for_module; prepare_options_for_module(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; prepare_options_for_module. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/api/psi4.core.prepare_options_for_module.html:651,update,updated,651,psi4manual/master/api/psi4.core.prepare_options_for_module.html,https://psicode.org,https://psicode.org/psi4manual/master/api/psi4.core.prepare_options_for_module.html,1,['update'],['updated']
Deployability,"﻿. prepare_options_for_module. Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. prepare_options_for_module¶. psi4.core.prepare_options_for_module(arg0: str) → None¶; Sets the options module up to return options pertaining to the named argument (e.g. SCF). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2018, The Psi4 Project.; Last updated on Wednesday, 25 July 2018 04:21AM.; Created using Sphinx 1.7.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/api/psi4.core.prepare_options_for_module-1.html:491,update,updated,491,psi4manual/1.2.1/api/psi4.core.prepare_options_for_module-1.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/api/psi4.core.prepare_options_for_module-1.html,2,['update'],['updated']
Deployability,"﻿. prepare_options_for_module. Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. prepare_options_for_module¶. psi4.core.prepare_options_for_module(arg0: str) → None¶; Sets the options module up to return options pertaining to the named argument (e.g. SCF). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2019, The Psi4 Project.; Last updated on Wednesday, 15 May 2019 08:49PM.; Created using Sphinx 1.8.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/api/psi4.core.prepare_options_for_module-1.html:491,update,updated,491,psi4manual/1.3.2/api/psi4.core.prepare_options_for_module-1.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/api/psi4.core.prepare_options_for_module-1.html,2,['update'],['updated']
Deployability,"﻿. prepare_options_for_module. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; prepare_options_for_module. prepare_options_for_module¶. psi4.core.prepare_options_for_module(name: str) → None¶; Sets up the options library to return options pertaining to the module or plugin name (e.g. SCF). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; prepare_options_for_module. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/api/psi4.core.prepare_options_for_module-1.html:551,update,updated,551,psi4manual/1.4.0/api/psi4.core.prepare_options_for_module-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/api/psi4.core.prepare_options_for_module-1.html,2,['update'],['updated']
Deployability,"﻿. prepare_options_for_module. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; prepare_options_for_module. prepare_options_for_module¶. psi4.core.prepare_options_for_module(name: str) → None¶; Sets up the options library to return options pertaining to the module or plugin name (e.g. SCF). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; prepare_options_for_module. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/api/psi4.core.prepare_options_for_module-1.html:551,update,updated,551,psi4manual/1.5.0/api/psi4.core.prepare_options_for_module-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/api/psi4.core.prepare_options_for_module-1.html,2,['update'],['updated']
Deployability,"﻿. prepare_options_for_module. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; prepare_options_for_module. prepare_options_for_module¶. psi4.core.prepare_options_for_module(name: str) → None¶; Sets up the options library to return options pertaining to the module or plugin name (e.g. SCF). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; prepare_options_for_module. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/api/psi4.core.prepare_options_for_module.html:551,update,updated,551,psi4manual/1.6.x/api/psi4.core.prepare_options_for_module.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/api/psi4.core.prepare_options_for_module.html,1,['update'],['updated']
Deployability,"﻿. prepare_options_for_module. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; prepare_options_for_module. prepare_options_for_module¶. psi4.core.prepare_options_for_module(name: str) → None¶; Sets up the options library to return options pertaining to the module or plugin name (e.g. SCF). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; prepare_options_for_module. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/api/psi4.core.prepare_options_for_module.html:556,update,updated,556,psi4manual/1.7.x/api/psi4.core.prepare_options_for_module.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/api/psi4.core.prepare_options_for_module.html,1,['update'],['updated']
Deployability,"﻿. prepare_options_for_module. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; prepare_options_for_module. prepare_options_for_module¶. psi4.core.prepare_options_for_module(name: str) → None¶; Sets up the options library to return options pertaining to the module or plugin name (e.g. SCF). table of contents. prepare_options_for_module; prepare_options_for_module(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; prepare_options_for_module. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/api/psi4.core.prepare_options_for_module.html:637,update,updated,637,psi4manual/1.8.x/api/psi4.core.prepare_options_for_module.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/api/psi4.core.prepare_options_for_module.html,1,['update'],['updated']
Deployability,"﻿. prepare_options_for_module. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; prepare_options_for_module. prepare_options_for_module¶. psi4.core.prepare_options_for_module(name: str) → None¶; Sets up the options library to return options pertaining to the module or plugin name (e.g. SCF). table of contents. prepare_options_for_module; prepare_options_for_module(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; prepare_options_for_module. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/api/psi4.core.prepare_options_for_module.html:637,update,updated,637,psi4manual/1.9.x/api/psi4.core.prepare_options_for_module.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/api/psi4.core.prepare_options_for_module.html,1,['update'],['updated']
Deployability,"﻿. prepare_options_for_modules. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; prepare_options_for_modules. prepare_options_for_modules¶. psi4.driver.p4util.prepare_options_for_modules(changedOnly=False, commandsInsteadDict=False, globalsOnly=False, stateInsteadMediated=False)[source]¶; Capture current state of psi4.core.Options information. Parameters:. changedOnly (bool) – Record info only for options that have been set (may still be default).; When False, records values for every option.; commandsInsteadDict (bool) – Return string of commands to exec to reset options in current form.; When False, return nested dictionary with globals in ‘GLOBALS’ subdictionary; and locals in subdictionaries by module.; globalsOnly (bool) – Record only global options to save time querying the; Options object.; When False, record module-level options, too.; stateInsteadMediated (bool) – When True, querying this function for options to be later reset into the same; state – the raw values and has_changed status at the global and local levels.; When False, querying this function for mediated options to be used – the results; of the globals/locals handshake as computed by the Options object itself. Here,; dict[module][option][value] is the value to be used by module. Return type:; Union[Dict, str]. Returns:. Dict – When commandsInsteadDict is False.; str – When commandsInsteadDict is True. Caution; Some features are not yet implemented. Buy a developer a coffee. command return doesn’t revoke has_changed setting for unchanged with changedOnly=False; not all kwargs are independent. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; prepare_options_for_modules. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/api/psi4.driver.p4util.prepare_options_for_modules.html:1854,update,updated,1854,psi4manual/1.7.x/api/psi4.driver.p4util.prepare_options_for_modules.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/api/psi4.driver.p4util.prepare_options_for_modules.html,1,['update'],['updated']
Deployability,"﻿. prepare_options_for_set_options. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; prepare_options_for_set_options. prepare_options_for_set_options¶. psi4.driver.p4util.prepare_options_for_set_options()[source]¶; Collect current state of psi4.core.Options information for; reloading by set_options(). Returns:; Dictionary where keys are keyword names, either plain for those to be; set globally or mangled “module__keyword” for those to be set locally,; and values are keyword values. Return type:; Dict[str, Any]. table of contents. prepare_options_for_set_options; prepare_options_for_set_options(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; prepare_options_for_set_options. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/api/psi4.driver.p4util.prepare_options_for_set_options.html:891,update,updated,891,psi4manual/master/api/psi4.driver.p4util.prepare_options_for_set_options.html,https://psicode.org,https://psicode.org/psi4manual/master/api/psi4.driver.p4util.prepare_options_for_set_options.html,1,['update'],['updated']
Deployability,"﻿. prepare_options_for_set_options. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; prepare_options_for_set_options. prepare_options_for_set_options¶. psi4.driver.p4util.prepare_options_for_set_options()[source]¶; Collect current state of psi4.core.Options information for; reloading by set_options(). Returns:; Dictionary where keys are keyword names, either plain for those to be; set globally or mangled “module__keyword” for those to be set locally,; and values are keyword values. Return type:; Dict[str, Any]. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; prepare_options_for_set_options. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/api/psi4.driver.p4util.prepare_options_for_set_options.html:786,update,updated,786,psi4manual/1.7.x/api/psi4.driver.p4util.prepare_options_for_set_options.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/api/psi4.driver.p4util.prepare_options_for_set_options.html,1,['update'],['updated']
Deployability,"﻿. prepare_options_for_set_options. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; prepare_options_for_set_options. prepare_options_for_set_options¶. psi4.driver.p4util.prepare_options_for_set_options()[source]¶; Collect current state of psi4.core.Options information for; reloading by set_options(). Returns:; Dictionary where keys are keyword names, either plain for those to be; set globally or mangled “module__keyword” for those to be set locally,; and values are keyword values. Return type:; Dict[str, Any]. table of contents. prepare_options_for_set_options; prepare_options_for_set_options(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; prepare_options_for_set_options. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/api/psi4.driver.p4util.prepare_options_for_set_options.html:877,update,updated,877,psi4manual/1.8.x/api/psi4.driver.p4util.prepare_options_for_set_options.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/api/psi4.driver.p4util.prepare_options_for_set_options.html,1,['update'],['updated']
Deployability,"﻿. prepare_options_for_set_options. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; prepare_options_for_set_options. prepare_options_for_set_options¶. psi4.driver.p4util.prepare_options_for_set_options()[source]¶; Collect current state of psi4.core.Options information for; reloading by set_options(). Returns:; Dictionary where keys are keyword names, either plain for those to be; set globally or mangled “module__keyword” for those to be set locally,; and values are keyword values. Return type:; Dict[str, Any]. table of contents. prepare_options_for_set_options; prepare_options_for_set_options(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; prepare_options_for_set_options. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/api/psi4.driver.p4util.prepare_options_for_set_options.html:877,update,updated,877,psi4manual/1.9.x/api/psi4.driver.p4util.prepare_options_for_set_options.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/api/psi4.driver.p4util.prepare_options_for_set_options.html,1,['update'],['updated']
Deployability,"﻿. print_global_options. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; print_global_options. print_global_options¶. psi4.core.print_global_options() → None¶; Prints the currently set global (all modules) options to the output file. table of contents. print_global_options; print_global_options(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; print_global_options. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/api/psi4.core.print_global_options.html:576,update,updated,576,psi4manual/master/api/psi4.core.print_global_options.html,https://psicode.org,https://psicode.org/psi4manual/master/api/psi4.core.print_global_options.html,1,['update'],['updated']
Deployability,"﻿. print_global_options. Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. print_global_options¶. psi4.core.print_global_options() → None¶; Prints the currently set global (all modules) options to the output file. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2018, The Psi4 Project.; Last updated on Wednesday, 25 July 2018 04:21AM.; Created using Sphinx 1.7.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/api/psi4.core.print_global_options-1.html:448,update,updated,448,psi4manual/1.2.1/api/psi4.core.print_global_options-1.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/api/psi4.core.print_global_options-1.html,2,['update'],['updated']
Deployability,"﻿. print_global_options. Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. print_global_options¶. psi4.core.print_global_options() → None¶; Prints the currently set global (all modules) options to the output file. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2019, The Psi4 Project.; Last updated on Wednesday, 15 May 2019 08:49PM.; Created using Sphinx 1.8.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/api/psi4.core.print_global_options-1.html:448,update,updated,448,psi4manual/1.3.2/api/psi4.core.print_global_options-1.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/api/psi4.core.print_global_options-1.html,2,['update'],['updated']
Deployability,"﻿. print_global_options. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; print_global_options. print_global_options¶. psi4.core.print_global_options() → None¶; Prints the currently set global (all modules) options to the output file. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; print_global_options. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/api/psi4.core.print_global_options-1.html:488,update,updated,488,psi4manual/1.4.0/api/psi4.core.print_global_options-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/api/psi4.core.print_global_options-1.html,2,['update'],['updated']
Deployability,"﻿. print_global_options. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; print_global_options. print_global_options¶. psi4.core.print_global_options() → None¶; Prints the currently set global (all modules) options to the output file. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; print_global_options. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/api/psi4.core.print_global_options-1.html:488,update,updated,488,psi4manual/1.5.0/api/psi4.core.print_global_options-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/api/psi4.core.print_global_options-1.html,2,['update'],['updated']
Deployability,"﻿. print_global_options. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; print_global_options. print_global_options¶. psi4.core.print_global_options() → None¶; Prints the currently set global (all modules) options to the output file. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; print_global_options. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/api/psi4.core.print_global_options.html:488,update,updated,488,psi4manual/1.6.x/api/psi4.core.print_global_options.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/api/psi4.core.print_global_options.html,1,['update'],['updated']
Deployability,"﻿. print_global_options. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; print_global_options. print_global_options¶. psi4.core.print_global_options() → None¶; Prints the currently set global (all modules) options to the output file. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; print_global_options. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/api/psi4.core.print_global_options.html:493,update,updated,493,psi4manual/1.7.x/api/psi4.core.print_global_options.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/api/psi4.core.print_global_options.html,1,['update'],['updated']
Deployability,"﻿. print_global_options. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; print_global_options. print_global_options¶. psi4.core.print_global_options() → None¶; Prints the currently set global (all modules) options to the output file. table of contents. print_global_options; print_global_options(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; print_global_options. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/api/psi4.core.print_global_options.html:562,update,updated,562,psi4manual/1.8.x/api/psi4.core.print_global_options.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/api/psi4.core.print_global_options.html,1,['update'],['updated']
Deployability,"﻿. print_global_options. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; print_global_options. print_global_options¶. psi4.core.print_global_options() → None¶; Prints the currently set global (all modules) options to the output file. table of contents. print_global_options; print_global_options(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; print_global_options. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/api/psi4.core.print_global_options.html:562,update,updated,562,psi4manual/1.9.x/api/psi4.core.print_global_options.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/api/psi4.core.print_global_options.html,1,['update'],['updated']
Deployability,"﻿. print_molden_vibs. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Psithon Functions: Invoking a Calculation; Harmonic Vibrational Analysis and Visualization of Normal Modes — frequency() and hessian(); print_molden_vibs. print_molden_vibs¶. psi4.driver.qcdb.vib.print_molden_vibs(vibinfo, atom_symbol, geom, standalone=True)[source]¶; Format vibrational analysis for Molden. Parameters:. vibinfo (Dict[str, Datum]) – Holds results of vibrational analysis.; atom_symbol (Union[ndarray, List[str]]) – (nat,) element symbols for geometry of vibrational analysis.; geom (Union[ndarray, List[List[float]]]) – (nat, 3) geometry of vibrational analysis [a0].; standalone (bool) – Whether returned string prefixed “[Molden Format]” for standalone rather than append. Returns:; vibinfo formatted for Molden, including FREQ, FR-COORD, & FR-NORM-COORD fields. Return type:; str. Notes; Molden format spec from http://www.cmbi.ru.nl/molden/molden_format.html; Specifies “atomic coordinates x,y,z and atomic displacements dx,dy,dz are all in Bohr (Atomic Unit of length)”; Despite it being quite wrong, imaginary modes are represented by a negative frequency. table of contents. print_molden_vibs; print_molden_vibs(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Psithon Functions: Invoking a Calculation; Harmonic Vibrational Analysis and Visualization of Normal Modes — frequency() and hessian(); print_molden_vibs. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/api/psi4.driver.qcdb.vib.print_molden_vibs.html:1552,update,updated,1552,psi4manual/master/api/psi4.driver.qcdb.vib.print_molden_vibs.html,https://psicode.org,https://psicode.org/psi4manual/master/api/psi4.driver.qcdb.vib.print_molden_vibs.html,1,['update'],['updated']
Deployability,"﻿. print_molden_vibs. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Psithon Functions: Invoking a Calculation; Harmonic Vibrational Analysis and Visualization of Normal Modes — frequency() and hessian(); print_molden_vibs. print_molden_vibs¶. psi4.driver.qcdb.vib.print_molden_vibs(vibinfo, atom_symbol, geom, standalone=True)[source]¶; Format vibrational analysis for Molden. Parameters. vibinfo (Dict[str, Datum]) – Holds results of vibrational analysis.; atom_symbol (Union[ndarray, List[str]]) – (nat,) element symbols for geometry of vibrational analysis.; geom (Union[ndarray, List[List[float]]]) – (nat, 3) geometry of vibrational analysis [a0].; standalone (bool) – Whether returned string prefixed “[Molden Format]” for standalone rather than append. Returns; vibinfo formatted for Molden, including FREQ, FR-COORD, & FR-NORM-COORD fields. Return type; str. Notes; Molden format spec from http://www.cmbi.ru.nl/molden/molden_format.html; Specifies “atomic coordinates x,y,z and atomic displacements dx,dy,dz are all in Bohr (Atomic Unit of length)”; Despite it being quite wrong, imaginary modes are represented by a negative frequency. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Psithon Functions: Invoking a Calculation; Harmonic Vibrational Analysis and Visualization of Normal Modes — frequency() and hessian(); print_molden_vibs. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/api/psi4.driver.qcdb.vib.print_molden_vibs-1.html:1467,update,updated,1467,psi4manual/1.4.0/api/psi4.driver.qcdb.vib.print_molden_vibs-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/api/psi4.driver.qcdb.vib.print_molden_vibs-1.html,2,['update'],['updated']
Deployability,"﻿. print_molden_vibs. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Psithon Functions: Invoking a Calculation; Harmonic Vibrational Analysis and Visualization of Normal Modes — frequency() and hessian(); print_molden_vibs. print_molden_vibs¶. psi4.driver.qcdb.vib.print_molden_vibs(vibinfo, atom_symbol, geom, standalone=True)[source]¶; Format vibrational analysis for Molden. Parameters. vibinfo (Dict[str, Datum]) – Holds results of vibrational analysis.; atom_symbol (Union[ndarray, List[str]]) – (nat,) element symbols for geometry of vibrational analysis.; geom (Union[ndarray, List[List[float]]]) – (nat, 3) geometry of vibrational analysis [a0].; standalone (bool) – Whether returned string prefixed “[Molden Format]” for standalone rather than append. Returns; vibinfo formatted for Molden, including FREQ, FR-COORD, & FR-NORM-COORD fields. Return type; str. Notes; Molden format spec from http://www.cmbi.ru.nl/molden/molden_format.html; Specifies “atomic coordinates x,y,z and atomic displacements dx,dy,dz are all in Bohr (Atomic Unit of length)”; Despite it being quite wrong, imaginary modes are represented by a negative frequency. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Psithon Functions: Invoking a Calculation; Harmonic Vibrational Analysis and Visualization of Normal Modes — frequency() and hessian(); print_molden_vibs. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/api/psi4.driver.qcdb.vib.print_molden_vibs-1.html:1467,update,updated,1467,psi4manual/1.5.0/api/psi4.driver.qcdb.vib.print_molden_vibs-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/api/psi4.driver.qcdb.vib.print_molden_vibs-1.html,2,['update'],['updated']
Deployability,"﻿. print_molden_vibs. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Psithon Functions: Invoking a Calculation; Harmonic Vibrational Analysis and Visualization of Normal Modes — frequency() and hessian(); print_molden_vibs. print_molden_vibs¶. psi4.driver.qcdb.vib.print_molden_vibs(vibinfo, atom_symbol, geom, standalone=True)[source]¶; Format vibrational analysis for Molden. Parameters. vibinfo (Dict[str, Datum]) – Holds results of vibrational analysis.; atom_symbol (Union[ndarray, List[str]]) – (nat,) element symbols for geometry of vibrational analysis.; geom (Union[ndarray, List[List[float]]]) – (nat, 3) geometry of vibrational analysis [a0].; standalone (bool) – Whether returned string prefixed “[Molden Format]” for standalone rather than append. Returns; vibinfo formatted for Molden, including FREQ, FR-COORD, & FR-NORM-COORD fields. Return type; str. Notes; Molden format spec from http://www.cmbi.ru.nl/molden/molden_format.html; Specifies “atomic coordinates x,y,z and atomic displacements dx,dy,dz are all in Bohr (Atomic Unit of length)”; Despite it being quite wrong, imaginary modes are represented by a negative frequency. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Psithon Functions: Invoking a Calculation; Harmonic Vibrational Analysis and Visualization of Normal Modes — frequency() and hessian(); print_molden_vibs. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/api/psi4.driver.qcdb.vib.print_molden_vibs.html:1467,update,updated,1467,psi4manual/1.6.x/api/psi4.driver.qcdb.vib.print_molden_vibs.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/api/psi4.driver.qcdb.vib.print_molden_vibs.html,1,['update'],['updated']
Deployability,"﻿. print_molden_vibs. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Psithon Functions: Invoking a Calculation; Harmonic Vibrational Analysis and Visualization of Normal Modes — frequency() and hessian(); print_molden_vibs. print_molden_vibs¶. psi4.driver.qcdb.vib.print_molden_vibs(vibinfo, atom_symbol, geom, standalone=True)[source]¶; Format vibrational analysis for Molden. Parameters:. vibinfo (Dict[str, Datum]) – Holds results of vibrational analysis.; atom_symbol (Union[ndarray, List[str]]) – (nat,) element symbols for geometry of vibrational analysis.; geom (Union[ndarray, List[List[float]]]) – (nat, 3) geometry of vibrational analysis [a0].; standalone (bool) – Whether returned string prefixed “[Molden Format]” for standalone rather than append. Returns:; vibinfo formatted for Molden, including FREQ, FR-COORD, & FR-NORM-COORD fields. Return type:; str. Notes; Molden format spec from http://www.cmbi.ru.nl/molden/molden_format.html; Specifies “atomic coordinates x,y,z and atomic displacements dx,dy,dz are all in Bohr (Atomic Unit of length)”; Despite it being quite wrong, imaginary modes are represented by a negative frequency. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Psithon Functions: Invoking a Calculation; Harmonic Vibrational Analysis and Visualization of Normal Modes — frequency() and hessian(); print_molden_vibs. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/api/psi4.driver.qcdb.vib.print_molden_vibs.html:1475,update,updated,1475,psi4manual/1.7.x/api/psi4.driver.qcdb.vib.print_molden_vibs.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/api/psi4.driver.qcdb.vib.print_molden_vibs.html,1,['update'],['updated']
Deployability,"﻿. print_molden_vibs. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Psithon Functions: Invoking a Calculation; Harmonic Vibrational Analysis and Visualization of Normal Modes — frequency() and hessian(); print_molden_vibs. print_molden_vibs¶. psi4.driver.qcdb.vib.print_molden_vibs(vibinfo, atom_symbol, geom, standalone=True)[source]¶; Format vibrational analysis for Molden. Parameters:. vibinfo (Dict[str, Datum]) – Holds results of vibrational analysis.; atom_symbol (Union[ndarray, List[str]]) – (nat,) element symbols for geometry of vibrational analysis.; geom (Union[ndarray, List[List[float]]]) – (nat, 3) geometry of vibrational analysis [a0].; standalone (bool) – Whether returned string prefixed “[Molden Format]” for standalone rather than append. Returns:; vibinfo formatted for Molden, including FREQ, FR-COORD, & FR-NORM-COORD fields. Return type:; str. Notes; Molden format spec from http://www.cmbi.ru.nl/molden/molden_format.html; Specifies “atomic coordinates x,y,z and atomic displacements dx,dy,dz are all in Bohr (Atomic Unit of length)”; Despite it being quite wrong, imaginary modes are represented by a negative frequency. table of contents. print_molden_vibs; print_molden_vibs(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Psithon Functions: Invoking a Calculation; Harmonic Vibrational Analysis and Visualization of Normal Modes — frequency() and hessian(); print_molden_vibs. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/api/psi4.driver.qcdb.vib.print_molden_vibs.html:1538,update,updated,1538,psi4manual/1.8.x/api/psi4.driver.qcdb.vib.print_molden_vibs.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/api/psi4.driver.qcdb.vib.print_molden_vibs.html,1,['update'],['updated']
Deployability,"﻿. print_molden_vibs. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Psithon Functions: Invoking a Calculation; Harmonic Vibrational Analysis and Visualization of Normal Modes — frequency() and hessian(); print_molden_vibs. print_molden_vibs¶. psi4.driver.qcdb.vib.print_molden_vibs(vibinfo, atom_symbol, geom, standalone=True)[source]¶; Format vibrational analysis for Molden. Parameters:. vibinfo (Dict[str, Datum]) – Holds results of vibrational analysis.; atom_symbol (Union[ndarray, List[str]]) – (nat,) element symbols for geometry of vibrational analysis.; geom (Union[ndarray, List[List[float]]]) – (nat, 3) geometry of vibrational analysis [a0].; standalone (bool) – Whether returned string prefixed “[Molden Format]” for standalone rather than append. Returns:; vibinfo formatted for Molden, including FREQ, FR-COORD, & FR-NORM-COORD fields. Return type:; str. Notes; Molden format spec from http://www.cmbi.ru.nl/molden/molden_format.html; Specifies “atomic coordinates x,y,z and atomic displacements dx,dy,dz are all in Bohr (Atomic Unit of length)”; Despite it being quite wrong, imaginary modes are represented by a negative frequency. table of contents. print_molden_vibs; print_molden_vibs(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Psithon Functions: Invoking a Calculation; Harmonic Vibrational Analysis and Visualization of Normal Modes — frequency() and hessian(); print_molden_vibs. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/api/psi4.driver.qcdb.vib.print_molden_vibs.html:1538,update,updated,1538,psi4manual/1.9.x/api/psi4.driver.qcdb.vib.print_molden_vibs.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/api/psi4.driver.qcdb.vib.print_molden_vibs.html,1,['update'],['updated']
Deployability,"﻿. print_options. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; print_options. print_options¶. psi4.core.print_options() → None¶; Prints the currently set options (to the output file) for the current module. table of contents. print_options; print_options(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; print_options. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/api/psi4.core.print_options.html:531,update,updated,531,psi4manual/master/api/psi4.core.print_options.html,https://psicode.org,https://psicode.org/psi4manual/master/api/psi4.core.print_options.html,1,['update'],['updated']
Deployability,"﻿. print_options. Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. print_options¶. psi4.core.print_options() → None¶; Prints the currently set options (to the output file) for the current module. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2018, The Psi4 Project.; Last updated on Wednesday, 25 July 2018 04:21AM.; Created using Sphinx 1.7.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/api/psi4.core.print_options-1.html:431,update,updated,431,psi4manual/1.2.1/api/psi4.core.print_options-1.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/api/psi4.core.print_options-1.html,2,['update'],['updated']
Deployability,"﻿. print_options. Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. print_options¶. psi4.core.print_options() → None¶; Prints the currently set options (to the output file) for the current module. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2019, The Psi4 Project.; Last updated on Wednesday, 15 May 2019 08:49PM.; Created using Sphinx 1.8.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/api/psi4.core.print_options-1.html:431,update,updated,431,psi4manual/1.3.2/api/psi4.core.print_options-1.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/api/psi4.core.print_options-1.html,2,['update'],['updated']
Deployability,"﻿. print_options. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; print_options. print_options¶. psi4.core.print_options() → None¶; Prints the currently set options (to the output file) for the current module. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; print_options. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/api/psi4.core.print_options-1.html:457,update,updated,457,psi4manual/1.4.0/api/psi4.core.print_options-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/api/psi4.core.print_options-1.html,2,['update'],['updated']
Deployability,"﻿. print_options. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; print_options. print_options¶. psi4.core.print_options() → None¶; Prints the currently set options (to the output file) for the current module. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; print_options. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/api/psi4.core.print_options-1.html:457,update,updated,457,psi4manual/1.5.0/api/psi4.core.print_options-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/api/psi4.core.print_options-1.html,2,['update'],['updated']
Deployability,"﻿. print_options. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; print_options. print_options¶. psi4.core.print_options() → None¶; Prints the currently set options (to the output file) for the current module. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; print_options. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/api/psi4.core.print_options.html:457,update,updated,457,psi4manual/1.6.x/api/psi4.core.print_options.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/api/psi4.core.print_options.html,1,['update'],['updated']
Deployability,"﻿. print_options. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; print_options. print_options¶. psi4.core.print_options() → None¶; Prints the currently set options (to the output file) for the current module. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; print_options. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/api/psi4.core.print_options.html:462,update,updated,462,psi4manual/1.7.x/api/psi4.core.print_options.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/api/psi4.core.print_options.html,1,['update'],['updated']
Deployability,"﻿. print_options. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; print_options. print_options¶. psi4.core.print_options() → None¶; Prints the currently set options (to the output file) for the current module. table of contents. print_options; print_options(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; print_options. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/api/psi4.core.print_options.html:517,update,updated,517,psi4manual/1.8.x/api/psi4.core.print_options.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/api/psi4.core.print_options.html,1,['update'],['updated']
Deployability,"﻿. print_options. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; print_options. print_options¶. psi4.core.print_options() → None¶; Prints the currently set options (to the output file) for the current module. table of contents. print_options; print_options(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; print_options. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/api/psi4.core.print_options.html:517,update,updated,517,psi4manual/1.9.x/api/psi4.core.print_options.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/api/psi4.core.print_options.html,1,['update'],['updated']
Deployability,"﻿. print_out. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; print_out. print_out¶. psi4.core.print_out(arg0: str) → None¶; Prints a string (using sprintf-like notation) to the output file. table of contents. print_out; print_out(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; print_out. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/api/psi4.core.print_out-1.html:500,update,updated,500,psi4manual/master/api/psi4.core.print_out-1.html,https://psicode.org,https://psicode.org/psi4manual/master/api/psi4.core.print_out-1.html,2,['update'],['updated']
Deployability,"﻿. print_out. Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. print_out¶. psi4.core.print_out(arg0: str) → None¶; Prints a string (using sprintf-like notation) to the output file. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2018, The Psi4 Project.; Last updated on Wednesday, 25 July 2018 04:21AM.; Created using Sphinx 1.7.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/api/psi4.core.print_out-1.html:416,update,updated,416,psi4manual/1.2.1/api/psi4.core.print_out-1.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/api/psi4.core.print_out-1.html,2,['update'],['updated']
Deployability,"﻿. print_out. Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. print_out¶. psi4.core.print_out(arg0: str) → None¶; Prints a string (using sprintf-like notation) to the output file. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2019, The Psi4 Project.; Last updated on Wednesday, 15 May 2019 08:49PM.; Created using Sphinx 1.8.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/api/psi4.core.print_out-1.html:416,update,updated,416,psi4manual/1.3.2/api/psi4.core.print_out-1.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/api/psi4.core.print_out-1.html,2,['update'],['updated']
Deployability,"﻿. print_out. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; print_out. print_out¶. psi4.core.print_out(arg0: str) → None¶; Prints a string (using sprintf-like notation) to the output file. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; print_out. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/api/psi4.core.print_out-1.html:434,update,updated,434,psi4manual/1.4.0/api/psi4.core.print_out-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/api/psi4.core.print_out-1.html,2,['update'],['updated']
Deployability,"﻿. print_out. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; print_out. print_out¶. psi4.core.print_out(arg0: str) → None¶; Prints a string (using sprintf-like notation) to the output file. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; print_out. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/api/psi4.core.print_out-1.html:434,update,updated,434,psi4manual/1.5.0/api/psi4.core.print_out-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/api/psi4.core.print_out-1.html,2,['update'],['updated']
Deployability,"﻿. print_out. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; print_out. print_out¶. psi4.core.print_out(arg0: str) → None¶; Prints a string (using sprintf-like notation) to the output file. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; print_out. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/api/psi4.core.print_out.html:434,update,updated,434,psi4manual/1.6.x/api/psi4.core.print_out.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/api/psi4.core.print_out.html,1,['update'],['updated']
Deployability,"﻿. print_out. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; print_out. print_out¶. psi4.core.print_out(arg0: str) → None¶; Prints a string (using sprintf-like notation) to the output file. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; print_out. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/api/psi4.core.print_out.html:439,update,updated,439,psi4manual/1.7.x/api/psi4.core.print_out.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/api/psi4.core.print_out.html,1,['update'],['updated']
Deployability,"﻿. print_out. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; print_out. print_out¶. psi4.core.print_out(arg0: str) → None¶; Prints a string (using sprintf-like notation) to the output file. table of contents. print_out; print_out(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; print_out. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/api/psi4.core.print_out.html:486,update,updated,486,psi4manual/1.8.x/api/psi4.core.print_out.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/api/psi4.core.print_out.html,1,['update'],['updated']
Deployability,"﻿. print_out. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; print_out. print_out¶. psi4.core.print_out(arg0: str) → None¶; Prints a string (using sprintf-like notation) to the output file. table of contents. print_out; print_out(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; print_out. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/api/psi4.core.print_out.html:486,update,updated,486,psi4manual/1.9.x/api/psi4.core.print_out.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/api/psi4.core.print_out.html,1,['update'],['updated']
Deployability,"﻿. print_stderr. Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. print_stderr¶. psi4.driver.print_stderr(stuff)[source]¶; Function to print stuff to standard error stream. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2018, The Psi4 Project.; Last updated on Wednesday, 25 July 2018 04:21AM.; Created using Sphinx 1.7.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/api/psi4.driver.print_stderr-1.html:408,update,updated,408,psi4manual/1.2.1/api/psi4.driver.print_stderr-1.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/api/psi4.driver.print_stderr-1.html,2,['update'],['updated']
Deployability,"﻿. print_stderr. Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. print_stderr¶. psi4.driver.print_stderr(stuff)[source]¶; Function to print stuff to standard error stream. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2019, The Psi4 Project.; Last updated on Wednesday, 15 May 2019 08:49PM.; Created using Sphinx 1.8.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/api/psi4.driver.print_stderr-1.html:408,update,updated,408,psi4manual/1.3.2/api/psi4.driver.print_stderr-1.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/api/psi4.driver.print_stderr-1.html,2,['update'],['updated']
Deployability,"﻿. print_stderr. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; print_stderr. print_stderr¶. psi4.driver.print_stderr(stuff)[source]¶; Function to print stuff to standard error stream. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; print_stderr. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/api/psi4.driver.print_stderr-1.html:432,update,updated,432,psi4manual/1.4.0/api/psi4.driver.print_stderr-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/api/psi4.driver.print_stderr-1.html,2,['update'],['updated']
Deployability,"﻿. print_stderr. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; print_stderr. print_stderr¶. psi4.driver.print_stderr(stuff)[source]¶; Function to print stuff to standard error stream. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; print_stderr. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/api/psi4.driver.print_stderr-1.html:432,update,updated,432,psi4manual/1.5.0/api/psi4.driver.print_stderr-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/api/psi4.driver.print_stderr-1.html,2,['update'],['updated']
Deployability,"﻿. print_stderr. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; print_stderr. print_stderr¶. psi4.driver.print_stderr(stuff)[source]¶; Function to print stuff to standard error stream. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; print_stderr. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/api/psi4.driver.print_stderr.html:432,update,updated,432,psi4manual/1.6.x/api/psi4.driver.print_stderr.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/api/psi4.driver.print_stderr.html,1,['update'],['updated']
Deployability,"﻿. print_stdout. Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. print_stdout¶. psi4.driver.print_stdout(stuff)[source]¶; Function to print stuff to standard output stream. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2018, The Psi4 Project.; Last updated on Wednesday, 25 July 2018 04:21AM.; Created using Sphinx 1.7.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/api/psi4.driver.print_stdout-1.html:409,update,updated,409,psi4manual/1.2.1/api/psi4.driver.print_stdout-1.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/api/psi4.driver.print_stdout-1.html,2,['update'],['updated']
Deployability,"﻿. print_stdout. Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. print_stdout¶. psi4.driver.print_stdout(stuff)[source]¶; Function to print stuff to standard output stream. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2019, The Psi4 Project.; Last updated on Wednesday, 15 May 2019 08:49PM.; Created using Sphinx 1.8.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/api/psi4.driver.print_stdout-1.html:409,update,updated,409,psi4manual/1.3.2/api/psi4.driver.print_stdout-1.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/api/psi4.driver.print_stdout-1.html,2,['update'],['updated']
Deployability,"﻿. print_stdout. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; print_stdout. print_stdout¶. psi4.driver.print_stdout(stuff)[source]¶; Function to print stuff to standard output stream. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; print_stdout. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/api/psi4.driver.print_stdout-1.html:433,update,updated,433,psi4manual/1.4.0/api/psi4.driver.print_stdout-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/api/psi4.driver.print_stdout-1.html,2,['update'],['updated']
Deployability,"﻿. print_stdout. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; print_stdout. print_stdout¶. psi4.driver.print_stdout(stuff)[source]¶; Function to print stuff to standard output stream. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; print_stdout. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/api/psi4.driver.print_stdout-1.html:433,update,updated,433,psi4manual/1.5.0/api/psi4.driver.print_stdout-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/api/psi4.driver.print_stdout-1.html,2,['update'],['updated']
Deployability,"﻿. print_stdout. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; print_stdout. print_stdout¶. psi4.driver.print_stdout(stuff)[source]¶; Function to print stuff to standard output stream. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; print_stdout. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/api/psi4.driver.print_stdout.html:433,update,updated,433,psi4manual/1.6.x/api/psi4.driver.print_stdout.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/api/psi4.driver.print_stdout.html,1,['update'],['updated']
Deployability,"﻿. print_variables. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; print_variables. print_variables¶. psi4.core.print_variables() → None¶; Prints to output file all QCVariables that have been set in global memory. table of contents. print_variables; print_variables(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; print_variables. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/api/psi4.core.print_variables.html:542,update,updated,542,psi4manual/master/api/psi4.core.print_variables.html,https://psicode.org,https://psicode.org/psi4manual/master/api/psi4.core.print_variables.html,1,['update'],['updated']
Deployability,"﻿. print_variables. Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. print_variables¶. psi4.core.print_variables() → None¶; Prints all PSI variables that have been set internally. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2018, The Psi4 Project.; Last updated on Wednesday, 25 July 2018 04:21AM.; Created using Sphinx 1.7.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/api/psi4.core.print_variables-1.html:415,update,updated,415,psi4manual/1.2.1/api/psi4.core.print_variables-1.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/api/psi4.core.print_variables-1.html,2,['update'],['updated']
Deployability,"﻿. print_variables. Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. print_variables¶. psi4.core.print_variables() → None¶; Prints all PSI variables that have been set internally. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2019, The Psi4 Project.; Last updated on Wednesday, 15 May 2019 08:49PM.; Created using Sphinx 1.8.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/api/psi4.core.print_variables-1.html:415,update,updated,415,psi4manual/1.3.2/api/psi4.core.print_variables-1.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/api/psi4.core.print_variables-1.html,2,['update'],['updated']
Deployability,"﻿. print_variables. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; print_variables. print_variables¶. psi4.core.print_variables() → None¶; Prints to output file all QCVariables that have been set in global memory. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; print_variables. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/api/psi4.core.print_variables-1.html:464,update,updated,464,psi4manual/1.4.0/api/psi4.core.print_variables-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/api/psi4.core.print_variables-1.html,2,['update'],['updated']
Deployability,"﻿. print_variables. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; print_variables. print_variables¶. psi4.core.print_variables() → None¶; Prints to output file all QCVariables that have been set in global memory. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; print_variables. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/api/psi4.core.print_variables-1.html:464,update,updated,464,psi4manual/1.5.0/api/psi4.core.print_variables-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/api/psi4.core.print_variables-1.html,2,['update'],['updated']
Deployability,"﻿. print_variables. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; print_variables. print_variables¶. psi4.core.print_variables() → None¶; Prints to output file all QCVariables that have been set in global memory. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; print_variables. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/api/psi4.core.print_variables.html:464,update,updated,464,psi4manual/1.6.x/api/psi4.core.print_variables.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/api/psi4.core.print_variables.html,1,['update'],['updated']
Deployability,"﻿. print_variables. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; print_variables. print_variables¶. psi4.core.print_variables() → None¶; Prints to output file all QCVariables that have been set in global memory. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; print_variables. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/api/psi4.core.print_variables.html:469,update,updated,469,psi4manual/1.7.x/api/psi4.core.print_variables.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/api/psi4.core.print_variables.html,1,['update'],['updated']
Deployability,"﻿. print_variables. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; print_variables. print_variables¶. psi4.core.print_variables() → None¶; Prints to output file all QCVariables that have been set in global memory. table of contents. print_variables; print_variables(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; print_variables. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/api/psi4.core.print_variables.html:528,update,updated,528,psi4manual/1.8.x/api/psi4.core.print_variables.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/api/psi4.core.print_variables.html,1,['update'],['updated']
Deployability,"﻿. print_variables. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; print_variables. print_variables¶. psi4.core.print_variables() → None¶; Prints to output file all QCVariables that have been set in global memory. table of contents. print_variables; print_variables(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; print_variables. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/api/psi4.core.print_variables.html:528,update,updated,528,psi4manual/1.9.x/api/psi4.core.print_variables.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/api/psi4.core.print_variables.html,1,['update'],['updated']
Deployability,"﻿. print_vibs. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Psithon Functions: Invoking a Calculation; Harmonic Vibrational Analysis and Visualization of Normal Modes — frequency() and hessian(); print_vibs. print_vibs¶. psi4.driver.qcdb.vib.print_vibs(vibinfo, atom_lbl=None, *, normco='x', shortlong=True, groupby=None, prec=4, ncprec=None)[source]¶; Pretty printer for vibrational analysis. Parameters:. vibinfo (Dict[str, Datum]) – Results of a Hessian solution.; atom_lbl (Optional[List[str]]) – Atomic symbols for printing. If None, integers used.; normco (str) – {‘q’, ‘w’, ‘x’}; Which normal coordinate definition to print (reduced mass, etc. unaffected by this parameter). Must be. q [a0 u^1/2], the mass-weighted normalized eigenvectors of the Hessian,; w [a0], the un-mass-weighted (Cartesian) of q, or; x [a0], the normalized w. shortlong (bool) – Whether normal coordinates should be in (nat, 3) True or (nat * 3, 1) False format.; groupby (Optional[int]) – How many normal coordinates per row. Defaults to 3/6 for shortlong=T/F. Value of -1 uses one row.; prec (int) – Number of decimal places for frequencies, reduced masses, etc.; ncprec (Optional[int]) – Number of decimal places for normal coordinates. Defaults to 2 for shortlong=short and 4 for shortlong=long. Returns:; String suitable for printing. Return type:; str. table of contents. print_vibs; print_vibs(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Psithon Functions: Invoking a Calculation; Harmonic Vibrational Analysis and Visualization of Normal Modes — frequency() and hessian(); print_vibs. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/api/psi4.driver.qcdb.vib.print_vibs.html:1723,update,updated,1723,psi4manual/master/api/psi4.driver.qcdb.vib.print_vibs.html,https://psicode.org,https://psicode.org/psi4manual/master/api/psi4.driver.qcdb.vib.print_vibs.html,1,['update'],['updated']
Deployability,"﻿. print_vibs. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Psithon Functions: Invoking a Calculation; Harmonic Vibrational Analysis and Visualization of Normal Modes — frequency() and hessian(); print_vibs. print_vibs¶. psi4.driver.qcdb.vib.print_vibs(vibinfo, atom_lbl=None, *, normco='x', shortlong=True, groupby=None, prec=4, ncprec=None)[source]¶; Pretty printer for vibrational analysis. Parameters. vibinfo (Dict[str, Datum]) – Results of a Hessian solution.; atom_lbl (Optional[List[str]]) – Atomic symbols for printing. If None, integers used.; normco (str) – {‘q’, ‘w’, ‘x’}; Which normal coordinate definition to print (reduced mass, etc. unaffected by this parameter). Must be. q [a0 u^1/2], the mass-weighted normalized eigenvectors of the Hessian,; w [a0], the un-mass-weighted (Cartesian) of q, or; x [a0], the normalized w. shortlong (bool) – Whether normal coordinates should be in (nat, 3) True or (nat * 3, 1) False format.; groupby (Optional[int]) – How many normal coordinates per row. Defaults to 3/6 for shortlong=T/F. Value of -1 uses one row.; prec (int) – Number of decimal places for frequencies, reduced masses, etc.; ncprec (Optional[int]) – Number of decimal places for normal coordinates. Defaults to 2 for shortlong=short and 4 for shortlong=long. Returns; String suitable for printing. Return type; str. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Psithon Functions: Invoking a Calculation; Harmonic Vibrational Analysis and Visualization of Normal Modes — frequency() and hessian(); print_vibs. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/api/psi4.driver.qcdb.vib.print_vibs-1.html:1652,update,updated,1652,psi4manual/1.4.0/api/psi4.driver.qcdb.vib.print_vibs-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/api/psi4.driver.qcdb.vib.print_vibs-1.html,2,['update'],['updated']
Deployability,"﻿. print_vibs. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Psithon Functions: Invoking a Calculation; Harmonic Vibrational Analysis and Visualization of Normal Modes — frequency() and hessian(); print_vibs. print_vibs¶. psi4.driver.qcdb.vib.print_vibs(vibinfo, atom_lbl=None, *, normco='x', shortlong=True, groupby=None, prec=4, ncprec=None)[source]¶; Pretty printer for vibrational analysis. Parameters. vibinfo (Dict[str, Datum]) – Results of a Hessian solution.; atom_lbl (Optional[List[str]]) – Atomic symbols for printing. If None, integers used.; normco (str) – {‘q’, ‘w’, ‘x’}; Which normal coordinate definition to print (reduced mass, etc. unaffected by this parameter). Must be. q [a0 u^1/2], the mass-weighted normalized eigenvectors of the Hessian,; w [a0], the un-mass-weighted (Cartesian) of q, or; x [a0], the normalized w. shortlong (bool) – Whether normal coordinates should be in (nat, 3) True or (nat * 3, 1) False format.; groupby (Optional[int]) – How many normal coordinates per row. Defaults to 3/6 for shortlong=T/F. Value of -1 uses one row.; prec (int) – Number of decimal places for frequencies, reduced masses, etc.; ncprec (Optional[int]) – Number of decimal places for normal coordinates. Defaults to 2 for shortlong=short and 4 for shortlong=long. Returns; String suitable for printing. Return type; str. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Psithon Functions: Invoking a Calculation; Harmonic Vibrational Analysis and Visualization of Normal Modes — frequency() and hessian(); print_vibs. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/api/psi4.driver.qcdb.vib.print_vibs-1.html:1652,update,updated,1652,psi4manual/1.5.0/api/psi4.driver.qcdb.vib.print_vibs-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/api/psi4.driver.qcdb.vib.print_vibs-1.html,2,['update'],['updated']
Deployability,"﻿. print_vibs. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Psithon Functions: Invoking a Calculation; Harmonic Vibrational Analysis and Visualization of Normal Modes — frequency() and hessian(); print_vibs. print_vibs¶. psi4.driver.qcdb.vib.print_vibs(vibinfo, atom_lbl=None, *, normco='x', shortlong=True, groupby=None, prec=4, ncprec=None)[source]¶; Pretty printer for vibrational analysis. Parameters. vibinfo (Dict[str, Datum]) – Results of a Hessian solution.; atom_lbl (Optional[List[str]]) – Atomic symbols for printing. If None, integers used.; normco (str) – {‘q’, ‘w’, ‘x’}; Which normal coordinate definition to print (reduced mass, etc. unaffected by this parameter). Must be. q [a0 u^1/2], the mass-weighted normalized eigenvectors of the Hessian,; w [a0], the un-mass-weighted (Cartesian) of q, or; x [a0], the normalized w. shortlong (bool) – Whether normal coordinates should be in (nat, 3) True or (nat * 3, 1) False format.; groupby (Optional[int]) – How many normal coordinates per row. Defaults to 3/6 for shortlong=T/F. Value of -1 uses one row.; prec (int) – Number of decimal places for frequencies, reduced masses, etc.; ncprec (Optional[int]) – Number of decimal places for normal coordinates. Defaults to 2 for shortlong=short and 4 for shortlong=long. Returns; String suitable for printing. Return type; str. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Psithon Functions: Invoking a Calculation; Harmonic Vibrational Analysis and Visualization of Normal Modes — frequency() and hessian(); print_vibs. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/api/psi4.driver.qcdb.vib.print_vibs.html:1652,update,updated,1652,psi4manual/1.6.x/api/psi4.driver.qcdb.vib.print_vibs.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/api/psi4.driver.qcdb.vib.print_vibs.html,1,['update'],['updated']
Deployability,"﻿. print_vibs. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Psithon Functions: Invoking a Calculation; Harmonic Vibrational Analysis and Visualization of Normal Modes — frequency() and hessian(); print_vibs. print_vibs¶. psi4.driver.qcdb.vib.print_vibs(vibinfo, atom_lbl=None, *, normco='x', shortlong=True, groupby=None, prec=4, ncprec=None)[source]¶; Pretty printer for vibrational analysis. Parameters:. vibinfo (Dict[str, Datum]) – Results of a Hessian solution.; atom_lbl (Optional[List[str]]) – Atomic symbols for printing. If None, integers used.; normco (str) – {‘q’, ‘w’, ‘x’}; Which normal coordinate definition to print (reduced mass, etc. unaffected by this parameter). Must be. q [a0 u^1/2], the mass-weighted normalized eigenvectors of the Hessian,; w [a0], the un-mass-weighted (Cartesian) of q, or; x [a0], the normalized w. shortlong (bool) – Whether normal coordinates should be in (nat, 3) True or (nat * 3, 1) False format.; groupby (Optional[int]) – How many normal coordinates per row. Defaults to 3/6 for shortlong=T/F. Value of -1 uses one row.; prec (int) – Number of decimal places for frequencies, reduced masses, etc.; ncprec (Optional[int]) – Number of decimal places for normal coordinates. Defaults to 2 for shortlong=short and 4 for shortlong=long. Returns:; String suitable for printing. Return type:; str. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Psithon Functions: Invoking a Calculation; Harmonic Vibrational Analysis and Visualization of Normal Modes — frequency() and hessian(); print_vibs. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/api/psi4.driver.qcdb.vib.print_vibs.html:1660,update,updated,1660,psi4manual/1.7.x/api/psi4.driver.qcdb.vib.print_vibs.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/api/psi4.driver.qcdb.vib.print_vibs.html,1,['update'],['updated']
Deployability,"﻿. print_vibs. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Psithon Functions: Invoking a Calculation; Harmonic Vibrational Analysis and Visualization of Normal Modes — frequency() and hessian(); print_vibs. print_vibs¶. psi4.driver.qcdb.vib.print_vibs(vibinfo, atom_lbl=None, *, normco='x', shortlong=True, groupby=None, prec=4, ncprec=None)[source]¶; Pretty printer for vibrational analysis. Parameters:. vibinfo (Dict[str, Datum]) – Results of a Hessian solution.; atom_lbl (List[str]) – Atomic symbols for printing. If None, integers used.; normco (str) – {‘q’, ‘w’, ‘x’}; Which normal coordinate definition to print (reduced mass, etc. unaffected by this parameter). Must be. q [a0 u^1/2], the mass-weighted normalized eigenvectors of the Hessian,; w [a0], the un-mass-weighted (Cartesian) of q, or; x [a0], the normalized w. shortlong (bool) – Whether normal coordinates should be in (nat, 3) True or (nat * 3, 1) False format.; groupby (int) – How many normal coordinates per row. Defaults to 3/6 for shortlong=T/F. Value of -1 uses one row.; prec (int) – Number of decimal places for frequencies, reduced masses, etc.; ncprec (int) – Number of decimal places for normal coordinates. Defaults to 2 for shortlong=short and 4 for shortlong=long. Returns:; String suitable for printing. Return type:; str. table of contents. print_vibs; print_vibs(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Psithon Functions: Invoking a Calculation; Harmonic Vibrational Analysis and Visualization of Normal Modes — frequency() and hessian(); print_vibs. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/api/psi4.driver.qcdb.vib.print_vibs.html:1679,update,updated,1679,psi4manual/1.8.x/api/psi4.driver.qcdb.vib.print_vibs.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/api/psi4.driver.qcdb.vib.print_vibs.html,1,['update'],['updated']
Deployability,"﻿. print_vibs. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Psithon Functions: Invoking a Calculation; Harmonic Vibrational Analysis and Visualization of Normal Modes — frequency() and hessian(); print_vibs. print_vibs¶. psi4.driver.qcdb.vib.print_vibs(vibinfo, atom_lbl=None, *, normco='x', shortlong=True, groupby=None, prec=4, ncprec=None)[source]¶; Pretty printer for vibrational analysis. Parameters:. vibinfo (Dict[str, Datum]) – Results of a Hessian solution.; atom_lbl (Optional[List[str]]) – Atomic symbols for printing. If None, integers used.; normco (str) – {‘q’, ‘w’, ‘x’}; Which normal coordinate definition to print (reduced mass, etc. unaffected by this parameter). Must be. q [a0 u^1/2], the mass-weighted normalized eigenvectors of the Hessian,; w [a0], the un-mass-weighted (Cartesian) of q, or; x [a0], the normalized w. shortlong (bool) – Whether normal coordinates should be in (nat, 3) True or (nat * 3, 1) False format.; groupby (Optional[int]) – How many normal coordinates per row. Defaults to 3/6 for shortlong=T/F. Value of -1 uses one row.; prec (int) – Number of decimal places for frequencies, reduced masses, etc.; ncprec (Optional[int]) – Number of decimal places for normal coordinates. Defaults to 2 for shortlong=short and 4 for shortlong=long. Returns:; String suitable for printing. Return type:; str. table of contents. print_vibs; print_vibs(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Psithon Functions: Invoking a Calculation; Harmonic Vibrational Analysis and Visualization of Normal Modes — frequency() and hessian(); print_vibs. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/api/psi4.driver.qcdb.vib.print_vibs.html:1709,update,updated,1709,psi4manual/1.9.x/api/psi4.driver.qcdb.vib.print_vibs.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/api/psi4.driver.qcdb.vib.print_vibs.html,1,['update'],['updated']
Deployability,"﻿. process_input. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; process_input. process_input¶. psi4.driver.process_input(raw_input, print_level=1)[source]¶; Function to preprocess raw input, the text of the input file, then parse it, validate it for format, and convert it into legitimate Python.; Does a series of regular expression filters, where the matching portion of the; input is replaced by the output of the corresponding function (in this; module) call. Returns a string concatenating module import lines, a copy; of the user’s .psi4rc files, a setting of the scratch directory, a dummy; molecule, and the processed raw_input. Parameters:. raw_input (str) – Input in a mixture of Python and PSIthon syntax.; print_level (int) – raw_input is printed to the output file unless print_level =0. Return type:; str. table of contents. process_input; process_input(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; process_input. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/api/psi4.driver.process_input.html:1143,update,updated,1143,psi4manual/master/api/psi4.driver.process_input.html,https://psicode.org,https://psicode.org/psi4manual/master/api/psi4.driver.process_input.html,1,['update'],['updated']
Deployability,"﻿. process_input. Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. process_input¶. psi4.driver.process_input(raw_input, print_level=1)[source]¶; Function to preprocess raw input, the text of the input file, then; parse it, validate it for format, and convert it into legitimate Python.; raw_input is printed to the output file unless print_level =0. Does; a series of regular expression filters, where the matching portion of the; input is replaced by the output of the corresponding function (in this; module) call. Returns a string concatenating module import lines, a copy; of the user’s .psi4rc files, a setting of the scratch directory, a dummy; molecule, and the processed raw_input. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2018, The Psi4 Project.; Last updated on Wednesday, 25 July 2018 04:21AM.; Created using Sphinx 1.7.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/api/psi4.driver.process_input-1.html:925,update,updated,925,psi4manual/1.2.1/api/psi4.driver.process_input-1.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/api/psi4.driver.process_input-1.html,2,['update'],['updated']
Deployability,"﻿. process_input. Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. process_input¶. psi4.driver.process_input(raw_input, print_level=1)[source]¶; Function to preprocess raw input, the text of the input file, then; parse it, validate it for format, and convert it into legitimate Python.; raw_input is printed to the output file unless print_level =0. Does; a series of regular expression filters, where the matching portion of the; input is replaced by the output of the corresponding function (in this; module) call. Returns a string concatenating module import lines, a copy; of the user’s .psi4rc files, a setting of the scratch directory, a dummy; molecule, and the processed raw_input. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2019, The Psi4 Project.; Last updated on Wednesday, 15 May 2019 08:49PM.; Created using Sphinx 1.8.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/api/psi4.driver.process_input-1.html:925,update,updated,925,psi4manual/1.3.2/api/psi4.driver.process_input-1.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/api/psi4.driver.process_input-1.html,2,['update'],['updated']
Deployability,"﻿. process_input. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; process_input. process_input¶. psi4.driver.process_input(raw_input, print_level=1)[source]¶; Function to preprocess raw input, the text of the input file, then; parse it, validate it for format, and convert it into legitimate Python.; raw_input is printed to the output file unless print_level =0. Does; a series of regular expression filters, where the matching portion of the; input is replaced by the output of the corresponding function (in this; module) call. Returns a string concatenating module import lines, a copy; of the user’s .psi4rc files, a setting of the scratch directory, a dummy; molecule, and the processed raw_input. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; process_input. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/api/psi4.driver.process_input-1.html:951,update,updated,951,psi4manual/1.4.0/api/psi4.driver.process_input-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/api/psi4.driver.process_input-1.html,2,['update'],['updated']
Deployability,"﻿. process_input. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; process_input. process_input¶. psi4.driver.process_input(raw_input, print_level=1)[source]¶; Function to preprocess raw input, the text of the input file, then; parse it, validate it for format, and convert it into legitimate Python.; raw_input is printed to the output file unless print_level =0. Does; a series of regular expression filters, where the matching portion of the; input is replaced by the output of the corresponding function (in this; module) call. Returns a string concatenating module import lines, a copy; of the user’s .psi4rc files, a setting of the scratch directory, a dummy; molecule, and the processed raw_input. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; process_input. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/api/psi4.driver.process_input-1.html:951,update,updated,951,psi4manual/1.5.0/api/psi4.driver.process_input-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/api/psi4.driver.process_input-1.html,2,['update'],['updated']
Deployability,"﻿. process_input. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; process_input. process_input¶. psi4.driver.process_input(raw_input, print_level=1)[source]¶; Function to preprocess raw input, the text of the input file, then; parse it, validate it for format, and convert it into legitimate Python.; raw_input is printed to the output file unless print_level =0. Does; a series of regular expression filters, where the matching portion of the; input is replaced by the output of the corresponding function (in this; module) call. Returns a string concatenating module import lines, a copy; of the user’s .psi4rc files, a setting of the scratch directory, a dummy; molecule, and the processed raw_input. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; process_input. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/api/psi4.driver.process_input.html:951,update,updated,951,psi4manual/1.6.x/api/psi4.driver.process_input.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/api/psi4.driver.process_input.html,1,['update'],['updated']
Deployability,"﻿. process_input. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; process_input. process_input¶. psi4.driver.process_input(raw_input, print_level=1)[source]¶; Function to preprocess raw input, the text of the input file, then; parse it, validate it for format, and convert it into legitimate Python.; Does a series of regular expression filters, where the matching portion of the; input is replaced by the output of the corresponding function (in this; module) call. Returns a string concatenating module import lines, a copy; of the user’s .psi4rc files, a setting of the scratch directory, a dummy; molecule, and the processed raw_input. Parameters:. raw_input (str) – Input in a mixture of Python and PSIthon syntax.; print_level (int) – raw_input is printed to the output file unless print_level =0. Return type:; str. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; process_input. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/api/psi4.driver.process_input.html:1075,update,updated,1075,psi4manual/1.7.x/api/psi4.driver.process_input.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/api/psi4.driver.process_input.html,1,['update'],['updated']
Deployability,"﻿. process_input. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; process_input. process_input¶. psi4.driver.process_input(raw_input, print_level=1)[source]¶; Function to preprocess raw input, the text of the input file, then; parse it, validate it for format, and convert it into legitimate Python.; Does a series of regular expression filters, where the matching portion of the; input is replaced by the output of the corresponding function (in this; module) call. Returns a string concatenating module import lines, a copy; of the user’s .psi4rc files, a setting of the scratch directory, a dummy; molecule, and the processed raw_input. Parameters:. raw_input (str) – Input in a mixture of Python and PSIthon syntax.; print_level (int) – raw_input is printed to the output file unless print_level =0. Return type:; str. table of contents. process_input; process_input(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; process_input. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/api/psi4.driver.process_input.html:1130,update,updated,1130,psi4manual/1.8.x/api/psi4.driver.process_input.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/api/psi4.driver.process_input.html,1,['update'],['updated']
Deployability,"﻿. process_input. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; process_input. process_input¶. psi4.driver.process_input(raw_input, print_level=1)[source]¶; Function to preprocess raw input, the text of the input file, then parse it, validate it for format, and convert it into legitimate Python.; :rtype: str; Does a series of regular expression filters, where the matching portion of the; input is replaced by the output of the corresponding function (in this; module) call. Returns a string concatenating module import lines, a copy; of the user’s .psi4rc files, a setting of the scratch directory, a dummy; molecule, and the processed raw_input. Parameters:. raw_input (str) – Input in a mixture of Python and PSIthon syntax.; print_level (int) – raw_input is printed to the output file unless print_level =0. Return type:; str. table of contents. process_input; process_input(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; process_input. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/api/psi4.driver.process_input.html:1142,update,updated,1142,psi4manual/1.9.x/api/psi4.driver.process_input.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/api/psi4.driver.process_input.html,1,['update'],['updated']
Deployability,"﻿. process_pubchem_command. Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. process_pubchem_command¶. psi4.driver.process_pubchem_command(matchobj)[source]¶; Function to process match of pubchem in molecule block. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2018, The Psi4 Project.; Last updated on Wednesday, 25 July 2018 04:21AM.; Created using Sphinx 1.7.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/api/psi4.driver.process_pubchem_command-1.html:450,update,updated,450,psi4manual/1.2.1/api/psi4.driver.process_pubchem_command-1.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/api/psi4.driver.process_pubchem_command-1.html,2,['update'],['updated']
Deployability,"﻿. provenance_stamp. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; provenance_stamp. provenance_stamp¶. psi4.driver.p4util.provenance_stamp(routine, module=None)[source]¶; Prepare QCSchema Provenance with PSI4 credentials. Parameters:. routine (str) – Name of driver function generating the QCSchema.; module (Optional[str]) – Primary contributing PSI4 library, like ccenergy or dfmp2. Returns:; provenance – Dictionary satisfying QCSchema, with PSI4 credentials for creator; and version.; https://github.com/MolSSI/QCSchema/blob/master/qcschema/dev/definitions.py#L23-L41. Return type:; Dict[str, str]. table of contents. provenance_stamp; provenance_stamp(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; provenance_stamp. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/api/psi4.driver.p4util.provenance_stamp.html:936,update,updated,936,psi4manual/master/api/psi4.driver.p4util.provenance_stamp.html,https://psicode.org,https://psicode.org/psi4manual/master/api/psi4.driver.p4util.provenance_stamp.html,1,['update'],['updated']
Deployability,"﻿. provenance_stamp. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; provenance_stamp. provenance_stamp¶. psi4.driver.p4util.provenance_stamp(routine, module=None)[source]¶; Prepare QCSchema Provenance with PSI4 credentials. Parameters:. routine (str) – Name of driver function generating the QCSchema.; module (Optional[str]) – Primary contributing PSI4 library, like ccenergy or dfmp2. Returns:; provenance – Dictionary satisfying QCSchema, with PSI4 credentials for creator; and version.; https://github.com/MolSSI/QCSchema/blob/master/qcschema/dev/definitions.py#L23-L41. Return type:; Dict[str, str]. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; provenance_stamp. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/api/psi4.driver.p4util.provenance_stamp.html:861,update,updated,861,psi4manual/1.7.x/api/psi4.driver.p4util.provenance_stamp.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/api/psi4.driver.p4util.provenance_stamp.html,1,['update'],['updated']
Deployability,"﻿. provenance_stamp. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; provenance_stamp. provenance_stamp¶. psi4.driver.p4util.provenance_stamp(routine, module=None)[source]¶; Prepare QCSchema Provenance with PSI4 credentials. Parameters:. routine (str) – Name of driver function generating the QCSchema.; module (str) – Primary contributing PSI4 library, like ccenergy or dfmp2. Returns:; provenance – Dictionary satisfying QCSchema, with PSI4 credentials for creator; and version.; https://github.com/MolSSI/QCSchema/blob/master/qcschema/dev/definitions.py#L23-L41. Return type:; Dict[str, str]. table of contents. provenance_stamp; provenance_stamp(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; provenance_stamp. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/api/psi4.driver.p4util.provenance_stamp.html:912,update,updated,912,psi4manual/1.8.x/api/psi4.driver.p4util.provenance_stamp.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/api/psi4.driver.p4util.provenance_stamp.html,1,['update'],['updated']
Deployability,"﻿. provenance_stamp. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; provenance_stamp. provenance_stamp¶. psi4.driver.p4util.provenance_stamp(routine, module=None)[source]¶; Prepare QCSchema Provenance with PSI4 credentials. Parameters:. routine (str) – Name of driver function generating the QCSchema.; module (Optional[str]) – Primary contributing PSI4 library, like ccenergy or dfmp2. Returns:; provenance – Dictionary satisfying QCSchema, with PSI4 credentials for creator; and version.; https://github.com/MolSSI/QCSchema/blob/master/qcschema/dev/definitions.py#L23-L41. Return type:; Dict[str, str]. table of contents. provenance_stamp; provenance_stamp(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; provenance_stamp. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/api/psi4.driver.p4util.provenance_stamp.html:922,update,updated,922,psi4manual/1.9.x/api/psi4.driver.p4util.provenance_stamp.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/api/psi4.driver.p4util.provenance_stamp.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.AOShellCombinationsIterator. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.AOShellCombinationsIterator¶. class psi4.core.AOShellCombinationsIterator¶; Bases: object; Attributes Summary. p; docstring. q; docstring. r; docstring. s; docstring. Methods Summary. first(...); docstring. is_done(...); docstring. next(...); docstring. Attributes Documentation. p¶; docstring. q¶; docstring. r¶; docstring. s¶; docstring. Methods Documentation. first(self: psi4.core.AOShellCombinationsIterator) → None¶; docstring. is_done(self: psi4.core.AOShellCombinationsIterator) → bool¶; docstring. next(self: psi4.core.AOShellCombinationsIterator) → None¶; docstring. first(self: psi4.core.AOShellCombinationsIterator) → None; docstring. is_done(self: psi4.core.AOShellCombinationsIterator) → bool; docstring. next(self: psi4.core.AOShellCombinationsIterator) → None; docstring. p; docstring. q; docstring. r; docstring. s; docstring. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.aoshellcombinationsiterator.html:1054,update,updated,1054,psi4manual/1.1.0/api/psi4.core.aoshellcombinationsiterator.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.aoshellcombinationsiterator.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.AngularMomentumInt. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.AngularMomentumInt¶. class psi4.core.AngularMomentumInt¶; Bases: psi4.core.OneBodyAOInt; docstring. basis¶; The basis set on center one. basis1¶; The basis set on center one. basis2¶; The basis set on center two. compute_shell(self: psi4.core.OneBodyAOInt, arg0: int, arg1: int) → None¶; docstring. origin¶; The origin about which the one body ints are being computed. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.angularmomentumint.html:570,update,updated,570,psi4manual/1.1.0/api/psi4.core.angularmomentumint.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.angularmomentumint.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.BasisSetParser. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.BasisSetParser¶. class psi4.core.BasisSetParser¶; Bases: object; docstring. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.basissetparser.html:273,update,updated,273,psi4manual/1.1.0/api/psi4.core.basissetparser.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.basissetparser.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.BoysLocalizer. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.BoysLocalizer¶. class psi4.core.BoysLocalizer¶; Bases: psi4.core.Localizer; docstring. L¶; Localized orbital coefficients. U¶; Orbital rotation matrix. build(arg0: str, arg1: psi4.core.BasisSet, arg2: psi4.core.Matrix) → psi4.core.Localizer¶; docstring. converged¶; Did the localization procedure converge?. localize(self: psi4.core.Localizer) → None¶; Perform the localization procedure. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.boyslocalizer.html:585,update,updated,585,psi4manual/1.1.0/api/psi4.core.boyslocalizer.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.boyslocalizer.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.CdSalcList. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.CdSalcList¶. class psi4.core.CdSalcList¶; Bases: object; docstring; Methods Summary. matrix(...); docstring. print_out((self: psi4.core.CdSalcList) -> None); docstring. Methods Documentation. matrix(self: psi4.core.CdSalcList) → psi4.core.Matrix¶; docstring. print_out(self: psi4.core.CdSalcList) → None¶; docstring. matrix(self: psi4.core.CdSalcList) → psi4.core.Matrix; docstring. print_out(self: psi4.core.CdSalcList) → None; docstring. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.cdsalclist.html:633,update,updated,633,psi4manual/1.1.0/api/psi4.core.cdsalclist.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.cdsalclist.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.CorrelationFactor. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.CorrelationFactor¶. class psi4.core.CorrelationFactor¶; Bases: object; docstring; Methods Summary. set_params(...); docstring. Methods Documentation. set_params(self: psi4.core.CorrelationFactor, arg0: psi4.core.Vector, arg1: psi4.core.Vector) → None¶; docstring. set_params(self: psi4.core.CorrelationFactor, arg0: psi4.core.Vector, arg1: psi4.core.Vector) → None; docstring. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.correlationfactor.html:577,update,updated,577,psi4manual/1.1.0/api/psi4.core.correlationfactor.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.correlationfactor.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.CorrelationTable. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.CorrelationTable¶. class psi4.core.CorrelationTable¶; Bases: object; docstring; Methods Summary. degen((self: psi4.core.CorrelationTable, ...); docstring. group(*args, **kwargs); Overloaded function. n((self: psi4.core.CorrelationTable) -> int); docstring. ngamma((self: psi4.core.CorrelationTable, ...); docstring. subdegen((self: psi4.core.CorrelationTable, ...); docstring. subgroup(...); docstring. subn((self: psi4.core.CorrelationTable) -> int); docstring. Methods Documentation. degen(self: psi4.core.CorrelationTable, arg0: int) → int¶; docstring. group(*args, **kwargs)¶; Overloaded function. group(self: psi4.core.CorrelationTable) -> psi4.core.PointGroup. docstring. group(self: psi4.core.CorrelationTable, arg0: int, arg1: int) -> int. docstring. n(self: psi4.core.CorrelationTable) → int¶; docstring. ngamma(self: psi4.core.CorrelationTable, arg0: int) → int¶; docstring. subdegen(self: psi4.core.CorrelationTable, arg0: int) → int¶; docstring. subgroup(self: psi4.core.CorrelationTable) → psi4.core.PointGroup¶; docstring. subn(self: psi4.core.CorrelationTable) → int¶; docstring. degen(self: psi4.core.CorrelationTable, arg0: int) → int; docstring. group(*args, **kwargs); Overloaded function. group(self: psi4.core.CorrelationTable) -> psi4.core.PointGroup. docstring. group(self: psi4.core.CorrelationTable, arg0: int, arg1: int) -> int. docstring. n(self: psi4.core.CorrelationTable) → int; docstring. ngamma(self: psi4.core.CorrelationTable, arg0: int) → int; docstring. subdegen(self: psi4.core.CorrelationTable, arg0: int) → int; docstring. subgroup(self: psi4.core.CorrelationTable) → psi4.core.PointGroup; docstring. subn(self: psi4.core.CorrelationTable) → int; docstring. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.correlationtable.html:1896,update,updated,1896,psi4manual/1.1.0/api/psi4.core.correlationtable.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.correlationtable.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.CubeProperties. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.CubeProperties¶. class psi4.core.CubeProperties¶; Bases: object; docstring; Methods Summary. compute_properties(...); docstring. Methods Documentation. compute_properties(self: psi4.core.CubeProperties) → None¶; docstring. compute_properties(self: psi4.core.CubeProperties) → None; docstring. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.cubeproperties.html:490,update,updated,490,psi4manual/1.1.0/api/psi4.core.cubeproperties.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.cubeproperties.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.DASUM. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.DASUM¶. psi4.core.DASUM(arg0: int, arg1: int, arg2: psi::Vector, arg3: int) → float¶; docstring. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.dasum.html:285,update,updated,285,psi4manual/1.1.0/api/psi4.core.dasum.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.dasum.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.DAXPY. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.DAXPY¶. psi4.core.DAXPY(arg0: int, arg1: int, arg2: float, arg3: psi::Vector, arg4: int, arg5: psi::Vector, arg6: int) → None¶; docstring. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.daxpy.html:327,update,updated,327,psi4manual/1.1.0/api/psi4.core.daxpy.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.daxpy.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.DCOPY. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.DCOPY¶. psi4.core.DCOPY(arg0: int, arg1: int, arg2: psi::Vector, arg3: int, arg4: psi::Vector, arg5: int) → None¶; docstring. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.dcopy.html:314,update,updated,314,psi4manual/1.1.0/api/psi4.core.dcopy.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.dcopy.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.DDOT. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.DDOT¶. psi4.core.DDOT(arg0: int, arg1: int, arg2: psi::Vector, arg3: int, arg4: psi::Vector, arg5: int) → float¶; docstring. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.ddot.html:312,update,updated,312,psi4manual/1.1.0/api/psi4.core.ddot.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.ddot.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.DFChargeFitter. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.DFChargeFitter¶. class psi4.core.DFChargeFitter¶; Bases: object; docstring; Methods Summary. d(...); docstring. fit(...); docstring. setAuxiliary(...); docstring. setD((self: psi4.core.DFChargeFitter, ...); docstring. setPrimary((self: psi4.core.DFChargeFitter, ...); docstring. Methods Documentation. d(self: psi4.core.DFChargeFitter) → psi4.core.Vector¶; docstring. fit(self: psi4.core.DFChargeFitter) → psi4.core.Vector¶; docstring. setAuxiliary(self: psi4.core.DFChargeFitter, arg0: psi4.core.BasisSet) → None¶; docstring. setD(self: psi4.core.DFChargeFitter, arg0: psi4.core.Matrix) → None¶; docstring. setPrimary(self: psi4.core.DFChargeFitter, arg0: psi4.core.BasisSet) → None¶; docstring. d(self: psi4.core.DFChargeFitter) → psi4.core.Vector; docstring. fit(self: psi4.core.DFChargeFitter) → psi4.core.Vector; docstring. setAuxiliary(self: psi4.core.DFChargeFitter, arg0: psi4.core.BasisSet) → None; docstring. setD(self: psi4.core.DFChargeFitter, arg0: psi4.core.Matrix) → None; docstring. setPrimary(self: psi4.core.DFChargeFitter, arg0: psi4.core.BasisSet) → None; docstring. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.dfchargefitter.html:1284,update,updated,1284,psi4manual/1.1.0/api/psi4.core.dfchargefitter.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.dfchargefitter.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.DFSOMCSCF. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.DFSOMCSCF¶. class psi4.core.DFSOMCSCF¶; Bases: psi4.core.SOMCSCF; docstring. Ck(self: psi4.core.SOMCSCF, arg0: psi4.core.Matrix, arg1: psi4.core.Matrix) → psi4.core.Matrix¶. H_approx_diag(self: psi4.core.SOMCSCF) → psi4.core.Matrix¶. approx_solve(self: psi4.core.SOMCSCF) → psi4.core.Matrix¶. compute_AFock(self: psi4.core.SOMCSCF, arg0: psi4.core.Matrix) → psi4.core.Matrix¶. compute_Hk(self: psi4.core.SOMCSCF, arg0: psi4.core.Matrix) → psi4.core.Matrix¶. compute_Q(self: psi4.core.SOMCSCF, arg0: psi4.core.Matrix) → psi4.core.Matrix¶. compute_Qk(self: psi4.core.SOMCSCF, arg0: psi4.core.Matrix, arg1: psi4.core.Matrix, arg2: psi4.core.Matrix) → psi4.core.Matrix¶. current_AFock(self: psi4.core.SOMCSCF) → psi4.core.Matrix¶. current_IFock(self: psi4.core.SOMCSCF) → psi4.core.Matrix¶. current_ci_energy(self: psi4.core.SOMCSCF) → float¶. current_docc_energy(self: psi4.core.SOMCSCF) → float¶. current_total_energy(self: psi4.core.SOMCSCF) → float¶. form_rotation_matrix(self: psi4.core.SOMCSCF, x: psi4.core.Matrix, order: int=2) → psi4.core.Matrix¶. gradient(self: psi4.core.SOMCSCF) → psi4.core.Matrix¶. gradient_rms(self: psi4.core.SOMCSCF) → float¶. rhf_energy(self: psi4.core.SOMCSCF, arg0: psi4.core.Matrix) → float¶. solve(self: psi4.core.SOMCSCF, arg0: int, arg1: float, arg2: bool) → psi4.core.Matrix¶. update(self: psi4.core.SOMCSCF, arg0: psi4.core.Matrix, arg1: psi4.core.Matrix, arg2: psi4.core.Matrix, arg3: psi4.core.Matrix, arg4: psi4.core.Matrix) → None¶. zero_redundant(self: psi4.core.SOMCSCF, arg0: psi4.core.Matrix) → None¶. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.dfsomcscf.html:1406,update,update,1406,psi4manual/1.1.0/api/psi4.core.dfsomcscf.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.dfsomcscf.html,2,['update'],"['update', 'updated']"
Deployability,"﻿. psi4.core.DFTensor. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.DFTensor¶. class psi4.core.DFTensor¶; Bases: object; docstring; Methods Summary. Idfmo(...); doctsring. Imo(...); doctsring. Qmo(...); doctsring. Qoo(...); doctsring. Qov(...); doctsring. Qso(...); doctsring. Qvv(...); doctsring. Methods Documentation. Idfmo(self: psi4.core.DFTensor) → psi4.core.Matrix¶; doctsring. Imo(self: psi4.core.DFTensor) → psi4.core.Matrix¶; doctsring. Qmo(self: psi4.core.DFTensor) → psi4.core.Matrix¶; doctsring. Qoo(self: psi4.core.DFTensor) → psi4.core.Matrix¶; doctsring. Qov(self: psi4.core.DFTensor) → psi4.core.Matrix¶; doctsring. Qso(self: psi4.core.DFTensor) → psi4.core.Matrix¶; doctsring. Qvv(self: psi4.core.DFTensor) → psi4.core.Matrix¶; doctsring. Idfmo(self: psi4.core.DFTensor) → psi4.core.Matrix; doctsring. Imo(self: psi4.core.DFTensor) → psi4.core.Matrix; doctsring. Qmo(self: psi4.core.DFTensor) → psi4.core.Matrix; doctsring. Qoo(self: psi4.core.DFTensor) → psi4.core.Matrix; doctsring. Qov(self: psi4.core.DFTensor) → psi4.core.Matrix; doctsring. Qso(self: psi4.core.DFTensor) → psi4.core.Matrix; doctsring. Qvv(self: psi4.core.DFTensor) → psi4.core.Matrix; doctsring. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.dftensor.html:1309,update,updated,1309,psi4manual/1.1.0/api/psi4.core.dftensor.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.dftensor.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.DGBMV. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.DGBMV¶. psi4.core.DGBMV(arg0: int, arg1: str, arg2: int, arg3: int, arg4: int, arg5: int, arg6: float, arg7: psi::Matrix, arg8: int, arg9: psi::Vector, arg10: int, arg11: float, arg12: psi::Vector, arg13: int) → None¶; docstring. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.dgbmv.html:418,update,updated,418,psi4manual/1.1.0/api/psi4.core.dgbmv.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.dgbmv.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.DGEEV. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.DGEEV¶. psi4.core.DGEEV(arg0: int, arg1: str, arg2: str, arg3: int, arg4: psi::Matrix, arg5: int, arg6: psi::Vector, arg7: psi::Vector, arg8: psi::Matrix, arg9: int, arg10: psi::Matrix, arg11: int, arg12: psi::Vector, arg13: int) → int¶; docstring. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.dgeev.html:437,update,updated,437,psi4manual/1.1.0/api/psi4.core.dgeev.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.dgeev.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.DGEMM. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.DGEMM¶. psi4.core.DGEMM(arg0: int, arg1: str, arg2: str, arg3: int, arg4: int, arg5: int, arg6: float, arg7: psi::Matrix, arg8: int, arg9: psi::Matrix, arg10: int, arg11: float, arg12: psi::Matrix, arg13: int) → None¶; docstring. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.dgemm.html:418,update,updated,418,psi4manual/1.1.0/api/psi4.core.dgemm.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.dgemm.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.DGEMV. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.DGEMV¶. psi4.core.DGEMV(arg0: int, arg1: str, arg2: int, arg3: int, arg4: float, arg5: psi::Matrix, arg6: int, arg7: psi::Vector, arg8: int, arg9: float, arg10: psi::Vector, arg11: int) → None¶; docstring. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.dgemv.html:394,update,updated,394,psi4manual/1.1.0/api/psi4.core.dgemv.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.dgemv.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.DGER. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.DGER¶. psi4.core.DGER(arg0: int, arg1: int, arg2: int, arg3: float, arg4: psi::Vector, arg5: int, arg6: psi::Vector, arg7: int, arg8: psi::Matrix, arg9: int) → None¶; docstring. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.dger.html:365,update,updated,365,psi4manual/1.1.0/api/psi4.core.dger.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.dger.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.DGETRF. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.DGETRF¶. psi4.core.DGETRF(arg0: int, arg1: int, arg2: int, arg3: psi::Matrix, arg4: int, arg5: psi::IntVector) → int¶; docstring. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.dgetrf.html:319,update,updated,319,psi4manual/1.1.0/api/psi4.core.dgetrf.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.dgetrf.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.DGETRI. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.DGETRI¶. psi4.core.DGETRI(arg0: int, arg1: int, arg2: psi::Matrix, arg3: int, arg4: psi::IntVector, arg5: psi::Vector, arg6: int) → int¶; docstring. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.dgetri.html:338,update,updated,338,psi4manual/1.1.0/api/psi4.core.dgetri.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.dgetri.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.DGETRS. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.DGETRS¶. psi4.core.DGETRS(arg0: int, arg1: str, arg2: int, arg3: int, arg4: psi::Matrix, arg5: int, arg6: psi::IntVector, arg7: psi::Matrix, arg8: int) → int¶; docstring. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.dgetrs.html:360,update,updated,360,psi4manual/1.1.0/api/psi4.core.dgetrs.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.dgetrs.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.DNRM2. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.DNRM2¶. psi4.core.DNRM2(arg0: int, arg1: int, arg2: psi::Vector, arg3: int) → float¶; docstring. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.dnrm2.html:285,update,updated,285,psi4manual/1.1.0/api/psi4.core.dnrm2.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.dnrm2.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.DPOTRF. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.DPOTRF¶. psi4.core.DPOTRF(arg0: int, arg1: str, arg2: int, arg3: psi::Matrix, arg4: int) → int¶; docstring. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.dpotrf.html:297,update,updated,297,psi4manual/1.1.0/api/psi4.core.dpotrf.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.dpotrf.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.DPOTRI. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.DPOTRI¶. psi4.core.DPOTRI(arg0: int, arg1: str, arg2: int, arg3: psi::Matrix, arg4: int) → int¶; docstring. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.dpotri.html:297,update,updated,297,psi4manual/1.1.0/api/psi4.core.dpotri.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.dpotri.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.DPOTRS. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.DPOTRS¶. psi4.core.DPOTRS(arg0: int, arg1: str, arg2: int, arg3: int, arg4: psi::Matrix, arg5: int, arg6: psi::Matrix, arg7: int) → int¶; docstring. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.dpotrs.html:338,update,updated,338,psi4manual/1.1.0/api/psi4.core.dpotrs.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.dpotrs.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.DROT. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.DROT¶. psi4.core.DROT(arg0: int, arg1: int, arg2: psi::Vector, arg3: int, arg4: psi::Vector, arg5: int, arg6: float, arg7: float) → None¶; docstring. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.drot.html:337,update,updated,337,psi4manual/1.1.0/api/psi4.core.drot.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.drot.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.DSBMV. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.DSBMV¶. psi4.core.DSBMV(arg0: int, arg1: str, arg2: int, arg3: int, arg4: float, arg5: psi::Matrix, arg6: int, arg7: psi::Vector, arg8: int, arg9: float, arg10: psi::Vector, arg11: int) → None¶; docstring. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.dsbmv.html:394,update,updated,394,psi4manual/1.1.0/api/psi4.core.dsbmv.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.dsbmv.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.DSCAL. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.DSCAL¶. psi4.core.DSCAL(arg0: int, arg1: int, arg2: float, arg3: psi::Vector, arg4: int) → None¶; docstring. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.dscal.html:297,update,updated,297,psi4manual/1.1.0/api/psi4.core.dscal.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.dscal.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.DSWAP. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.DSWAP¶. psi4.core.DSWAP(arg0: int, arg1: int, arg2: psi::Vector, arg3: int, arg4: psi::Vector, arg5: int) → None¶; docstring. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.dswap.html:314,update,updated,314,psi4manual/1.1.0/api/psi4.core.dswap.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.dswap.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.DSYEV. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.DSYEV¶. psi4.core.DSYEV(arg0: int, arg1: str, arg2: str, arg3: int, arg4: psi::Matrix, arg5: int, arg6: psi::Vector, arg7: psi::Vector, arg8: int) → int¶; docstring. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.dsyev.html:354,update,updated,354,psi4manual/1.1.0/api/psi4.core.dsyev.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.dsyev.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.DSYMM. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.DSYMM¶. psi4.core.DSYMM(arg0: int, arg1: str, arg2: str, arg3: int, arg4: int, arg5: float, arg6: psi::Matrix, arg7: int, arg8: psi::Matrix, arg9: int, arg10: float, arg11: psi::Matrix, arg12: int) → None¶; docstring. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.dsymm.html:406,update,updated,406,psi4manual/1.1.0/api/psi4.core.dsymm.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.dsymm.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.DSYMV. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.DSYMV¶. psi4.core.DSYMV(arg0: int, arg1: str, arg2: int, arg3: float, arg4: psi::Matrix, arg5: int, arg6: psi::Vector, arg7: int, arg8: float, arg9: psi::Vector, arg10: int) → None¶; docstring. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.dsymv.html:382,update,updated,382,psi4manual/1.1.0/api/psi4.core.dsymv.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.dsymv.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.DSYR. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.DSYR¶. psi4.core.DSYR(arg0: int, arg1: str, arg2: int, arg3: float, arg4: psi::Vector, arg5: int, arg6: psi::Matrix, arg7: int) → None¶; docstring. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.dsyr.html:335,update,updated,335,psi4manual/1.1.0/api/psi4.core.dsyr.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.dsyr.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.DSYR2. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.DSYR2¶. psi4.core.DSYR2(arg0: int, arg1: str, arg2: int, arg3: float, arg4: psi::Vector, arg5: int, arg6: psi::Vector, arg7: int, arg8: psi::Matrix, arg9: int) → None¶; docstring. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.dsyr2.html:368,update,updated,368,psi4manual/1.1.0/api/psi4.core.dsyr2.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.dsyr2.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.DSYR2K. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.DSYR2K¶. psi4.core.DSYR2K(arg0: int, arg1: str, arg2: str, arg3: int, arg4: int, arg5: float, arg6: psi::Matrix, arg7: int, arg8: psi::Matrix, arg9: int, arg10: float, arg11: psi::Matrix, arg12: int) → None¶; docstring. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.dsyr2k.html:409,update,updated,409,psi4manual/1.1.0/api/psi4.core.dsyr2k.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.dsyr2k.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.DSYRK. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.DSYRK¶. psi4.core.DSYRK(arg0: int, arg1: str, arg2: str, arg3: int, arg4: int, arg5: float, arg6: psi::Matrix, arg7: int, arg8: float, arg9: psi::Matrix, arg10: int) → None¶; docstring. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.dsyrk.html:374,update,updated,374,psi4manual/1.1.0/api/psi4.core.dsyrk.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.dsyrk.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.DSYSV. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.DSYSV¶. psi4.core.DSYSV(arg0: int, arg1: str, arg2: int, arg3: int, arg4: psi::Matrix, arg5: int, arg6: psi::IntVector, arg7: psi::Matrix, arg8: int, arg9: psi::Vector, arg10: int) → int¶; docstring. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.dsysv.html:388,update,updated,388,psi4manual/1.1.0/api/psi4.core.dsysv.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.dsysv.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.DTBMV. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.DTBMV¶. psi4.core.DTBMV(arg0: int, arg1: str, arg2: str, arg3: str, arg4: int, arg5: int, arg6: psi::Matrix, arg7: int, arg8: psi::Vector, arg9: int) → None¶; docstring. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.dtbmv.html:358,update,updated,358,psi4manual/1.1.0/api/psi4.core.dtbmv.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.dtbmv.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.DTBSV. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.DTBSV¶. psi4.core.DTBSV(arg0: int, arg1: str, arg2: str, arg3: str, arg4: int, arg5: int, arg6: psi::Matrix, arg7: int, arg8: psi::Vector, arg9: int) → None¶; docstring. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.dtbsv.html:358,update,updated,358,psi4manual/1.1.0/api/psi4.core.dtbsv.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.dtbsv.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.DTRMM. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.DTRMM¶. psi4.core.DTRMM(arg0: int, arg1: str, arg2: str, arg3: str, arg4: str, arg5: int, arg6: int, arg7: float, arg8: psi::Matrix, arg9: int, arg10: psi::Matrix, arg11: int) → None¶; docstring. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.dtrmm.html:384,update,updated,384,psi4manual/1.1.0/api/psi4.core.dtrmm.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.dtrmm.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.DTRMV. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.DTRMV¶. psi4.core.DTRMV(arg0: int, arg1: str, arg2: str, arg3: str, arg4: int, arg5: psi::Matrix, arg6: int, arg7: psi::Vector, arg8: int) → None¶; docstring. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.dtrmv.html:347,update,updated,347,psi4manual/1.1.0/api/psi4.core.dtrmv.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.dtrmv.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.DTRSM. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.DTRSM¶. psi4.core.DTRSM(arg0: int, arg1: str, arg2: str, arg3: str, arg4: str, arg5: int, arg6: int, arg7: float, arg8: psi::Matrix, arg9: int, arg10: psi::Matrix, arg11: int) → None¶; docstring. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.dtrsm.html:384,update,updated,384,psi4manual/1.1.0/api/psi4.core.dtrsm.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.dtrsm.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.DTRSV. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.DTRSV¶. psi4.core.DTRSV(arg0: int, arg1: str, arg2: str, arg3: str, arg4: int, arg5: psi::Matrix, arg6: int, arg7: psi::Vector, arg8: int) → None¶; docstring. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.dtrsv.html:347,update,updated,347,psi4manual/1.1.0/api/psi4.core.dtrsv.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.dtrsv.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.Deriv. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.Deriv¶. class psi4.core.Deriv¶; Bases: object; docstring; Methods Summary. compute(...); docstring. set_deriv_density_backtransformed(...); docstring. set_ignore_reference((self: psi4.core.Deriv, ...); docstring. set_tpdm_presorted((self: psi4.core.Deriv, ...); docstring. Methods Documentation. compute(self: psi4.core.Deriv) → psi4.core.Matrix¶; docstring. set_deriv_density_backtransformed(self: psi4.core.Deriv, arg0: bool) → None¶; docstring. set_ignore_reference(self: psi4.core.Deriv, arg0: bool) → None¶; docstring. set_tpdm_presorted(self: psi4.core.Deriv, arg0: bool) → None¶; docstring. compute(self: psi4.core.Deriv) → psi4.core.Matrix; docstring. set_deriv_density_backtransformed(self: psi4.core.Deriv, arg0: bool) → None; docstring. set_ignore_reference(self: psi4.core.Deriv, arg0: bool) → None; docstring. set_tpdm_presorted(self: psi4.core.Deriv, arg0: bool) → None; docstring. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.deriv.html:1084,update,updated,1084,psi4manual/1.1.0/api/psi4.core.deriv.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.deriv.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.DiagonalizeOrder. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.DiagonalizeOrder¶. class psi4.core.DiagonalizeOrder¶; Bases: object; docstring; Attributes Summary. Ascending. Descending. Attributes Documentation. Ascending = DiagonalizeOrder.Ascending¶. Descending = DiagonalizeOrder.Descending¶. Ascending = DiagonalizeOrder.Ascending. Descending = DiagonalizeOrder.Descending. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.diagonalizeorder.html:514,update,updated,514,psi4manual/1.1.0/api/psi4.core.diagonalizeorder.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.diagonalizeorder.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.Dimension. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.Dimension¶. class psi4.core.Dimension¶; Bases: object; docstring; Attributes Summary. name; The name of the dimension. Methods Summary. from_list(dims[, name]); Builds a core.Dimension object from a python list or tuple. init((self: psi4.core.Dimension, arg0: int, ...); Re-initializes the dimension object. n((self: psi4.core.Dimension) -> int); The order of the dimension. print_out((self: psi4.core.Dimension) -> None); docstring. to_tuple(dim); Converts a core.Dimension object to a tuple. Attributes Documentation. name¶; The name of the dimension. Used in printing. Methods Documentation. classmethod from_list(dims, name='New Dimension')¶; Builds a core.Dimension object from a python list or tuple. If a dimension; object is passed a copy will be returned. init(self: psi4.core.Dimension, arg0: int, arg1: str) → None¶; Re-initializes the dimension object. n(self: psi4.core.Dimension) → int¶; The order of the dimension. print_out(self: psi4.core.Dimension) → None¶; docstring. to_tuple(dim)¶; Converts a core.Dimension object to a tuple. classmethod from_list(dims, name='New Dimension'); Builds a core.Dimension object from a python list or tuple. If a dimension; object is passed a copy will be returned. init(self: psi4.core.Dimension, arg0: int, arg1: str) → None; Re-initializes the dimension object. n(self: psi4.core.Dimension) → int; The order of the dimension. name; The name of the dimension. Used in printing. print_out(self: psi4.core.Dimension) → None; docstring. to_tuple(dim); Converts a core.Dimension object to a tuple. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.dimension.html:1739,update,updated,1739,psi4manual/1.1.0/api/psi4.core.dimension.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.dimension.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.DipoleInt. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.DipoleInt¶. class psi4.core.DipoleInt¶; Bases: psi4.core.OneBodyAOInt; docstring. basis¶; The basis set on center one. basis1¶; The basis set on center one. basis2¶; The basis set on center two. compute_shell(self: psi4.core.OneBodyAOInt, arg0: int, arg1: int) → None¶; docstring. origin¶; The origin about which the one body ints are being computed. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.dipoleint.html:543,update,updated,543,psi4manual/1.1.0/api/psi4.core.dipoleint.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.dipoleint.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.DiskSOMCSCF. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.DiskSOMCSCF¶. class psi4.core.DiskSOMCSCF¶; Bases: psi4.core.SOMCSCF; docstring. Ck(self: psi4.core.SOMCSCF, arg0: psi4.core.Matrix, arg1: psi4.core.Matrix) → psi4.core.Matrix¶. H_approx_diag(self: psi4.core.SOMCSCF) → psi4.core.Matrix¶. approx_solve(self: psi4.core.SOMCSCF) → psi4.core.Matrix¶. compute_AFock(self: psi4.core.SOMCSCF, arg0: psi4.core.Matrix) → psi4.core.Matrix¶. compute_Hk(self: psi4.core.SOMCSCF, arg0: psi4.core.Matrix) → psi4.core.Matrix¶. compute_Q(self: psi4.core.SOMCSCF, arg0: psi4.core.Matrix) → psi4.core.Matrix¶. compute_Qk(self: psi4.core.SOMCSCF, arg0: psi4.core.Matrix, arg1: psi4.core.Matrix, arg2: psi4.core.Matrix) → psi4.core.Matrix¶. current_AFock(self: psi4.core.SOMCSCF) → psi4.core.Matrix¶. current_IFock(self: psi4.core.SOMCSCF) → psi4.core.Matrix¶. current_ci_energy(self: psi4.core.SOMCSCF) → float¶. current_docc_energy(self: psi4.core.SOMCSCF) → float¶. current_total_energy(self: psi4.core.SOMCSCF) → float¶. form_rotation_matrix(self: psi4.core.SOMCSCF, x: psi4.core.Matrix, order: int=2) → psi4.core.Matrix¶. gradient(self: psi4.core.SOMCSCF) → psi4.core.Matrix¶. gradient_rms(self: psi4.core.SOMCSCF) → float¶. rhf_energy(self: psi4.core.SOMCSCF, arg0: psi4.core.Matrix) → float¶. solve(self: psi4.core.SOMCSCF, arg0: int, arg1: float, arg2: bool) → psi4.core.Matrix¶. update(self: psi4.core.SOMCSCF, arg0: psi4.core.Matrix, arg1: psi4.core.Matrix, arg2: psi4.core.Matrix, arg3: psi4.core.Matrix, arg4: psi4.core.Matrix) → None¶. zero_redundant(self: psi4.core.SOMCSCF, arg0: psi4.core.Matrix) → None¶. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.disksomcscf.html:1412,update,update,1412,psi4manual/1.1.0/api/psi4.core.disksomcscf.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.disksomcscf.html,2,['update'],"['update', 'updated']"
Deployability,"﻿. psi4.core.EFP. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.EFP¶. class psi4.core.EFP¶; Bases: object; Class interfacing with libefp; Methods Summary. compute((self: psi4.core.EFP) -> None); Computes libefp energies and, if active, torque. nfragments((self: psi4.core.EFP) -> int); Returns the number of EFP fragments in the molecule. print_out((self: psi4.core.EFP) -> None); Prints options settings and EFP and QM geometries. set_qm_atoms((self: psi4.core.EFP) -> None); Provides libefp with QM fragment information. Methods Documentation. compute(self: psi4.core.EFP) → None¶; Computes libefp energies and, if active, torque. nfragments(self: psi4.core.EFP) → int¶; Returns the number of EFP fragments in the molecule. print_out(self: psi4.core.EFP) → None¶; Prints options settings and EFP and QM geometries. set_qm_atoms(self: psi4.core.EFP) → None¶; Provides libefp with QM fragment information. compute(self: psi4.core.EFP) → None; Computes libefp energies and, if active, torque. nfragments(self: psi4.core.EFP) → int; Returns the number of EFP fragments in the molecule. print_out(self: psi4.core.EFP) → None; Prints options settings and EFP and QM geometries. set_qm_atoms(self: psi4.core.EFP) → None; Provides libefp with QM fragment information. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.efp.html:1384,update,updated,1384,psi4manual/1.1.0/api/psi4.core.efp.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.efp.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.ERI. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.ERI¶. class psi4.core.ERI¶; Bases: psi4.core.TwoBodyAOInt; docstring. compute_shell(self: psi4.core.TwoBodyAOInt, arg0: int, arg1: int, arg2: int, arg3: int) → int¶; docstring. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.eri.html:363,update,updated,363,psi4manual/1.1.0/api/psi4.core.eri.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.eri.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.ElectricFieldInt. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.ElectricFieldInt¶. class psi4.core.ElectricFieldInt¶; Bases: psi4.core.OneBodyAOInt; docstring. basis¶; The basis set on center one. basis1¶; The basis set on center one. basis2¶; The basis set on center two. compute_shell(self: psi4.core.OneBodyAOInt, arg0: int, arg1: int) → None¶; docstring. origin¶; The origin about which the one body ints are being computed. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.electricfieldint.html:564,update,updated,564,psi4manual/1.1.0/api/psi4.core.electricfieldint.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.electricfieldint.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.ElectrostaticInt. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.ElectrostaticInt¶. class psi4.core.ElectrostaticInt¶; Bases: psi4.core.OneBodyAOInt; docstring. basis¶; The basis set on center one. basis1¶; The basis set on center one. basis2¶; The basis set on center two. compute_shell(self: psi4.core.OneBodyAOInt, arg0: int, arg1: int) → None¶; docstring. origin¶; The origin about which the one body ints are being computed. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.electrostaticint.html:564,update,updated,564,psi4manual/1.1.0/api/psi4.core.electrostaticint.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.electrostaticint.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.ErfComplementERI. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.ErfComplementERI¶. class psi4.core.ErfComplementERI¶; Bases: psi4.core.TwoBodyAOInt; docstring. compute_shell(self: psi4.core.TwoBodyAOInt, arg0: int, arg1: int, arg2: int, arg3: int) → int¶; docstring. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.erfcomplementeri.html:402,update,updated,402,psi4manual/1.1.0/api/psi4.core.erfcomplementeri.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.erfcomplementeri.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.ErfERI. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.ErfERI¶. class psi4.core.ErfERI¶; Bases: psi4.core.TwoBodyAOInt; docstring. compute_shell(self: psi4.core.TwoBodyAOInt, arg0: int, arg1: int, arg2: int, arg3: int) → int¶; docstring. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.erferi.html:372,update,updated,372,psi4manual/1.1.0/api/psi4.core.erferi.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.erferi.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.ExternalPotential. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.ExternalPotential¶. class psi4.core.ExternalPotential¶; Bases: object; docstring; Methods Summary. addBasis((self: psi4.core.ExternalPotential, ...); docstring. addCharge(...); docstring. clear(...); docstring. computePotentialMatrix(...); docstring. print_out(...); docstring. setName((self: psi4.core.ExternalPotential, ...); docstring. Methods Documentation. addBasis(self: psi4.core.ExternalPotential, arg0: psi4.core.BasisSet, arg1: psi4.core.Vector) → None¶; docstring. addCharge(self: psi4.core.ExternalPotential, arg0: float, arg1: float, arg2: float, arg3: float) → None¶; docstring. clear(self: psi4.core.ExternalPotential) → None¶; docstring. computePotentialMatrix(self: psi4.core.ExternalPotential, arg0: psi4.core.BasisSet) → psi4.core.Matrix¶; docstring. print_out(self: psi4.core.ExternalPotential) → None¶; docstring. setName(self: psi4.core.ExternalPotential, arg0: str) → None¶; docstring. addBasis(self: psi4.core.ExternalPotential, arg0: psi4.core.BasisSet, arg1: psi4.core.Vector) → None; docstring. addCharge(self: psi4.core.ExternalPotential, arg0: float, arg1: float, arg2: float, arg3: float) → None; docstring. clear(self: psi4.core.ExternalPotential) → None; docstring. computePotentialMatrix(self: psi4.core.ExternalPotential, arg0: psi4.core.BasisSet) → psi4.core.Matrix; docstring. print_out(self: psi4.core.ExternalPotential) → None; docstring. setName(self: psi4.core.ExternalPotential, arg0: str) → None; docstring. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.externalpotential.html:1650,update,updated,1650,psi4manual/1.1.0/api/psi4.core.externalpotential.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.externalpotential.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.F12. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.F12¶. class psi4.core.F12¶; Bases: psi4.core.TwoBodyAOInt; docstring. compute_shell(self: psi4.core.TwoBodyAOInt, arg0: int, arg1: int, arg2: int, arg3: int) → int¶; docstring. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.f12.html:363,update,updated,363,psi4manual/1.1.0/api/psi4.core.f12.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.f12.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.F12DoubleCommutator. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.F12DoubleCommutator¶. class psi4.core.F12DoubleCommutator¶; Bases: psi4.core.TwoBodyAOInt; docstring. compute_shell(self: psi4.core.TwoBodyAOInt, arg0: int, arg1: int, arg2: int, arg3: int) → int¶; docstring. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.f12doublecommutator.html:411,update,updated,411,psi4manual/1.1.0/api/psi4.core.f12doublecommutator.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.f12doublecommutator.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.F12G12. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.F12G12¶. class psi4.core.F12G12¶; Bases: psi4.core.TwoBodyAOInt; docstring. compute_shell(self: psi4.core.TwoBodyAOInt, arg0: int, arg1: int, arg2: int, arg3: int) → int¶; docstring. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.f12g12.html:372,update,updated,372,psi4manual/1.1.0/api/psi4.core.f12g12.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.f12g12.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.F12Squared. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.F12Squared¶. class psi4.core.F12Squared¶; Bases: psi4.core.TwoBodyAOInt; docstring. compute_shell(self: psi4.core.TwoBodyAOInt, arg0: int, arg1: int, arg2: int, arg3: int) → int¶; docstring. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.f12squared.html:384,update,updated,384,psi4manual/1.1.0/api/psi4.core.f12squared.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.f12squared.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.FCHKWriter. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.FCHKWriter¶. class psi4.core.FCHKWriter¶; Bases: object; docstring; Methods Summary. write((self: psi4.core.FCHKWriter, ...); docstring. Methods Documentation. write(self: psi4.core.FCHKWriter, arg0: str) → None¶; docstring. write(self: psi4.core.FCHKWriter, arg0: str) → None; docstring. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.fchkwriter.html:482,update,updated,482,psi4manual/1.1.0/api/psi4.core.fchkwriter.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.fchkwriter.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.FittedSlaterCorrelationFactor. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.FittedSlaterCorrelationFactor¶. class psi4.core.FittedSlaterCorrelationFactor¶; Bases: psi4.core.CorrelationFactor; docstring; Methods Summary. exponent(...). Methods Documentation. exponent(self: psi4.core.FittedSlaterCorrelationFactor) → float¶. exponent(self: psi4.core.FittedSlaterCorrelationFactor) → float. set_params(self: psi4.core.CorrelationFactor, arg0: psi4.core.Vector, arg1: psi4.core.Vector) → None¶; docstring. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.fittedslatercorrelationfactor.html:639,update,updated,639,psi4manual/1.1.0/api/psi4.core.fittedslatercorrelationfactor.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.fittedslatercorrelationfactor.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.Gaussian94BasisSetParser. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.Gaussian94BasisSetParser¶. class psi4.core.Gaussian94BasisSetParser¶; Bases: psi4.core.BasisSetParser; docstring. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.gaussian94basissetparser.html:321,update,updated,321,psi4manual/1.1.0/api/psi4.core.gaussian94basissetparser.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.gaussian94basissetparser.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.GaussianType. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.GaussianType¶. class psi4.core.GaussianType¶; Bases: object; docstring; Attributes Summary. Cartesian. Pure. Attributes Documentation. Cartesian = GaussianType.Cartesian¶. Pure = GaussianType.Pure¶. Cartesian = GaussianType.Cartesian. Pure = GaussianType.Pure. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.gaussiantype.html:456,update,updated,456,psi4manual/1.1.0/api/psi4.core.gaussiantype.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.gaussiantype.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.GeometryUnits. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.GeometryUnits¶. class psi4.core.GeometryUnits¶; Bases: object; docstring; Attributes Summary. Angstrom. Bohr. Attributes Documentation. Angstrom = GeometryUnits.Angstrom¶. Bohr = GeometryUnits.Bohr¶. Angstrom = GeometryUnits.Angstrom. Bohr = GeometryUnits.Bohr. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.geometryunits.html:458,update,updated,458,psi4manual/1.1.0/api/psi4.core.geometryunits.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.geometryunits.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.IDAMAX. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.IDAMAX¶. psi4.core.IDAMAX(arg0: int, arg1: int, arg2: psi::Vector, arg3: int) → int¶; docstring. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.idamax.html:286,update,updated,286,psi4manual/1.1.0/api/psi4.core.idamax.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.idamax.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.IntVector. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.IntVector¶. class psi4.core.IntVector¶; Bases: object; docstring; Methods Summary. dim((self: psi4.core.IntVector, ...); docstring. get((self: psi4.core.IntVector, arg0: int, ...); docstring. nirrep((self: psi4.core.IntVector) -> int); docstring. print_out((self: psi4.core.IntVector) -> None); docstring. set((self: psi4.core.IntVector, arg0: int, ...); docstring. Methods Documentation. dim(self: psi4.core.IntVector, arg0: int) → int¶; docstring. get(self: psi4.core.IntVector, arg0: int, arg1: int) → int¶; docstring. nirrep(self: psi4.core.IntVector) → int¶; docstring. print_out(self: psi4.core.IntVector) → None¶; docstring. set(self: psi4.core.IntVector, arg0: int, arg1: int, arg2: int) → None¶; docstring. dim(self: psi4.core.IntVector, arg0: int) → int; docstring. get(self: psi4.core.IntVector, arg0: int, arg1: int) → int; docstring. nirrep(self: psi4.core.IntVector) → int; docstring. print_out(self: psi4.core.IntVector) → None; docstring. set(self: psi4.core.IntVector, arg0: int, arg1: int, arg2: int) → None; docstring. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.intvector.html:1230,update,updated,1230,psi4manual/1.1.0/api/psi4.core.intvector.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.intvector.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.KineticInt. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.KineticInt¶. class psi4.core.KineticInt¶; Bases: psi4.core.OneBodyAOInt; docstring. basis¶; The basis set on center one. basis1¶; The basis set on center one. basis2¶; The basis set on center two. compute_shell(self: psi4.core.OneBodyAOInt, arg0: int, arg1: int) → None¶; docstring. origin¶; The origin about which the one body ints are being computed. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.kineticint.html:546,update,updated,546,psi4manual/1.1.0/api/psi4.core.kineticint.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.kineticint.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.LaplaceDenominator. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.LaplaceDenominator¶. class psi4.core.LaplaceDenominator¶; Bases: object; docstring; Methods Summary. denominator_occ(...); docstring. denominator_vir(...); docstring. Methods Documentation. denominator_occ(self: psi4.core.LaplaceDenominator) → psi4.core.Matrix¶; docstring. denominator_vir(self: psi4.core.LaplaceDenominator) → psi4.core.Matrix¶; docstring. denominator_occ(self: psi4.core.LaplaceDenominator) → psi4.core.Matrix; docstring. denominator_vir(self: psi4.core.LaplaceDenominator) → psi4.core.Matrix; docstring. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.laplacedenominator.html:725,update,updated,725,psi4manual/1.1.0/api/psi4.core.laplacedenominator.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.laplacedenominator.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.Localizer. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.Localizer¶. class psi4.core.Localizer¶; Bases: object; docstring; Attributes Summary. L; Localized orbital coefficients. U; Orbital rotation matrix. converged; Did the localization procedure converge?. Methods Summary. build((arg0: str, arg1: psi4.core.BasisSet, ...); docstring. localize((self: psi4.core.Localizer) -> None); Perform the localization procedure. Attributes Documentation. L¶; Localized orbital coefficients. U¶; Orbital rotation matrix. converged¶; Did the localization procedure converge?. Methods Documentation. build(arg0: str, arg1: psi4.core.BasisSet, arg2: psi4.core.Matrix) → psi4.core.Localizer¶; docstring. localize(self: psi4.core.Localizer) → None¶; Perform the localization procedure. L; Localized orbital coefficients. U; Orbital rotation matrix. build(arg0: str, arg1: psi4.core.BasisSet, arg2: psi4.core.Matrix) → psi4.core.Localizer; docstring. converged; Did the localization procedure converge?. localize(self: psi4.core.Localizer) → None; Perform the localization procedure. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.localizer.html:1203,update,updated,1203,psi4manual/1.1.0/api/psi4.core.localizer.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.localizer.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.MOWriter. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.MOWriter¶. class psi4.core.MOWriter¶; Bases: object; docstring; Methods Summary. write((self: psi4.core.MOWriter) -> None); docstring. Methods Documentation. write(self: psi4.core.MOWriter) → None¶; docstring. write(self: psi4.core.MOWriter) → None; docstring. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.mowriter.html:452,update,updated,452,psi4manual/1.1.0/api/psi4.core.mowriter.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.mowriter.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.MatrixFactory. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.MatrixFactory¶. class psi4.core.MatrixFactory¶; Bases: object; docstring; Methods Summary. create_matrix(*args, **kwargs); Overloaded function. Methods Documentation. create_matrix(*args, **kwargs)¶; Overloaded function. create_matrix(self: psi4.core.MatrixFactory) -> psi4.core.Matrix. docstring. create_matrix(self: psi4.core.MatrixFactory, arg0: str) -> psi4.core.Matrix. docstring. create_matrix(*args, **kwargs); Overloaded function. create_matrix(self: psi4.core.MatrixFactory) -> psi4.core.Matrix. docstring. create_matrix(self: psi4.core.MatrixFactory, arg0: str) -> psi4.core.Matrix. docstring. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.matrixfactory.html:800,update,updated,800,psi4manual/1.1.0/api/psi4.core.matrixfactory.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.matrixfactory.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.MoldenWriter. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.MoldenWriter¶. class psi4.core.MoldenWriter¶; Bases: object; docstring; Methods Summary. write((self: psi4.core.MoldenWriter, ...); docstring. Methods Documentation. write(self: psi4.core.MoldenWriter, arg0: str, arg1: psi4.core.Matrix, arg2: psi4.core.Matrix, arg3: psi4.core.Vector, arg4: psi4.core.Vector, arg5: psi4.core.Vector, arg6: psi4.core.Vector, arg7: bool) → None¶; docstring. write(self: psi4.core.MoldenWriter, arg0: str, arg1: psi4.core.Matrix, arg2: psi4.core.Matrix, arg3: psi4.core.Vector, arg4: psi4.core.Vector, arg5: psi4.core.Vector, arg6: psi4.core.Vector, arg7: bool) → None; docstring. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.moldenwriter.html:806,update,updated,806,psi4manual/1.1.0/api/psi4.core.moldenwriter.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.moldenwriter.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.MultipoleInt. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.MultipoleInt¶. class psi4.core.MultipoleInt¶; Bases: psi4.core.OneBodyAOInt; docstring. basis¶; The basis set on center one. basis1¶; The basis set on center one. basis2¶; The basis set on center two. compute_shell(self: psi4.core.OneBodyAOInt, arg0: int, arg1: int) → None¶; docstring. origin¶; The origin about which the one body ints are being computed. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.multipoleint.html:552,update,updated,552,psi4manual/1.1.0/api/psi4.core.multipoleint.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.multipoleint.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.MultipoleSymmetry. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.MultipoleSymmetry¶. class psi4.core.MultipoleSymmetry¶; Bases: object; docstring; Methods Summary. create_matrices(...); docstring. Methods Documentation. create_matrices(self: psi4.core.MultipoleSymmetry, arg0: str) → List[psi4.core.Matrix]¶; docstring. create_matrices(self: psi4.core.MultipoleSymmetry, arg0: str) → List[psi4.core.Matrix]; docstring. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.multipolesymmetry.html:554,update,updated,554,psi4manual/1.1.0/api/psi4.core.multipolesymmetry.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.multipolesymmetry.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.NBOWriter. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.NBOWriter¶. class psi4.core.NBOWriter¶; Bases: object; docstring; Methods Summary. write((self: psi4.core.NBOWriter, ...); docstring. Methods Documentation. write(self: psi4.core.NBOWriter, arg0: str) → None¶; docstring. write(self: psi4.core.NBOWriter, arg0: str) → None; docstring. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.nbowriter.html:476,update,updated,476,psi4manual/1.1.0/api/psi4.core.nbowriter.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.nbowriter.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.NablaInt. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.NablaInt¶. class psi4.core.NablaInt¶; Bases: psi4.core.OneBodyAOInt; docstring. basis¶; The basis set on center one. basis1¶; The basis set on center one. basis2¶; The basis set on center two. compute_shell(self: psi4.core.OneBodyAOInt, arg0: int, arg1: int) → None¶; docstring. origin¶; The origin about which the one body ints are being computed. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.nablaint.html:540,update,updated,540,psi4manual/1.1.0/api/psi4.core.nablaint.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.nablaint.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.OneBodyAOInt. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.OneBodyAOInt¶. class psi4.core.OneBodyAOInt¶; Bases: object; docstring; Attributes Summary. basis; The basis set on center one. basis1; The basis set on center one. basis2; The basis set on center two. origin; The origin about which the one body ints are being computed. Methods Summary. compute_shell((self: psi4.core.OneBodyAOInt, ...); docstring. Attributes Documentation. basis¶; The basis set on center one. basis1¶; The basis set on center one. basis2¶; The basis set on center two. origin¶; The origin about which the one body ints are being computed. Methods Documentation. compute_shell(self: psi4.core.OneBodyAOInt, arg0: int, arg1: int) → None¶; docstring. basis; The basis set on center one. basis1; The basis set on center one. basis2; The basis set on center two. compute_shell(self: psi4.core.OneBodyAOInt, arg0: int, arg1: int) → None; docstring. origin; The origin about which the one body ints are being computed. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.onebodyaoint.html:1127,update,updated,1127,psi4manual/1.1.0/api/psi4.core.onebodyaoint.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.onebodyaoint.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.OverlapInt. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.OverlapInt¶. class psi4.core.OverlapInt¶; Bases: psi4.core.OneBodyAOInt; docstring. basis¶; The basis set on center one. basis1¶; The basis set on center one. basis2¶; The basis set on center two. compute_shell(self: psi4.core.OneBodyAOInt, arg0: int, arg1: int) → None¶; docstring. origin¶; The origin about which the one body ints are being computed. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.overlapint.html:546,update,updated,546,psi4manual/1.1.0/api/psi4.core.overlapint.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.overlapint.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.PMLocalizer. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.PMLocalizer¶. class psi4.core.PMLocalizer¶; Bases: psi4.core.Localizer; docstring. L¶; Localized orbital coefficients. U¶; Orbital rotation matrix. build(arg0: str, arg1: psi4.core.BasisSet, arg2: psi4.core.Matrix) → psi4.core.Localizer¶; docstring. converged¶; Did the localization procedure converge?. localize(self: psi4.core.Localizer) → None¶; Perform the localization procedure. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.pmlocalizer.html:579,update,updated,579,psi4manual/1.1.0/api/psi4.core.pmlocalizer.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.pmlocalizer.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.PetiteList. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.PetiteList¶. class psi4.core.PetiteList¶; Bases: object; docstring; Methods Summary. aotoso(...); docstring. print((self: psi4.core.PetiteList, ...); docstring. sotoao(...); docstring. Methods Documentation. aotoso(self: psi4.core.PetiteList) → psi4.core.Matrix¶; docstring. print(self: psi4.core.PetiteList, arg0: str) → None¶; docstring. sotoao(self: psi4.core.PetiteList) → psi4.core.Matrix¶; docstring. aotoso(self: psi4.core.PetiteList) → psi4.core.Matrix; docstring. print(self: psi4.core.PetiteList, arg0: str) → None; docstring. sotoao(self: psi4.core.PetiteList) → psi4.core.Matrix; docstring. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.petitelist.html:796,update,updated,796,psi4manual/1.1.0/api/psi4.core.petitelist.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.petitelist.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.PointGroup. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.PointGroup¶. class psi4.core.PointGroup¶; Bases: object; docstring; Methods Summary. symbol((self: psi4.core.PointGroup) -> str); Returns Schoenflies symbol for point group. Methods Documentation. symbol(self: psi4.core.PointGroup) → str¶; Returns Schoenflies symbol for point group. symbol(self: psi4.core.PointGroup) → str; Returns Schoenflies symbol for point group. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.pointgroup.html:563,update,updated,563,psi4manual/1.1.0/api/psi4.core.pointgroup.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.pointgroup.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.PotentialInt. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.PotentialInt¶. class psi4.core.PotentialInt¶; Bases: psi4.core.OneBodyAOInt; docstring. basis¶; The basis set on center one. basis1¶; The basis set on center one. basis2¶; The basis set on center two. compute_shell(self: psi4.core.OneBodyAOInt, arg0: int, arg1: int) → None¶; docstring. origin¶; The origin about which the one body ints are being computed. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.potentialint.html:552,update,updated,552,psi4manual/1.1.0/api/psi4.core.potentialint.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.potentialint.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.PrimitiveType. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.PrimitiveType¶. class psi4.core.PrimitiveType¶; Bases: object; docstring; Attributes Summary. Normalized. Unnormalized. Attributes Documentation. Normalized = PrimitiveType.Normalized¶. Unnormalized = PrimitiveType.Unnormalized¶. Normalized = PrimitiveType.Normalized. Unnormalized = PrimitiveType.Unnormalized. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.primitivetype.html:508,update,updated,508,psi4manual/1.1.0/api/psi4.core.primitivetype.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.primitivetype.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.Prop. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.Prop¶. class psi4.core.Prop¶; Bases: object; docstring; Methods Summary. set_title((self: psi4.core.Prop, ...); docstring. Methods Documentation. set_title(self: psi4.core.Prop, arg0: str) → None¶; docstring. set_title(self: psi4.core.Prop, arg0: str) → None; docstring. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.prop.html:458,update,updated,458,psi4manual/1.1.0/api/psi4.core.prop.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.prop.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.PseudoTrial. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.PseudoTrial¶. class psi4.core.PseudoTrial¶; Bases: object; docstring; Methods Summary. getA(...); docstring. getI(...); docstring. getIPS(...); docstring. getQ(...); docstring. getR(...); docstring. Methods Documentation. getA(self: psi4.core.PseudoTrial) → psi4.core.Matrix¶; docstring. getI(self: psi4.core.PseudoTrial) → psi4.core.Matrix¶; docstring. getIPS(self: psi4.core.PseudoTrial) → psi4.core.Matrix¶; docstring. getQ(self: psi4.core.PseudoTrial) → psi4.core.Matrix¶; docstring. getR(self: psi4.core.PseudoTrial) → psi4.core.Matrix¶; docstring. getA(self: psi4.core.PseudoTrial) → psi4.core.Matrix; docstring. getI(self: psi4.core.PseudoTrial) → psi4.core.Matrix; docstring. getIPS(self: psi4.core.PseudoTrial) → psi4.core.Matrix; docstring. getQ(self: psi4.core.PseudoTrial) → psi4.core.Matrix; docstring. getR(self: psi4.core.PseudoTrial) → psi4.core.Matrix; docstring. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.pseudotrial.html:1075,update,updated,1075,psi4manual/1.1.0/api/psi4.core.pseudotrial.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.pseudotrial.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.PseudospectralInt. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.PseudospectralInt¶. class psi4.core.PseudospectralInt¶; Bases: psi4.core.OneBodyAOInt; docstring. basis¶; The basis set on center one. basis1¶; The basis set on center one. basis2¶; The basis set on center two. compute_shell(self: psi4.core.OneBodyAOInt, arg0: int, arg1: int) → None¶; docstring. origin¶; The origin about which the one body ints are being computed. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.pseudospectralint.html:567,update,updated,567,psi4manual/1.1.0/api/psi4.core.pseudospectralint.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.pseudospectralint.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.PsiReturnType. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.PsiReturnType¶. class psi4.core.PsiReturnType¶; Bases: object; docstring; Attributes Summary. Balk. EndLoop. Failure. Success. Attributes Documentation. Balk = PsiReturnType.Balk¶. EndLoop = PsiReturnType.EndLoop¶. Failure = PsiReturnType.Failure¶. Success = PsiReturnType.Success¶. Balk = PsiReturnType.Balk. EndLoop = PsiReturnType.EndLoop. Failure = PsiReturnType.Failure. Success = PsiReturnType.Success. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.psireturntype.html:605,update,updated,605,psi4manual/1.1.0/api/psi4.core.psireturntype.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.psireturntype.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.QuadrupoleInt. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.QuadrupoleInt¶. class psi4.core.QuadrupoleInt¶; Bases: psi4.core.OneBodyAOInt; docstring. basis¶; The basis set on center one. basis1¶; The basis set on center one. basis2¶; The basis set on center two. compute_shell(self: psi4.core.OneBodyAOInt, arg0: int, arg1: int) → None¶; docstring. origin¶; The origin about which the one body ints are being computed. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.quadrupoleint.html:555,update,updated,555,psi4manual/1.1.0/api/psi4.core.quadrupoleint.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.quadrupoleint.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.SOBasisSet. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.SOBasisSet¶. class psi4.core.SOBasisSet¶; Bases: object; docstring; Methods Summary. petite_list(...); docstring. Methods Documentation. petite_list(self: psi4.core.SOBasisSet) → psi4.core.PetiteList¶; docstring. petite_list(self: psi4.core.SOBasisSet) → psi4.core.PetiteList; docstring. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.sobasisset.html:481,update,updated,481,psi4manual/1.1.0/api/psi4.core.sobasisset.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.sobasisset.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.SOMCSCF. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.SOMCSCF¶. class psi4.core.SOMCSCF¶; Bases: object; docstring; Methods Summary. Ck((self: psi4.core.SOMCSCF, ...). H_approx_diag(...). approx_solve(...). compute_AFock((self: psi4.core.SOMCSCF, ...). compute_Hk((self: psi4.core.SOMCSCF, ...). compute_Q((self: psi4.core.SOMCSCF, ...). compute_Qk((self: psi4.core.SOMCSCF, ...). current_AFock(...). current_IFock(...). current_ci_energy(...). current_docc_energy(...). current_total_energy(...). form_rotation_matrix(...). gradient(...). gradient_rms((self: psi4.core.SOMCSCF) -> float). rhf_energy((self: psi4.core.SOMCSCF, ...). solve((self: psi4.core.SOMCSCF, arg0: int, ...). update((self: psi4.core.SOMCSCF, ...). zero_redundant((self: psi4.core.SOMCSCF, ...). Methods Documentation. Ck(self: psi4.core.SOMCSCF, arg0: psi4.core.Matrix, arg1: psi4.core.Matrix) → psi4.core.Matrix¶. H_approx_diag(self: psi4.core.SOMCSCF) → psi4.core.Matrix¶. approx_solve(self: psi4.core.SOMCSCF) → psi4.core.Matrix¶. compute_AFock(self: psi4.core.SOMCSCF, arg0: psi4.core.Matrix) → psi4.core.Matrix¶. compute_Hk(self: psi4.core.SOMCSCF, arg0: psi4.core.Matrix) → psi4.core.Matrix¶. compute_Q(self: psi4.core.SOMCSCF, arg0: psi4.core.Matrix) → psi4.core.Matrix¶. compute_Qk(self: psi4.core.SOMCSCF, arg0: psi4.core.Matrix, arg1: psi4.core.Matrix, arg2: psi4.core.Matrix) → psi4.core.Matrix¶. current_AFock(self: psi4.core.SOMCSCF) → psi4.core.Matrix¶. current_IFock(self: psi4.core.SOMCSCF) → psi4.core.Matrix¶. current_ci_energy(self: psi4.core.SOMCSCF) → float¶. current_docc_energy(self: psi4.core.SOMCSCF) → float¶. current_total_energy(self: psi4.core.SOMCSCF) → float¶. form_rotation_matrix(self: psi4.core.SOMCSCF, x: psi4.core.Matrix, order: int=2) → psi4.core.Matrix¶. gradient(self: psi4.core.SOMCSCF) → psi4.core.Matrix¶. gradient_rms(self: psi4.core.SOMCSCF) → float¶. rhf_energy(self: psi4.core.SOMCSCF, arg0: psi4.core.Matrix) → float¶. solve(self: psi4.core.SOM",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.somcscf.html:718,update,update,718,psi4manual/1.1.0/api/psi4.core.somcscf.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.somcscf.html,1,['update'],['update']
Deployability,"﻿. psi4.core.ShellInfo. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.ShellInfo¶. class psi4.core.ShellInfo¶; Bases: object. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.shellinfo.html:247,update,updated,247,psi4manual/1.1.0/api/psi4.core.shellinfo.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.shellinfo.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.ThreeCenterOverlapInt. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.ThreeCenterOverlapInt¶. class psi4.core.ThreeCenterOverlapInt¶; Bases: object; docstring; Methods Summary. compute_shell(...); docstring. Methods Documentation. compute_shell(self: psi4.core.ThreeCenterOverlapInt, arg0: int, arg1: int, arg2: int) → None¶; docstring. compute_shell(self: psi4.core.ThreeCenterOverlapInt, arg0: int, arg1: int, arg2: int) → None; docstring. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.threecenteroverlapint.html:576,update,updated,576,psi4manual/1.1.0/api/psi4.core.threecenteroverlapint.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.threecenteroverlapint.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.TracelessQuadrupoleInt. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.TracelessQuadrupoleInt¶. class psi4.core.TracelessQuadrupoleInt¶; Bases: psi4.core.OneBodyAOInt; docstring. basis¶; The basis set on center one. basis1¶; The basis set on center one. basis2¶; The basis set on center two. compute_shell(self: psi4.core.OneBodyAOInt, arg0: int, arg1: int) → None¶; docstring. origin¶; The origin about which the one body ints are being computed. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.tracelessquadrupoleint.html:582,update,updated,582,psi4manual/1.1.0/api/psi4.core.tracelessquadrupoleint.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.tracelessquadrupoleint.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.TwoBodyAOInt. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.TwoBodyAOInt¶. class psi4.core.TwoBodyAOInt¶; Bases: object; docstring; Methods Summary. compute_shell((self: psi4.core.TwoBodyAOInt, ...); docstring. Methods Documentation. compute_shell(self: psi4.core.TwoBodyAOInt, arg0: int, arg1: int, arg2: int, arg3: int) → int¶; docstring. compute_shell(self: psi4.core.TwoBodyAOInt, arg0: int, arg1: int, arg2: int, arg3: int) → int; docstring. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.twobodyaoint.html:582,update,updated,582,psi4manual/1.1.0/api/psi4.core.twobodyaoint.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.twobodyaoint.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.TwoElectronInt. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.TwoElectronInt¶. class psi4.core.TwoElectronInt¶; Bases: psi4.core.TwoBodyAOInt; docstring; Methods Summary. compute_shell((self: psi4.core.TwoBodyAOInt, ...); docstring. Methods Documentation. compute_shell(self: psi4.core.TwoBodyAOInt, arg0: int, arg1: int, arg2: int, arg3: int) → int¶; docstring. compute_shell(self: psi4.core.TwoBodyAOInt, arg0: int, arg1: int, arg2: int, arg3: int) → int; docstring. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.twoelectronint.html:604,update,updated,604,psi4manual/1.1.0/api/psi4.core.twoelectronint.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.twoelectronint.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.Vector3. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.Vector3¶. class psi4.core.Vector3¶; Bases: object; Class for vectors of length three, often Cartesian coordinate vectors, and their common operations; Methods Summary. cross((self: psi4.core.Vector3, ...); Returns cross product of arg1 and arg2. distance((self: psi4.core.Vector3, ...); Returns distance between two points represented by arg1 and arg2. dot((self: psi4.core.Vector3, ...); Returns dot product of arg1 and arg2. norm((self: psi4.core.Vector3) -> float); Returns Euclidean norm of arg1. normalize((self: psi4.core.Vector3) -> None); Returns vector of unit length and arg1 direction. Methods Documentation. cross(self: psi4.core.Vector3, arg0: psi4.core.Vector3) → psi4.core.Vector3¶; Returns cross product of arg1 and arg2. distance(self: psi4.core.Vector3, arg0: psi4.core.Vector3) → float¶; Returns distance between two points represented by arg1 and arg2. dot(self: psi4.core.Vector3, arg0: psi4.core.Vector3) → float¶; Returns dot product of arg1 and arg2. norm(self: psi4.core.Vector3) → float¶; Returns Euclidean norm of arg1. normalize(self: psi4.core.Vector3) → None¶; Returns vector of unit length and arg1 direction. cross(self: psi4.core.Vector3, arg0: psi4.core.Vector3) → psi4.core.Vector3; Returns cross product of arg1 and arg2. distance(self: psi4.core.Vector3, arg0: psi4.core.Vector3) → float; Returns distance between two points represented by arg1 and arg2. dot(self: psi4.core.Vector3, arg0: psi4.core.Vector3) → float; Returns dot product of arg1 and arg2. norm(self: psi4.core.Vector3) → float; Returns Euclidean norm of arg1. normalize(self: psi4.core.Vector3) → None; Returns vector of unit length and arg1 direction. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.vector3.html:1847,update,updated,1847,psi4manual/1.1.0/api/psi4.core.vector3.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.vector3.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.View. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.View¶. class psi4.core.View¶; Bases: object; Methods Summary. __call__(...); docstring. Methods Documentation. __call__(self: psi4.core.View) → psi4.core.Matrix¶; docstring. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.view.html:361,update,updated,361,psi4manual/1.1.0/api/psi4.core.view.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.view.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.adc. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.adc¶. psi4.core.adc(arg0: psi::Wavefunction) → psi::Wavefunction¶; Runs the ADC propagator code, for excited states. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.adc.html:303,update,updated,303,psi4manual/1.1.0/api/psi4.core.adc.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.adc.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.atomic_displacements. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.atomic_displacements¶. psi4.core.atomic_displacements(arg0: psi::Molecule) → List[psi::Matrix]¶; Returns list of displacements generated by displacing each atom in the +/- x, y, z directions. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.atomic_displacements.html:395,update,updated,395,psi4manual/1.1.0/api/psi4.core.atomic_displacements.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.atomic_displacements.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.be_quiet. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.be_quiet¶. psi4.core.be_quiet() → None¶; Redirects output to /dev/null. To switch back to regular output mode, use reopen_outfile(). Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.be_quiet.html:324,update,updated,324,psi4manual/1.1.0/api/psi4.core.be_quiet.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.be_quiet.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.benchmark_blas1. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.benchmark_blas1¶. psi4.core.benchmark_blas1(arg0: int, arg1: float) → None¶; docstring. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.benchmark_blas1.html:286,update,updated,286,psi4manual/1.1.0/api/psi4.core.benchmark_blas1.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.benchmark_blas1.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.benchmark_blas2. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.benchmark_blas2¶. psi4.core.benchmark_blas2(arg0: int, arg1: float) → None¶; docstring. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.benchmark_blas2.html:286,update,updated,286,psi4manual/1.1.0/api/psi4.core.benchmark_blas2.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.benchmark_blas2.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.benchmark_blas3. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.benchmark_blas3¶. psi4.core.benchmark_blas3(arg0: int, arg1: float, arg2: int) → None¶; docstring. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.benchmark_blas3.html:297,update,updated,297,psi4manual/1.1.0/api/psi4.core.benchmark_blas3.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.benchmark_blas3.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.benchmark_disk. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.benchmark_disk¶. psi4.core.benchmark_disk(arg0: int, arg1: float) → None¶; docstring. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.benchmark_disk.html:283,update,updated,283,psi4manual/1.1.0/api/psi4.core.benchmark_disk.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.benchmark_disk.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.benchmark_integrals. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.benchmark_integrals¶. psi4.core.benchmark_integrals(arg0: int, arg1: float) → None¶; docstring. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.benchmark_integrals.html:298,update,updated,298,psi4manual/1.1.0/api/psi4.core.benchmark_integrals.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.benchmark_integrals.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.benchmark_math. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.benchmark_math¶. psi4.core.benchmark_math(arg0: float) → None¶; docstring. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.benchmark_math.html:272,update,updated,272,psi4manual/1.1.0/api/psi4.core.benchmark_math.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.benchmark_math.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.ccdensity. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.ccdensity¶. psi4.core.ccdensity(arg0: psi::Wavefunction) → float¶; Runs the code to compute coupled cluster density matrices. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.ccdensity.html:318,update,updated,318,psi4manual/1.1.0/api/psi4.core.ccdensity.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.ccdensity.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.ccenergy. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.ccenergy¶. psi4.core.ccenergy(arg0: psi::Wavefunction) → psi::Wavefunction¶; Runs the coupled cluster energy code. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.ccenergy.html:306,update,updated,306,psi4manual/1.1.0/api/psi4.core.ccenergy.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.ccenergy.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.cceom. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.cceom¶. psi4.core.cceom(arg0: psi::Wavefunction) → float¶; Runs the equation of motion coupled cluster code, for excited states. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.cceom.html:317,update,updated,317,psi4manual/1.1.0/api/psi4.core.cceom.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.cceom.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.cchbar. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.cchbar¶. psi4.core.cchbar(arg0: psi::Wavefunction) → None¶; Runs the code to generate the similarity transformed Hamiltonian. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.cchbar.html:315,update,updated,315,psi4manual/1.1.0/api/psi4.core.cchbar.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.cchbar.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.cclambda. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.cclambda¶. psi4.core.cclambda(arg0: psi::Wavefunction) → psi::Wavefunction¶; Runs the coupled cluster lambda equations code. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.cclambda.html:316,update,updated,316,psi4manual/1.1.0/api/psi4.core.cclambda.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.cclambda.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.ccresponse. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.ccresponse¶. psi4.core.ccresponse(arg0: psi::Wavefunction) → float¶; Runs the coupled cluster response theory code. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.ccresponse.html:309,update,updated,309,psi4manual/1.1.0/api/psi4.core.ccresponse.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.ccresponse.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.cctransort. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.cctransort¶. psi4.core.cctransort(arg0: psi::Wavefunction) → None¶; Runs CCTRANSORT, which transforms and reorders integrals for use in the coupled cluster codes. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.cctransort.html:356,update,updated,356,psi4manual/1.1.0/api/psi4.core.cctransort.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.cctransort.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.cctriples. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.cctriples¶. psi4.core.cctriples(arg0: psi::Wavefunction) → float¶; Runs the coupled cluster (T) energy code. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.cctriples.html:301,update,updated,301,psi4manual/1.1.0/api/psi4.core.cctriples.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.cctriples.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.clean. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.clean¶. psi4.core.clean() → None¶; Function to remove scratch files. Call between independent jobs. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.clean.html:288,update,updated,288,psi4manual/1.1.0/api/psi4.core.clean.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.clean.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.clean_options. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.clean_options¶. psi4.core.clean_options() → None¶; Function to reset options to clean state. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.clean_options.html:289,update,updated,289,psi4manual/1.1.0/api/psi4.core.clean_options.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.clean_options.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.clean_variables. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.clean_variables¶. psi4.core.clean_variables() → None¶; Empties all PSI variables that have set internally. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.clean_variables.html:305,update,updated,305,psi4manual/1.1.0/api/psi4.core.clean_variables.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.clean_variables.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.close_outfile. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.close_outfile¶. psi4.core.close_outfile() → None¶; Closes the output file. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.close_outfile.html:271,update,updated,271,psi4manual/1.1.0/api/psi4.core.close_outfile.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.close_outfile.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.dcft. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.dcft¶. psi4.core.dcft(arg0: psi::Wavefunction) → psi::Wavefunction¶; Runs the density cumulant functional theory code. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.dcft.html:306,update,updated,306,psi4manual/1.1.0/api/psi4.core.dcft.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.dcft.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.detci. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.detci¶. psi4.core.detci(arg0: psi::Wavefunction) → psi::Wavefunction¶; Runs the determinant-based configuration interaction code. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.detci.html:186,configurat,configuration,186,psi4manual/1.1.0/api/psi4.core.detci.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.detci.html,2,"['configurat', 'update']","['configuration', 'updated']"
Deployability,"﻿. psi4.core.dfmp2. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.dfmp2¶. psi4.core.dfmp2(arg0: psi::Wavefunction) → psi::Wavefunction¶; Runs the DF-MP2 code. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.dfmp2.html:281,update,updated,281,psi4manual/1.1.0/api/psi4.core.dfmp2.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.dfmp2.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.dfocc. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.dfocc¶. psi4.core.dfocc(arg0: psi::Wavefunction) → psi::Wavefunction¶; Runs the density-fitted orbital optimized CC codes. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.dfocc.html:311,update,updated,311,psi4manual/1.1.0/api/psi4.core.dfocc.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.dfocc.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.displace_atom. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.displace_atom¶. psi4.core.displace_atom(arg0: psi::Matrix, arg1: int, arg2: int, arg3: int, arg4: float) → psi::Matrix¶; Displaces one coordinate of single atom. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.displace_atom.html:358,update,updated,358,psi4manual/1.1.0/api/psi4.core.displace_atom.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.displace_atom.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.dmrg. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.dmrg¶. psi4.core.dmrg(arg0: psi::Wavefunction) → psi::Wavefunction¶; Runs the DMRG code. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.dmrg.html:276,update,updated,276,psi4manual/1.1.0/api/psi4.core.dmrg.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.dmrg.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.efp_init. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.efp_init¶. psi4.core.efp_init() → psi4.core.EFP¶; Initializes the EFP library and returns an EFP object. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.efp_init.html:296,update,updated,296,psi4manual/1.1.0/api/psi4.core.efp_init.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.efp_init.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.efp_set_options. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.efp_set_options¶. psi4.core.efp_set_options() → None¶; Set EFP options from environment options object. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.efp_set_options.html:302,update,updated,302,psi4manual/1.1.0/api/psi4.core.efp_set_options.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.efp_set_options.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.fd_1_0. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.fd_1_0¶. psi4.core.fd_1_0(arg0: psi::Molecule, arg1: list) → psi::Matrix¶; Performs a finite difference gradient computation, from energy points. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.fd_1_0.html:335,update,updated,335,psi4manual/1.1.0/api/psi4.core.fd_1_0.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.fd_1_0.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.fd_freq_0. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.fd_freq_0¶. psi4.core.fd_freq_0(arg0: psi::Molecule, arg1: list, arg2: int) → psi::Matrix¶; Performs a finite difference frequency computation, from energy points, for a given irrep. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.fd_freq_0.html:375,update,updated,375,psi4manual/1.1.0/api/psi4.core.fd_freq_0.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.fd_freq_0.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.fd_freq_1. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.fd_freq_1¶. psi4.core.fd_freq_1(arg0: psi::Molecule, arg1: list, arg2: int) → psi::Matrix¶; Performs a finite difference frequency computation, from gradients, for a given irrep. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.fd_freq_1.html:371,update,updated,371,psi4manual/1.1.0/api/psi4.core.fd_freq_1.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.fd_freq_1.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.fd_geoms_1_0. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.fd_geoms_1_0¶. psi4.core.fd_geoms_1_0(arg0: psi::Molecule) → List[psi::Matrix]¶; Gets list of displacements needed for a finite difference gradient computation, from energy points. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.fd_geoms_1_0.html:376,update,updated,376,psi4manual/1.1.0/api/psi4.core.fd_geoms_1_0.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.fd_geoms_1_0.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.fd_geoms_freq_0. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.fd_geoms_freq_0¶. psi4.core.fd_geoms_freq_0(arg0: psi::Molecule, arg1: int) → List[psi::Matrix]¶; Gets list of displacements needed for a finite difference frequency computation, from energy points, for a given irrep. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.fd_geoms_freq_0.html:416,update,updated,416,psi4manual/1.1.0/api/psi4.core.fd_geoms_freq_0.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.fd_geoms_freq_0.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.fd_geoms_freq_1. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.fd_geoms_freq_1¶. psi4.core.fd_geoms_freq_1(arg0: psi::Molecule, arg1: int) → List[psi::Matrix]¶; Gets list of displacements needed fof a finite difference frequency computation, from gradients, for a given irrep. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.fd_geoms_freq_1.html:412,update,updated,412,psi4manual/1.1.0/api/psi4.core.fd_geoms_freq_1.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.fd_geoms_freq_1.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.finalize. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.finalize¶. psi4.core.finalize() → None¶. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.finalize.html:232,update,updated,232,psi4manual/1.1.0/api/psi4.core.finalize.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.finalize.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.fisapt. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.fisapt¶. psi4.core.fisapt(arg0: psi::Wavefunction) → float¶; Runs the functional-group intramolecular symmetry adapted perturbation theory code. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.fisapt.html:334,update,updated,334,psi4manual/1.1.0/api/psi4.core.fisapt.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.fisapt.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.flush_outfile. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.flush_outfile¶. psi4.core.flush_outfile() → None¶; Flushes the output file. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.flush_outfile.html:272,update,updated,272,psi4manual/1.1.0/api/psi4.core.flush_outfile.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.flush_outfile.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.fnocc. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.fnocc¶. psi4.core.fnocc(arg0: psi::Wavefunction) → psi::Wavefunction¶; Runs the fno-ccsd(t)/qcisd(t)/mp4/cepa energy code. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.fnocc.html:311,update,updated,311,psi4manual/1.1.0/api/psi4.core.fnocc.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.fnocc.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.get_active_efp. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.get_active_efp¶. psi4.core.get_active_efp() → psi4.core.EFP¶; Returns the currently active EFP object. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.get_active_efp.html:300,update,updated,300,psi4manual/1.1.0/api/psi4.core.get_active_efp.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.get_active_efp.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.get_active_molecule. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.get_active_molecule¶. psi4.core.get_active_molecule() → psi::Molecule¶; Returns the currently active molecule object. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.get_active_molecule.html:320,update,updated,320,psi4manual/1.1.0/api/psi4.core.get_active_molecule.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.get_active_molecule.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.get_array_variable. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.get_array_variable¶. psi4.core.get_array_variable(arg0: str) → psi::Matrix¶; Returns one of the PSI variables set internally by the modules or python driver (see manual for full listing of variables available). Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.get_array_variable.html:412,update,updated,412,psi4manual/1.1.0/api/psi4.core.get_array_variable.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.get_array_variable.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.get_array_variables. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.get_array_variables¶. psi4.core.get_array_variables() → Dict[str, psi::Matrix]¶; Returns dictionary of the PSI variables set internally by the modules or python driver. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.get_array_variables.html:371,update,updated,371,psi4manual/1.1.0/api/psi4.core.get_array_variables.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.get_array_variables.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.get_atomic_point_charges. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.get_atomic_point_charges¶. psi4.core.get_atomic_point_charges() → psi::Vector¶; Returns the most recently computed atomic point charges, as a double * object. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.get_atomic_point_charges.html:366,update,updated,366,psi4manual/1.1.0/api/psi4.core.get_atomic_point_charges.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.get_atomic_point_charges.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.get_efp_torque. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.get_efp_torque¶. psi4.core.get_efp_torque() → psi::Matrix¶; Returns the most recently computed gradient for the EFP portion, as a Nefp by 6 Matrix object. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.get_efp_torque.html:352,update,updated,352,psi4manual/1.1.0/api/psi4.core.get_efp_torque.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.get_efp_torque.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.get_environment. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.get_environment¶. psi4.core.get_environment(arg0: str) → str¶; Get enviromental vairable. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.get_environment.html:288,update,updated,288,psi4manual/1.1.0/api/psi4.core.get_environment.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.get_environment.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.get_frequencies. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.get_frequencies¶. psi4.core.get_frequencies() → psi::Vector¶; Returns the most recently computed frequencies, as a 3N-6 Vector object. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.get_frequencies.html:333,update,updated,333,psi4manual/1.1.0/api/psi4.core.get_frequencies.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.get_frequencies.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.get_global_option. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.get_global_option¶. psi4.core.get_global_option(arg0: str) → object¶; Given a string of a keyword name arg1, returns the value associated with the keyword from the global options. Returns error if keyword is not recognized. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.get_global_option.html:424,update,updated,424,psi4manual/1.1.0/api/psi4.core.get_global_option.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.get_global_option.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.get_global_option_list. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.get_global_option_list¶. psi4.core.get_global_option_list() → List[str]¶; Returns a list of all global options. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.get_global_option_list.html:317,update,updated,317,psi4manual/1.1.0/api/psi4.core.get_global_option_list.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.get_global_option_list.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.get_gradient. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.get_gradient¶. psi4.core.get_gradient() → psi::Matrix¶; Returns the most recently computed gradient, as a N by 3 Matrix object. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.get_gradient.html:323,update,updated,323,psi4manual/1.1.0/api/psi4.core.get_gradient.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.get_gradient.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.get_legacy_molecule. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.get_legacy_molecule¶. psi4.core.get_legacy_molecule() → psi::Molecule¶; Returns the currently active molecule object. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.get_legacy_molecule.html:320,update,updated,320,psi4manual/1.1.0/api/psi4.core.get_legacy_molecule.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.get_legacy_molecule.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.get_local_option. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.get_local_option¶. psi4.core.get_local_option(arg0: str, arg1: str) → object¶; Given a string of a keyword name arg2 and a particular module arg1, returns the value associated with the keyword in the module options scope. Returns error if keyword is not recognized for the module. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.get_local_option.html:480,update,updated,480,psi4manual/1.1.0/api/psi4.core.get_local_option.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.get_local_option.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.get_memory. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.get_memory¶. psi4.core.get_memory() → int¶; Returns the amount of memory available to Psi (in bytes). Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.get_memory.html:295,update,updated,295,psi4manual/1.1.0/api/psi4.core.get_memory.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.get_memory.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.get_num_threads. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.get_num_threads¶. psi4.core.get_num_threads() → int¶; Returns the number of threads to use in SMP parallel computations. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.get_num_threads.html:319,update,updated,319,psi4manual/1.1.0/api/psi4.core.get_num_threads.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.get_num_threads.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.get_option. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.get_option¶. psi4.core.get_option(arg0: str, arg1: str) → object¶; Given a string of a keyword name arg2 and a particular module arg1, returns the local value associated with the keyword if it’s been set, else the global value if it’s been set, else the local core.default value. Returns error if keyword is not recognized globally or if keyword is not recognized for the module. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.get_option.html:573,update,updated,573,psi4manual/1.1.0/api/psi4.core.get_option.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.get_option.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.get_output_file. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.get_output_file¶. psi4.core.get_output_file() → str¶. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.get_output_file.html:252,update,updated,252,psi4manual/1.1.0/api/psi4.core.get_output_file.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.get_output_file.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.get_variable. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.get_variable¶. psi4.core.get_variable(arg0: str) → float¶; Returns one of the PSI variables set internally by the modules or python driver (see manual for full listing of variables available). Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.get_variable.html:388,update,updated,388,psi4manual/1.1.0/api/psi4.core.get_variable.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.get_variable.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.get_variables. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.get_variables¶. psi4.core.get_variables() → Dict[str, float]¶; Returns dictionary of the PSI variables set internally by the modules or python driver. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.get_variables.html:347,update,updated,347,psi4manual/1.1.0/api/psi4.core.get_variables.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.get_variables.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.get_writer_file_prefix. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.get_writer_file_prefix¶. psi4.core.get_writer_file_prefix(arg0: str) → str¶; Returns the prefix to use for writing files for external programs. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.get_writer_file_prefix.html:349,update,updated,349,psi4manual/1.1.0/api/psi4.core.get_writer_file_prefix.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.get_writer_file_prefix.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.git_version. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.git_version¶. psi4.core.git_version() → str¶; Returns the git version of this copy of Psi. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.git_version.html:285,update,updated,285,psi4manual/1.1.0/api/psi4.core.git_version.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.git_version.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.has_global_option_changed. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.has_global_option_changed¶. psi4.core.has_global_option_changed(arg0: str) → bool¶; Returns boolean for whether the keyword arg1 has been touched in the global scope, by either user or code. Notwithstanding, code is written such that in practice, this returns whether the option has been touched in the global scope by the user. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.has_global_option_changed.html:537,update,updated,537,psi4manual/1.1.0/api/psi4.core.has_global_option_changed.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.has_global_option_changed.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.has_local_option_changed. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.has_local_option_changed¶. psi4.core.has_local_option_changed(arg0: str, arg1: str) → bool¶; Returns boolean for whether the keyword arg2 has been touched in the scope of the specified module arg1, by either user or code. Notwithstanding, code is written such that in practice, this returns whether the option has been touched in the module scope by the user. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.has_local_option_changed.html:567,update,updated,567,psi4manual/1.1.0/api/psi4.core.has_local_option_changed.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.has_local_option_changed.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.has_option_changed. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.has_option_changed¶. psi4.core.has_option_changed(arg0: str, arg1: str) → bool¶; Returns boolean for whether the option arg2 has been touched either locally to the specified module arg1 or globally, by either user or code. Notwithstanding, code is written such that in practice, this returns whether the option has been touched by the user. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.has_option_changed.html:542,update,updated,542,psi4manual/1.1.0/api/psi4.core.has_option_changed.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.has_option_changed.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.has_variable. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.has_variable¶. psi4.core.has_variable(arg0: str) → bool¶; Returns true if the PSI variable exists/is set. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.has_variable.html:301,update,updated,301,psi4manual/1.1.0/api/psi4.core.has_variable.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.has_variable.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.initialize. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.initialize¶. psi4.core.initialize() → bool¶. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.initialize.html:238,update,updated,238,psi4manual/1.1.0/api/psi4.core.initialize.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.initialize.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.legacy_wavefunction. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.legacy_wavefunction¶. psi4.core.legacy_wavefunction() → psi::Wavefunction¶; Returns the current legacy_wavefunction object from the most recent computation. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.legacy_wavefunction.html:359,update,updated,359,psi4manual/1.1.0/api/psi4.core.legacy_wavefunction.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.legacy_wavefunction.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.libfock. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.libfock¶. psi4.core.libfock(arg0: psi::Wavefunction) → psi::Wavefunction¶; Runs a CPHF calculation, using libfock. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.libfock.html:305,update,updated,305,psi4manual/1.1.0/api/psi4.core.libfock.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.libfock.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.mcscf. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.mcscf¶. psi4.core.mcscf(arg0: psi::Wavefunction) → psi::Wavefunction¶; Runs the MCSCF code, (N.B. restricted to certain active spaces). Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.mcscf.html:324,update,updated,324,psi4manual/1.1.0/api/psi4.core.mcscf.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.mcscf.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.mrcc_generate_input. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.mrcc_generate_input¶. psi4.core.mrcc_generate_input(arg0: psi::Wavefunction, arg1: dict) → psi4.core.PsiReturnType¶; Generates an input for Kallay’s MRCC code. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.mrcc_generate_input.html:362,update,updated,362,psi4manual/1.1.0/api/psi4.core.mrcc_generate_input.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.mrcc_generate_input.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.mrcc_load_densities. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.mrcc_load_densities¶. psi4.core.mrcc_load_densities(arg0: psi::Wavefunction, arg1: dict) → psi4.core.PsiReturnType¶; Reads in the density matrices from Kallay’s MRCC code. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.mrcc_load_densities.html:374,update,updated,374,psi4manual/1.1.0/api/psi4.core.mrcc_load_densities.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.mrcc_load_densities.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.occ. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.occ¶. psi4.core.occ(arg0: psi::Wavefunction) → psi::Wavefunction¶; Runs the orbital optimized CC codes. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.occ.html:290,update,updated,290,psi4manual/1.1.0/api/psi4.core.occ.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.occ.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.opt_clean. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.opt_clean¶. psi4.core.opt_clean() → None¶; Cleans up the optimizer’s scratch files. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.opt_clean.html:276,update,updated,276,psi4manual/1.1.0/api/psi4.core.opt_clean.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.opt_clean.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.optking. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.optking¶. psi4.core.optking() → int¶; Runs the geometry optimization / frequency analysis code. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.optking.html:286,update,updated,286,psi4manual/1.1.0/api/psi4.core.optking.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.optking.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.outfile_name. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.outfile_name¶. psi4.core.outfile_name() → str¶; Returns the name of the output file. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.outfile_name.html:280,update,updated,280,psi4manual/1.1.0/api/psi4.core.outfile_name.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.outfile_name.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.plugin. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.plugin¶. psi4.core.plugin(arg0: str, arg1: psi::Wavefunction) → psi::Wavefunction¶; Call the plugin of name arg0. Returns the plugin code result. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.plugin.html:335,update,updated,335,psi4manual/1.1.0/api/psi4.core.plugin.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.plugin.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.plugin_close. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.plugin_close¶. psi4.core.plugin_close(arg0: str) → None¶; Close the plugin of name arg0. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.plugin_close.html:284,update,updated,284,psi4manual/1.1.0/api/psi4.core.plugin_close.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.plugin_close.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.plugin_close_all. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.plugin_close_all¶. psi4.core.plugin_close_all() → None¶; Close all open plugins. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.plugin_close_all.html:280,update,updated,280,psi4manual/1.1.0/api/psi4.core.plugin_close_all.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.plugin_close_all.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.plugin_load. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.plugin_load¶. psi4.core.plugin_load(arg0: str) → int¶; Load the plugin of name arg0. Returns 0 if not loaded, 1 if loaded, 2 if already loaded. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.plugin_load.html:338,update,updated,338,psi4manual/1.1.0/api/psi4.core.plugin_load.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.plugin_load.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.prepare_options_for_module. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.prepare_options_for_module¶. psi4.core.prepare_options_for_module(arg0: str) → None¶; Sets the options module up to return options pertaining to the named argument (e.g. SCF). Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.prepare_options_for_module.html:385,update,updated,385,psi4manual/1.1.0/api/psi4.core.prepare_options_for_module.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.prepare_options_for_module.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.print_global_options. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.print_global_options¶. psi4.core.print_global_options() → None¶; Prints the currently set global (all modules) options to the output file. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.print_global_options.html:342,update,updated,342,psi4manual/1.1.0/api/psi4.core.print_global_options.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.print_global_options.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.print_options. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.print_options¶. psi4.core.print_options() → None¶; Prints the currently set options (to the output file) for the current module. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.print_options.html:325,update,updated,325,psi4manual/1.1.0/api/psi4.core.print_options.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.print_options.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.print_out. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.print_out¶. psi4.core.print_out(arg0: str) → None¶; Prints a string (using sprintf-like notation) to the output file. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.print_out.html:310,update,updated,310,psi4manual/1.1.0/api/psi4.core.print_out.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.print_out.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.print_variables. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.print_variables¶. psi4.core.print_variables() → None¶; Prints all PSI variables that have been set internally. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.print_variables.html:309,update,updated,309,psi4manual/1.1.0/api/psi4.core.print_variables.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.print_variables.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.psi_top_srcdir. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.psi_top_srcdir¶. psi4.core.psi_top_srcdir() → str¶; Returns the location of the source code. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.psi_top_srcdir.html:290,update,updated,290,psi4manual/1.1.0/api/psi4.core.psi_top_srcdir.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.psi_top_srcdir.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.psimrcc. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.psimrcc¶. psi4.core.psimrcc(arg0: psi::Wavefunction) → float¶; Runs the multireference coupled cluster code. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.psimrcc.html:299,update,updated,299,psi4manual/1.1.0/api/psi4.core.psimrcc.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.psimrcc.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.reopen_outfile. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.reopen_outfile¶. psi4.core.reopen_outfile() → None¶; Reopens the output file. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.reopen_outfile.html:275,update,updated,275,psi4manual/1.1.0/api/psi4.core.reopen_outfile.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.reopen_outfile.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.revoke_global_option_changed. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.revoke_global_option_changed¶. psi4.core.revoke_global_option_changed(arg0: str) → None¶; Given a string of a keyword name arg1, sets the has_changed attribute in the global options scope to false. Used in python driver when a function sets the value of an option. Before the function exits, this command is called on the option so that has_changed reflects whether the user (not the program) has touched the option. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.revoke_global_option_changed.html:628,update,updated,628,psi4manual/1.1.0/api/psi4.core.revoke_global_option_changed.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.revoke_global_option_changed.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.revoke_local_option_changed. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.revoke_local_option_changed¶. psi4.core.revoke_local_option_changed(arg0: str, arg1: str) → None¶; Given a string of a keyword name arg2 and a particular module arg1, sets the has_changed attribute in the module options scope to false. Used in python driver when a function sets the value of an option. Before the function exits, this command is called on the option so that has_changed reflects whether the user (not the program) has touched the option. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.revoke_local_option_changed.html:665,update,updated,665,psi4manual/1.1.0/api/psi4.core.revoke_local_option_changed.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.revoke_local_option_changed.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.run_gdma. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.run_gdma¶. psi4.core.run_gdma(arg0: psi::Wavefunction, arg1: str) → float¶; Runs the GDMA code. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.run_gdma.html:287,update,updated,287,psi4manual/1.1.0/api/psi4.core.run_gdma.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.run_gdma.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.sapt. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.sapt¶. psi4.core.sapt(arg0: psi::Wavefunction, arg1: psi::Wavefunction, arg2: psi::Wavefunction) → float¶; Runs the symmetry adapted perturbation theory code. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.sapt.html:346,update,updated,346,psi4manual/1.1.0/api/psi4.core.sapt.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.sapt.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.scatter. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.scatter¶. psi4.core.scatter(arg0: psi::Molecule, arg1: float, arg2: list, arg3: list, arg4: list) → None¶; New Scatter function. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.scatter.html:319,update,updated,319,psi4manual/1.1.0/api/psi4.core.scatter.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.scatter.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.scfgrad. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.scfgrad¶. psi4.core.scfgrad(arg0: psi::Wavefunction) → psi::Matrix¶; Run scfgrad, which is a specialized DF-SCF gradient program. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.scfgrad.html:320,update,updated,320,psi4manual/1.1.0/api/psi4.core.scfgrad.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.scfgrad.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.scfhess. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.scfhess¶. psi4.core.scfhess(arg0: psi::Wavefunction) → psi::Matrix¶; Run scfhess, which is a specialized DF-SCF hessian program. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.scfhess.html:319,update,updated,319,psi4manual/1.1.0/api/psi4.core.scfhess.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.scfhess.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.set_active_molecule. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.set_active_molecule¶. psi4.core.set_active_molecule(arg0: psi::Molecule) → None¶; Activates a previously defined (in the input) molecule, by name. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.set_active_molecule.html:349,update,updated,349,psi4manual/1.1.0/api/psi4.core.set_active_molecule.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.set_active_molecule.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.set_array_variable. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.set_array_variable¶. psi4.core.set_array_variable(arg0: str, arg1: psi::Matrix) → None¶; Sets a PSI variable, by name. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.set_array_variable.html:320,update,updated,320,psi4manual/1.1.0/api/psi4.core.set_array_variable.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.set_array_variable.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.set_efp_torque. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.set_efp_torque¶. psi4.core.set_efp_torque(arg0: psi::Matrix) → None¶; Assigns the global EFP gradient to the values stored in the Nefp by 6 Matrix argument. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.set_efp_torque.html:354,update,updated,354,psi4manual/1.1.0/api/psi4.core.set_efp_torque.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.set_efp_torque.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.set_environment. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.set_environment¶. psi4.core.set_environment(arg0: str, arg1: str) → str¶; Set enviromental vairable. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.set_environment.html:299,update,updated,299,psi4manual/1.1.0/api/psi4.core.set_environment.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.set_environment.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.set_frequencies. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.set_frequencies¶. psi4.core.set_frequencies(arg0: psi::Vector) → None¶; Assigns the global frequencies to the values stored in the 3N-6 Vector argument. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.set_frequencies.html:351,update,updated,351,psi4manual/1.1.0/api/psi4.core.set_frequencies.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.set_frequencies.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.set_global_option. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.set_global_option¶. psi4.core.set_global_option(*args, **kwargs)¶; Overloaded function. set_global_option(arg0: str, arg1: list) -> bool. Sets value arg2 to array keyword arg1 for all modules. set_global_option(arg0: str, arg1: int) -> bool. Sets value arg2 to integer keyword arg1 for all modules. set_global_option(arg0: str, arg1: float) -> bool. Sets value arg2 to double keyword arg1 for all modules. set_global_option(arg0: str, arg1: str) -> bool. Sets value arg2 to string keyword arg1 for all modules. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.set_global_option.html:711,update,updated,711,psi4manual/1.1.0/api/psi4.core.set_global_option.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.set_global_option.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.set_global_option_python. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.set_global_option_python¶. psi4.core.set_global_option_python(arg0: str, arg1: object) → bool¶; Sets a global option to a Python object type. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.set_global_option_python.html:349,update,updated,349,psi4manual/1.1.0/api/psi4.core.set_global_option_python.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.set_global_option_python.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.set_gradient. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.set_gradient¶. psi4.core.set_gradient(arg0: psi::Matrix) → None¶; Assigns the global gradient to the values stored in the N by 3 Matrix argument. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.set_gradient.html:341,update,updated,341,psi4manual/1.1.0/api/psi4.core.set_gradient.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.set_gradient.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.set_legacy_molecule. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.set_legacy_molecule¶. psi4.core.set_legacy_molecule(arg0: psi::Molecule) → None¶; Activates a previously defined (in the input) molecule, by name. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.set_legacy_molecule.html:349,update,updated,349,psi4manual/1.1.0/api/psi4.core.set_legacy_molecule.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.set_legacy_molecule.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.set_legacy_wavefunction. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.set_legacy_wavefunction¶. psi4.core.set_legacy_wavefunction(arg0: psi::Wavefunction) → None¶; Returns the current legacy_wavefunction object from the most recent computation. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.set_legacy_wavefunction.html:381,update,updated,381,psi4manual/1.1.0/api/psi4.core.set_legacy_wavefunction.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.set_legacy_wavefunction.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.set_local_option. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.set_local_option¶. psi4.core.set_local_option(*args, **kwargs)¶; Overloaded function. set_local_option(arg0: str, arg1: str, arg2: list) -> bool. Sets value arg3 to array keyword arg2 scoped only to a specific module arg1. set_local_option(arg0: str, arg1: str, arg2: int) -> bool. Sets value arg3 to integer keyword arg2 scoped only to a specific module arg1. set_local_option(arg0: str, arg1: str, arg2: float) -> bool. Sets value arg3 to double keyword arg2 scoped only to a specific module arg1. set_local_option(arg0: str, arg1: str, arg2: str) -> bool. Sets value arg3 to string keyword arg2 scoped only to a specific module arg1. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.set_local_option.html:836,update,updated,836,psi4manual/1.1.0/api/psi4.core.set_local_option.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.set_local_option.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.set_local_option_python. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.set_local_option_python¶. psi4.core.set_local_option_python(arg0: str, arg1: object) → None¶; Sets an option to a Python object, but scoped only to a single module. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.set_local_option_python.html:371,update,updated,371,psi4manual/1.1.0/api/psi4.core.set_local_option_python.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.set_local_option_python.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.set_memory_bytes. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.set_memory_bytes¶. psi4.core.set_memory_bytes(memory: int, quiet: bool=False) → None¶; Sets the memory available to Psi (in bytes). Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.set_memory_bytes.html:331,update,updated,331,psi4manual/1.1.0/api/psi4.core.set_memory_bytes.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.set_memory_bytes.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.set_num_threads. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.set_num_threads¶. psi4.core.set_num_threads(nthread: int, quiet: bool=False) → None¶; Sets the number of threads to use in SMP parallel computations. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.set_num_threads.html:348,update,updated,348,psi4manual/1.1.0/api/psi4.core.set_num_threads.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.set_num_threads.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.set_output_file. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.set_output_file¶. psi4.core.set_output_file(arg0: str, arg1: bool) → None¶. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.set_output_file.html:274,update,updated,274,psi4manual/1.1.0/api/psi4.core.set_output_file.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.set_output_file.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.set_parent_symmetry. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.set_parent_symmetry¶. psi4.core.set_parent_symmetry(arg0: str) → None¶; Sets the symmetry of the ‘parent’ (undisplaced) geometry, by Schoenflies symbol, at the beginning of a finite difference computation. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.set_parent_symmetry.html:408,update,updated,408,psi4manual/1.1.0/api/psi4.core.set_parent_symmetry.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.set_parent_symmetry.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.set_psi_file_prefix. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.set_psi_file_prefix¶. psi4.core.set_psi_file_prefix(arg0: str) → None¶. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.set_psi_file_prefix.html:274,update,updated,274,psi4manual/1.1.0/api/psi4.core.set_psi_file_prefix.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.set_psi_file_prefix.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.set_variable. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.set_variable¶. psi4.core.set_variable(arg0: str, arg1: float) → None¶; Sets a PSI variable, by name. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.set_variable.html:296,update,updated,296,psi4manual/1.1.0/api/psi4.core.set_variable.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.set_variable.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.thermo. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.thermo¶. psi4.core.thermo(arg0: psi::Wavefunction, arg1: psi::Vector) → float¶; Computes thermodynamic data. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.thermo.html:298,update,updated,298,psi4manual/1.1.0/api/psi4.core.thermo.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.thermo.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.tstart. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.tstart¶. psi4.core.tstart() → None¶; docstring. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.tstart.html:237,update,updated,237,psi4manual/1.1.0/api/psi4.core.tstart.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.tstart.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.tstop. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.tstop¶. psi4.core.tstop() → None¶; docstring. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.tstop.html:234,update,updated,234,psi4manual/1.1.0/api/psi4.core.tstop.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.tstop.html,1,['update'],['updated']
Deployability,"﻿. psi4.core.version. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.version¶. psi4.core.version() → str¶; Returns the version ID of this copy of Psi. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.version.html:272,update,updated,272,psi4manual/1.1.0/api/psi4.core.version.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.version.html,1,['update'],['updated']
Deployability,"﻿. psi4.driver.BFS. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.driver.BFS¶. psi4.driver.BFS(self)[source]¶; Perform a breadth-first search (BFS) on the real atoms; in molecule, returning an array of atom indices of fragments.; Relies upon van der Waals radii and so faulty for close; (esp. hydrogen-bonded) fragments. Original code from; Michael S. Marshall. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.driver.bfs.html:479,update,updated,479,psi4manual/1.1.0/api/psi4.driver.bfs.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.driver.bfs.html,1,['update'],['updated']
Deployability,"﻿. psi4.driver.CSXError. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.driver.CSXError¶. exception psi4.driver.CSXError(msg)[source]¶; Bases: psi4.driver.p4util.exceptions.PsiException; Error called when CSX generation fails. args¶. with_traceback()¶; Exception.with_traceback(tb) –; set self.__traceback__ to tb and return self. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.driver.csxerror.html:447,update,updated,447,psi4manual/1.1.0/api/psi4.driver.csxerror.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.driver.csxerror.html,1,['update'],['updated']
Deployability,"﻿. psi4.driver.ConvergenceError. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.driver.ConvergenceError¶. exception psi4.driver.ConvergenceError(eqn_description, maxit)[source]¶; Bases: psi4.driver.p4util.exceptions.PsiException; Error called for problems with converging and iterative method. Prints; error message msg to standard output stream and output file. args¶. with_traceback()¶; Exception.with_traceback(tb) –; set self.__traceback__ to tb and return self. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.driver.convergenceerror.html:583,update,updated,583,psi4manual/1.1.0/api/psi4.driver.convergenceerror.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.driver.convergenceerror.html,1,['update'],['updated']
Deployability,"﻿. psi4.driver.Dftd3Error. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.driver.Dftd3Error¶. exception psi4.driver.Dftd3Error(msg)[source]¶; Bases: psi4.driver.p4util.exceptions.PsiException. args¶. with_traceback()¶; Exception.with_traceback(tb) –; set self.__traceback__ to tb and return self. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.driver.dftd3error.html:413,update,updated,413,psi4manual/1.1.0/api/psi4.driver.dftd3error.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.driver.dftd3error.html,1,['update'],['updated']
Deployability,"﻿. psi4.driver.EmpericalDispersion. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.driver.EmpericalDispersion¶. class psi4.driver.EmpericalDispersion(alias, dtype, **kwargs)[source]¶; Bases: object; Methods Summary. compute_energy(molecule). compute_gradient(molecule). print_out([level]). Methods Documentation. compute_energy(molecule)[source]¶. compute_gradient(molecule)[source]¶. print_out(level=1)[source]¶. compute_energy(molecule)[source]. compute_gradient(molecule)[source]. print_out(level=1)[source]. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.driver.empericaldispersion.html:628,update,updated,628,psi4manual/1.1.0/api/psi4.driver.empericaldispersion.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.driver.empericaldispersion.html,1,['update'],['updated']
Deployability,"﻿. psi4.driver.ManagedMethodError. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.driver.ManagedMethodError¶. exception psi4.driver.ManagedMethodError(circs)[source]¶; Bases: psi4.driver.p4util.exceptions.PsiException. args¶. with_traceback()¶; Exception.with_traceback(tb) –; set self.__traceback__ to tb and return self. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.driver.managedmethoderror.html:439,update,updated,439,psi4manual/1.1.0/api/psi4.driver.managedmethoderror.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.driver.managedmethoderror.html,1,['update'],['updated']
Deployability,"﻿. psi4.driver.ParsingError. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.driver.ParsingError¶. exception psi4.driver.ParsingError(msg)[source]¶; Bases: psi4.driver.p4util.exceptions.PsiException; Error called for problems parsing a text file. Prints error message; msg to standard output stream and output file. args¶. with_traceback()¶; Exception.with_traceback(tb) –; set self.__traceback__ to tb and return self. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.driver.parsingerror.html:535,update,updated,535,psi4manual/1.1.0/api/psi4.driver.parsingerror.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.driver.parsingerror.html,1,['update'],['updated']
Deployability,"﻿. psi4.driver.PastureRequiredError. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.driver.PastureRequiredError¶. exception psi4.driver.PastureRequiredError(option)[source]¶; Bases: psi4.driver.p4util.exceptions.PsiException; Error called when the specified value of option requires some; module(s) from Psi4Pasture, but could not be imported. args¶. install_instructions = ""\n Note: Psi4Pasture is currently in an experimental state with no reliable install\n procedure yet, but this is what it would look like.\n\n To Build Psi4Pasture and install the required modules within your current\n Psi4 installation\n\n >>> # clone the pasture repo\n >>> git clone https://github.com/psi4/psi4pasture.git\n\n >>> cmake -H. -Bobjdir -Dpsi4_DIR=$PSI4_INSTALL_PREFIX/share/cmake/psi4 {module_args}\n >>> # $PSI4_INSTALL_PREFIX is the $CMAKE_INSTALL_PREFIX for the psi4\n >>> # install you want to install pasture to\n\n >>> # build + install install location is detected automatically\n >>> cd objdir\n >>> make && make install\n\n See https://github.com/psi4/psi4pasture for more details\n\n Or to install using psi4's own build system add\n {module_args}\n to cmake command line when building psi4.\n ""¶. msg_tmpl = 'Psi4Pasture module(s) [{modlist}] are required to change the default value of {opt}\n\n '¶. pasture_required_modules = {'RUN_CCTRANSORT': ['ccsort', 'transqt2']}¶. with_traceback()¶; Exception.with_traceback(tb) –; set self.__traceback__ to tb and return self. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.driver.pasturerequirederror.html:467,install,install,467,psi4manual/1.1.0/api/psi4.driver.pasturerequirederror.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.driver.pasturerequirederror.html,10,"['install', 'update']","['install', 'installation', 'updated']"
Deployability,"﻿. psi4.driver.PsiException. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.driver.PsiException¶. exception psi4.driver.PsiException[source]¶; Bases: Exception; Error class for Psi. args¶. with_traceback()¶; Exception.with_traceback(tb) –; set self.__traceback__ to tb and return self. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.driver.psiexception.html:402,update,updated,402,psi4manual/1.1.0/api/psi4.driver.psiexception.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.driver.psiexception.html,1,['update'],['updated']
Deployability,"﻿. psi4.driver.PsiImportError. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.driver.PsiImportError¶. exception psi4.driver.PsiImportError(msg)[source]¶; Bases: psi4.driver.p4util.exceptions.PsiException; Error called for problems import python dependencies. Prints error message; msg to standard output stream and output file. args¶. with_traceback()¶; Exception.with_traceback(tb) –; set self.__traceback__ to tb and return self. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.driver.psiimporterror.html:548,update,updated,548,psi4manual/1.1.0/api/psi4.driver.psiimporterror.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.driver.psiimporterror.html,1,['update'],['updated']
Deployability,"﻿. psi4.driver.QMMM. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.driver.QMMM¶. class psi4.driver.QMMM[source]¶; Bases: object; Methods Summary. addChargeAngstrom(Q, x, y, z); Function to add a point charge of magnitude Q at position (x, y, z) Angstroms. addChargeBohr(Q, x, y, z); Function to add a point charge of magnitude Q at position (x, y, z) Bohr. addDiffuse(diffuse); Function to add a diffuse charge field diffuse. populateExtern(); Function to define a charge field external to the molecule through point and diffuse charges. Methods Documentation. addChargeAngstrom(Q, x, y, z)[source]¶; Function to add a point charge of magnitude Q at; position (x, y, z) Angstroms. addChargeBohr(Q, x, y, z)[source]¶; Function to add a point charge of magnitude Q at; position (x, y, z) Bohr. addDiffuse(diffuse)[source]¶; Function to add a diffuse charge field diffuse. populateExtern()[source]¶; Function to define a charge field external to the; molecule through point and diffuse charges. addChargeAngstrom(Q, x, y, z)[source]; Function to add a point charge of magnitude Q at; position (x, y, z) Angstroms. addChargeBohr(Q, x, y, z)[source]; Function to add a point charge of magnitude Q at; position (x, y, z) Bohr. addDiffuse(diffuse)[source]; Function to add a diffuse charge field diffuse. populateExtern()[source]; Function to define a charge field external to the; molecule through point and diffuse charges. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.driver.qmmm.html:1536,update,updated,1536,psi4manual/1.1.0/api/psi4.driver.qmmm.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.driver.qmmm.html,1,['update'],['updated']
Deployability,"﻿. psi4.driver.TestComparisonError. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.driver.TestComparisonError¶. exception psi4.driver.TestComparisonError(msg)[source]¶; Bases: psi4.driver.p4util.exceptions.PsiException; Error called when a test case fails due to a failed; compare_values() call. Prints error message msg to standard; output stream and output file. args¶. with_traceback()¶; Exception.with_traceback(tb) –; set self.__traceback__ to tb and return self. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.driver.testcomparisonerror.html:585,update,updated,585,psi4manual/1.1.0/api/psi4.driver.testcomparisonerror.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.driver.testcomparisonerror.html,1,['update'],['updated']
Deployability,"﻿. psi4.driver.ValidationError. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.driver.ValidationError¶. exception psi4.driver.ValidationError(msg)[source]¶; Bases: psi4.driver.p4util.exceptions.PsiException; Error called for problems with the input file. Prints; error message msg to standard output stream and output file. args¶. with_traceback()¶; Exception.with_traceback(tb) –; set self.__traceback__ to tb and return self. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.driver.validationerror.html:544,update,updated,544,psi4manual/1.1.0/api/psi4.driver.validationerror.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.driver.validationerror.html,1,['update'],['updated']
Deployability,"﻿. psi4.driver.activate. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.driver.activate¶. psi4.driver.activate(mol)[source]¶; Function to set molecule object mol as the current active molecule.; Permitted for user use but deprecated in driver in favor of explicit; molecule-passing. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.driver.activate.html:399,update,updated,399,psi4manual/1.1.0/api/psi4.driver.activate.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.driver.activate.html,1,['update'],['updated']
Deployability,"﻿. psi4.driver.ancestor. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.driver.ancestor¶. psi4.driver.ancestor(dir, n=1)[source]¶; Get the nth ancestor of a directory. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.driver.ancestor.html:284,update,updated,284,psi4manual/1.1.0/api/psi4.driver.ancestor.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.driver.ancestor.html,1,['update'],['updated']
Deployability,"﻿. psi4.driver.banner. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.driver.banner¶. psi4.driver.banner(text, type=1, width=35, strNotOutfile=False)[source]¶; Function to print text to output file in a banner of; minimum width width and minimum three-line height for; type = 1 or one-line height for type = 2. If strNotOutfile; is True, function returns string rather than printing it; to output file. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.driver.banner.html:519,update,updated,519,psi4manual/1.1.0/api/psi4.driver.banner.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.driver.banner.html,1,['update'],['updated']
Deployability,"﻿. psi4.driver.basis_helper. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.driver.basis_helper¶. psi4.driver.basis_helper(block, name='', key='BASIS', set_option=True)[source]¶; For PsiAPI mode, forms a basis specification function from block; and associates it with keyword key under handle name. Registers; the basis spec with Psi4 so that it can be applied again to future; molecules. For usage, see mints2, mints9, and cc54 test cases. Unless; set_option is False, name will be set as current active key,; equivalent to set key name or set_option({key: name}). Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.driver.basis_helper.html:682,update,updated,682,psi4manual/1.1.0/api/psi4.driver.basis_helper.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.driver.basis_helper.html,1,['update'],['updated']
Deployability,"﻿. psi4.driver.compare_arrays. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.driver.compare_arrays¶. psi4.driver.compare_arrays(expected, computed, digits, label)[source]¶; Function to compare two numpy arrays. Prints util.success(); when elements of vector computed match elements of vector expected to; number of digits. Performs a system exit on failure to match symmetry; structure, dimension, or element values. Used in input files in the test suite. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.driver.compare_arrays.html:573,update,updated,573,psi4manual/1.1.0/api/psi4.driver.compare_arrays.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.driver.compare_arrays.html,1,['update'],['updated']
Deployability,"﻿. psi4.driver.compare_csx. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.driver.compare_csx¶. psi4.driver.compare_csx()[source]¶; Function to validate energies in CSX files against PSIvariables. Only; active if write_csx flag on. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.driver.compare_csx.html:348,update,updated,348,psi4manual/1.1.0/api/psi4.driver.compare_csx.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.driver.compare_csx.html,1,['update'],['updated']
Deployability,"﻿. psi4.driver.compare_cubes. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.driver.compare_cubes¶. psi4.driver.compare_cubes(expected, computed, label)[source]¶; Function to compare two cube files. Prints util.success(); when value computed matches value expected.; Performs a system exit on failure. Used in input files in the test suite. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.driver.compare_cubes.html:457,update,updated,457,psi4manual/1.1.0/api/psi4.driver.compare_cubes.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.driver.compare_cubes.html,1,['update'],['updated']
Deployability,"﻿. psi4.driver.compare_integers. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.driver.compare_integers¶. psi4.driver.compare_integers(expected, computed, label)[source]¶; Function to compare two integers. Prints util.success(); when value computed matches value expected.; Performs a system exit on failure. Used in input files in the test suite. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.driver.compare_integers.html:464,update,updated,464,psi4manual/1.1.0/api/psi4.driver.compare_integers.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.driver.compare_integers.html,1,['update'],['updated']
Deployability,"﻿. psi4.driver.compare_matrices. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.driver.compare_matrices¶. psi4.driver.compare_matrices(expected, computed, digits, label)[source]¶; Function to compare two matrices. Prints util.success(); when elements of matrix computed match elements of matrix expected to; number of digits. Performs a system exit on failure to match symmetry; structure, dimensions, or element values. Used in input files in the test suite. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.driver.compare_matrices.html:576,update,updated,576,psi4manual/1.1.0/api/psi4.driver.compare_matrices.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.driver.compare_matrices.html,1,['update'],['updated']
Deployability,"﻿. psi4.driver.compare_strings. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.driver.compare_strings¶. psi4.driver.compare_strings(expected, computed, label)[source]¶; Function to compare two strings. Prints util.success(); when string computed exactly matches string expected.; Performs a system exit on failure. Used in input files in the test suite. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.driver.compare_strings.html:470,update,updated,470,psi4manual/1.1.0/api/psi4.driver.compare_strings.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.driver.compare_strings.html,1,['update'],['updated']
Deployability,"﻿. psi4.driver.compare_values. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.driver.compare_values¶. psi4.driver.compare_values(expected, computed, digits, label, exitonfail=True)[source]¶; Function to compare two values. Prints util.success(); when value computed matches value expected to number of digits; (or to digits itself when digits < 1 e.g. digits=0.04). Performs; a system exit on failure unless exitonfail False, in which case; returns error message. Used in input files in the test suite. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.driver.compare_values.html:619,update,updated,619,psi4manual/1.1.0/api/psi4.driver.compare_values.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.driver.compare_values.html,1,['update'],['updated']
Deployability,"﻿. psi4.driver.compare_vectors. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.driver.compare_vectors¶. psi4.driver.compare_vectors(expected, computed, digits, label)[source]¶; Function to compare two vectors. Prints util.success(); when elements of vector computed match elements of vector expected to; number of digits. Performs a system exit on failure to match symmetry; structure, dimension, or element values. Used in input files in the test suite. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.driver.compare_vectors.html:571,update,updated,571,psi4manual/1.1.0/api/psi4.driver.compare_vectors.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.driver.compare_vectors.html,1,['update'],['updated']
Deployability,"﻿. psi4.driver.copy_file_from_scratch. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.driver.copy_file_from_scratch¶. psi4.driver.copy_file_from_scratch(filename, prefix, namespace, unit, move=False)[source]¶; Function to move file out of scratch with correct naming; convention.; Arguments:; @arg filename full path to target file; @arg prefix computation prefix, usually ‘psi’; @arg namespace context namespace, usually molecule name; @arg unit unit number, e.g. 32; @arg move copy or move? (default copy); Example:; Assume PID is 12345 and SCRATCH is /scratch/parrish/. copy_file_to_scratch(‘temp’, ‘psi’, ‘h2o’, 32):; -cp /scratch/parrish/psi.12345.h2o.32 .temp; copy_file_to_scratch(‘/tmp/temp’, ‘psi’, ‘h2o’, 32):; -cp /scratch/parrish/psi.12345.h2o.32 /tmp/temp; copy_file_to_scratch(‘/tmp/temp’, ‘psi’, ‘’, 32):; -cp /scratch/parrish/psi.12345.32 /tmp/temp; copy_file_to_scratch(‘/tmp/temp’, ‘psi’, ‘’, 32, True):; -mv /scratch/parrish/psi.12345.32 /tmp/temp. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.driver.copy_file_from_scratch.html:1084,update,updated,1084,psi4manual/1.1.0/api/psi4.driver.copy_file_from_scratch.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.driver.copy_file_from_scratch.html,1,['update'],['updated']
Deployability,"﻿. psi4.driver.copy_file_to_scratch. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.driver.copy_file_to_scratch¶. psi4.driver.copy_file_to_scratch(filename, prefix, namespace, unit, move=False)[source]¶; Function to move file into scratch with correct naming; convention.; Arguments:; @arg filename full path to file; @arg prefix computation prefix, usually ‘psi’; @arg namespace context namespace, usually molecule name; @arg unit unit number, e.g. 32; @arg move copy or move? (default copy); Example:; Assume PID is 12345 and SCRATCH is /scratch/parrish/. copy_file_to_scratch(‘temp’, ‘psi’, ‘h2o’, 32):; -cp ./temp /scratch/parrish/psi.12345.h2o.32; copy_file_to_scratch(‘/tmp/temp’, ‘psi’, ‘h2o’, 32):; -cp /tmp/temp /scratch/parrish/psi.12345.h2o.32; copy_file_to_scratch(‘/tmp/temp’, ‘psi’, ‘’, 32):; -cp /tmp/temp /scratch/parrish/psi.12345.32; copy_file_to_scratch(‘/tmp/temp’, ‘psi’, ‘’, 32, True):; -mv /tmp/temp /scratch/parrish/psi.12345.32. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.driver.copy_file_to_scratch.html:1070,update,updated,1070,psi4manual/1.1.0/api/psi4.driver.copy_file_to_scratch.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.driver.copy_file_to_scratch.html,1,['update'],['updated']
Deployability,"﻿. psi4.driver.create_plugin. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.driver.create_plugin¶. psi4.driver.create_plugin(name, template)[source]¶; Generate plugin in directory with sanitized name based upon template. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.driver.create_plugin.html:338,update,updated,338,psi4manual/1.1.0/api/psi4.driver.create_plugin.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.driver.create_plugin.html,1,['update'],['updated']
Deployability,"﻿. psi4.driver.csx2endict. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.driver.csx2endict¶. psi4.driver.csx2endict()[source]¶; Grabs the CSX file as a dictionary, encodes translation of PSI variables; to XML blocks, gathers all available energies from CSX file into returned; dictionary. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.driver.csx2endict.html:406,update,updated,406,psi4manual/1.1.0/api/psi4.driver.csx2endict.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.driver.csx2endict.html,1,['update'],['updated']
Deployability,"﻿. psi4.driver.cubeprop. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.driver.cubeprop¶. psi4.driver.cubeprop(wfn, **kwargs)[source]¶; Evaluate properties on a grid and generate cube files. New in version 0.5: wfn parameter passed explicitly. Returns:None. Parameters:wfn (Wavefunction) – set of molecule, basis, orbitals from which to generate cube files. Examples:. 1; 2; 3>>> # [1] Cube files for all orbitals; >>> E, wfn = energy('b3lyp', return_wfn=True); >>> cubeprop(wfn). 1; 2; 3; 4; 5; 6>>> # [2] Cube files for density (alpha, beta, total, spin) and four orbitals; >>> # (two alpha, two beta); >>> set cubeprop_tasks ['orbitals', 'density']; >>> set cubeprop_orbitals [5, 6, -5, -6]; >>> E, wfn = energy('scf', return_wfn=True); >>> cubeprop(wfn). Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.driver.cubeprop.html:875,update,updated,875,psi4manual/1.1.0/api/psi4.driver.cubeprop.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.driver.cubeprop.html,1,['update'],['updated']
Deployability,"﻿. psi4.driver.dynamic_variable_bind. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.driver.dynamic_variable_bind¶. psi4.driver.dynamic_variable_bind(cls)[source]¶; Function to dynamically add extra members to; the core.Molecule class. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.driver.dynamic_variable_bind.html:352,update,updated,352,psi4manual/1.1.0/api/psi4.driver.dynamic_variable_bind.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.driver.dynamic_variable_bind.html,1,['update'],['updated']
Deployability,"﻿. psi4.driver.extract_cluster_indexing. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.driver.extract_cluster_indexing¶. psi4.driver.extract_cluster_indexing(mol, cluster_size=0)[source]¶; Function to returns a LIST of all subclusters of the molecule mol of; real size cluster_size. If cluster_size = 0, returns all possible; combinations of cluster size. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.driver.extract_cluster_indexing.html:473,update,updated,473,psi4manual/1.1.0/api/psi4.driver.extract_cluster_indexing.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.driver.extract_cluster_indexing.html,1,['update'],['updated']
Deployability,"﻿. psi4.driver.extract_clusters. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.driver.extract_clusters¶. psi4.driver.extract_clusters(mol, ghost=True, cluster_size=0)[source]¶; Function to return all subclusters of the molecule mol of; real size cluster_size and all other atoms ghosted if ghost; equals true, all other atoms discarded if ghost is false. If; cluster_size = 0, returns all possible combinations of cluster size. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.driver.extract_clusters.html:545,update,updated,545,psi4manual/1.1.0/api/psi4.driver.extract_clusters.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.driver.extract_clusters.html,1,['update'],['updated']
Deployability,"﻿. psi4.driver.fchk. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.driver.fchk¶. psi4.driver.fchk(wfn, filename)[source]¶; Function to write wavefunction information in wfn to filename in; Gaussian FCHK format. New in version 0.6. Returns:None. Parameters:; filename (string) – destination file name for FCHK file; wfn (Wavefunction) – set of molecule, basis, orbitals from which to generate fchk file. Examples:. 1; 2; 3>>> # [1] FCHK file for DFT calculation; >>> E, wfn = energy('b3lyp', return_wfn=True); >>> fchk(wfn, 'mycalc.fchk'). Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.driver.fchk.html:656,update,updated,656,psi4manual/1.1.0/api/psi4.driver.fchk.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.driver.fchk.html,1,['update'],['updated']
Deployability,"﻿. psi4.driver.filter_comments. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.driver.filter_comments¶. psi4.driver.filter_comments(string)[source]¶; Remove from string any Python-style comments (‘#’ to end of line). Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.driver.filter_comments.html:333,update,updated,333,psi4manual/1.1.0/api/psi4.driver.filter_comments.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.driver.filter_comments.html,1,['update'],['updated']
Deployability,"﻿. psi4.driver.find_approximate_string_matches. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.driver.find_approximate_string_matches¶. psi4.driver.find_approximate_string_matches(seq1, options, max_distance)[source]¶; Function to compute approximate string matches from a list of options. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.driver.find_approximate_string_matches.html:406,update,updated,406,psi4manual/1.1.0/api/psi4.driver.find_approximate_string_matches.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.driver.find_approximate_string_matches.html,1,['update'],['updated']
Deployability,"﻿. psi4.driver.gdma. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.driver.gdma¶. psi4.driver.gdma(wfn, datafile='')[source]¶; Function to use wavefunction information in wfn and, if specified,; additional commands in filename to run GDMA analysis. New in version 0.6. Returns:None. Parameters:; wfn (Wavefunction) – set of molecule, basis, orbitals from which to generate DMA analysis; datafile (string) – optional control file (see GDMA manual) to peform more complicated DMA; analyses. If this option is used, the File keyword must be set to read; a filename.fchk, where filename is provided by WRITER_FILE_LABEL . Examples:. 1; 2; 3>>> # [1] DMA analysis from MP2 wavefunction. N.B. gradient must be requested to generate MP2 density.; >>> grad, wfn = gradient('mp2', return_wfn=True); >>> gdma(wfn). Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.driver.gdma.html:921,update,updated,921,psi4manual/1.1.0/api/psi4.driver.gdma.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.driver.gdma.html,1,['update'],['updated']
Deployability,"﻿. psi4.driver.geometry. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.driver.geometry¶. psi4.driver.geometry(geom, name='default')[source]¶; Function to create a molecule object of name name from the; geometry in string geom. Permitted for user use but deprecated; in driver in favor of explicit molecule-passing. Comments within; the string are filtered. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.driver.geometry.html:474,update,updated,474,psi4manual/1.1.0/api/psi4.driver.geometry.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.driver.geometry.html,1,['update'],['updated']
Deployability,"﻿. psi4.driver.getFromDict. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.driver.getFromDict¶. psi4.driver.getFromDict(dataDict, mapList)[source]¶. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.driver.getfromdict.html:265,update,updated,265,psi4manual/1.1.0/api/psi4.driver.getfromdict.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.driver.getfromdict.html,1,['update'],['updated']
Deployability,"﻿. psi4.driver.get_memory. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.driver.get_memory¶. psi4.driver.get_memory()[source]¶; Function to return the total memory allocation. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.driver.get_memory.html:293,update,updated,293,psi4manual/1.1.0/api/psi4.driver.get_memory.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.driver.get_memory.html,1,['update'],['updated']
Deployability,"﻿. psi4.driver.gradient. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.driver.gradient¶. psi4.driver.gradient(name, **kwargs)[source]¶; Function complementary to :py:func:~driver.optimize(). Carries out one gradient pass,; deciding analytic or finite difference. Returns:Matrix – Total electronic gradient in Hartrees/Bohr. Returns:(Matrix, Wavefunction) – gradient and wavefunction when return_wfn specified. Examples:. 1; 2; 3; 4; 5; 6>>> # [1] Single-point dft gradient getting the gradient; >>> # in file, core.Matrix, and np.array forms; >>> set gradient_write on; >>> G, wfn = gradient('b3lyp-d', return_wfn=True); >>> wfn.gradient().print_out(); >>> np.array(G). Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.driver.gradient.html:787,update,updated,787,psi4manual/1.1.0/api/psi4.driver.gradient.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.driver.gradient.html,1,['update'],['updated']
Deployability,"﻿. psi4.driver.hessian. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.driver.hessian¶. psi4.driver.hessian(name, **kwargs)[source]¶; Function complementary to frequency(). Computes force; constants, deciding analytic, finite difference of gradients, or; finite difference of energies. Returns:Matrix – Total non-mass-weighted electronic Hessian in Hartrees/Bohr/Bohr. Returns:(Matrix, Wavefunction) – Hessian and wavefunction when return_wfn specified. Examples:. 1; 2>>> # [1] Frequency calculation without thermochemical analysis; >>> hessian('mp3'). 1; 2; 3; 4; 5; 6>>> # [2] Frequency calc w/o thermo analysis getting the Hessian; >>> # in file, core.Matrix, and np.array forms; >>> set hessian_write on; >>> H, wfn = hessian('ccsd', return_wfn=True); >>> wfn.hessian().print_out(); >>> np.array(H). Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.driver.hessian.html:921,update,updated,921,psi4manual/1.1.0/api/psi4.driver.hessian.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.driver.hessian.html,1,['update'],['updated']
Deployability,"﻿. psi4.driver.join_path. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.driver.join_path¶. psi4.driver.join_path(prefix, *args)[source]¶. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.driver.join_path.html:255,update,updated,255,psi4manual/1.1.0/api/psi4.driver.join_path.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.driver.join_path.html,1,['update'],['updated']
Deployability,"﻿. psi4.driver.levenshtein. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.driver.levenshtein¶. psi4.driver.levenshtein(seq1, seq2)[source]¶; Function to compute the Levenshtein distance between two strings. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.driver.levenshtein.html:324,update,updated,324,psi4manual/1.1.0/api/psi4.driver.levenshtein.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.driver.levenshtein.html,1,['update'],['updated']
Deployability,"﻿. psi4.driver.molecule_get_attr. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.driver.molecule_get_attr¶. psi4.driver.molecule_get_attr(self, name)[source]¶; Function to redefine __getattr__ method of molecule class. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.driver.molecule_get_attr.html:335,update,updated,335,psi4manual/1.1.0/api/psi4.driver.molecule_get_attr.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.driver.molecule_get_attr.html,1,['update'],['updated']
Deployability,"﻿. psi4.driver.molecule_set_attr. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.driver.molecule_set_attr¶. psi4.driver.molecule_set_attr(self, name, value)[source]¶; Function to redefine __setattr__ method of molecule class. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.driver.molecule_set_attr.html:342,update,updated,342,psi4manual/1.1.0/api/psi4.driver.molecule_set_attr.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.driver.molecule_set_attr.html,1,['update'],['updated']
Deployability,"﻿. psi4.driver.oeprop. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.driver.oeprop¶. psi4.driver.oeprop(wfn, *args, **kwargs)[source]¶; Evaluate one-electron properties. Returns:None. Parameters:wfn (Wavefunction) – set of molecule, basis, orbitals from which to compute properties. How to specify args, which are actually the most important. Parameters:title (string) – label prepended to all psivars computed. Examples:. 1; 2; 3>>> # [1] Moments with specific label; >>> E, wfn = energy('hf', return_wfn=True); >>> oeprop(wfn, 'DIPOLE', 'QUADRUPOLE', title='H3O+ SCF'). Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.driver.oeprop.html:689,update,updated,689,psi4manual/1.1.0/api/psi4.driver.oeprop.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.driver.oeprop.html,1,['update'],['updated']
Deployability,"﻿. psi4.driver.pcm_helper. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.driver.pcm_helper¶. psi4.driver.pcm_helper(block)[source]¶; Passes multiline string block to PCMSolver parser. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.driver.pcm_helper.html:301,update,updated,301,psi4manual/1.1.0/api/psi4.driver.pcm_helper.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.driver.pcm_helper.html,1,['update'],['updated']
Deployability,"﻿. psi4.driver.print_stderr. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.driver.print_stderr¶. psi4.driver.print_stderr(stuff)[source]¶; Function to print stuff to standard error stream. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.driver.print_stderr.html:306,update,updated,306,psi4manual/1.1.0/api/psi4.driver.print_stderr.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.driver.print_stderr.html,1,['update'],['updated']
Deployability,"﻿. psi4.driver.print_stdout. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.driver.print_stdout¶. psi4.driver.print_stdout(stuff)[source]¶; Function to print stuff to standard output stream. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.driver.print_stdout.html:307,update,updated,307,psi4manual/1.1.0/api/psi4.driver.print_stdout.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.driver.print_stdout.html,1,['update'],['updated']
Deployability,"﻿. psi4.driver.process_input. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.driver.process_input¶. psi4.driver.process_input(raw_input, print_level=1)[source]¶; Function to preprocess raw input, the text of the input file, then; parse it, validate it for format, and convert it into legitimate Python.; raw_input is printed to the output file unless print_level =0. Does; a series of regular expression filters, where the matching portion of the; input is replaced by the output of the corresponding function (in this; module) call. Returns a string concatenating module import lines, a copy; of the user’s .psi4rc files, a setting of the scratch directory, a dummy; molecule, and the processed raw_input. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.driver.process_input.html:823,update,updated,823,psi4manual/1.1.0/api/psi4.driver.process_input.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.driver.process_input.html,1,['update'],['updated']
Deployability,"﻿. psi4.driver.process_pubchem_command. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.driver.process_pubchem_command¶. psi4.driver.process_pubchem_command(matchobj)[source]¶; Function to process match of pubchem in molecule block. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.driver.process_pubchem_command.html:348,update,updated,348,psi4manual/1.1.0/api/psi4.driver.process_pubchem_command.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.driver.process_pubchem_command.html,1,['update'],['updated']
Deployability,"﻿. psi4.driver.sanitize_name. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.driver.sanitize_name¶. psi4.driver.sanitize_name(name)[source]¶; Function to return name in coded form, stripped of; characters that confuse filenames, characters into lowercase,; + into p, * into s, and (, ), -,; & , into _.; Also checks the sanitized name against a list of restricted C++ keywords. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.driver.sanitize_name.html:494,update,updated,494,psi4manual/1.1.0/api/psi4.driver.sanitize_name.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.driver.sanitize_name.html,1,['update'],['updated']
Deployability,"﻿. psi4.driver.scf_helper. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.driver.scf_helper¶. psi4.driver.scf_helper(name, **kwargs)[source]¶; Function serving as helper to SCF, choosing whether to cast; up or just run SCF with a standard guess. This preserves; previous SCF options set by other procedures (e.g., SAPT; output file types for SCF). Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.driver.scf_helper.html:464,update,updated,464,psi4manual/1.1.0/api/psi4.driver.scf_helper.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.driver.scf_helper.html,1,['update'],['updated']
Deployability,"﻿. psi4.driver.scf_wavefunction_factory. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.driver.scf_wavefunction_factory¶. psi4.driver.scf_wavefunction_factory(reference, ref_wfn, functional=None)[source]¶; Builds the correct wavefunction from the provided information. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.driver.scf_wavefunction_factory.html:385,update,updated,385,psi4manual/1.1.0/api/psi4.driver.scf_wavefunction_factory.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.driver.scf_wavefunction_factory.html,1,['update'],['updated']
Deployability,"﻿. psi4.driver.set_memory. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.driver.set_memory¶. psi4.driver.set_memory(inputval, execute=True)[source]¶; Function to reset the total memory allocation. Takes memory value; inputval as type int, float, or str; int and float are taken literally; as bytes to be set, string taken as a unit-containing value (e.g., 30 mb); which is case-insensitive. Set execute to False to interpret inputval; without setting in Psi4 core. Returns:memory_amount (float) Number of bytes of memory set. Raises:ValidationError when <500MiB or disallowed type or misformatted. Examples:. 1; 2; 3; 4>>> # [1] Passing absolute number of bytes; >>> psi4.set_memory(600000000); >>> psi4.get_memory(); Out[1]: 600000000L. 1; 2; 3; 4>>> # [2] Passing memory value as string with units; >>> psi4.set_memory('30 GB'); >>> psi4.get_memory(); Out[2]: 30000000000L. Good examples:. 800000000 # 800000000; 2004088624.9 # 2004088624; 1.0e9 # 1000000000; ‘600 mb’ # 600000000; ‘600.0 MiB’ # 629145600; ‘.6 Gb’ # 600000000; ‘ 100000000kB ‘ # 100000000000; ‘2 eb’ # 2000000000000000000. Bad examples:. {} # odd type; ‘’ # no info; “8 dimms” # unacceptable units; “1e5 gb” # string w/ exponent; “5e5” # string w/o units; 2000 # mem too small; -5e5 # negative (and too small). Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.driver.set_memory.html:1397,update,updated,1397,psi4manual/1.1.0/api/psi4.driver.set_memory.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.driver.set_memory.html,1,['update'],['updated']
Deployability,"﻿. psi4.driver.set_module_options. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.driver.set_module_options¶. psi4.driver.set_module_options(module, options_dict)[source]¶; Sets Psi4 module options from a module specification and input dictionary. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.driver.set_module_options.html:364,update,updated,364,psi4manual/1.1.0/api/psi4.driver.set_module_options.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.driver.set_module_options.html,1,['update'],['updated']
Deployability,"﻿. psi4.driver.set_options. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.driver.set_options¶. psi4.driver.set_options(options_dict)[source]¶; Sets Psi4 global options from an input dictionary. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.driver.set_options.html:311,update,updated,311,psi4manual/1.1.0/api/psi4.driver.set_options.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.driver.set_options.html,1,['update'],['updated']
Deployability,"﻿. psi4.driver.success. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.driver.success¶. psi4.driver.success(label)[source]¶; Function to print a ‘label...PASSED’ line to screen.; Used by util.compare_values() family when functions pass. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.driver.success.html:353,update,updated,353,psi4manual/1.1.0/api/psi4.driver.success.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.driver.success.html,1,['update'],['updated']
Deployability,"﻿. psi4.driver.util.filesystem. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. Module code. Source code for psi4.driver.util.filesystem; #; # @BEGIN LICENSE; #; # Psi4: an open-source quantum chemistry software package; #; # Copyright (c) 2007-2017 The Psi4 Developers.; #; # The copyrights for code used from other parties are included in; # the corresponding files.; #; # This file is part of Psi4.; #; # Psi4 is free software; you can redistribute it and/or modify; # it under the terms of the GNU Lesser General Public License as published by; # the Free Software Foundation, version 3.; #; # Psi4 is distributed in the hope that it will be useful,; # but WITHOUT ANY WARRANTY; without even the implied warranty of; # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the; # GNU Lesser General Public License for more details.; #; # You should have received a copy of the GNU Lesser General Public License along; # with Psi4; if not, write to the Free Software Foundation, Inc.,; # 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.; #; # @END LICENSE; #. import os. [docs]def join_path(prefix, *args):; path = str(prefix); for elt in args:; path = os.path.join(path, str(elt)); return path. [docs]def ancestor(dir, n=1):; """"""Get the nth ancestor of a directory.""""""; parent = os.path.abspath(dir); for i in range(n):; parent = os.path.dirname(parent); return parent. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. Module code. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/_modules/psi4/driver/util/filesystem.html:1511,update,updated,1511,psi4manual/1.1.0/_modules/psi4/driver/util/filesystem.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/_modules/psi4/driver/util/filesystem.html,1,['update'],['updated']
Deployability,"﻿. psi4.driver.util.filesystem. Navigation. Index. modules    .    .  · ; 1.2.1;  · . PSI4. Module code. Source code for psi4.driver.util.filesystem; #; # @BEGIN LICENSE; #; # Psi4: an open-source quantum chemistry software package; #; # Copyright (c) 2007-2018 The Psi4 Developers.; #; # The copyrights for code used from other parties are included in; # the corresponding files.; #; # This file is part of Psi4.; #; # Psi4 is free software; you can redistribute it and/or modify; # it under the terms of the GNU Lesser General Public License as published by; # the Free Software Foundation, version 3.; #; # Psi4 is distributed in the hope that it will be useful,; # but WITHOUT ANY WARRANTY; without even the implied warranty of; # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the; # GNU Lesser General Public License for more details.; #; # You should have received a copy of the GNU Lesser General Public License along; # with Psi4; if not, write to the Free Software Foundation, Inc.,; # 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.; #; # @END LICENSE; #. import os. [docs]def join_path(prefix, *args):; path = str(prefix); for elt in args:; path = os.path.join(path, str(elt)); return path. [docs]def ancestor(dir, n=1):; """"""Get the nth ancestor of a directory.""""""; parent = os.path.abspath(dir); for i in range(n):; parent = os.path.dirname(parent); return parent. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .  · ; 1.2.1;  · . PSI4. Module code. © Copyright 2018, The Psi4 Project.; Last updated on Wednesday, 25 July 2018 04:21AM.; Created using Sphinx 1.7.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/_modules/psi4/driver/util/filesystem.html:1549,update,updated,1549,psi4manual/1.2.1/_modules/psi4/driver/util/filesystem.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/_modules/psi4/driver/util/filesystem.html,1,['update'],['updated']
Deployability,"﻿. psi4.driver.util.filesystem. Navigation. Index. modules    .    .  · ; 1.3.2;  · . PSI4. Module code. Source code for psi4.driver.util.filesystem; #; # @BEGIN LICENSE; #; # Psi4: an open-source quantum chemistry software package; #; # Copyright (c) 2007-2019 The Psi4 Developers.; #; # The copyrights for code used from other parties are included in; # the corresponding files.; #; # This file is part of Psi4.; #; # Psi4 is free software; you can redistribute it and/or modify; # it under the terms of the GNU Lesser General Public License as published by; # the Free Software Foundation, version 3.; #; # Psi4 is distributed in the hope that it will be useful,; # but WITHOUT ANY WARRANTY; without even the implied warranty of; # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the; # GNU Lesser General Public License for more details.; #; # You should have received a copy of the GNU Lesser General Public License along; # with Psi4; if not, write to the Free Software Foundation, Inc.,; # 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.; #; # @END LICENSE; #. import os. [docs]def join_path(prefix, *args):; path = str(prefix); for elt in args:; path = os.path.join(path, str(elt)); return path. [docs]def ancestor(dir, n=1):; """"""Get the nth ancestor of a directory.""""""; parent = os.path.abspath(dir); for i in range(n):; parent = os.path.dirname(parent); return parent. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .  · ; 1.3.2;  · . PSI4. Module code. © Copyright 2019, The Psi4 Project.; Last updated on Wednesday, 15 May 2019 08:49PM.; Created using Sphinx 1.8.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/_modules/psi4/driver/util/filesystem.html:1549,update,updated,1549,psi4manual/1.3.2/_modules/psi4/driver/util/filesystem.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/_modules/psi4/driver/util/filesystem.html,1,['update'],['updated']
Deployability,"﻿. psi4.driver.util.filesystem. Navigation. Index. modules    .    .  · ; 1.4;  · . PSI4. Module code; psi4.driver.util.filesystem. Source code for psi4.driver.util.filesystem; #; # @BEGIN LICENSE; #; # Psi4: an open-source quantum chemistry software package; #; # Copyright (c) 2007-2021 The Psi4 Developers.; #; # The copyrights for code used from other parties are included in; # the corresponding files.; #; # This file is part of Psi4.; #; # Psi4 is free software; you can redistribute it and/or modify; # it under the terms of the GNU Lesser General Public License as published by; # the Free Software Foundation, version 3.; #; # Psi4 is distributed in the hope that it will be useful,; # but WITHOUT ANY WARRANTY; without even the implied warranty of; # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the; # GNU Lesser General Public License for more details.; #; # You should have received a copy of the GNU Lesser General Public License along; # with Psi4; if not, write to the Free Software Foundation, Inc.,; # 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.; #; # @END LICENSE; #. import os. [docs]def join_path(prefix, *args):; path = str(prefix); for elt in args:; path = os.path.join(path, str(elt)); return path. [docs]def ancestor(dir, n=1):; """"""Get the nth ancestor of a directory.""""""; parent = os.path.abspath(dir); for i in range(n):; parent = os.path.dirname(parent); return parent. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .  · ; 1.4;  · . PSI4. Module code; psi4.driver.util.filesystem. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/_modules/psi4/driver/util/filesystem.html:1603,update,updated,1603,psi4manual/1.4.0/_modules/psi4/driver/util/filesystem.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/_modules/psi4/driver/util/filesystem.html,1,['update'],['updated']
Deployability,"﻿. psi4.driver.util.filesystem. Navigation. Index. modules    .    .  · ; 1.5;  · . PSI4. Module code; psi4.driver.util.filesystem. Source code for psi4.driver.util.filesystem; #; # @BEGIN LICENSE; #; # Psi4: an open-source quantum chemistry software package; #; # Copyright (c) 2007-2021 The Psi4 Developers.; #; # The copyrights for code used from other parties are included in; # the corresponding files.; #; # This file is part of Psi4.; #; # Psi4 is free software; you can redistribute it and/or modify; # it under the terms of the GNU Lesser General Public License as published by; # the Free Software Foundation, version 3.; #; # Psi4 is distributed in the hope that it will be useful,; # but WITHOUT ANY WARRANTY; without even the implied warranty of; # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the; # GNU Lesser General Public License for more details.; #; # You should have received a copy of the GNU Lesser General Public License along; # with Psi4; if not, write to the Free Software Foundation, Inc.,; # 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.; #; # @END LICENSE; #. import os. [docs]def join_path(prefix, *args):; path = str(prefix); for elt in args:; path = os.path.join(path, str(elt)); return path. [docs]def ancestor(dir, n=1):; """"""Get the nth ancestor of a directory.""""""; parent = os.path.abspath(dir); for i in range(n):; parent = os.path.dirname(parent); return parent. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .  · ; 1.5;  · . PSI4. Module code; psi4.driver.util.filesystem. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/_modules/psi4/driver/util/filesystem.html:1603,update,updated,1603,psi4manual/1.5.0/_modules/psi4/driver/util/filesystem.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/_modules/psi4/driver/util/filesystem.html,1,['update'],['updated']
Deployability,"﻿. psi4.driver.util.filesystem. Navigation. Index. modules    .    .  · ; 1.6;  · . PSI4. Module code; psi4.driver.util.filesystem. Source code for psi4.driver.util.filesystem; #; # @BEGIN LICENSE; #; # Psi4: an open-source quantum chemistry software package; #; # Copyright (c) 2007-2022 The Psi4 Developers.; #; # The copyrights for code used from other parties are included in; # the corresponding files.; #; # This file is part of Psi4.; #; # Psi4 is free software; you can redistribute it and/or modify; # it under the terms of the GNU Lesser General Public License as published by; # the Free Software Foundation, version 3.; #; # Psi4 is distributed in the hope that it will be useful,; # but WITHOUT ANY WARRANTY; without even the implied warranty of; # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the; # GNU Lesser General Public License for more details.; #; # You should have received a copy of the GNU Lesser General Public License along; # with Psi4; if not, write to the Free Software Foundation, Inc.,; # 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.; #; # @END LICENSE; #. import os. [docs]def join_path(prefix, *args):; path = str(prefix); for elt in args:; path = os.path.join(path, str(elt)); return path. [docs]def ancestor(dir, n=1):; """"""Get the nth ancestor of a directory.""""""; parent = os.path.abspath(dir); for i in range(n):; parent = os.path.dirname(parent); return parent. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .  · ; 1.6;  · . PSI4. Module code; psi4.driver.util.filesystem. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/_modules/psi4/driver/util/filesystem.html:1603,update,updated,1603,psi4manual/1.6.x/_modules/psi4/driver/util/filesystem.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/_modules/psi4/driver/util/filesystem.html,1,['update'],['updated']
Deployability,"﻿. psi4.driver.xml2dict. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.driver.xml2dict¶. psi4.driver.xml2dict(filename=None)[source]¶; Read XML filename into nested OrderedDict-s. filename defaults to; active CSX file. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.driver.xml2dict.html:336,update,updated,336,psi4manual/1.1.0/api/psi4.driver.xml2dict.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.driver.xml2dict.html,1,['update'],['updated']
Deployability,"﻿. psi_top_srcdir. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; psi_top_srcdir. psi_top_srcdir¶. psi4.core.psi_top_srcdir() → str¶; Returns the location of the source code. table of contents. psi_top_srcdir; psi_top_srcdir(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; psi_top_srcdir. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/api/psi4.core.psi_top_srcdir.html:500,update,updated,500,psi4manual/master/api/psi4.core.psi_top_srcdir.html,https://psicode.org,https://psicode.org/psi4manual/master/api/psi4.core.psi_top_srcdir.html,1,['update'],['updated']
Deployability,"﻿. psi_top_srcdir. Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. psi_top_srcdir¶. psi4.core.psi_top_srcdir() → str¶; Returns the location of the source code. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2018, The Psi4 Project.; Last updated on Wednesday, 25 July 2018 04:21AM.; Created using Sphinx 1.7.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/api/psi4.core.psi_top_srcdir-1.html:396,update,updated,396,psi4manual/1.2.1/api/psi4.core.psi_top_srcdir-1.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/api/psi4.core.psi_top_srcdir-1.html,2,['update'],['updated']
Deployability,"﻿. psi_top_srcdir. Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. psi_top_srcdir¶. psi4.core.psi_top_srcdir() → str¶; Returns the location of the source code. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2019, The Psi4 Project.; Last updated on Wednesday, 15 May 2019 08:49PM.; Created using Sphinx 1.8.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/api/psi4.core.psi_top_srcdir-1.html:396,update,updated,396,psi4manual/1.3.2/api/psi4.core.psi_top_srcdir-1.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/api/psi4.core.psi_top_srcdir-1.html,2,['update'],['updated']
Deployability,"﻿. psi_top_srcdir. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; psi_top_srcdir. psi_top_srcdir¶. psi4.core.psi_top_srcdir() → str¶; Returns the location of the source code. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; psi_top_srcdir. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/api/psi4.core.psi_top_srcdir-1.html:424,update,updated,424,psi4manual/1.4.0/api/psi4.core.psi_top_srcdir-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/api/psi4.core.psi_top_srcdir-1.html,2,['update'],['updated']
Deployability,"﻿. psi_top_srcdir. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; psi_top_srcdir. psi_top_srcdir¶. psi4.core.psi_top_srcdir() → str¶; Returns the location of the source code. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; psi_top_srcdir. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/api/psi4.core.psi_top_srcdir-1.html:424,update,updated,424,psi4manual/1.5.0/api/psi4.core.psi_top_srcdir-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/api/psi4.core.psi_top_srcdir-1.html,2,['update'],['updated']
Deployability,"﻿. psi_top_srcdir. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; psi_top_srcdir. psi_top_srcdir¶. psi4.core.psi_top_srcdir() → str¶; Returns the location of the source code. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; psi_top_srcdir. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/api/psi4.core.psi_top_srcdir.html:424,update,updated,424,psi4manual/1.6.x/api/psi4.core.psi_top_srcdir.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/api/psi4.core.psi_top_srcdir.html,1,['update'],['updated']
Deployability,"﻿. psi_top_srcdir. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; psi_top_srcdir. psi_top_srcdir¶. psi4.core.psi_top_srcdir() → str¶; Returns the location of the source code. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; psi_top_srcdir. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/api/psi4.core.psi_top_srcdir.html:429,update,updated,429,psi4manual/1.7.x/api/psi4.core.psi_top_srcdir.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/api/psi4.core.psi_top_srcdir.html,1,['update'],['updated']
Deployability,"﻿. psi_top_srcdir. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; psi_top_srcdir. psi_top_srcdir¶. psi4.core.psi_top_srcdir() → str¶; Returns the location of the source code. table of contents. psi_top_srcdir; psi_top_srcdir(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; psi_top_srcdir. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/api/psi4.core.psi_top_srcdir.html:486,update,updated,486,psi4manual/1.8.x/api/psi4.core.psi_top_srcdir.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/api/psi4.core.psi_top_srcdir.html,1,['update'],['updated']
Deployability,"﻿. psi_top_srcdir. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; psi_top_srcdir. psi_top_srcdir¶. psi4.core.psi_top_srcdir() → str¶; Returns the location of the source code. table of contents. psi_top_srcdir; psi_top_srcdir(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; psi_top_srcdir. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/api/psi4.core.psi_top_srcdir.html:486,update,updated,486,psi4manual/1.9.x/api/psi4.core.psi_top_srcdir.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/api/psi4.core.psi_top_srcdir.html,1,['update'],['updated']
Deployability,"﻿. psiexceptions — PSI4 [beta2] documentation. Navigation. index. modules |; PSI4 [beta2] » ; Module code ». Source code for psiexceptions; """"""Module with non-generic exceptions classes.""""""; import PsiMod. [docs]class PsiException(Exception):; """"""Error class for Psi.""""""; pass. [docs]class ValidationError(PsiException):; """"""Error called for problems with the input file. Prints; error message *msg* to standard output stream and output file. """"""; def __init__(self, msg):; PsiException.__init__(self, msg); self.msg = msg; PsiMod.print_out('\nPsiException: %s\n\n' % (msg)). Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules |; PSI4 [beta2] » ; Module code ». © Copyright 2012, Psi4 Project.; Last updated on Aug 25, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b2/_modules/psiexceptions.html:749,update,updated,749,psi4manual/4.0b2/_modules/psiexceptions.html,https://psicode.org,https://psicode.org/psi4manual/4.0b2/_modules/psiexceptions.html,1,['update'],['updated']
Deployability,"﻿. psiexceptions — PSI4 [beta3] documentation. Navigation. index. modules    . toc    ; PSI4 [beta3] » ; Module code ». Source code for psiexceptions; """"""Module with non-generic exceptions classes.""""""; import PsiMod. [docs]class PsiException(Exception):; """"""Error class for Psi.""""""; pass. [docs]class ValidationError(PsiException):; """"""Error called for problems with the input file. Prints; error message *msg* to standard output stream and output file. """"""; def __init__(self, msg):; PsiException.__init__(self, msg); self.msg = msg; PsiMod.print_out('\nPsiException: %s\n\n' % (msg)). Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    ; PSI4 [beta3] » ; Module code ». © Copyright 2012, The Psi4 Project.; Last updated on Apr 05, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b3/_modules/psiexceptions.html:775,update,updated,775,psi4manual/4.0b3/_modules/psiexceptions.html,https://psicode.org,https://psicode.org/psi4manual/4.0b3/_modules/psiexceptions.html,1,['update'],['updated']
Deployability,"﻿. psiexceptions — PSI4 [beta4] documentation. Navigation. index. modules    . toc    ; PSI4 [beta4] » ; Module code ». Source code for psiexceptions; """"""Module with non-generic exceptions classes.""""""; import PsiMod. [docs]class PsiException(Exception):; """"""Error class for Psi.""""""; pass. [docs]class ValidationError(PsiException):; """"""Error called for problems with the input file. Prints; error message *msg* to standard output stream and output file. """"""; def __init__(self, msg):; PsiException.__init__(self, msg); self.msg = msg; PsiMod.print_out('\nPsiException: %s\n\n' % (msg)). Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    ; PSI4 [beta4] » ; Module code ». © Copyright 2013, The Psi4 Project.; Last updated on Mar 20, 2014.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b4/_modules/psiexceptions.html:775,update,updated,775,psi4manual/4.0b4/_modules/psiexceptions.html,https://psicode.org,https://psicode.org/psi4manual/4.0b4/_modules/psiexceptions.html,1,['update'],['updated']
Deployability,"﻿. psiexceptions — PSI4 [beta5] documentation. Navigation. index. modules    . toc    ; PSI4 [beta5] » ; Module code ». Source code for psiexceptions; #; #@BEGIN LICENSE; #; # PSI4: an ab initio quantum chemistry software package; #; # This program is free software; you can redistribute it and/or modify; # it under the terms of the GNU General Public License as published by; # the Free Software Foundation; either version 2 of the License, or; # (at your option) any later version.; #; # This program is distributed in the hope that it will be useful,; # but WITHOUT ANY WARRANTY; without even the implied warranty of; # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the; # GNU General Public License for more details.; #; # You should have received a copy of the GNU General Public License along; # with this program; if not, write to the Free Software Foundation, Inc.,; # 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.; #; #@END LICENSE; #. """"""Module with non-generic exceptions classes.""""""; import psi4. [docs]class PsiException(Exception):; """"""Error class for Psi.""""""; pass. [docs]class ValidationError(PsiException):; """"""Error called for problems with the input file. Prints; error message *msg* to standard output stream and output file. """"""; def __init__(self, msg):; PsiException.__init__(self, msg); self.msg = msg; psi4.print_out('\nPsiException: %s\n\n' % (msg)). Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    ; PSI4 [beta5] » ; Module code ». © Copyright 2013, The Psi4 Project.; Last updated on Jul 08, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b5/_modules/psiexceptions.html:1591,update,updated,1591,psi4manual/4.0b5/_modules/psiexceptions.html,https://psicode.org,https://psicode.org/psi4manual/4.0b5/_modules/psiexceptions.html,1,['update'],['updated']
Deployability,"﻿. psimrcc. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; psimrcc. psimrcc¶. psi4.core.psimrcc(arg0: psi4.core.Wavefunction) → psi4.core.Wavefunction¶; Runs the multireference coupled cluster code. table of contents. psimrcc; psimrcc(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; psimrcc. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/api/psi4.core.psimrcc.html:503,update,updated,503,psi4manual/master/api/psi4.core.psimrcc.html,https://psicode.org,https://psicode.org/psi4manual/master/api/psi4.core.psimrcc.html,1,['update'],['updated']
Deployability,"﻿. psimrcc. Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. psimrcc¶. psi4.core.psimrcc(arg0: psi::Wavefunction) → float¶; Runs the multireference coupled cluster code. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2018, The Psi4 Project.; Last updated on Wednesday, 25 July 2018 04:21AM.; Created using Sphinx 1.7.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/api/psi4.core.psimrcc-1.html:405,update,updated,405,psi4manual/1.2.1/api/psi4.core.psimrcc-1.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/api/psi4.core.psimrcc-1.html,2,['update'],['updated']
Deployability,"﻿. psimrcc. Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. psimrcc¶. psi4.core.psimrcc(arg0: psi::Wavefunction) → float¶; Runs the multireference coupled cluster code. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2019, The Psi4 Project.; Last updated on Wednesday, 15 May 2019 08:49PM.; Created using Sphinx 1.8.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/api/psi4.core.psimrcc-1.html:405,update,updated,405,psi4manual/1.3.2/api/psi4.core.psimrcc-1.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/api/psi4.core.psimrcc-1.html,2,['update'],['updated']
Deployability,"﻿. psimrcc. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; psimrcc. psimrcc¶. psi4.core.psimrcc(arg0: psi4.core.Wavefunction) → psi4.core.Wavefunction¶; Runs the multireference coupled cluster code. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; psimrcc. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/api/psi4.core.psimrcc-1.html:441,update,updated,441,psi4manual/1.4.0/api/psi4.core.psimrcc-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/api/psi4.core.psimrcc-1.html,2,['update'],['updated']
Deployability,"﻿. psimrcc. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; psimrcc. psimrcc¶. psi4.core.psimrcc(arg0: psi4.core.Wavefunction) → psi4.core.Wavefunction¶; Runs the multireference coupled cluster code. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; psimrcc. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/api/psi4.core.psimrcc-1.html:441,update,updated,441,psi4manual/1.5.0/api/psi4.core.psimrcc-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/api/psi4.core.psimrcc-1.html,2,['update'],['updated']
Deployability,"﻿. psimrcc. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; psimrcc. psimrcc¶. psi4.core.psimrcc(arg0: psi4.core.Wavefunction) → psi4.core.Wavefunction¶; Runs the multireference coupled cluster code. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; psimrcc. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/api/psi4.core.psimrcc.html:441,update,updated,441,psi4manual/1.6.x/api/psi4.core.psimrcc.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/api/psi4.core.psimrcc.html,1,['update'],['updated']
Deployability,"﻿. psimrcc. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; psimrcc. psimrcc¶. psi4.core.psimrcc(arg0: psi4.core.Wavefunction) → psi4.core.Wavefunction¶; Runs the multireference coupled cluster code. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; psimrcc. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/api/psi4.core.psimrcc.html:446,update,updated,446,psi4manual/1.7.x/api/psi4.core.psimrcc.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/api/psi4.core.psimrcc.html,1,['update'],['updated']
Deployability,"﻿. psimrcc. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; psimrcc. psimrcc¶. psi4.core.psimrcc(arg0: psi4.core.Wavefunction) → psi4.core.Wavefunction¶; Runs the multireference coupled cluster code. table of contents. psimrcc; psimrcc(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; psimrcc. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/api/psi4.core.psimrcc.html:489,update,updated,489,psi4manual/1.8.x/api/psi4.core.psimrcc.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/api/psi4.core.psimrcc.html,1,['update'],['updated']
Deployability,"﻿. psimrcc. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; psimrcc. psimrcc¶. psi4.core.psimrcc(arg0: psi4.core.Wavefunction) → psi4.core.Wavefunction¶; Runs the multireference coupled cluster code. table of contents. psimrcc; psimrcc(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; psimrcc. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/api/psi4.core.psimrcc.html:489,update,updated,489,psi4manual/1.9.x/api/psi4.core.psimrcc.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/api/psi4.core.psimrcc.html,1,['update'],['updated']
Deployability,"﻿. psio_entry. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; psio_entry. psio_entry¶. class psi4.core.psio_entry¶; Bases: pybind11_object; docstring. table of contents. psio_entry; psio_entry. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; psio_entry. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/api/psi4.core.psio_entry.html:462,update,updated,462,psi4manual/master/api/psi4.core.psio_entry.html,https://psicode.org,https://psicode.org/psi4manual/master/api/psi4.core.psio_entry.html,1,['update'],['updated']
Deployability,"﻿. psio_entry. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; psio_entry. psio_entry¶. class psi4.core.psio_entry¶; Bases: pybind11_builtins.pybind11_object; docstring. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; psio_entry. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/api/psi4.core.psio_entry-1.html:414,update,updated,414,psi4manual/1.4.0/api/psi4.core.psio_entry-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/api/psi4.core.psio_entry-1.html,2,['update'],['updated']
Deployability,"﻿. psio_entry. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; psio_entry. psio_entry¶. class psi4.core.psio_entry¶; Bases: pybind11_builtins.pybind11_object; docstring. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; psio_entry. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/api/psi4.core.psio_entry-1.html:414,update,updated,414,psi4manual/1.5.0/api/psi4.core.psio_entry-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/api/psi4.core.psio_entry-1.html,2,['update'],['updated']
Deployability,"﻿. psio_entry. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; psio_entry. psio_entry¶. class psi4.core.psio_entry¶; Bases: pybind11_builtins.pybind11_object; docstring. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; psio_entry. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/api/psi4.core.psio_entry.html:414,update,updated,414,psi4manual/1.6.x/api/psi4.core.psio_entry.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/api/psi4.core.psio_entry.html,1,['update'],['updated']
Deployability,"﻿. psio_entry. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; psio_entry. psio_entry¶. class psi4.core.psio_entry¶; Bases: pybind11_object; docstring. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; psio_entry. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/api/psi4.core.psio_entry.html:401,update,updated,401,psi4manual/1.7.x/api/psi4.core.psio_entry.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/api/psi4.core.psio_entry.html,1,['update'],['updated']
Deployability,"﻿. psio_entry. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; psio_entry. psio_entry¶. class psi4.core.psio_entry¶; Bases: pybind11_object; docstring. table of contents. psio_entry; psio_entry. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; psio_entry. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/api/psi4.core.psio_entry.html:448,update,updated,448,psi4manual/1.8.x/api/psi4.core.psio_entry.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/api/psi4.core.psio_entry.html,1,['update'],['updated']
Deployability,"﻿. psio_entry. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; psio_entry. psio_entry¶. class psi4.core.psio_entry¶; Bases: pybind11_object; docstring. table of contents. psio_entry; psio_entry. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; psio_entry. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/api/psi4.core.psio_entry.html:448,update,updated,448,psi4manual/1.9.x/api/psi4.core.psio_entry.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/api/psi4.core.psio_entry.html,1,['update'],['updated']
Deployability,"﻿. qcdb.dbproc — PSI4 [beta3] documentation. Navigation. index. modules    . toc    ; PSI4 [beta3] » ; Module code ». Source code for qcdb.dbproc; r""""""File to. """""". [docs]def useful():; pass. [docs]def dictify_database_docstrings():; pass. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    ; PSI4 [beta3] » ; Module code ». © Copyright 2012, The Psi4 Project.; Last updated on Apr 05, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b3/_modules/qcdb/dbproc.html:428,update,updated,428,psi4manual/4.0b3/_modules/qcdb/dbproc.html,https://psicode.org,https://psicode.org/psi4manual/4.0b3/_modules/qcdb/dbproc.html,1,['update'],['updated']
Deployability,"﻿. qcdb.dbproc — PSI4 [beta4] documentation. Navigation. index. modules    . toc    ; PSI4 [beta4] » ; Module code ». Source code for qcdb.dbproc; r""""""File to. """""". [docs]def useful():; pass. [docs]def dictify_database_docstrings():; pass. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    ; PSI4 [beta4] » ; Module code ». © Copyright 2013, The Psi4 Project.; Last updated on Mar 20, 2014.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b4/_modules/qcdb/dbproc.html:428,update,updated,428,psi4manual/4.0b4/_modules/qcdb/dbproc.html,https://psicode.org,https://psicode.org/psi4manual/4.0b4/_modules/qcdb/dbproc.html,1,['update'],['updated']
Deployability,"﻿. qcdb.exceptions — PSI4 [beta3] documentation. Navigation. index. modules    . toc    ; PSI4 [beta3] » ; Module code ». Source code for qcdb.exceptions; """"""Module with non-generic exceptions classes."""""". [docs]class QcdbException(Exception):; """"""Error class for QCDB.""""""; pass. [docs]class FeatureNotImplemented(QcdbException):; """"""Error called for functions defined but not yet implemented.; Also for functions defined that will never be implemented. """"""; def __init__(self, msg):; QcdbException.__init__(self, msg); self.msg = msg; print('\nQcdbException: Feature %s is not yet implemented.\n\n' % (msg)). [docs]class ValidationError(QcdbException):; """"""Error called for problems with syntax input file. Prints; error message *msg* to standard output stream. """"""; def __init__(self, msg):; QcdbException.__init__(self, msg); self.msg = msg; print('\nQcdbException: %s\n\n' % (msg)). [docs]class IncompleteAtomError(QcdbException):; """"""Error raised when not all variables in an atom specification; have been defined at compute time. May be a temporary situation; so message not printed but appears as traceback when error persists. """"""; def __init__(self, msg):; QcdbException.__init__(self, msg); self.msg = msg. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    ; PSI4 [beta3] » ; Module code ». © Copyright 2012, The Psi4 Project.; Last updated on Apr 05, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b3/_modules/qcdb/exceptions.html:1405,update,updated,1405,psi4manual/4.0b3/_modules/qcdb/exceptions.html,https://psicode.org,https://psicode.org/psi4manual/4.0b3/_modules/qcdb/exceptions.html,1,['update'],['updated']
Deployability,"﻿. qcdb.exceptions — PSI4 [beta4] documentation. Navigation. index. modules    . toc    ; PSI4 [beta4] » ; Module code ». Source code for qcdb.exceptions; """"""Module with non-generic exceptions classes."""""". [docs]class QcdbException(Exception):; """"""Error class for QCDB.""""""; pass. [docs]class FeatureNotImplemented(QcdbException):; """"""Error called for functions defined but not yet implemented.; Also for functions defined that will never be implemented. """"""; def __init__(self, msg):; QcdbException.__init__(self, msg); self.msg = msg; print('\nQcdbException: Feature %s is not yet implemented.\n\n' % (msg)). [docs]class ValidationError(QcdbException):; """"""Error called for problems with syntax input file. Prints; error message *msg* to standard output stream. """"""; def __init__(self, msg):; QcdbException.__init__(self, msg); self.msg = msg; print('\nQcdbException: %s\n\n' % (msg)). [docs]class IncompleteAtomError(QcdbException):; """"""Error raised when not all variables in an atom specification; have been defined at compute time. May be a temporary situation; so message not printed but appears as traceback when error persists. """"""; def __init__(self, msg):; QcdbException.__init__(self, msg); self.msg = msg. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    ; PSI4 [beta4] » ; Module code ». © Copyright 2013, The Psi4 Project.; Last updated on Mar 20, 2014.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b4/_modules/qcdb/exceptions.html:1405,update,updated,1405,psi4manual/4.0b4/_modules/qcdb/exceptions.html,https://psicode.org,https://psicode.org/psi4manual/4.0b4/_modules/qcdb/exceptions.html,1,['update'],['updated']
Deployability,"﻿. qcdb.oldpymodules — Psi4 [1.0.0 6a9a71b] Docs. Navigation. index. modules    . toc    ; Psi4 [1.0.0 6a9a71b] » ; Module code ». Source code for qcdb.oldpymodules; # Obtained from http://code.activestate.com/recipes/576693/ on 15 Nov 2014. # Backport of OrderedDict() class that runs on Python 2.4, 2.5, 2.6, 2.7 and pypy.; # Passes Python2.7's test suite and incorporates all the latest updates. from __future__ import absolute_import; from __future__ import print_function; try:; from thread import get_ident as _get_ident; except ImportError:; from dummy_thread import get_ident as _get_ident. try:; from _abcoll import KeysView, ValuesView, ItemsView; except ImportError:; pass. [docs]class OrderedDict(dict):; 'Dictionary that remembers insertion order'; # An inherited dict maps keys to values.; # The inherited dict provides __getitem__, __len__, __contains__, and get.; # The remaining methods are order-aware.; # Big-O running times for all methods are the same as for regular dictionaries. # The internal self.__map dictionary maps keys to links in a doubly linked list.; # The circular doubly linked list starts and ends with a sentinel element.; # The sentinel element never gets deleted (this simplifies the algorithm).; # Each link is stored as a list of length three: [PREV, NEXT, KEY]. def __init__(self, *args, **kwds):; '''Initialize an ordered dictionary. Signature is the same as for; regular dictionaries, but keyword arguments are not recommended; because their insertion order is arbitrary. '''; if len(args) > 1:; raise TypeError('expected at most 1 arguments, got %d' % len(args)); try:; self.__root; except AttributeError:; self.__root = root = [] # sentinel node; root[:] = [root, root, None]; self.__map = {}; self.__update(*args, **kwds). def __setitem__(self, key, value, dict_setitem=dict.__setitem__):; 'od.__setitem__(i, y) <==> od[i]=y'; # Setting a new item creates a new link which goes at the end of the linked; # list, and the inherited dictionary is updated wi",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/_modules/qcdb/oldpymodules.html:390,update,updates,390,psi4manual/1.0.0/_modules/qcdb/oldpymodules.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/_modules/qcdb/oldpymodules.html,1,['update'],['updates']
Deployability,"﻿. qcelemental.exceptions. Navigation. Index. modules    .    .  · ; 1.4;  · . PSI4. Module code; qcelemental.exceptions. Source code for qcelemental.exceptions; """"""; Exceptions for QCElemental; """""". class NotAnElementError(Exception):; """"""Error when element or nuclide can't be identified."""""". def __init__(self, atom, strict=False):; if strict:; msg = ""atomic number or element""; else:; msg = ""atomic number, element symbol, or nuclide symbol""; self.message = f""Atom identifier ({atom}) uninterpretable as {msg}"". class DataUnavailableError(Exception):; """"""Error when dataset incomplete and otherwise valid query can't be fulfilled."""""". def __init__(self, dataset, atom):; self.message = ""Dataset ({}) missing value for key ({})"".format(dataset, atom). class MoleculeFormatError(Exception):; """"""Error called when a molparse.from_string contains unparsable lines."""""". def __init__(self, msg):; self.message = ""Molecule line uninterpretable: {}"".format(msg). [docs]class ValidationError(Exception):; """"""Error called for problems with syntax input file. Prints; error message *msg* to standard output stream. """""". def __init__(self, msg):; self.message = ""Input Error: {}"".format(msg). class ChoicesError(Exception):; """"""Error called for problems with syntax input file. Prints; error message *msg* to standard output stream. Also attaches; `choices` dictionary with options to proceed. """""". def __init__(self, msg, choices=None):; self.message = ""Input Error: {}"".format(msg); self.choices = {} if choices is None else choices. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .  · ; 1.4;  · . PSI4. Module code; qcelemental.exceptions. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/_modules/qcelemental/exceptions.html:1699,update,updated,1699,psi4manual/1.4.0/_modules/qcelemental/exceptions.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/_modules/qcelemental/exceptions.html,1,['update'],['updated']
Deployability,"﻿. qcelemental.exceptions. Navigation. Index. modules    .    .  · ; 1.5;  · . PSI4. Module code; qcelemental.exceptions. Source code for qcelemental.exceptions; """"""; Exceptions for QCElemental; """""". class NotAnElementError(Exception):; """"""Error when element or nuclide can't be identified."""""". def __init__(self, atom, strict=False):; if strict:; msg = ""atomic number or element""; else:; msg = ""atomic number, element symbol, or nuclide symbol""; self.message = f""Atom identifier ({atom}) uninterpretable as {msg}"". class DataUnavailableError(Exception):; """"""Error when dataset incomplete and otherwise valid query can't be fulfilled."""""". def __init__(self, dataset, atom):; self.message = ""Dataset ({}) missing value for key ({})"".format(dataset, atom). class MoleculeFormatError(Exception):; """"""Error called when a molparse.from_string contains unparsable lines."""""". def __init__(self, msg):; self.message = ""Molecule line uninterpretable: {}"".format(msg). [docs]class ValidationError(Exception):; """"""Error called for problems with syntax input file. Prints; error message *msg* to standard output stream. """""". def __init__(self, msg):; self.message = ""Input Error: {}"".format(msg). class ChoicesError(Exception):; """"""Error called for problems with syntax input file. Prints; error message *msg* to standard output stream. Also attaches; `choices` dictionary with options to proceed. """""". def __init__(self, msg, choices=None):; self.message = ""Input Error: {}"".format(msg); self.choices = {} if choices is None else choices. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .  · ; 1.5;  · . PSI4. Module code; qcelemental.exceptions. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/_modules/qcelemental/exceptions.html:1699,update,updated,1699,psi4manual/1.5.0/_modules/qcelemental/exceptions.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/_modules/qcelemental/exceptions.html,1,['update'],['updated']
Deployability,"﻿. qcelemental.exceptions. Navigation. Index. modules    .    .  · ; 1.6;  · . PSI4. Module code; qcelemental.exceptions. Source code for qcelemental.exceptions; """"""; Exceptions for QCElemental; """""". class NotAnElementError(Exception):; """"""Error when element or nuclide can't be identified."""""". def __init__(self, atom, strict=False):; if strict:; msg = ""atomic number or element""; else:; msg = ""atomic number, element symbol, or nuclide symbol""; self.message = f""Atom identifier ({atom}) uninterpretable as {msg}"". class DataUnavailableError(Exception):; """"""Error when dataset incomplete and otherwise valid query can't be fulfilled."""""". def __init__(self, dataset, atom):; self.message = ""Dataset ({}) missing value for key ({})"".format(dataset, atom). class MoleculeFormatError(Exception):; """"""Error called when a molparse.from_string contains unparsable lines."""""". def __init__(self, msg):; self.message = ""Molecule line uninterpretable: {}"".format(msg). [docs]class ValidationError(Exception):; """"""Error called for problems with syntax input file. Prints; error message *msg* to standard output stream. """""". def __init__(self, msg):; self.message = ""Input Error: {}"".format(msg). class ChoicesError(Exception):; """"""Error called for problems with syntax input file. Prints; error message *msg* to standard output stream. Also attaches; `choices` dictionary with options to proceed. """""". def __init__(self, msg, choices=None):; self.message = ""Input Error: {}"".format(msg); self.choices = {} if choices is None else choices. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .  · ; 1.6;  · . PSI4. Module code; qcelemental.exceptions. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/_modules/qcelemental/exceptions.html:1699,update,updated,1699,psi4manual/1.6.x/_modules/qcelemental/exceptions.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/_modules/qcelemental/exceptions.html,1,['update'],['updated']
Deployability,"﻿. qcelemental.models.types. Navigation. Index. modules    .    .  · ; 1.4;  · . PSI4. Module code; qcelemental.models.types. Source code for qcelemental.models.types; from typing import Any, Dict. import numpy as np. class TypedArray(np.ndarray):; @classmethod; def __get_validators__(cls):; yield cls.validate. @classmethod; def validate(cls, v):; try:; v = np.asarray(v, dtype=cls._dtype); except ValueError:; raise ValueError(""Could not cast {} to NumPy Array!"".format(v)). return v. @classmethod; def __modify_schema__(cls, field_schema: Dict[str, Any]) -> None:; dt = cls._dtype; if dt is int or np.issubdtype(dt, np.integer):; items = {""type"": ""number"", ""multipleOf"": 1.0}; elif dt is float or np.issubdtype(dt, np.floating):; items = {""type"": ""number""}; elif dt is str or np.issubdtype(dt, np.string_):; items = {""type"": ""string""}; elif dt is bool or np.issubdtype(dt, np.bool_):; items = {""type"": ""boolean""}; field_schema.update(type=""array"", items=items). class ArrayMeta(type):; def __getitem__(self, dtype):; return type(""Array"", (TypedArray,), {""_dtype"": dtype}). [docs]class Array(np.ndarray, metaclass=ArrayMeta):; pass. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .  · ; 1.4;  · . PSI4. Module code; qcelemental.models.types. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/_modules/qcelemental/models/types.html:931,update,update,931,psi4manual/1.4.0/_modules/qcelemental/models/types.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/_modules/qcelemental/models/types.html,2,['update'],"['update', 'updated']"
Deployability,"﻿. qcelemental.models.types. Navigation. Index. modules    .    .  · ; 1.5;  · . PSI4. Module code; qcelemental.models.types. Source code for qcelemental.models.types; from typing import Any, Dict. import numpy as np. class TypedArray(np.ndarray):; @classmethod; def __get_validators__(cls):; yield cls.validate. @classmethod; def validate(cls, v):; try:; v = np.asarray(v, dtype=cls._dtype); except ValueError:; raise ValueError(""Could not cast {} to NumPy Array!"".format(v)). return v. @classmethod; def __modify_schema__(cls, field_schema: Dict[str, Any]) -> None:; dt = cls._dtype; if dt is int or np.issubdtype(dt, np.integer):; items = {""type"": ""number"", ""multipleOf"": 1.0}; elif dt is float or np.issubdtype(dt, np.floating):; items = {""type"": ""number""}; elif dt is str or np.issubdtype(dt, np.string_):; items = {""type"": ""string""}; elif dt is bool or np.issubdtype(dt, np.bool_):; items = {""type"": ""boolean""}; field_schema.update(type=""array"", items=items). class ArrayMeta(type):; def __getitem__(self, dtype):; return type(""Array"", (TypedArray,), {""_dtype"": dtype}). [docs]class Array(np.ndarray, metaclass=ArrayMeta):; pass. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .  · ; 1.5;  · . PSI4. Module code; qcelemental.models.types. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/_modules/qcelemental/models/types.html:931,update,update,931,psi4manual/1.5.0/_modules/qcelemental/models/types.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/_modules/qcelemental/models/types.html,2,['update'],"['update', 'updated']"
Deployability,"﻿. qcelemental.models.types. Navigation. Index. modules    .    .  · ; 1.6;  · . PSI4. Module code; qcelemental.models.types. Source code for qcelemental.models.types; from typing import Any, Dict. import numpy as np. class TypedArray(np.ndarray):; @classmethod; def __get_validators__(cls):; yield cls.validate. @classmethod; def validate(cls, v):; try:; v = np.asarray(v, dtype=cls._dtype); except ValueError:; raise ValueError(""Could not cast {} to NumPy Array!"".format(v)). return v. @classmethod; def __modify_schema__(cls, field_schema: Dict[str, Any]) -> None:; dt = cls._dtype; if dt is int or np.issubdtype(dt, np.integer):; items = {""type"": ""number"", ""multipleOf"": 1.0}; elif dt is float or np.issubdtype(dt, np.floating):; items = {""type"": ""number""}; elif dt is str or np.issubdtype(dt, np.string_):; items = {""type"": ""string""}; elif dt is bool or np.issubdtype(dt, np.bool_):; items = {""type"": ""boolean""}; field_schema.update(type=""array"", items=items). class ArrayMeta(type):; def __getitem__(self, dtype):; return type(""Array"", (TypedArray,), {""_dtype"": dtype}). [docs]class Array(np.ndarray, metaclass=ArrayMeta):; pass. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .  · ; 1.6;  · . PSI4. Module code; qcelemental.models.types. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/_modules/qcelemental/models/types.html:931,update,update,931,psi4manual/1.6.x/_modules/qcelemental/models/types.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/_modules/qcelemental/models/types.html,2,['update'],"['update', 'updated']"
Deployability,"﻿. qmmm — PSI4 [beta2] documentation. Navigation. index. modules |; PSI4 [beta2] » ; Module code ». Source code for qmmm; """"""Module with classes to integrate MM charges into; a QM calculation. """"""; import PsiMod; import re; import os; import input; import math; import physconst; from molutil import *; from driver import *. [docs]class Diffuse(object):. def __init__(self, molecule, basisname, ribasisname):. self.molecule = molecule; self.basisname = basisname; self.ribasisname = ribasisname; self.basis = None; self.ribasis = None; self.da = None; self.Da = None; self.wfn = None. def __str__(self):. s = ' => Diffuse <=\n\n'; s = s + ' ' + str(self.molecule) + '\n'; s = s + ' ' + self.basisname + '\n'; s = s + ' ' + self.ribasisname + '\n'; s = s + '\n'. return s. [docs] def fitScf(self):; """"""Function to run scf and fit a system of diffuse charges to; resulting density. """"""; basisChanged = PsiMod.has_option_changed(""BASIS""); ribasisChanged = PsiMod.has_option_changed(""DF_BASIS_SCF""); scftypeChanged = PsiMod.has_option_changed(""SCF_TYPE""). basis = PsiMod.get_option(""BASIS""); ribasis = PsiMod.get_option(""DF_BASIS_SCF""); scftype = PsiMod.get_option(""SCF_TYPE""). PsiMod.print_out("" => Diffuse SCF (Determines Da) <=\n\n""); activate(self.molecule). PsiMod.set_global_option(""BASIS"", self.basisname); PsiMod.set_global_option(""DF_BASIS_SCF"", self.ribasisname); PsiMod.set_global_option(""SCF_TYPE"", ""DF""); energy('scf'); PsiMod.print_out(""\n""). self.fitGeneral(). PsiMod.clean(). PsiMod.set_global_option(""BASIS"", basis); PsiMod.set_global_option(""DF_BASIS_SCF"", ribasis); PsiMod.set_global_option(""SCF_TYPE"", scftype). if not basisChanged:; PsiMod.revoke_option_changed(""BASIS""); if not ribasisChanged:; PsiMod.revoke_option_changed(""DF_BASIS_SCF""); if not scftypeChanged:; PsiMod.revoke_option_changed(""SCF_TYPE""). [docs] def fitGeneral(self):; """"""Function to perform a general fit of diffuse charges; to wavefunction density. """"""; PsiMod.print_out("" => Diffuse Charge Fitting (Determines da",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b2/_modules/qmmm.html:148,integrat,integrate,148,psi4manual/4.0b2/_modules/qmmm.html,https://psicode.org,https://psicode.org/psi4manual/4.0b2/_modules/qmmm.html,1,['integrat'],['integrate']
Deployability,"﻿. qmmm — PSI4 [beta3] documentation. Navigation. index. modules    . toc    ; PSI4 [beta3] » ; Module code ». Source code for qmmm; """"""Module with classes to integrate MM charges into; a QM calculation. """"""; import PsiMod; import re; import os; import math; import physconst; from molutil import *; from driver import *. [docs]class Diffuse(object):. def __init__(self, molecule, basisname, ribasisname):. self.molecule = molecule; self.basisname = basisname; self.ribasisname = ribasisname; self.basis = None; self.ribasis = None; self.da = None; self.Da = None; self.wfn = None. def __str__(self):. s = ' => Diffuse <=\n\n'; s = s + ' ' + str(self.molecule) + '\n'; s = s + ' ' + self.basisname + '\n'; s = s + ' ' + self.ribasisname + '\n'; s = s + '\n'. return s. [docs] def fitScf(self):; """"""Function to run scf and fit a system of diffuse charges to; resulting density. """"""; basisChanged = PsiMod.has_option_changed(""BASIS""); ribasisChanged = PsiMod.has_option_changed(""DF_BASIS_SCF""); scftypeChanged = PsiMod.has_option_changed(""SCF_TYPE""). basis = PsiMod.get_option(""BASIS""); ribasis = PsiMod.get_option(""DF_BASIS_SCF""); scftype = PsiMod.get_option(""SCF_TYPE""). PsiMod.print_out("" => Diffuse SCF (Determines Da) <=\n\n""); activate(self.molecule). PsiMod.set_global_option(""BASIS"", self.basisname); PsiMod.set_global_option(""DF_BASIS_SCF"", self.ribasisname); PsiMod.set_global_option(""SCF_TYPE"", ""DF""); energy('scf'); PsiMod.print_out(""\n""). self.fitGeneral(). PsiMod.clean(). PsiMod.set_global_option(""BASIS"", basis); PsiMod.set_global_option(""DF_BASIS_SCF"", ribasis); PsiMod.set_global_option(""SCF_TYPE"", scftype). if not basisChanged:; PsiMod.revoke_option_changed(""BASIS""); if not ribasisChanged:; PsiMod.revoke_option_changed(""DF_BASIS_SCF""); if not scftypeChanged:; PsiMod.revoke_option_changed(""SCF_TYPE""). [docs] def fitGeneral(self):; """"""Function to perform a general fit of diffuse charges; to wavefunction density. """"""; PsiMod.print_out("" => Diffuse Charge Fitting (Determines da) <",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b3/_modules/qmmm.html:159,integrat,integrate,159,psi4manual/4.0b3/_modules/qmmm.html,https://psicode.org,https://psicode.org/psi4manual/4.0b3/_modules/qmmm.html,1,['integrat'],['integrate']
Deployability,"﻿. qmmm — PSI4 [beta4] documentation. Navigation. index. modules    . toc    ; PSI4 [beta4] » ; Module code ». Source code for qmmm; """"""Module with classes to integrate MM charges into; a QM calculation. """"""; import PsiMod; import re; import os; import math; import physconst; from molutil import *; from driver import *. [docs]class Diffuse(object):. def __init__(self, molecule, basisname, ribasisname):. self.molecule = molecule; self.basisname = basisname; self.ribasisname = ribasisname; self.basis = None; self.ribasis = None; self.da = None; self.Da = None; self.wfn = None. def __str__(self):. s = ' => Diffuse <=\n\n'; s = s + ' ' + str(self.molecule) + '\n'; s = s + ' ' + self.basisname + '\n'; s = s + ' ' + self.ribasisname + '\n'; s = s + '\n'. return s. [docs] def fitScf(self):; """"""Function to run scf and fit a system of diffuse charges to; resulting density. """"""; basisChanged = PsiMod.has_option_changed(""BASIS""); ribasisChanged = PsiMod.has_option_changed(""DF_BASIS_SCF""); scftypeChanged = PsiMod.has_option_changed(""SCF_TYPE""). basis = PsiMod.get_option(""BASIS""); ribasis = PsiMod.get_option(""DF_BASIS_SCF""); scftype = PsiMod.get_option(""SCF_TYPE""). PsiMod.print_out("" => Diffuse SCF (Determines Da) <=\n\n""); activate(self.molecule). PsiMod.set_global_option(""BASIS"", self.basisname); PsiMod.set_global_option(""DF_BASIS_SCF"", self.ribasisname); PsiMod.set_global_option(""SCF_TYPE"", ""DF""); energy('scf'); PsiMod.print_out(""\n""). self.fitGeneral(). PsiMod.clean(). PsiMod.set_global_option(""BASIS"", basis); PsiMod.set_global_option(""DF_BASIS_SCF"", ribasis); PsiMod.set_global_option(""SCF_TYPE"", scftype). if not basisChanged:; PsiMod.revoke_option_changed(""BASIS""); if not ribasisChanged:; PsiMod.revoke_option_changed(""DF_BASIS_SCF""); if not scftypeChanged:; PsiMod.revoke_option_changed(""SCF_TYPE""). [docs] def fitGeneral(self):; """"""Function to perform a general fit of diffuse charges; to wavefunction density. """"""; PsiMod.print_out("" => Diffuse Charge Fitting (Determines da) <",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b4/_modules/qmmm.html:159,integrat,integrate,159,psi4manual/4.0b4/_modules/qmmm.html,https://psicode.org,https://psicode.org/psi4manual/4.0b4/_modules/qmmm.html,1,['integrat'],['integrate']
Deployability,"﻿. qmmm — PSI4 [beta5] documentation. Navigation. index. modules    . toc    ; PSI4 [beta5] » ; Module code ». Source code for qmmm; #; #@BEGIN LICENSE; #; # PSI4: an ab initio quantum chemistry software package; #; # This program is free software; you can redistribute it and/or modify; # it under the terms of the GNU General Public License as published by; # the Free Software Foundation; either version 2 of the License, or; # (at your option) any later version.; #; # This program is distributed in the hope that it will be useful,; # but WITHOUT ANY WARRANTY; without even the implied warranty of; # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the; # GNU General Public License for more details.; #; # You should have received a copy of the GNU General Public License along; # with this program; if not, write to the Free Software Foundation, Inc.,; # 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.; #; #@END LICENSE; #. """"""Module with classes to integrate MM charges into; a QM calculation. """"""; import psi4; import re; import os; import math; import p4const; from molutil import *; from driver import *. [docs]class Diffuse(object):. def __init__(self, molecule, basisname, ribasisname):. self.molecule = molecule; self.basisname = basisname; self.ribasisname = ribasisname; self.basis = None; self.ribasis = None; self.da = None; self.Da = None; self.wfn = None. def __str__(self):. s = ' => Diffuse <=\n\n'; s = s + ' ' + str(self.molecule) + '\n'; s = s + ' ' + self.basisname + '\n'; s = s + ' ' + self.ribasisname + '\n'; s = s + '\n'. return s. [docs] def fitScf(self):; """"""Function to run scf and fit a system of diffuse charges to; resulting density. """"""; basisChanged = psi4.has_option_changed(""BASIS""); ribasisChanged = psi4.has_option_changed(""DF_BASIS_SCF""); scftypeChanged = psi4.has_option_changed(""SCF_TYPE""). basis = psi4.get_option(""BASIS""); ribasis = psi4.get_option(""DF_BASIS_SCF""); scftype = psi4.get_option(""SCF_TYPE""). psi4.print_out("" => Diffus",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b5/_modules/qmmm.html:979,integrat,integrate,979,psi4manual/4.0b5/_modules/qmmm.html,https://psicode.org,https://psicode.org/psi4manual/4.0b5/_modules/qmmm.html,1,['integrat'],['integrate']
Deployability,"﻿. reopen_outfile. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; reopen_outfile. reopen_outfile¶. psi4.core.reopen_outfile() → None¶; Reopens the output file. table of contents. reopen_outfile; reopen_outfile(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; reopen_outfile. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/api/psi4.core.reopen_outfile.html:485,update,updated,485,psi4manual/master/api/psi4.core.reopen_outfile.html,https://psicode.org,https://psicode.org/psi4manual/master/api/psi4.core.reopen_outfile.html,1,['update'],['updated']
Deployability,"﻿. reopen_outfile. Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. reopen_outfile¶. psi4.core.reopen_outfile() → None¶; Reopens the output file. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2018, The Psi4 Project.; Last updated on Wednesday, 25 July 2018 04:21AM.; Created using Sphinx 1.7.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/api/psi4.core.reopen_outfile-1.html:381,update,updated,381,psi4manual/1.2.1/api/psi4.core.reopen_outfile-1.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/api/psi4.core.reopen_outfile-1.html,2,['update'],['updated']
Deployability,"﻿. reopen_outfile. Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. reopen_outfile¶. psi4.core.reopen_outfile() → None¶; Reopens the output file. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2019, The Psi4 Project.; Last updated on Wednesday, 15 May 2019 08:49PM.; Created using Sphinx 1.8.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/api/psi4.core.reopen_outfile-1.html:381,update,updated,381,psi4manual/1.3.2/api/psi4.core.reopen_outfile-1.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/api/psi4.core.reopen_outfile-1.html,2,['update'],['updated']
Deployability,"﻿. reopen_outfile. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; reopen_outfile. reopen_outfile¶. psi4.core.reopen_outfile() → None¶; Reopens the output file. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; reopen_outfile. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/api/psi4.core.reopen_outfile-1.html:409,update,updated,409,psi4manual/1.4.0/api/psi4.core.reopen_outfile-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/api/psi4.core.reopen_outfile-1.html,2,['update'],['updated']
Deployability,"﻿. reopen_outfile. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; reopen_outfile. reopen_outfile¶. psi4.core.reopen_outfile() → None¶; Reopens the output file. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; reopen_outfile. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/api/psi4.core.reopen_outfile-1.html:409,update,updated,409,psi4manual/1.5.0/api/psi4.core.reopen_outfile-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/api/psi4.core.reopen_outfile-1.html,2,['update'],['updated']
Deployability,"﻿. reopen_outfile. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; reopen_outfile. reopen_outfile¶. psi4.core.reopen_outfile() → None¶; Reopens the output file. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; reopen_outfile. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/api/psi4.core.reopen_outfile.html:409,update,updated,409,psi4manual/1.6.x/api/psi4.core.reopen_outfile.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/api/psi4.core.reopen_outfile.html,1,['update'],['updated']
Deployability,"﻿. reopen_outfile. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; reopen_outfile. reopen_outfile¶. psi4.core.reopen_outfile() → None¶; Reopens the output file. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; reopen_outfile. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/api/psi4.core.reopen_outfile.html:414,update,updated,414,psi4manual/1.7.x/api/psi4.core.reopen_outfile.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/api/psi4.core.reopen_outfile.html,1,['update'],['updated']
Deployability,"﻿. reopen_outfile. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; reopen_outfile. reopen_outfile¶. psi4.core.reopen_outfile() → None¶; Reopens the output file. table of contents. reopen_outfile; reopen_outfile(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; reopen_outfile. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/api/psi4.core.reopen_outfile.html:471,update,updated,471,psi4manual/1.8.x/api/psi4.core.reopen_outfile.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/api/psi4.core.reopen_outfile.html,1,['update'],['updated']
Deployability,"﻿. reopen_outfile. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; reopen_outfile. reopen_outfile¶. psi4.core.reopen_outfile() → None¶; Reopens the output file. table of contents. reopen_outfile; reopen_outfile(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; reopen_outfile. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/api/psi4.core.reopen_outfile.html:471,update,updated,471,psi4manual/1.9.x/api/psi4.core.reopen_outfile.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/api/psi4.core.reopen_outfile.html,1,['update'],['updated']
Deployability,"﻿. revoke_global_option_changed. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; revoke_global_option_changed. revoke_global_option_changed¶. psi4.core.revoke_global_option_changed(key: str) → None¶; Clear the touched status for keyword key at global (all-module) scope. Sets the has_changed attribute in the global options scope to false. Used in python driver when a function sets the value of an option. Before the function exits, this command is called on the option so that has_changed reflects whether the user (not the program) has touched the option. table of contents. revoke_global_option_changed; revoke_global_option_changed(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; revoke_global_option_changed. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/api/psi4.core.revoke_global_option_changed.html:925,update,updated,925,psi4manual/master/api/psi4.core.revoke_global_option_changed.html,https://psicode.org,https://psicode.org/psi4manual/master/api/psi4.core.revoke_global_option_changed.html,1,['update'],['updated']
Deployability,"﻿. revoke_global_option_changed. Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. revoke_global_option_changed¶. psi4.core.revoke_global_option_changed(arg0: str) → None¶; Given a string of a keyword name arg1, sets the has_changed attribute in the global options scope to false. Used in python driver when a function sets the value of an option. Before the function exits, this command is called on the option so that has_changed reflects whether the user (not the program) has touched the option. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2018, The Psi4 Project.; Last updated on Wednesday, 25 July 2018 04:21AM.; Created using Sphinx 1.7.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/api/psi4.core.revoke_global_option_changed-1.html:734,update,updated,734,psi4manual/1.2.1/api/psi4.core.revoke_global_option_changed-1.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/api/psi4.core.revoke_global_option_changed-1.html,2,['update'],['updated']
Deployability,"﻿. revoke_global_option_changed. Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. revoke_global_option_changed¶. psi4.core.revoke_global_option_changed(arg0: str) → None¶; Given a string of a keyword name arg1, sets the has_changed attribute in the global options scope to false. Used in python driver when a function sets the value of an option. Before the function exits, this command is called on the option so that has_changed reflects whether the user (not the program) has touched the option. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2019, The Psi4 Project.; Last updated on Wednesday, 15 May 2019 08:49PM.; Created using Sphinx 1.8.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/api/psi4.core.revoke_global_option_changed-1.html:734,update,updated,734,psi4manual/1.3.2/api/psi4.core.revoke_global_option_changed-1.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/api/psi4.core.revoke_global_option_changed-1.html,2,['update'],['updated']
Deployability,"﻿. revoke_global_option_changed. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; revoke_global_option_changed. revoke_global_option_changed¶. psi4.core.revoke_global_option_changed(key: str) → None¶; Clear the touched status for keyword key at global (all-module) scope. Sets the has_changed attribute in the global options scope to false. Used in python driver when a function sets the value of an option. Before the function exits, this command is called on the option so that has_changed reflects whether the user (not the program) has touched the option. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; revoke_global_option_changed. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/api/psi4.core.revoke_global_option_changed-1.html:821,update,updated,821,psi4manual/1.4.0/api/psi4.core.revoke_global_option_changed-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/api/psi4.core.revoke_global_option_changed-1.html,2,['update'],['updated']
Deployability,"﻿. revoke_global_option_changed. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; revoke_global_option_changed. revoke_global_option_changed¶. psi4.core.revoke_global_option_changed(key: str) → None¶; Clear the touched status for keyword key at global (all-module) scope. Sets the has_changed attribute in the global options scope to false. Used in python driver when a function sets the value of an option. Before the function exits, this command is called on the option so that has_changed reflects whether the user (not the program) has touched the option. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; revoke_global_option_changed. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/api/psi4.core.revoke_global_option_changed-1.html:821,update,updated,821,psi4manual/1.5.0/api/psi4.core.revoke_global_option_changed-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/api/psi4.core.revoke_global_option_changed-1.html,2,['update'],['updated']
Deployability,"﻿. revoke_global_option_changed. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; revoke_global_option_changed. revoke_global_option_changed¶. psi4.core.revoke_global_option_changed(key: str) → None¶; Clear the touched status for keyword key at global (all-module) scope. Sets the has_changed attribute in the global options scope to false. Used in python driver when a function sets the value of an option. Before the function exits, this command is called on the option so that has_changed reflects whether the user (not the program) has touched the option. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; revoke_global_option_changed. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/api/psi4.core.revoke_global_option_changed.html:821,update,updated,821,psi4manual/1.6.x/api/psi4.core.revoke_global_option_changed.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/api/psi4.core.revoke_global_option_changed.html,1,['update'],['updated']
Deployability,"﻿. revoke_global_option_changed. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; revoke_global_option_changed. revoke_global_option_changed¶. psi4.core.revoke_global_option_changed(key: str) → None¶; Clear the touched status for keyword key at global (all-module) scope. Sets the has_changed attribute in the global options scope to false. Used in python driver when a function sets the value of an option. Before the function exits, this command is called on the option so that has_changed reflects whether the user (not the program) has touched the option. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; revoke_global_option_changed. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/api/psi4.core.revoke_global_option_changed.html:826,update,updated,826,psi4manual/1.7.x/api/psi4.core.revoke_global_option_changed.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/api/psi4.core.revoke_global_option_changed.html,1,['update'],['updated']
Deployability,"﻿. revoke_global_option_changed. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; revoke_global_option_changed. revoke_global_option_changed¶. psi4.core.revoke_global_option_changed(key: str) → None¶; Clear the touched status for keyword key at global (all-module) scope. Sets the has_changed attribute in the global options scope to false. Used in python driver when a function sets the value of an option. Before the function exits, this command is called on the option so that has_changed reflects whether the user (not the program) has touched the option. table of contents. revoke_global_option_changed; revoke_global_option_changed(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; revoke_global_option_changed. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/api/psi4.core.revoke_global_option_changed.html:911,update,updated,911,psi4manual/1.8.x/api/psi4.core.revoke_global_option_changed.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/api/psi4.core.revoke_global_option_changed.html,1,['update'],['updated']
Deployability,"﻿. revoke_global_option_changed. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; revoke_global_option_changed. revoke_global_option_changed¶. psi4.core.revoke_global_option_changed(key: str) → None¶; Clear the touched status for keyword key at global (all-module) scope. Sets the has_changed attribute in the global options scope to false. Used in python driver when a function sets the value of an option. Before the function exits, this command is called on the option so that has_changed reflects whether the user (not the program) has touched the option. table of contents. revoke_global_option_changed; revoke_global_option_changed(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; revoke_global_option_changed. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/api/psi4.core.revoke_global_option_changed.html:911,update,updated,911,psi4manual/1.9.x/api/psi4.core.revoke_global_option_changed.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/api/psi4.core.revoke_global_option_changed.html,1,['update'],['updated']
Deployability,"﻿. revoke_local_option_changed. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; revoke_local_option_changed. revoke_local_option_changed¶. psi4.core.revoke_local_option_changed(module: str, key: str) → None¶; Clear the touched status for keyword key at module scope. Sets the has_changed attribute in the module options scope to false. Used in python driver when a function sets the value of an option. Before the function exits, this command is called on the option so that has_changed reflects whether the user (not the program) has touched the option. table of contents. revoke_local_option_changed; revoke_local_option_changed(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; revoke_local_option_changed. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/api/psi4.core.revoke_local_option_changed.html:918,update,updated,918,psi4manual/master/api/psi4.core.revoke_local_option_changed.html,https://psicode.org,https://psicode.org/psi4manual/master/api/psi4.core.revoke_local_option_changed.html,1,['update'],['updated']
Deployability,"﻿. revoke_local_option_changed. Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. revoke_local_option_changed¶. psi4.core.revoke_local_option_changed(arg0: str, arg1: str) → None¶; Given a string of a keyword name arg2 and a particular module arg1, sets the has_changed attribute in the module options scope to false. Used in python driver when a function sets the value of an option. Before the function exits, this command is called on the option so that has_changed reflects whether the user (not the program) has touched the option. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2018, The Psi4 Project.; Last updated on Wednesday, 25 July 2018 04:21AM.; Created using Sphinx 1.7.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/api/psi4.core.revoke_local_option_changed-1.html:771,update,updated,771,psi4manual/1.2.1/api/psi4.core.revoke_local_option_changed-1.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/api/psi4.core.revoke_local_option_changed-1.html,2,['update'],['updated']
Deployability,"﻿. revoke_local_option_changed. Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. revoke_local_option_changed¶. psi4.core.revoke_local_option_changed(arg0: str, arg1: str) → None¶; Given a string of a keyword name arg2 and a particular module arg1, sets the has_changed attribute in the module options scope to false. Used in python driver when a function sets the value of an option. Before the function exits, this command is called on the option so that has_changed reflects whether the user (not the program) has touched the option. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2019, The Psi4 Project.; Last updated on Wednesday, 15 May 2019 08:49PM.; Created using Sphinx 1.8.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/api/psi4.core.revoke_local_option_changed-1.html:771,update,updated,771,psi4manual/1.3.2/api/psi4.core.revoke_local_option_changed-1.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/api/psi4.core.revoke_local_option_changed-1.html,2,['update'],['updated']
Deployability,"﻿. revoke_local_option_changed. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; revoke_local_option_changed. revoke_local_option_changed¶. psi4.core.revoke_local_option_changed(module: str, key: str) → None¶; Clear the touched status for keyword key at module scope. Sets the has_changed attribute in the module options scope to false. Used in python driver when a function sets the value of an option. Before the function exits, this command is called on the option so that has_changed reflects whether the user (not the program) has touched the option. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; revoke_local_option_changed. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/api/psi4.core.revoke_local_option_changed-1.html:816,update,updated,816,psi4manual/1.4.0/api/psi4.core.revoke_local_option_changed-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/api/psi4.core.revoke_local_option_changed-1.html,2,['update'],['updated']
Deployability,"﻿. revoke_local_option_changed. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; revoke_local_option_changed. revoke_local_option_changed¶. psi4.core.revoke_local_option_changed(module: str, key: str) → None¶; Clear the touched status for keyword key at module scope. Sets the has_changed attribute in the module options scope to false. Used in python driver when a function sets the value of an option. Before the function exits, this command is called on the option so that has_changed reflects whether the user (not the program) has touched the option. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; revoke_local_option_changed. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/api/psi4.core.revoke_local_option_changed-1.html:816,update,updated,816,psi4manual/1.5.0/api/psi4.core.revoke_local_option_changed-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/api/psi4.core.revoke_local_option_changed-1.html,2,['update'],['updated']
Deployability,"﻿. revoke_local_option_changed. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; revoke_local_option_changed. revoke_local_option_changed¶. psi4.core.revoke_local_option_changed(module: str, key: str) → None¶; Clear the touched status for keyword key at module scope. Sets the has_changed attribute in the module options scope to false. Used in python driver when a function sets the value of an option. Before the function exits, this command is called on the option so that has_changed reflects whether the user (not the program) has touched the option. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; revoke_local_option_changed. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/api/psi4.core.revoke_local_option_changed.html:816,update,updated,816,psi4manual/1.6.x/api/psi4.core.revoke_local_option_changed.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/api/psi4.core.revoke_local_option_changed.html,1,['update'],['updated']
Deployability,"﻿. revoke_local_option_changed. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; revoke_local_option_changed. revoke_local_option_changed¶. psi4.core.revoke_local_option_changed(module: str, key: str) → None¶; Clear the touched status for keyword key at module scope. Sets the has_changed attribute in the module options scope to false. Used in python driver when a function sets the value of an option. Before the function exits, this command is called on the option so that has_changed reflects whether the user (not the program) has touched the option. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; revoke_local_option_changed. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/api/psi4.core.revoke_local_option_changed.html:821,update,updated,821,psi4manual/1.7.x/api/psi4.core.revoke_local_option_changed.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/api/psi4.core.revoke_local_option_changed.html,1,['update'],['updated']
Deployability,"﻿. revoke_local_option_changed. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; revoke_local_option_changed. revoke_local_option_changed¶. psi4.core.revoke_local_option_changed(module: str, key: str) → None¶; Clear the touched status for keyword key at module scope. Sets the has_changed attribute in the module options scope to false. Used in python driver when a function sets the value of an option. Before the function exits, this command is called on the option so that has_changed reflects whether the user (not the program) has touched the option. table of contents. revoke_local_option_changed; revoke_local_option_changed(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; revoke_local_option_changed. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/api/psi4.core.revoke_local_option_changed.html:904,update,updated,904,psi4manual/1.8.x/api/psi4.core.revoke_local_option_changed.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/api/psi4.core.revoke_local_option_changed.html,1,['update'],['updated']
Deployability,"﻿. revoke_local_option_changed. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; revoke_local_option_changed. revoke_local_option_changed¶. psi4.core.revoke_local_option_changed(module: str, key: str) → None¶; Clear the touched status for keyword key at module scope. Sets the has_changed attribute in the module options scope to false. Used in python driver when a function sets the value of an option. Before the function exits, this command is called on the option so that has_changed reflects whether the user (not the program) has touched the option. table of contents. revoke_local_option_changed; revoke_local_option_changed(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; revoke_local_option_changed. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/api/psi4.core.revoke_local_option_changed.html:904,update,updated,904,psi4manual/1.9.x/api/psi4.core.revoke_local_option_changed.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/api/psi4.core.revoke_local_option_changed.html,1,['update'],['updated']
Deployability,"﻿. run_gdma. Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. run_gdma¶. psi4.core.run_gdma(arg0: psi::Wavefunction, arg1: str) → float¶; Runs the GDMA code. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2018, The Psi4 Project.; Last updated on Wednesday, 25 July 2018 04:21AM.; Created using Sphinx 1.7.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/api/psi4.core.run_gdma-1.html:393,update,updated,393,psi4manual/1.2.1/api/psi4.core.run_gdma-1.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/api/psi4.core.run_gdma-1.html,2,['update'],['updated']
Deployability,"﻿. run_gdma. Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. run_gdma¶. psi4.core.run_gdma(arg0: psi::Wavefunction, arg1: str) → float¶; Runs the GDMA code. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2019, The Psi4 Project.; Last updated on Wednesday, 15 May 2019 08:49PM.; Created using Sphinx 1.8.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/api/psi4.core.run_gdma-1.html:393,update,updated,393,psi4manual/1.3.2/api/psi4.core.run_gdma-1.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/api/psi4.core.run_gdma-1.html,2,['update'],['updated']
Deployability,"﻿. run_gdma. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; run_gdma. run_gdma¶. psi4.core.run_gdma(ref_wfn: psi4.core.Wavefunction, datfilename: str) → float¶; Runs the GDMA interface code. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; run_gdma. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/api/psi4.core.run_gdma-1.html:434,update,updated,434,psi4manual/1.4.0/api/psi4.core.run_gdma-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/api/psi4.core.run_gdma-1.html,2,['update'],['updated']
Deployability,"﻿. run_gdma. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; run_gdma. run_gdma¶. psi4.core.run_gdma(ref_wfn: psi4.core.Wavefunction, datfilename: str) → float¶; Runs the GDMA interface code. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; run_gdma. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/api/psi4.core.run_gdma-1.html:434,update,updated,434,psi4manual/1.5.0/api/psi4.core.run_gdma-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/api/psi4.core.run_gdma-1.html,2,['update'],['updated']
Deployability,"﻿. run_gdma. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; run_gdma. run_gdma¶. psi4.core.run_gdma(ref_wfn: psi4.core.Wavefunction, datfilename: str) → float¶; Runs the GDMA interface code. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; run_gdma. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/api/psi4.core.run_gdma.html:434,update,updated,434,psi4manual/1.6.x/api/psi4.core.run_gdma.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/api/psi4.core.run_gdma.html,1,['update'],['updated']
Deployability,"﻿. run_gdma. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; run_gdma. run_gdma¶. psi4.core.run_gdma(ref_wfn: psi4.core.Wavefunction, datfilename: str) → float¶; Runs the GDMA interface code. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; run_gdma. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/api/psi4.core.run_gdma.html:439,update,updated,439,psi4manual/1.7.x/api/psi4.core.run_gdma.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/api/psi4.core.run_gdma.html,1,['update'],['updated']
Deployability,"﻿. run_gdma. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; run_gdma. run_gdma¶. psi4.core.run_gdma(ref_wfn: psi4.core.Wavefunction, datfilename: str) → float¶; Runs the GDMA interface code. table of contents. run_gdma; run_gdma(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; run_gdma. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/api/psi4.core.run_gdma.html:484,update,updated,484,psi4manual/1.8.x/api/psi4.core.run_gdma.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/api/psi4.core.run_gdma.html,1,['update'],['updated']
Deployability,"﻿. sanitize_method. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; sanitize_method. sanitize_method¶. psi4.driver.p4util.sanitize_method(name)[source]¶; Replace characters in method name so that suitable for function name or Sphinx table anchor; (both as-is) or HTML table link (replace underscore in returned string by dash). Return type:; str. Parameters:; name (str). table of contents. sanitize_method; sanitize_method(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; sanitize_method. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/api/psi4.driver.p4util.sanitize_method.html:699,update,updated,699,psi4manual/master/api/psi4.driver.p4util.sanitize_method.html,https://psicode.org,https://psicode.org/psi4manual/master/api/psi4.driver.p4util.sanitize_method.html,1,['update'],['updated']
Deployability,"﻿. sanitize_method. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; sanitize_method. sanitize_method¶. psi4.driver.sanitize_method(name)[source]¶; Replace characters in method name so that suitable for function name or Sphinx table anchor; (both as-is) or HTML table link (replace underscore in returned string by dash). Return type:; str. Parameters:; name (str). table of contents. sanitize_method; sanitize_method(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; sanitize_method. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/api/psi4.driver.sanitize_method.html:692,update,updated,692,psi4manual/master/api/psi4.driver.sanitize_method.html,https://psicode.org,https://psicode.org/psi4manual/master/api/psi4.driver.sanitize_method.html,1,['update'],['updated']
Deployability,"﻿. sanitize_method. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; sanitize_method. sanitize_method¶. psi4.driver.p4util.sanitize_method(name)[source]¶; Replace characters in method name so that suitable for function name or Sphinx table anchor; (both as-is) or HTML table link (replace underscore in returned string by dash). Return type:; str. Parameters:; name (str) – . «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; sanitize_method. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/api/psi4.driver.p4util.sanitize_method.html:629,update,updated,629,psi4manual/1.7.x/api/psi4.driver.p4util.sanitize_method.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/api/psi4.driver.p4util.sanitize_method.html,1,['update'],['updated']
Deployability,"﻿. sanitize_method. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; sanitize_method. sanitize_method¶. psi4.driver.sanitize_method(name)[source]¶; Replace characters in method name so that suitable for function name or Sphinx table anchor; (both as-is) or HTML table link (replace underscore in returned string by dash). Return type:; str. Parameters:; name (str) – . «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; sanitize_method. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/api/psi4.driver.sanitize_method.html:622,update,updated,622,psi4manual/1.7.x/api/psi4.driver.sanitize_method.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/api/psi4.driver.sanitize_method.html,1,['update'],['updated']
Deployability,"﻿. sanitize_method. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; sanitize_method. sanitize_method¶. psi4.driver.p4util.sanitize_method(name)[source]¶; Replace characters in method name so that suitable for function name or Sphinx table anchor; (both as-is) or HTML table link (replace underscore in returned string by dash). Return type:; str. Parameters:; name (str) – . table of contents. sanitize_method; sanitize_method(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; sanitize_method. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/api/psi4.driver.p4util.sanitize_method.html:688,update,updated,688,psi4manual/1.8.x/api/psi4.driver.p4util.sanitize_method.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/api/psi4.driver.p4util.sanitize_method.html,1,['update'],['updated']
Deployability,"﻿. sanitize_method. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; sanitize_method. sanitize_method¶. psi4.driver.sanitize_method(name)[source]¶; Replace characters in method name so that suitable for function name or Sphinx table anchor; (both as-is) or HTML table link (replace underscore in returned string by dash). Return type:; str. Parameters:; name (str) – . table of contents. sanitize_method; sanitize_method(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; sanitize_method. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/api/psi4.driver.sanitize_method.html:681,update,updated,681,psi4manual/1.8.x/api/psi4.driver.sanitize_method.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/api/psi4.driver.sanitize_method.html,1,['update'],['updated']
Deployability,"﻿. sanitize_method. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; sanitize_method. sanitize_method¶. psi4.driver.p4util.sanitize_method(name)[source]¶; Replace characters in method name so that suitable for function name or Sphinx table anchor; :rtype: str; (both as-is) or HTML table link (replace underscore in returned string by dash). Parameters:; name (str) – . Return type:; str. table of contents. sanitize_method; sanitize_method(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; sanitize_method. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/api/psi4.driver.p4util.sanitize_method.html:701,update,updated,701,psi4manual/1.9.x/api/psi4.driver.p4util.sanitize_method.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/api/psi4.driver.p4util.sanitize_method.html,1,['update'],['updated']
Deployability,"﻿. sanitize_method. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; sanitize_method. sanitize_method¶. psi4.driver.sanitize_method(name)[source]¶; Replace characters in method name so that suitable for function name or Sphinx table anchor; :rtype: str; (both as-is) or HTML table link (replace underscore in returned string by dash). Parameters:; name (str) – . Return type:; str. table of contents. sanitize_method; sanitize_method(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; sanitize_method. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/api/psi4.driver.sanitize_method.html:694,update,updated,694,psi4manual/1.9.x/api/psi4.driver.sanitize_method.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/api/psi4.driver.sanitize_method.html,1,['update'],['updated']
Deployability,"﻿. sanitize_name. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; sanitize_name. sanitize_name¶. psi4.driver.sanitize_name(name)[source]¶; Function to return name in coded form, stripped of; characters that confuse filenames, characters into lowercase,; + into p, * into s, and (, ), -,; & , into _.; Also checks the sanitized name against a list of restricted C++ keywords. Return type:; str. Parameters:; name (str). table of contents. sanitize_name; sanitize_name(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; sanitize_name. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/api/psi4.driver.sanitize_name.html:740,update,updated,740,psi4manual/master/api/psi4.driver.sanitize_name.html,https://psicode.org,https://psicode.org/psi4manual/master/api/psi4.driver.sanitize_name.html,1,['update'],['updated']
Deployability,"﻿. sanitize_name. Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. sanitize_name¶. psi4.driver.sanitize_name(name)[source]¶; Function to return name in coded form, stripped of; characters that confuse filenames, characters into lowercase,; + into p, * into s, and (, ), -,; & , into _.; Also checks the sanitized name against a list of restricted C++ keywords. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2018, The Psi4 Project.; Last updated on Wednesday, 25 July 2018 04:21AM.; Created using Sphinx 1.7.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/api/psi4.driver.sanitize_name-1.html:596,update,updated,596,psi4manual/1.2.1/api/psi4.driver.sanitize_name-1.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/api/psi4.driver.sanitize_name-1.html,2,['update'],['updated']
Deployability,"﻿. sanitize_name. Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. sanitize_name¶. psi4.driver.sanitize_name(name)[source]¶; Function to return name in coded form, stripped of; characters that confuse filenames, characters into lowercase,; + into p, * into s, and (, ), -,; & , into _.; Also checks the sanitized name against a list of restricted C++ keywords. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2019, The Psi4 Project.; Last updated on Wednesday, 15 May 2019 08:49PM.; Created using Sphinx 1.8.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/api/psi4.driver.sanitize_name-1.html:596,update,updated,596,psi4manual/1.3.2/api/psi4.driver.sanitize_name-1.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/api/psi4.driver.sanitize_name-1.html,2,['update'],['updated']
Deployability,"﻿. sanitize_name. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; sanitize_name. sanitize_name¶. psi4.driver.sanitize_name(name)[source]¶; Function to return name in coded form, stripped of; characters that confuse filenames, characters into lowercase,; + into p, * into s, and (, ), -,; & , into _.; Also checks the sanitized name against a list of restricted C++ keywords. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; sanitize_name. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/api/psi4.driver.sanitize_name-1.html:622,update,updated,622,psi4manual/1.4.0/api/psi4.driver.sanitize_name-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/api/psi4.driver.sanitize_name-1.html,2,['update'],['updated']
Deployability,"﻿. sanitize_name. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; sanitize_name. sanitize_name¶. psi4.driver.sanitize_name(name)[source]¶; Function to return name in coded form, stripped of; characters that confuse filenames, characters into lowercase,; + into p, * into s, and (, ), -,; & , into _.; Also checks the sanitized name against a list of restricted C++ keywords. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; sanitize_name. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/api/psi4.driver.sanitize_name-1.html:622,update,updated,622,psi4manual/1.5.0/api/psi4.driver.sanitize_name-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/api/psi4.driver.sanitize_name-1.html,2,['update'],['updated']
Deployability,"﻿. sanitize_name. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; sanitize_name. sanitize_name¶. psi4.driver.sanitize_name(name)[source]¶; Function to return name in coded form, stripped of; characters that confuse filenames, characters into lowercase,; + into p, * into s, and (, ), -,; & , into _.; Also checks the sanitized name against a list of restricted C++ keywords. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; sanitize_name. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/api/psi4.driver.sanitize_name.html:622,update,updated,622,psi4manual/1.6.x/api/psi4.driver.sanitize_name.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/api/psi4.driver.sanitize_name.html,1,['update'],['updated']
Deployability,"﻿. sanitize_name. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; sanitize_name. sanitize_name¶. psi4.driver.sanitize_name(name)[source]¶; Function to return name in coded form, stripped of; characters that confuse filenames, characters into lowercase,; + into p, * into s, and (, ), -,; & , into _.; Also checks the sanitized name against a list of restricted C++ keywords. Return type:; str. Parameters:; name (str) – . «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; sanitize_name. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/api/psi4.driver.sanitize_name.html:674,update,updated,674,psi4manual/1.7.x/api/psi4.driver.sanitize_name.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/api/psi4.driver.sanitize_name.html,1,['update'],['updated']
Deployability,"﻿. sanitize_name. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; sanitize_name. sanitize_name¶. psi4.driver.sanitize_name(name)[source]¶; Function to return name in coded form, stripped of; characters that confuse filenames, characters into lowercase,; + into p, * into s, and (, ), -,; & , into _.; Also checks the sanitized name against a list of restricted C++ keywords. Return type:; str. Parameters:; name (str) – . table of contents. sanitize_name; sanitize_name(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; sanitize_name. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/api/psi4.driver.sanitize_name.html:729,update,updated,729,psi4manual/1.8.x/api/psi4.driver.sanitize_name.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/api/psi4.driver.sanitize_name.html,1,['update'],['updated']
Deployability,"﻿. sanitize_name. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; sanitize_name. sanitize_name¶. psi4.driver.sanitize_name(name)[source]¶; Function to return name in coded form, stripped of; :rtype: str; characters that confuse filenames, characters into lowercase,; + into p, * into s, and (, ), -,; & , into _.; Also checks the sanitized name against a list of restricted C++ keywords. Parameters:; name (str) – . Return type:; str. table of contents. sanitize_name; sanitize_name(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; sanitize_name. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/api/psi4.driver.sanitize_name.html:742,update,updated,742,psi4manual/1.9.x/api/psi4.driver.sanitize_name.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/api/psi4.driver.sanitize_name.html,1,['update'],['updated']
Deployability,"﻿. sapt. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; sapt. sapt¶. psi4.core.sapt(dimer_wfn: psi4.core.Wavefunction, monoa_wfn: psi4.core.Wavefunction, monob_wfn: psi4.core.Wavefunction) → float¶; Runs the symmetry adapted perturbation theory code. table of contents. sapt; sapt(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; sapt. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/api/psi4.core.sapt.html:546,update,updated,546,psi4manual/master/api/psi4.core.sapt.html,https://psicode.org,https://psicode.org/psi4manual/master/api/psi4.core.sapt.html,1,['update'],['updated']
Deployability,"﻿. sapt. Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. sapt¶. psi4.core.sapt(arg0: psi::Wavefunction, arg1: psi::Wavefunction, arg2: psi::Wavefunction) → float¶; Runs the symmetry adapted perturbation theory code. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2018, The Psi4 Project.; Last updated on Wednesday, 25 July 2018 04:21AM.; Created using Sphinx 1.7.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/api/psi4.core.sapt-1.html:452,update,updated,452,psi4manual/1.2.1/api/psi4.core.sapt-1.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/api/psi4.core.sapt-1.html,2,['update'],['updated']
Deployability,"﻿. sapt. Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. sapt¶. psi4.core.sapt(arg0: psi::Wavefunction, arg1: psi::Wavefunction, arg2: psi::Wavefunction) → float¶; Runs the symmetry adapted perturbation theory code. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2019, The Psi4 Project.; Last updated on Wednesday, 15 May 2019 08:49PM.; Created using Sphinx 1.8.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/api/psi4.core.sapt-1.html:452,update,updated,452,psi4manual/1.3.2/api/psi4.core.sapt-1.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/api/psi4.core.sapt-1.html,2,['update'],['updated']
Deployability,"﻿. sapt. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; sapt. sapt¶. psi4.core.sapt(dimer_wfn: psi4.core.Wavefunction, monoa_wfn: psi4.core.Wavefunction, monob_wfn: psi4.core.Wavefunction) → float¶; Runs the symmetry adapted perturbation theory code. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; sapt. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/api/psi4.core.sapt-1.html:490,update,updated,490,psi4manual/1.4.0/api/psi4.core.sapt-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/api/psi4.core.sapt-1.html,2,['update'],['updated']
Deployability,"﻿. sapt. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; sapt. sapt¶. psi4.core.sapt(dimer_wfn: psi4.core.Wavefunction, monoa_wfn: psi4.core.Wavefunction, monob_wfn: psi4.core.Wavefunction) → float¶; Runs the symmetry adapted perturbation theory code. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; sapt. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/api/psi4.core.sapt-1.html:490,update,updated,490,psi4manual/1.5.0/api/psi4.core.sapt-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/api/psi4.core.sapt-1.html,2,['update'],['updated']
Deployability,"﻿. sapt. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; sapt. sapt¶. psi4.core.sapt(dimer_wfn: psi4.core.Wavefunction, monoa_wfn: psi4.core.Wavefunction, monob_wfn: psi4.core.Wavefunction) → float¶; Runs the symmetry adapted perturbation theory code. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; sapt. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/api/psi4.core.sapt.html:490,update,updated,490,psi4manual/1.6.x/api/psi4.core.sapt.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/api/psi4.core.sapt.html,1,['update'],['updated']
Deployability,"﻿. sapt. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; sapt. sapt¶. psi4.core.sapt(dimer_wfn: psi4.core.Wavefunction, monoa_wfn: psi4.core.Wavefunction, monob_wfn: psi4.core.Wavefunction) → float¶; Runs the symmetry adapted perturbation theory code. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; sapt. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/api/psi4.core.sapt.html:495,update,updated,495,psi4manual/1.7.x/api/psi4.core.sapt.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/api/psi4.core.sapt.html,1,['update'],['updated']
Deployability,"﻿. sapt. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; sapt. sapt¶. psi4.core.sapt(dimer_wfn: psi4.core.Wavefunction, monoa_wfn: psi4.core.Wavefunction, monob_wfn: psi4.core.Wavefunction) → float¶; Runs the symmetry adapted perturbation theory code. table of contents. sapt; sapt(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; sapt. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/api/psi4.core.sapt.html:532,update,updated,532,psi4manual/1.8.x/api/psi4.core.sapt.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/api/psi4.core.sapt.html,1,['update'],['updated']
Deployability,"﻿. sapt. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; sapt. sapt¶. psi4.core.sapt(dimer_wfn: psi4.core.Wavefunction, monoa_wfn: psi4.core.Wavefunction, monob_wfn: psi4.core.Wavefunction) → float¶; Runs the symmetry adapted perturbation theory code. table of contents. sapt; sapt(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; sapt. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/api/psi4.core.sapt.html:532,update,updated,532,psi4manual/1.9.x/api/psi4.core.sapt.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/api/psi4.core.sapt.html,1,['update'],['updated']
Deployability,"﻿. scalar_variable. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; scalar_variable. scalar_variable¶. psi4.core.scalar_variable(key: str) → float¶; Returns the double QCVariable key (case-insensitive); prefer variable(). table of contents. scalar_variable; scalar_variable(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; scalar_variable. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/api/psi4.core.scalar_variable.html:549,update,updated,549,psi4manual/master/api/psi4.core.scalar_variable.html,https://psicode.org,https://psicode.org/psi4manual/master/api/psi4.core.scalar_variable.html,1,['update'],['updated']
Deployability,"﻿. scalar_variable. Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. scalar_variable¶. psi4.core.scalar_variable(arg0: str) → float¶; Returns the requested (case-insensitive) double QC variable. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2019, The Psi4 Project.; Last updated on Wednesday, 15 May 2019 08:49PM.; Created using Sphinx 1.8.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/api/psi4.core.scalar_variable-1.html:430,update,updated,430,psi4manual/1.3.2/api/psi4.core.scalar_variable-1.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/api/psi4.core.scalar_variable-1.html,2,['update'],['updated']
Deployability,"﻿. scalar_variable. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; scalar_variable. scalar_variable¶. psi4.core.scalar_variable(key: str) → float¶; Returns the double QCVariable key (case-insensitive); prefer variable(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; scalar_variable. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/api/psi4.core.scalar_variable-1.html:471,update,updated,471,psi4manual/1.4.0/api/psi4.core.scalar_variable-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/api/psi4.core.scalar_variable-1.html,2,['update'],['updated']
Deployability,"﻿. scalar_variable. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; scalar_variable. scalar_variable¶. psi4.core.scalar_variable(key: str) → float¶; Returns the double QCVariable key (case-insensitive); prefer variable(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; scalar_variable. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/api/psi4.core.scalar_variable-1.html:471,update,updated,471,psi4manual/1.5.0/api/psi4.core.scalar_variable-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/api/psi4.core.scalar_variable-1.html,2,['update'],['updated']
Deployability,"﻿. scalar_variable. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; scalar_variable. scalar_variable¶. psi4.core.scalar_variable(key: str) → float¶; Returns the double QCVariable key (case-insensitive); prefer variable(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; scalar_variable. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/api/psi4.core.scalar_variable.html:471,update,updated,471,psi4manual/1.6.x/api/psi4.core.scalar_variable.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/api/psi4.core.scalar_variable.html,1,['update'],['updated']
Deployability,"﻿. scalar_variable. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; scalar_variable. scalar_variable¶. psi4.core.scalar_variable(key: str) → float¶; Returns the double QCVariable key (case-insensitive); prefer variable(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; scalar_variable. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/api/psi4.core.scalar_variable.html:476,update,updated,476,psi4manual/1.7.x/api/psi4.core.scalar_variable.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/api/psi4.core.scalar_variable.html,1,['update'],['updated']
Deployability,"﻿. scalar_variable. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; scalar_variable. scalar_variable¶. psi4.core.scalar_variable(key: str) → float¶; Returns the double QCVariable key (case-insensitive); prefer variable(). table of contents. scalar_variable; scalar_variable(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; scalar_variable. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/api/psi4.core.scalar_variable.html:535,update,updated,535,psi4manual/1.8.x/api/psi4.core.scalar_variable.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/api/psi4.core.scalar_variable.html,1,['update'],['updated']
Deployability,"﻿. scalar_variable. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; scalar_variable. scalar_variable¶. psi4.core.scalar_variable(key: str) → float¶; Returns the double QCVariable key (case-insensitive); prefer variable(). table of contents. scalar_variable; scalar_variable(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; scalar_variable. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/api/psi4.core.scalar_variable.html:535,update,updated,535,psi4manual/1.9.x/api/psi4.core.scalar_variable.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/api/psi4.core.scalar_variable.html,1,['update'],['updated']
Deployability,"﻿. scalar_variables. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; scalar_variables. scalar_variables¶. psi4.core.scalar_variables() → dict[str, float]¶; Returns dictionary of all double QCVariables; prefer variables(). table of contents. scalar_variables; scalar_variables(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; scalar_variables. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/api/psi4.core.scalar_variables.html:552,update,updated,552,psi4manual/master/api/psi4.core.scalar_variables.html,https://psicode.org,https://psicode.org/psi4manual/master/api/psi4.core.scalar_variables.html,1,['update'],['updated']
Deployability,"﻿. scalar_variables. Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. scalar_variables¶. psi4.core.scalar_variables() → Dict[str, float]¶; Returns dictionary of all double QC variables. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2019, The Psi4 Project.; Last updated on Wednesday, 15 May 2019 08:49PM.; Created using Sphinx 1.8.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/api/psi4.core.scalar_variables-1.html:421,update,updated,421,psi4manual/1.3.2/api/psi4.core.scalar_variables-1.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/api/psi4.core.scalar_variables-1.html,2,['update'],['updated']
Deployability,"﻿. scalar_variables. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; scalar_variables. scalar_variables¶. psi4.core.scalar_variables() → Dict[str, float]¶; Returns dictionary of all double QCVariables; prefer variables(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; scalar_variables. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/api/psi4.core.scalar_variables-1.html:472,update,updated,472,psi4manual/1.4.0/api/psi4.core.scalar_variables-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/api/psi4.core.scalar_variables-1.html,2,['update'],['updated']
Deployability,"﻿. scalar_variables. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; scalar_variables. scalar_variables¶. psi4.core.scalar_variables() → Dict[str, float]¶; Returns dictionary of all double QCVariables; prefer variables(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; scalar_variables. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/api/psi4.core.scalar_variables-1.html:472,update,updated,472,psi4manual/1.5.0/api/psi4.core.scalar_variables-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/api/psi4.core.scalar_variables-1.html,2,['update'],['updated']
Deployability,"﻿. scalar_variables. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; scalar_variables. scalar_variables¶. psi4.core.scalar_variables() → Dict[str, float]¶; Returns dictionary of all double QCVariables; prefer variables(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; scalar_variables. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/api/psi4.core.scalar_variables.html:472,update,updated,472,psi4manual/1.6.x/api/psi4.core.scalar_variables.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/api/psi4.core.scalar_variables.html,1,['update'],['updated']
Deployability,"﻿. scalar_variables. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; scalar_variables. scalar_variables¶. psi4.core.scalar_variables() → Dict[str, float]¶; Returns dictionary of all double QCVariables; prefer variables(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; scalar_variables. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/api/psi4.core.scalar_variables.html:477,update,updated,477,psi4manual/1.7.x/api/psi4.core.scalar_variables.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/api/psi4.core.scalar_variables.html,1,['update'],['updated']
Deployability,"﻿. scalar_variables. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; scalar_variables. scalar_variables¶. psi4.core.scalar_variables() → Dict[str, float]¶; Returns dictionary of all double QCVariables; prefer variables(). table of contents. scalar_variables; scalar_variables(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; scalar_variables. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/api/psi4.core.scalar_variables.html:538,update,updated,538,psi4manual/1.8.x/api/psi4.core.scalar_variables.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/api/psi4.core.scalar_variables.html,1,['update'],['updated']
Deployability,"﻿. scalar_variables. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; scalar_variables. scalar_variables¶. psi4.core.scalar_variables() → Dict[str, float]¶; Returns dictionary of all double QCVariables; prefer variables(). table of contents. scalar_variables; scalar_variables(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; scalar_variables. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/api/psi4.core.scalar_variables.html:538,update,updated,538,psi4manual/1.9.x/api/psi4.core.scalar_variables.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/api/psi4.core.scalar_variables.html,1,['update'],['updated']
Deployability,"﻿. scatter. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; scatter. scatter¶. psi4.core.scatter(arg0: psi4.core.Molecule, arg1: float, arg2: list, arg3: list, arg4: list) → None¶; New Scatter function. table of contents. scatter; scatter(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; scatter. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/api/psi4.core.scatter.html:506,update,updated,506,psi4manual/master/api/psi4.core.scatter.html,https://psicode.org,https://psicode.org/psi4manual/master/api/psi4.core.scatter.html,1,['update'],['updated']
Deployability,"﻿. scatter. Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. scatter¶. psi4.core.scatter(arg0: psi::Molecule, arg1: float, arg2: list, arg3: list, arg4: list) → None¶; New Scatter function. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2018, The Psi4 Project.; Last updated on Wednesday, 25 July 2018 04:21AM.; Created using Sphinx 1.7.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/api/psi4.core.scatter-1.html:425,update,updated,425,psi4manual/1.2.1/api/psi4.core.scatter-1.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/api/psi4.core.scatter-1.html,2,['update'],['updated']
Deployability,"﻿. scatter. Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. scatter¶. psi4.core.scatter(arg0: psi::Molecule, arg1: float, arg2: list, arg3: list, arg4: list) → None¶; New Scatter function. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2019, The Psi4 Project.; Last updated on Wednesday, 15 May 2019 08:49PM.; Created using Sphinx 1.8.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/api/psi4.core.scatter-1.html:425,update,updated,425,psi4manual/1.3.2/api/psi4.core.scatter-1.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/api/psi4.core.scatter-1.html,2,['update'],['updated']
Deployability,"﻿. scatter. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; scatter. scatter¶. psi4.core.scatter(arg0: psi4.core.Molecule, arg1: float, arg2: list, arg3: list, arg4: list) → None¶; New Scatter function. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; scatter. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/api/psi4.core.scatter-1.html:444,update,updated,444,psi4manual/1.4.0/api/psi4.core.scatter-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/api/psi4.core.scatter-1.html,2,['update'],['updated']
Deployability,"﻿. scatter. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; scatter. scatter¶. psi4.core.scatter(arg0: psi4.core.Molecule, arg1: float, arg2: list, arg3: list, arg4: list) → None¶; New Scatter function. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; scatter. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/api/psi4.core.scatter-1.html:444,update,updated,444,psi4manual/1.5.0/api/psi4.core.scatter-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/api/psi4.core.scatter-1.html,2,['update'],['updated']
Deployability,"﻿. scatter. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; scatter. scatter¶. psi4.core.scatter(arg0: psi4.core.Molecule, arg1: float, arg2: list, arg3: list, arg4: list) → None¶; New Scatter function. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; scatter. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/api/psi4.core.scatter.html:444,update,updated,444,psi4manual/1.6.x/api/psi4.core.scatter.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/api/psi4.core.scatter.html,1,['update'],['updated']
Deployability,"﻿. scatter. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; scatter. scatter¶. psi4.core.scatter(arg0: psi4.core.Molecule, arg1: float, arg2: list, arg3: list, arg4: list) → None¶; New Scatter function. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; scatter. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/api/psi4.core.scatter.html:449,update,updated,449,psi4manual/1.7.x/api/psi4.core.scatter.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/api/psi4.core.scatter.html,1,['update'],['updated']
Deployability,"﻿. scatter. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; scatter. scatter¶. psi4.core.scatter(arg0: psi4.core.Molecule, arg1: float, arg2: list, arg3: list, arg4: list) → None¶; New Scatter function. table of contents. scatter; scatter(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; scatter. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/api/psi4.core.scatter.html:492,update,updated,492,psi4manual/1.8.x/api/psi4.core.scatter.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/api/psi4.core.scatter.html,1,['update'],['updated']
Deployability,"﻿. scatter. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; scatter. scatter¶. psi4.core.scatter(arg0: psi4.core.Molecule, arg1: float, arg2: list, arg3: list, arg4: list) → None¶; New Scatter function. table of contents. scatter; scatter(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; scatter. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/api/psi4.core.scatter.html:492,update,updated,492,psi4manual/1.9.x/api/psi4.core.scatter.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/api/psi4.core.scatter.html,1,['update'],['updated']
Deployability,"﻿. scf_helper. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; scf_helper. scf_helper¶. psi4.driver.scf_helper(name, post_scf=True, **kwargs)[source]¶; Function serving as helper to SCF, choosing whether to cast; up or just run SCF with a standard guess. This preserves; previous SCF options set by other procedures (e.g., SAPT; output file types for SCF). Most run_* functions should call; this function, common exceptions being when multireference; SCF is needed or when restarting from converged SCF. table of contents. scf_helper; scf_helper(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; scf_helper. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/api/psi4.driver.scf_helper.html:816,update,updated,816,psi4manual/master/api/psi4.driver.scf_helper.html,https://psicode.org,https://psicode.org/psi4manual/master/api/psi4.driver.scf_helper.html,1,['update'],['updated']
Deployability,"﻿. scf_helper. Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. scf_helper¶. psi4.driver.scf_helper(name, post_scf=True, **kwargs)[source]¶; Function serving as helper to SCF, choosing whether to cast; up or just run SCF with a standard guess. This preserves; previous SCF options set by other procedures (e.g., SAPT; output file types for SCF). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2018, The Psi4 Project.; Last updated on Wednesday, 25 July 2018 04:21AM.; Created using Sphinx 1.7.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/api/psi4.driver.scf_helper-1.html:581,update,updated,581,psi4manual/1.2.1/api/psi4.driver.scf_helper-1.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/api/psi4.driver.scf_helper-1.html,2,['update'],['updated']
Deployability,"﻿. scf_helper. Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. scf_helper¶. psi4.driver.scf_helper(name, post_scf=True, **kwargs)[source]¶; Function serving as helper to SCF, choosing whether to cast; up or just run SCF with a standard guess. This preserves; previous SCF options set by other procedures (e.g., SAPT; output file types for SCF). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2019, The Psi4 Project.; Last updated on Wednesday, 15 May 2019 08:49PM.; Created using Sphinx 1.8.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/api/psi4.driver.scf_helper-1.html:581,update,updated,581,psi4manual/1.3.2/api/psi4.driver.scf_helper-1.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/api/psi4.driver.scf_helper-1.html,2,['update'],['updated']
Deployability,"﻿. scf_helper. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; scf_helper. scf_helper¶. psi4.driver.scf_helper(name, post_scf=True, **kwargs)[source]¶; Function serving as helper to SCF, choosing whether to cast; up or just run SCF with a standard guess. This preserves; previous SCF options set by other procedures (e.g., SAPT; output file types for SCF). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; scf_helper. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/api/psi4.driver.scf_helper-1.html:601,update,updated,601,psi4manual/1.4.0/api/psi4.driver.scf_helper-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/api/psi4.driver.scf_helper-1.html,2,['update'],['updated']
Deployability,"﻿. scf_helper. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; scf_helper. scf_helper¶. psi4.driver.scf_helper(name, post_scf=True, **kwargs)[source]¶; Function serving as helper to SCF, choosing whether to cast; up or just run SCF with a standard guess. This preserves; previous SCF options set by other procedures (e.g., SAPT; output file types for SCF). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; scf_helper. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/api/psi4.driver.scf_helper-1.html:601,update,updated,601,psi4manual/1.5.0/api/psi4.driver.scf_helper-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/api/psi4.driver.scf_helper-1.html,2,['update'],['updated']
Deployability,"﻿. scf_helper. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; scf_helper. scf_helper¶. psi4.driver.scf_helper(name, post_scf=True, **kwargs)[source]¶; Function serving as helper to SCF, choosing whether to cast; up or just run SCF with a standard guess. This preserves; previous SCF options set by other procedures (e.g., SAPT; output file types for SCF). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; scf_helper. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/api/psi4.driver.scf_helper.html:601,update,updated,601,psi4manual/1.6.x/api/psi4.driver.scf_helper.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/api/psi4.driver.scf_helper.html,1,['update'],['updated']
Deployability,"﻿. scf_helper. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; scf_helper. scf_helper¶. psi4.driver.scf_helper(name, post_scf=True, **kwargs)[source]¶; Function serving as helper to SCF, choosing whether to cast; up or just run SCF with a standard guess. This preserves; previous SCF options set by other procedures (e.g., SAPT; output file types for SCF). Most run_* functions should call; this function, common exceptions being when multireference; SCF is needed or when restarting from converged SCF. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; scf_helper. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/api/psi4.driver.scf_helper.html:753,update,updated,753,psi4manual/1.7.x/api/psi4.driver.scf_helper.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/api/psi4.driver.scf_helper.html,1,['update'],['updated']
Deployability,"﻿. scf_helper. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; scf_helper. scf_helper¶. psi4.driver.scf_helper(name, post_scf=True, **kwargs)[source]¶; Function serving as helper to SCF, choosing whether to cast; up or just run SCF with a standard guess. This preserves; previous SCF options set by other procedures (e.g., SAPT; output file types for SCF). Most run_* functions should call; this function, common exceptions being when multireference; SCF is needed or when restarting from converged SCF. table of contents. scf_helper; scf_helper(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; scf_helper. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/api/psi4.driver.scf_helper.html:802,update,updated,802,psi4manual/1.8.x/api/psi4.driver.scf_helper.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/api/psi4.driver.scf_helper.html,1,['update'],['updated']
Deployability,"﻿. scf_helper. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; scf_helper. scf_helper¶. psi4.driver.scf_helper(name, post_scf=True, **kwargs)[source]¶; Function serving as helper to SCF, choosing whether to cast; up or just run SCF with a standard guess. This preserves; previous SCF options set by other procedures (e.g., SAPT; output file types for SCF). Most run_* functions should call; this function, common exceptions being when multireference; SCF is needed or when restarting from converged SCF. table of contents. scf_helper; scf_helper(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; scf_helper. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/api/psi4.driver.scf_helper.html:802,update,updated,802,psi4manual/1.9.x/api/psi4.driver.scf_helper.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/api/psi4.driver.scf_helper.html,1,['update'],['updated']
Deployability,"﻿. scf_wavefunction_factory. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; scf_wavefunction_factory. scf_wavefunction_factory¶. psi4.driver.scf_wavefunction_factory(name, ref_wfn, reference, **kwargs)[source]¶; Builds the correct (R/U/RO/CU HF/KS) wavefunction from the; provided information, sets relevant auxiliary basis sets on it,; and prepares any empirical dispersion. table of contents. scf_wavefunction_factory; scf_wavefunction_factory(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; scf_wavefunction_factory. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/api/psi4.driver.scf_wavefunction_factory.html:731,update,updated,731,psi4manual/master/api/psi4.driver.scf_wavefunction_factory.html,https://psicode.org,https://psicode.org/psi4manual/master/api/psi4.driver.scf_wavefunction_factory.html,1,['update'],['updated']
Deployability,"﻿. scf_wavefunction_factory. Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. scf_wavefunction_factory¶. psi4.driver.scf_wavefunction_factory(name, ref_wfn, reference)[source]¶; Builds the correct wavefunction from the provided information. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2018, The Psi4 Project.; Last updated on Wednesday, 25 July 2018 04:21AM.; Created using Sphinx 1.7.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/api/psi4.driver.scf_wavefunction_factory-1.html:476,update,updated,476,psi4manual/1.2.1/api/psi4.driver.scf_wavefunction_factory-1.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/api/psi4.driver.scf_wavefunction_factory-1.html,2,['update'],['updated']
Deployability,"﻿. scf_wavefunction_factory. Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. scf_wavefunction_factory¶. psi4.driver.scf_wavefunction_factory(name, ref_wfn, reference, **kwargs)[source]¶; Builds the correct (R/U/RO/CU HF/KS) wavefunction from the; provided information, sets relevant auxiliary basis sets on it,; and prepares any empirical dispersion. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2019, The Psi4 Project.; Last updated on Wednesday, 15 May 2019 08:49PM.; Created using Sphinx 1.8.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/api/psi4.driver.scf_wavefunction_factory-1.html:587,update,updated,587,psi4manual/1.3.2/api/psi4.driver.scf_wavefunction_factory-1.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/api/psi4.driver.scf_wavefunction_factory-1.html,2,['update'],['updated']
Deployability,"﻿. scf_wavefunction_factory. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; scf_wavefunction_factory. scf_wavefunction_factory¶. psi4.driver.scf_wavefunction_factory(name, ref_wfn, reference, **kwargs)[source]¶; Builds the correct (R/U/RO/CU HF/KS) wavefunction from the; provided information, sets relevant auxiliary basis sets on it,; and prepares any empirical dispersion. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; scf_wavefunction_factory. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/api/psi4.driver.scf_wavefunction_factory-1.html:635,update,updated,635,psi4manual/1.4.0/api/psi4.driver.scf_wavefunction_factory-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/api/psi4.driver.scf_wavefunction_factory-1.html,2,['update'],['updated']
Deployability,"﻿. scf_wavefunction_factory. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; scf_wavefunction_factory. scf_wavefunction_factory¶. psi4.driver.scf_wavefunction_factory(name, ref_wfn, reference, **kwargs)[source]¶; Builds the correct (R/U/RO/CU HF/KS) wavefunction from the; provided information, sets relevant auxiliary basis sets on it,; and prepares any empirical dispersion. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; scf_wavefunction_factory. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/api/psi4.driver.scf_wavefunction_factory-1.html:635,update,updated,635,psi4manual/1.5.0/api/psi4.driver.scf_wavefunction_factory-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/api/psi4.driver.scf_wavefunction_factory-1.html,2,['update'],['updated']
Deployability,"﻿. scf_wavefunction_factory. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; scf_wavefunction_factory. scf_wavefunction_factory¶. psi4.driver.scf_wavefunction_factory(name, ref_wfn, reference, **kwargs)[source]¶; Builds the correct (R/U/RO/CU HF/KS) wavefunction from the; provided information, sets relevant auxiliary basis sets on it,; and prepares any empirical dispersion. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; scf_wavefunction_factory. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/api/psi4.driver.scf_wavefunction_factory.html:635,update,updated,635,psi4manual/1.6.x/api/psi4.driver.scf_wavefunction_factory.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/api/psi4.driver.scf_wavefunction_factory.html,1,['update'],['updated']
Deployability,"﻿. scf_wavefunction_factory. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; scf_wavefunction_factory. scf_wavefunction_factory¶. psi4.driver.scf_wavefunction_factory(name, ref_wfn, reference, **kwargs)[source]¶; Builds the correct (R/U/RO/CU HF/KS) wavefunction from the; provided information, sets relevant auxiliary basis sets on it,; and prepares any empirical dispersion. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; scf_wavefunction_factory. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/api/psi4.driver.scf_wavefunction_factory.html:640,update,updated,640,psi4manual/1.7.x/api/psi4.driver.scf_wavefunction_factory.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/api/psi4.driver.scf_wavefunction_factory.html,1,['update'],['updated']
Deployability,"﻿. scf_wavefunction_factory. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; scf_wavefunction_factory. scf_wavefunction_factory¶. psi4.driver.scf_wavefunction_factory(name, ref_wfn, reference, **kwargs)[source]¶; Builds the correct (R/U/RO/CU HF/KS) wavefunction from the; provided information, sets relevant auxiliary basis sets on it,; and prepares any empirical dispersion. table of contents. scf_wavefunction_factory; scf_wavefunction_factory(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; scf_wavefunction_factory. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/api/psi4.driver.scf_wavefunction_factory.html:717,update,updated,717,psi4manual/1.8.x/api/psi4.driver.scf_wavefunction_factory.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/api/psi4.driver.scf_wavefunction_factory.html,1,['update'],['updated']
Deployability,"﻿. scf_wavefunction_factory. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; scf_wavefunction_factory. scf_wavefunction_factory¶. psi4.driver.scf_wavefunction_factory(name, ref_wfn, reference, **kwargs)[source]¶; Builds the correct (R/U/RO/CU HF/KS) wavefunction from the; provided information, sets relevant auxiliary basis sets on it,; and prepares any empirical dispersion. table of contents. scf_wavefunction_factory; scf_wavefunction_factory(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; scf_wavefunction_factory. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/api/psi4.driver.scf_wavefunction_factory.html:717,update,updated,717,psi4manual/1.9.x/api/psi4.driver.scf_wavefunction_factory.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/api/psi4.driver.scf_wavefunction_factory.html,1,['update'],['updated']
Deployability,"﻿. scfgrad. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; scfgrad. scfgrad¶. psi4.core.scfgrad(ref_wfn: psi4.core.HF) → psi4.core.Matrix¶; Run scfgrad, which is a specialized DF-SCF gradient program. table of contents. scfgrad; scfgrad(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; scfgrad. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/api/psi4.core.scfgrad.html:505,update,updated,505,psi4manual/master/api/psi4.core.scfgrad.html,https://psicode.org,https://psicode.org/psi4manual/master/api/psi4.core.scfgrad.html,1,['update'],['updated']
Deployability,"﻿. scfgrad. Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. scfgrad¶. psi4.core.scfgrad(arg0: psi::Wavefunction) → psi::Matrix¶; Run scfgrad, which is a specialized DF-SCF gradient program. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2018, The Psi4 Project.; Last updated on Wednesday, 25 July 2018 04:21AM.; Created using Sphinx 1.7.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/api/psi4.core.scfgrad-1.html:426,update,updated,426,psi4manual/1.2.1/api/psi4.core.scfgrad-1.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/api/psi4.core.scfgrad-1.html,2,['update'],['updated']
Deployability,"﻿. scfgrad. Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. scfgrad¶. psi4.core.scfgrad(arg0: psi::Wavefunction) → psi::Matrix¶; Run scfgrad, which is a specialized DF-SCF gradient program. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2019, The Psi4 Project.; Last updated on Wednesday, 15 May 2019 08:49PM.; Created using Sphinx 1.8.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/api/psi4.core.scfgrad-1.html:426,update,updated,426,psi4manual/1.3.2/api/psi4.core.scfgrad-1.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/api/psi4.core.scfgrad-1.html,2,['update'],['updated']
Deployability,"﻿. scfgrad. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; scfgrad. scfgrad¶. psi4.core.scfgrad(ref_wfn: psi4.core.Wavefunction) → psi4.core.Matrix¶; Run scfgrad, which is a specialized DF-SCF gradient program. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; scfgrad. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/api/psi4.core.scfgrad-1.html:453,update,updated,453,psi4manual/1.4.0/api/psi4.core.scfgrad-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/api/psi4.core.scfgrad-1.html,2,['update'],['updated']
Deployability,"﻿. scfgrad. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; scfgrad. scfgrad¶. psi4.core.scfgrad(ref_wfn: psi4.core.Wavefunction) → psi4.core.Matrix¶; Run scfgrad, which is a specialized DF-SCF gradient program. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; scfgrad. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/api/psi4.core.scfgrad-1.html:453,update,updated,453,psi4manual/1.5.0/api/psi4.core.scfgrad-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/api/psi4.core.scfgrad-1.html,2,['update'],['updated']
Deployability,"﻿. scfgrad. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; scfgrad. scfgrad¶. psi4.core.scfgrad(ref_wfn: psi4.core.Wavefunction) → psi4.core.Matrix¶; Run scfgrad, which is a specialized DF-SCF gradient program. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; scfgrad. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/api/psi4.core.scfgrad.html:453,update,updated,453,psi4manual/1.6.x/api/psi4.core.scfgrad.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/api/psi4.core.scfgrad.html,1,['update'],['updated']
Deployability,"﻿. scfgrad. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; scfgrad. scfgrad¶. psi4.core.scfgrad(ref_wfn: psi4.core.HF) → psi4.core.Matrix¶; Run scfgrad, which is a specialized DF-SCF gradient program. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; scfgrad. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/api/psi4.core.scfgrad.html:448,update,updated,448,psi4manual/1.7.x/api/psi4.core.scfgrad.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/api/psi4.core.scfgrad.html,1,['update'],['updated']
Deployability,"﻿. scfgrad. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; scfgrad. scfgrad¶. psi4.core.scfgrad(ref_wfn: psi4.core.HF) → psi4.core.Matrix¶; Run scfgrad, which is a specialized DF-SCF gradient program. table of contents. scfgrad; scfgrad(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; scfgrad. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/api/psi4.core.scfgrad.html:491,update,updated,491,psi4manual/1.8.x/api/psi4.core.scfgrad.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/api/psi4.core.scfgrad.html,1,['update'],['updated']
Deployability,"﻿. scfgrad. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; scfgrad. scfgrad¶. psi4.core.scfgrad(ref_wfn: psi4.core.HF) → psi4.core.Matrix¶; Run scfgrad, which is a specialized DF-SCF gradient program. table of contents. scfgrad; scfgrad(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; scfgrad. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/api/psi4.core.scfgrad.html:491,update,updated,491,psi4manual/1.9.x/api/psi4.core.scfgrad.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/api/psi4.core.scfgrad.html,1,['update'],['updated']
Deployability,"﻿. scfhess. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; scfhess. scfhess¶. psi4.core.scfhess(ref_wfn: psi4.core.HF) → psi4.core.Matrix¶; Run scfhess, which is a specialized DF-SCF hessian program. table of contents. scfhess; scfhess(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; scfhess. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/api/psi4.core.scfhess.html:504,update,updated,504,psi4manual/master/api/psi4.core.scfhess.html,https://psicode.org,https://psicode.org/psi4manual/master/api/psi4.core.scfhess.html,1,['update'],['updated']
Deployability,"﻿. scfhess. Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. scfhess¶. psi4.core.scfhess(arg0: psi::Wavefunction) → psi::Matrix¶; Run scfhess, which is a specialized DF-SCF hessian program. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2018, The Psi4 Project.; Last updated on Wednesday, 25 July 2018 04:21AM.; Created using Sphinx 1.7.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/api/psi4.core.scfhess-1.html:425,update,updated,425,psi4manual/1.2.1/api/psi4.core.scfhess-1.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/api/psi4.core.scfhess-1.html,2,['update'],['updated']
Deployability,"﻿. scfhess. Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. scfhess¶. psi4.core.scfhess(arg0: psi::Wavefunction) → psi::Matrix¶; Run scfhess, which is a specialized DF-SCF hessian program. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2019, The Psi4 Project.; Last updated on Wednesday, 15 May 2019 08:49PM.; Created using Sphinx 1.8.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/api/psi4.core.scfhess-1.html:425,update,updated,425,psi4manual/1.3.2/api/psi4.core.scfhess-1.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/api/psi4.core.scfhess-1.html,2,['update'],['updated']
Deployability,"﻿. scfhess. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; scfhess. scfhess¶. psi4.core.scfhess(ref_wfn: psi4.core.Wavefunction) → psi4.core.Matrix¶; Run scfhess, which is a specialized DF-SCF hessian program. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; scfhess. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/api/psi4.core.scfhess-1.html:452,update,updated,452,psi4manual/1.4.0/api/psi4.core.scfhess-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/api/psi4.core.scfhess-1.html,2,['update'],['updated']
Deployability,"﻿. scfhess. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; scfhess. scfhess¶. psi4.core.scfhess(ref_wfn: psi4.core.Wavefunction) → psi4.core.Matrix¶; Run scfhess, which is a specialized DF-SCF hessian program. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; scfhess. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/api/psi4.core.scfhess-1.html:452,update,updated,452,psi4manual/1.5.0/api/psi4.core.scfhess-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/api/psi4.core.scfhess-1.html,2,['update'],['updated']
Deployability,"﻿. scfhess. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; scfhess. scfhess¶. psi4.core.scfhess(ref_wfn: psi4.core.Wavefunction) → psi4.core.Matrix¶; Run scfhess, which is a specialized DF-SCF hessian program. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; scfhess. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/api/psi4.core.scfhess.html:452,update,updated,452,psi4manual/1.6.x/api/psi4.core.scfhess.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/api/psi4.core.scfhess.html,1,['update'],['updated']
Deployability,"﻿. scfhess. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; scfhess. scfhess¶. psi4.core.scfhess(ref_wfn: psi4.core.HF) → psi4.core.Matrix¶; Run scfhess, which is a specialized DF-SCF hessian program. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; scfhess. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/api/psi4.core.scfhess.html:447,update,updated,447,psi4manual/1.7.x/api/psi4.core.scfhess.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/api/psi4.core.scfhess.html,1,['update'],['updated']
Deployability,"﻿. scfhess. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; scfhess. scfhess¶. psi4.core.scfhess(ref_wfn: psi4.core.HF) → psi4.core.Matrix¶; Run scfhess, which is a specialized DF-SCF hessian program. table of contents. scfhess; scfhess(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; scfhess. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/api/psi4.core.scfhess.html:490,update,updated,490,psi4manual/1.8.x/api/psi4.core.scfhess.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/api/psi4.core.scfhess.html,1,['update'],['updated']
Deployability,"﻿. scfhess. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; scfhess. scfhess¶. psi4.core.scfhess(ref_wfn: psi4.core.HF) → psi4.core.Matrix¶; Run scfhess, which is a specialized DF-SCF hessian program. table of contents. scfhess; scfhess(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; scfhess. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/api/psi4.core.scfhess.html:490,update,updated,490,psi4manual/1.9.x/api/psi4.core.scfhess.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/api/psi4.core.scfhess.html,1,['update'],['updated']
Deployability,"﻿. set_active_molecule. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; set_active_molecule. set_active_molecule¶. psi4.core.set_active_molecule(molecule: psi4.core.Molecule) → None¶; Activates a previously defined molecule in global memory so next computations use it. table of contents. set_active_molecule; set_active_molecule(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; set_active_molecule. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/api/psi4.core.set_active_molecule.html:609,update,updated,609,psi4manual/master/api/psi4.core.set_active_molecule.html,https://psicode.org,https://psicode.org/psi4manual/master/api/psi4.core.set_active_molecule.html,1,['update'],['updated']
Deployability,"﻿. set_active_molecule. Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. set_active_molecule¶. psi4.core.set_active_molecule(arg0: psi::Molecule) → None¶; Activates a previously defined (in the input) molecule, by name. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2018, The Psi4 Project.; Last updated on Wednesday, 25 July 2018 04:21AM.; Created using Sphinx 1.7.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/api/psi4.core.set_active_molecule-1.html:455,update,updated,455,psi4manual/1.2.1/api/psi4.core.set_active_molecule-1.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/api/psi4.core.set_active_molecule-1.html,2,['update'],['updated']
Deployability,"﻿. set_active_molecule. Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. set_active_molecule¶. psi4.core.set_active_molecule(arg0: psi::Molecule) → None¶; Activates a previously defined (in the input) molecule, by name. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2019, The Psi4 Project.; Last updated on Wednesday, 15 May 2019 08:49PM.; Created using Sphinx 1.8.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/api/psi4.core.set_active_molecule-1.html:455,update,updated,455,psi4manual/1.3.2/api/psi4.core.set_active_molecule-1.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/api/psi4.core.set_active_molecule-1.html,2,['update'],['updated']
Deployability,"﻿. set_active_molecule. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; set_active_molecule. set_active_molecule¶. psi4.core.set_active_molecule(molecule: psi4.core.Molecule) → None¶; Activates a previously defined molecule in global memory so next computations use it. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; set_active_molecule. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/api/psi4.core.set_active_molecule-1.html:523,update,updated,523,psi4manual/1.4.0/api/psi4.core.set_active_molecule-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/api/psi4.core.set_active_molecule-1.html,2,['update'],['updated']
Deployability,"﻿. set_active_molecule. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; set_active_molecule. set_active_molecule¶. psi4.core.set_active_molecule(molecule: psi4.core.Molecule) → None¶; Activates a previously defined molecule in global memory so next computations use it. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; set_active_molecule. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/api/psi4.core.set_active_molecule-1.html:523,update,updated,523,psi4manual/1.5.0/api/psi4.core.set_active_molecule-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/api/psi4.core.set_active_molecule-1.html,2,['update'],['updated']
Deployability,"﻿. set_active_molecule. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; set_active_molecule. set_active_molecule¶. psi4.core.set_active_molecule(molecule: psi4.core.Molecule) → None¶; Activates a previously defined molecule in global memory so next computations use it. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; set_active_molecule. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/api/psi4.core.set_active_molecule.html:523,update,updated,523,psi4manual/1.6.x/api/psi4.core.set_active_molecule.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/api/psi4.core.set_active_molecule.html,1,['update'],['updated']
Deployability,"﻿. set_active_molecule. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; set_active_molecule. set_active_molecule¶. psi4.core.set_active_molecule(molecule: psi4.core.Molecule) → None¶; Activates a previously defined molecule in global memory so next computations use it. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; set_active_molecule. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/api/psi4.core.set_active_molecule.html:528,update,updated,528,psi4manual/1.7.x/api/psi4.core.set_active_molecule.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/api/psi4.core.set_active_molecule.html,1,['update'],['updated']
Deployability,"﻿. set_active_molecule. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; set_active_molecule. set_active_molecule¶. psi4.core.set_active_molecule(molecule: psi4.core.Molecule) → None¶; Activates a previously defined molecule in global memory so next computations use it. table of contents. set_active_molecule; set_active_molecule(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; set_active_molecule. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/api/psi4.core.set_active_molecule.html:595,update,updated,595,psi4manual/1.8.x/api/psi4.core.set_active_molecule.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/api/psi4.core.set_active_molecule.html,1,['update'],['updated']
Deployability,"﻿. set_active_molecule. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; set_active_molecule. set_active_molecule¶. psi4.core.set_active_molecule(molecule: psi4.core.Molecule) → None¶; Activates a previously defined molecule in global memory so next computations use it. table of contents. set_active_molecule; set_active_molecule(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; set_active_molecule. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/api/psi4.core.set_active_molecule.html:595,update,updated,595,psi4manual/1.9.x/api/psi4.core.set_active_molecule.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/api/psi4.core.set_active_molecule.html,1,['update'],['updated']
Deployability,"﻿. set_array_variable. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; set_array_variable. set_array_variable¶. psi4.core.set_array_variable(key: str, value: psi4.core.Matrix) → None¶; Sets the requested (case-insensitive) Matrix QCVariable; prefer set_variable(). table of contents. set_array_variable; set_array_variable(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; set_array_variable. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/api/psi4.core.set_array_variable.html:601,update,updated,601,psi4manual/master/api/psi4.core.set_array_variable.html,https://psicode.org,https://psicode.org/psi4manual/master/api/psi4.core.set_array_variable.html,1,['update'],['updated']
Deployability,"﻿. set_array_variable. Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. set_array_variable¶. psi4.core.set_array_variable(arg0: str, arg1: psi::Matrix) → None¶; Sets a PSI variable, by name. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2018, The Psi4 Project.; Last updated on Wednesday, 25 July 2018 04:21AM.; Created using Sphinx 1.7.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/api/psi4.core.set_array_variable-1.html:426,update,updated,426,psi4manual/1.2.1/api/psi4.core.set_array_variable-1.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/api/psi4.core.set_array_variable-1.html,2,['update'],['updated']
Deployability,"﻿. set_array_variable. Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. set_array_variable¶. psi4.core.set_array_variable(arg0: str, arg1: psi::Matrix) → None¶; Sets the requested (case-insensitive) Matrix QC variable. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2019, The Psi4 Project.; Last updated on Wednesday, 15 May 2019 08:49PM.; Created using Sphinx 1.8.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/api/psi4.core.set_array_variable-1.html:454,update,updated,454,psi4manual/1.3.2/api/psi4.core.set_array_variable-1.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/api/psi4.core.set_array_variable-1.html,2,['update'],['updated']
Deployability,"﻿. set_array_variable. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; set_array_variable. set_array_variable¶. psi4.core.set_array_variable(key: str, value: psi4.core.Matrix) → None¶; Sets the requested (case-insensitive) Matrix QCVariable; prefer set_variable(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; set_array_variable. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/api/psi4.core.set_array_variable-1.html:517,update,updated,517,psi4manual/1.4.0/api/psi4.core.set_array_variable-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/api/psi4.core.set_array_variable-1.html,2,['update'],['updated']
Deployability,"﻿. set_array_variable. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; set_array_variable. set_array_variable¶. psi4.core.set_array_variable(key: str, value: psi4.core.Matrix) → None¶; Sets the requested (case-insensitive) Matrix QCVariable; prefer set_variable(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; set_array_variable. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/api/psi4.core.set_array_variable-1.html:517,update,updated,517,psi4manual/1.5.0/api/psi4.core.set_array_variable-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/api/psi4.core.set_array_variable-1.html,2,['update'],['updated']
Deployability,"﻿. set_array_variable. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; set_array_variable. set_array_variable¶. psi4.core.set_array_variable(key: str, value: psi4.core.Matrix) → None¶; Sets the requested (case-insensitive) Matrix QCVariable; prefer set_variable(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; set_array_variable. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/api/psi4.core.set_array_variable.html:517,update,updated,517,psi4manual/1.6.x/api/psi4.core.set_array_variable.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/api/psi4.core.set_array_variable.html,1,['update'],['updated']
Deployability,"﻿. set_array_variable. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; set_array_variable. set_array_variable¶. psi4.core.set_array_variable(key: str, value: psi4.core.Matrix) → None¶; Sets the requested (case-insensitive) Matrix QCVariable; prefer set_variable(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; set_array_variable. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/api/psi4.core.set_array_variable.html:522,update,updated,522,psi4manual/1.7.x/api/psi4.core.set_array_variable.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/api/psi4.core.set_array_variable.html,1,['update'],['updated']
Deployability,"﻿. set_array_variable. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; set_array_variable. set_array_variable¶. psi4.core.set_array_variable(key: str, value: psi4.core.Matrix) → None¶; Sets the requested (case-insensitive) Matrix QCVariable; prefer set_variable(). table of contents. set_array_variable; set_array_variable(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; set_array_variable. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/api/psi4.core.set_array_variable.html:587,update,updated,587,psi4manual/1.8.x/api/psi4.core.set_array_variable.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/api/psi4.core.set_array_variable.html,1,['update'],['updated']
Deployability,"﻿. set_array_variable. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; set_array_variable. set_array_variable¶. psi4.core.set_array_variable(key: str, value: psi4.core.Matrix) → None¶; Sets the requested (case-insensitive) Matrix QCVariable; prefer set_variable(). table of contents. set_array_variable; set_array_variable(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; set_array_variable. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/api/psi4.core.set_array_variable.html:587,update,updated,587,psi4manual/1.9.x/api/psi4.core.set_array_variable.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/api/psi4.core.set_array_variable.html,1,['update'],['updated']
Deployability,"﻿. set_datadir. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; set_datadir. set_datadir¶. psi4.core.set_datadir(psidatadir: str) → None¶; Sets the path to shared text resources, PSIDATADIR. table of contents. set_datadir; set_datadir(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; set_datadir. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/api/psi4.core.set_datadir.html:506,update,updated,506,psi4manual/master/api/psi4.core.set_datadir.html,https://psicode.org,https://psicode.org/psi4manual/master/api/psi4.core.set_datadir.html,1,['update'],['updated']
Deployability,"﻿. set_datadir. Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. set_datadir¶. psi4.core.set_datadir(arg0: str) → None¶; Returns the amount of memory available to Psi (in bytes). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2018, The Psi4 Project.; Last updated on Wednesday, 25 July 2018 04:21AM.; Created using Sphinx 1.7.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/api/psi4.core.set_datadir-1.html:414,update,updated,414,psi4manual/1.2.1/api/psi4.core.set_datadir-1.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/api/psi4.core.set_datadir-1.html,2,['update'],['updated']
Deployability,"﻿. set_datadir. Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. set_datadir¶. psi4.core.set_datadir(arg0: str) → None¶; Returns the amount of memory available to Psi (in bytes). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2019, The Psi4 Project.; Last updated on Wednesday, 15 May 2019 08:49PM.; Created using Sphinx 1.8.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/api/psi4.core.set_datadir-1.html:414,update,updated,414,psi4manual/1.3.2/api/psi4.core.set_datadir-1.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/api/psi4.core.set_datadir-1.html,2,['update'],['updated']
Deployability,"﻿. set_datadir. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; set_datadir. set_datadir¶. psi4.core.set_datadir(psidatadir: str) → None¶; Sets the path to shared text resources, PSIDATADIR. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; set_datadir. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/api/psi4.core.set_datadir-1.html:436,update,updated,436,psi4manual/1.4.0/api/psi4.core.set_datadir-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/api/psi4.core.set_datadir-1.html,2,['update'],['updated']
Deployability,"﻿. set_datadir. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; set_datadir. set_datadir¶. psi4.core.set_datadir(psidatadir: str) → None¶; Sets the path to shared text resources, PSIDATADIR. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; set_datadir. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/api/psi4.core.set_datadir-1.html:436,update,updated,436,psi4manual/1.5.0/api/psi4.core.set_datadir-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/api/psi4.core.set_datadir-1.html,2,['update'],['updated']
Deployability,"﻿. set_datadir. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; set_datadir. set_datadir¶. psi4.core.set_datadir(psidatadir: str) → None¶; Sets the path to shared text resources, PSIDATADIR. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; set_datadir. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/api/psi4.core.set_datadir.html:436,update,updated,436,psi4manual/1.6.x/api/psi4.core.set_datadir.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/api/psi4.core.set_datadir.html,1,['update'],['updated']
Deployability,"﻿. set_datadir. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; set_datadir. set_datadir¶. psi4.core.set_datadir(psidatadir: str) → None¶; Sets the path to shared text resources, PSIDATADIR. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; set_datadir. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/api/psi4.core.set_datadir.html:441,update,updated,441,psi4manual/1.7.x/api/psi4.core.set_datadir.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/api/psi4.core.set_datadir.html,1,['update'],['updated']
Deployability,"﻿. set_datadir. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; set_datadir. set_datadir¶. psi4.core.set_datadir(psidatadir: str) → None¶; Sets the path to shared text resources, PSIDATADIR. table of contents. set_datadir; set_datadir(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; set_datadir. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/api/psi4.core.set_datadir.html:492,update,updated,492,psi4manual/1.8.x/api/psi4.core.set_datadir.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/api/psi4.core.set_datadir.html,1,['update'],['updated']
Deployability,"﻿. set_datadir. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; set_datadir. set_datadir¶. psi4.core.set_datadir(psidatadir: str) → None¶; Sets the path to shared text resources, PSIDATADIR. table of contents. set_datadir; set_datadir(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; set_datadir. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/api/psi4.core.set_datadir.html:492,update,updated,492,psi4manual/1.9.x/api/psi4.core.set_datadir.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/api/psi4.core.set_datadir.html,1,['update'],['updated']
Deployability,"﻿. set_efp_torque. Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. set_efp_torque¶. psi4.core.set_efp_torque(arg0: psi::Matrix) → None¶; Assigns the global EFP gradient to the values stored in the Nefp by 6 Matrix argument. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2018, The Psi4 Project.; Last updated on Wednesday, 25 July 2018 04:21AM.; Created using Sphinx 1.7.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/api/psi4.core.set_efp_torque-1.html:460,update,updated,460,psi4manual/1.2.1/api/psi4.core.set_efp_torque-1.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/api/psi4.core.set_efp_torque-1.html,2,['update'],['updated']
Deployability,"﻿. set_frequencies. Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. set_frequencies¶. psi4.core.set_frequencies(arg0: psi::Vector) → None¶; Assigns the global frequencies to the values stored in the 3N-6 Vector argument. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2018, The Psi4 Project.; Last updated on Wednesday, 25 July 2018 04:21AM.; Created using Sphinx 1.7.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/api/psi4.core.set_frequencies-1.html:457,update,updated,457,psi4manual/1.2.1/api/psi4.core.set_frequencies-1.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/api/psi4.core.set_frequencies-1.html,2,['update'],['updated']
Deployability,"﻿. set_global_option. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; set_global_option. set_global_option¶. psi4.core.set_global_option(*args, **kwargs)¶; Overloaded function. set_global_option(key: str, value: list) -> bool. Sets value to array keyword key for all modules. set_global_option(key: str, value: int) -> bool. Sets value to integer keyword key for all modules. set_global_option(key: str, value: float) -> bool. Sets value to double keyword key for all modules. set_global_option(key: str, value: str) -> bool. Sets value to string keyword key for all modules. table of contents. set_global_option; set_global_option(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; set_global_option. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/api/psi4.core.set_global_option.html:909,update,updated,909,psi4manual/master/api/psi4.core.set_global_option.html,https://psicode.org,https://psicode.org/psi4manual/master/api/psi4.core.set_global_option.html,1,['update'],['updated']
Deployability,"﻿. set_global_option. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; set_global_option. set_global_option¶. psi4.core.set_global_option(*args, **kwargs)¶; Overloaded function. set_global_option(key: str, value: list) -> bool. Sets value to array keyword key for all modules. set_global_option(key: str, value: int) -> bool. Sets value to integer keyword key for all modules. set_global_option(key: str, value: float) -> bool. Sets value to double keyword key for all modules. set_global_option(key: str, value: str) -> bool. Sets value to string keyword key for all modules. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; set_global_option. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/api/psi4.core.set_global_option-1.html:827,update,updated,827,psi4manual/1.4.0/api/psi4.core.set_global_option-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/api/psi4.core.set_global_option-1.html,2,['update'],['updated']
Deployability,"﻿. set_global_option. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; set_global_option. set_global_option¶. psi4.core.set_global_option(*args, **kwargs)¶; Overloaded function. set_global_option(key: str, value: list) -> bool. Sets value to array keyword key for all modules. set_global_option(key: str, value: int) -> bool. Sets value to integer keyword key for all modules. set_global_option(key: str, value: float) -> bool. Sets value to double keyword key for all modules. set_global_option(key: str, value: str) -> bool. Sets value to string keyword key for all modules. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; set_global_option. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/api/psi4.core.set_global_option-1.html:827,update,updated,827,psi4manual/1.5.0/api/psi4.core.set_global_option-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/api/psi4.core.set_global_option-1.html,2,['update'],['updated']
Deployability,"﻿. set_global_option. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; set_global_option. set_global_option¶. psi4.core.set_global_option(*args, **kwargs)¶; Overloaded function. set_global_option(key: str, value: list) -> bool. Sets value to array keyword key for all modules. set_global_option(key: str, value: int) -> bool. Sets value to integer keyword key for all modules. set_global_option(key: str, value: float) -> bool. Sets value to double keyword key for all modules. set_global_option(key: str, value: str) -> bool. Sets value to string keyword key for all modules. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; set_global_option. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/api/psi4.core.set_global_option.html:827,update,updated,827,psi4manual/1.6.x/api/psi4.core.set_global_option.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/api/psi4.core.set_global_option.html,1,['update'],['updated']
Deployability,"﻿. set_global_option. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; set_global_option. set_global_option¶. psi4.core.set_global_option(*args, **kwargs)¶; Overloaded function. set_global_option(key: str, value: list) -> bool. Sets value to array keyword key for all modules. set_global_option(key: str, value: int) -> bool. Sets value to integer keyword key for all modules. set_global_option(key: str, value: float) -> bool. Sets value to double keyword key for all modules. set_global_option(key: str, value: str) -> bool. Sets value to string keyword key for all modules. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; set_global_option. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/api/psi4.core.set_global_option.html:832,update,updated,832,psi4manual/1.7.x/api/psi4.core.set_global_option.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/api/psi4.core.set_global_option.html,1,['update'],['updated']
Deployability,"﻿. set_global_option. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; set_global_option. set_global_option¶. psi4.core.set_global_option(*args, **kwargs)¶; Overloaded function. set_global_option(key: str, value: list) -> bool. Sets value to array keyword key for all modules. set_global_option(key: str, value: int) -> bool. Sets value to integer keyword key for all modules. set_global_option(key: str, value: float) -> bool. Sets value to double keyword key for all modules. set_global_option(key: str, value: str) -> bool. Sets value to string keyword key for all modules. table of contents. set_global_option; set_global_option(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; set_global_option. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/api/psi4.core.set_global_option.html:895,update,updated,895,psi4manual/1.8.x/api/psi4.core.set_global_option.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/api/psi4.core.set_global_option.html,1,['update'],['updated']
Deployability,"﻿. set_global_option. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; set_global_option. set_global_option¶. psi4.core.set_global_option(*args, **kwargs)¶; Overloaded function. set_global_option(key: str, value: list) -> bool. Sets value to array keyword key for all modules. set_global_option(key: str, value: int) -> bool. Sets value to integer keyword key for all modules. set_global_option(key: str, value: float) -> bool. Sets value to double keyword key for all modules. set_global_option(key: str, value: str) -> bool. Sets value to string keyword key for all modules. table of contents. set_global_option; set_global_option(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; set_global_option. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/api/psi4.core.set_global_option.html:895,update,updated,895,psi4manual/1.9.x/api/psi4.core.set_global_option.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/api/psi4.core.set_global_option.html,1,['update'],['updated']
Deployability,"﻿. set_global_option. Navigation. Index. modules    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. set_global_option¶. psi4.core.set_global_option(*args, **kwargs)¶; Overloaded function. set_global_option(arg0: str, arg1: list) -> bool. Sets value arg2 to array keyword arg1 for all modules. set_global_option(arg0: str, arg1: int) -> bool. Sets value arg2 to integer keyword arg1 for all modules. set_global_option(arg0: str, arg1: float) -> bool. Sets value arg2 to double keyword arg1 for all modules. set_global_option(arg0: str, arg1: str) -> bool. Sets value arg2 to string keyword arg1 for all modules. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2018, The Psi4 Project.; Last updated on Wednesday, 25 July 2018 04:21AM.; Created using Sphinx 1.7.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/api/psi4.core.set_global_option-1.html:807,update,updated,807,psi4manual/1.2.1/api/psi4.core.set_global_option-1.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/api/psi4.core.set_global_option-1.html,2,['update'],['updated']
Deployability,"﻿. set_global_option. Navigation. Index. modules    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. set_global_option¶. psi4.core.set_global_option(*args, **kwargs)¶; Overloaded function. set_global_option(arg0: str, arg1: list) -> bool. Sets value arg2 to array keyword arg1 for all modules. set_global_option(arg0: str, arg1: int) -> bool. Sets value arg2 to integer keyword arg1 for all modules. set_global_option(arg0: str, arg1: float) -> bool. Sets value arg2 to double keyword arg1 for all modules. set_global_option(arg0: str, arg1: str) -> bool. Sets value arg2 to string keyword arg1 for all modules. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2019, The Psi4 Project.; Last updated on Wednesday, 15 May 2019 08:49PM.; Created using Sphinx 1.8.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/api/psi4.core.set_global_option-1.html:807,update,updated,807,psi4manual/1.3.2/api/psi4.core.set_global_option-1.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/api/psi4.core.set_global_option-1.html,2,['update'],['updated']
Deployability,"﻿. set_global_option_python. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; set_global_option_python. set_global_option_python¶. psi4.core.set_global_option_python(key, EXTERN)¶; This is a fairly hacky way to get around EXTERN issues. Effectively we are routing this option Python side through attributes until the general Options overhaul. table of contents. set_global_option_python; set_global_option_python(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; set_global_option_python. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/api/psi4.core.set_global_option_python.html:696,update,updated,696,psi4manual/master/api/psi4.core.set_global_option_python.html,https://psicode.org,https://psicode.org/psi4manual/master/api/psi4.core.set_global_option_python.html,1,['update'],['updated']
Deployability,"﻿. set_global_option_python. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; set_global_option_python. set_global_option_python¶. psi4.core.set_global_option_python(key, EXTERN)¶; This is a fairly hacky way to get around EXTERN issues. Effectively we are routing this option Python side through attributes until the general Options overhaul. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; set_global_option_python. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/api/psi4.core.set_global_option_python-1.html:600,update,updated,600,psi4manual/1.4.0/api/psi4.core.set_global_option_python-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/api/psi4.core.set_global_option_python-1.html,2,['update'],['updated']
Deployability,"﻿. set_global_option_python. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; set_global_option_python. set_global_option_python¶. psi4.core.set_global_option_python(key, EXTERN)¶; This is a fairly hacky way to get around EXTERN issues. Effectively we are routing this option Python side through attributes until the general Options overhaul. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; set_global_option_python. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/api/psi4.core.set_global_option_python-1.html:600,update,updated,600,psi4manual/1.5.0/api/psi4.core.set_global_option_python-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/api/psi4.core.set_global_option_python-1.html,2,['update'],['updated']
Deployability,"﻿. set_global_option_python. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; set_global_option_python. set_global_option_python¶. psi4.core.set_global_option_python(key, EXTERN)¶; This is a fairly hacky way to get around EXTERN issues. Effectively we are routing this option Python side through attributes until the general Options overhaul. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; set_global_option_python. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/api/psi4.core.set_global_option_python.html:600,update,updated,600,psi4manual/1.6.x/api/psi4.core.set_global_option_python.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/api/psi4.core.set_global_option_python.html,1,['update'],['updated']
Deployability,"﻿. set_global_option_python. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; set_global_option_python. set_global_option_python¶. psi4.core.set_global_option_python(key, EXTERN)¶; This is a fairly hacky way to get around EXTERN issues. Effectively we are routing this option Python side through attributes until the general Options overhaul. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; set_global_option_python. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/api/psi4.core.set_global_option_python.html:605,update,updated,605,psi4manual/1.7.x/api/psi4.core.set_global_option_python.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/api/psi4.core.set_global_option_python.html,1,['update'],['updated']
Deployability,"﻿. set_global_option_python. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; set_global_option_python. set_global_option_python¶. psi4.core.set_global_option_python(key, EXTERN)¶; This is a fairly hacky way to get around EXTERN issues. Effectively we are routing this option Python side through attributes until the general Options overhaul. table of contents. set_global_option_python; set_global_option_python(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; set_global_option_python. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/api/psi4.core.set_global_option_python.html:682,update,updated,682,psi4manual/1.8.x/api/psi4.core.set_global_option_python.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/api/psi4.core.set_global_option_python.html,1,['update'],['updated']
Deployability,"﻿. set_global_option_python. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; set_global_option_python. set_global_option_python¶. psi4.core.set_global_option_python(key, EXTERN)¶; This is a fairly hacky way to get around EXTERN issues. Effectively we are routing this option Python side through attributes until the general Options overhaul. table of contents. set_global_option_python; set_global_option_python(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; set_global_option_python. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/api/psi4.core.set_global_option_python.html:682,update,updated,682,psi4manual/1.9.x/api/psi4.core.set_global_option_python.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/api/psi4.core.set_global_option_python.html,1,['update'],['updated']
Deployability,"﻿. set_gradient. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; set_gradient. set_gradient¶. psi4.core.set_gradient(val)¶. Deprecated since version 1.2. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; set_gradient. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/api/psi4.core.set_gradient-1.html:400,update,updated,400,psi4manual/1.4.0/api/psi4.core.set_gradient-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/api/psi4.core.set_gradient-1.html,2,['update'],['updated']
Deployability,"﻿. set_gradient. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; set_gradient. set_gradient¶. psi4.core.set_gradient(val)¶. Deprecated since version 1.2. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; set_gradient. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/api/psi4.core.set_gradient-1.html:400,update,updated,400,psi4manual/1.5.0/api/psi4.core.set_gradient-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/api/psi4.core.set_gradient-1.html,2,['update'],['updated']
Deployability,"﻿. set_gradient. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; set_gradient. set_gradient¶. psi4.core.set_gradient(val)¶. Deprecated since version 1.2. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; set_gradient. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/api/psi4.core.set_gradient.html:400,update,updated,400,psi4manual/1.6.x/api/psi4.core.set_gradient.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/api/psi4.core.set_gradient.html,1,['update'],['updated']
Deployability,"﻿. set_gradient. Navigation. Index. modules    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. set_gradient¶. psi4.core.set_gradient(arg0: psi::Matrix) → None¶; Assigns the global gradient to the values stored in the N by 3 Matrix argument. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2018, The Psi4 Project.; Last updated on Wednesday, 25 July 2018 04:21AM.; Created using Sphinx 1.7.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/api/psi4.core.set_gradient-1.html:437,update,updated,437,psi4manual/1.2.1/api/psi4.core.set_gradient-1.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/api/psi4.core.set_gradient-1.html,2,['update'],['updated']
Deployability,"﻿. set_legacy_gradient. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; set_legacy_gradient. set_legacy_gradient¶. psi4.core.set_legacy_gradient(grad: psi4.core.Matrix) → None¶; Assigns the global gradient to the values in the (nat, 3) Matrix argument. FOR INTERNAL OPTKING USE ONLY. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; set_legacy_gradient. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/api/psi4.core.set_legacy_gradient-1.html:537,update,updated,537,psi4manual/1.4.0/api/psi4.core.set_legacy_gradient-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/api/psi4.core.set_legacy_gradient-1.html,2,['update'],['updated']
Deployability,"﻿. set_legacy_gradient. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; set_legacy_gradient. set_legacy_gradient¶. psi4.core.set_legacy_gradient(grad: psi4.core.Matrix) → None¶; Assigns the global gradient to the values in the (nat, 3) Matrix argument. FOR INTERNAL OPTKING USE ONLY. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; set_legacy_gradient. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/api/psi4.core.set_legacy_gradient-1.html:537,update,updated,537,psi4manual/1.5.0/api/psi4.core.set_legacy_gradient-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/api/psi4.core.set_legacy_gradient-1.html,2,['update'],['updated']
Deployability,"﻿. set_legacy_gradient. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; set_legacy_gradient. set_legacy_gradient¶. psi4.core.set_legacy_gradient(grad: psi4.core.Matrix) → None¶; Assigns the global gradient to the values in the (nat, 3) Matrix argument. FOR INTERNAL OPTKING USE ONLY. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; set_legacy_gradient. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/api/psi4.core.set_legacy_gradient.html:537,update,updated,537,psi4manual/1.6.x/api/psi4.core.set_legacy_gradient.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/api/psi4.core.set_legacy_gradient.html,1,['update'],['updated']
Deployability,"﻿. set_legacy_gradient. Navigation. Index. modules    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. set_legacy_gradient¶. psi4.core.set_legacy_gradient(arg0: psi::Matrix) → None¶; Assigns the global gradient to the values in the (nat, 3) Matrix argument. FOR INTERNAL OPTKING USE ONLY. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2019, The Psi4 Project.; Last updated on Wednesday, 15 May 2019 08:49PM.; Created using Sphinx 1.8.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/api/psi4.core.set_legacy_gradient-1.html:484,update,updated,484,psi4manual/1.3.2/api/psi4.core.set_legacy_gradient-1.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/api/psi4.core.set_legacy_gradient-1.html,2,['update'],['updated']
Deployability,"﻿. set_legacy_molecule. Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. set_legacy_molecule¶. psi4.core.set_legacy_molecule(arg0: psi::Molecule) → None¶; Activates a previously defined (in the input) molecule, by name. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2018, The Psi4 Project.; Last updated on Wednesday, 25 July 2018 04:21AM.; Created using Sphinx 1.7.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/api/psi4.core.set_legacy_molecule-1.html:455,update,updated,455,psi4manual/1.2.1/api/psi4.core.set_legacy_molecule-1.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/api/psi4.core.set_legacy_molecule-1.html,2,['update'],['updated']
Deployability,"﻿. set_legacy_molecule. Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. set_legacy_molecule¶. psi4.core.set_legacy_molecule(arg0: psi::Molecule) → None¶; Activates a previously defined (in the input) molecule, by name. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2019, The Psi4 Project.; Last updated on Wednesday, 15 May 2019 08:49PM.; Created using Sphinx 1.8.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/api/psi4.core.set_legacy_molecule-1.html:455,update,updated,455,psi4manual/1.3.2/api/psi4.core.set_legacy_molecule-1.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/api/psi4.core.set_legacy_molecule-1.html,2,['update'],['updated']
Deployability,"﻿. set_legacy_molecule. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; set_legacy_molecule. set_legacy_molecule¶. psi4.core.set_legacy_molecule(molecule: psi4.core.Molecule) → None¶; Activates a previously defined molecule in global memory so next computations use it. FOR INTERNAL OPTKING USE ONLY. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; set_legacy_molecule. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/api/psi4.core.set_legacy_molecule-1.html:554,update,updated,554,psi4manual/1.4.0/api/psi4.core.set_legacy_molecule-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/api/psi4.core.set_legacy_molecule-1.html,2,['update'],['updated']
Deployability,"﻿. set_legacy_molecule. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; set_legacy_molecule. set_legacy_molecule¶. psi4.core.set_legacy_molecule(molecule: psi4.core.Molecule) → None¶; Activates a previously defined molecule in global memory so next computations use it. FOR INTERNAL OPTKING USE ONLY. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; set_legacy_molecule. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/api/psi4.core.set_legacy_molecule-1.html:554,update,updated,554,psi4manual/1.5.0/api/psi4.core.set_legacy_molecule-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/api/psi4.core.set_legacy_molecule-1.html,2,['update'],['updated']
Deployability,"﻿. set_legacy_molecule. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; set_legacy_molecule. set_legacy_molecule¶. psi4.core.set_legacy_molecule(molecule: psi4.core.Molecule) → None¶; Activates a previously defined molecule in global memory so next computations use it. FOR INTERNAL OPTKING USE ONLY. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; set_legacy_molecule. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/api/psi4.core.set_legacy_molecule.html:554,update,updated,554,psi4manual/1.6.x/api/psi4.core.set_legacy_molecule.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/api/psi4.core.set_legacy_molecule.html,1,['update'],['updated']
Deployability,"﻿. set_legacy_wavefunction. Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. set_legacy_wavefunction¶. psi4.core.set_legacy_wavefunction(arg0: psi::Wavefunction) → None¶; Returns the current legacy_wavefunction object from the most recent computation. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2018, The Psi4 Project.; Last updated on Wednesday, 25 July 2018 04:21AM.; Created using Sphinx 1.7.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/api/psi4.core.set_legacy_wavefunction-1.html:487,update,updated,487,psi4manual/1.2.1/api/psi4.core.set_legacy_wavefunction-1.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/api/psi4.core.set_legacy_wavefunction-1.html,2,['update'],['updated']
Deployability,"﻿. set_legacy_wavefunction. Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. set_legacy_wavefunction¶. psi4.core.set_legacy_wavefunction(arg0: psi::Wavefunction) → None¶; Returns the current legacy_wavefunction object from the most recent computation. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2019, The Psi4 Project.; Last updated on Wednesday, 15 May 2019 08:49PM.; Created using Sphinx 1.8.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/api/psi4.core.set_legacy_wavefunction-1.html:487,update,updated,487,psi4manual/1.3.2/api/psi4.core.set_legacy_wavefunction-1.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/api/psi4.core.set_legacy_wavefunction-1.html,2,['update'],['updated']
Deployability,"﻿. set_legacy_wavefunction. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; set_legacy_wavefunction. set_legacy_wavefunction¶. psi4.core.set_legacy_wavefunction(wfn: psi4.core.Wavefunction) → None¶; Sets the current legacy_wavefunction object from the most recent computation. FOR AGED PLUGIN USE ONLY.; .. deprecated:: 1.5. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; set_legacy_wavefunction. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/api/psi4.core.set_legacy_wavefunction-1.html:582,update,updated,582,psi4manual/1.4.0/api/psi4.core.set_legacy_wavefunction-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/api/psi4.core.set_legacy_wavefunction-1.html,2,['update'],['updated']
Deployability,"﻿. set_legacy_wavefunction. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; set_legacy_wavefunction. set_legacy_wavefunction¶. psi4.core.set_legacy_wavefunction(wfn: psi4.core.Wavefunction) → None¶; Sets the current legacy_wavefunction object from the most recent computation. FOR AGED PLUGIN USE ONLY.; .. deprecated:: 1.5. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; set_legacy_wavefunction. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/api/psi4.core.set_legacy_wavefunction-1.html:582,update,updated,582,psi4manual/1.5.0/api/psi4.core.set_legacy_wavefunction-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/api/psi4.core.set_legacy_wavefunction-1.html,2,['update'],['updated']
Deployability,"﻿. set_legacy_wavefunction. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; set_legacy_wavefunction. set_legacy_wavefunction¶. psi4.core.set_legacy_wavefunction(wfn: psi4.core.Wavefunction) → None¶; Sets the current legacy_wavefunction object from the most recent computation. FOR AGED PLUGIN USE ONLY.; .. deprecated:: 1.5. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; set_legacy_wavefunction. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/api/psi4.core.set_legacy_wavefunction.html:582,update,updated,582,psi4manual/1.6.x/api/psi4.core.set_legacy_wavefunction.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/api/psi4.core.set_legacy_wavefunction.html,1,['update'],['updated']
Deployability,"﻿. set_local_option. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; set_local_option. set_local_option¶. psi4.core.set_local_option(*args, **kwargs)¶; Overloaded function. set_local_option(module: str, key: str, value: list) -> bool. Sets value to array keyword key scoped only to specific module. set_local_option(module: str, key: str, value: int) -> bool. Sets value to integer keyword key scoped only to specific module. set_local_option(module: str, key: str, value: float) -> bool. Sets value to double keyword key scoped only to specific module. set_local_option(module: str, key: str, value: str) -> bool. Sets value to string keyword key scoped only to specific module. table of contents. set_local_option; set_local_option(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; set_local_option. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/api/psi4.core.set_local_option.html:1010,update,updated,1010,psi4manual/master/api/psi4.core.set_local_option.html,https://psicode.org,https://psicode.org/psi4manual/master/api/psi4.core.set_local_option.html,1,['update'],['updated']
Deployability,"﻿. set_local_option. Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. set_local_option¶. psi4.core.set_local_option(*args, **kwargs)¶; Overloaded function. set_local_option(arg0: str, arg1: str, arg2: list) -> bool. Sets value arg3 to array keyword arg2 scoped only to a specific module arg1. set_local_option(arg0: str, arg1: str, arg2: int) -> bool. Sets value arg3 to integer keyword arg2 scoped only to a specific module arg1. set_local_option(arg0: str, arg1: str, arg2: float) -> bool. Sets value arg3 to double keyword arg2 scoped only to a specific module arg1. set_local_option(arg0: str, arg1: str, arg2: str) -> bool. Sets value arg3 to string keyword arg2 scoped only to a specific module arg1. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2018, The Psi4 Project.; Last updated on Wednesday, 25 July 2018 04:21AM.; Created using Sphinx 1.7.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/api/psi4.core.set_local_option-1.html:942,update,updated,942,psi4manual/1.2.1/api/psi4.core.set_local_option-1.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/api/psi4.core.set_local_option-1.html,2,['update'],['updated']
Deployability,"﻿. set_local_option. Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. set_local_option¶. psi4.core.set_local_option(*args, **kwargs)¶; Overloaded function. set_local_option(arg0: str, arg1: str, arg2: list) -> bool. Sets value arg3 to array keyword arg2 scoped only to a specific module arg1. set_local_option(arg0: str, arg1: str, arg2: int) -> bool. Sets value arg3 to integer keyword arg2 scoped only to a specific module arg1. set_local_option(arg0: str, arg1: str, arg2: float) -> bool. Sets value arg3 to double keyword arg2 scoped only to a specific module arg1. set_local_option(arg0: str, arg1: str, arg2: str) -> bool. Sets value arg3 to string keyword arg2 scoped only to a specific module arg1. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2019, The Psi4 Project.; Last updated on Wednesday, 15 May 2019 08:49PM.; Created using Sphinx 1.8.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/api/psi4.core.set_local_option-1.html:942,update,updated,942,psi4manual/1.3.2/api/psi4.core.set_local_option-1.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/api/psi4.core.set_local_option-1.html,2,['update'],['updated']
Deployability,"﻿. set_local_option. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; set_local_option. set_local_option¶. psi4.core.set_local_option(*args, **kwargs)¶; Overloaded function. set_local_option(module: str, key: str, value: list) -> bool. Sets value to array keyword key scoped only to specific module. set_local_option(module: str, key: str, value: int) -> bool. Sets value to integer keyword key scoped only to specific module. set_local_option(module: str, key: str, value: float) -> bool. Sets value to double keyword key scoped only to specific module. set_local_option(module: str, key: str, value: str) -> bool. Sets value to string keyword key scoped only to specific module. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; set_local_option. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/api/psi4.core.set_local_option-1.html:930,update,updated,930,psi4manual/1.4.0/api/psi4.core.set_local_option-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/api/psi4.core.set_local_option-1.html,2,['update'],['updated']
Deployability,"﻿. set_local_option. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; set_local_option. set_local_option¶. psi4.core.set_local_option(*args, **kwargs)¶; Overloaded function. set_local_option(module: str, key: str, value: list) -> bool. Sets value to array keyword key scoped only to specific module. set_local_option(module: str, key: str, value: int) -> bool. Sets value to integer keyword key scoped only to specific module. set_local_option(module: str, key: str, value: float) -> bool. Sets value to double keyword key scoped only to specific module. set_local_option(module: str, key: str, value: str) -> bool. Sets value to string keyword key scoped only to specific module. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; set_local_option. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/api/psi4.core.set_local_option-1.html:930,update,updated,930,psi4manual/1.5.0/api/psi4.core.set_local_option-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/api/psi4.core.set_local_option-1.html,2,['update'],['updated']
Deployability,"﻿. set_local_option. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; set_local_option. set_local_option¶. psi4.core.set_local_option(*args, **kwargs)¶; Overloaded function. set_local_option(module: str, key: str, value: list) -> bool. Sets value to array keyword key scoped only to specific module. set_local_option(module: str, key: str, value: int) -> bool. Sets value to integer keyword key scoped only to specific module. set_local_option(module: str, key: str, value: float) -> bool. Sets value to double keyword key scoped only to specific module. set_local_option(module: str, key: str, value: str) -> bool. Sets value to string keyword key scoped only to specific module. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; set_local_option. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/api/psi4.core.set_local_option.html:930,update,updated,930,psi4manual/1.6.x/api/psi4.core.set_local_option.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/api/psi4.core.set_local_option.html,1,['update'],['updated']
Deployability,"﻿. set_local_option. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; set_local_option. set_local_option¶. psi4.core.set_local_option(*args, **kwargs)¶; Overloaded function. set_local_option(module: str, key: str, value: list) -> bool. Sets value to array keyword key scoped only to specific module. set_local_option(module: str, key: str, value: int) -> bool. Sets value to integer keyword key scoped only to specific module. set_local_option(module: str, key: str, value: float) -> bool. Sets value to double keyword key scoped only to specific module. set_local_option(module: str, key: str, value: str) -> bool. Sets value to string keyword key scoped only to specific module. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; set_local_option. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/api/psi4.core.set_local_option.html:935,update,updated,935,psi4manual/1.7.x/api/psi4.core.set_local_option.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/api/psi4.core.set_local_option.html,1,['update'],['updated']
Deployability,"﻿. set_local_option. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; set_local_option. set_local_option¶. psi4.core.set_local_option(*args, **kwargs)¶; Overloaded function. set_local_option(module: str, key: str, value: list) -> bool. Sets value to array keyword key scoped only to specific module. set_local_option(module: str, key: str, value: int) -> bool. Sets value to integer keyword key scoped only to specific module. set_local_option(module: str, key: str, value: float) -> bool. Sets value to double keyword key scoped only to specific module. set_local_option(module: str, key: str, value: str) -> bool. Sets value to string keyword key scoped only to specific module. table of contents. set_local_option; set_local_option(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; set_local_option. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/api/psi4.core.set_local_option.html:996,update,updated,996,psi4manual/1.8.x/api/psi4.core.set_local_option.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/api/psi4.core.set_local_option.html,1,['update'],['updated']
Deployability,"﻿. set_local_option. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; set_local_option. set_local_option¶. psi4.core.set_local_option(*args, **kwargs)¶; Overloaded function. set_local_option(module: str, key: str, value: list) -> bool. Sets value to array keyword key scoped only to specific module. set_local_option(module: str, key: str, value: int) -> bool. Sets value to integer keyword key scoped only to specific module. set_local_option(module: str, key: str, value: float) -> bool. Sets value to double keyword key scoped only to specific module. set_local_option(module: str, key: str, value: str) -> bool. Sets value to string keyword key scoped only to specific module. table of contents. set_local_option; set_local_option(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; set_local_option. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/api/psi4.core.set_local_option.html:996,update,updated,996,psi4manual/1.9.x/api/psi4.core.set_local_option.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/api/psi4.core.set_local_option.html,1,['update'],['updated']
Deployability,"﻿. set_local_option_python. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; set_local_option_python. set_local_option_python¶. psi4.core.set_local_option_python(key: str, value: object) → None¶; Sets value to Python keyword key scoped only to a single module. table of contents. set_local_option_python; set_local_option_python(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; set_local_option_python. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/api/psi4.core.set_local_option_python.html:611,update,updated,611,psi4manual/master/api/psi4.core.set_local_option_python.html,https://psicode.org,https://psicode.org/psi4manual/master/api/psi4.core.set_local_option_python.html,1,['update'],['updated']
Deployability,"﻿. set_local_option_python. Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. set_local_option_python¶. psi4.core.set_local_option_python(arg0: str, arg1: object) → None¶; Sets an option to a Python object, but scoped only to a single module. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2018, The Psi4 Project.; Last updated on Wednesday, 25 July 2018 04:21AM.; Created using Sphinx 1.7.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/api/psi4.core.set_local_option_python-1.html:477,update,updated,477,psi4manual/1.2.1/api/psi4.core.set_local_option_python-1.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/api/psi4.core.set_local_option_python-1.html,2,['update'],['updated']
Deployability,"﻿. set_local_option_python. Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. set_local_option_python¶. psi4.core.set_local_option_python(arg0: str, arg1: object) → None¶; Sets an option to a Python object, but scoped only to a single module. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2019, The Psi4 Project.; Last updated on Wednesday, 15 May 2019 08:49PM.; Created using Sphinx 1.8.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/api/psi4.core.set_local_option_python-1.html:477,update,updated,477,psi4manual/1.3.2/api/psi4.core.set_local_option_python-1.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/api/psi4.core.set_local_option_python-1.html,2,['update'],['updated']
Deployability,"﻿. set_local_option_python. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; set_local_option_python. set_local_option_python¶. psi4.core.set_local_option_python(key: str, value: object) → None¶; Sets value to Python keyword key scoped only to a single module. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; set_local_option_python. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/api/psi4.core.set_local_option_python-1.html:517,update,updated,517,psi4manual/1.4.0/api/psi4.core.set_local_option_python-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/api/psi4.core.set_local_option_python-1.html,2,['update'],['updated']
Deployability,"﻿. set_local_option_python. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; set_local_option_python. set_local_option_python¶. psi4.core.set_local_option_python(key: str, value: object) → None¶; Sets value to Python keyword key scoped only to a single module. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; set_local_option_python. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/api/psi4.core.set_local_option_python-1.html:517,update,updated,517,psi4manual/1.5.0/api/psi4.core.set_local_option_python-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/api/psi4.core.set_local_option_python-1.html,2,['update'],['updated']
Deployability,"﻿. set_local_option_python. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; set_local_option_python. set_local_option_python¶. psi4.core.set_local_option_python(key: str, value: object) → None¶; Sets value to Python keyword key scoped only to a single module. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; set_local_option_python. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/api/psi4.core.set_local_option_python.html:517,update,updated,517,psi4manual/1.6.x/api/psi4.core.set_local_option_python.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/api/psi4.core.set_local_option_python.html,1,['update'],['updated']
Deployability,"﻿. set_local_option_python. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; set_local_option_python. set_local_option_python¶. psi4.core.set_local_option_python(key: str, value: object) → None¶; Sets value to Python keyword key scoped only to a single module. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; set_local_option_python. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/api/psi4.core.set_local_option_python.html:522,update,updated,522,psi4manual/1.7.x/api/psi4.core.set_local_option_python.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/api/psi4.core.set_local_option_python.html,1,['update'],['updated']
Deployability,"﻿. set_local_option_python. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; set_local_option_python. set_local_option_python¶. psi4.core.set_local_option_python(key: str, value: object) → None¶; Sets value to Python keyword key scoped only to a single module. table of contents. set_local_option_python; set_local_option_python(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; set_local_option_python. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/api/psi4.core.set_local_option_python.html:597,update,updated,597,psi4manual/1.8.x/api/psi4.core.set_local_option_python.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/api/psi4.core.set_local_option_python.html,1,['update'],['updated']
Deployability,"﻿. set_local_option_python. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; set_local_option_python. set_local_option_python¶. psi4.core.set_local_option_python(key: str, value: object) → None¶; Sets value to Python keyword key scoped only to a single module. table of contents. set_local_option_python; set_local_option_python(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; set_local_option_python. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/api/psi4.core.set_local_option_python.html:597,update,updated,597,psi4manual/1.9.x/api/psi4.core.set_local_option_python.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/api/psi4.core.set_local_option_python.html,1,['update'],['updated']
Deployability,"﻿. set_memory. Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. set_memory¶. psi4.driver.set_memory(inputval, execute=True)[source]¶; Function to reset the total memory allocation. Takes memory value; inputval as type int, float, or str; int and float are taken literally; as bytes to be set, string taken as a unit-containing value (e.g., 30 mb); which is case-insensitive. Set execute to False to interpret inputval; without setting in Psi4 core. Returns:memory_amount (float) Number of bytes of memory set. Raises:ValidationError when <500MiB or disallowed type or misformatted. Examples:. 1; 2; 3; 4>>> # [1] Passing absolute number of bytes; >>> psi4.set_memory(600000000); >>> psi4.get_memory(); Out[1]: 600000000L. 1; 2; 3; 4>>> # [2] Passing memory value as string with units; >>> psi4.set_memory('30 GB'); >>> psi4.get_memory(); Out[2]: 30000000000L. 1; 2; 3; 4; 5; 6; 7; 8; 9>>> # Good examples; >>> psi4.set_memory(800000000) # 800000000; >>> psi4.set_memory(2004088624.9) # 2004088624; >>> psi4.set_memory(1.0e9) # 1000000000; >>> psi4.set_memory('600 mb') # 600000000; >>> psi4.set_memory('600.0 MiB') # 629145600; >>> psi4.set_memory('.6 Gb') # 600000000; >>> psi4.set_memory(' 100000000kB ') # 100000000000; >>> psi4.set_memory('2 eb') # 2000000000000000000. 1; 2; 3; 4; 5; 6; 7; 8>>> # Bad examples; >>> psi4.set_memory({}) # odd type; >>> psi4.set_memory('') # no info; >>> psi4.set_memory(""8 dimms"") # unacceptable units; >>> psi4.set_memory(""1e5 gb"") # string w/ exponent; >>> psi4.set_memory(""5e5"") # string w/o units; >>> psi4.set_memory(2000) # mem too small; >>> psi4.set_memory(-5e5) # negative (and too small). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2018, The Psi4 Project.; Last updated on Wednesday, 25 July 2018 04:21AM.; Created using Sphinx 1.7.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/api/psi4.driver.set_memory-1.html:1871,update,updated,1871,psi4manual/1.2.1/api/psi4.driver.set_memory-1.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/api/psi4.driver.set_memory-1.html,2,['update'],['updated']
Deployability,"﻿. set_memory. Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. set_memory¶. psi4.driver.set_memory(inputval, execute=True)[source]¶; Function to reset the total memory allocation. Takes memory value; inputval as type int, float, or str; int and float are taken literally; as bytes to be set, string taken as a unit-containing value (e.g., 30 mb); which is case-insensitive. Set execute to False to interpret inputval; without setting in Psi4 core. Returns:memory_amount (float) Number of bytes of memory set. Raises:ValidationError when <500MiB or disallowed type or misformatted. Examples:. >>> # [1] Passing absolute number of bytes; >>> psi4.set_memory(600000000); >>> psi4.get_memory(); Out[1]: 600000000L. >>> # [2] Passing memory value as string with units; >>> psi4.set_memory('30 GB'); >>> psi4.get_memory(); Out[2]: 30000000000L. >>> # Good examples; >>> psi4.set_memory(800000000) # 800000000; >>> psi4.set_memory(2004088624.9) # 2004088624; >>> psi4.set_memory(1.0e9) # 1000000000; >>> psi4.set_memory('600 mb') # 600000000; >>> psi4.set_memory('600.0 MiB') # 629145600; >>> psi4.set_memory('.6 Gb') # 600000000; >>> psi4.set_memory(' 100000000kB ') # 100000000000; >>> psi4.set_memory('2 eb') # 2000000000000000000. >>> # Bad examples; >>> psi4.set_memory({}) # odd type; >>> psi4.set_memory('') # no info; >>> psi4.set_memory(""8 dimms"") # unacceptable units; >>> psi4.set_memory(""1e5 gb"") # string w/ exponent; >>> psi4.set_memory(""5e5"") # string w/o units; >>> psi4.set_memory(2000) # mem too small; >>> psi4.set_memory(-5e5) # negative (and too small). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2019, The Psi4 Project.; Last updated on Wednesday, 15 May 2019 08:49PM.; Created using Sphinx 1.8.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/api/psi4.driver.set_memory-1.html:1804,update,updated,1804,psi4manual/1.3.2/api/psi4.driver.set_memory-1.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/api/psi4.driver.set_memory-1.html,2,['update'],['updated']
Deployability,"﻿. set_memory. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; set_memory. set_memory¶. psi4.driver.p4util.set_memory(inputval, execute=True, quiet=False)[source]¶; Reset the total memory allocation. Parameters:. inputval (Union[str, int, float]) – Memory value. An Integer or float is taken literally as bytes to be set.; A string is taken as a unit-containing value (e.g., 30 mb), which is; case-insensitive.; execute (bool) – When False, interpret inputval without setting in Psi4 core.; quiet (bool) – When True, do not print to the output file. Returns:; Number of bytes of memory set. Return type:; int. Raises:; ValidationError – When <500MiB or disallowed type or misformatted. Examples; >>> # [1] Passing absolute number of bytes; >>> psi4.set_memory(600000000); >>> psi4.get_memory(); Out[1]: 600000000L. >>> # [2] Passing memory value as string with units; >>> psi4.set_memory('30 GB'); >>> psi4.get_memory(); Out[2]: 30000000000L. >>> # Good examples; >>> psi4.set_memory(800000000) # 800000000; >>> psi4.set_memory(2004088624.9) # 2004088624; >>> psi4.set_memory(1.0e9) # 1000000000; >>> psi4.set_memory('600 mb') # 600000000; >>> psi4.set_memory('600.0 MiB') # 629145600; >>> psi4.set_memory('.6 Gb') # 600000000; >>> psi4.set_memory(' 100000000kB ') # 100000000000; >>> psi4.set_memory('2 eb') # 2000000000000000000. >>> # Bad examples; >>> psi4.set_memory({}) # odd type; >>> psi4.set_memory('') # no info; >>> psi4.set_memory(""8 dimms"") # unacceptable units; >>> psi4.set_memory(""1e5 gb"") # string w/ exponent; >>> psi4.set_memory(""5e5"") # string w/o units; >>> psi4.set_memory(2000) # mem too small; >>> psi4.set_memory(-5e5) # negative (and too small). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; set_memory. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/api/psi4.driver.p4util.set_memory.html:1921,update,updated,1921,psi4manual/1.7.x/api/psi4.driver.p4util.set_memory.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/api/psi4.driver.p4util.set_memory.html,1,['update'],['updated']
Deployability,"﻿. set_memory. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; set_memory. set_memory¶. psi4.driver.set_memory(inputval, execute=True, quiet=False)[source]¶; Reset the total memory allocation. Parameters:. inputval (Union[str, int, float]) – Memory value. An Integer or float is taken literally as bytes to be set.; A string is taken as a unit-containing value (e.g., 30 mb), which is; case-insensitive.; execute (bool) – When False, interpret inputval without setting in Psi4 core.; quiet (bool) – When True, do not print to the output file. Returns:; Number of bytes of memory set. Return type:; int. Raises:; ValidationError – When <500MiB or disallowed type or misformatted. Examples; >>> # [1] Passing absolute number of bytes; >>> psi4.set_memory(600000000); >>> psi4.get_memory(); Out[1]: 600000000L. >>> # [2] Passing memory value as string with units; >>> psi4.set_memory('30 GB'); >>> psi4.get_memory(); Out[2]: 30000000000L. >>> # Good examples; >>> psi4.set_memory(800000000) # 800000000; >>> psi4.set_memory(2004088624.9) # 2004088624; >>> psi4.set_memory(1.0e9) # 1000000000; >>> psi4.set_memory('600 mb') # 600000000; >>> psi4.set_memory('600.0 MiB') # 629145600; >>> psi4.set_memory('.6 Gb') # 600000000; >>> psi4.set_memory(' 100000000kB ') # 100000000000; >>> psi4.set_memory('2 eb') # 2000000000000000000. >>> # Bad examples; >>> psi4.set_memory({}) # odd type; >>> psi4.set_memory('') # no info; >>> psi4.set_memory(""8 dimms"") # unacceptable units; >>> psi4.set_memory(""1e5 gb"") # string w/ exponent; >>> psi4.set_memory(""5e5"") # string w/o units; >>> psi4.set_memory(2000) # mem too small; >>> psi4.set_memory(-5e5) # negative (and too small). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; set_memory. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/api/psi4.driver.set_memory.html:1914,update,updated,1914,psi4manual/1.7.x/api/psi4.driver.set_memory.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/api/psi4.driver.set_memory.html,1,['update'],['updated']
Deployability,"﻿. set_memory_bytes. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; set_memory_bytes. set_memory_bytes¶. psi4.core.set_memory_bytes(memory: int, quiet: bool = False) → None¶; Sets the memory available to Psi (in bytes); prefer psi4.driver.set_memory(). table of contents. set_memory_bytes; set_memory_bytes(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; set_memory_bytes. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/api/psi4.core.set_memory_bytes.html:584,update,updated,584,psi4manual/master/api/psi4.core.set_memory_bytes.html,https://psicode.org,https://psicode.org/psi4manual/master/api/psi4.core.set_memory_bytes.html,1,['update'],['updated']
Deployability,"﻿. set_memory_bytes. Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. set_memory_bytes¶. psi4.core.set_memory_bytes(memory: int, quiet: bool=False) → None¶; Sets the memory available to Psi (in bytes). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2018, The Psi4 Project.; Last updated on Wednesday, 25 July 2018 04:21AM.; Created using Sphinx 1.7.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/api/psi4.core.set_memory_bytes-1.html:437,update,updated,437,psi4manual/1.2.1/api/psi4.core.set_memory_bytes-1.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/api/psi4.core.set_memory_bytes-1.html,2,['update'],['updated']
Deployability,"﻿. set_memory_bytes. Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. set_memory_bytes¶. psi4.core.set_memory_bytes(memory: int, quiet: bool=False) → None¶; Sets the memory available to Psi (in bytes). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2019, The Psi4 Project.; Last updated on Wednesday, 15 May 2019 08:49PM.; Created using Sphinx 1.8.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/api/psi4.core.set_memory_bytes-1.html:437,update,updated,437,psi4manual/1.3.2/api/psi4.core.set_memory_bytes-1.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/api/psi4.core.set_memory_bytes-1.html,2,['update'],['updated']
Deployability,"﻿. set_memory_bytes. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; set_memory_bytes. set_memory_bytes¶. psi4.core.set_memory_bytes(memory: int, quiet: bool = False) → None¶; Sets the memory available to Psi (in bytes); prefer psi4.set_memory(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; set_memory_bytes. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/api/psi4.core.set_memory_bytes-1.html:497,update,updated,497,psi4manual/1.4.0/api/psi4.core.set_memory_bytes-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/api/psi4.core.set_memory_bytes-1.html,2,['update'],['updated']
Deployability,"﻿. set_memory_bytes. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; set_memory_bytes. set_memory_bytes¶. psi4.core.set_memory_bytes(memory: int, quiet: bool = False) → None¶; Sets the memory available to Psi (in bytes); prefer psi4.set_memory(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; set_memory_bytes. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/api/psi4.core.set_memory_bytes-1.html:497,update,updated,497,psi4manual/1.5.0/api/psi4.core.set_memory_bytes-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/api/psi4.core.set_memory_bytes-1.html,2,['update'],['updated']
Deployability,"﻿. set_memory_bytes. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; set_memory_bytes. set_memory_bytes¶. psi4.core.set_memory_bytes(memory: int, quiet: bool = False) → None¶; Sets the memory available to Psi (in bytes); prefer psi4.set_memory(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; set_memory_bytes. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/api/psi4.core.set_memory_bytes.html:497,update,updated,497,psi4manual/1.6.x/api/psi4.core.set_memory_bytes.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/api/psi4.core.set_memory_bytes.html,1,['update'],['updated']
Deployability,"﻿. set_memory_bytes. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; set_memory_bytes. set_memory_bytes¶. psi4.core.set_memory_bytes(memory: int, quiet: bool = False) → None¶; Sets the memory available to Psi (in bytes); prefer psi4.driver.set_memory(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; set_memory_bytes. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/api/psi4.core.set_memory_bytes.html:509,update,updated,509,psi4manual/1.7.x/api/psi4.core.set_memory_bytes.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/api/psi4.core.set_memory_bytes.html,1,['update'],['updated']
Deployability,"﻿. set_memory_bytes. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; set_memory_bytes. set_memory_bytes¶. psi4.core.set_memory_bytes(memory: int, quiet: bool = False) → None¶; Sets the memory available to Psi (in bytes); prefer psi4.driver.set_memory(). table of contents. set_memory_bytes; set_memory_bytes(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; set_memory_bytes. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/api/psi4.core.set_memory_bytes.html:570,update,updated,570,psi4manual/1.8.x/api/psi4.core.set_memory_bytes.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/api/psi4.core.set_memory_bytes.html,1,['update'],['updated']
Deployability,"﻿. set_memory_bytes. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; set_memory_bytes. set_memory_bytes¶. psi4.core.set_memory_bytes(memory: int, quiet: bool = False) → None¶; Sets the memory available to Psi (in bytes); prefer psi4.driver.set_memory(). table of contents. set_memory_bytes; set_memory_bytes(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; set_memory_bytes. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/api/psi4.core.set_memory_bytes.html:570,update,updated,570,psi4manual/1.9.x/api/psi4.core.set_memory_bytes.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/api/psi4.core.set_memory_bytes.html,1,['update'],['updated']
Deployability,"﻿. set_module_options. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; set_module_options. set_module_options¶. psi4.driver.p4util.set_module_options(module, options_dict)[source]¶; Sets Psi4 module options from a module specification and input dictionary.; :rtype: None. Deprecated since version 1.5: Use psi4.driver.p4util.set_options() instead. Parameters:. module (str); options_dict (Dict[str, Any]). Return type:; None. table of contents. set_module_options; set_module_options(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; set_module_options. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/api/psi4.driver.p4util.set_module_options.html:762,update,updated,762,psi4manual/master/api/psi4.driver.p4util.set_module_options.html,https://psicode.org,https://psicode.org/psi4manual/master/api/psi4.driver.p4util.set_module_options.html,1,['update'],['updated']
Deployability,"﻿. set_module_options. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; set_module_options. set_module_options¶. psi4.driver.set_module_options(module, options_dict)[source]¶; Sets Psi4 module options from a module specification and input dictionary.; :rtype: None. Deprecated since version 1.5: Use psi4.driver.p4util.set_options() instead. Parameters:. module (str); options_dict (Dict[str, Any]). Return type:; None. table of contents. set_module_options; set_module_options(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; set_module_options. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/api/psi4.driver.set_module_options.html:755,update,updated,755,psi4manual/master/api/psi4.driver.set_module_options.html,https://psicode.org,https://psicode.org/psi4manual/master/api/psi4.driver.set_module_options.html,1,['update'],['updated']
Deployability,"﻿. set_module_options. Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. set_module_options¶. psi4.driver.set_module_options(module, options_dict)[source]¶; Sets Psi4 module options from a module specification and input dictionary. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2018, The Psi4 Project.; Last updated on Wednesday, 25 July 2018 04:21AM.; Created using Sphinx 1.7.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/api/psi4.driver.set_module_options-1.html:466,update,updated,466,psi4manual/1.2.1/api/psi4.driver.set_module_options-1.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/api/psi4.driver.set_module_options-1.html,2,['update'],['updated']
Deployability,"﻿. set_module_options. Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. set_module_options¶. psi4.driver.set_module_options(module, options_dict)[source]¶; Sets Psi4 module options from a module specification and input dictionary. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2019, The Psi4 Project.; Last updated on Wednesday, 15 May 2019 08:49PM.; Created using Sphinx 1.8.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/api/psi4.driver.set_module_options-1.html:466,update,updated,466,psi4manual/1.3.2/api/psi4.driver.set_module_options-1.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/api/psi4.driver.set_module_options-1.html,2,['update'],['updated']
Deployability,"﻿. set_module_options. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; set_module_options. set_module_options¶. psi4.driver.set_module_options(module, options_dict)[source]¶; Sets Psi4 module options from a module specification and input dictionary. Return type; None. Parameters. module (str) – ; options_dict (Dict[str, Any]) – . «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; set_module_options. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/api/psi4.driver.set_module_options-1.html:584,update,updated,584,psi4manual/1.4.0/api/psi4.driver.set_module_options-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/api/psi4.driver.set_module_options-1.html,2,['update'],['updated']
Deployability,"﻿. set_module_options. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; set_module_options. set_module_options¶. psi4.driver.set_module_options(module, options_dict)[source]¶; Sets Psi4 module options from a module specification and input dictionary. Return type; None. Parameters. module (str) – ; options_dict (Dict[str, Any]) – . «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; set_module_options. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/api/psi4.driver.set_module_options-1.html:584,update,updated,584,psi4manual/1.5.0/api/psi4.driver.set_module_options-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/api/psi4.driver.set_module_options-1.html,2,['update'],['updated']
Deployability,"﻿. set_module_options. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; set_module_options. set_module_options¶. psi4.driver.set_module_options(module, options_dict)[source]¶; Sets Psi4 module options from a module specification and input dictionary. Return type; None. Parameters. module (str) – ; options_dict (Dict[str, Any]) – . «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; set_module_options. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/api/psi4.driver.set_module_options.html:584,update,updated,584,psi4manual/1.6.x/api/psi4.driver.set_module_options.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/api/psi4.driver.set_module_options.html,1,['update'],['updated']
Deployability,"﻿. set_module_options. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; set_module_options. set_module_options¶. psi4.driver.p4util.set_module_options(module, options_dict)[source]¶; Sets Psi4 module options from a module specification and input dictionary. Deprecated since version 1.5: Use psi4.driver.p4util.set_options() instead. Return type:; None. Parameters:. module (str) – ; options_dict (Dict[str, Any]) – . «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; set_module_options. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/api/psi4.driver.p4util.set_module_options.html:674,update,updated,674,psi4manual/1.7.x/api/psi4.driver.p4util.set_module_options.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/api/psi4.driver.p4util.set_module_options.html,1,['update'],['updated']
Deployability,"﻿. set_module_options. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; set_module_options. set_module_options¶. psi4.driver.set_module_options(module, options_dict)[source]¶; Sets Psi4 module options from a module specification and input dictionary. Deprecated since version 1.5: Use psi4.driver.p4util.set_options() instead. Return type:; None. Parameters:. module (str) – ; options_dict (Dict[str, Any]) – . «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; set_module_options. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/api/psi4.driver.set_module_options.html:667,update,updated,667,psi4manual/1.7.x/api/psi4.driver.set_module_options.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/api/psi4.driver.set_module_options.html,1,['update'],['updated']
Deployability,"﻿. set_module_options. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; set_module_options. set_module_options¶. psi4.driver.p4util.set_module_options(module, options_dict)[source]¶; Sets Psi4 module options from a module specification and input dictionary.; :rtype: None. Deprecated since version 1.5: Use psi4.driver.p4util.set_options() instead. Parameters:. module (str) – ; options_dict (Dict[str, Any]) – . Return type:; None. table of contents. set_module_options; set_module_options(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; set_module_options. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/api/psi4.driver.p4util.set_module_options.html:754,update,updated,754,psi4manual/1.8.x/api/psi4.driver.p4util.set_module_options.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/api/psi4.driver.p4util.set_module_options.html,1,['update'],['updated']
Deployability,"﻿. set_module_options. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; set_module_options. set_module_options¶. psi4.driver.set_module_options(module, options_dict)[source]¶; Sets Psi4 module options from a module specification and input dictionary.; :rtype: None. Deprecated since version 1.5: Use psi4.driver.p4util.set_options() instead. Parameters:. module (str) – ; options_dict (Dict[str, Any]) – . Return type:; None. table of contents. set_module_options; set_module_options(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; set_module_options. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/api/psi4.driver.set_module_options.html:747,update,updated,747,psi4manual/1.8.x/api/psi4.driver.set_module_options.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/api/psi4.driver.set_module_options.html,1,['update'],['updated']
Deployability,"﻿. set_module_options. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; set_module_options. set_module_options¶. psi4.driver.p4util.set_module_options(module, options_dict)[source]¶; Sets Psi4 module options from a module specification and input dictionary.; :rtype: None. Deprecated since version 1.5: Use psi4.driver.p4util.set_options() instead. Parameters:. module (str) – ; options_dict (Dict[str, Any]) – . Return type:; None. table of contents. set_module_options; set_module_options(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; set_module_options. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/api/psi4.driver.p4util.set_module_options.html:754,update,updated,754,psi4manual/1.9.x/api/psi4.driver.p4util.set_module_options.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/api/psi4.driver.p4util.set_module_options.html,1,['update'],['updated']
Deployability,"﻿. set_module_options. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; set_module_options. set_module_options¶. psi4.driver.set_module_options(module, options_dict)[source]¶; Sets Psi4 module options from a module specification and input dictionary.; :rtype: None. Deprecated since version 1.5: Use psi4.driver.p4util.set_options() instead. Parameters:. module (str) – ; options_dict (Dict[str, Any]) – . Return type:; None. table of contents. set_module_options; set_module_options(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; set_module_options. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/api/psi4.driver.set_module_options.html:747,update,updated,747,psi4manual/1.9.x/api/psi4.driver.set_module_options.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/api/psi4.driver.set_module_options.html,1,['update'],['updated']
Deployability,"﻿. set_num_threads. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; set_num_threads. set_num_threads¶. psi4.core.set_num_threads(nthread: int, quiet: bool = False) → None¶; Sets the number of threads to use in SMP parallel computations. table of contents. set_num_threads; set_num_threads(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; set_num_threads. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/api/psi4.core.set_num_threads.html:564,update,updated,564,psi4manual/master/api/psi4.core.set_num_threads.html,https://psicode.org,https://psicode.org/psi4manual/master/api/psi4.core.set_num_threads.html,1,['update'],['updated']
Deployability,"﻿. set_num_threads. Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. set_num_threads¶. psi4.core.set_num_threads(nthread: int, quiet: bool=False) → None¶; Sets the number of threads to use in SMP parallel computations. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2018, The Psi4 Project.; Last updated on Wednesday, 25 July 2018 04:21AM.; Created using Sphinx 1.7.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/api/psi4.core.set_num_threads-1.html:454,update,updated,454,psi4manual/1.2.1/api/psi4.core.set_num_threads-1.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/api/psi4.core.set_num_threads-1.html,2,['update'],['updated']
Deployability,"﻿. set_num_threads. Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. set_num_threads¶. psi4.core.set_num_threads(nthread: int, quiet: bool=False) → None¶; Sets the number of threads to use in SMP parallel computations. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2019, The Psi4 Project.; Last updated on Wednesday, 15 May 2019 08:49PM.; Created using Sphinx 1.8.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/api/psi4.core.set_num_threads-1.html:454,update,updated,454,psi4manual/1.3.2/api/psi4.core.set_num_threads-1.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/api/psi4.core.set_num_threads-1.html,2,['update'],['updated']
Deployability,"﻿. set_num_threads. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; set_num_threads. set_num_threads¶. psi4.core.set_num_threads(nthread: int, quiet: bool = False) → None¶; Sets the number of threads to use in SMP parallel computations. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; set_num_threads. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/api/psi4.core.set_num_threads-1.html:486,update,updated,486,psi4manual/1.4.0/api/psi4.core.set_num_threads-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/api/psi4.core.set_num_threads-1.html,2,['update'],['updated']
Deployability,"﻿. set_num_threads. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; set_num_threads. set_num_threads¶. psi4.core.set_num_threads(nthread: int, quiet: bool = False) → None¶; Sets the number of threads to use in SMP parallel computations. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; set_num_threads. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/api/psi4.core.set_num_threads-1.html:486,update,updated,486,psi4manual/1.5.0/api/psi4.core.set_num_threads-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/api/psi4.core.set_num_threads-1.html,2,['update'],['updated']
Deployability,"﻿. set_num_threads. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; set_num_threads. set_num_threads¶. psi4.core.set_num_threads(nthread: int, quiet: bool = False) → None¶; Sets the number of threads to use in SMP parallel computations. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; set_num_threads. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/api/psi4.core.set_num_threads.html:486,update,updated,486,psi4manual/1.6.x/api/psi4.core.set_num_threads.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/api/psi4.core.set_num_threads.html,1,['update'],['updated']
Deployability,"﻿. set_num_threads. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; set_num_threads. set_num_threads¶. psi4.core.set_num_threads(nthread: int, quiet: bool = False) → None¶; Sets the number of threads to use in SMP parallel computations. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; set_num_threads. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/api/psi4.core.set_num_threads.html:491,update,updated,491,psi4manual/1.7.x/api/psi4.core.set_num_threads.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/api/psi4.core.set_num_threads.html,1,['update'],['updated']
Deployability,"﻿. set_num_threads. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; set_num_threads. set_num_threads¶. psi4.core.set_num_threads(nthread: int, quiet: bool = False) → None¶; Sets the number of threads to use in SMP parallel computations. table of contents. set_num_threads; set_num_threads(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; set_num_threads. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/api/psi4.core.set_num_threads.html:550,update,updated,550,psi4manual/1.8.x/api/psi4.core.set_num_threads.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/api/psi4.core.set_num_threads.html,1,['update'],['updated']
Deployability,"﻿. set_num_threads. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; set_num_threads. set_num_threads¶. psi4.core.set_num_threads(nthread: int, quiet: bool = False) → None¶; Sets the number of threads to use in SMP parallel computations. table of contents. set_num_threads; set_num_threads(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; set_num_threads. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/api/psi4.core.set_num_threads.html:550,update,updated,550,psi4manual/1.9.x/api/psi4.core.set_num_threads.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/api/psi4.core.set_num_threads.html,1,['update'],['updated']
Deployability,"﻿. set_options. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; set_options. set_options¶. psi4.driver.p4util.set_options(options_dict, verbose=1)[source]¶; Sets Psi4 options from an input dictionary. Parameters:. options_dict (Dict[str, Any]) – Dictionary where keys are case insensitive and values are the option value. For global options, keys are ""<option_name>"".; For option local to “<module_name>”, keys are ""<module_name>__<option_name>""; (double underscore separation).; For contents that would be in pcm = {...}, use ""PCM__INPUT"" key. verbose (int) – Control print volume. Return type:; None. Examples; >>> psi4.set_options({; ""basis"": ""cc-pvtz"",; ""df_basis_scf"": ""cc-pvtz-jkfit"",; ""scf__reference"": ""uhf"",; ""print"": 2}). table of contents. set_options; set_options(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; set_options. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/api/psi4.driver.p4util.set_options.html:1047,update,updated,1047,psi4manual/master/api/psi4.driver.p4util.set_options.html,https://psicode.org,https://psicode.org/psi4manual/master/api/psi4.driver.p4util.set_options.html,1,['update'],['updated']
Deployability,"﻿. set_options. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; set_options. set_options¶. psi4.driver.set_options(options_dict, verbose=1)[source]¶; Sets Psi4 options from an input dictionary. Parameters:. options_dict (Dict[str, Any]) – Dictionary where keys are case insensitive and values are the option value. For global options, keys are ""<option_name>"".; For option local to “<module_name>”, keys are ""<module_name>__<option_name>""; (double underscore separation).; For contents that would be in pcm = {...}, use ""PCM__INPUT"" key. verbose (int) – Control print volume. Return type:; None. Examples; >>> psi4.set_options({; ""basis"": ""cc-pvtz"",; ""df_basis_scf"": ""cc-pvtz-jkfit"",; ""scf__reference"": ""uhf"",; ""print"": 2}). table of contents. set_options; set_options(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; set_options. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/api/psi4.driver.set_options.html:1040,update,updated,1040,psi4manual/master/api/psi4.driver.set_options.html,https://psicode.org,https://psicode.org/psi4manual/master/api/psi4.driver.set_options.html,1,['update'],['updated']
Deployability,"﻿. set_options. Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. set_options¶. psi4.driver.set_options(options_dict)[source]¶; Sets Psi4 global options from an input dictionary. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2018, The Psi4 Project.; Last updated on Wednesday, 25 July 2018 04:21AM.; Created using Sphinx 1.7.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/api/psi4.driver.set_options-1.html:413,update,updated,413,psi4manual/1.2.1/api/psi4.driver.set_options-1.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/api/psi4.driver.set_options-1.html,2,['update'],['updated']
Deployability,"﻿. set_options. Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. set_options¶. psi4.driver.set_options(options_dict, verbose=1)[source]¶; Sets Psi4 options from an input dictionary.; :param options_dict: Dictionary where keys are “option_name” for global options or. “module_name__option_name” (double underscore separation) for; option local to “module_name”. Values are the option value. All; are case insensitive. Parameters:verbose (int, optional) – Control print volume. Returns:. Return type:None. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2019, The Psi4 Project.; Last updated on Wednesday, 15 May 2019 08:49PM.; Created using Sphinx 1.8.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/api/psi4.driver.set_options-1.html:739,update,updated,739,psi4manual/1.3.2/api/psi4.driver.set_options-1.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/api/psi4.driver.set_options-1.html,2,['update'],['updated']
Deployability,"﻿. set_options. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; set_options. set_options¶. psi4.driver.set_options(options_dict, verbose=1)[source]¶; Sets Psi4 options from an input dictionary. Parameters. options_dict (Dict[str, Any]) – Dictionary where keys are “option_name” for global options or; “module_name__option_name” (double underscore separation) for; option local to “module_name”. Values are the option value. All; are case insensitive.; verbose (int) – Control print volume. Return type; None. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; set_options. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/api/psi4.driver.set_options-1.html:754,update,updated,754,psi4manual/1.4.0/api/psi4.driver.set_options-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/api/psi4.driver.set_options-1.html,2,['update'],['updated']
Deployability,"﻿. set_options. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; set_options. set_options¶. psi4.driver.set_options(options_dict, verbose=1)[source]¶; Sets Psi4 options from an input dictionary. Parameters. options_dict (Dict[str, Any]) – Dictionary where keys are “option_name” for global options or; “module_name__option_name” (double underscore separation) for; option local to “module_name”. Values are the option value. All; are case insensitive.; verbose (int) – Control print volume. Return type; None. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; set_options. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/api/psi4.driver.set_options-1.html:754,update,updated,754,psi4manual/1.5.0/api/psi4.driver.set_options-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/api/psi4.driver.set_options-1.html,2,['update'],['updated']
Deployability,"﻿. set_options. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; set_options. set_options¶. psi4.driver.set_options(options_dict, verbose=1)[source]¶; Sets Psi4 options from an input dictionary. Parameters. options_dict (Dict[str, Any]) – Dictionary where keys are “option_name” for global options or; “module_name__option_name” (double underscore separation) for; option local to “module_name”. Values are the option value. All; are case insensitive.; verbose (int) – Control print volume. Return type; None. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; set_options. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/api/psi4.driver.set_options.html:754,update,updated,754,psi4manual/1.6.x/api/psi4.driver.set_options.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/api/psi4.driver.set_options.html,1,['update'],['updated']
Deployability,"﻿. set_options. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; set_options. set_options¶. psi4.driver.p4util.set_options(options_dict, verbose=1)[source]¶; Sets Psi4 options from an input dictionary. Parameters:. options_dict (Dict[str, Any]) – Dictionary where keys are case insensitive and values are the option value. For global options, keys are ""<option_name>"".; For option local to “<module_name>”, keys are ""<module_name>__<option_name>""; (double underscore separation).; For contents that would be in pcm = {...}, use ""PCM__INPUT"" key. verbose (int) – Control print volume. Return type:; None. Examples; >>> psi4.set_options({; ""basis"": ""cc-pvtz"",; ""df_basis_scf"": ""cc-pvtz-jkfit"",; ""scf__reference"": ""uhf"",; ""print"": 2}). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; set_options. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/api/psi4.driver.p4util.set_options.html:982,update,updated,982,psi4manual/1.7.x/api/psi4.driver.p4util.set_options.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/api/psi4.driver.p4util.set_options.html,1,['update'],['updated']
Deployability,"﻿. set_options. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; set_options. set_options¶. psi4.driver.set_options(options_dict, verbose=1)[source]¶; Sets Psi4 options from an input dictionary. Parameters:. options_dict (Dict[str, Any]) – Dictionary where keys are case insensitive and values are the option value. For global options, keys are ""<option_name>"".; For option local to “<module_name>”, keys are ""<module_name>__<option_name>""; (double underscore separation).; For contents that would be in pcm = {...}, use ""PCM__INPUT"" key. verbose (int) – Control print volume. Return type:; None. Examples; >>> psi4.set_options({; ""basis"": ""cc-pvtz"",; ""df_basis_scf"": ""cc-pvtz-jkfit"",; ""scf__reference"": ""uhf"",; ""print"": 2}). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; set_options. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/api/psi4.driver.set_options.html:975,update,updated,975,psi4manual/1.7.x/api/psi4.driver.set_options.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/api/psi4.driver.set_options.html,1,['update'],['updated']
Deployability,"﻿. set_options. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; set_options. set_options¶. psi4.driver.p4util.set_options(options_dict, verbose=1)[source]¶; Sets Psi4 options from an input dictionary. Parameters:. options_dict (Dict[str, Any]) – Dictionary where keys are case insensitive and values are the option value. For global options, keys are ""<option_name>"".; For option local to “<module_name>”, keys are ""<module_name>__<option_name>""; (double underscore separation).; For contents that would be in pcm = {...}, use ""PCM__INPUT"" key. verbose (int) – Control print volume. Return type:; None. Examples; >>> psi4.set_options({; ""basis"": ""cc-pvtz"",; ""df_basis_scf"": ""cc-pvtz-jkfit"",; ""scf__reference"": ""uhf"",; ""print"": 2}). table of contents. set_options; set_options(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; set_options. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/api/psi4.driver.p4util.set_options.html:1033,update,updated,1033,psi4manual/1.8.x/api/psi4.driver.p4util.set_options.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/api/psi4.driver.p4util.set_options.html,1,['update'],['updated']
Deployability,"﻿. set_options. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; set_options. set_options¶. psi4.driver.set_options(options_dict, verbose=1)[source]¶; Sets Psi4 options from an input dictionary. Parameters:. options_dict (Dict[str, Any]) – Dictionary where keys are case insensitive and values are the option value. For global options, keys are ""<option_name>"".; For option local to “<module_name>”, keys are ""<module_name>__<option_name>""; (double underscore separation).; For contents that would be in pcm = {...}, use ""PCM__INPUT"" key. verbose (int) – Control print volume. Return type:; None. Examples; >>> psi4.set_options({; ""basis"": ""cc-pvtz"",; ""df_basis_scf"": ""cc-pvtz-jkfit"",; ""scf__reference"": ""uhf"",; ""print"": 2}). table of contents. set_options; set_options(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; set_options. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/api/psi4.driver.set_options.html:1026,update,updated,1026,psi4manual/1.8.x/api/psi4.driver.set_options.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/api/psi4.driver.set_options.html,1,['update'],['updated']
Deployability,"﻿. set_options. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; set_options. set_options¶. psi4.driver.p4util.set_options(options_dict, verbose=1)[source]¶; Sets Psi4 options from an input dictionary. Parameters:. options_dict (Dict[str, Any]) – Dictionary where keys are case insensitive and values are the option value. For global options, keys are ""<option_name>"".; For option local to “<module_name>”, keys are ""<module_name>__<option_name>""; (double underscore separation).; For contents that would be in pcm = {...}, use ""PCM__INPUT"" key. verbose (int) – Control print volume. Return type:; None. Examples; >>> psi4.set_options({; ""basis"": ""cc-pvtz"",; ""df_basis_scf"": ""cc-pvtz-jkfit"",; ""scf__reference"": ""uhf"",; ""print"": 2}). table of contents. set_options; set_options(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; set_options. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/api/psi4.driver.p4util.set_options.html:1033,update,updated,1033,psi4manual/1.9.x/api/psi4.driver.p4util.set_options.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/api/psi4.driver.p4util.set_options.html,1,['update'],['updated']
Deployability,"﻿. set_options. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; set_options. set_options¶. psi4.driver.set_options(options_dict, verbose=1)[source]¶; Sets Psi4 options from an input dictionary. Parameters:. options_dict (Dict[str, Any]) – Dictionary where keys are case insensitive and values are the option value. For global options, keys are ""<option_name>"".; For option local to “<module_name>”, keys are ""<module_name>__<option_name>""; (double underscore separation).; For contents that would be in pcm = {...}, use ""PCM__INPUT"" key. verbose (int) – Control print volume. Return type:; None. Examples; >>> psi4.set_options({; ""basis"": ""cc-pvtz"",; ""df_basis_scf"": ""cc-pvtz-jkfit"",; ""scf__reference"": ""uhf"",; ""print"": 2}). table of contents. set_options; set_options(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; set_options. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/api/psi4.driver.set_options.html:1026,update,updated,1026,psi4manual/1.9.x/api/psi4.driver.set_options.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/api/psi4.driver.set_options.html,1,['update'],['updated']
Deployability,"﻿. set_output_file. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; set_output_file. set_output_file¶. psi4.core.set_output_file(*args, **kwargs)¶; Overloaded function. set_output_file(arg0: str) -> None; set_output_file(ofname: str, append: bool = False) -> None. Set the name for output file; prefer set_output_file(). table of contents. set_output_file; set_output_file(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; set_output_file. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/api/psi4.core.set_output_file-1.html:648,update,updated,648,psi4manual/master/api/psi4.core.set_output_file-1.html,https://psicode.org,https://psicode.org/psi4manual/master/api/psi4.core.set_output_file-1.html,2,['update'],['updated']
Deployability,"﻿. set_output_file. Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. set_output_file¶. psi4.core.set_output_file(*args, **kwargs)¶; Overloaded function. set_output_file(arg0: str) -> None; set_output_file(arg0: str, arg1: bool) -> None. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2018, The Psi4 Project.; Last updated on Wednesday, 25 July 2018 04:21AM.; Created using Sphinx 1.7.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/api/psi4.core.set_output_file-1.html:472,update,updated,472,psi4manual/1.2.1/api/psi4.core.set_output_file-1.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/api/psi4.core.set_output_file-1.html,2,['update'],['updated']
Deployability,"﻿. set_output_file. Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. set_output_file¶. psi4.core.set_output_file(*args, **kwargs)¶; Overloaded function. set_output_file(arg0: str) -> None; set_output_file(arg0: str, arg1: bool) -> None. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2019, The Psi4 Project.; Last updated on Wednesday, 15 May 2019 08:49PM.; Created using Sphinx 1.8.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/api/psi4.core.set_output_file-1.html:472,update,updated,472,psi4manual/1.3.2/api/psi4.core.set_output_file-1.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/api/psi4.core.set_output_file-1.html,2,['update'],['updated']
Deployability,"﻿. set_output_file. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; set_output_file. set_output_file¶. psi4.core.set_output_file(*args, **kwargs)¶; Overloaded function. set_output_file(arg0: str) -> None; set_output_file(ofname: str, append: bool = False) -> None. Set the name for output file; prefer set_output_file(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; set_output_file. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/api/psi4.core.set_output_file-1.html:570,update,updated,570,psi4manual/1.4.0/api/psi4.core.set_output_file-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/api/psi4.core.set_output_file-1.html,2,['update'],['updated']
Deployability,"﻿. set_output_file. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; set_output_file. set_output_file¶. psi4.core.set_output_file(*args, **kwargs)¶; Overloaded function. set_output_file(arg0: str) -> None; set_output_file(ofname: str, append: bool = False) -> None. Set the name for output file; prefer set_output_file(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; set_output_file. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/api/psi4.core.set_output_file-1.html:570,update,updated,570,psi4manual/1.5.0/api/psi4.core.set_output_file-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/api/psi4.core.set_output_file-1.html,2,['update'],['updated']
Deployability,"﻿. set_output_file. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; set_output_file. set_output_file¶. psi4.core.set_output_file(*args, **kwargs)¶; Overloaded function. set_output_file(arg0: str) -> None; set_output_file(ofname: str, append: bool = False) -> None. Set the name for output file; prefer set_output_file(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; set_output_file. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/api/psi4.core.set_output_file.html:570,update,updated,570,psi4manual/1.6.x/api/psi4.core.set_output_file.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/api/psi4.core.set_output_file.html,1,['update'],['updated']
Deployability,"﻿. set_output_file. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; set_output_file. set_output_file¶. psi4.core.set_output_file(*args, **kwargs)¶; Overloaded function. set_output_file(arg0: str) -> None; set_output_file(ofname: str, append: bool = False) -> None. Set the name for output file; prefer set_output_file(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; set_output_file. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/api/psi4.core.set_output_file.html:575,update,updated,575,psi4manual/1.7.x/api/psi4.core.set_output_file.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/api/psi4.core.set_output_file.html,1,['update'],['updated']
Deployability,"﻿. set_output_file. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; set_output_file. set_output_file¶. psi4.core.set_output_file(*args, **kwargs)¶; Overloaded function. set_output_file(arg0: str) -> None; set_output_file(ofname: str, append: bool = False) -> None. Set the name for output file; prefer set_output_file(). table of contents. set_output_file; set_output_file(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; set_output_file. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/api/psi4.core.set_output_file.html:634,update,updated,634,psi4manual/1.8.x/api/psi4.core.set_output_file.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/api/psi4.core.set_output_file.html,1,['update'],['updated']
Deployability,"﻿. set_output_file. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; set_output_file. set_output_file¶. psi4.core.set_output_file(*args, **kwargs)¶; Overloaded function. set_output_file(arg0: str) -> None; set_output_file(ofname: str, append: bool = False) -> None. Set the name for output file; prefer set_output_file(). table of contents. set_output_file; set_output_file(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; set_output_file. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/api/psi4.core.set_output_file.html:634,update,updated,634,psi4manual/1.9.x/api/psi4.core.set_output_file.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/api/psi4.core.set_output_file.html,1,['update'],['updated']
Deployability,"﻿. set_parent_symmetry. Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. set_parent_symmetry¶. psi4.core.set_parent_symmetry(arg0: str) → None¶; Sets the symmetry of the ‘parent’ (undisplaced) geometry, by Schoenflies symbol, at the beginning of a finite difference computation. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2018, The Psi4 Project.; Last updated on Wednesday, 25 July 2018 04:21AM.; Created using Sphinx 1.7.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/api/psi4.core.set_parent_symmetry-1.html:514,update,updated,514,psi4manual/1.2.1/api/psi4.core.set_parent_symmetry-1.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/api/psi4.core.set_parent_symmetry-1.html,2,['update'],['updated']
Deployability,"﻿. set_parent_symmetry. Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. set_parent_symmetry¶. psi4.core.set_parent_symmetry(arg0: str) → None¶; Sets the symmetry of the ‘parent’ (undisplaced) geometry, by Schoenflies symbol, at the beginning of a finite difference computation. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2019, The Psi4 Project.; Last updated on Wednesday, 15 May 2019 08:49PM.; Created using Sphinx 1.8.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/api/psi4.core.set_parent_symmetry-1.html:514,update,updated,514,psi4manual/1.3.2/api/psi4.core.set_parent_symmetry-1.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/api/psi4.core.set_parent_symmetry-1.html,2,['update'],['updated']
Deployability,"﻿. set_psi_file_prefix. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; set_psi_file_prefix. set_psi_file_prefix¶. psi4.core.set_psi_file_prefix() → None¶. Deprecated since version 1.4. table of contents. set_psi_file_prefix; set_psi_file_prefix(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; set_psi_file_prefix. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/api/psi4.core.set_psi_file_prefix.html:525,update,updated,525,psi4manual/master/api/psi4.core.set_psi_file_prefix.html,https://psicode.org,https://psicode.org/psi4manual/master/api/psi4.core.set_psi_file_prefix.html,1,['update'],['updated']
Deployability,"﻿. set_psi_file_prefix. Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. set_psi_file_prefix¶. psi4.core.set_psi_file_prefix(arg0: str) → None¶. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2018, The Psi4 Project.; Last updated on Wednesday, 25 July 2018 04:21AM.; Created using Sphinx 1.7.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/api/psi4.core.set_psi_file_prefix-1.html:380,update,updated,380,psi4manual/1.2.1/api/psi4.core.set_psi_file_prefix-1.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/api/psi4.core.set_psi_file_prefix-1.html,2,['update'],['updated']
Deployability,"﻿. set_psi_file_prefix. Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. set_psi_file_prefix¶. psi4.core.set_psi_file_prefix(arg0: str) → None¶. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2019, The Psi4 Project.; Last updated on Wednesday, 15 May 2019 08:49PM.; Created using Sphinx 1.8.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/api/psi4.core.set_psi_file_prefix-1.html:380,update,updated,380,psi4manual/1.3.2/api/psi4.core.set_psi_file_prefix-1.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/api/psi4.core.set_psi_file_prefix-1.html,2,['update'],['updated']
Deployability,"﻿. set_psi_file_prefix. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; set_psi_file_prefix. set_psi_file_prefix¶. psi4.core.set_psi_file_prefix() → None¶. Deprecated since version 1.4. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; set_psi_file_prefix. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/api/psi4.core.set_psi_file_prefix-1.html:439,update,updated,439,psi4manual/1.4.0/api/psi4.core.set_psi_file_prefix-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/api/psi4.core.set_psi_file_prefix-1.html,2,['update'],['updated']
Deployability,"﻿. set_psi_file_prefix. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; set_psi_file_prefix. set_psi_file_prefix¶. psi4.core.set_psi_file_prefix() → None¶. Deprecated since version 1.4. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; set_psi_file_prefix. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/api/psi4.core.set_psi_file_prefix-1.html:439,update,updated,439,psi4manual/1.5.0/api/psi4.core.set_psi_file_prefix-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/api/psi4.core.set_psi_file_prefix-1.html,2,['update'],['updated']
Deployability,"﻿. set_psi_file_prefix. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; set_psi_file_prefix. set_psi_file_prefix¶. psi4.core.set_psi_file_prefix() → None¶. Deprecated since version 1.4. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; set_psi_file_prefix. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/api/psi4.core.set_psi_file_prefix.html:439,update,updated,439,psi4manual/1.6.x/api/psi4.core.set_psi_file_prefix.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/api/psi4.core.set_psi_file_prefix.html,1,['update'],['updated']
Deployability,"﻿. set_psi_file_prefix. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; set_psi_file_prefix. set_psi_file_prefix¶. psi4.core.set_psi_file_prefix() → None¶. Deprecated since version 1.4. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; set_psi_file_prefix. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/api/psi4.core.set_psi_file_prefix.html:444,update,updated,444,psi4manual/1.7.x/api/psi4.core.set_psi_file_prefix.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/api/psi4.core.set_psi_file_prefix.html,1,['update'],['updated']
Deployability,"﻿. set_psi_file_prefix. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; set_psi_file_prefix. set_psi_file_prefix¶. psi4.core.set_psi_file_prefix() → None¶. Deprecated since version 1.4. table of contents. set_psi_file_prefix; set_psi_file_prefix(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; set_psi_file_prefix. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/api/psi4.core.set_psi_file_prefix.html:511,update,updated,511,psi4manual/1.8.x/api/psi4.core.set_psi_file_prefix.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/api/psi4.core.set_psi_file_prefix.html,1,['update'],['updated']
Deployability,"﻿. set_psi_file_prefix. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; set_psi_file_prefix. set_psi_file_prefix¶. psi4.core.set_psi_file_prefix() → None¶. Deprecated since version 1.4. table of contents. set_psi_file_prefix; set_psi_file_prefix(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; set_psi_file_prefix. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/api/psi4.core.set_psi_file_prefix.html:511,update,updated,511,psi4manual/1.9.x/api/psi4.core.set_psi_file_prefix.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/api/psi4.core.set_psi_file_prefix.html,1,['update'],['updated']
Deployability,"﻿. set_scalar_variable. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; set_scalar_variable. set_scalar_variable¶. psi4.core.set_scalar_variable(key: str, value: float) → None¶; Sets the double QCVariable key (case-insensitive); prefer set_variable(). table of contents. set_scalar_variable; set_scalar_variable(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; set_scalar_variable. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/api/psi4.core.set_scalar_variable.html:591,update,updated,591,psi4manual/master/api/psi4.core.set_scalar_variable.html,https://psicode.org,https://psicode.org/psi4manual/master/api/psi4.core.set_scalar_variable.html,1,['update'],['updated']
Deployability,"﻿. set_scalar_variable. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; set_scalar_variable. set_scalar_variable¶. psi4.core.set_scalar_variable(key: str, value: float) → None¶; Sets the double QCVariable key (case-insensitive); prefer set_variable(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; set_scalar_variable. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/api/psi4.core.set_scalar_variable-1.html:505,update,updated,505,psi4manual/1.4.0/api/psi4.core.set_scalar_variable-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/api/psi4.core.set_scalar_variable-1.html,2,['update'],['updated']
Deployability,"﻿. set_scalar_variable. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; set_scalar_variable. set_scalar_variable¶. psi4.core.set_scalar_variable(key: str, value: float) → None¶; Sets the double QCVariable key (case-insensitive); prefer set_variable(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; set_scalar_variable. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/api/psi4.core.set_scalar_variable-1.html:505,update,updated,505,psi4manual/1.5.0/api/psi4.core.set_scalar_variable-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/api/psi4.core.set_scalar_variable-1.html,2,['update'],['updated']
Deployability,"﻿. set_scalar_variable. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; set_scalar_variable. set_scalar_variable¶. psi4.core.set_scalar_variable(key: str, value: float) → None¶; Sets the double QCVariable key (case-insensitive); prefer set_variable(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; set_scalar_variable. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/api/psi4.core.set_scalar_variable.html:505,update,updated,505,psi4manual/1.6.x/api/psi4.core.set_scalar_variable.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/api/psi4.core.set_scalar_variable.html,1,['update'],['updated']
Deployability,"﻿. set_scalar_variable. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; set_scalar_variable. set_scalar_variable¶. psi4.core.set_scalar_variable(key: str, value: float) → None¶; Sets the double QCVariable key (case-insensitive); prefer set_variable(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; set_scalar_variable. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/api/psi4.core.set_scalar_variable.html:510,update,updated,510,psi4manual/1.7.x/api/psi4.core.set_scalar_variable.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/api/psi4.core.set_scalar_variable.html,1,['update'],['updated']
Deployability,"﻿. set_scalar_variable. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; set_scalar_variable. set_scalar_variable¶. psi4.core.set_scalar_variable(key: str, value: float) → None¶; Sets the double QCVariable key (case-insensitive); prefer set_variable(). table of contents. set_scalar_variable; set_scalar_variable(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; set_scalar_variable. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/api/psi4.core.set_scalar_variable.html:577,update,updated,577,psi4manual/1.8.x/api/psi4.core.set_scalar_variable.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/api/psi4.core.set_scalar_variable.html,1,['update'],['updated']
Deployability,"﻿. set_scalar_variable. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; set_scalar_variable. set_scalar_variable¶. psi4.core.set_scalar_variable(key: str, value: float) → None¶; Sets the double QCVariable key (case-insensitive); prefer set_variable(). table of contents. set_scalar_variable; set_scalar_variable(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; set_scalar_variable. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/api/psi4.core.set_scalar_variable.html:577,update,updated,577,psi4manual/1.9.x/api/psi4.core.set_scalar_variable.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/api/psi4.core.set_scalar_variable.html,1,['update'],['updated']
Deployability,"﻿. set_scalar_variable. Navigation. Index. modules    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. set_scalar_variable¶. psi4.core.set_scalar_variable(arg0: str, arg1: float) → None¶; Sets the requested (case-insensitive) double QC variable. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2019, The Psi4 Project.; Last updated on Wednesday, 15 May 2019 08:49PM.; Created using Sphinx 1.8.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/api/psi4.core.set_scalar_variable-1.html:441,update,updated,441,psi4manual/1.3.2/api/psi4.core.set_scalar_variable-1.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/api/psi4.core.set_scalar_variable-1.html,2,['update'],['updated']
Deployability,"﻿. set_variable. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; set_variable. set_variable¶. psi4.core.set_variable(key, val)¶; Sets scalar or array QCVariable key to val in global memory. Parameters:. key (str) – Case-insensitive key to global double or Matrix; storage maps.; val (Union[Matrix, ndarray, float]) – Scalar or array to be stored in key. If ndarray and; data key does not naturally fit in 2D Matrix (often charge and; multipole QCVariables), it will be reshaped, as all; ndarray are stored as Matrix. Raises:; ValidationError – If val is a scalar but key already exists as an array variable. Or; if val is an array but key already exists as a scalar variable. Return type:; None. table of contents. set_variable; set_variable(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; set_variable. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/api/psi4.core.set_variable.html:1014,update,updated,1014,psi4manual/master/api/psi4.core.set_variable.html,https://psicode.org,https://psicode.org/psi4manual/master/api/psi4.core.set_variable.html,1,['update'],['updated']
Deployability,"﻿. set_variable. Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. set_variable¶. psi4.core.set_variable(arg0: str, arg1: float) → None¶; Sets a PSI variable, by name. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2018, The Psi4 Project.; Last updated on Wednesday, 25 July 2018 04:21AM.; Created using Sphinx 1.7.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/api/psi4.core.set_variable-1.html:402,update,updated,402,psi4manual/1.2.1/api/psi4.core.set_variable-1.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/api/psi4.core.set_variable-1.html,2,['update'],['updated']
Deployability,"﻿. set_variable. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; set_variable. set_variable¶. psi4.core.set_variable(key, val)¶; Sets scalar or array QCVariable key to val in global memory. Return type; None. Parameters. key (str) – ; val (Union[psi4.core.Matrix, numpy.ndarray, float]) – . «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; set_variable. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/api/psi4.core.set_variable-1.html:537,update,updated,537,psi4manual/1.4.0/api/psi4.core.set_variable-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/api/psi4.core.set_variable-1.html,2,['update'],['updated']
Deployability,"﻿. set_variable. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; set_variable. set_variable¶. psi4.core.set_variable(key, val)¶; Sets scalar or array QCVariable key to val in global memory. Return type; None. Parameters. key (str) – ; val (Union[psi4.core.Matrix, numpy.ndarray, float]) – . «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; set_variable. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/api/psi4.core.set_variable-1.html:537,update,updated,537,psi4manual/1.5.0/api/psi4.core.set_variable-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/api/psi4.core.set_variable-1.html,2,['update'],['updated']
Deployability,"﻿. set_variable. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; set_variable. set_variable¶. psi4.core.set_variable(key, val)¶; Sets scalar or array QCVariable key to val in global memory. Return type; None. Parameters. key (str) – ; val (Union[psi4.core.Matrix, numpy.ndarray, float]) – . «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; set_variable. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/api/psi4.core.set_variable.html:537,update,updated,537,psi4manual/1.6.x/api/psi4.core.set_variable.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/api/psi4.core.set_variable.html,1,['update'],['updated']
Deployability,"﻿. set_variable. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; set_variable. set_variable¶. psi4.core.set_variable(key, val)¶; Sets scalar or array QCVariable key to; val in global memory. Parameters:. key (str) – Case-insensitive key to global double or Matrix; storage maps.; val (Union[Matrix, ndarray, float]) – Scalar or array to be stored in key. If ndarray and; data key does not naturally fit in 2D Matrix (often charge and; multipole QCVariables), it will be reshaped, as all; ndarray are stored as Matrix. Raises:; ValidationError – If val is a scalar but key already exists as an array variable. Or; if val is an array but key already exists as a scalar variable. Return type:; None. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; set_variable. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/api/psi4.core.set_variable.html:948,update,updated,948,psi4manual/1.7.x/api/psi4.core.set_variable.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/api/psi4.core.set_variable.html,1,['update'],['updated']
Deployability,"﻿. set_variable. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; set_variable. set_variable¶. psi4.core.set_variable(key, val)¶; Sets scalar or array QCVariable key to; val in global memory. Parameters:. key (str) – Case-insensitive key to global double or Matrix; storage maps.; val (Union[Matrix, ndarray, float]) – Scalar or array to be stored in key. If ndarray and; data key does not naturally fit in 2D Matrix (often charge and; multipole QCVariables), it will be reshaped, as all; ndarray are stored as Matrix. Raises:; ValidationError – If val is a scalar but key already exists as an array variable. Or; if val is an array but key already exists as a scalar variable. Return type:; None. table of contents. set_variable; set_variable(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; set_variable. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/api/psi4.core.set_variable.html:1001,update,updated,1001,psi4manual/1.8.x/api/psi4.core.set_variable.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/api/psi4.core.set_variable.html,1,['update'],['updated']
Deployability,"﻿. set_variable. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; set_variable. set_variable¶. psi4.core.set_variable(key, val)¶; Sets scalar or array QCVariable key to val in global memory.; :rtype: None. Parameters:. key (str) – Case-insensitive key to global double or Matrix; storage maps.; val (Union[Matrix, ndarray, float]) – Scalar or array to be stored in key. If ndarray and; data key does not naturally fit in 2D Matrix (often charge and; multipole QCVariables), it will be reshaped, as all; ndarray are stored as Matrix. Raises:; ValidationError – If val is a scalar but key already exists as an array variable. Or; if val is an array but key already exists as a scalar variable. Return type:; None. table of contents. set_variable; set_variable(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; set_variable. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/api/psi4.core.set_variable.html:1015,update,updated,1015,psi4manual/1.9.x/api/psi4.core.set_variable.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/api/psi4.core.set_variable.html,1,['update'],['updated']
Deployability,"﻿. state_to_atomicinput. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; state_to_atomicinput. state_to_atomicinput¶. psi4.driver.p4util.state_to_atomicinput(*, driver, method, basis=None, molecule=None, function_kwargs=None)[source]¶; Form a QCSchema for job input from the current state of PSI4 settings. Parameters:. driver (str) – {‘energy’, ‘gradient’, ‘hessian’}; Target derivative level.; method (str) – Level of theory for job.; basis (Optional[str]) – Basis set for job, if not to be extracted from BASIS.; molecule (Optional[Molecule]) – Molecule for job, if not the active one from; get_active_molecule().; function_kwargs (Optional[Dict[str, Any]]) – Additional keyword arguments to pass to the driver function. Returns:; QCSchema instance including current keyword set and provenance. Return type:; AtomicInput. table of contents. state_to_atomicinput; state_to_atomicinput(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; state_to_atomicinput. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/api/psi4.driver.p4util.state_to_atomicinput.html:1167,update,updated,1167,psi4manual/master/api/psi4.driver.p4util.state_to_atomicinput.html,https://psicode.org,https://psicode.org/psi4manual/master/api/psi4.driver.p4util.state_to_atomicinput.html,1,['update'],['updated']
Deployability,"﻿. state_to_atomicinput. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; state_to_atomicinput. state_to_atomicinput¶. psi4.driver.p4util.state_to_atomicinput(*, driver, method, basis=None, molecule=None, function_kwargs=None)[source]¶; Form a QCSchema for job input from the current state of PSI4 settings. Parameters:. driver (str) – {‘energy’, ‘gradient’, ‘hessian’}; Target derivative level.; method (str) – Level of theory for job.; basis (Optional[str]) – Basis set for job, if not to be extracted from BASIS.; molecule (Optional[Molecule]) – Molecule for job, if not the active one from; get_active_molecule().; function_kwargs (Optional[Dict[str, Any]]) – Additional keyword arguments to pass to the driver function. Returns:; QCSchema instance including current keyword set and provenance. Return type:; AtomicInput. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; state_to_atomicinput. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/api/psi4.driver.p4util.state_to_atomicinput.html:1084,update,updated,1084,psi4manual/1.7.x/api/psi4.driver.p4util.state_to_atomicinput.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/api/psi4.driver.p4util.state_to_atomicinput.html,1,['update'],['updated']
Deployability,"﻿. state_to_atomicinput. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; state_to_atomicinput. state_to_atomicinput¶. psi4.driver.p4util.state_to_atomicinput(*, driver, method, basis=None, molecule=None, function_kwargs=None)[source]¶; Form a QCSchema for job input from the current state of PSI4 settings. Parameters:. driver (str) – {‘energy’, ‘gradient’, ‘hessian’}; Target derivative level.; method (str) – Level of theory for job.; basis (Optional[str]) – Basis set for job, if not to be extracted from BASIS.; molecule (Optional[Molecule]) – Molecule for job, if not the active one from; get_active_molecule().; function_kwargs (Optional[Dict[str, Any]]) – Additional keyword arguments to pass to the driver function. Returns:; QCSchema instance including current keyword set and provenance. Return type:; AtomicInput. table of contents. state_to_atomicinput; state_to_atomicinput(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; state_to_atomicinput. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/api/psi4.driver.p4util.state_to_atomicinput.html:1153,update,updated,1153,psi4manual/1.8.x/api/psi4.driver.p4util.state_to_atomicinput.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/api/psi4.driver.p4util.state_to_atomicinput.html,1,['update'],['updated']
Deployability,"﻿. state_to_atomicinput. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; state_to_atomicinput. state_to_atomicinput¶. psi4.driver.p4util.state_to_atomicinput(*, driver, method, basis=None, molecule=None, function_kwargs=None)[source]¶; Form a QCSchema for job input from the current state of PSI4 settings. Parameters:. driver (str) – {‘energy’, ‘gradient’, ‘hessian’}; Target derivative level.; method (str) – Level of theory for job.; basis (Optional[str]) – Basis set for job, if not to be extracted from BASIS.; molecule (Optional[Molecule]) – Molecule for job, if not the active one from; get_active_molecule().; function_kwargs (Optional[Dict[str, Any]]) – Additional keyword arguments to pass to the driver function. Returns:; QCSchema instance including current keyword set and provenance. Return type:; AtomicInput. table of contents. state_to_atomicinput; state_to_atomicinput(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; state_to_atomicinput. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/api/psi4.driver.p4util.state_to_atomicinput.html:1153,update,updated,1153,psi4manual/1.9.x/api/psi4.driver.p4util.state_to_atomicinput.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/api/psi4.driver.p4util.state_to_atomicinput.html,1,['update'],['updated']
Deployability,"﻿. success. Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. success¶. psi4.driver.success(label)[source]¶; Function to print a ‘label…PASSED’ line to screen.; Used by util.compare_values() family when functions pass. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2018, The Psi4 Project.; Last updated on Wednesday, 25 July 2018 04:21AM.; Created using Sphinx 1.7.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/api/psi4.driver.success-1.html:453,update,updated,453,psi4manual/1.2.1/api/psi4.driver.success-1.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/api/psi4.driver.success-1.html,2,['update'],['updated']
Deployability,"﻿. success. Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. success¶. psi4.driver.success(label)[source]¶; Function to print a ‘label…PASSED’ line to screen.; Used by util.compare_values() family when functions pass. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2019, The Psi4 Project.; Last updated on Wednesday, 15 May 2019 08:49PM.; Created using Sphinx 1.8.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/api/psi4.driver.success-1.html:453,update,updated,453,psi4manual/1.3.2/api/psi4.driver.success-1.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/api/psi4.driver.success-1.html,2,['update'],['updated']
Deployability,"﻿. tdscf. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; tdscf. tdscf¶. psi4.driver.tdscf(wfn, **kwargs)[source]¶. table of contents. tdscf; tdscf(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; tdscf. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/api/psi4.driver.tdscf.html:413,update,updated,413,psi4manual/master/api/psi4.driver.tdscf.html,https://psicode.org,https://psicode.org/psi4manual/master/api/psi4.driver.tdscf.html,1,['update'],['updated']
Deployability,"﻿. tdscf. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; tdscf. tdscf¶. psi4.driver.tdscf(wfn, **kwargs)[source]¶. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; tdscf. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/api/psi4.driver.tdscf-1.html:355,update,updated,355,psi4manual/1.4.0/api/psi4.driver.tdscf-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/api/psi4.driver.tdscf-1.html,2,['update'],['updated']
Deployability,"﻿. tdscf. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; tdscf. tdscf¶. psi4.driver.tdscf(wfn, **kwargs)[source]¶. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; tdscf. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/api/psi4.driver.tdscf-1.html:355,update,updated,355,psi4manual/1.5.0/api/psi4.driver.tdscf-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/api/psi4.driver.tdscf-1.html,2,['update'],['updated']
Deployability,"﻿. tdscf. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; tdscf. tdscf¶. psi4.driver.tdscf(wfn, **kwargs)[source]¶. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; tdscf. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/api/psi4.driver.tdscf.html:355,update,updated,355,psi4manual/1.6.x/api/psi4.driver.tdscf.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/api/psi4.driver.tdscf.html,1,['update'],['updated']
Deployability,"﻿. tdscf. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; tdscf. tdscf¶. psi4.driver.tdscf(wfn, **kwargs)[source]¶. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; tdscf. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/api/psi4.driver.tdscf.html:360,update,updated,360,psi4manual/1.7.x/api/psi4.driver.tdscf.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/api/psi4.driver.tdscf.html,1,['update'],['updated']
Deployability,"﻿. tdscf. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; tdscf. tdscf¶. psi4.driver.tdscf(wfn, **kwargs)[source]¶. table of contents. tdscf; tdscf(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; tdscf. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/api/psi4.driver.tdscf.html:399,update,updated,399,psi4manual/1.8.x/api/psi4.driver.tdscf.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/api/psi4.driver.tdscf.html,1,['update'],['updated']
Deployability,"﻿. tdscf. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; tdscf. tdscf¶. psi4.driver.tdscf(wfn, **kwargs)[source]¶. table of contents. tdscf; tdscf(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; tdscf. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/api/psi4.driver.tdscf.html:399,update,updated,399,psi4manual/1.9.x/api/psi4.driver.tdscf.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/api/psi4.driver.tdscf.html,1,['update'],['updated']
Deployability,"﻿. temp_circular_import_blocker. Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. temp_circular_import_blocker¶. psi4.driver.temp_circular_import_blocker()[source]¶. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2019, The Psi4 Project.; Last updated on Wednesday, 15 May 2019 08:49PM.; Created using Sphinx 1.8.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/api/psi4.driver.temp_circular_import_blocker-1.html:401,update,updated,401,psi4manual/1.3.2/api/psi4.driver.temp_circular_import_blocker-1.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/api/psi4.driver.temp_circular_import_blocker-1.html,2,['update'],['updated']
Deployability,"﻿. temp_circular_import_blocker. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; temp_circular_import_blocker. temp_circular_import_blocker¶. psi4.driver.temp_circular_import_blocker()[source]¶. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; temp_circular_import_blocker. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/api/psi4.driver.temp_circular_import_blocker-1.html:457,update,updated,457,psi4manual/1.4.0/api/psi4.driver.temp_circular_import_blocker-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/api/psi4.driver.temp_circular_import_blocker-1.html,2,['update'],['updated']
Deployability,"﻿. temp_circular_import_blocker. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; temp_circular_import_blocker. temp_circular_import_blocker¶. psi4.driver.temp_circular_import_blocker()[source]¶. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; temp_circular_import_blocker. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/api/psi4.driver.temp_circular_import_blocker-1.html:457,update,updated,457,psi4manual/1.5.0/api/psi4.driver.temp_circular_import_blocker-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/api/psi4.driver.temp_circular_import_blocker-1.html,2,['update'],['updated']
Deployability,"﻿. temp_circular_import_blocker. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; temp_circular_import_blocker. temp_circular_import_blocker¶. psi4.driver.temp_circular_import_blocker()[source]¶. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; temp_circular_import_blocker. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/api/psi4.driver.temp_circular_import_blocker.html:457,update,updated,457,psi4manual/1.6.x/api/psi4.driver.temp_circular_import_blocker.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/api/psi4.driver.temp_circular_import_blocker.html,1,['update'],['updated']
Deployability,"﻿. temp_circular_import_blocker. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; temp_circular_import_blocker. temp_circular_import_blocker¶. psi4.driver.p4util.temp_circular_import_blocker()[source]¶. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; temp_circular_import_blocker. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/api/psi4.driver.p4util.temp_circular_import_blocker.html:469,update,updated,469,psi4manual/1.7.x/api/psi4.driver.p4util.temp_circular_import_blocker.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/api/psi4.driver.p4util.temp_circular_import_blocker.html,1,['update'],['updated']
Deployability,"﻿. temp_circular_import_blocker. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; temp_circular_import_blocker. temp_circular_import_blocker¶. psi4.driver.temp_circular_import_blocker()[source]¶. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; temp_circular_import_blocker. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/api/psi4.driver.temp_circular_import_blocker.html:462,update,updated,462,psi4manual/1.7.x/api/psi4.driver.temp_circular_import_blocker.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/api/psi4.driver.temp_circular_import_blocker.html,1,['update'],['updated']
Deployability,"﻿. temp_circular_import_blocker. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; temp_circular_import_blocker. temp_circular_import_blocker¶. psi4.driver.p4util.temp_circular_import_blocker()[source]¶. table of contents. temp_circular_import_blocker; temp_circular_import_blocker(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; temp_circular_import_blocker. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/api/psi4.driver.p4util.temp_circular_import_blocker.html:554,update,updated,554,psi4manual/1.8.x/api/psi4.driver.p4util.temp_circular_import_blocker.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/api/psi4.driver.p4util.temp_circular_import_blocker.html,1,['update'],['updated']
Deployability,"﻿. temp_circular_import_blocker. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; temp_circular_import_blocker. temp_circular_import_blocker¶. psi4.driver.temp_circular_import_blocker()[source]¶. table of contents. temp_circular_import_blocker; temp_circular_import_blocker(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; temp_circular_import_blocker. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/api/psi4.driver.temp_circular_import_blocker.html:547,update,updated,547,psi4manual/1.8.x/api/psi4.driver.temp_circular_import_blocker.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/api/psi4.driver.temp_circular_import_blocker.html,1,['update'],['updated']
Deployability,"﻿. test_matrix_dpd_interface. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; test_matrix_dpd_interface. test_matrix_dpd_interface¶. psi4.core.test_matrix_dpd_interface() → bool¶. table of contents. test_matrix_dpd_interface; test_matrix_dpd_interface(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; test_matrix_dpd_interface. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/api/psi4.core.test_matrix_dpd_interface.html:537,update,updated,537,psi4manual/master/api/psi4.core.test_matrix_dpd_interface.html,https://psicode.org,https://psicode.org/psi4manual/master/api/psi4.core.test_matrix_dpd_interface.html,1,['update'],['updated']
Deployability,"﻿. test_matrix_dpd_interface. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; test_matrix_dpd_interface. test_matrix_dpd_interface¶. psi4.core.test_matrix_dpd_interface() → bool¶. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; test_matrix_dpd_interface. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/api/psi4.core.test_matrix_dpd_interface.html:444,update,updated,444,psi4manual/1.7.x/api/psi4.core.test_matrix_dpd_interface.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/api/psi4.core.test_matrix_dpd_interface.html,1,['update'],['updated']
Deployability,"﻿. test_matrix_dpd_interface. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; test_matrix_dpd_interface. test_matrix_dpd_interface¶. psi4.core.test_matrix_dpd_interface() → bool¶. table of contents. test_matrix_dpd_interface; test_matrix_dpd_interface(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; test_matrix_dpd_interface. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/api/psi4.core.test_matrix_dpd_interface.html:523,update,updated,523,psi4manual/1.8.x/api/psi4.core.test_matrix_dpd_interface.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/api/psi4.core.test_matrix_dpd_interface.html,1,['update'],['updated']
Deployability,"﻿. test_matrix_dpd_interface. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; test_matrix_dpd_interface. test_matrix_dpd_interface¶. psi4.core.test_matrix_dpd_interface() → bool¶. table of contents. test_matrix_dpd_interface; test_matrix_dpd_interface(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; test_matrix_dpd_interface. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/api/psi4.core.test_matrix_dpd_interface.html:523,update,updated,523,psi4manual/1.9.x/api/psi4.core.test_matrix_dpd_interface.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/api/psi4.core.test_matrix_dpd_interface.html,1,['update'],['updated']
Deployability,"﻿. thermo. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Psithon Functions: Invoking a Calculation; Harmonic Vibrational Analysis and Visualization of Normal Modes — frequency() and hessian(); thermo. thermo¶. psi4.driver.qcdb.vib.thermo(vibinfo, T, P, multiplicity, molecular_mass, E0, sigma, rot_const, rotor_type=None)[source]¶; Perform thermochemical analysis from vibrational output. Parameters:. E0 (float) – Electronic energy [Eh] at well bottom at 0 [K], CURRENT ENERGY.; molecular_mass (float) – Mass in [u] of molecule under analysis.; multiplicity (int) – Spin multiplicity of molecule under analysis.; rot_const (ndarray) – (3,) rotational constants in [cm^-1] of molecule under analysis.; sigma (int) – The rotational or external symmetry number determined from the point group.; rotor_type (Optional[str]) – The rotor type for rotational stat mech purposes: RT_ATOM, RT_LINEAR, other.; T (float) – Temperature in [K]. Psi default 298.15. Note that 273.15 is IUPAC STP.; P (float) – Pressure in [Pa]. Psi default 101325. Note that 100000 is IUPAC STP. Returns:; First is every thermochemistry component in atomic units along with input conditions.; Second is formatted presentation of analysis. Return type:; dict, str. table of contents. thermo; thermo(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Psithon Functions: Invoking a Calculation; Harmonic Vibrational Analysis and Visualization of Normal Modes — frequency() and hessian(); thermo. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/api/psi4.driver.qcdb.vib.thermo.html:1603,update,updated,1603,psi4manual/master/api/psi4.driver.qcdb.vib.thermo.html,https://psicode.org,https://psicode.org/psi4manual/master/api/psi4.driver.qcdb.vib.thermo.html,1,['update'],['updated']
Deployability,"﻿. thermo. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Psithon Functions: Invoking a Calculation; Harmonic Vibrational Analysis and Visualization of Normal Modes — frequency() and hessian(); thermo. thermo¶. psi4.driver.qcdb.vib.thermo(vibinfo, T, P, multiplicity, molecular_mass, E0, sigma, rot_const, rotor_type=None)[source]¶; Perform thermochemical analysis from vibrational output. Parameters. E0 (float) – Electronic energy [Eh] at well bottom at 0 [K], CURRENT ENERGY.; molecular_mass (float) – Mass in [u] of molecule under analysis.; multiplicity (int) – Spin multiplicity of molecule under analysis.; rot_const (ndarray) – (3,) rotational constants in [cm^-1] of molecule under analysis.; sigma (int) – The rotational or external symmetry number determined from the point group.; rotor_type (Optional[str]) – The rotor type for rotational stat mech purposes: RT_ATOM, RT_LINEAR, other.; T (float) – Temperature in [K]. Psi default 298.15. Note that 273.15 is IUPAC STP.; P (float) – Pressure in [Pa]. Psi default 101325. Note that 100000 is IUPAC STP. Returns; First is every thermochemistry component in atomic units along with input conditions.; Second is formatted presentation of analysis. Return type; dict, str. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Psithon Functions: Invoking a Calculation; Harmonic Vibrational Analysis and Visualization of Normal Modes — frequency() and hessian(); thermo. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/api/psi4.driver.qcdb.vib.thermo-1.html:1540,update,updated,1540,psi4manual/1.4.0/api/psi4.driver.qcdb.vib.thermo-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/api/psi4.driver.qcdb.vib.thermo-1.html,2,['update'],['updated']
Deployability,"﻿. thermo. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Psithon Functions: Invoking a Calculation; Harmonic Vibrational Analysis and Visualization of Normal Modes — frequency() and hessian(); thermo. thermo¶. psi4.driver.qcdb.vib.thermo(vibinfo, T, P, multiplicity, molecular_mass, E0, sigma, rot_const, rotor_type=None)[source]¶; Perform thermochemical analysis from vibrational output. Parameters. E0 (float) – Electronic energy [Eh] at well bottom at 0 [K], CURRENT ENERGY.; molecular_mass (float) – Mass in [u] of molecule under analysis.; multiplicity (int) – Spin multiplicity of molecule under analysis.; rot_const (ndarray) – (3,) rotational constants in [cm^-1] of molecule under analysis.; sigma (int) – The rotational or external symmetry number determined from the point group.; rotor_type (Optional[str]) – The rotor type for rotational stat mech purposes: RT_ATOM, RT_LINEAR, other.; T (float) – Temperature in [K]. Psi default 298.15. Note that 273.15 is IUPAC STP.; P (float) – Pressure in [Pa]. Psi default 101325. Note that 100000 is IUPAC STP. Returns; First is every thermochemistry component in atomic units along with input conditions.; Second is formatted presentation of analysis. Return type; dict, str. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Psithon Functions: Invoking a Calculation; Harmonic Vibrational Analysis and Visualization of Normal Modes — frequency() and hessian(); thermo. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/api/psi4.driver.qcdb.vib.thermo-1.html:1540,update,updated,1540,psi4manual/1.5.0/api/psi4.driver.qcdb.vib.thermo-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/api/psi4.driver.qcdb.vib.thermo-1.html,2,['update'],['updated']
Deployability,"﻿. thermo. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Psithon Functions: Invoking a Calculation; Harmonic Vibrational Analysis and Visualization of Normal Modes — frequency() and hessian(); thermo. thermo¶. psi4.driver.qcdb.vib.thermo(vibinfo, T, P, multiplicity, molecular_mass, E0, sigma, rot_const, rotor_type=None)[source]¶; Perform thermochemical analysis from vibrational output. Parameters. E0 (float) – Electronic energy [Eh] at well bottom at 0 [K], CURRENT ENERGY.; molecular_mass (float) – Mass in [u] of molecule under analysis.; multiplicity (int) – Spin multiplicity of molecule under analysis.; rot_const (ndarray) – (3,) rotational constants in [cm^-1] of molecule under analysis.; sigma (int) – The rotational or external symmetry number determined from the point group.; rotor_type (Optional[str]) – The rotor type for rotational stat mech purposes: RT_ATOM, RT_LINEAR, other.; T (float) – Temperature in [K]. Psi default 298.15. Note that 273.15 is IUPAC STP.; P (float) – Pressure in [Pa]. Psi default 101325. Note that 100000 is IUPAC STP. Returns; First is every thermochemistry component in atomic units along with input conditions.; Second is formatted presentation of analysis. Return type; dict, str. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Psithon Functions: Invoking a Calculation; Harmonic Vibrational Analysis and Visualization of Normal Modes — frequency() and hessian(); thermo. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/api/psi4.driver.qcdb.vib.thermo.html:1540,update,updated,1540,psi4manual/1.6.x/api/psi4.driver.qcdb.vib.thermo.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/api/psi4.driver.qcdb.vib.thermo.html,1,['update'],['updated']
Deployability,"﻿. thermo. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Psithon Functions: Invoking a Calculation; Harmonic Vibrational Analysis and Visualization of Normal Modes — frequency() and hessian(); thermo. thermo¶. psi4.driver.qcdb.vib.thermo(vibinfo, T, P, multiplicity, molecular_mass, E0, sigma, rot_const, rotor_type=None)[source]¶; Perform thermochemical analysis from vibrational output. Parameters:. E0 (float) – Electronic energy [Eh] at well bottom at 0 [K], CURRENT ENERGY.; molecular_mass (float) – Mass in [u] of molecule under analysis.; multiplicity (int) – Spin multiplicity of molecule under analysis.; rot_const (ndarray) – (3,) rotational constants in [cm^-1] of molecule under analysis.; sigma (int) – The rotational or external symmetry number determined from the point group.; rotor_type (Optional[str]) – The rotor type for rotational stat mech purposes: RT_ATOM, RT_LINEAR, other.; T (float) – Temperature in [K]. Psi default 298.15. Note that 273.15 is IUPAC STP.; P (float) – Pressure in [Pa]. Psi default 101325. Note that 100000 is IUPAC STP. Returns:; First is every thermochemistry component in atomic units along with input conditions.; Second is formatted presentation of analysis. Return type:; dict, str. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Psithon Functions: Invoking a Calculation; Harmonic Vibrational Analysis and Visualization of Normal Modes — frequency() and hessian(); thermo. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/api/psi4.driver.qcdb.vib.thermo.html:1548,update,updated,1548,psi4manual/1.7.x/api/psi4.driver.qcdb.vib.thermo.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/api/psi4.driver.qcdb.vib.thermo.html,1,['update'],['updated']
Deployability,"﻿. thermo. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Psithon Functions: Invoking a Calculation; Harmonic Vibrational Analysis and Visualization of Normal Modes — frequency() and hessian(); thermo. thermo¶. psi4.driver.qcdb.vib.thermo(vibinfo, T, P, multiplicity, molecular_mass, E0, sigma, rot_const, rotor_type=None)[source]¶; Perform thermochemical analysis from vibrational output. Parameters:. E0 (float) – Electronic energy [Eh] at well bottom at 0 [K], CURRENT ENERGY.; molecular_mass (float) – Mass in [u] of molecule under analysis.; multiplicity (int) – Spin multiplicity of molecule under analysis.; rot_const (ndarray) – (3,) rotational constants in [cm^-1] of molecule under analysis.; sigma (int) – The rotational or external symmetry number determined from the point group.; rotor_type (str) – The rotor type for rotational stat mech purposes: RT_ATOM, RT_LINEAR, other.; T (float) – Temperature in [K]. Psi default 298.15. Note that 273.15 is IUPAC STP.; P (float) – Pressure in [Pa]. Psi default 101325. Note that 100000 is IUPAC STP. Returns:; First is every thermochemistry component in atomic units along with input conditions.; Second is formatted presentation of analysis. Return type:; dict, str. table of contents. thermo; thermo(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Psithon Functions: Invoking a Calculation; Harmonic Vibrational Analysis and Visualization of Normal Modes — frequency() and hessian(); thermo. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/api/psi4.driver.qcdb.vib.thermo.html:1579,update,updated,1579,psi4manual/1.8.x/api/psi4.driver.qcdb.vib.thermo.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/api/psi4.driver.qcdb.vib.thermo.html,1,['update'],['updated']
Deployability,"﻿. thermo. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Psithon Functions: Invoking a Calculation; Harmonic Vibrational Analysis and Visualization of Normal Modes — frequency() and hessian(); thermo. thermo¶. psi4.driver.qcdb.vib.thermo(vibinfo, T, P, multiplicity, molecular_mass, E0, sigma, rot_const, rotor_type=None)[source]¶; Perform thermochemical analysis from vibrational output. Parameters:. E0 (float) – Electronic energy [Eh] at well bottom at 0 [K], CURRENT ENERGY.; molecular_mass (float) – Mass in [u] of molecule under analysis.; multiplicity (int) – Spin multiplicity of molecule under analysis.; rot_const (ndarray) – (3,) rotational constants in [cm^-1] of molecule under analysis.; sigma (int) – The rotational or external symmetry number determined from the point group.; rotor_type (Optional[str]) – The rotor type for rotational stat mech purposes: RT_ATOM, RT_LINEAR, other.; T (float) – Temperature in [K]. Psi default 298.15. Note that 273.15 is IUPAC STP.; P (float) – Pressure in [Pa]. Psi default 101325. Note that 100000 is IUPAC STP. Returns:; First is every thermochemistry component in atomic units along with input conditions.; Second is formatted presentation of analysis. Return type:; dict, str. table of contents. thermo; thermo(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Psithon Functions: Invoking a Calculation; Harmonic Vibrational Analysis and Visualization of Normal Modes — frequency() and hessian(); thermo. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/api/psi4.driver.qcdb.vib.thermo.html:1589,update,updated,1589,psi4manual/1.9.x/api/psi4.driver.qcdb.vib.thermo.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/api/psi4.driver.qcdb.vib.thermo.html,1,['update'],['updated']
Deployability,"﻿. timer_off. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; timer_off. timer_off¶. psi4.core.timer_off(label: str) → None¶; Stop timer with label. table of contents. timer_off; timer_off(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; timer_off. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/api/psi4.core.timer_off.html:458,update,updated,458,psi4manual/master/api/psi4.core.timer_off.html,https://psicode.org,https://psicode.org/psi4manual/master/api/psi4.core.timer_off.html,1,['update'],['updated']
Deployability,"﻿. timer_off. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; timer_off. timer_off¶. psi4.core.timer_off(label: str) → None¶; Stop timer with label. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; timer_off. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/api/psi4.core.timer_off-1.html:392,update,updated,392,psi4manual/1.4.0/api/psi4.core.timer_off-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/api/psi4.core.timer_off-1.html,2,['update'],['updated']
Deployability,"﻿. timer_off. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; timer_off. timer_off¶. psi4.core.timer_off(label: str) → None¶; Stop timer with label. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; timer_off. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/api/psi4.core.timer_off-1.html:392,update,updated,392,psi4manual/1.5.0/api/psi4.core.timer_off-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/api/psi4.core.timer_off-1.html,2,['update'],['updated']
Deployability,"﻿. timer_off. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; timer_off. timer_off¶. psi4.core.timer_off(label: str) → None¶; Stop timer with label. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; timer_off. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/api/psi4.core.timer_off.html:392,update,updated,392,psi4manual/1.6.x/api/psi4.core.timer_off.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/api/psi4.core.timer_off.html,1,['update'],['updated']
Deployability,"﻿. timer_off. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; timer_off. timer_off¶. psi4.core.timer_off(label: str) → None¶; Stop timer with label. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; timer_off. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/api/psi4.core.timer_off.html:397,update,updated,397,psi4manual/1.7.x/api/psi4.core.timer_off.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/api/psi4.core.timer_off.html,1,['update'],['updated']
Deployability,"﻿. timer_off. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; timer_off. timer_off¶. psi4.core.timer_off(label: str) → None¶; Stop timer with label. table of contents. timer_off; timer_off(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; timer_off. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/api/psi4.core.timer_off.html:444,update,updated,444,psi4manual/1.8.x/api/psi4.core.timer_off.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/api/psi4.core.timer_off.html,1,['update'],['updated']
Deployability,"﻿. timer_off. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; timer_off. timer_off¶. psi4.core.timer_off(label: str) → None¶; Stop timer with label. table of contents. timer_off; timer_off(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; timer_off. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/api/psi4.core.timer_off.html:444,update,updated,444,psi4manual/1.9.x/api/psi4.core.timer_off.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/api/psi4.core.timer_off.html,1,['update'],['updated']
Deployability,"﻿. timer_off. Navigation. Index. modules    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. timer_off¶. psi4.core.timer_off(arg0: str) → None¶; Stop timer of label argument. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2019, The Psi4 Project.; Last updated on Wednesday, 15 May 2019 08:49PM.; Created using Sphinx 1.8.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/api/psi4.core.timer_off-1.html:370,update,updated,370,psi4manual/1.3.2/api/psi4.core.timer_off-1.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/api/psi4.core.timer_off-1.html,2,['update'],['updated']
Deployability,"﻿. timer_on. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; timer_on. timer_on¶. psi4.core.timer_on(label: str) → None¶; Start timer with label. Needs to be paired with psi4.core.timer_off(). table of contents. timer_on; timer_on(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; timer_on. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/api/psi4.core.timer_on.html:499,update,updated,499,psi4manual/master/api/psi4.core.timer_on.html,https://psicode.org,https://psicode.org/psi4manual/master/api/psi4.core.timer_on.html,1,['update'],['updated']
Deployability,"﻿. timer_on. Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. timer_on¶. psi4.core.timer_on(arg0: str) → None¶; Start timer with argument as label. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2019, The Psi4 Project.; Last updated on Wednesday, 15 May 2019 08:49PM.; Created using Sphinx 1.8.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/api/psi4.core.timer_on-1.html:383,update,updated,383,psi4manual/1.3.2/api/psi4.core.timer_on-1.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/api/psi4.core.timer_on-1.html,2,['update'],['updated']
Deployability,"﻿. timer_on. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; timer_on. timer_on¶. psi4.core.timer_on(label: str) → None¶; Start timer with label. Needs to be paired with psi4.core.timer_off(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; timer_on. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/api/psi4.core.timer_on-1.html:435,update,updated,435,psi4manual/1.4.0/api/psi4.core.timer_on-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/api/psi4.core.timer_on-1.html,2,['update'],['updated']
Deployability,"﻿. timer_on. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; timer_on. timer_on¶. psi4.core.timer_on(label: str) → None¶; Start timer with label. Needs to be paired with psi4.core.timer_off(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; timer_on. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/api/psi4.core.timer_on-1.html:435,update,updated,435,psi4manual/1.5.0/api/psi4.core.timer_on-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/api/psi4.core.timer_on-1.html,2,['update'],['updated']
Deployability,"﻿. timer_on. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; timer_on. timer_on¶. psi4.core.timer_on(label: str) → None¶; Start timer with label. Needs to be paired with psi4.core.timer_off(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; timer_on. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/api/psi4.core.timer_on.html:435,update,updated,435,psi4manual/1.6.x/api/psi4.core.timer_on.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/api/psi4.core.timer_on.html,1,['update'],['updated']
Deployability,"﻿. timer_on. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; timer_on. timer_on¶. psi4.core.timer_on(label: str) → None¶; Start timer with label. Needs to be paired with psi4.core.timer_off(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; timer_on. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/api/psi4.core.timer_on.html:440,update,updated,440,psi4manual/1.7.x/api/psi4.core.timer_on.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/api/psi4.core.timer_on.html,1,['update'],['updated']
Deployability,"﻿. timer_on. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; timer_on. timer_on¶. psi4.core.timer_on(label: str) → None¶; Start timer with label. Needs to be paired with psi4.core.timer_off(). table of contents. timer_on; timer_on(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; timer_on. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/api/psi4.core.timer_on.html:485,update,updated,485,psi4manual/1.8.x/api/psi4.core.timer_on.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/api/psi4.core.timer_on.html,1,['update'],['updated']
Deployability,"﻿. timer_on. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; timer_on. timer_on¶. psi4.core.timer_on(label: str) → None¶; Start timer with label. Needs to be paired with psi4.core.timer_off(). table of contents. timer_on; timer_on(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; timer_on. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/api/psi4.core.timer_on.html:485,update,updated,485,psi4manual/1.9.x/api/psi4.core.timer_on.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/api/psi4.core.timer_on.html,1,['update'],['updated']
Deployability,"﻿. triplet. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; triplet. triplet¶. psi4.core.triplet(A: psi4.core.Matrix, B: psi4.core.Matrix, C: psi4.core.Matrix, transA: bool = False, transB: bool = False, transC: bool = False) → psi4.core.Matrix¶; Returns the multiplication of three matrices, with options to transpose each beforehand. Parameters:. A – First matrix to multiply.; B – Second matrix to multiply.; C – Third matrix to multiply.; transA – Transpose the first matrix before operations?; transB – Transpose the second matrix before operations?; transC – Transpose the third matrix before operations?. Returns:; New matrix of ABC. Return type:; Matrix. Notes. (AB)C vs. A(BC) selected by cost analysis of overall (not per-irrep) dimensions.; If A, B, C not of the the same symmetry, always computed as (AB)C. table of contents. triplet; triplet(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; triplet. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/api/psi4.core.triplet.html:1122,update,updated,1122,psi4manual/master/api/psi4.core.triplet.html,https://psicode.org,https://psicode.org/psi4manual/master/api/psi4.core.triplet.html,1,['update'],['updated']
Deployability,"﻿. triplet. Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. triplet¶. psi4.core.triplet(A: psi4.core.Matrix, B: psi4.core.Matrix, C: psi4.core.Matrix, transA: bool=False, transB: bool=False, transC: bool=False) → psi4.core.Matrix¶; Returns the multiplication of three matrics A, B, and C, with options to transpose each beforehand. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2019, The Psi4 Project.; Last updated on Wednesday, 15 May 2019 08:49PM.; Created using Sphinx 1.8.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/api/psi4.core.triplet-1.html:568,update,updated,568,psi4manual/1.3.2/api/psi4.core.triplet-1.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/api/psi4.core.triplet-1.html,2,['update'],['updated']
Deployability,"﻿. triplet. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; triplet. triplet¶. psi4.core.triplet(A: psi4.core.Matrix, B: psi4.core.Matrix, C: psi4.core.Matrix, transA: bool = False, transB: bool = False, transC: bool = False) → psi4.core.Matrix¶; Returns the multiplication of three matrices, with options to transpose each beforehand. Parameters. A – First matrix to multiply.; B – Second matrix to multiply.; C – Third matrix to multiply.; transA – Transpose the first matrix before operations?; transB – Transpose the second matrix before operations?; transC – Transpose the third matrix before operations?. Returns; New matrix of ABC. Return type; Matrix. Notes. (AB)C vs. A(BC) selected by cost analysis of overall (not per-irrep) dimensions.; If A, B, C not of the the same symmetry, always computed as (AB)C. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; triplet. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/api/psi4.core.triplet-1.html:1057,update,updated,1057,psi4manual/1.4.0/api/psi4.core.triplet-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/api/psi4.core.triplet-1.html,2,['update'],['updated']
Deployability,"﻿. triplet. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; triplet. triplet¶. psi4.core.triplet(A: psi4.core.Matrix, B: psi4.core.Matrix, C: psi4.core.Matrix, transA: bool = False, transB: bool = False, transC: bool = False) → psi4.core.Matrix¶; Returns the multiplication of three matrices, with options to transpose each beforehand. Parameters. A – First matrix to multiply.; B – Second matrix to multiply.; C – Third matrix to multiply.; transA – Transpose the first matrix before operations?; transB – Transpose the second matrix before operations?; transC – Transpose the third matrix before operations?. Returns; New matrix of ABC. Return type; Matrix. Notes. (AB)C vs. A(BC) selected by cost analysis of overall (not per-irrep) dimensions.; If A, B, C not of the the same symmetry, always computed as (AB)C. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; triplet. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/api/psi4.core.triplet-1.html:1057,update,updated,1057,psi4manual/1.5.0/api/psi4.core.triplet-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/api/psi4.core.triplet-1.html,2,['update'],['updated']
Deployability,"﻿. triplet. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; triplet. triplet¶. psi4.core.triplet(A: psi4.core.Matrix, B: psi4.core.Matrix, C: psi4.core.Matrix, transA: bool = False, transB: bool = False, transC: bool = False) → psi4.core.Matrix¶; Returns the multiplication of three matrices, with options to transpose each beforehand. Parameters. A – First matrix to multiply.; B – Second matrix to multiply.; C – Third matrix to multiply.; transA – Transpose the first matrix before operations?; transB – Transpose the second matrix before operations?; transC – Transpose the third matrix before operations?. Returns; New matrix of ABC. Return type; Matrix. Notes. (AB)C vs. A(BC) selected by cost analysis of overall (not per-irrep) dimensions.; If A, B, C not of the the same symmetry, always computed as (AB)C. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; triplet. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/api/psi4.core.triplet.html:1057,update,updated,1057,psi4manual/1.6.x/api/psi4.core.triplet.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/api/psi4.core.triplet.html,1,['update'],['updated']
Deployability,"﻿. triplet. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; triplet. triplet¶. psi4.core.triplet(A: psi4.core.Matrix, B: psi4.core.Matrix, C: psi4.core.Matrix, transA: bool = False, transB: bool = False, transC: bool = False) → psi4.core.Matrix¶; Returns the multiplication of three matrices, with options to transpose each beforehand. Parameters:. A – First matrix to multiply.; B – Second matrix to multiply.; C – Third matrix to multiply.; transA – Transpose the first matrix before operations?; transB – Transpose the second matrix before operations?; transC – Transpose the third matrix before operations?. Returns:; New matrix of ABC. Return type:; Matrix. Notes. (AB)C vs. A(BC) selected by cost analysis of overall (not per-irrep) dimensions.; If A, B, C not of the the same symmetry, always computed as (AB)C. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; triplet. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/api/psi4.core.triplet.html:1065,update,updated,1065,psi4manual/1.7.x/api/psi4.core.triplet.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/api/psi4.core.triplet.html,1,['update'],['updated']
Deployability,"﻿. triplet. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; triplet. triplet¶. psi4.core.triplet(A: psi4.core.Matrix, B: psi4.core.Matrix, C: psi4.core.Matrix, transA: bool = False, transB: bool = False, transC: bool = False) → psi4.core.Matrix¶; Returns the multiplication of three matrices, with options to transpose each beforehand. Parameters:. A – First matrix to multiply.; B – Second matrix to multiply.; C – Third matrix to multiply.; transA – Transpose the first matrix before operations?; transB – Transpose the second matrix before operations?; transC – Transpose the third matrix before operations?. Returns:; New matrix of ABC. Return type:; Matrix. Notes. (AB)C vs. A(BC) selected by cost analysis of overall (not per-irrep) dimensions.; If A, B, C not of the the same symmetry, always computed as (AB)C. table of contents. triplet; triplet(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; triplet. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/api/psi4.core.triplet.html:1108,update,updated,1108,psi4manual/1.8.x/api/psi4.core.triplet.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/api/psi4.core.triplet.html,1,['update'],['updated']
Deployability,"﻿. triplet. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; triplet. triplet¶. psi4.core.triplet(A: psi4.core.Matrix, B: psi4.core.Matrix, C: psi4.core.Matrix, transA: bool = False, transB: bool = False, transC: bool = False) → psi4.core.Matrix¶; Returns the multiplication of three matrices, with options to transpose each beforehand. Parameters:. A – First matrix to multiply.; B – Second matrix to multiply.; C – Third matrix to multiply.; transA – Transpose the first matrix before operations?; transB – Transpose the second matrix before operations?; transC – Transpose the third matrix before operations?. Returns:; New matrix of ABC. Return type:; Matrix. Notes. (AB)C vs. A(BC) selected by cost analysis of overall (not per-irrep) dimensions.; If A, B, C not of the the same symmetry, always computed as (AB)C. table of contents. triplet; triplet(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; triplet. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/api/psi4.core.triplet.html:1108,update,updated,1108,psi4manual/1.9.x/api/psi4.core.triplet.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/api/psi4.core.triplet.html,1,['update'],['updated']
Deployability,"﻿. tstart. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; tstart. tstart¶. psi4.core.tstart() → None¶; Start module-level timer. Only one active at once. table of contents. tstart; tstart(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; tstart. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/api/psi4.core.tstart.html:455,update,updated,455,psi4manual/master/api/psi4.core.tstart.html,https://psicode.org,https://psicode.org/psi4manual/master/api/psi4.core.tstart.html,1,['update'],['updated']
Deployability,"﻿. tstart. Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. tstart¶. psi4.core.tstart() → None¶; docstring. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2018, The Psi4 Project.; Last updated on Wednesday, 25 July 2018 04:21AM.; Created using Sphinx 1.7.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/api/psi4.core.tstart-1.html:343,update,updated,343,psi4manual/1.2.1/api/psi4.core.tstart-1.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/api/psi4.core.tstart-1.html,2,['update'],['updated']
Deployability,"﻿. tstart. Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. tstart¶. psi4.core.tstart() → None¶; docstring. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2019, The Psi4 Project.; Last updated on Wednesday, 15 May 2019 08:49PM.; Created using Sphinx 1.8.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/api/psi4.core.tstart-1.html:343,update,updated,343,psi4manual/1.3.2/api/psi4.core.tstart-1.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/api/psi4.core.tstart-1.html,2,['update'],['updated']
Deployability,"﻿. tstart. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; tstart. tstart¶. psi4.core.tstart() → None¶; Start module-level timer. Only one active at once. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; tstart. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/api/psi4.core.tstart-1.html:395,update,updated,395,psi4manual/1.4.0/api/psi4.core.tstart-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/api/psi4.core.tstart-1.html,2,['update'],['updated']
Deployability,"﻿. tstart. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; tstart. tstart¶. psi4.core.tstart() → None¶; Start module-level timer. Only one active at once. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; tstart. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/api/psi4.core.tstart-1.html:395,update,updated,395,psi4manual/1.5.0/api/psi4.core.tstart-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/api/psi4.core.tstart-1.html,2,['update'],['updated']
Deployability,"﻿. tstart. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; tstart. tstart¶. psi4.core.tstart() → None¶; Start module-level timer. Only one active at once. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; tstart. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/api/psi4.core.tstart.html:395,update,updated,395,psi4manual/1.6.x/api/psi4.core.tstart.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/api/psi4.core.tstart.html,1,['update'],['updated']
Deployability,"﻿. tstart. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; tstart. tstart¶. psi4.core.tstart() → None¶; Start module-level timer. Only one active at once. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; tstart. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/api/psi4.core.tstart.html:400,update,updated,400,psi4manual/1.7.x/api/psi4.core.tstart.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/api/psi4.core.tstart.html,1,['update'],['updated']
Deployability,"﻿. tstart. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; tstart. tstart¶. psi4.core.tstart() → None¶; Start module-level timer. Only one active at once. table of contents. tstart; tstart(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; tstart. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/api/psi4.core.tstart.html:441,update,updated,441,psi4manual/1.8.x/api/psi4.core.tstart.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/api/psi4.core.tstart.html,1,['update'],['updated']
Deployability,"﻿. tstart. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; tstart. tstart¶. psi4.core.tstart() → None¶; Start module-level timer. Only one active at once. table of contents. tstart; tstart(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; tstart. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/api/psi4.core.tstart.html:441,update,updated,441,psi4manual/1.9.x/api/psi4.core.tstart.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/api/psi4.core.tstart.html,1,['update'],['updated']
Deployability,"﻿. tstop. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; tstop. tstop¶. psi4.core.tstop() → None¶; Stop module-level timer. Prints user, system, and total times to outfile. table of contents. tstop; tstop(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; tstop. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/api/psi4.core.tstop.html:471,update,updated,471,psi4manual/master/api/psi4.core.tstop.html,https://psicode.org,https://psicode.org/psi4manual/master/api/psi4.core.tstop.html,1,['update'],['updated']
Deployability,"﻿. tstop. Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. tstop¶. psi4.core.tstop() → None¶; docstring. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2018, The Psi4 Project.; Last updated on Wednesday, 25 July 2018 04:21AM.; Created using Sphinx 1.7.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/api/psi4.core.tstop-1.html:340,update,updated,340,psi4manual/1.2.1/api/psi4.core.tstop-1.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/api/psi4.core.tstop-1.html,2,['update'],['updated']
Deployability,"﻿. tstop. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; tstop. tstop¶. psi4.core.tstop() → None¶; Stop module-level timer. Prints user, system, and total times to outfile. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; tstop. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/api/psi4.core.tstop-1.html:413,update,updated,413,psi4manual/1.4.0/api/psi4.core.tstop-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/api/psi4.core.tstop-1.html,2,['update'],['updated']
Deployability,"﻿. tstop. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; tstop. tstop¶. psi4.core.tstop() → None¶; Stop module-level timer. Prints user, system, and total times to outfile. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; tstop. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/api/psi4.core.tstop-1.html:413,update,updated,413,psi4manual/1.5.0/api/psi4.core.tstop-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/api/psi4.core.tstop-1.html,2,['update'],['updated']
Deployability,"﻿. tstop. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; tstop. tstop¶. psi4.core.tstop() → None¶; Stop module-level timer. Prints user, system, and total times to outfile. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; tstop. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/api/psi4.core.tstop.html:413,update,updated,413,psi4manual/1.6.x/api/psi4.core.tstop.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/api/psi4.core.tstop.html,1,['update'],['updated']
Deployability,"﻿. tstop. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; tstop. tstop¶. psi4.core.tstop() → None¶; Stop module-level timer. Prints user, system, and total times to outfile. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; tstop. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/api/psi4.core.tstop.html:418,update,updated,418,psi4manual/1.7.x/api/psi4.core.tstop.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/api/psi4.core.tstop.html,1,['update'],['updated']
Deployability,"﻿. tstop. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; tstop. tstop¶. psi4.core.tstop() → None¶; Stop module-level timer. Prints user, system, and total times to outfile. table of contents. tstop; tstop(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; tstop. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/api/psi4.core.tstop.html:457,update,updated,457,psi4manual/1.8.x/api/psi4.core.tstop.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/api/psi4.core.tstop.html,1,['update'],['updated']
Deployability,"﻿. tstop. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; tstop. tstop¶. psi4.core.tstop() → None¶; Stop module-level timer. Prints user, system, and total times to outfile. table of contents. tstop; tstop(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; tstop. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/api/psi4.core.tstop.html:457,update,updated,457,psi4manual/1.9.x/api/psi4.core.tstop.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/api/psi4.core.tstop.html,1,['update'],['updated']
Deployability,"﻿. tstop. Navigation. Index. modules    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. tstop¶. psi4.core.tstop() → None¶; docstring. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2019, The Psi4 Project.; Last updated on Wednesday, 15 May 2019 08:49PM.; Created using Sphinx 1.8.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/api/psi4.core.tstop-1.html:330,update,updated,330,psi4manual/1.3.2/api/psi4.core.tstop-1.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/api/psi4.core.tstop-1.html,2,['update'],['updated']
Deployability,"﻿. variable. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; variable. variable¶. psi4.core.variable(key)¶; Return copy of scalar or array QCVariable; key from global memory. Parameters:; key (str) – Case-insensitive key to global double or Matrix; storage maps. Returns:; Requested QCVariable from global memory. Scalar variables are returned as floats.; Array variables not naturally 2D (like multipoles or per-atom charges); are returned as ndarray of natural dimensionality.; Other array variables are returned as Matrix and; may have an extra dimension with symmetry information. Return type:; float or ndarray or Matrix. Raises:; KeyError – If key not set on self. Example; >>> psi4.gradient(""hf/cc-pvdz""); >>> psi4.variable(""CURRENT ENERGY""); -100.00985995185668; >>> psi4.variable(""CURRENT DIPOLE""); array([ 0. , 0. , -0.83217802]); >>> psi4.variable(""CURRENT GRADIENT""); <psi4.core.Matrix object at 0x12d884fc0>; >>> psi4.variable(""CURRENT GRADIENT"").np; array([[ 6.16297582e-33, 6.16297582e-33, -9.41037138e-02],; [-6.16297582e-33, -6.16297582e-33, 9.41037138e-02]]). table of contents. variable; variable(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; variable. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/api/psi4.core.variable.html:1384,update,updated,1384,psi4manual/master/api/psi4.core.variable.html,https://psicode.org,https://psicode.org/psi4manual/master/api/psi4.core.variable.html,1,['update'],['updated']
Deployability,"﻿. variable. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; variable. variable¶. psi4.core.variable(key)¶; Return copy of scalar or array QCVariable key from global memory. Returns; Scalar variables are returned as floats.; Array variables not naturally 2D (like multipoles) are returned as numpy.ndarray of natural dimensionality.; Other array variables are returned as Matrix and may have an extra dimension with symmetry information. Return type; float or numpy.ndarray or Matrix. Parameters; key (str) – . Example; >>> psi4.gradient(""hf/cc-pvdz""); >>> psi4.variable(""CURRENT ENERGY""); -100.00985995185668; >>> psi4.variable(""CURRENT DIPOLE""); array([ 0. , 0. , -0.83217802]); >>> psi4.variable(""CURRENT GRADIENT""); <psi4.core.Matrix object at 0x12d884fc0>; >>> psi4.variable(""CURRENT GRADIENT"").np; array([[ 6.16297582e-33, 6.16297582e-33, -9.41037138e-02],; [-6.16297582e-33, -6.16297582e-33, 9.41037138e-02]]). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; variable. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/api/psi4.core.variable-1.html:1160,update,updated,1160,psi4manual/1.4.0/api/psi4.core.variable-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/api/psi4.core.variable-1.html,2,['update'],['updated']
Deployability,"﻿. variable. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; variable. variable¶. psi4.core.variable(key)¶; Return copy of scalar or array QCVariable key from global memory. Returns; Scalar variables are returned as floats.; Array variables not naturally 2D (like multipoles) are returned as numpy.ndarray of natural dimensionality.; Other array variables are returned as Matrix and may have an extra dimension with symmetry information. Return type; float or numpy.ndarray or Matrix. Parameters; key (str) – . Example; >>> psi4.gradient(""hf/cc-pvdz""); >>> psi4.variable(""CURRENT ENERGY""); -100.00985995185668; >>> psi4.variable(""CURRENT DIPOLE""); array([ 0. , 0. , -0.83217802]); >>> psi4.variable(""CURRENT GRADIENT""); <psi4.core.Matrix object at 0x12d884fc0>; >>> psi4.variable(""CURRENT GRADIENT"").np; array([[ 6.16297582e-33, 6.16297582e-33, -9.41037138e-02],; [-6.16297582e-33, -6.16297582e-33, 9.41037138e-02]]). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; variable. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/api/psi4.core.variable-1.html:1160,update,updated,1160,psi4manual/1.5.0/api/psi4.core.variable-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/api/psi4.core.variable-1.html,2,['update'],['updated']
Deployability,"﻿. variable. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; variable. variable¶. psi4.core.variable(key)¶; Return copy of scalar or array QCVariable key from global memory. Returns; Scalar variables are returned as floats.; Array variables not naturally 2D (like multipoles) are returned as numpy.ndarray of natural dimensionality.; Other array variables are returned as Matrix and may have an extra dimension with symmetry information. Return type; float or numpy.ndarray or Matrix. Parameters; key (str) – . Example; >>> psi4.gradient(""hf/cc-pvdz""); >>> psi4.variable(""CURRENT ENERGY""); -100.00985995185668; >>> psi4.variable(""CURRENT DIPOLE""); array([ 0. , 0. , -0.83217802]); >>> psi4.variable(""CURRENT GRADIENT""); <psi4.core.Matrix object at 0x12d884fc0>; >>> psi4.variable(""CURRENT GRADIENT"").np; array([[ 6.16297582e-33, 6.16297582e-33, -9.41037138e-02],; [-6.16297582e-33, -6.16297582e-33, 9.41037138e-02]]). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; variable. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/api/psi4.core.variable.html:1160,update,updated,1160,psi4manual/1.6.x/api/psi4.core.variable.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/api/psi4.core.variable.html,1,['update'],['updated']
Deployability,"﻿. variable. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; variable. variable¶. psi4.core.variable(key)¶; Return copy of scalar or array QCVariable; key from global memory. Parameters:; key (str) – Case-insensitive key to global double or Matrix; storage maps. Returns:; Requested QCVariable from global memory. Scalar variables are returned as floats.; Array variables not naturally 2D (like multipoles or per-atom charges); are returned as ndarray of natural dimensionality.; Other array variables are returned as Matrix and; may have an extra dimension with symmetry information. Return type:; float or ndarray or Matrix. Raises:; KeyError – If key not set on self. Example; >>> psi4.gradient(""hf/cc-pvdz""); >>> psi4.variable(""CURRENT ENERGY""); -100.00985995185668; >>> psi4.variable(""CURRENT DIPOLE""); array([ 0. , 0. , -0.83217802]); >>> psi4.variable(""CURRENT GRADIENT""); <psi4.core.Matrix object at 0x12d884fc0>; >>> psi4.variable(""CURRENT GRADIENT"").np; array([[ 6.16297582e-33, 6.16297582e-33, -9.41037138e-02],; [-6.16297582e-33, -6.16297582e-33, 9.41037138e-02]]). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; variable. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/api/psi4.core.variable.html:1325,update,updated,1325,psi4manual/1.7.x/api/psi4.core.variable.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/api/psi4.core.variable.html,1,['update'],['updated']
Deployability,"﻿. variable. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; variable. variable¶. psi4.core.variable(key)¶; Return copy of scalar or array QCVariable; key from global memory. Parameters:; key (str) – Case-insensitive key to global double or Matrix; storage maps. Returns:; Requested QCVariable from global memory. Scalar variables are returned as floats.; Array variables not naturally 2D (like multipoles or per-atom charges); are returned as ndarray of natural dimensionality.; Other array variables are returned as Matrix and; may have an extra dimension with symmetry information. Return type:; float or ndarray or Matrix. Raises:; KeyError – If key not set on self. Example; >>> psi4.gradient(""hf/cc-pvdz""); >>> psi4.variable(""CURRENT ENERGY""); -100.00985995185668; >>> psi4.variable(""CURRENT DIPOLE""); array([ 0. , 0. , -0.83217802]); >>> psi4.variable(""CURRENT GRADIENT""); <psi4.core.Matrix object at 0x12d884fc0>; >>> psi4.variable(""CURRENT GRADIENT"").np; array([[ 6.16297582e-33, 6.16297582e-33, -9.41037138e-02],; [-6.16297582e-33, -6.16297582e-33, 9.41037138e-02]]). table of contents. variable; variable(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; variable. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/api/psi4.core.variable.html:1370,update,updated,1370,psi4manual/1.8.x/api/psi4.core.variable.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/api/psi4.core.variable.html,1,['update'],['updated']
Deployability,"﻿. variable. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; variable. variable¶. psi4.core.variable(key)¶; Return copy of scalar or array QCVariable; key from global memory. Parameters:; key (str) – Case-insensitive key to global double or Matrix; storage maps. Returns:; Requested QCVariable from global memory. Scalar variables are returned as floats.; Array variables not naturally 2D (like multipoles or per-atom charges); are returned as ndarray of natural dimensionality.; Other array variables are returned as Matrix and; may have an extra dimension with symmetry information. Return type:; float or ndarray or Matrix. Raises:; KeyError – If key not set on self. Example; >>> psi4.gradient(""hf/cc-pvdz""); >>> psi4.variable(""CURRENT ENERGY""); -100.00985995185668; >>> psi4.variable(""CURRENT DIPOLE""); array([ 0. , 0. , -0.83217802]); >>> psi4.variable(""CURRENT GRADIENT""); <psi4.core.Matrix object at 0x12d884fc0>; >>> psi4.variable(""CURRENT GRADIENT"").np; array([[ 6.16297582e-33, 6.16297582e-33, -9.41037138e-02],; [-6.16297582e-33, -6.16297582e-33, 9.41037138e-02]]). table of contents. variable; variable(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; variable. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/api/psi4.core.variable.html:1370,update,updated,1370,psi4manual/1.9.x/api/psi4.core.variable.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/api/psi4.core.variable.html,1,['update'],['updated']
Deployability,"﻿. variables. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; variables. variables¶. psi4.core.variables(include_deprecated_keys=False)¶; Return all scalar or array QCVariables; from global memory. Parameters:; include_deprecated_keys (bool) – Also return duplicate entries with keys that have been deprecated. Returns:; Map of all QCVariables that have been set. Scalar variables are returned as floats.; Array variables not naturally 2D (like multipoles or per-atom charges); are returned as ndarray of natural dimensionality.; Other array variables are returned as Matrix and; may have an extra dimension with symmetry information. Return type:; Dict[str, Union[float, ndarray, Matrix]. table of contents. variables; variables(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; variables. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/api/psi4.core.variables.html:999,update,updated,999,psi4manual/master/api/psi4.core.variables.html,https://psicode.org,https://psicode.org/psi4manual/master/api/psi4.core.variables.html,1,['update'],['updated']
Deployability,"﻿. variables. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; variables. variables¶. psi4.core.variables(include_deprecated_keys=False)¶; Return all scalar or array QCVariables from global memory. Return type; Dict[str, Union[float, Matrix, ndarray]]. Parameters; include_deprecated_keys (bool) – . «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; variables. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/api/psi4.core.variables-1.html:542,update,updated,542,psi4manual/1.4.0/api/psi4.core.variables-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/api/psi4.core.variables-1.html,2,['update'],['updated']
Deployability,"﻿. variables. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; variables. variables¶. psi4.core.variables(include_deprecated_keys=False)¶; Return all scalar or array QCVariables from global memory. Return type; Dict[str, Union[float, Matrix, ndarray]]. Parameters; include_deprecated_keys (bool) – . «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; variables. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/api/psi4.core.variables-1.html:542,update,updated,542,psi4manual/1.5.0/api/psi4.core.variables-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/api/psi4.core.variables-1.html,2,['update'],['updated']
Deployability,"﻿. variables. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; variables. variables¶. psi4.core.variables(include_deprecated_keys=False)¶; Return all scalar or array QCVariables from global memory. Return type; Dict[str, Union[float, Matrix, ndarray]]. Parameters; include_deprecated_keys (bool) – . «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; variables. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/api/psi4.core.variables.html:542,update,updated,542,psi4manual/1.6.x/api/psi4.core.variables.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/api/psi4.core.variables.html,1,['update'],['updated']
Deployability,"﻿. variables. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; variables. variables¶. psi4.core.variables(include_deprecated_keys=False)¶; Return all scalar or array QCVariables; from global memory. Parameters:; include_deprecated_keys (bool) – Also return duplicate entries with keys that have been deprecated. Returns:; Map of all QCVariables that have been set. Scalar variables are returned as floats.; Array variables not naturally 2D (like multipoles or per-atom charges); are returned as ndarray of natural dimensionality.; Other array variables are returned as Matrix and; may have an extra dimension with symmetry information. Return type:; Dict[str, Union[float, ndarray, Matrix]. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; variables. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/api/psi4.core.variables.html:938,update,updated,938,psi4manual/1.7.x/api/psi4.core.variables.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/api/psi4.core.variables.html,1,['update'],['updated']
Deployability,"﻿. variables. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; variables. variables¶. psi4.core.variables(include_deprecated_keys=False)¶; Return all scalar or array QCVariables; from global memory. Parameters:; include_deprecated_keys (bool) – Also return duplicate entries with keys that have been deprecated. Returns:; Map of all QCVariables that have been set. Scalar variables are returned as floats.; Array variables not naturally 2D (like multipoles or per-atom charges); are returned as ndarray of natural dimensionality.; Other array variables are returned as Matrix and; may have an extra dimension with symmetry information. Return type:; Dict[str, Union[float, ndarray, Matrix]. table of contents. variables; variables(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; variables. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/api/psi4.core.variables.html:985,update,updated,985,psi4manual/1.8.x/api/psi4.core.variables.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/api/psi4.core.variables.html,1,['update'],['updated']
Deployability,"﻿. variables. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; variables. variables¶. psi4.core.variables(include_deprecated_keys=False)¶; Return all scalar or array QCVariables; from global memory. Parameters:; include_deprecated_keys (bool) – Also return duplicate entries with keys that have been deprecated. Returns:; Map of all QCVariables that have been set. Scalar variables are returned as floats.; Array variables not naturally 2D (like multipoles or per-atom charges); are returned as ndarray of natural dimensionality.; Other array variables are returned as Matrix and; may have an extra dimension with symmetry information. Return type:; Dict[str, Union[float, ndarray, Matrix]. table of contents. variables; variables(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; variables. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/api/psi4.core.variables.html:985,update,updated,985,psi4manual/1.9.x/api/psi4.core.variables.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/api/psi4.core.variables.html,1,['update'],['updated']
Deployability,"﻿. version. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; version. version¶. psi4.core.version() → None¶. Deprecated since version 1.4. table of contents. version; version(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; version. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/api/psi4.core.version.html:441,update,updated,441,psi4manual/master/api/psi4.core.version.html,https://psicode.org,https://psicode.org/psi4manual/master/api/psi4.core.version.html,1,['update'],['updated']
Deployability,"﻿. version. Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. version¶. psi4.core.version() → str¶; Returns the version ID of this copy of Psi. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2018, The Psi4 Project.; Last updated on Wednesday, 25 July 2018 04:21AM.; Created using Sphinx 1.7.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/api/psi4.core.version-1.html:378,update,updated,378,psi4manual/1.2.1/api/psi4.core.version-1.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/api/psi4.core.version-1.html,2,['update'],['updated']
Deployability,"﻿. version. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; version. version¶. psi4.core.version() → None¶. Deprecated since version 1.4. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; version. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/api/psi4.core.version-1.html:379,update,updated,379,psi4manual/1.4.0/api/psi4.core.version-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/api/psi4.core.version-1.html,2,['update'],['updated']
Deployability,"﻿. version. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; version. version¶. psi4.core.version() → None¶. Deprecated since version 1.4. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; version. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/api/psi4.core.version-1.html:379,update,updated,379,psi4manual/1.5.0/api/psi4.core.version-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/api/psi4.core.version-1.html,2,['update'],['updated']
Deployability,"﻿. version. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; version. version¶. psi4.core.version() → None¶. Deprecated since version 1.4. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; version. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/api/psi4.core.version.html:379,update,updated,379,psi4manual/1.6.x/api/psi4.core.version.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/api/psi4.core.version.html,1,['update'],['updated']
Deployability,"﻿. version. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; version. version¶. psi4.core.version() → None¶. Deprecated since version 1.4. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; version. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/api/psi4.core.version.html:384,update,updated,384,psi4manual/1.7.x/api/psi4.core.version.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/api/psi4.core.version.html,1,['update'],['updated']
Deployability,"﻿. version. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; version. version¶. psi4.core.version() → None¶. Deprecated since version 1.4. table of contents. version; version(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; version. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/api/psi4.core.version.html:427,update,updated,427,psi4manual/1.8.x/api/psi4.core.version.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/api/psi4.core.version.html,1,['update'],['updated']
Deployability,"﻿. version. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; version. version¶. psi4.core.version() → None¶. Deprecated since version 1.4. table of contents. version; version(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; version. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/api/psi4.core.version.html:427,update,updated,427,psi4manual/1.9.x/api/psi4.core.version.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/api/psi4.core.version.html,1,['update'],['updated']
Deployability,"﻿. version. Navigation. Index. modules    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. version¶. psi4.core.version() → str¶; Returns the version ID of this copy of Psi. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2019, The Psi4 Project.; Last updated on Wednesday, 15 May 2019 08:49PM.; Created using Sphinx 1.8.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/api/psi4.core.version-1.html:368,update,updated,368,psi4manual/1.3.2/api/psi4.core.version-1.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/api/psi4.core.version-1.html,2,['update'],['updated']
Deployability,"﻿. vibanal_wfn. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; vibanal_wfn. vibanal_wfn¶. psi4.driver.vibanal_wfn(wfn, hess=None, irrep=None, molecule=None, project_trans=True, project_rot=True)[source]¶; Function to perform analysis of a hessian or hessian block, specifically…; calling for and printing vibrational and thermochemical analysis, setting thermochemical variables,; and writing the vibrec and normal mode files. Parameters:. wfn (Wavefunction) – The wavefunction which had its Hessian computed.; hess (Optional[ndarray]) – Hessian to analyze, if not the hessian in wfn.; (3*nat, 3*nat) non-mass-weighted Hessian in atomic units, [Eh/a0/a0].; irrep (Union[int, str, None]) – The irrep for which frequencies are calculated. Thermochemical analysis; is skipped if this is specified (non-None),; as only one symmetry block of the hessian has been computed.; molecule (Molecule or qcdb.Molecule, optional) – The molecule to pull information from, if not the molecule in wfn. Must at least have similar; geometry to the molecule in wfn.; project_trans (bool) – Should translations be projected in the harmonic analysis?; project_rot (bool) – Should rotations be projected in the harmonic analysis?. Returns:; vibinfo – A dictionary of vibrational information. See harmonic_analysis(). Return type:; Dict[str, ndarray]. table of contents. vibanal_wfn; vibanal_wfn(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; vibanal_wfn. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/api/psi4.driver.vibanal_wfn.html:1644,update,updated,1644,psi4manual/master/api/psi4.driver.vibanal_wfn.html,https://psicode.org,https://psicode.org/psi4manual/master/api/psi4.driver.vibanal_wfn.html,1,['update'],['updated']
Deployability,"﻿. vibanal_wfn. Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. vibanal_wfn¶. psi4.driver.vibanal_wfn(wfn, hess=None, irrep=None, molecule=None, project_trans=True, project_rot=True)[source]¶. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2018, The Psi4 Project.; Last updated on Wednesday, 25 July 2018 04:21AM.; Created using Sphinx 1.7.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/api/psi4.driver.vibanal_wfn-1.html:429,update,updated,429,psi4manual/1.2.1/api/psi4.driver.vibanal_wfn-1.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/api/psi4.driver.vibanal_wfn-1.html,2,['update'],['updated']
Deployability,"﻿. vibanal_wfn. Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. vibanal_wfn¶. psi4.driver.vibanal_wfn(wfn, hess=None, irrep=None, molecule=None, project_trans=True, project_rot=True)[source]¶; Function to perform analysis of a hessian or hessian block, specifically…; calling for and printing vibrational and thermochemical analysis, setting thermochemical variables,; and writing the vibrec and normal mode files. Parameters:; wfn (Wavefunction) – The wavefunction which had its Hessian computed.; hess (ndarray of float, optional) – Hessian to analyze, if not the hessian in wfn.; (3*nat, 3*nat) non-mass-weighted Hessian in atomic units, [Eh/a0/a0].; irrep (int or string) – The irrep for which frequencies are calculated. Thermochemical analysis is skipped if this is given,; as only one symmetry block of the hessian has been computed.; molecule (Molecule or qcdb.Molecule, optional) – The molecule to pull information from, if not the molecule in wfn. Must at least have similar; geometry to the molecule in wfn.; project_trans (boolean) – Should translations be projected in the harmonic analysis?; project_rot (boolean) – Should rotations be projected in the harmonic analysis?. Returns:vibinfo – A dictionary of vibrational information. See harmonic_analysis(). Return type:dict. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2019, The Psi4 Project.; Last updated on Wednesday, 15 May 2019 08:49PM.; Created using Sphinx 1.8.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/api/psi4.driver.vibanal_wfn-1.html:1525,update,updated,1525,psi4manual/1.3.2/api/psi4.driver.vibanal_wfn-1.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/api/psi4.driver.vibanal_wfn-1.html,2,['update'],['updated']
Deployability,"﻿. vibanal_wfn. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; vibanal_wfn. vibanal_wfn¶. psi4.driver.vibanal_wfn(wfn, hess=None, irrep=None, molecule=None, project_trans=True, project_rot=True)[source]¶; Function to perform analysis of a hessian or hessian block, specifically…; calling for and printing vibrational and thermochemical analysis, setting thermochemical variables,; and writing the vibrec and normal mode files. Parameters. wfn (Wavefunction) – The wavefunction which had its Hessian computed.; hess (Optional[ndarray]) – Hessian to analyze, if not the hessian in wfn.; (3*nat, 3*nat) non-mass-weighted Hessian in atomic units, [Eh/a0/a0].; irrep (Union[int, str, None]) – The irrep for which frequencies are calculated. Thermochemical analysis is skipped if this is given,; as only one symmetry block of the hessian has been computed.; molecule (Molecule or qcdb.Molecule, optional) – The molecule to pull information from, if not the molecule in wfn. Must at least have similar; geometry to the molecule in wfn.; project_trans (bool) – Should translations be projected in the harmonic analysis?; project_rot (bool) – Should rotations be projected in the harmonic analysis?. Returns; vibinfo – A dictionary of vibrational information. See harmonic_analysis(). Return type; dict. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; vibanal_wfn. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/api/psi4.driver.vibanal_wfn-1.html:1541,update,updated,1541,psi4manual/1.4.0/api/psi4.driver.vibanal_wfn-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/api/psi4.driver.vibanal_wfn-1.html,2,['update'],['updated']
Deployability,"﻿. vibanal_wfn. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; vibanal_wfn. vibanal_wfn¶. psi4.driver.vibanal_wfn(wfn, hess=None, irrep=None, molecule=None, project_trans=True, project_rot=True)[source]¶; Function to perform analysis of a hessian or hessian block, specifically…; calling for and printing vibrational and thermochemical analysis, setting thermochemical variables,; and writing the vibrec and normal mode files. Parameters. wfn (Wavefunction) – The wavefunction which had its Hessian computed.; hess (Optional[ndarray]) – Hessian to analyze, if not the hessian in wfn.; (3*nat, 3*nat) non-mass-weighted Hessian in atomic units, [Eh/a0/a0].; irrep (Union[int, str, None]) – The irrep for which frequencies are calculated. Thermochemical analysis is skipped if this is given,; as only one symmetry block of the hessian has been computed.; molecule (Molecule or qcdb.Molecule, optional) – The molecule to pull information from, if not the molecule in wfn. Must at least have similar; geometry to the molecule in wfn.; project_trans (bool) – Should translations be projected in the harmonic analysis?; project_rot (bool) – Should rotations be projected in the harmonic analysis?. Returns; vibinfo – A dictionary of vibrational information. See harmonic_analysis(). Return type; dict. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; vibanal_wfn. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/api/psi4.driver.vibanal_wfn-1.html:1541,update,updated,1541,psi4manual/1.5.0/api/psi4.driver.vibanal_wfn-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/api/psi4.driver.vibanal_wfn-1.html,2,['update'],['updated']
Deployability,"﻿. vibanal_wfn. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; vibanal_wfn. vibanal_wfn¶. psi4.driver.vibanal_wfn(wfn, hess=None, irrep=None, molecule=None, project_trans=True, project_rot=True)[source]¶; Function to perform analysis of a hessian or hessian block, specifically…; calling for and printing vibrational and thermochemical analysis, setting thermochemical variables,; and writing the vibrec and normal mode files. Parameters. wfn (Wavefunction) – The wavefunction which had its Hessian computed.; hess (Optional[ndarray]) – Hessian to analyze, if not the hessian in wfn.; (3*nat, 3*nat) non-mass-weighted Hessian in atomic units, [Eh/a0/a0].; irrep (Union[int, str, None]) – The irrep for which frequencies are calculated. Thermochemical analysis is skipped if this is given,; as only one symmetry block of the hessian has been computed.; molecule (Molecule or qcdb.Molecule, optional) – The molecule to pull information from, if not the molecule in wfn. Must at least have similar; geometry to the molecule in wfn.; project_trans (bool) – Should translations be projected in the harmonic analysis?; project_rot (bool) – Should rotations be projected in the harmonic analysis?. Returns; vibinfo – A dictionary of vibrational information. See harmonic_analysis(). Return type; dict. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; vibanal_wfn. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/api/psi4.driver.vibanal_wfn.html:1541,update,updated,1541,psi4manual/1.6.x/api/psi4.driver.vibanal_wfn.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/api/psi4.driver.vibanal_wfn.html,1,['update'],['updated']
Deployability,"﻿. vibanal_wfn. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; vibanal_wfn. vibanal_wfn¶. psi4.driver.vibanal_wfn(wfn, hess=None, irrep=None, molecule=None, project_trans=True, project_rot=True)[source]¶; Function to perform analysis of a hessian or hessian block, specifically…; calling for and printing vibrational and thermochemical analysis, setting thermochemical variables,; and writing the vibrec and normal mode files. Parameters:. wfn (Wavefunction) – The wavefunction which had its Hessian computed.; hess (Optional[ndarray]) – Hessian to analyze, if not the hessian in wfn.; (3*nat, 3*nat) non-mass-weighted Hessian in atomic units, [Eh/a0/a0].; irrep (Union[int, str, None]) – The irrep for which frequencies are calculated. Thermochemical analysis; is skipped if this is specified (non-None),; as only one symmetry block of the hessian has been computed.; molecule (Molecule or qcdb.Molecule, optional) – The molecule to pull information from, if not the molecule in wfn. Must at least have similar; geometry to the molecule in wfn.; project_trans (bool) – Should translations be projected in the harmonic analysis?; project_rot (bool) – Should rotations be projected in the harmonic analysis?. Returns:; vibinfo – A dictionary of vibrational information. See harmonic_analysis(). Return type:; Dict[str, ndarray]. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; vibanal_wfn. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/api/psi4.driver.vibanal_wfn.html:1579,update,updated,1579,psi4manual/1.7.x/api/psi4.driver.vibanal_wfn.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/api/psi4.driver.vibanal_wfn.html,1,['update'],['updated']
Deployability,"﻿. vibanal_wfn. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; vibanal_wfn. vibanal_wfn¶. psi4.driver.vibanal_wfn(wfn, hess=None, irrep=None, molecule=None, project_trans=True, project_rot=True)[source]¶; Function to perform analysis of a hessian or hessian block, specifically…; calling for and printing vibrational and thermochemical analysis, setting thermochemical variables,; and writing the vibrec and normal mode files. Parameters:. wfn (Wavefunction) – The wavefunction which had its Hessian computed.; hess (Optional[ndarray]) – Hessian to analyze, if not the hessian in wfn.; (3*nat, 3*nat) non-mass-weighted Hessian in atomic units, [Eh/a0/a0].; irrep (Union[int, str, None]) – The irrep for which frequencies are calculated. Thermochemical analysis; is skipped if this is specified (non-None),; as only one symmetry block of the hessian has been computed.; molecule (Molecule or qcdb.Molecule, optional) – The molecule to pull information from, if not the molecule in wfn. Must at least have similar; geometry to the molecule in wfn.; project_trans (bool) – Should translations be projected in the harmonic analysis?; project_rot (bool) – Should rotations be projected in the harmonic analysis?. Returns:; vibinfo – A dictionary of vibrational information. See harmonic_analysis(). Return type:; Dict[str, ndarray]. table of contents. vibanal_wfn; vibanal_wfn(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; vibanal_wfn. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/api/psi4.driver.vibanal_wfn.html:1630,update,updated,1630,psi4manual/1.8.x/api/psi4.driver.vibanal_wfn.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/api/psi4.driver.vibanal_wfn.html,1,['update'],['updated']
Deployability,"﻿. vibanal_wfn. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; vibanal_wfn. vibanal_wfn¶. psi4.driver.vibanal_wfn(wfn, hess=None, irrep=None, molecule=None, project_trans=True, project_rot=True)[source]¶; Function to perform analysis of a hessian or hessian block, specifically…; calling for and printing vibrational and thermochemical analysis, setting thermochemical variables,; and writing the vibrec and normal mode files. Parameters:. wfn (Wavefunction) – The wavefunction which had its Hessian computed.; hess (Optional[ndarray]) – Hessian to analyze, if not the hessian in wfn.; (3*nat, 3*nat) non-mass-weighted Hessian in atomic units, [Eh/a0/a0].; irrep (Union[int, str, None]) – The irrep for which frequencies are calculated. Thermochemical analysis; is skipped if this is specified (non-None),; as only one symmetry block of the hessian has been computed.; molecule (Molecule or qcdb.Molecule, optional) – The molecule to pull information from, if not the molecule in wfn. Must at least have similar; geometry to the molecule in wfn.; project_trans (bool) – Should translations be projected in the harmonic analysis?; project_rot (bool) – Should rotations be projected in the harmonic analysis?. Returns:; vibinfo – A dictionary of vibrational information. See harmonic_analysis(). Return type:; Dict[str, ndarray]. table of contents. vibanal_wfn; vibanal_wfn(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; vibanal_wfn. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/api/psi4.driver.vibanal_wfn.html:1630,update,updated,1630,psi4manual/1.9.x/api/psi4.driver.vibanal_wfn.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/api/psi4.driver.vibanal_wfn.html,1,['update'],['updated']
Deployability,"﻿. write_eigenvalues. Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. write_eigenvalues¶. psi4.driver.write_eigenvalues(eigs, mo_idx)[source]¶; Prepare multi-line string with one-particle eigenvalues to be written to the FCIDUMP file. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2018, The Psi4 Project.; Last updated on Wednesday, 25 July 2018 04:21AM.; Created using Sphinx 1.7.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/api/psi4.driver.write_eigenvalues-1.html:471,update,updated,471,psi4manual/1.2.1/api/psi4.driver.write_eigenvalues-1.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/api/psi4.driver.write_eigenvalues-1.html,2,['update'],['updated']
Deployability,"﻿. write_eigenvalues. Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. write_eigenvalues¶. psi4.driver.write_eigenvalues(eigs, mo_idx)[source]¶; Prepare multi-line string with one-particle eigenvalues to be written to the FCIDUMP file. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2019, The Psi4 Project.; Last updated on Wednesday, 15 May 2019 08:49PM.; Created using Sphinx 1.8.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/api/psi4.driver.write_eigenvalues-1.html:471,update,updated,471,psi4manual/1.3.2/api/psi4.driver.write_eigenvalues-1.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/api/psi4.driver.write_eigenvalues-1.html,2,['update'],['updated']
Deployability,"﻿. write_eigenvalues. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; write_eigenvalues. write_eigenvalues¶. psi4.driver.write_eigenvalues(eigs, mo_idx)[source]¶; Prepare multi-line string with one-particle eigenvalues to be written to the FCIDUMP file. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; write_eigenvalues. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/api/psi4.driver.write_eigenvalues-1.html:505,update,updated,505,psi4manual/1.4.0/api/psi4.driver.write_eigenvalues-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/api/psi4.driver.write_eigenvalues-1.html,2,['update'],['updated']
Deployability,"﻿. write_eigenvalues. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; write_eigenvalues. write_eigenvalues¶. psi4.driver.write_eigenvalues(eigs, mo_idx)[source]¶; Prepare multi-line string with one-particle eigenvalues to be written to the FCIDUMP file. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; write_eigenvalues. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/api/psi4.driver.write_eigenvalues-1.html:505,update,updated,505,psi4manual/1.5.0/api/psi4.driver.write_eigenvalues-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/api/psi4.driver.write_eigenvalues-1.html,2,['update'],['updated']
Deployability,"﻿. write_eigenvalues. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; write_eigenvalues. write_eigenvalues¶. psi4.driver.write_eigenvalues(eigs, mo_idx)[source]¶; Prepare multi-line string with one-particle eigenvalues to be written to the FCIDUMP file. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; write_eigenvalues. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/api/psi4.driver.write_eigenvalues.html:505,update,updated,505,psi4manual/1.6.x/api/psi4.driver.write_eigenvalues.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/api/psi4.driver.write_eigenvalues.html,1,['update'],['updated']
Deployability,"﻿. xml2dict. Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. xml2dict¶. psi4.driver.xml2dict(filename=None)[source]¶; Read XML filename into nested OrderedDict-s. filename defaults to; active CSX file. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2018, The Psi4 Project.; Last updated on Wednesday, 25 July 2018 04:21AM.; Created using Sphinx 1.7.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/api/psi4.driver.xml2dict-1.html:438,update,updated,438,psi4manual/1.2.1/api/psi4.driver.xml2dict-1.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/api/psi4.driver.xml2dict-1.html,2,['update'],['updated']
Deployability,"﻿. xml2dict. Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. xml2dict¶. psi4.driver.xml2dict(filename=None)[source]¶; Read XML filename into nested OrderedDict-s. filename defaults to; active CSX file. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2019, The Psi4 Project.; Last updated on Wednesday, 15 May 2019 08:49PM.; Created using Sphinx 1.8.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/api/psi4.driver.xml2dict-1.html:438,update,updated,438,psi4manual/1.3.2/api/psi4.driver.xml2dict-1.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/api/psi4.driver.xml2dict-1.html,2,['update'],['updated']
Energy Efficiency,"	cavity.add_kw('PatchLevel', 'INT', 2); 	cavity.add_kw('Coarsity', 'DBL', 0.5); 	cavity.add_kw('Area','DBL', 0.3); 	cavity.add_kw('Scaling', 'STR', 'Yes'); 	cavity.add_kw('AddSpheres', 'STR', 'Yes'); cavity.add_kw('Mode','STR','Explicit'); cavity.add_kw('Atoms','INT_ARRAY'); cavity.add_kw('Radii','DBL_ARRAY'); 	cavity.add_kw('RadiiSet', 'STR', 'Bondi'); 	cavity.add_kw('Spheres','DBL_ARRAY', callback=verify_spheres); 	top.add_sect(cavity); ; 	medium=getkw.Section('Medium', callback=verify_medium); 	medium.add_kw('Solvent', 'STR', 'Water'); 	medium.add_kw('SolverType', 'STR', 'IEFPCM'); 	medium.add_kw('EquationType','STR', 'SecondKind'); 	medium.add_kw('Correction', 'DBL', 0.0); 	medium.add_kw('ProbeRadius', 'DBL', 1.0); 	top.add_sect(medium); 	; 	green=getkw.Section('Green', callback=verify_green); 	green.add_kw('Type', 'STR', 'Vacuum'); 	green.add_kw('Der', 'STR', 'Derivative'); 	green.add_kw('Eps', 'DBL', 1.0); 	green.add_kw('EpsRe', 'DBL', 1.0); 	green.add_kw('EpsImg', 'DBL', 1.0); 	green.add_kw('SphereRadius', 'DBL', 1.0); 	green.add_kw('SpherePosition', 'DBL_ARRAY'); 	medium.add_sect(green). 	green_part = deepcopy(green); 	green.add_sect(green_part). 	return top. [docs]def verify_top(section):; 	global isAngstrom; 	allowed_units = ('AU', 'Angstrom'); 	key = section.get('Units'); 	val = key.get(); 	if (val not in allowed_units):; 	 	print ""Allowed units are: "", allowed_units; 		sys.exit(1); 	if (val == 'Angstrom'):; 		isAngstrom = True. [docs]def verify_cavity(section):; 	allowed = ('GePol', 'Wavelet'); type = section.get('Type'); if (type.get() not in allowed):; 	print ""Allowed types are: "", allowed; 	sys.exit(1). 	if section['Area'].is_set(): convert_area_scalar(section['Area']); 	if (type.get() == 'GePol'):; 	area=section.get('Area'); 	a=area.get(); 	if (a < 0.01):; 		print ""Area value is too small""; 		print ""Minimum value: 0.01""; 		sys.exit(1); elif (type.get() == 'Wavelet'):; 	key = section.get('PatchLevel'); 	if (key.get() < 1):; 		print ""Patch level must be",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b5/_modules/pcmpreprocess.html:1451,green,green,1451,psi4manual/4.0b5/_modules/pcmpreprocess.html,https://psicode.org,https://psicode.org/psi4manual/4.0b5/_modules/pcmpreprocess.html,1,['green'],['green']
Energy Efficiency," 	top.add_kw('Units', 'STR', 'AU'). 	cavity=getkw.Section('Cavity', callback=verify_cavity); 	cavity.add_kw('Type','STR'); 	cavity.add_kw('PatchLevel', 'INT', 2); 	cavity.add_kw('Coarsity', 'DBL', 0.5); 	cavity.add_kw('Area','DBL', 0.3); 	cavity.add_kw('Scaling', 'STR', 'Yes'); 	cavity.add_kw('AddSpheres', 'STR', 'Yes'); cavity.add_kw('Mode','STR','Explicit'); cavity.add_kw('Atoms','INT_ARRAY'); cavity.add_kw('Radii','DBL_ARRAY'); 	cavity.add_kw('RadiiSet', 'STR', 'Bondi'); 	cavity.add_kw('Spheres','DBL_ARRAY', callback=verify_spheres); 	top.add_sect(cavity); ; 	medium=getkw.Section('Medium', callback=verify_medium); 	medium.add_kw('Solvent', 'STR', 'Water'); 	medium.add_kw('SolverType', 'STR', 'IEFPCM'); 	medium.add_kw('EquationType','STR', 'SecondKind'); 	medium.add_kw('Correction', 'DBL', 0.0); 	medium.add_kw('ProbeRadius', 'DBL', 1.0); 	top.add_sect(medium); 	; 	green=getkw.Section('Green', callback=verify_green); 	green.add_kw('Type', 'STR', 'Vacuum'); 	green.add_kw('Der', 'STR', 'Derivative'); 	green.add_kw('Eps', 'DBL', 1.0); 	green.add_kw('EpsRe', 'DBL', 1.0); 	green.add_kw('EpsImg', 'DBL', 1.0); 	green.add_kw('SphereRadius', 'DBL', 1.0); 	green.add_kw('SpherePosition', 'DBL_ARRAY'); 	medium.add_sect(green). 	green_part = deepcopy(green); 	green.add_sect(green_part). 	return top. [docs]def verify_top(section):; 	global isAngstrom; 	allowed_units = ('AU', 'Angstrom'); 	key = section.get('Units'); 	val = key.get(); 	if (val not in allowed_units):; 	 	print ""Allowed units are: "", allowed_units; 		sys.exit(1); 	if (val == 'Angstrom'):; 		isAngstrom = True. [docs]def verify_cavity(section):; 	allowed = ('GePol', 'Wavelet'); type = section.get('Type'); if (type.get() not in allowed):; 	print ""Allowed types are: "", allowed; 	sys.exit(1). 	if section['Area'].is_set(): convert_area_scalar(section['Area']); 	if (type.get() == 'GePol'):; 	area=section.get('Area'); 	a=area.get(); 	if (a < 0.01):; 		print ""Area value is too small""; 		print ""Minimum value: 0.01""; 		sys.exi",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b5/_modules/pcmpreprocess.html:1344,green,green,1344,psi4manual/4.0b5/_modules/pcmpreprocess.html,https://psicode.org,https://psicode.org/psi4manual/4.0b5/_modules/pcmpreprocess.html,1,['green'],['green']
Energy Efficiency," """""" DOcom? %s\t\tDONTreorient? %s\n"""""" % (self.PYmove_to_com, self.orientation_fixed()); text += """""" reinterpret? %s\t\tlock_frame? %s\n"""""" % (self.PYreinterpret_coordentries, self.lock_frame); text += """""" input symm %s\n"""""" % (self.symmetry_from_input()); text += """""" Nfragments %d\t\tNactive %d\n"""""" % (self.nfragments(), self.nactive_fragments()); text += """""" zmat? %s\n"""""" % (self.has_zmatrix()); print text. [docs] def create_psi4_string_from_molecule(self):; """"""Regenerates a input file molecule specification string from the; current state of the Molecule. Contains geometry info,; fragmentation, charges and multiplicities, and any frame; restriction.; """"""; text = """"; if self.nallatom():. # append units and any other non-default molecule keywords; text += "" units %-s\n"" % (""Angstrom"" if self.units() == 'Angstrom' else ""Bohr""); if not self.PYmove_to_com:; text += "" no_com\n""; if self.PYfix_orientation:; text += "" no_reorient\n"". # append atoms and coordentries and fragment separators with charge and multiplicity; Pfr = 0; for fr in range(self.nfragments()):; if self.fragment_types[fr] == 'Absent' and not self.has_zmatrix():; continue; text += ""%s %s%d %d\n"" % (; """" if Pfr == 0 else "" --\n"",; ""#"" if self.fragment_types[fr] == 'Ghost' or self.fragment_types[fr] == 'Absent' else """",; self.fragment_charges[fr], self.fragment_multiplicities[fr]); Pfr += 1; for at in range(self.fragments[fr][0], self.fragments[fr][1] + 1):; if self.fragment_types[fr] == 'Absent':; text += "" %-8s"" % (""X""); elif self.fZ(at) or self.fsymbol(at) == ""X"":; text += "" %-8s"" % (self.fsymbol(at)); else:; text += "" %-8s"" % (""Gh("" + self.fsymbol(at) + "")""); text += "" %s"" % (self.full_atoms[at].print_in_input_format()); text += ""\n"". # append any coordinate variables; if len(self.geometry_variables):; for vb, val in self.geometry_variables.items():; text += """""" %-10s=%16.10f\n"""""" % (vb, val); text += ""\n"". return text. # <<< Involved Methods for Coordinates >>>. [docs] def get_coord_value(self, vstr):;",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b5/_modules/qcdb/libmintsmolecule.html:30951,charge,charge,30951,psi4manual/4.0b5/_modules/qcdb/libmintsmolecule.html,https://psicode.org,https://psicode.org/psi4manual/4.0b5/_modules/qcdb/libmintsmolecule.html,1,['charge'],['charge']
Energy Efficiency," """"""\n\n Entropy, S""""""; for term in terms:; text += format_S_Cv_Cp.format(terms[term] + ' S', *sm[('S', term)] * uconv); if term == 'elec':; text += """""" (multiplicity = {})"""""".format(multiplicity); elif term == 'trans':; text += """""" (mol. weight = {:.4f} [u], P = {:.2f} [Pa])"""""".format(molecular_mass, P); elif term == 'rot':; text += """""" (symmetry no. = {})"""""".format(sigma). text += """"""\n\n Constant volume heat capacity, Cv""""""; for term in terms:; text += format_S_Cv_Cp.format(terms[term] + ' Cv', *sm[('Cv', term)] * uconv). text += """"""\n\n Constant pressure heat capacity, Cp""""""; for term in terms:; text += format_S_Cv_Cp.format(terms[term] + ' Cp', *sm[('Cp', term)] * uconv). del terms['tot']; terms['corr'] = 'Correction'. text += """"""\n\n ==> Thermochemistry Energy Analysis <==""""""; text += """"""\n\n Raw electronic energy, E_e""""""; text += f""""""\n Total E_e, Electronic energy at well bottom {E0:15.8f} [Eh]"""""". text += """"""\n\n Zero-point vibrational energy, ZPVE = Sum_i omega_i / 2, E_0 = E_e + ZPVE""""""; ; for term in terms:; if term in ['vib']:; text += format_ZPE_E_H_G.format(terms[term] + ' ZPVE', *sm[('ZPE', term)] * uconv); text += """""" {:15.3f} [cm^-1]"""""".format(sm[('ZPE', term)] * constants.hartree2wavenumbers); elif term in ['corr']:; text += format_ZPE_E_H_G.format(terms[term] + ' ZPVE to E_e', *sm[('ZPE', term)] * uconv); text += """""" {:15.3f} [cm^-1]"""""".format(sm[('ZPE', term)] * constants.hartree2wavenumbers); text += """"""\n Total E_0, Enthalpy at 0 [K] {:15.8f} [Eh]"""""".format(; sm[('ZPE', 'tot')]) ; text += """"""\n *** Absolute enthalpy, not an enthalpy of formation ***""""""; ; text += """"""\n\n Thermal (internal) energy, E (includes ZPVE and finite-temperature corrections)""""""; for term in terms:; if term in ['elec']:; text += format_ZPE_E_H_G.format(terms[term] + ' contrib to E beyond E_e', *sm[('E', term)] * uconv) ; elif term in ['corr']:; text += format_ZPE_E_H_G.format(terms[term] + ' E', *sm[('E', term)] * uconv); else:; text += format_ZPE_E_H_G.format(terms[term",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/_modules/qcdb/vib.html:37024,energy,energy,37024,psi4manual/1.9.x/_modules/qcdb/vib.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/_modules/qcdb/vib.html,4,['energy'],['energy']
Energy Efficiency," ""default"": [],; ""type"": ""array"",; ""items"": {; ""$ref"": ""#/definitions/AtomicComputer""; }; },; ""results_list"": {; ""title"": ""Results List"",; ""default"": [],; ""type"": ""array"",; ""items"": {}; }; },; ""required"": [; ""driver""; ],; ""definitions"": {; ""DriverEnum"": {; ""title"": ""DriverEnum"",; ""description"": ""Allowed computation driver values."",; ""enum"": [; ""energy"",; ""gradient"",; ""hessian"",; ""properties""; ],; ""type"": ""string""; },; ""AtomicComputer"": {; ""title"": ""AtomicComputer"",; ""description"": ""Computer for analytic single-geometry computations."",; ""type"": ""object"",; ""properties"": {; ""molecule"": {; ""title"": ""Molecule"",; ""description"": ""The molecule to use in the computation.""; },; ""basis"": {; ""title"": ""Basis"",; ""description"": ""The quantum chemistry basis set to evaluate (e.g., 6-31g, cc-pVDZ, ...)."",; ""type"": ""string""; },; ""method"": {; ""title"": ""Method"",; ""description"": ""The quantum chemistry method to evaluate (e.g., B3LYP, MP2, ...)."",; ""type"": ""string""; },; ""driver"": {; ""description"": ""The resulting type of computation: energy, gradient, hessian, properties.Note for finite difference that this should be the target driver, not the means driver."",; ""allOf"": [; {; ""$ref"": ""#/definitions/DriverEnum""; }; ]; },; ""keywords"": {; ""title"": ""Keywords"",; ""description"": ""The keywords to use in the computation."",; ""type"": ""object""; },; ""computed"": {; ""title"": ""Computed"",; ""description"": ""Whether quantum chemistry has been run on this task."",; ""default"": false,; ""type"": ""boolean""; },; ""result"": {; ""title"": ""Result"",; ""description"": "":py:class:`~qcelemental.models.AtomicResult` return.""; },; ""result_id"": {; ""title"": ""Result Id"",; ""description"": ""The optional ID for the computation."",; ""type"": ""string""; }; },; ""required"": [; ""molecule"",; ""basis"",; ""method"",; ""driver""; ]; }; }; }. Fields:. basis (str); cbsrec (List[Dict[str, Any]]); compute_list (List[Dict[str, Any]]); driver (qcelemental.models.common_models.DriverEnum); keywords (Dict[str, Any]); metadata (Any); metameta (Dict[str, Any]); me",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/cbs.html:35163,energy,energy,35163,psi4manual/1.7.x/cbs.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/cbs.html,1,['energy'],['energy']
Energy Efficiency," # 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.; #; # @END LICENSE; #. """"""Module with functions that interface with Grimme's GCP code.""""""; from __future__ import absolute_import, print_function; import os; import re; import uuid; import socket; import subprocess; try:; from psi4.driver.p4util.exceptions import *; from psi4 import core; isP4regime = True; except ImportError:; from .exceptions import *; isP4regime = False; from .p4regex import *; from .molecule import Molecule. [docs]def run_gcp(self, func=None, dertype=None, verbose=False): # dashlvl=None, dashparam=None; """"""Function to call Grimme's dftd3 program (http://toc.uni-muenster.de/DFTD3/); to compute the -D correction of level *dashlvl* using parameters for; the functional *func*. The dictionary *dashparam* can be used to supply; a full set of dispersion parameters in the absense of *func* or to supply; individual overrides in the presence of *func*. Returns energy if *dertype* is 0,; gradient if *dertype* is 1, else tuple of energy and gradient if *dertype*; unspecified. The dftd3 executable must be independently compiled and found in; :envvar:`PATH` or :envvar:`PSIPATH`.; *self* may be either a qcdb.Molecule (sensibly) or a psi4.Molecule; (works b/c psi4.Molecule has been extended by this method py-side and; only public interface fns used) or a string that can be instantiated; into a qcdb.Molecule. """"""; # Create (if necessary) and update qcdb.Molecule; if isinstance(self, Molecule):; # called on a qcdb.Molecule; pass; elif isinstance(self, core.Molecule):; # called on a python export of a psi4.core.Molecule (py-side through Psi4's driver); self.create_psi4_string_from_molecule(); elif isinstance(self, basestring):; # called on a string representation of a psi4.Molecule (c-side through psi4.Dispersion); self = Molecule(self); else:; raise ValidationError(""""""Argument mol must be psi4string or qcdb.Molecule""""""); self.update_geometry(). # # Validate arguments; # dashlvl = dashlvl.lower(); # da",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/_modules/qcdb/interface_gcp.html:1930,energy,energy,1930,psi4manual/1.1.0/_modules/qcdb/interface_gcp.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/_modules/qcdb/interface_gcp.html,2,['energy'],['energy']
Energy Efficiency," # GGA Correlation type is B97; C.set_parameter('B97_os_gamma', 0.0031 * 2.0) # This makes me mad. Truhlar is too lazy to report the B97 gradient expansion formula, but then does not use the canonical definition.; C.set_parameter('B97_os_a0', 1.0); C.set_parameter('B97_os_a1', 3.78569); C.set_parameter('B97_os_a2', -14.15261); C.set_parameter('B97_os_a3', -7.46589); C.set_parameter('B97_os_a4', 17.94491). C.set_parameter('B97_ss_gamma', 0.06); C.set_parameter('B97_ss_a0', 1.0); C.set_parameter('B97_ss_a1', 3.77344); C.set_parameter('B97_ss_a2', -26.04463); C.set_parameter('B97_ss_a3', 30.69913); C.set_parameter('B97_ss_a4', -9.22695). # Meta Correlation type is Becke metric, no parameters. # Add the functionals in; sup.add_x_functional(X); sup.add_c_functional(C). # Set GKS up after adding functionals; sup.set_x_omega(0.0); sup.set_c_omega(0.0); sup.set_x_alpha(0.28) # Hartree-Fock exact exchange; sup.set_c_alpha(0.0). # => End User-Customization <= #. # Call this last; sup.allocate(); return sup. [docs]def build_m05_2x_superfunctional(name, npoints, deriv):. # Call this first; sup = PsiMod.SuperFunctional.blank(); sup.set_max_points(npoints); sup.set_deriv(deriv). # => User-Customization <= #. # No spaces, keep it short and according to convention; sup.set_name('M05-2X'); # Tab in, trailing newlines; sup.set_description(' Heavily Parameterized Hybrid Meta-GGA XC Functional\n'); # Tab in, trailing newlines; sup.set_citation(' Zhao et. al., J. Chem. Theory Comput., 2, 364, 2006\n'). # Add member functionals; X = build_functional('M_X'); X.set_name('M05_2X_X'); X.set_alpha(1.0). # LSDA Exchange type is Slater, no parameters. # GGA Exchange type is PBE, special parameters because Truhlar is lazy; C1 = 3.36116E-3; # Should be reported/implemented to more digits; C2 = 4.49267E-3; # Should be reported/implemented to more digits; K0 = 3.0/2.0 * math.pow(3.0 / (math.pi * 4.0), 1.0/3.0);; k0 = math.pow(6.0 * math.pi * math.pi, 1.0/3.0);; kp = C1 / (C2 * K0);; mu = 4.0 * k0 * ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b2/_modules/functional.html:52276,allocate,allocate,52276,psi4manual/4.0b2/_modules/functional.html,https://psicode.org,https://psicode.org/psi4manual/4.0b2/_modules/functional.html,1,['allocate'],['allocate']
Energy Efficiency," # Perform the energy calculation; E, wfn = energy(lowername, return_wfn=True, molecule=moleculeclone, **kwargs); energies.append(core.get_variable('CURRENT ENERGY')). # S/R: Write each displaced geometry to an input file; elif opt_mode == 'sow':; moleculeclone.set_geometry(displacement). # S/R: Prepare molecule, options, and kwargs; with open('%s.in' % (rfile), 'wb') as freagent:; freagent.write('# This is a psi4 input file auto-generated from the gradient() wrapper.\n\n'.encode('utf-8')); freagent.write(p4util.format_molecule_for_input(moleculeclone).encode('utf-8')); freagent.write(p4util.format_options_for_input().encode('utf-8')); p4util.format_kwargs_for_input(freagent, **kwargs). # S/R: Prepare function call and energy save; freagent.write((""""""electronic_energy = energy('%s', **kwargs)\n\n"""""" % (lowername)).encode('utf-8')); freagent.write((""""""core.print_out('\\nGRADIENT RESULT: computation %d for item %d """""" % (os.getpid(), n + 1)).encode('utf-8')); freagent.write(""""""yields electronic energy %20.12f\\n' % (electronic_energy))\n\n"""""".encode('utf-8')). # S/R: Read energy from each displaced geometry output file and save in energies array; elif opt_mode == 'reap':; exec(banners); core.set_variable('NUCLEAR REPULSION ENERGY', moleculeclone.nuclear_repulsion_energy()); energies.append(p4util.extract_sowreap_from_output(rfile, 'GRADIENT', n, opt_linkage, True)). # S/R: Quit sow after writing files. Initialize skeleton wfn to receive grad for reap; if opt_mode == 'sow':; optstash.restore(); if return_wfn:; return (None, None) # any point to building a dummy wfn here?; else:; return None; elif opt_mode == 'reap':; core.set_variable('CURRENT ENERGY', energies[-1]); wfn = core.Wavefunction.build(molecule, core.get_global_option('BASIS')). # Compute the gradient; last item in 'energies' is undisplaced; core.set_local_option('FINDIF', 'GRADIENT_WRITE', True); G = core.fd_1_0(molecule, energies); G.print_out(); wfn.set_gradient(G). optstash.restore(). if return_wfn:; ret",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/_modules/psi4/driver/driver.html:43483,energy,energy,43483,psi4manual/1.1.0/_modules/psi4/driver/driver.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/_modules/psi4/driver/driver.html,2,['energy'],['energy']
Energy Efficiency," # Perform the energy calculation; E, wfn = energy(lowername, return_wfn=True, molecule=moleculeclone, **kwargs); energies.append(psi4.get_variable('CURRENT ENERGY')). # S/R: Write each displaced geometry to an input file; elif opt_mode == 'sow':; moleculeclone.set_geometry(displacement). # S/R: Prepare molecule, options, and kwargs; with open('%s.in' % (rfile), 'wb') as freagent:; freagent.write('# This is a psi4 input file auto-generated from the gradient() wrapper.\n\n'.encode('utf-8')); freagent.write(p4util.format_molecule_for_input(moleculeclone).encode('utf-8')); freagent.write(p4util.format_options_for_input().encode('utf-8')); p4util.format_kwargs_for_input(freagent, **kwargs). # S/R: Prepare function call and energy save; freagent.write((""""""electronic_energy = energy('%s', **kwargs)\n\n"""""" % (lowername)).encode('utf-8')); freagent.write((""""""psi4.print_out('\\nGRADIENT RESULT: computation %d for item %d """""" % (os.getpid(), n + 1)).encode('utf-8')); freagent.write(""""""yields electronic energy %20.12f\\n' % (electronic_energy))\n\n"""""".encode('utf-8')). # S/R: Read energy from each displaced geometry output file and save in energies array; elif opt_mode == 'reap':; exec(banners); psi4.set_variable('NUCLEAR REPULSION ENERGY', moleculeclone.nuclear_repulsion_energy()); energies.append(p4util.extract_sowreap_from_output(rfile, 'GRADIENT', n, opt_linkage, True)). # S/R: Quit sow after writing files. Initialize skeleton wfn to receive grad for reap; if opt_mode == 'sow':; optstash.restore(); if return_wfn:; return (None, None) # any point to building a dummy wfn here?; else:; return None; elif opt_mode == 'reap':; psi4.set_variable('CURRENT ENERGY', energies[-1]); wfn = psi4.new_wavefunction(molecule, psi4.get_global_option('BASIS')). # Compute the gradient; last item in 'energies' is undisplaced; psi4.set_local_option('FINDIF', 'GRADIENT_WRITE', True); G = psi4.fd_1_0(molecule, energies); G.print_out(); wfn.set_gradient(G). optstash.restore(). if return_wfn:; retur",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/_modules/driver.html:42149,energy,energy,42149,psi4manual/1.0.0/_modules/driver.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/_modules/driver.html,1,['energy'],['energy']
Energy Efficiency," # Procedure lookup tables; procedures = {; 'energy': {; 'scf' : run_scf,; 'mcscf' : run_mcscf,; 'dcft' : run_dcft,; 'dfmp2' : run_dfmp2,; 'df-mp2' : run_dfmp2,; 'mp2' : run_mp2,; 'omp2' : run_omp2,; 'sapt0' : run_sapt,; 'sapt2' : run_sapt,; 'sapt2+' : run_sapt,; 'sapt2+(3)' : run_sapt,; 'sapt2+3' : run_sapt,; 'sapt0-ct' : run_sapt_ct,; 'sapt2-ct' : run_sapt_ct,; 'sapt2+-ct' : run_sapt_ct,; 'sapt2+(3)-ct' : run_sapt_ct,; 'sapt2+3-ct' : run_sapt_ct,; 'mp2c' : run_mp2c,; 'ccenergy' : run_ccenergy, # full control over ccenergy; 'ccsd' : run_ccenergy,; 'ccsd(t)' : run_ccenergy,; 'cc2' : run_ccenergy,; 'cc3' : run_ccenergy,; 'mrcc' : run_mrcc, # interface to Kallay's MRCC program; 'bccd' : run_bccd,; 'bccd(t)' : run_bccd_t,; 'eom-ccsd' : run_eom_cc,; 'eom-cc2' : run_eom_cc,; 'eom-cc3' : run_eom_cc,; 'eom_ccsd' : run_eom_cc,; 'eom_cc2' : run_eom_cc,; 'eom_cc3' : run_eom_cc,; 'detci' : run_detci, # full control over detci; 'mp' : run_detci, # arbitrary order mp(n); 'zapt' : run_detci, # arbitrary order zapt(n); 'cisd' : run_detci,; 'cisdt' : run_detci,; 'cisdtq' : run_detci,; 'ci' : run_detci, # arbitrary order ci(n); 'fci' : run_detci,; 'adc' : run_adc,; 'cphf' : run_libfock,; 'cis' : run_libfock,; 'tdhf' : run_libfock,; 'cpks' : run_libfock,; 'tda' : run_libfock,; 'tddft' : run_libfock,; 'psimrcc' : run_psimrcc,; 'psimrcc_scf' : run_psimrcc_scf,; 'hf' : run_scf,; 'rhf' : run_scf,; 'uhf' : run_scf,; 'rohf' : run_scf,; 'rscf'",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b2/_modules/driver.html:604,energy,energy,604,psi4manual/4.0b2/_modules/driver.html,https://psicode.org,https://psicode.org/psi4manual/4.0b2/_modules/driver.html,1,['energy'],['energy']
Energy Efficiency," # Respond to the <CHARGES command; def send_charges(self):; """""" Send the nuclear charges through MDI. :returns: *charges* Atomic charges; """"""; natom = self.molecule.natom(); charges = [self.molecule.charge(iatom) for iatom in range(natom)]; MDI_Send(charges, natom, MDI_DOUBLE, self.comm); return charges. # Respond to the <MASSES command; def send_masses(self):; """""" Send the nuclear masses through MDI. :returns: *masses* Atomic masses; """"""; natom = self.molecule.natom(); molecule_dict = self.molecule.to_dict(); masses = molecule_dict['mass']; MDI_Send(masses, natom, MDI_DOUBLE, self.comm); return masses. # Respond to the <ELEMENTS command; def send_elements(self):; """""" Send the atomic number of each nucleus through MDI. :returns: *elements* Element of each atom; """"""; natom = self.molecule.natom(); elements = [self.molecule.true_atomic_number(iatom) for iatom in range(natom)]; MDI_Send(elements, natom, MDI_INT, self.comm); return elements. # Respond to the <ENERGY command; def send_energy(self):; """""" Send the total energy through MDI. :returns: *energy* Energy of the system; """"""; self.run_scf(); MDI_Send(self.energy, 1, MDI_DOUBLE, self.comm); return self.energy. # Respond to the <FORCES command; def send_forces(self):; """""" Send the nuclear forces through MDI. :returns: *forces* Atomic forces; """"""; force_matrix = psi4.driver.gradient(self.scf_method, **self.kwargs); forces = force_matrix.np.ravel(); MDI_Send(forces, len(forces), MDI_DOUBLE, self.comm); return forces. # Respond to the >CHARGES command; def recv_charges(self, charges=None):; """""" Receive a set of nuclear charges through MDI and assign them to the atoms in the current molecule. Arguments:; charges: New nuclear charges. If None, receive through MDI.; """"""; natom = self.molecule.natom(); if charges is None:; charges = MDI_Recv(natom, MDI_DOUBLE, self.comm). # Assign the charge of all atoms, taking care to avoid ghost atoms; jatom = 0; for iatom in range(natom):; while self.molecule.fZ(jatom) == 0 and jatom <",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/_modules/psi4/driver/mdi_engine.html:6042,energy,energy,6042,psi4manual/1.4.0/_modules/psi4/driver/mdi_engine.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/_modules/psi4/driver/mdi_engine.html,7,['energy'],['energy']
Energy Efficiency," # [1] FCHK file for DFT calculation; >>> E, wfn = energy('b3lyp', return_wfn=True); >>> fchk(wfn, 'mycalc.fchk'). """"""; fw = psi4.FCHKWriter(wfn); fw.write(filename). [docs]def molden(wfn, filename, density_a=None, density_b=None):; """"""Function to write wavefunction information in *wfn* to *filename* in; molden format. Will write natural orbitals from *density* (MO basis) if supplied. .. versionadded:: 0.5; *wfn* parameter passed explicitly. :returns: None. :type wfn: :ref:`Wavefunction<sec:psimod_Wavefunction>`; :param wfn: set of molecule, basis, orbitals from which to generate cube files. :type filename: string; :param filename: destination file name for MOLDEN file. :type density_a: psi4.Matrix; :param density_a: density in the MO basis to build alpha NO's from (optional). :type density_b: psi4.Matrix; :param density_b: density in the MO basis to build beta NO's from, assumes restricted if not supplied (optional). :examples:. >>> # [1] Molden file for DFT calculation; >>> E, wfn = energy('b3lyp', return_wfn=True); >>> molden(wfn, 'mycalc.molden'). >>> # [2] Molden file for CI/MCSCF computation using NO roots; >>> E, wfn = energy('ci', return_wfn=True); >>> molden(wfn, 'no_root1.molden', density_a=wfn.opdm(0, 0, ""A"", True)). """"""; if density_a:; nmopi = wfn.nmopi(); nsopi = wfn.nsopi(). NO_Ra = psi4.Matrix(""NO Alpha Rotation Matrix"", nmopi, nmopi); NO_occa = psi4.Vector(nmopi); density_a.diagonalize(NO_Ra, NO_occa, psi4.DiagonalizeOrder.Descending); NO_Ca = psi4.Matrix(""Ca Natural Orbitals"", nsopi, nmopi); NO_Ca.gemm(False, False, 1.0, wfn.Ca(), NO_Ra, 0). if density_b:; NO_Rb = psi4.Matrix(""NO Beta Rotation Matrix"", nmopi, nmopi); NO_occa = psi4.Vector(nmopi); density_b.diagonalize(NO_Ra, NO_occa, psi4.DiagonalizeOrder.Descending); NO_Cb = psi4.Matrix(""Cb Natural Orbitals"", nsopi, nmopi); NO_Cb.gemm(False, False, 1.0, wfn.Cb(), NO_Rb, 0). else:; NO_occb = NO_occa; NO_Cb = NO_Ca; ; mw = psi4.MoldenWriter(wfn); mw.writeNO(filename, NO_Ca, NO_Cb, NO_occa, NO_occb). e",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/_modules/driver.html:87170,energy,energy,87170,psi4manual/1.0.0/_modules/driver.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/_modules/driver.html,1,['energy'],['energy']
Energy Efficiency," # [2] Frequency calculation for b2 modes through finite difference of gradients; >>> frequencies('scf', dertype=1, irrep=4). """"""; lowername = name.lower(); kwargs = kwargs_lower(kwargs). # Make sure the molecule the user provided is the active one; if ('molecule' in kwargs):; activate(kwargs['molecule']); del kwargs['molecule']; molecule = PsiMod.get_active_molecule(); molecule.update_geometry(); PsiMod.set_global_option('BASIS', PsiMod.get_global_option('BASIS')). types = ['energy', 'gradient', 'hessian']. dertype = 2; if ('dertype' in kwargs):; dertype = kwargs['dertype']; if not (lowername in procedures[types[dertype]]):; print 'Frequencies: dertype = %d for frequencies is not available, switching to automatic determination.' % dertype; dertype = -1. if 'irrep' in kwargs:; irrep = parse_cotton_irreps(kwargs['irrep']) - 1 # externally, A1 irrep is 1, internally 0; else:; irrep = -1 # -1 implies do all irreps. # By default, set func to the energy function; func = energy; func_existed = False; if 'func' in kwargs:; func = kwargs['func']; func_existed = True. if (not('dertype' in kwargs) or dertype == -1):; if lowername in procedures['hessian']:; dertype = 2; elif lowername in procedures['gradient']:; dertype = 1; else:; dertype = 0. # Does an analytic procedure exist for the requested method?; if (dertype == 2 and func_existed == False):; # We have the desired method. Do it.; procedures['hessian'][lowername](lowername, **kwargs); return PsiMod.reference_wavefunction().energy(); elif (dertype == 1 and func_existed == False):; # Ok, we're doing frequencies by gradients; info = 'Performing finite difference by gradient calculations'; print info. func = procedures['gradient'][lowername]. # Obtain list of displacements; displacements = PsiMod.fd_geoms_freq_1(irrep). molecule.reinterpret_coordentry(False); molecule.fix_orientation(True); # Make a note of the undisplaced molecule's symmetry; PsiMod.set_parent_symmetry(molecule.schoenflies_symbol()). ndisp = len(displaceme",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b2/_modules/driver.html:44518,energy,energy,44518,psi4manual/4.0b2/_modules/driver.html,https://psicode.org,https://psicode.org/psi4manual/4.0b2/_modules/driver.html,2,['energy'],['energy']
Energy Efficiency," # [3] finite-difference geometry optimization, overwriting some pre-defined sherrill_gold_standard options; >>> optimize('sherrill_gold_standard', corl_basis='cc-pV[DT]Z', delta_basis='3-21g'). Return type:; List[Dict[str, Any]]. psi4.driver.aliases.allen_focal_point(**kwargs)[source]¶; Function to call Wes Allen-style Focal; Point Analysis. JCP 127 014306, https://doi.org/10.1063/1.2747241 .; Uses the composite wrapper to evaluate the following; expression. SCF employs a three-point extrapolation according; to scf_xtpl_helgaker_3(). MP2, CCSD, and; CCSD(T) employ two-point extrapolation performed according to; corl_xtpl_helgaker_2(). CCSDT and CCSDT(Q); are plain deltas. This wrapper requires Kallay’s MRCC code.; :rtype: List[Dict[str, Any]]. \[E_{total}^{\text{FPA}} = E_{total,\; \text{SCF}}^{\text{cc-pV[Q56]Z}} \; + E_{corl,\; \text{MP2}}^{\text{cc-pV[56]Z}} \; + \delta_{\text{MP2}}^{\text{CCSD}}\big\vert_{\text{cc-pV[56]Z}} \; + \delta_{\text{CCSD}}^{\text{CCSD(T)}}\big\vert_{\text{cc-pV[56]Z}} \; + \delta_{\text{CCSD(T)}}^{\text{CCSDT}}\big\vert_{\text{cc-pVTZ}} \; + \delta_{\text{CCSDT}}^{\text{CCSDT(Q)}}\big\vert_{\text{cc-pVDZ}}\]; >>> # [1] single-point energy by this composite method; >>> energy('allen_focal_point'). >>> # [2] single-point energy reducing the Hartree-Fock basis sets size; >>> energy('allen_focal_point', scf_basis='cc-pV[TQ5]Z'). Return type:; List[Dict[str, Any]]. Additional composite aliases are easy to define by the; user. Follow models in psi4/psi4/driver/aliases.py; and cbs-xtpl-nbody and use the; psi4.driver.driver_cbs_helper.register_composite_function(); to make user-defined functions known to PSI4. psi4.driver.driver_cbs_helper.register_composite_function(func)[source]¶; Register a user-defined composite method function to use like a built-in one. Parameters:; func (Callable) – A Python function that defines a configuration of the psi4.driver.cbs() wrapper.; See psi4/psi4/driver/aliases.py and cbs-xtpl-nbody for examples. API¶. pyd",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/cbs.html:32279,energy,energy,32279,psi4manual/1.8.x/cbs.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/cbs.html,6,['energy'],['energy']
Energy Efficiency," # core.set_global_option('DF_INTS_IO', 'LOAD'). core.clean(). return {'energies': energies_dict, 'ptype': ptype_dict, 'intermediates': intermediates_dict}. def assemble_nbody_components(metadata, component_results):; """"""Assembles N-body components into interaction quantities according to requested BSSE procedure(s). Parameters; -----------; metadata : dict of str; Dictionary of N-body metadata. Required ``'key': value`` pairs:; ``'ptype'``: {'energy', 'gradient', 'hessian'}; Procedure which has generated the N-body components to be combined.; ``'bsse_type_list'``: list of str; List of requested BSSE treatments. Possible values include lowercase ``'cp'``, ``'nocp'``,; and ``'vmfc'``.; ``'max_nbody'``: int; Maximum number of bodies to include in the N-Body treatment.; Possible: `max_nbody` <= `max_frag`; Default: `max_nbody` = `max_frag`; ``'max_frag'``: int; Number of distinct fragments comprising full molecular supersystem.; ``'energies_dict'``: dict of set: float64; Dictionary containing all energy components required for given N-body procedure.; ``'ptype_dict'``: dict of set: float64 or dict of set: psi4.Matrix; Dictionary of returned quantities from calls of function `func` during N-body computations; ``'compute_dict'``: dict of str: dict; Dictionary containing {int: set} subdicts enumerating compute lists for each possible; BSSE treatment.; ``'kwargs'``: dict; Arbitrary keyword arguments.; component_results : dict of str: dict; Dictionary containing computed N-body components. Required ``'key': value`` pairs:; ``'energies'``: dict of set: float64; Dictionary containing all energy components required for given N-body procedure.; ``'ptype'``: dict of set: float64 or dict of set: psi4.Matrix; Dictionary of returned quantities from calls of function `func` during N-body computations; ``'intermediates'``: dict of str: float64; Dictionary of psivars for intermediate N-body computations to be set at the end of the; N-body procedure.; Returns; -------; results : dict of",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/_modules/psi4/driver/driver_nbody.html:16254,energy,energy,16254,psi4manual/1.2.1/_modules/psi4/driver/driver_nbody.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/_modules/psi4/driver/driver_nbody.html,1,['energy'],['energy']
Energy Efficiency," #user_df_basis_sapt = PsiMod.get_option('DF_BASIS_SAPT'); #user_df_basis_elst = PsiMod.get_option('DF_BASIS_ELST'); b_user_wfn = PsiMod.has_global_option_changed('WFN'); user_wfn = PsiMod.get_option('WFN'). # Make sure the molecule the user provided is the active one; if 'molecule' in kwargs:; activate(kwargs['molecule']); del kwargs['molecule']; molecule = PsiMod.get_active_molecule(); molecule.update_geometry(); PsiMod.set_global_option(""BASIS"", PsiMod.get_global_option(""BASIS"")). # Establish method for correlation energy; if 'name' in kwargs:; if (lowername == 'scf') or (lowername == 'df-scf'):; pass; else:; do_corl = 1; cbs_corl_wfn = kwargs['name'].lower(); if 'corl_wfn' in kwargs:; do_corl = 1; cbs_corl_wfn = kwargs['corl_wfn'].lower(); if do_corl:; if not (cbs_corl_wfn in VARH.keys()):; raise ValidationError('Requested CORL method \'%s\' is not recognized. Add it to VARH in wrapper.py to proceed.' % (cbs_corl_wfn)). # Establish method for delta correction energy; if 'delta_wfn' in kwargs:; do_delta = 1; cbs_delta_wfn = kwargs['delta_wfn'].lower(); if not (cbs_delta_wfn in VARH.keys()):; raise ValidationError('Requested DELTA method \'%s\' is not recognized. Add it to VARH in wrapper.py to proceed.' % (cbs_delta_wfn)). if 'delta_wfn_lesser' in kwargs:; cbs_delta_wfn_lesser = kwargs['delta_wfn_lesser'].lower(); else:; cbs_delta_wfn_lesser = 'mp2'; if not (cbs_delta_wfn_lesser in VARH.keys()):; raise ValidationError('Requested DELTA method lesser \'%s\' is not recognized. Add it to VARH in wrapper.py to proceed.' % (cbs_delta_wfn_lesser)). # Establish method for second delta correction energy; if 'delta2_wfn' in kwargs:; do_delta2 = 1; cbs_delta2_wfn = kwargs['delta2_wfn'].lower(); if not (cbs_delta2_wfn in VARH.keys()):; raise ValidationError('Requested DELTA2 method \'%s\' is not recognized. Add it to VARH in wrapper.py to proceed.' % (cbs_delta2_wfn)). if 'delta2_wfn_lesser' in kwargs:; cbs_delta2_wfn_lesser = kwargs['delta2_wfn_lesser'].lower(); else:; cbs_",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b2/_modules/wrappers.html:62056,energy,energy,62056,psi4manual/4.0b2/_modules/wrappers.html,https://psicode.org,https://psicode.org/psi4manual/4.0b2/_modules/wrappers.html,1,['energy'],['energy']
Energy Efficiency," % ('scf_basis', 'corl_wfn')). # Establish list of valid basis sets for delta correction energy; if do_delta:; if 'delta_basis' in kwargs:; BSTD, ZETD = validate_bracketed_basis(kwargs['delta_basis'].lower()); else:; raise ValidationError('DELTA basis sets through keyword \'%s\' are required.' % ('delta_basis')). # Establish list of valid basis sets for second delta correction energy; if do_delta2:; if 'delta2_basis' in kwargs:; BSTD2, ZETD2 = validate_bracketed_basis(kwargs['delta2_basis'].lower()); else:; raise ValidationError('DELTA2 basis sets through keyword \'%s\' are required.' % ('delta2_basis')). # Establish list of valid basis sets for third delta correction energy; if do_delta3:; if 'delta3_basis' in kwargs:; BSTD3, ZETD3 = validate_bracketed_basis(kwargs['delta3_basis'].lower()); else:; raise ValidationError('DELTA3 basis sets through keyword \'%s\' are required.' % ('delta3_basis')). # Establish list of valid basis sets for fourth delta correction energy; if do_delta4:; if 'delta4_basis' in kwargs:; BSTD4, ZETD4 = validate_bracketed_basis(kwargs['delta4_basis'].lower()); else:; raise ValidationError('DELTA4 basis sets through keyword \'%s\' are required.' % ('delta4_basis')). # Establish list of valid basis sets for fifth delta correction energy; if do_delta5:; if 'delta5_basis' in kwargs:; BSTD5, ZETD5 = validate_bracketed_basis(kwargs['delta5_basis'].lower()); else:; raise ValidationError('DELTA5 basis sets through keyword \'%s\' are required.' % ('delta5_basis')). # Establish treatment for scf energy (validity check useless since python will catch it long before here); cbs_scf_scheme = highest_1; if 'scf_scheme' in kwargs:; cbs_scf_scheme = kwargs['scf_scheme']. # Establish treatment for correlation energy; cbs_corl_scheme = highest_1; if 'corl_scheme' in kwargs:; cbs_corl_scheme = kwargs['corl_scheme']. # Establish treatment for delta correction energy; cbs_delta_scheme = highest_1; if 'delta_scheme' in kwargs:; cbs_delta_scheme = kwargs['delta_sche",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b5/_modules/wrappers.html:76811,energy,energy,76811,psi4manual/4.0b5/_modules/wrappers.html,https://psicode.org,https://psicode.org/psi4manual/4.0b5/_modules/wrappers.html,1,['energy'],['energy']
Energy Efficiency," % (self.name()); text += """""" Natom %d\t\tNallatom %d\n"""""" % (self.natom(), self.nallatom()); text += """""" charge %d\t\tspecified? %s\n"""""" % (self.molecular_charge(), self.charge_specified()); text += """""" multiplicity %d\t\tspecified? %s\n"""""" % (self.multiplicity(), self.multiplicity_specified()); text += """""" units %s\tconversion %f\n"""""" % (self.units(), self.input_units_to_au); text += """""" DOcom? %s\t\tDONTreorient? %s\n"""""" % (self.PYmove_to_com, self.orientation_fixed()); text += """""" reinterpret? %s\t\tlock_frame? %s\n"""""" % (self.PYreinterpret_coordentries, self.lock_frame); text += """""" input symm %s\n"""""" % (self.symmetry_from_input()); text += """""" Nfragments %d\t\tNactive %d\n"""""" % (self.nfragments(), self.nactive_fragments()); text += """""" zmat? %s\n"""""" % (self.has_zmatrix()); print text. [docs] def create_psi4_string_from_molecule(self):; """"""Regenerates a input file molecule specification string from the; current state of the Molecule. Contains geometry info,; fragmentation, charges and multiplicities, and any frame; restriction.; """"""; text = """"; if self.nallatom():. # append units and any other non-default molecule keywords; text += "" units %-s\n"" % (""Angstrom"" if self.units() == 'Angstrom' else ""Bohr""); if not self.PYmove_to_com:; text += "" no_com\n""; if self.PYfix_orientation:; text += "" no_reorient\n"". # append atoms and coordentries and fragment separators with charge and multiplicity; Pfr = 0; for fr in range(self.nfragments()):; if self.fragment_types[fr] == 'Absent' and not self.has_zmatrix():; continue; text += ""%s %s%d %d\n"" % (; """" if Pfr == 0 else "" --\n"",; ""#"" if self.fragment_types[fr] == 'Ghost' or self.fragment_types[fr] == 'Absent' else """",; self.fragment_charges[fr], self.fragment_multiplicities[fr]); Pfr += 1; for at in range(self.fragments[fr][0], self.fragments[fr][1] + 1):; if self.fragment_types[fr] == 'Absent':; text += "" %-8s"" % (""X""); elif self.fZ(at) or self.fsymbol(at) == ""X"":; text += "" %-8s"" % (self.fsymbol(at)); else:; text += "" %-8",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b5/_modules/qcdb/libmintsmolecule.html:30552,charge,charges,30552,psi4manual/4.0b5/_modules/qcdb/libmintsmolecule.html,https://psicode.org,https://psicode.org/psi4manual/4.0b5/_modules/qcdb/libmintsmolecule.html,1,['charge'],['charges']
Energy Efficiency," % value; core.print_out(cbsscheme); logger.debug(cbsscheme). return value. elif isinstance(valueLO, np.ndarray):. beta = (valueHI - valueLO) * beta_division; value = valueHI - beta * beta_mult. if verbose > 2:; cbsscheme = f""""""\n ==> Helgaker 2-point exponential SCF extrapolation for method: {functionname.upper()} <==\n""""""; cbsscheme += f""""""\n LO-zeta ({zLO}) Data\n""""""; cbsscheme += nppp(valueLO); cbsscheme += f""""""\n HI-zeta ({zHI}) Data\n""""""; cbsscheme += nppp(valueHI). cbsscheme += f""""""\n Alpha (exponent) Value: {alpha:16.8f}""""""; cbsscheme += f""""""\n Beta Data\n""""""; cbsscheme += nppp(beta); cbsscheme += f""""""\n Extrapolated Data\n""""""; cbsscheme += nppp(value); cbsscheme += ""\n""; core.print_out(cbsscheme); logger.debug(cbsscheme). return value. else:; raise ValidationError(f""scf_xtpl_helgaker_2: datatype is not recognized '{type(valueLO)}'.""). [docs]; def scf_xtpl_truhlar_2(functionname: str, zLO: int, valueLO: Extrapolatable, zHI: int, valueHI: Extrapolatable, verbose: int = 1, alpha: Optional[float] = None) -> Extrapolatable:; r""""""Extrapolation scheme using power form for reference energies with two adjacent; zeta-level bases. Used by :py:func:`~psi4.driver.cbs`. Parameters; ----------; functionname; Name of the CBS component (e.g., 'HF') used in summary printing.; zLO; Zeta number of the smaller basis set in 2-point extrapolation.; valueLO; Energy, gradient, or Hessian value at the smaller basis set in 2-point; extrapolation.; zHI; Zeta number of the larger basis set in 2-point extrapolation; Must be `zLO + 1`.; valueHI; Energy, gradient, or Hessian value at the larger basis set in 2-point; extrapolation.; verbose; Controls volume of printing.; alpha; Overrides the default :math:`\alpha = 3.4`. Returns; -------; float or ~numpy.ndarray; Eponymous function applied to input zetas and values; type from `valueLO`. Notes; -----; The extrapolation is calculated according to [2]_:; :math:`E_{total}^X = E_{total}^{\infty} + \beta X^{-\alpha}, \alpha = 3.4`. References; --",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/_modules/psi4/driver/driver_cbs_helper.html:6879,power,power,6879,psi4manual/1.8.x/_modules/psi4/driver/driver_cbs_helper.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/_modules/psi4/driver/driver_cbs_helper.html,3,['power'],['power']
Energy Efficiency," %(N, Na, Nb, charge, mult, HOMO)). if (HOMO > 0):; Na = Na - 1; else:; Nb = Nb - 1; charge = charge + 1; mult = Na - Nb + 1. psi4.set_global_option(""DF_INTS_IO"", ""LOAD""); psi4.set_global_option(""FRAC_START"", frac_start); psi4.set_global_option(""FRAC_RENORMALIZE"", True). # Nuke 'em Rico!; for Nintegral in range(N,Nmin,-1):. # Nuke the current HOMO; for occ in foccs:. psi4.set_global_option(""FRAC_OCC"", [HOMO]); psi4.set_global_option(""FRAC_VAL"", [occ]). E = energy('scf'); C = 1; if (E == 0.0):; E = psi4.get_variable('SCF ITERATION ENERGY'); C = 0. if (HOMO > 0):; ref = psi4.wavefunction(); eps = ref.epsilon_a(); potentials.append(eps[HOMO-1]); else:; ref = psi4.wavefunction(); eps = ref.epsilon_b(); potentials.append(eps[-HOMO-1]). Ns.append(Nintegral + occ - 1.0); energies.append(E); convs.append(C). psi4.set_global_option(""FRAC_START"", 2); psi4.set_global_option(""FRAC_LOAD"", True); psi4.set_global_option(""FRAC_DIIS"", frac_diis); psi4.set_global_option(""GUESS"", ""READ""). # Set the next charge/mult; mol.set_molecular_charge(charge); mol.set_multiplicity(mult). # Determine HOMO; ref = psi4.wavefunction(); eps_a = ref.epsilon_a(); eps_b = ref.epsilon_b(); if (Na == Nb):; HOMO = -Nb; elif (Nb == 0):; HOMO = Na; else:; E_a = eps_a[int(Na - 1)]; E_b = eps_b[int(Nb - 1)]; if (E_a >= E_b):; HOMO = Na; else:; HOMO = -Nb. stats.append('\t%6d %6d %6d %6d %6d %6d\n' %(Nintegral-1, Na, Nb, charge, mult, HOMO)). if (HOMO > 0):; Na = Na - 1; else:; Nb = Nb - 1; charge = charge + 1; mult = Na - Nb + 1. psi4.set_global_option(""DF_INTS_IO"", ""NONE""). # => Print the results out <= #; E = {}; psi4.print_out('\n ==> Fractional Occupation Nuke Results <==\n\n'); psi4.print_out('\t%-11s %-24s %-24s %11s\n' %('N', 'Energy', 'HOMO Energy', 'Converged')); for k in range(len(Ns)):; psi4.print_out('\t%11.3E %24.16E %24.16E %11d\n' % (Ns[k], energies[k], potentials[k], convs[k])); E[Ns[k]] = energies[k]. psi4.print_out('\n'); psi4.print_out('\t%6s %6s %6s %6s %6s %6s\n' %('N', 'Na', 'Nb', 'Charge'",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b5/_modules/frac.html:9824,charge,charge,9824,psi4manual/4.0b5/_modules/frac.html,https://psicode.org,https://psicode.org/psi4manual/4.0b5/_modules/frac.html,1,['charge'],['charge']
Energy Efficiency," %s <==\n\n"""""" % (functionname.upper()); cbsscheme += """""" LO-zeta (%s) Energy: % 16.12f\n"""""" % (str(zLO), valueLO); cbsscheme += """""" HI-zeta (%s) Energy: % 16.12f\n"""""" % (str(zHI), valueHI); cbsscheme += """""" Alpha (exponent) Value: % 16.12f\n"""""" % (alpha); cbsscheme += """""" Beta (coefficient) Value: % 16.12f\n\n"""""" % (beta). name_str = ""%s/(%s,%s)"" % (functionname.upper(), zeta_val2sym[zLO].upper(), zeta_val2sym[zHI].upper()); cbsscheme += """""" @Extrapolated """"""; cbsscheme += name_str + ':'; cbsscheme += "" "" * (18 - len(name_str)); cbsscheme += """"""% 16.12f\n\n"""""" % value; core.print_out(cbsscheme). return value. elif isinstance(valueLO, (core.Matrix, core.Vector)):; beta = valueHI.clone(); beta.name = 'Karton SCF (%s, %s) beta' % (zLO, zHI); beta.subtract(valueLO); beta.scale(beta_division); beta.scale(beta_mult). value = valueHI.clone(); value.subtract(beta); value.name = 'Karton SCF (%s, %s) data' % (zLO, zHI). if verbose > 2:; core.print_out(""""""\n ==> Karton 2-point power from SCF extrapolation for method: %s <==\n\n"""""" % (functionname.upper())); core.print_out("""""" LO-zeta (%s)"""""" % str(zLO)); core.print_out("""""" LO-zeta Data""""""); valueLO.print_out(); core.print_out("""""" HI-zeta (%s)"""""" % str(zHI)); core.print_out("""""" HI-zeta Data""""""); valueHI.print_out(); core.print_out("""""" Extrapolated Data:\n""""""); value.print_out(); core.print_out("""""" Alpha (exponent) Value: %16.8f\n"""""" % (alpha)); core.print_out("""""" Beta Data:\n""""""); beta.print_out(). return value. else:; raise ValidationError(""scf_xtpl_Karton_2: datatype is not recognized '%s'."" % type(valueLO)). [docs]def scf_xtpl_helgaker_3(functionname, zLO, valueLO, zMD, valueMD, zHI, valueHI, verbose=True, alpha=None):; r""""""Extrapolation scheme for reference energies with three adjacent zeta-level bases.; Used by :py:func:`~psi4.cbs`.; Halkier, Helgaker, Jorgensen, Klopper, & Olsen, Chem. Phys. Lett. 302 (1999) 437-446,; DOI: 10.1016/S0009-2614(99)00179-7. .. math:: E_{total}^X = E_{total}^{\infty} + \beta e^{-\alpha X}, \a",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/_modules/psi4/driver/driver_cbs.html:13187,power,power,13187,psi4manual/1.2.1/_modules/psi4/driver/driver_cbs.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/_modules/psi4/driver/driver_cbs.html,1,['power'],['power']
Energy Efficiency," '%s ok' % mol); clean() # clean scratch between loop calcs. The essential element, mass and coordinate information of the molecule is accessible; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 13; 14; 15; 16; 17; 18; 19; 20; 21; 22; 23; 24; 25; 26; 27; 28; 29; 30; 31; 32; 33; 34; 35; 36; 37; 38; 39; 40; 41; 42; 43molecule eneyne {; 0 1; C_ene 0.000000 -0.667578 -2.124659; C_ene 0.000000 0.667578 -2.124659; H_ene@2.014 0.923621 -1.232253 -2.126185; H_ene -0.923621 -1.232253 -2.126185; H_ene -0.923621 1.232253 -2.126185; Gh(H_ene) 0.923621 1.232253 -2.126185; --; 0 1; X 9.0 9.0 9.0; C_yne 0.000000 0.000000 2.900503; C_yne 0.000000 0.000000 1.693240; H_yne 0.000000 0.000000 0.627352; H_yne 0.000000 0.000000 3.963929; }. eneyne.update_geometry(). for iat in range(eneyne.natom()):; print """"""{:4} {:4} {:12} {:8.4f} {:12.6f} {:12.6f} {:12.6f} {:12.6f}"""""".format(; eneyne.Z(iat), # atomic number; eneyne.symbol(iat), # element symbol; eneyne.label(iat), # input element label; eneyne.charge(iat), # element charge; eneyne.x(iat), # x-coordinate; eneyne.y(iat), # y-coordinate; eneyne.z(iat), # z-coordinate; eneyne.mass(iat), # mass; ). # 6.0 C C_ENE 6.0000 -0.031900 -1.218981 -3.948079 12.000000; # 6.0 C C_ENE 6.0000 -0.031900 1.304098 -3.948079 12.000000; # 1.0 H H_ENE 1.0000 1.713491 -2.286062 -3.950962 2.014000; # 1.0 H H_ENE 1.0000 -1.777290 -2.286062 -3.950962 1.007825; # 1.0 H H_ENE 1.0000 -1.777290 2.371180 -3.950962 1.007825; # 0.0 H H_ENE 0.0000 1.713491 2.371180 -3.950962 1.007825; # 6.0 C C_YNE 6.0000 -0.031900 0.042559 5.548101 12.000000; # 6.0 C C_YNE 6.0000 -0.031900 0.042559 3.266705 12.000000; # 1.0 H H_YNE 1.0000 -0.031900 0.042559 1.252468 1.007825; # 1.0 H H_YNE 1.0000 -0.031900 0.042559 7.557685 1.007825. table of contents. Molecule and Geometry Specification; Coordinates; Molecule Keywords; Multiple Molecules; Ghost Atoms; Isotopic Substitution; PubChem Database; Symmetry; Non-Covalently Bonded Molecule Fragments; Advanced Python. Navigation. Index. modules    .   ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/psithonmol-1.html:20996,charge,charge,20996,psi4manual/1.1.0/psithonmol-1.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/psithonmol-1.html,4,['charge'],['charge']
Energy Efficiency," '%s ok' % mol); clean() # clean scratch between loop calcs. The essential element, mass and coordinate information of the molecule is accessible; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 13; 14; 15; 16; 17; 18; 19; 20; 21; 22; 23; 24; 25; 26; 27; 28; 29; 30; 31; 32; 33; 34; 35; 36; 37; 38; 39; 40; 41; 42; 43molecule eneyne {; 0 1; C_ene 0.000000 -0.667578 -2.124659; C_ene 0.000000 0.667578 -2.124659; H_ene@2.014 0.923621 -1.232253 -2.126185; H_ene -0.923621 -1.232253 -2.126185; H_ene -0.923621 1.232253 -2.126185; Gh(H_ene) 0.923621 1.232253 -2.126185; --; 0 1; X 9.0 9.0 9.0; C_yne 0.000000 0.000000 2.900503; C_yne 0.000000 0.000000 1.693240; H_yne 0.000000 0.000000 0.627352; H_yne 0.000000 0.000000 3.963929; }. eneyne.update_geometry(). for iat in range(eneyne.natom()):; print """"""{:4} {:4} {:12} {:8.4f} {:12.6f} {:12.6f} {:12.6f} {:12.6f}"""""".format(; eneyne.Z(iat), # atomic number; eneyne.symbol(iat), # element symbol; eneyne.label(iat), # input element label; eneyne.charge(iat), # element charge; eneyne.x(iat), # x-coordinate; eneyne.y(iat), # y-coordinate; eneyne.z(iat), # z-coordinate; eneyne.mass(iat), # mass; ). # 6.0 C C_ENE 6.0000 -0.031900 -1.218981 -3.948079 12.000000; # 6.0 C C_ENE 6.0000 -0.031900 1.304098 -3.948079 12.000000; # 1.0 H H_ENE 1.0000 1.713491 -2.286062 -3.950962 2.014000; # 1.0 H H_ENE 1.0000 -1.777290 -2.286062 -3.950962 1.007825; # 1.0 H H_ENE 1.0000 -1.777290 2.371180 -3.950962 1.007825; # 0.0 H H_ENE 0.0000 1.713491 2.371180 -3.950962 1.007825; # 6.0 C C_YNE 6.0000 -0.031900 0.042559 5.548101 12.000000; # 6.0 C C_YNE 6.0000 -0.031900 0.042559 3.266705 12.000000; # 1.0 H H_YNE 1.0000 -0.031900 0.042559 1.252468 1.007825; # 1.0 H H_YNE 1.0000 -0.031900 0.042559 7.557685 1.007825. table of contents. Molecule and Geometry Specification; Coordinates; Molecule Keywords; Multiple Molecules; Ghost Atoms; Isotopic Substitution; PubChem Database; Symmetry; Non-Covalently Bonded Molecule Fragments; Advanced Python. «; hide menu. menu; sidebar; »; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/psithonmol-1.html:20998,charge,charge,20998,psi4manual/1.2.1/psithonmol-1.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/psithonmol-1.html,8,['charge'],['charge']
Energy Efficiency," 'KrKr' 18-point dissociation curve for krypton dimer. JSCH¶. Database (Hobza) of interaction energies for nucelobase pairs.; Geometries and reference interaction energies from Jurecka et al. PCCP 8 1985 (2006).; Corrections implemented from footnote 92 of Burns et al., JCP 134 084107 (2011). cp 'off' || 'on'; rlxd 'off'; subset. 'small'; 'large'; 'HB' hydrogen-bonded systems (coplanar base-pairs); 'MX' interstrand systems (adjacent base-pairs on different strands); 'DD' stacked systems (adjacent base-pairs on same strand). NCB31¶. Database (Truhlar) of several classes of noncovalent interactions.; Geometries from Truhlar and coworkers at site http://comp.chem.umn.edu/database_noncov/noncovalent.htm; Reference energies from Truhlar and coworkers at site http://comp.chem.umn.edu/database_noncov/noncovalent.htm; First comprehensive citation JPCA 109 5656 (2005). cp 'off' || 'on'; rlxd 'off' || 'on'; benchmark. '<benchmark_name>' <Reference>.; \(\Rightarrow\) '<default_benchmark_name>' \(\Leftarrow\) <Reference>. subset. 'small' 3: HF-HF, He-Ne, HCCH-HCCH; 'large' 1: BzBz_PD; 'HB6' hydrogen-bonded; 'CT7' charge-transfer; 'DI6' dipole-interacting; 'WI7' weakly interacting; 'PPS5' pi-pi stacking. NHTBH¶. Database (Truhlar) of non-hydrogen-transfer barrier height reactions.; Geometries and Reaction energies from Truhlar and coworkers at site http://t1.chem.umn.edu/misc/database_group/database_therm_bh/non_H.htm (broken link). cp 'off'; rlxd 'off'; subset. 'small'; 'large'. table of contents. HTR40; S66by8; BAKERJCC93; BASIC; A24; O24by5mb; BENCH12; HTBH; S22; S22by5; S66; A24alt; ACENES; SSI; HSG; BBI; NBC10; O24by5; BAKERJCC96; CORE; RSE42; HBC6; RGC10; JSCH; NCB31; NHTBH. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Psithon Functions: Invoking a Calculation; Database — database(); HTR40. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/autodoc_available_databases.html:13790,charge,charge-transfer,13790,psi4manual/1.8.x/autodoc_available_databases.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/autodoc_available_databases.html,1,['charge'],['charge-transfer']
Energy Efficiency," 'SCF TOTAL ENERGY' : SCF total energy; - 'MP2 CORRELATION ENERGY' : MP2 correlation energy. :param expected: reference FCIDUMP file; :param computed: computed FCIDUMP file; :param label: string labelling the test; """""". # Grab expected header and integrals; ref_intdump = fcidump_from_file(expected); intdump = fcidump_from_file(computed). # Compare headers; compare_recursive(; ref_intdump,; intdump,; 'FCIDUMP header',; forgive=['enuc', 'hcore', 'eri', 'epsilon']). ref_energies = energies_from_fcidump(ref_intdump); energies = energies_from_fcidump(intdump). pass_1el = compare_values(ref_energies['ONE-ELECTRON ENERGY'], energies['ONE-ELECTRON ENERGY'], 7,; label + '. 1-electron energy'); pass_2el = compare_values(ref_energies['TWO-ELECTRON ENERGY'], energies['TWO-ELECTRON ENERGY'], 7,; label + '. 2-electron energy'); pass_scf = compare_values(ref_energies['SCF TOTAL ENERGY'], energies['SCF TOTAL ENERGY'], 10,; label + '. SCF total energy'); pass_mp2 = compare_values(ref_energies['MP2 CORRELATION ENERGY'], energies['MP2 CORRELATION ENERGY'], 10,; label + '. MP2 correlation energy'). compare_integers(True, (pass_1el and pass_2el and pass_scf and pass_mp2), label). [docs]def energies_from_fcidump(intdump):; energies = {}; energies['NUCLEAR REPULSION ENERGY'] = intdump['enuc']; epsilon = intdump['epsilon']; Hcore = intdump['hcore']; eri = intdump['eri']. # Compute SCF energy; energies['ONE-ELECTRON ENERGY'], energies['TWO-ELECTRON ENERGY'] = _scf_energy(Hcore, eri,; np.where(epsilon < 0)[0],; intdump['uhf']); # yapf: disable; energies['SCF TOTAL ENERGY'] = energies['ONE-ELECTRON ENERGY'] + energies['TWO-ELECTRON ENERGY'] + energies['NUCLEAR REPULSION ENERGY']; # yapf: enable. # Compute MP2 energy; energies['MP2 CORRELATION ENERGY'] = _mp2_energy(eri, epsilon, intdump['uhf']). return energies. def _scf_energy(Hcore, ERI, occ_sl, unrestricted):; scf_1el_e = np.einsum('ii->', Hcore[np.ix_(occ_sl, occ_sl)]); if not unrestricted:; scf_1el_e *= 2; coulomb = np.einsum('iijj->', E",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/_modules/psi4/driver/p4util/fcidump.html:13320,energy,energy,13320,psi4manual/1.4.0/_modules/psi4/driver/p4util/fcidump.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/_modules/psi4/driver/p4util/fcidump.html,2,['energy'],['energy']
Energy Efficiency," 'eemp2=emp2',; 'cemp2=eemp2-eehf',; 'temp2=emp2_trip'],. 'hf': [; 'rhf',; 'eehf=energy'],. 'mp2-f12': [; 'gdirect',; 'rhf',; 'eehf=energy',; 'mp2-f12',; 'eemp2=emp2',; 'cemp2=eemp2-eehf',; 'temp2=emp2_trip'],. 'df-mp2-f12': [; 'gdirect',; #'rhf',; '{df-hf,basis=jkfit}',; 'eehf=energy',; #'{df-mp2-f12,df_basis=mp2fit,df_basis_exch=jkfit,ri_basis=optrib}',; '{df-mp2-f12,df_basis=mp2fit,df_basis_exch=jkfitb,ri_basis=jkfitb}',; 'eemp2=emp2',; 'cemp2=eemp2-eehf',; 'temp2=emp2_trip'],. 'df-mp2': [; 'gdirect',; '{df-hf,basis=jkfit}',; 'eehf=energy',; '{df-mp2,basis_mp2=mp2fit}',; 'eemp2=emp2',; 'cemp2=eemp2-eehf',; 'temp2=emp2_trip'],. 'df-hf': [; 'gdirect',; '{df-hf,basis=jkfit}',; 'eehf=energy'],. 'b3lyp-d': [; 'gdirect',; 'rks,b3lyp3',; 'eehf=energy',; 'dispcorr',; 'eehfd=eehf+edisp'],. 'df-b3lyp-d': [; 'gdirect',; '{df-rks,b3lyp3,basis=jkfit}',; 'eehf=energy',; 'dispcorr',; 'eehfd=eehf+edisp'],. 'b3lyp': [; 'gdirect',; 'rks,b3lyp3',; 'eehf=energy'],. 'df-b3lyp': [; 'gdirect',; '{df-rks,b3lyp3,basis=jkfit}',; 'eehf=energy'],. #'mp2c': [ # this job computes one part [E_disp(TDDFT)] of the three parts of a MP2C calculation; # # check that nfrag = 2; # 'gdirect',; # 'ga=1101.2; gb=1102.2',; # 'ca=2101.2; cb=2102.2\n',; #; # $spin = $cgmp{MLPmol1} - 1;; # 'SET,CHARGE=$cgmp{CHGmol1}',; # 'SET,SPIN=$spin',; # 'dummy',; # foreach $at (@monoBreal) { print $handle "",$at""; }; # ''; # '{df-hf,basis=jkfit,locorb=0; start,atdens; save,$ga}',; # '{df-ks,lhf,df_basis=dflhf,basis_coul=jkfitb,basis_exch=jkfitb; dftfac,1.0; start,$ga; save,$ca}',; # 'eehfa=energy; sapt; monomerA',; # '',; #; # $spin = $cgmp{MLPmol2} - 1;; # print $handle ""SET,CHARGE=$cgmp{CHGmol2}\nSET,SPIN=$spin\ndummy"";; # foreach $at (@monoAreal) { print $handle "",$at""; }; # print $handle ""\n{df-hf,basis=jkfit,locorb=0; start,atdens; save,\$gb}\n"";; # print $handle ""{df-ks,lhf,df_basis=dflhf,basis_coul=jkfitb,basis_exch=jkfitb; dftfac,1.0; start,\$gb; save,\$cb}\n"";; # print $handle ""eehfb=energy; sapt; monomerB\n\n""",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/_modules/qcdb/molpro.html:5863,energy,energy,5863,psi4manual/1.0.0/_modules/qcdb/molpro.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/_modules/qcdb/molpro.html,1,['energy'],['energy']
Energy Efficiency," 'gdirect',; 'rhf',; 'eehf=energy',; '{df-mp2,basis_mp2=mp2fit}',; 'eemp2=emp2',; 'cemp2=eemp2-eehf',; 'temp2=emp2_trip'],. 'hf': [; 'rhf',; 'eehf=energy'],. 'mp2-f12': [; 'gdirect',; 'rhf',; 'eehf=energy',; 'mp2-f12',; 'eemp2=emp2',; 'cemp2=eemp2-eehf',; 'temp2=emp2_trip'],. 'df-mp2-f12': [; 'gdirect',; #'rhf',; '{df-hf,basis=jkfit}',; 'eehf=energy',; #'{df-mp2-f12,df_basis=mp2fit,df_basis_exch=jkfit,ri_basis=optrib}',; '{df-mp2-f12,df_basis=mp2fit,df_basis_exch=jkfitb,ri_basis=jkfitb}',; 'eemp2=emp2',; 'cemp2=eemp2-eehf',; 'temp2=emp2_trip'],. 'df-mp2': [; 'gdirect',; '{df-hf,basis=jkfit}',; 'eehf=energy',; '{df-mp2,basis_mp2=mp2fit}',; 'eemp2=emp2',; 'cemp2=eemp2-eehf',; 'temp2=emp2_trip'],. 'df-hf': [; 'gdirect',; '{df-hf,basis=jkfit}',; 'eehf=energy'],. 'b3lyp-d': [; 'gdirect',; 'rks,b3lyp3',; 'eehf=energy',; 'dispcorr',; 'eehfd=eehf+edisp'],. 'df-b3lyp-d': [; 'gdirect',; '{df-rks,b3lyp3,basis=jkfit}',; 'eehf=energy',; 'dispcorr',; 'eehfd=eehf+edisp'],. 'b3lyp': [; 'gdirect',; 'rks,b3lyp3',; 'eehf=energy'],. 'df-b3lyp': [; 'gdirect',; '{df-rks,b3lyp3,basis=jkfit}',; 'eehf=energy'],. #'mp2c': [ # this job computes one part [E_disp(TDDFT)] of the three parts of a MP2C calculation; # # check that nfrag = 2; # 'gdirect',; # 'ga=1101.2; gb=1102.2',; # 'ca=2101.2; cb=2102.2\n',; #; # $spin = $cgmp{MLPmol1} - 1;; # 'SET,CHARGE=$cgmp{CHGmol1}',; # 'SET,SPIN=$spin',; # 'dummy',; # foreach $at (@monoBreal) { print $handle "",$at""; }; # ''; # '{df-hf,basis=jkfit,locorb=0; start,atdens; save,$ga}',; # '{df-ks,lhf,df_basis=dflhf,basis_coul=jkfitb,basis_exch=jkfitb; dftfac,1.0; start,$ga; save,$ca}',; # 'eehfa=energy; sapt; monomerA',; # '',; #; # $spin = $cgmp{MLPmol2} - 1;; # print $handle ""SET,CHARGE=$cgmp{CHGmol2}\nSET,SPIN=$spin\ndummy"";; # foreach $at (@monoAreal) { print $handle "",$at""; }; # print $handle ""\n{df-hf,basis=jkfit,locorb=0; start,atdens; save,\$gb}\n"";; # print $handle ""{df-ks,lhf,df_basis=dflhf,basis_coul=jkfitb,basis_exch=jkfitb; dftfac,1.0; start,\$gb; ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/_modules/qcdb/molpro.html:5787,energy,energy,5787,psi4manual/1.0.0/_modules/qcdb/molpro.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/_modules/qcdb/molpro.html,1,['energy'],['energy']
Energy Efficiency," 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); If True returns the total data (energy/gradient/Hessian) of the system,; otherwise returns interaction data. Default is 'off' for energies,; 'on' for gradients and Hessians. Note that the calculation of total; counterpoise corrected energies implies the calculation of the energies of; monomers in the monomer basis, hence specifying return_total_data = True; may carry out more computations than return_total_data = False.; For gradients and Hessians, return_total_data = False is rarely useful. levels (dict) – {1: 'ccsd(t)', 2: 'mp2', 'supersystem': 'scf'} || {1: 2, 2: 'ccsd(t)', 3: 'mp2'} || etc; Dictionary of different levels of theory for different levels of expansion; Note that method_string is not used in this case. supersystem computes; all higher order n-body effects up to the number of fragments. embedding_charges (dict) – {1: [-0.834, 0.417, 0.417], ..}; Dictionary of atom-centered point charges. keys: 1-based index of fragment, values: list of charges for each fragment.; Add atom-centered point charges for fragments whose basis sets are not included in the computation. The nbody function computes counterpoise-corrected (CP), non-CP (noCP), and Valiron-Mayer Function Counterpoise (VMFC) interaction energies for complexes composed of arbitrary numbers of monomers.; Examples :; # Counterpoise corrected CCSD(T) energies for the Helium dimer; molecule mol {; He; --; He 1 3; }; # Calculate interaction energies only (skips monomers in monomer basis):; energy('CCSD(T)', bsse_type='cp'); # Calculate interaction and total energies, return interaction energies:; energy('CCSD(T)', bsse_type=['cp','nocp']); # Calculate and return counterpoise-corrected gradient; # Useful for e.g. CP-corrected geometry optimization; gradient('CCSD(T)', bsse_type='cp', return_total_data=True). # noCP, VMFC, and CP energy for a helium cluster, limited at 3 bodies; molecule mol {; He 0 0 0; --; He 0 0 4; --; He 0 4 0; --; He 4 0 0; }. # Returns t",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/nbody.html:2624,charge,charges,2624,psi4manual/1.6.x/nbody.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/nbody.html,4,['charge'],['charges']
Energy Efficiency," 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); If True returns the total data (energy/gradient/Hessian) of the system,; otherwise returns interaction data. Default is 'off' for energies,; 'on' for gradients and Hessians. Note that the calculation of total; counterpoise corrected energies implies the calculation of the energies of; monomers in the monomer basis, hence specifying return_total_data = True; may carry out more computations than return_total_data = False.; For gradients and Hessians, return_total_data = False is rarely useful. levels (dict) – {1: 'ccsd(t)', 2: 'mp2', 'supersystem': 'scf'} || {1: 2, 2: 'ccsd(t)', 3: 'mp2'} || etc; Dictionary of different levels of theory for different levels of expansion; Note that method_string is not used in this case. supersystem computes; all higher order n-body effects up to the number of fragments. embedding_charges (dict) – {1: [-0.834, 0.417, 0.417], ..}; Dictionary of atom-centered point charges. keys: 1-based index of fragment, values: list of charges for each fragment.; Add atom-centered point charges for fragments whose basis sets are not included in the computation. The nbody function computes counterpoise-corrected (CP), non-CP (noCP), and Valiron-Mayer Function Counterpoise (VMFC) interaction energies for complexes composed of arbitrary numbers of monomers.; Examples :; set {; basis def2-svp; }. # Counterpoise corrected CCSD(T) energies for the Helium dimer; molecule mol {; He; --; He 1 3; }; # Calculate interaction energies only (skips monomers in monomer basis):; energy('CCSD(T)', bsse_type='cp'); # Calculate interaction and total energies, return interaction energies:; energy('CCSD(T)', bsse_type=['cp','nocp']); # Calculate and return counterpoise-corrected gradient; # Useful for e.g. CP-corrected geometry optimization; gradient('CCSD(T)', bsse_type='cp', return_total_data=True). # noCP, VMFC, and CP energy for a helium cluster, limited at 3 bodies; molecule mol {; He 0 0 0; --; He 0 0 4; --; He 0 4 0; --",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/nbody.html:2636,charge,charges,2636,psi4manual/master/nbody.html,https://psicode.org,https://psicode.org/psi4manual/master/nbody.html,1,['charge'],['charges']
Energy Efficiency," 'quadrupole']); kwargs['properties'] = p4util.drop_duplicates(properties). optstash = driver_util._set_convergence_criterion('property', lowername, 6, 10, 6, 10, 8); wfn = procedures['property'][lowername](lowername, **kwargs). optstash.restore(). if return_wfn:; return (psi4.get_variable('CURRENT ENERGY'), wfn); else:; return psi4.get_variable('CURRENT ENERGY'). [docs]def optimize(name, **kwargs):; r""""""Function to perform a geometry optimization. :aliases: opt(). :returns: *float* |w--w| Total electronic energy of optimized structure in Hartrees. :returns: (*float*, :ref:`Wavefunction<sec:psimod_Wavefunction>`) |w--w| energy and wavefunction when **return_wfn** specified. :PSI variables:. .. hlist::; :columns: 1. * :psivar:`CURRENT ENERGY <CURRENTENERGY>`. :type name: string; :param name: ``'scf'`` || ``'mp2'`` || ``'ci5'`` || etc. First argument, usually unlabeled. Indicates the computational method; to be applied to the database. May be any valid argument to; :py:func:`~driver.energy`. :type molecule: :ref:`molecule <op_py_molecule>`; :param molecule: ``h2o`` || etc. The target molecule, if not the last molecule defined. :type return_wfn: :ref:`boolean <op_py_boolean>`; :param return_wfn: ``'on'`` || |dl| ``'off'`` |dr|. Indicate to additionally return the :ref:`Wavefunction<sec:psimod_Wavefunction>`; calculation result as the second element (after *float* energy) of a tuple. :type func: :ref:`function <op_py_function>`; :param func: |dl| ``gradient`` |dr| || ``energy`` || ``cbs``. Indicates the type of calculation to be performed on the molecule.; The default dertype accesses ``'gradient'`` or ``'energy'``, while; ``'cbs'`` performs a multistage finite difference calculation.; If a nested series of python functions is intended (see :ref:`sec:intercalls`),; use keyword ``opt_func`` instead of ``func``. :type mode: string; :param mode: |dl| ``'continuous'`` |dr| || ``'sow'`` || ``'reap'``. For a finite difference of energies optimization, indicates whether; the c",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/_modules/driver.html:48384,energy,energy,48384,psi4manual/1.0.0/_modules/driver.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/_modules/driver.html,1,['energy'],['energy']
Energy Efficiency," 'sapt', colors are taken from; sapt_colors module. Summary statistic *mae* is plotted on the; overbound side and relative statistic *mape* on the underbound side.; Saves a file with name *title* and plots to screen if *view*. """"""; import matplotlib.pyplot as plt. Nweft = 1; positions = range(-1, -1 * Nweft - 1, -1). # initialize plot; fig, ax = plt.subplots(figsize=(12, 0.33)); plt.xlim([-xlimit, xlimit]); plt.ylim([-1 * Nweft - 1, 0]); plt.yticks([]); plt.xticks([]); # fig.patch.set_visible(False); # ax.patch.set_visible(False); ax.axis('off'). for xl in xlines:; plt.axvline(xl, color='grey', linewidth=4); if xl != 0.0:; plt.axvline(-1 * xl, color='grey', linewidth=4). # plot reaction errors and threads; for rxn in data:; xvals = rxn['data']; clr = segment_color(color, rxn['color'] if 'color' in rxn else None). ax.plot(xvals, positions, '|', color=clr, markersize=13.0, mew=4). # plot trimmings; if mae is not None:; plt.axvline(-1 * mae, color='black', linewidth=12); if mape is not None: # equivalent to MAE for a 10 kcal/mol interaction energy; ax.plot(0.025 * mape, positions, 'o', color='black', markersize=15.0). # save and show; pltuid = title # simple (not really unique) filename for LaTeX integration; pltfile = expand_saveas(saveas, pltuid, def_prefix='flat_', relpath=relpath); files_saved = {}; for ext in graphicsformat:; savefile = pltfile + '.' + ext.lower(); plt.savefig(savefile, transparent=True, format=ext, bbox_inches='tight',; frameon=False, pad_inches=0.0); files_saved[ext.lower()] = savefile; if view:; plt.show(); plt.close() # give this a try; return files_saved. #def mpl_distslat_multiplot_files(pltfile, dbid, dbname, xmin, xmax, mcdats, labels, titles):; # """"""Saves a plot with basename *pltfile* with a slat representation; # of the modelchems errors in *mcdat*. Plot is in PNG, PDF, & EPS; # and suitable for download, no mouseover properties. Both labeled; # and labelless (for pub) figures are constructed.; #; # """"""; # import matplotlib as mpl; # fr",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/_modules/qcdb/mpl.html:5735,energy,energy,5735,psi4manual/1.0.0/_modules/qcdb/mpl.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/_modules/qcdb/mpl.html,1,['energy'],['energy']
Energy Efficiency," ('scf_scheme' in kwargs):; kwargs['scf_scheme'] = highest_1. if not ('corl_wfn' in kwargs):; kwargs['corl_wfn'] = 'mp2'; if not ('corl_basis' in kwargs):; kwargs['corl_basis'] = 'aug-cc-pV[TQ]Z'; if not ('corl_scheme' in kwargs):; kwargs['corl_scheme'] = corl_xtpl_helgaker_2. if not ('delta_wfn' in kwargs):; kwargs['delta_wfn'] = 'ccsd(t)'; if not ('delta_wfn_lesser' in kwargs):; kwargs['delta_wfn_lesser'] = 'mp2'; if not ('delta_basis' in kwargs):; kwargs['delta_basis'] = 'aug-cc-pVTZ'; if not ('delta_scheme' in kwargs):; kwargs['delta_scheme'] = highest_1. return cbs(name, **kwargs). [docs]def run_mp2_5(name, **kwargs):; r""""""Function that computes MP2.5 energy from results of a DETCI; MP3 calculation. .. math:: E_{total}^{\text{MP2.5}} = E_{total,\; \text{SCF}} \; + E_{corl,\; \text{MP2}} + E_{corl, \; \text{MP3}}. :PSI variables: . .. hlist:: ; :columns: 1 ; ; * :psivar:`MP2.5 TOTAL ENERGY <MP2.5TOTALENERGY>` ; * :psivar:`MP2.5 CORRELATION ENERGY <MP2.5CORRELATIONENERGY>` . >>> energy('mp2.5'). """"""; lowername = name.lower(); kwargs = kwargs_lower(kwargs). # Run detci calculation and collect conventional quantities; energy('mp3', **kwargs); e_scf = PsiMod.get_variable('SCF TOTAL ENERGY'); ce_mp2 = PsiMod.get_variable('MP2 CORRELATION ENERGY'); ce_mp3 = PsiMod.get_variable('MP3 CORRELATION ENERGY'); e_mp2 = e_scf + ce_mp2; e_mp3 = e_scf + ce_mp3. # Compute quantities particular to MP2.5; ce_mp25 = 0.5 * (ce_mp2 + ce_mp3); e_mp25 = e_scf + ce_mp25; PsiMod.set_variable('MP2.5 CORRELATION ENERGY', ce_mp25); PsiMod.set_variable('MP2.5 TOTAL ENERGY', e_mp25); PsiMod.set_variable('CURRENT CORRELATION ENERGY', ce_mp25); PsiMod.set_variable('CURRENT ENERGY', e_mp25). # build string of title banner and print results; banners = ''; banners += """"""PsiMod.print_out('\\n')\n""""""; banners += """"""banner(' MP2.5 ')\n""""""; banners += """"""PsiMod.print_out('\\n')\n\n""""""; exec banners. tables = ''; tables += """""" SCF total energy: %16.8f\n"""""" % (e_scf); tables += """""" MP2 total energy: %16.8",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b2/_modules/aliases.html:2558,energy,energy,2558,psi4manual/4.0b2/_modules/aliases.html,https://psicode.org,https://psicode.org/psi4manual/4.0b2/_modules/aliases.html,1,['energy'],['energy']
Energy Efficiency," ('scf_scheme' in kwargs):; kwargs['scf_scheme'] = highest_1. if not ('corl_wfn' in kwargs):; kwargs['corl_wfn'] = 'mp2'; if not ('corl_basis' in kwargs):; kwargs['corl_basis'] = 'aug-cc-pV[TQ]Z'; if not ('corl_scheme' in kwargs):; kwargs['corl_scheme'] = corl_xtpl_helgaker_2. if not ('delta_wfn' in kwargs):; kwargs['delta_wfn'] = 'ccsd(t)'; if not ('delta_wfn_lesser' in kwargs):; kwargs['delta_wfn_lesser'] = 'mp2'; if not ('delta_basis' in kwargs):; kwargs['delta_basis'] = 'aug-cc-pVTZ'; if not ('delta_scheme' in kwargs):; kwargs['delta_scheme'] = highest_1. return cbs(name, **kwargs). [docs]def run_mp2_5(name, **kwargs):; r""""""Function that computes MP2.5 energy from results of a DETCI; MP3 calculation. .. math:: E_{total}^{\text{MP2.5}} = E_{total,\; \text{SCF}} \; + E_{corl,\; \text{MP2}} + E_{corl, \; \text{MP3}}. :PSI variables: . .. hlist:: ; :columns: 1 ; ; * :psivar:`MP2.5 TOTAL ENERGY <MP2.5TOTALENERGY>` ; * :psivar:`MP2.5 CORRELATION ENERGY <MP2.5CORRELATIONENERGY>` . >>> energy('mp2.5'). """"""; lowername = name.lower(); kwargs = kwargs_lower(kwargs). # Run detci calculation and collect conventional quantities; energy('mp3', **kwargs); e_scf = PsiMod.get_variable('SCF TOTAL ENERGY'); ce_mp2 = PsiMod.get_variable('MP2 CORRELATION ENERGY'); ce_mp3 = PsiMod.get_variable('MP3 CORRELATION ENERGY'); e_mp2 = e_scf + ce_mp2; e_mp3 = e_scf + ce_mp3. # Compute quantities particular to MP2.5; ce_mp25 = 0.5 * (ce_mp2 + ce_mp3); e_mp25 = e_scf + ce_mp25; PsiMod.set_variable('MP2.5 CORRELATION ENERGY', ce_mp25); PsiMod.set_variable('MP2.5 TOTAL ENERGY', e_mp25); PsiMod.set_variable('CURRENT CORRELATION ENERGY', ce_mp25); PsiMod.set_variable('CURRENT ENERGY', e_mp25). # build string of title banner and print results; banners = ''; banners += """"""PsiMod.print_out('\\n')\n""""""; banners += """"""banner(' MP2.5 ')\n""""""; banners += """"""PsiMod.print_out('\\n')\n\n""""""; exec(banners). tables = ''; tables += """""" SCF total energy: %16.8f\n"""""" % (e_scf); tables += """""" MP2 total energy: %16.",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b3/_modules/aliases.html:2555,energy,energy,2555,psi4manual/4.0b3/_modules/aliases.html,https://psicode.org,https://psicode.org/psi4manual/4.0b3/_modules/aliases.html,1,['energy'],['energy']
Energy Efficiency," (3)¶\[E_{SAPT2+} = E_{SAPT2} + E_{disp}^{(21)} + E_{disp}^{(22)}\]. (4)¶\[E_{SAPT2+(3)} = E_{SAPT2+} + E_{elst,resp}^{(13)} + E_{disp}^{(30)}\]. (5)¶\[E_{SAPT2+3} = E_{SAPT2+(3)}; + E_{exch-ind}^{(30)} + E_{ind,resp}^{(30)}; + E_{exch-disp}^{(30)} + E_{ind-disp}^{(30)} + E_{exch-ind-disp}^{(30)}; - \delta_{HF}^{(2)} + \delta_{HF}^{(3)}\]; The \(\delta_{HF}^{(2)}\) and \(\delta_{HF}^{(3)}\) terms take into; account higher-order induction effects and are included in the definition; of SAPT terms. They are computed from the Hartree–Fock supermolecular interaction energy; \(E_{int}^{HF}\) and are only available in dimer-centered basis SAPT; computations, which is the default (see below for monomer-centered basis; computations). They are defined by:. (6)¶\[\delta_{HF}^{(2)} = E_{int}^{HF} - (E_{elst}^{(10)} + E_{exch}^{(10)}; + E_{ind,resp}^{(20)} + E_{exch-ind,resp}^{(20)})\]. (7)¶\[\delta_{HF}^{(3)} = \delta_{HF}^{(2)} - (E_{exch-ind}^{(30)}; + E_{ind,resp}^{(30)})\]; Additionally, high-order coupling between induction and dispersion can be; extracted from the supermolecular MP2 interaction energy:. \[\delta_{MP2}^{(2)} = E_{int}^{MP2, corr} - (E_{elst}^{(12)} +; E_{exch}^{(11)} + E_{exch}^{(12)} + \; ^{t}\!E_{ind}^{(22)}; + \; ^{t}\!E_{exch-ind}^{(22)} + E_{disp}^{(20)} + E_{exch-disp}^{(20)})\]. \[\delta_{MP2}^{(3)} = \delta_{MP2}^{(2)} - (E_{ind-disp}^{(30)} + E_{exch-ind-disp}^{(30)})\]; where \(E_{int}^{MP2, corr}\) is the correlation part of the supermolecular MP2; interaction energy. \(\delta_{MP2}^{(2)}\) and \(\delta_{MP2}^{(3)}\) also improve the; description of electrostatically dominated complexes. \(\delta_{MP2}^{(2)}\); can be applied to SAPT2+ or SAPT2+(3) energies whereas \(\delta_{MP2}^{(3)}\); should be applied to SAPT2+3 energies.; A thorough analysis of the performance of these truncations of closed-shell SAPT can be; found in a review by Hohenstein and Sherrill [Hohenstein:2012:WIREs],; and a systematic study of the accuracy of these truncations (",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/sapt-1.html:4237,energy,energy,4237,psi4manual/1.1.0/sapt-1.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/sapt-1.html,6,['energy'],['energy']
Energy Efficiency," (3, 3, 3, 3, 3, 3, 3). mtd 128-POLE XXXXXXX¶. mtd 128-POLE XXXXXXY¶. mtd 128-POLE ZZZZZZZ¶; The 36 components of the named method 128-pole [Debye Ang^6].; Deprecated in favor of mtd 128-POLE. MP2 TOTAL ENERGY¶. MP2 CORRELATION ENERGY¶; The total electronic energy [Eh] and correlation energy component [Eh]; for the MP2 level of theory. MP2 TOTAL GRADIENT¶. The total electronic gradient [E_h/a0] of the MP2 level of theory, ({nat}, 3).¶. MP2 DIPOLE GRADIENT¶; The derivative of the MP2 level of theory dipole [E_h a0/u] = [(e a0/a0)^2/u] with respect to nuclear perturbations; as a degree-of-freedom by dipole component array, (3 * {nat}, 3). MP2 TOTAL HESSIAN¶; The total electronic second derivative [Eh/a0/a0] for the MP2 level of theory, (3 * {nat}, 3 * {nat}). MP2.5 TOTAL ENERGY¶. MP2.5 CORRELATION ENERGY¶; The total electronic energy [Eh] and correlation energy component [Eh]; for the MP2.5 level of theory. MP3 TOTAL ENERGY¶. MP3 CORRELATION ENERGY¶; The total electronic energy [Eh] and correlation energy component [Eh]; for the MP3 level of theory. MP4(T) CORRECTION ENERGY¶; The MP4 triples component [Eh]. Quantity is second right-hand term in; Eq. (2). MP4(SDQ) TOTAL ENERGY¶. MP4(SDQ) CORRELATION ENERGY¶; The total electronic energy [Eh] and correlation energy component [Eh]; for the MP4 singles, doubles, quadruples level of theory. Quantity; MP4(SDQ) CORRELATION ENERGY is; first right-hand term in Eq. (2). MP4 TOTAL ENERGY¶. MP4 CORRELATION ENERGY¶. MP4(SDTQ) TOTAL ENERGY¶. MP4(SDTQ) CORRELATION ENERGY¶; The total electronic energy [Eh] and correlation energy component [Eh]; for the full MP4 level of theory. Quantity MP4 CORRELATION; ENERGY / MP4(SDTQ) CORRELATION ENERGY; is left-hand term in Eq. (2). (2)¶\[E_{\text{MP4}} = E_{\text{MP4(SDQ)}} + E_{\text{MP4(T)}}\]. MPn TOTAL ENERGY¶. MPn CORRELATION ENERGY¶; The total electronic energy [Eh] and correlation energy component [Eh]; for the labeled Møller–Plesset perturbation theory level.; n is MP perturbation order.",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/glossary_psivariables-1.html:28395,energy,energy,28395,psi4manual/1.4.0/glossary_psivariables-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/glossary_psivariables-1.html,8,['energy'],['energy']
Energy Efficiency," (8)¶\[E_{sSAPT0} = E_{elst}^{(10)} + E_{exch}^{(10)} + E_{ind,resp}^{(20)} +; p_{EX}(3.0) E_{exch-ind,resp}^{(20)} + E_{disp}^{(20)} + p_{EX}(3.0) E_{exch-disp}^{(20)}; + \delta_{HF}^{(2)}\]; where \(\delta_{HF}^{(2)}\) is computed without any scaling. Please note that; sSAPT0 is thus not the same as requesting exch_scale_alpha 3.0, and that the; scaling is automatically performed by requesting energy('ssapt0'). A First Example¶; The following is the simplest possible input that will perform all; available SAPT computations (normally, you would pick one of these methods).; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 13; 14; 15; 16; 17; 18; 19; 20; 21; 22; 23molecule water_dimer {; 0 1; O -1.551007 -0.114520 0.000000; H -1.934259 0.762503 0.000000; H -0.599677 0.040712 0.000000; --; 0 1; O 1.350625 0.111469 0.000000; H 1.680398 -0.373741 -0.758561; H 1.680398 -0.373741 0.758561. units angstrom; no_reorient; symmetry c1; }. set basis aug-cc-pvdz. energy('sapt0'); energy('sapt2'); energy('sapt2+'); energy('sapt2+(3)'); energy('sapt2+3'). The SAPT module uses the standard PSI4 partitioning of the dimer; into monomers. SAPT does not use spatial symmetry and needs the geometry; of the system to remain fixed throughout monomer and dimer calculations.; These requirements are imposed whenever a SAPT calculation is requested; but can also be set explicitly with the no_reorient and symmetry; c1 molecule keywords, as in the example above. As a reminder, only; SAPT0 can handle the interaction of both closed- and open-shell monomers.; Higher-order SAPT is only available for computation of interactions between; closed-shell singlets.; The example input shown above would not be used in practice.; To exploit the efficiency of the density-fitted SAPT implementation in; PSI4, the SCF computations should also be performed with density-fitted; (DF) integrals.; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11set globals {; basis aug-cc-pvdz; df_basis_scf aug-cc-pvdz-jkfit; df_basis_sapt aug-cc-pvdz-ri; gue",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/sapt-1.html:8808,energy,energy,8808,psi4manual/1.1.0/sapt-1.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/sapt-1.html,30,['energy'],['energy']
Energy Efficiency," (C2 => C, H4 = H) (0-indexed including dummies). ftrue_atomic_number(self: psi4.core.Molecule, atom: int) → int; Gets atomic number of atom from element (0-indexed including dummies). full_geometry(self: psi4.core.Molecule) → psi4.core.Matrix; Gets the geometry [Bohr] as a (Natom X 3) matrix of coordinates (including dummies). full_pg_n(self: psi4.core.Molecule) → int; Gets n in Cnv, etc.; If there is no n (e.g. Td) it’s the highest-order rotation axis. fx(self: psi4.core.Molecule, arg0: int) → float; x position of atom arg0 (0-indexed including dummies in Bohr). fy(self: psi4.core.Molecule, arg0: int) → float; y position of atom arg0 (0-indexed including dummies in Bohr). fz(self: psi4.core.Molecule, arg0: int) → float; z position of atom arg0 (0-indexed including dummies in Bohr). geometry(self: psi4.core.Molecule) → psi4.core.Matrix; Gets the geometry [Bohr] as a (Natom X 3) matrix of coordinates (excluding dummies). get_fragment_charges(self: psi4.core.Molecule) → List[int]; Gets the charge of each fragment. get_fragment_multiplicities(self: psi4.core.Molecule) → List[int]; Gets the multiplicity of each fragment. get_fragment_types(self: psi4.core.Molecule) → List[str]; Returns a list describing how to handle each fragment {Real, Ghost, Absent}. get_fragments(self: psi4.core.Molecule) → List[Tuple[int, int]]; Returns list of pairs of atom ranges defining each fragment from parent molecule(fragments[frag_ind] = <Afirst,Alast+1>). get_full_point_group(self: psi4.core.Molecule) → str; Gets point group name such as C3v or S8. get_full_point_group_with_n(self: psi4.core.Molecule) → str; Gets point group name such as Cnv or Sn. get_variable(self: psi4.core.Molecule, arg0: str) → float; Returns the value of variable arg0 in the structural variables list. inertia_tensor(self: psi4.core.Molecule) → psi4.core.Matrix; Returns intertial tensor. input_units_to_au(self: psi4.core.Molecule) → float; Returns unit conversion to [a0] for geometry. irrep_labels(self: psi4.core.Mo",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/api/psi4.core.molecule.html:48226,charge,charge,48226,psi4manual/1.3.2/api/psi4.core.molecule.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/api/psi4.core.molecule.html,1,['charge'],['charge']
Energy Efficiency," (CCSD, CCSDT, up to CCn); level of theory. CCSD(T) TOTAL ENERGY¶. CCSD(T) CORRELATION ENERGY¶. A-CCSD(T) TOTAL ENERGY¶. A-CCSD(T) CORRELATION ENERGY¶. CCSDT(Q) TOTAL ENERGY¶. CCSDT(Q) CORRELATION ENERGY¶. CC(n-1)(n) TOTAL ENERGY¶. CC(n-1)(n) CORRELATION ENERGY¶; The total electronic energy [H] and correlation energy component [H]; for the perturbatively corrected coupled-cluster (CCSD(T), a-CCSD(T), CCSDT(Q),; up to CC(n-1)(n) level of theory. CCSDT-1a TOTAL ENERGY¶. CCSDT-1a CORRELATION ENERGY¶. CCSDTQ-1a TOTAL ENERGY¶. CCSDTQ-1a CORRELATION ENERGY¶. CCn-1a TOTAL ENERGY¶. CCn-1a CORRELATION ENERGY¶; The total electronic energy [H] and correlation energy component [H]; for the approximate coupled-cluster (CCSD(T)-1a, CCSDT(Q)-1a,; up to CCn-1a) level of theory. CCSDT-1b TOTAL ENERGY¶. CCSDT-1b CORRELATION ENERGY¶. CCSDTQ-1b TOTAL ENERGY¶. CCSDTQ-1b CORRELATION ENERGY¶. CCn-1b TOTAL ENERGY¶. CCn-1b CORRELATION ENERGY¶; The total electronic energy [H] and correlation energy component [H]; for the approximate coupled-cluster (CCSD(T)-1b, CCSDT(Q)-1b,; up to CCn-1b) level of theory. CCSDT-3 TOTAL ENERGY¶. CCSDT-3 CORRELATION ENERGY¶. CCSDTQ-3 TOTAL ENERGY¶. CCSDTQ-3 CORRELATION ENERGY¶. CCn-3 TOTAL ENERGY¶. CCn-3 CORRELATION ENERGY¶; The total electronic energy [H] and correlation energy component [H]; for the approximate coupled-cluster (CCSD(T)-3, CCSDT(Q)-3,; up to CCn-3) level of theory. CCSD(T)_L TOTAL ENERGY¶. CCSD(T)_L CORRELATION ENERGY¶. CCSDT(Q)_L TOTAL ENERGY¶. CCSDT(Q)_L CORRELATION ENERGY¶. CC(n-1)(n)_L TOTAL ENERGY¶. CC(n-1)(n)_L CORRELATION ENERGY¶; The total electronic energy [H] and correlation energy component [H]; for the approximate coupled-cluster (CCSD(T)_L, CCSDT(Q)_L,; up to CC(n-1)(n)L level of theory. CCSD DIPOLE POLARIZABILITY @ xNM¶; The dipole polarizability [au] calculated at the CCSD level; for a given (x) wavelength, (x) rounded to nearest integer. CCSD SPECIFIC ROTATION (LEN) @ xNM¶; The specific rotation [deg/(dm (g/cm^3))] calculated ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/glossary_psivariables-1.html:5792,energy,energy,5792,psi4manual/1.2.1/glossary_psivariables-1.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/glossary_psivariables-1.html,8,['energy'],['energy']
Energy Efficiency," (CCSD, CCSDT, up to CCn); level of theory. CCSD(T) TOTAL ENERGY¶. CCSD(T) CORRELATION ENERGY¶. A-CCSD(T) TOTAL ENERGY¶. A-CCSD(T) CORRELATION ENERGY¶. CCSDT(Q) TOTAL ENERGY¶. CCSDT(Q) CORRELATION ENERGY¶. CC(n-1)(n) TOTAL ENERGY¶. CC(n-1)(n) CORRELATION ENERGY¶; The total electronic energy [H] and correlation energy component [H]; for the perturbatively corrected coupled-cluster (CCSD(T), a-CCSD(T), CCSDT(Q),; up to CC(n-1)(n) level of theory. CCSDT-1a TOTAL ENERGY¶. CCSDT-1a CORRELATION ENERGY¶. CCSDTQ-1a TOTAL ENERGY¶. CCSDTQ-1a CORRELATION ENERGY¶. CCn-1a TOTAL ENERGY¶. CCn-1a CORRELATION ENERGY¶; The total electronic energy [H] and correlation energy component [H]; for the approximate coupled-cluster (CCSD(T)-1a, CCSDT(Q)-1a,; up to CCn-1a) level of theory. CCSDT-1b TOTAL ENERGY¶. CCSDT-1b CORRELATION ENERGY¶. CCSDTQ-1b TOTAL ENERGY¶. CCSDTQ-1b CORRELATION ENERGY¶. CCn-1b TOTAL ENERGY¶. CCn-1b CORRELATION ENERGY¶; The total electronic energy [H] and correlation energy component [H]; for the approximate coupled-cluster (CCSD(T)-1b, CCSDT(Q)-1b,; up to CCn-1b) level of theory. CCSDT-3 TOTAL ENERGY¶. CCSDT-3 CORRELATION ENERGY¶. CCSDTQ-3 TOTAL ENERGY¶. CCSDTQ-3 CORRELATION ENERGY¶. CCn-3 TOTAL ENERGY¶. CCn-3 CORRELATION ENERGY¶; The total electronic energy [H] and correlation energy component [H]; for the approximate coupled-cluster (CCSD(T)-3, CCSDT(Q)-3,; up to CCn-3) level of theory. CCSD(T)_L TOTAL ENERGY¶. CCSD(T)_L CORRELATION ENERGY¶. CCSDT(Q)_L TOTAL ENERGY¶. CCSDT(Q)_L CORRELATION ENERGY¶. CC(n-1)(n)_L TOTAL ENERGY¶. CC(n-1)(n)_L CORRELATION ENERGY¶; The total electronic energy [H] and correlation energy component [H]; for the approximate coupled-cluster (CCSD(T)_L, CCSDT(Q)_L,; up to CC(n-1)(n)L level of theory. CEPA(0) DIPOLE X¶. CEPA(0) DIPOLE Y¶. CEPA(0) DIPOLE Z¶; The three components of the dipole [Debye] for the; coupled electron pair approximation variant 0 level of theory. CEPA(0) QUADRUPOLE XX¶. CEPA(0) QUADRUPOLE XY¶. CEPA(0) QUADRUPOLE XZ¶. CE",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/glossary_psivariables-1.html:4942,energy,energy,4942,psi4manual/1.1.0/glossary_psivariables-1.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/glossary_psivariables-1.html,12,['energy'],['energy']
Energy Efficiency, (CFOUR). CFOUR_SCF_CONV (CFOUR). CFOUR_SCF_DAMPING (CFOUR). CFOUR_SCF_EXPORDER (CFOUR). CFOUR_SCF_EXPSTART (CFOUR). CFOUR_SCF_EXTRAPOLATION (CFOUR). CFOUR_SCF_MAXCYC (CFOUR). CFOUR_SD_FIELD (CFOUR). CFOUR_SPHERICAL (CFOUR). CFOUR_SPIN_FLIP (CFOUR). CFOUR_SPIN_ORBIT (CFOUR). CFOUR_SPIN_SCAL (CFOUR). CFOUR_SPINROTATION (CFOUR). CFOUR_SUBGROUP (CFOUR). CFOUR_SYM_CHECK (CFOUR). CFOUR_SYMMETRY (CFOUR). CFOUR_T3_EXTRAPOL (CFOUR). CFOUR_TAMP_SUM (CFOUR). CFOUR_THERMOCHEMISTRY (CFOUR). CFOUR_TRANS_INV (CFOUR). CFOUR_TREAT_PERT (CFOUR). CFOUR_UIJ_THRESHOLD (CFOUR). CFOUR_UNITS (CFOUR). CFOUR_UPDATE_HESSIAN (CFOUR). CFOUR_VIBRATION (CFOUR). CFOUR_VTRAN (CFOUR). CFOUR_XFIELD (CFOUR). CFOUR_XFORM_TOL (CFOUR). CFOUR_YFIELD (CFOUR). CFOUR_ZFIELD (CFOUR). chain_dot() psi4.core.Matrix method. change_file_namespace() psi4.core.IO static method. char_table() psi4.core.PointGroup method. character() psi4.core.IrreducibleRepresentation method. CharacterTable class in psi4.core. charge. ; molecule. charge() psi4.core.Molecule method. check_iwl_file_from_scf_type() in module psi4.driver. check_phases() psi4.core.CUHF method. psi4.core.HF method. psi4.core.RHF method. psi4.core.ROHF method. psi4.core.UHF method. CheMPS2. CHOLESKY (DFOCC). cholesky_factorize() psi4.core.Matrix method. CHOLESKY_TOLERANCE (DFOCC). (FNOCC). (SCF). CI. arbitrary-order coupled-cluster theory. arbitrary-order perturbation theory. basic-keywords. multi-configurational self-consistent-field. spin multiplicities of higher roots. theory. CI CORRELATION ENERGY. CI DIPOLE. CI DIPOLE X. CI DIPOLE Y. CI DIPOLE Z. CI QUADRUPOLE. CI QUADRUPOLE XX. CI QUADRUPOLE XY. CI QUADRUPOLE XZ. CI QUADRUPOLE YY. CI QUADRUPOLE YZ. CI QUADRUPOLE ZZ. CI ROOT n -> ROOT m DIPOLE. CI ROOT n -> ROOT m DIPOLE X. CI ROOT n -> ROOT m DIPOLE Y. CI ROOT n -> ROOT m DIPOLE Z. CI ROOT n -> ROOT m QUADRUPOLE. CI ROOT n -> ROOT m QUADRUPOLE XX. CI ROOT n -> ROOT m QUADRUPOLE XY. CI ROOT n -> ROOT m QUADRUPOLE XZ. CI ROOT n -> ROOT m QUADRUPOLE YY. C,MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/genindex-1.html:26021,charge,charge,26021,psi4manual/1.4.0/genindex-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/genindex-1.html,4,['charge'],['charge']
Energy Efficiency, (CFOUR). CFOUR_SCF_CONV (CFOUR). CFOUR_SCF_DAMPING (CFOUR). CFOUR_SCF_EXPORDER (CFOUR). CFOUR_SCF_EXPSTART (CFOUR). CFOUR_SCF_EXTRAPOLATION (CFOUR). CFOUR_SCF_MAXCYC (CFOUR). CFOUR_SD_FIELD (CFOUR). CFOUR_SPHERICAL (CFOUR). CFOUR_SPIN_FLIP (CFOUR). CFOUR_SPIN_ORBIT (CFOUR). CFOUR_SPIN_SCAL (CFOUR). CFOUR_SPINROTATION (CFOUR). CFOUR_SUBGROUP (CFOUR). CFOUR_SYM_CHECK (CFOUR). CFOUR_SYMMETRY (CFOUR). CFOUR_T3_EXTRAPOL (CFOUR). CFOUR_TAMP_SUM (CFOUR). CFOUR_THERMOCHEMISTRY (CFOUR). CFOUR_TRANS_INV (CFOUR). CFOUR_TREAT_PERT (CFOUR). CFOUR_UIJ_THRESHOLD (CFOUR). CFOUR_UNITS (CFOUR). CFOUR_UPDATE_HESSIAN (CFOUR). CFOUR_VIBRATION (CFOUR). CFOUR_VTRAN (CFOUR). CFOUR_XFIELD (CFOUR). CFOUR_XFORM_TOL (CFOUR). CFOUR_YFIELD (CFOUR). CFOUR_ZFIELD (CFOUR). chain_dot() psi4.core.Matrix method. change_file_namespace() psi4.core.IO static method. char_table() psi4.core.PointGroup method. character() psi4.core.IrreducibleRepresentation method. CharacterTable class in psi4.core. charge. ; molecule. charge() psi4.core.Molecule method. check_iwl_file_from_scf_type() in module psi4.driver. check_phases() psi4.core.CUHF method. psi4.core.HF method. psi4.core.RHF method. psi4.core.ROHF method. psi4.core.UHF method. CheMPS2. CHOLESKY (DFOCC). cholesky_factorize() psi4.core.Matrix method. CHOLESKY_TOLERANCE (DFOCC). (FNOCC). (SCF). CI. arbitrary-order coupled-cluster theory. arbitrary-order perturbation theory. basic-keywords. multi-configurational self-consistent-field. spin multiplicities of higher roots. theory. CI CORRELATION ENERGY. CI DIPOLE. CI QUADRUPOLE. CI ROOT n -> ROOT m DIPOLE. CI ROOT n -> ROOT m QUADRUPOLE. CI ROOT n CORRELATION ENERGY. CI ROOT n DIPOLE. CI ROOT n QUADRUPOLE. CI ROOT n TOTAL ENERGY. CI STATE-AVERAGED CORRELATION ENERGY. CI STATE-AVERAGED TOTAL ENERGY. CI TOTAL ENERGY. CI_DIIS (MCSCF). CI_FILE_START (DETCI). CI_MAXITER (DETCI). ci_nat_orbs() psi4.core.CIWavefunction method. CI_NUM_THREADS (DETCI). CI_TYPE (GLOBALS). CIBLKS_PRINT (DETCI). CIn CORRELATION ENERGY. C,MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/genindex.html:28141,charge,charge,28141,psi4manual/1.6.x/genindex.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/genindex.html,1,['charge'],['charge']
Energy Efficiency," (CPHF); CPHF — The amount of debug information printed to the output file. Type: integer; Default: 0. DEBUG (DFTSAPT); DFTSAPT — Debug level. Type: integer; Default: 0. DEBUG (GLOBALS); GLOBALS (Expert) — The amount of information to print to the output file. Type: integer; Default: 0. DELETE_AO (TRANSQT); TRANSQT — Do delete AO integral files?. Type: boolean; Default: true. DELETE_RESTR_DOCC (TRANSQT); TRANSQT — Do delete restricted doubly occupieds?. Type: boolean; Default: true. DELETE_TEI (TRANSQT2); TRANSQT2 — Boolean to delete the SO-basis two-electron integral file after the transformation. Type: boolean; Default: true. DELETE_TPDM (TRANSQT); TRANSQT — Do delete TPDM file?. Type: boolean; Default: true. DENOMINATOR_ALGORITHM (SAPT); SAPT — Denominator algorithm for PT methods. Laplace transformations are slightly more efficient. Type: string; Possible Values: LAPLACE, CHOLESKY; Default: LAPLACE. DENOMINATOR_DELTA (SAPT); SAPT — Maximum error allowed (Max error norm in Delta tensor) in the approximate energy denominators employed for most of the and evaluation. Type: double; Default: 1.0e-6. DERTYPE (GLOBALS); GLOBALS (Expert) — Derivative level. Type: string; Possible Values: NONE, FIRST, SECOND, RESPONSE; Default: NONE. DETCI_FREEZE_CORE (DETCI); DETCI — Do freeze core orbitals?. Type: boolean; Default: true. DF_BASIS_CC (FNOCC); FNOCC — Auxilliary basis for df-ccsd(t). Type: string; Possible Values: basis string; Default: No Default. DF_BASIS_ELST (DFTSAPT); DFTSAPT — The name of the electrostatic/exchange auxiliary basis set. Type: string; Possible Values: basis string; Default: No Default. DF_BASIS_ELST (SAPT); SAPT — Auxiliary basis set for SAPT Elst10 and Exch10 density fitting computations, may be important if heavier elements are involved. Defaults to DF_BASIS_SAPT. Type: string; Possible Values: basis string; Default: No Default. DF_BASIS_GUESS (SCF); SCF — When BASIS_GUESS is active, run the preliminary scf in density-fitted mode with this as fitti",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b4/autodoc_glossary_options_c-1.html:24061,energy,energy,24061,psi4manual/4.0b4/autodoc_glossary_options_c-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b4/autodoc_glossary_options_c-1.html,2,['energy'],['energy']
Energy Efficiency," (DDX)¶DDX — Dielectric constant of the solvent to use. Type: double; Default: 0. DDX_SOLVENT_EPSILON_OPTICAL (DDX)¶DDX — Optical dielectric constant of the solvent to use for non-equilibrium solvation. Type: double; Default: 0. DDX_SOLVENT_KAPPA (DDX)¶DDX — Debye-Hückel parameter of the solvent to use. Ignored if DDX_MODEL is not LPB; mandatory for LPB. Uses the unit of the molecule (i.e. either ang^{-1} or bohr^{-1}). Type: double; Default: 0. DEBUG (CCDENSITY)¶CCDENSITY — Reproducing energies from densities ?. Type: integer; Default: 0. DEBUG (CPHF)¶CPHF — The amount of debug information printed to the output file. Type: integer; Default: 0. DEBUG (GLOBALS)¶GLOBALS (Expert) — The amount of information to print to the output file. Type: integer; Default: 0. DELETE_TEI (CCTRANSORT)¶CCTRANSORT — Delete the SO two-electron integrals after the transformation?. Type: boolean; Default: true. DENOMINATOR_ALGORITHM (SAPT)¶SAPT — Denominator algorithm for PT methods. Laplace transformations are slightly more efficient. Type: string; Possible Values: LAPLACE, CHOLESKY; Default: LAPLACE. DENOMINATOR_DELTA (SAPT)¶SAPT — Maximum error allowed (Max error norm in Delta tensor) in the approximate energy denominators employed for most of the \(E_{disp}^{(20)}\) and \(E_{exch-disp}^{(20)}\) evaluation. Type: double; Default: 1.0e-6. DERTYPE (EFP)¶EFP (Expert) — Do EFP gradient?. Type: string; Possible Values: NONE, FIRST; Default: NONE. DERTYPE (GLOBALS)¶GLOBALS (Expert) — Derivative level. Type: string; Possible Values: NONE, FIRST, SECOND, RESPONSE; Default: NONE. DETCI_FREEZE_CORE (DETCI)¶DETCI — Do freeze core orbitals?. Type: boolean; Default: true. DF_BASIS_CC (FNOCC)¶FNOCC — Auxilliary basis for df-ccsd(t). Type: string; Possible Values: basis string; Default: No Default. DF_BASIS_CC (GLOBALS)¶GLOBALS — The density fitting basis to use in coupled cluster computations. Type: string; Possible Values: basis string; Default: No Default. DF_BASIS_DCT (DCT)¶DCT — Auxiliary basis se",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/autodoc_glossary_options_c.html:100343,efficient,efficient,100343,psi4manual/1.8.x/autodoc_glossary_options_c.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/autodoc_glossary_options_c.html,3,['efficient'],['efficient']
Energy Efficiency," (DETCI); DETCI — Do use least-squares extrapolation in iterative solution of CI vector?. Type: boolean; Default: false. LSE_COLLAPSE (DETCI); DETCI — Number of iterations between least-squares extrapolations. Type: integer; Default: 3. LSE_TOLERANCE (DETCI); DETCI — Minimum converged energy for least-squares extrapolation to be performed. Type: conv double; Default: 3. M_FILE (TRANSQT); TRANSQT —. Type: integer; Default: 0. MADMP2_SLEEP (DFMP2); DFMP2 (Expert) — A helpful option, used only in debugging the MADNESS version. Type: integer; Default: 0. MAT_NUM_COLUMN_PRINT (GLOBALS); GLOBALS (Expert) — Number of columns to print in calls to Matrix::print_mat. Type: integer; Default: 5. MAX_BUCKETS (TRANSQT); TRANSQT —. Type: integer; Default: 499. MAX_DISP_G_CONVERGENCE (OPTKING); OPTKING — Convergence criterion for geometry optmization: maximum displacement (internal coordinates, atomic units). Type: conv double; Default: 1.2e-3. MAX_ENERGY_G_CONVERGENCE (OPTKING); OPTKING — Convergence criterion for geometry optmization: maximum energy change. Type: conv double; Default: 1.0e-6. MAX_FORCE_G_CONVERGENCE (OPTKING); OPTKING — Convergence criterion for geometry optmization: maximum force (internal coordinates, atomic units). Type: conv double; Default: 3.0e-4. MAX_MOGRAD_CONVERGENCE (OMP2); OMP2 —. Type: conv double; Default: 1e-4. MAX_NUM_VECS (DETCI); DETCI — Maximum number of Davidson subspace vectors which can be held on disk for the CI coefficient and sigma vectors. (There is one H(diag) vector and the number of D vectors is equal to the number of roots). When the number of vectors on disk reaches the value of MAX_NUM_VECS, the Davidson subspace will be collapsed to COLLAPSE_SIZE vectors for each root. This is very helpful for saving disk space. Defaults to MAXITER * NUM_ROOTS + NUM_INIT_VECS. Type: integer; Default: 0. MAXITER (CCENERGY); CCENERGY — Maximum number of iterations to solve the CC equations. Type: integer; Default: 50. MAXITER (CCEOM); CCEOM — Maximum ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b2/autodoc_glossary_options_c-1.html:55685,energy,energy,55685,psi4manual/4.0b2/autodoc_glossary_options_c-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b2/autodoc_glossary_options_c-1.html,2,['energy'],['energy']
Energy Efficiency," (RAS 3), and a “tertiary” virtual space consisting of the remaining virtuals. First, an initial CISD computation is run to get the natural orbitals; this allows a meaningful partitioning of the virtual orbitals into groups of different importance. Next, the RASCI is run. The split-virtual CISD[TQ] takes all singles and doubles, and all triples and quadruples with no more than 2 electrons in the secondary virtual subspace (RAS 3). If any electrons are present in the tertiary virtual subspace (RAS 4), then that excitation is only allowed if it is a single or double. dlpnomp2-2; comparison of DF-MP2 and DLPNO-MP2 with a CBS extrapolation. fnocc4; Test FNO-DF-CCSD(T) energy. cc49; EOM-CC3(UHF) on CH radical with user-specified basis and properties for particular root. opt4; SCF cc-pVTZ geometry optimzation, with Z-matrix input. cubeprop-frontier; ROHF frontier orbitals of CH2(s) and CH2(t). nbody-he-4b; MP2/aug-cc-pvDZ many body energies of an arbitrary Helium complex, addressing 4-body formulas. sapt-exch-disp-inf; SAPT0 with S^inf exch-disp20. remp-energy2; integral conventional unrestricted REMP/cc-pVDZ energies for the H2O+ molecule. results were independently verified against the initial wavels implementation. omp2p5-2; OMP2.5 cc-pVDZ energy for the H2O molecule. mints6; Patch of a glycine with a methyl group, to make alanine, then DF-SCF energy calculation with the cc-pVDZ basis set. scf-auto-cholesky; Cholesky filter a complete basis. cepa3; cc-pvdz H2O Test coupled-pair CISD against DETCI CISD. dft-grad2; DF-BP86-D2 cc-pVDZ frozen core gradient of S22 HCN updated ref gradient due to new BraggSlater radii. opt11; Transition-state optimizations of HOOH to both torsional transition states. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Test Suite and Sample Inputs. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/testsuite.html:49294,energy,energy,49294,psi4manual/master/testsuite.html,https://psicode.org,https://psicode.org/psi4manual/master/testsuite.html,2,['energy'],['energy']
Energy Efficiency," (SCF). DIIS_MIN_VECS (DCFT). (DETCI). (SCF). DIIS_START (PSIMRCC). (SCF). DIIS_START_CONVERGENCE (DCFT). DIIS_START_ITER (CCENERGY). (DETCI). DIPMOM (DETCI). (FNOCC). DISP_SIZE (FINDIF). DISPERSIONCORRECTIONENERGY. distance() in module qcdb.vecutil. distance_matrix() LibmintsMolecule method. DISTANT_PAIR_CUTOFF (CCENERGY). DISTRIBUTED_MATRIX (SCF). DO_ALL_TEI (TRANSQT). DO_CCD_DISP (SAPT). DO_DIIS (OCC). DO_LEVEL_SHIFT (OCC). DO_MBPT_DISP (SAPT). DO_SCS (OCC). DO_SINGLETS (CPHF). DO_SOS (OCC). DO_THIRD_ORDER (SAPT). DO_TRIPLETS (CPHF). DOCC (GLOBALS). (MCSCF). DOMAIN_PRINT (CCENERGY). DOMAIN_PRINT_EXIT (CCENERGY). DOMAINS (CCENERGY). dot() in module qcdb.vecutil. DOUBLE-HYBRIDCORRECTIONENERGY. driver module. drop_duplicates() in module p4util.procutil. in module qcdb.dbproc. dynamic_variable_bind() in module molutil. E. E3_SCALE (OCC). E_CONVERGENCE (CCENERGY). (CCEOM). (DETCI). (FNOCC). (MCSCF). (MRCC). (OCC). (PSIMRCC). (SAPT). (SCF). EA_POLES (OCC). EKT_EA (OCC). EKT_IP (OCC). energy(). setting keywords. energy() in module driver. entry_number() CoordEntry method. environment variable; . MKL_NUM_THREADS, [1]. OMP_NESTED, [1], [2]. OMP_NUM_THREADS, [1], [2], [3], [4], [5]. PATH, [1], [2], [3], [4], [5]. PSI_SCRATCH, [1], [2], [3]. PYTHONPATH, [1], [2], [3], [4]. EOM_GUESS (CCEOM). EOM_REFERENCE (CCEOM). (CCHBAR). (CCSORT). EP_EA_POLES (OCC). EP_IP_POLES (OCC). EP_MAXITER (OCC). equalize() Section method. equivalent() LibmintsMolecule method. everything() CartesianEntry method. CoordEntry method. CoordValue method. LibmintsMolecule method. NumberValue method. VariableValue method. ZMatrixEntry method. EX_ALLOW (DETCI). EX_LEVEL (DETCI). EXCITATION_RANGE (CCEOM). EXPLICIT_HAMILTONIAN (CPHF). EXTERN (SCF). extract_cluster_indexing() in module molutil. extract_clusters() in module molutil. extract_fragments() LibmintsMolecule method. extract_sowreap_from_output() in module p4util.procutil. extract_subsets() LibmintsMolecule method. extrapolation schemes. F. FAIL_ON_M",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b5/genindex.html:19533,energy,energy,19533,psi4manual/4.0b5/genindex.html,https://psicode.org,https://psicode.org/psi4manual/4.0b5/genindex.html,1,['energy'],['energy']
Energy Efficiency," (and check for stage_basis and stage_scheme keywords) and compute; that stage in defining the CBS energy.; The cbs() function requires, at a minimum, name='scf' and scf_basis; keywords to be specified for reference-step only jobs and name and; corl_basis keywords for correlated jobs.; The following energy methods have been set up for cbs(). scf; hf; mp2; mp2.5; mp3; mp4(sdq); mp4; mpn. omp2; omp2.5; omp3; olccd; lccd; lccsd; cepa(0); cepa(1). cepa(3); acpf; aqcc; qcisd; cc2; ccsd; fno-ccsd; bccd. cc3; qcisd(t); ccsd(t); fno-ccsd(t); bccd(t); cisd; cisdt. cisdtq; cin; fci; mrccsd; mrccsd(t); mrccsdt; mrccsdt(q). Parameters:. name (str) – 'scf' || 'ccsd' || etc.; First argument, usually unlabeled. Indicates the computational method; for the correlation energy, unless only reference step to be performed,; in which case should be 'scf'. Overruled if stage_wfn keywords supplied. scf_wfn (str) – \(\Rightarrow\) 'scf' \(\Leftarrow\) || 'c4-scf' || etc.; Indicates the energy method for which the reference energy is to be; obtained. Generally unnecessary, as ‘scf’ is the scf in PSI4 but; can be used to direct lone scf components to run in PSI4 or Cfour; in a mixed-program composite method. corl_wfn (str) – 'mp2' || 'ccsd(t)' || etc.; Indicates the energy method for which the correlation energy is to be; obtained. Can also be specified with name or as the unlabeled; first argument to the function. delta_wfn (str) – 'ccsd' || 'ccsd(t)' || etc.; Indicates the (superior) energy method for which a delta correction; to the correlation energy is to be obtained. delta_wfn_lesser (str) – \(\Rightarrow\) corl_wfn \(\Leftarrow\) || 'mp2' || etc.; Indicates the inferior energy method for which a delta correction; to the correlation energy is to be obtained. delta2_wfn (str) – 'ccsd' || 'ccsd(t)' || etc.; Indicates the (superior) energy method for which a second delta correction; to the correlation energy is to be obtained. delta2_wfn_lesser (str) – \(\Rightarrow\) delta_wfn \(\Leftarro",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/api/psi4.driver.cbs.html:5341,energy,energy,5341,psi4manual/1.7.x/api/psi4.driver.cbs.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/api/psi4.driver.cbs.html,16,['energy'],['energy']
Energy Efficiency," (and check for stage_basis and stage_scheme keywords) and compute; that stage in defining the CBS energy.; The cbs() function requires, at a minimum, name='scf' and scf_basis; keywords to be specified for reference-step only jobs and name and; corl_basis keywords for correlated jobs.; The following energy methods have been set up for cbs(). scf; hf; mp2; mp2.5; mp3; mp4(sdq); mp4; mpn. omp2; omp2.5; omp3; olccd; lccd; lccsd; cepa(0); cepa(1). cepa(3); acpf; aqcc; qcisd; cc2; ccsd; fno-ccsd; bccd. cc3; qcisd(t); ccsd(t); fno-ccsd(t); bccd(t); cisd; cisdt. cisdtq; cin; fci; mrccsd; mrccsd(t); mrccsdt; mrccsdt(q). Parameters:; name (str) – 'scf' || 'ccsd' || etc.; First argument, usually unlabeled. Indicates the computational method; for the correlation energy, unless only reference step to be performed,; in which case should be 'scf'. Overruled if stage_wfn keywords supplied. scf_wfn (str) – \(\Rightarrow\) 'scf' \(\Leftarrow\) || 'c4-scf' || etc.; Indicates the energy method for which the reference energy is to be; obtained. Generally unnecessary, as ‘scf’ is the scf in PSI4 but; can be used to direct lone scf components to run in PSI4 or Cfour; in a mixed-program composite method. corl_wfn (str) – 'mp2' || 'ccsd(t)' || etc.; Indicates the energy method for which the correlation energy is to be; obtained. Can also be specified with name or as the unlabeled; first argument to the function. delta_wfn (str) – 'ccsd' || 'ccsd(t)' || etc.; Indicates the (superior) energy method for which a delta correction; to the correlation energy is to be obtained. delta_wfn_lesser (str) – \(\Rightarrow\) corl_wfn \(\Leftarrow\) || 'mp2' || etc.; Indicates the inferior energy method for which a delta correction; to the correlation energy is to be obtained. delta2_wfn (str) – 'ccsd' || 'ccsd(t)' || etc.; Indicates the (superior) energy method for which a second delta correction; to the correlation energy is to be obtained. delta2_wfn_lesser (str) – \(\Rightarrow\) delta_wfn \(\Leftarro",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/api/psi4.driver.cbs-1.html:5336,energy,energy,5336,psi4manual/1.3.2/api/psi4.driver.cbs-1.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/api/psi4.driver.cbs-1.html,8,['energy'],['energy']
Energy Efficiency," (by comparison to castup3) that output file doesn’t depend on options (scf_type) being set global or local. This input uses global. cc37; CC2(UHF)/cc-pVDZ energy of H2O+. omp2-1; OMP2 cc-pVDZ energy for the H2O molecule. psimrcc-ccsd_t-4; Mk-MRCCSD(T) single point. O$_3` state described using the Ms = 0 component of the singlet. Uses TCSCF orbitals. gibbs; Test Gibbs free energies at 298 K of N2, H2O, and CH4. dft-pbe0-2; Internal match to psi4, test to match to literature values in litref.in/litref.out. zaptn-nh2; ZAPT(n)/6-31G NH2 Energy Point, with n=2-25. cc5; RHF CCSD(T) aug-cc-pvtz frozen-core energy of C4NH4 Anion. mints1; Symmetry tests for a range of molecules. This doesn’t actually compute any energies, but serves as an example of the many ways to specify geometries in Psi4. props2; DF-SCF cc-pVDZ of benzene-hydronium ion, scanning the dissociation coordinate with Python’s built-in loop mechanism. The geometry is specified by a Z-matrix with dummy atoms, fixed parameters, updated parameters, and separate charge/multiplicity specifiers for each monomer. One-electron properties computed for dimer and one monomer. mints5; Tests to determine full point group symmetry. Currently, these only matter for the rotational symmetry number in thermodynamic computations. omp3-1; OMP3 cc-pVDZ energy for the H2O molecule. tu5-sapt; Example SAPT computation for ethene*ethine (i.e., ethylene*acetylene), test case 16 from the S22 database. dcft1; DCFT-06 calculation for the He dimer. This performs a simultaneous update of the orbitals and cumulant, using DIIS extrapolation. Four-virtual integrals are handled in the MO Basis. Previous topic; Test Suite and Sample Inputs; Next topic; Basis Sets by Element; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; Test Suite and Sample Inputs ». © Copyright 2012, The Psi4 Project.; Last updated",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b3/autodoc_testsuite-1.html:19889,charge,charge,19889,psi4manual/4.0b3/autodoc_testsuite-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b3/autodoc_testsuite-1.html,2,['charge'],['charge']
Energy Efficiency," (ce_mp2); tables += """""" MP2.5 correlation energy: %16.8f\n"""""" % (ce_mp25); tables += """""" MP3 correlation energy: %16.8f\n"""""" % (ce_mp3); PsiMod.print_out(tables). return e_mp25. # A direct translation of a plugin input file into a function call. Function calls are the only; # way to call plugins in sow/reap mode for db(), opt(), etc. This isn't best practices; # but is an example of what to do for a more complicated procedure where different options ; # are set for different qc steps.; [docs]def run_plugin_omega(name, **kwargs):; r""""""Function encoding sequence of PSI module and plugin calls, as well; as typical options, to access Rob Parrish's omega plugin. >>> energy('plugin_omega'). """"""; lowername = name.lower(); kwargs = kwargs_lower(kwargs). plugfile = PsiMod.Process.environment[""PSIDATADIR""] + ""/../tests/plugin_omega/plugin_omega.so""; PsiMod.plugin_load(""%s"" % (plugfile)). PsiMod.set_global_option('BASIS', 'AUG-CC-PVDZ'); PsiMod.set_global_option('DF_BASIS_SCF', 'AUG-CC-PVDZ-RI'); PsiMod.set_global_option('REFERENCE', 'UHF'); PsiMod.set_global_option('SCF_TYPE', 'DF'); energy('scf', **kwargs). PsiMod.set_global_option('dft_functional', 'wB97'); PsiMod.set_global_option('dft_order_spherical', 25); PsiMod.set_global_option('dft_num_radial', 35); PsiMod.set_global_option('omega_procedure', 'ip'); PsiMod.set_global_option('maxiter', 50); PsiMod.set_global_option('d_convergence', 5); PsiMod.set_global_option('e_convergence', 7); PsiMod.plugin(""plugin_omega.so""). return PsiMod.get_variable('SCF TOTAL ENERGY'). # Integration with driver routines; procedures['energy']['mp2.5'] = run_mp2_5; procedures['energy']['sherrillgroup_gold_standard'] = sherrillgroup_gold_standard; procedures['energy']['plugin_omega'] = run_plugin_omega. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    ; PSI4 [beta3] » ; Module code ». © Copyright 2012, The Psi4 Project.; Last updated on Apr 05, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b3/_modules/aliases.html:4836,energy,energy,4836,psi4manual/4.0b3/_modules/aliases.html,https://psicode.org,https://psicode.org/psi4manual/4.0b3/_modules/aliases.html,4,['energy'],['energy']
Energy Efficiency," (false) (optional). Examples. Molden file with the Kohn-Sham orbitals of a DFT calculation.; >>> E, wfn = energy('b3lyp', return_wfn=True); >>> molden(wfn, 'mycalc.molden'). Molden file for CI/MCSCF computation using NO roots.; Any method returning a CIWavefunction object will work: detci,; fci, casscf, etc. The first two arguments of get_opdm can be; set to n, n where n => 0 selects the root to write out, provided; these roots were computed, see NUM_ROOTS. The; third argument controls the spin (""A"", ""B"" or ""SUM"") and the final; boolean option determines whether inactive orbitals are included.; >>> E, wfn = energy('detci', return_wfn=True); >>> molden(wfn, 'no_root1.molden', density_a=wfn.get_opdm(0, 0, ""A"", True)). The following produces an INCORRECT Molden file, because the; molden function needs orbitals in the MO basis (which are internally; converted and written to the Molden file in the AO basis). The correct; usage is given in the next point.; >>> E, wfn = energy('ccsd', return_wfn=True); >>> molden(wfn, 'ccsd_no.molden', density_a=wfn.Da()). Molden file with the natural orbitals of the ground-state 1RDM of a; Post-HF calculation. Note the required transformation of Da (SO->MO).; >>> E, wfn = properties('ccsd', return_wfn=True); >>> Da_so = wfn.Da(); >>> SCa = core.doublet(wfn.S(), wfn.Ca(), False, False); >>> Da_mo = core.triplet(SCa, Da_so, SCa, True, False, False); >>> molden(wfn, 'ccsd_no.molden', density_a=Da_mo). Options¶. MOLDEN_WRITE¶. Do write a MOLDEN output file? If so, the filename will end in .molden, and the prefix is determined by WRITER_FILE_LABEL (if set), or else by the name of the output file plus the name of the current molecule. Type: boolean; Default: false. WRITER_FILE_LABEL¶. Base filename for text files written by PSI, such as the MOLDEN output file, the Hessian file, the internal coordinate file, etc. Use the add_str_i function to make this string case sensitive. Type: string; Default: No Default. MOLDEN_WITH_VIRTUAL¶. Write all the ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/molden-1.html:3243,energy,energy,3243,psi4manual/1.4.0/molden-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/molden-1.html,5,['energy'],['energy']
Energy Efficiency," (here, let’s; consider CCSD(T)), and it needs to know what’s monomer A and what’s; monomer B. This last issue of specifying the monomers separately was; already dealt with in the previous SAPT example, where we saw that two; dashes in the psi4.geometry() string can be used to separate; monomers.; So, we’re going to do counterpoise-corrected CCSD(T) energies for; Ne\(_2\) at a series of different interatomic distances. And let’s; print out a table of the interatomic distances we’ve considered, and the; CP-corrected CCSD(T) interaction energies (in kcal/mol) at each; geometry:. In [9]:. #! Example potential energy surface scan and CP-correction for Ne2. ne2_geometry = """"""; Ne; --; Ne 1 {0}; """""". Rvals = [2.5, 3.0, 4.0]. psi4.set_options({'freeze_core': 'true'}). # Initialize a blank dictionary of counterpoise corrected energies; # (Need this for the syntax below to work). ecp = {}. for R in Rvals:; ne2 = psi4.geometry(ne2_geometry.format(R)); ecp[R] = psi4.energy('ccsd(t)/aug-cc-pvdz', bsse_type='cp', molecule=ne2). # Prints to screen; print(""CP-corrected CCSD(T)/aug-cc-pVDZ Interaction Energies\n\n""); print("" R [Ang] E_int [kcal/mol] ""); print(""---------------------------------------------------------""); for R in Rvals:; e = ecp[R] * psi4.constants.hartree2kcalmol; print("" {:3.1f} {:1.6f}"".format(R, e)). # Prints to output.dat; psi4.core.print_out(""CP-corrected CCSD(T)/aug-cc-pVDZ Interaction Energies\n\n""); psi4.core.print_out("" R [Ang] E_int [kcal/mol] \n""); psi4.core.print_out(""---------------------------------------------------------\n""); for R in Rvals:; e = ecp[R] * psi4.constants.hartree2kcalmol; psi4.core.print_out("" {:3.1f} {:1.6f}\n"".format(R, e)). CP-corrected CCSD(T)/aug-cc-pVDZ Interaction Energies. R [Ang] E_int [kcal/mol]; ---------------------------------------------------------; 2.5 0.758605; 3.0 0.015968; 4.0 -0.016215. First, you can see the geometry string ne2_geometry has a two dashes; to separate the monomers from each other. Also note we’ve us",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/psiapi-1.html:19198,energy,energy,19198,psi4manual/1.1.0/psiapi-1.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/psiapi-1.html,4,['energy'],['energy']
Energy Efficiency," (i.e., ethylene*acetylene), test case 16 from the S22 database. cc24; Single point gradient of 1-2B1 state of H2O+ with EOM-CCSD. psimrcc-fd-freq2; Mk-MRCCSD frequencies. \(^1A_1\) O$_3` state described using the Ms = 0 component of the singlet. Uses TCSCF orbitals. cc1; RHF-CCSD 6-31G** all-electron optimization of the H2O molecule. remp-energy1; integral conventional REMP/cc-pVDZ energies for the H2O molecule. results were independently verified against the initial wavels implementation. scf-hess4; DF SCF 6-31G UHFl vs RHF test Tests DF UHF hessian code for Ca = Cb. cc33; CC3(UHF)/cc-pVDZ H2O \(R_e\) geom from Olsen et al., JCP 104, 8007 (1996). olccd-freq1; OLCCD cc-pVDZ freqs for C2H2. cc4a; RHF-CCSD(T) cc-pVQZ frozen-core energy of the BH molecule, with Cartesian input. This version tests the FROZEN_DOCC option explicitly. scf-auto-cholesky; Cholesky filter a complete basis. tdscf-5; td-camb3lyp with DiskDF and method/basis specification. sapt-exch-ind-inf; SAPT(DFT) aug-cc-pVDZ interaction energy between Ne and Ar atoms. fnocc7; Test fnocc with linear dependencies. scf-bz2; Benzene Dimer Out-of-Core HF/cc-pVDZ. linK-1; RHF Linear Exchange Algorithm test for water. density-screen-1; RHF Density Matrix based-Integral Screening Test for water. mbis-5; MBIS calculation on ZnO. cc13d; Tests analytic CC2 gradients. opt5; 6-31G** UHF CH2 3B1 optimization. Uses a Z-Matrix with dummy atoms, just for demo and testing purposes. fd-freq-gradient-large; SCF DZ finite difference frequencies by gradients for C4NH4. scf-level-shift-uhf; SCF level shift on a UHF computation. frac; Carbon/UHF Fractionally-Occupied SCF Test Case. dft-custom-mgga; updated dldf reference to new BraggSlater radii Dispersionless density functional (dlDF+D) internal match to Psi4 Extensive testing has been done to match supplemental info of Szalewicz et. al., Phys. Rev. Lett., 103, 263201 (2009) and Szalewicz et. al., J. Phys. Chem. Lett., 1, 550-555 (2010). dft-grad-meta; meta-GGA gradients of water",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/autodoc_testsuite_corepsi4.html:45541,energy,energy,45541,psi4manual/1.8.x/autodoc_testsuite_corepsi4.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/autodoc_testsuite_corepsi4.html,2,['energy'],['energy']
Energy Efficiency," (in Cotton order) so a user can specify the number of retained natural orbitals rather than determining them with OCC_TOLERANCE. This keyword overrides OCC_TOLERANCE and OCC_PERCENTAGE. Type: array; Default: No Default. ADD_AUXILIARY_BONDS (OPTKING); OPTKING — Do add bond coordinates at nearby atoms for non-bonded systems?. Type: boolean; Default: true. AEL (CCDENSITY); CCDENSITY (Expert) — Do compute the approximate excitation level? See Stanton and Bartlett, JCP, 98, 1993, 7034. Type: boolean; Default: false. AIO_CPHF (SAPT); SAPT — Do use asynchronous disk I/O in the solution of the CPHF equations? Use may speed up the computation slightly at the cost of spawning an additional thread. Type: boolean; Default: false. AIO_DF_INTS (SAPT); SAPT — Do use asynchronous disk I/O in the formation of the DF integrals? Use may speed up the computation slightly at the cost of spawning an additional thread. Type: boolean; Default: false. ALGORITHM (DCFT); DCFT — Algorithm to use for the density cumulant and orbital updates in the DCFT energy computation. Two-step algorithm is usually more efficient for small systems, but for large systems simultaneous algorithm (default) is recommended. If convergence problems are encountered (especially for highly symmetric systems) QC algorithm can be used. Type: string; Possible Values: TWOSTEP, SIMULTANEOUS, QC; Default: SIMULTANEOUS. ANALYZE (CCENERGY); CCENERGY — Do analyze T2 amplitudes. Type: boolean; Default: false. ANALYZE (CCRESPONSE); CCRESPONSE — Do analyze X2 amplitudes. Type: boolean; Default: false. AO_BASIS (CCDENSITY); CCDENSITY — The algorithm to use for the \(\left\langle VV||VV\right \rangle\) terms. Type: string; Possible Values: NONE, DISK, DIRECT; Default: NONE. AO_BASIS (CCENERGY); CCENERGY (Expert) — The algorithm to use for the \(\left\langle VV||VV\right\rangle\) terms If AO_BASIS is NONE, the MO-basis integrals will be used; if AO_BASIS is DISK, the AO-basis integrals stored on disk will be used; if AO_BASIS is DIR",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/autodoc_glossary_options_c-1.html:2006,energy,energy,2006,psi4manual/1.2.1/autodoc_glossary_options_c-1.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/autodoc_glossary_options_c-1.html,6,['energy'],['energy']
Energy Efficiency," (in Cotton order) so a user can specify the number of retained natural orbitals rather than determining them with OCC_TOLERANCE. This keyword overrides OCC_TOLERANCE and OCC_PERCENTAGE. Type: array; Default: No Default. ADD_AUXILIARY_BONDS (OPTKING); OPTKING — Do add bond coordinates at nearby atoms for non-bonded systems?. Type: boolean; Default: true. AEL (CCDENSITY); CCDENSITY (Expert) — Do compute the approximate excitation level? See Stanton and Bartlett, JCP, 98, 1993, 7034. Type: boolean; Default: false. AIO_CPHF (SAPT); SAPT — Do use asynchronous disk I/O in the solution of the CPHF equations? Use may speed up the computation slightly at the cost of spawning an additional thread. Type: boolean; Default: false. AIO_DF_INTS (SAPT); SAPT — Do use asynchronous disk I/O in the formation of the DF integrals? Use may speed up the computation slightly at the cost of spawning an additional thread. Type: boolean; Default: false. ALGORITHM (DCFT); DCFT — Algorithm to use for the density cumulant and orbital updates in the DCFT energy computation. Two-step algorithm is usually more efficient for small systems, but for large systems simultaneous algorithm (default) is recommended. If convergence problems are encountered (especially for highly symmetric systems) QC algorithm can be used. Type: string; Possible Values: TWOSTEP, SIMULTANEOUS, QC; Default: SIMULTANEOUS. ANALYZE (CCENERGY); CCENERGY — Do analyze T2 amplitudes. Type: boolean; Default: false. ANALYZE (CCRESPONSE); CCRESPONSE — Do analyze X2 amplitudes. Type: boolean; Default: false. AO_BASIS (CCDENSITY); CCDENSITY — The algorithm to use for the terms. Type: string; Possible Values: NONE, DISK, DIRECT; Default: NONE. AO_BASIS (CCENERGY); CCENERGY (Expert) — The algorithm to use for the terms If AO_BASIS is NONE, the MO-basis integrals will be used; if AO_BASIS is DISK, the AO-basis integrals stored on disk will be used; if AO_BASIS is DIRECT, the AO-basis integrals will be computed on the fly as necessary. NB: T",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/autodoc_glossary_options_c-1.html:2056,energy,energy,2056,psi4manual/1.0.0/autodoc_glossary_options_c-1.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/autodoc_glossary_options_c-1.html,2,['energy'],['energy']
Energy Efficiency," (in module proc). run_dft() (in module proc). run_dft_gradient() (in module proc). run_eom_cc() (in module proc). run_eom_cc_gradient() (in module proc). run_libfock() (in module proc). run_mcscf() (in module proc). run_mp2() (in module proc). run_mp2_5() (in module aliases). run_mp2_gradient() (in module proc). run_mp2c() (in module proc). run_mrcc() (in module proc). run_omp2() (in module proc). run_plugin_omega() (in module aliases). run_property() (in module proc). run_psimrcc() (in module proc). run_psimrcc_scf() (in module proc). run_sapt() (in module proc). run_sapt_ct() (in module proc). run_scf() (in module proc). run_scf_gradient() (in module proc). run_scf_property() (in module proc). S. S (DETCI). S22 (module), [1]. S22by5 (module), [1]. S66 (module), [1]. S_ORTHOGONALIZATION (SCF). S_SQUARED (DETCI). S_TOLERANCE (SCF). SAD_CHOL_TOLERANCE (SCF). SAD_D_CONVERGENCE (SCF). SAD_E_CONVERGENCE (SCF). SAD_F_MIX_START (SCF). SAD_MAXITER (SCF). SAD_PRINT (SCF). SAPT. SAPT0. charge-transfer. higher-order. output. theory. SAPT (SCF). SAPT_LEVEL (SAPT). SAPT_MEM_CHECK (SAPT). SAPT_MEM_SAFETY (SAPT). SAPT_OS_SCALE (SAPT). SAPT_SS_SCALE (SAPT). SAPTDISPENERGY. SAPTELSTENERGY. SAPTENERGY. SAPTEXCHENERGY. SAPTINDENERGY. SAPTSAPT0ENERGY. SAPTSAPT2+(3)ENERGY. SAPTSAPT2+3ENERGY. SAPTSAPT2+ENERGY. SAPTSAPT2ENERGY. save() (Table method). SAVE_JK (SCF). SCALE (STABILITY). scale() (Table method). SCF. theory. scf_helper() (in module proc). SCF_MAXITER (DCFT). SCF_MEM_SAFETY_FACTOR (SCF). SCF_TYPE (CPHF). (JK), [1]. (SCF). scf_xtpl_helgaker_2() (in module wrappers). scf_xtpl_helgaker_3() (in module wrappers). SCFTOTALENERGY. SCHMIDT_ADD_RESIDUAL_TOLERANCE (CCEOM). SCHWARZ_CUTOFF (CPHF). (JK), [1]. scratch files. SCREEN_INTS (LMP2). SCS (LMP2). (MP2). SCS_CCSD (CCENERGY). SCS_MP2 (CCENERGY). SCS_N (LMP2). (MP2). SCSN_MP2 (CCENERGY). SEKINO (CCLAMBDA). (CCRESPONSE). SEM_MAX (PLUGIN_DFADC), [1]. SEM_MAXITER (ADC). SEMICANONICAL (CCENERGY). (CCEOM). (CCSORT). (CCTRIPLES). (PLUGIN_C",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b2/genindex.html:25209,charge,charge-transfer,25209,psi4manual/4.0b2/genindex.html,https://psicode.org,https://psicode.org/psi4manual/4.0b2/genindex.html,1,['charge'],['charge-transfer']
Energy Efficiency," (ptype == 'hessian') and (method_name in procedures['hessian']):; dertype = 2; # Will need special logic if we ever have managed Hessians; elif method_name in procedures['gradient']:; dertype = 1; if procedures['gradient'][method_name].__name__.startswith('select_'):; try:; procedures['gradient'][method_name](method_name, probe=True); except ManagedMethodError:; dertype = 0; elif method_name in procedures['energy']:; dertype = 0; else:; # Quick sanity check. Only *should* be able to be None or int, but hey, kids today...; if not isinstance(user_dertype, int):; raise ValidationError(""_find_derivative_type: user_dertype should only be None or int!""); dertype = user_dertype. if (core.get_global_option('INTEGRAL_PACKAGE') == 'ERD') and (dertype != 0):; raise ValidationError('INTEGRAL_PACKAGE ERD does not play nicely with derivatives, so stopping.'). # Summary validation; if (dertype == 2) and (method_name in procedures['hessian']):; pass; elif (dertype == 1) and (method_name in procedures['gradient']):; pass; elif (dertype == 0) and (method_name in procedures['energy']):; pass; else:; alternatives = ''; alt_method_name = p4util.text.find_approximate_string_matches(method_name, procedures['energy'].keys(), 2); if len(alt_method_name) > 0:; alternatives = """""" Did you mean? %s"""""" % (' '.join(alt_method_name)). raise ValidationError(""""""Derivative method 'name' %s and derivative level 'dertype' %s are not available.%s""""""; % (method_name, str(dertype), alternatives)). return dertype. [docs]def energy(name, **kwargs):; r""""""Function to compute the single-point electronic energy. :returns: *float* |w--w| Total electronic energy in Hartrees. SAPT & EFP return interaction energy. :returns: (*float*, :py:class:`~psi4.core.Wavefunction`) |w--w| energy and wavefunction when **return_wfn** specified. :PSI variables:. .. hlist::; :columns: 1. * :psivar:`CURRENT ENERGY <CURRENTENERGY>`; * :psivar:`CURRENT REFERENCE ENERGY <CURRENTREFERENCEENERGY>`; * :psivar:`CURRENT CORRELATION ENERGY ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/_modules/psi4/driver/driver.html:3389,energy,energy,3389,psi4manual/1.1.0/_modules/psi4/driver/driver.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/_modules/psi4/driver/driver.html,1,['energy'],['energy']
Energy Efficiency," (self.memory). # format molecule, incl. charges and dummy atoms; text += self.molecule.format_molecule_for_molpro(). # format global convergence directions; text += self.format_global_parameters(). # format castup directions; if self.castup is True:; text += """"""basis=sto-3g\n""""""; text += """"""rhf\n""""""; text += '\n'. # format basis set; text += self.format_basis(). # format method; for line in qcmtdIN[self.method]:; text += """"""%s\n"""""" % (line); text += """"""show[1,20f20.12],ee*,ce*,te*\n""""""; text += """"""show[1,60f20.12],_E*\n""""""; text += '\n'. return text. qcmtdIN = {; 'ccsd(t)-f12': [; 'rhf',; 'eehf=energy',; 'ccsd(t)-f12,df_basis=mp2fit,df_basis_exch=jkfitb,ri_basis=jkfitb',; 'eemp2=emp2',; 'cemp2=eemp2-eehf',; 'eemp3=emp3',; 'cemp3=eemp3-eehf',; 'eeccsd=energc',; 'ceccsd=eeccsd-eehf',; 'eeccsdt=energy',; 'ceccsdt=eeccsdt-eehf',; 'temp2=emp2_trip',; 'teccsd=ectrip'],. 'ccsd(t)': [; 'rhf',; 'eehf=energy',; 'ccsd(t)',; 'eemp2=emp2',; 'cemp2=eemp2-eehf',; 'eemp3=emp3',; 'cemp3=eemp3-eehf',; 'eeccsd=energc',; 'ceccsd=eeccsd-eehf',; 'eeccsdt=energy',; 'ceccsdt=eeccsdt-eehf',; 'temp2=emp2_trip',; 'teccsd=ectrip'],. 'mp3': [; 'gdirect',; 'rhf',; 'eehf=energy',; 'mp3',; 'eemp2=emp2',; 'eemp3=emp3',; 'eemp25=0.5*(eemp2+eemp3)',; 'cemp2=eemp2-eehf',; 'cemp3=eemp3-eehf',; 'cemp25=eemp25-eehf',; 'temp2=emp2_trip',; 'temp3=ectrip'],. 'mp2': [; 'gdirect',; 'rhf',; 'eehf=energy',; 'mp2',; 'eemp2=emp2',; 'cemp2=eemp2-eehf',; 'temp2=emp2_trip'],. 'df-hf-mp2': [; 'gdirect',; '{df-hf,basis=jkfit}',; 'eehf=energy',; 'mp2',; 'eemp2=emp2',; 'cemp2=eemp2-eehf',; 'temp2=emp2_trip'],. 'hf-df-mp2': [; 'gdirect',; 'rhf',; 'eehf=energy',; '{df-mp2,basis_mp2=mp2fit}',; 'eemp2=emp2',; 'cemp2=eemp2-eehf',; 'temp2=emp2_trip'],. 'hf': [; 'rhf',; 'eehf=energy'],. 'mp2-f12': [; 'gdirect',; 'rhf',; 'eehf=energy',; 'mp2-f12',; 'eemp2=emp2',; 'cemp2=eemp2-eehf',; 'temp2=emp2_trip'],. 'df-mp2-f12': [; 'gdirect',; #'rhf',; '{df-hf,basis=jkfit}',; 'eehf=energy',; #'{df-mp2-f12,df_basis=mp2fit,df_basis_exch=jk",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/_modules/qcdb/molpro.html:4076,energy,energy,4076,psi4manual/1.0.0/_modules/qcdb/molpro.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/_modules/qcdb/molpro.html,2,['energy'],['energy']
Energy Efficiency," (str)arg2, (str)arg3, (str)arg4) -> OrbitalSpace :; | docstring; | ; | C++ signature :; | N3psi12OrbitalSpaceE beta_orbital_space(N3psi12WavefunctionE {lvalue},Ss,Ss,Ss); | ; | compute_energy(...); | compute_energy( (Wavefunction)arg1) -> float :; | docstring; | ; | C++ signature :; | d compute_energy(N3psi12WavefunctionE {lvalue}); | ; | compute_gradient(...); | compute_gradient( (Wavefunction)arg1) -> Matrix :; | docstring; | ; | C++ signature :; | N5boost10shared_ptrIN3psi6MatrixEEE compute_gradient(N3psi12WavefunctionE {lvalue}); | ; | deep_copy(...); | deep_copy( (Wavefunction)arg1, (Wavefunction)arg2) -> None :; | docstring; | ; | C++ signature :; | void deep_copy(N3psi12WavefunctionE {lvalue},N5boost10shared_ptrIN3psi12WavefunctionEEE); | ; | doccpi(...); | doccpi( (Wavefunction)arg1) -> Dimension :; | docstring; | ; | C++ signature :; | N3psi9DimensionE doccpi(N3psi12WavefunctionE {lvalue}); | ; | energy(...); | energy( (Wavefunction)arg1) -> float :; | docstring; | ; | C++ signature :; | d energy(N3psi12WavefunctionE {lvalue}); | ; | epsilon_a(...); | epsilon_a( (Wavefunction)arg1) -> Vector :; | docstring; | ; | C++ signature :; | N5boost10shared_ptrIN3psi6VectorEEE epsilon_a(N3psi12WavefunctionE {lvalue}); | ; | epsilon_a_subset(...); | epsilon_a_subset( (Wavefunction)arg1, (str)arg2, (str)arg3) -> Vector :; | docstring; | ; | C++ signature :; | N5boost10shared_ptrIN3psi6VectorEEE epsilon_a_subset(N3psi12WavefunctionE {lvalue},Ss,Ss); | ; | epsilon_b(...); | epsilon_b( (Wavefunction)arg1) -> Vector :; | docstring; | ; | C++ signature :; | N5boost10shared_ptrIN3psi6VectorEEE epsilon_b(N3psi12WavefunctionE {lvalue}); | ; | epsilon_b_subset(...); | epsilon_b_subset( (Wavefunction)arg1, (str)arg2, (str)arg3) -> Vector :; | docstring; | ; | C++ signature :; | N5boost10shared_ptrIN3psi6VectorEEE epsilon_b_subset(N3psi12WavefunctionE {lvalue},Ss,Ss); | ; | frequencies(...); | frequencies( (Wavefunction)arg1) -> Vector :; | docstring; | ; | C++ signature :; | N5b",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/autodoc_psimod-1.html:397829,energy,energy,397829,psi4manual/1.0.0/autodoc_psimod-1.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/autodoc_psimod-1.html,24,['energy'],['energy']
Energy Efficiency," (str)arg3, (str)arg4) -> None :; | Sets basis set arg3 to all atoms with label (e.g., H4) arg2; | ; | set_basis_by_number(...); | set_basis_by_number( (Molecule)arg1, (int)arg2, (str)arg3, (str)arg4) -> None :; | Sets basis set arg3 to atom number (1-indexed, incl. dummies) arg2; | ; | set_basis_by_symbol(...); | set_basis_by_symbol( (Molecule)arg1, (str)arg2, (str)arg3, (str)arg4) -> None :; | Sets basis set arg3 to all atoms with symbol (e.g., H) arg2; | ; | set_geometry(...); | set_geometry( (Molecule)arg1, (Matrix)arg2) -> None :; | Sets the geometry, given a (Natom X 3) matrix arg2 of coordinates (in Bohr); | ; | set_ghost_fragment(...); | set_ghost_fragment( (Molecule)arg1, (int)arg2) -> None :; | Sets the specified fragment arg2 to be Ghost; | ; | set_ghost_fragments(...); | set_ghost_fragments( (Molecule)arg1, (list)arg2) -> None :; | Sets the specified list arg2 of fragments to be Ghost; | ; | set_molecular_charge(...); | set_molecular_charge( (Molecule)arg1, (int)arg2) -> None :; | Sets the molecular charge; | ; | set_multiplicity(...); | set_multiplicity( (Molecule)arg1, (int)arg2) -> None :; | Sets the multiplicity (defined as 2Ms + 1); | ; | set_name(...); | set_name( (Molecule)arg1, (str)arg2) -> None :; | Sets molecule name; | ; | set_point_group(...); | set_point_group( (Molecule)arg1, (PointGroup)arg2) -> None :; | Sets the molecular point group to the point group object arg2; | ; | set_variable(...); | set_variable( (Molecule)arg1, (str)arg2, (float)arg3) -> None :; | Assigns the value arg3 to the variable arg2 in the list of geometry variables, then calls update_geometry(); | ; | symbol(...); | symbol( (Molecule)arg1, (int)arg2) -> str :; | Gets the cleaned up label of atom arg2 (C2 => C, H4 = H); | ; | symmetrize(...); | symmetrize( (Molecule)arg1, (float)arg2) -> None :; | Finds the highest point Abelian point group within the specified tolerance, and forces the geometry to have that symmetry.; | ; | translate(...); | translate( (Molecule)arg1,",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b4/psimod-1.html:60471,charge,charge,60471,psi4manual/4.0b4/psimod-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b4/psimod-1.html,4,['charge'],['charge']
Energy Efficiency," (str)arg3, (str)arg4) -> None :; | Sets basis set arg3 to all atoms with label (e.g., H4) arg2; | ; | set_basis_by_number(...); | set_basis_by_number( (Molecule)arg1, (int)arg2, (str)arg3, (str)arg4) -> None :; | Sets basis set arg3 to atom number (1-indexed, incl. dummies) arg2; | ; | set_basis_by_symbol(...); | set_basis_by_symbol( (Molecule)arg1, (str)arg2, (str)arg3, (str)arg4) -> None :; | Sets basis set arg3 to all atoms with symbol (e.g., H) arg2; | ; | set_geometry(...); | set_geometry( (Molecule)arg1, (Matrix)arg2) -> None :; | Sets the geometry, given a (Natom X 3) matrix arg2 of coordinates (in Bohr); | ; | set_ghost_fragment(...); | set_ghost_fragment( (Molecule)arg1, (int)arg2) -> None :; | Sets the specified fragment arg2 to be Ghost; | ; | set_ghost_fragments(...); | set_ghost_fragments( (Molecule)arg1, (list)arg2) -> None :; | Sets the specified list arg2 of fragments to be Ghost; | ; | set_molecular_charge(...); | set_molecular_charge( (Molecule)arg1, (int)arg2) -> None :; | Sets the molecular charge; | ; | set_multiplicity(...); | set_multiplicity( (Molecule)arg1, (int)arg2) -> None :; | Sets the multiplicity (defined as 2Ms + 1); | ; | set_name(...); | set_name( (Molecule)arg1, (str)arg2) -> None :; | Sets molecule name; | ; | set_point_group(...); | set_point_group( (Molecule)arg1, (PointGroup)arg2) -> None :; | Sets the molecular point group to the point group object arg2; | ; | set_variable(...); | set_variable( (Molecule)arg1, (str)arg2, (float)arg3) -> None :; | Assigns the value arg3 to the variable arg2 in the list of geometry variables, then calls update_geometry(); | ; | symbol(...); | symbol( (Molecule)arg1, (int)arg2) -> str :; | Gets the cleaned up label of atom arg2 (C2 => C, H4 = H); | ; | translate(...); | translate( (Molecule)arg1, (Vector3)arg2) -> None :; | Translates molecule by arg2; | ; | update_geometry(...); | update_geometry( (Molecule)arg1) -> None :; | Reevaluates the geometry with current variable values, orientation di",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b3/psimod-1.html:60300,charge,charge,60300,psi4manual/4.0b3/psimod-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b3/psimod-1.html,2,['charge'],['charge']
Energy Efficiency," (such as static or frequency-dependent polarizability,; or optical rotation angles) for some models. Excited states can; also be computed by the CC2 and CC3 models, or by EOM-CCSD. Table; CC Methods summarizes these capabilities. This section; describes how to carry out coupled cluster calculations within PSI4.; For higher-order coupled-cluster methods like CCSDT and CCSDTQ, PSI4; can interface to Kállay’s MRCC code (see MRCC). Current coupled cluster capabilities of PSI4. Method; Reference; Energy; Gradient; Exc. Energies; LR Props. CC2; RHF; Y; —; Y; Y. UHF; Y; —; Y; —. ROHF; Y; —; Y; —. CCSD; RHF; Y; Y; Y; Y. UHF; Y; Y; Y; —. ROHF; Y; Y; Y; —. CCSD(T); RHF; Y; —; n/a; n/a. UHF; Y; Y; n/a; n/a. ROHF; Y; —; n/a; n/a. CC3; RHF; Y; —; Y; —. UHF; Y; —; Y; —. ROHF; Y; —; Y; —. CCD; Brueckner; Y; N; N; N. CCD(T); Brueckner; Y; N; n/a; n/a. The following wavefunctions are currently recognized by PSI4 as arguments; to functions like energy(): 'ccsd', 'ccsd(t)', 'cc2',; 'cc3', 'bccd' (CCD with Brueckner orbitals), 'bccd(t)' (CCD(T) with; Brueckner orbitals), 'eom-ccsd', 'eom-cc2' (CC2 for excited states),; 'eom-cc3' (CC3 for excited states). Response properties can be obtained; by calling the function property() (instead of, for example, energy(),; e.g., property('ccsd'). There are many sample; coupled cluster inputs provided in psi4/samples. Basic Keywords¶; A complete list of keywords related to coupled-cluster computations is; provided in the appendices, with the majority of the relevant; keywords appearing in Appendix CCENERGY. For a standard ground-state; CCSD or CCSD(T) computation, the following keywords are common:. REFERENCE¶. Reference wavefunction type. Type: string; Possible Values: RHF, ROHF, UHF; Default: RHF. R_CONVERGENCE¶. Convergence criterion for wavefunction (change) in CC amplitude equations. Type: conv double; Default: 1e-7. MAXITER¶. Maximum number of iterations to solve the CC equations. Type: integer; Default: 50. BRUECKNER_ORBS_R_CONVERGENCE¶. Con",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b4/cc-1.html:3150,energy,energy,3150,psi4manual/4.0b4/cc-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b4/cc-1.html,2,['energy'],['energy']
Energy Efficiency," * B**2 / we) * ((1.05052209e-3*we*d3)/(np.sqrt(B * d2**3))+1.0); de = 4.0*B**3 / we**2. # B0 and r0 (plus re check using Be); B0 = B - ae / 2.0; r0 = np.sqrt(constants.h / (8.0 * np.pi**2 * mu * constants.c * B0)); recheck = np.sqrt(constants.h / (8.0 * np.pi**2 * mu * constants.c * B)); r0 /= angstrom_to_meter;; recheck /= angstrom_to_meter;. # Fundamental frequency nu; nu = we - 2.0 * wexe;; zpve_nu = 0.5 * we - 0.25 * wexe;. # Generate pretty pictures, if requested; if(plot_fit):; try:; import matplotlib.pyplot as plt; except ImportError:; msg = ""\n\tPlot not generated; matplotlib is not installed on this machine.\n\n""; print(msg); core.print_out(msg). # Correct the derivatives for the missing factorial prefactors; dvals = np.zeros(5); dvals[0:5] = derivs[0:5]; dvals[2] /= 2; dvals[3] /= 6; dvals[4] /= 24. # Default plot range, before considering energy levels; minE = np.min(energies); maxE = np.max(energies); minR = np.min(rvals); maxR = np.max(rvals). # Plot vibrational energy levels; we_au = we / constants.hartree2wavenumbers; wexe_au = wexe / constants.hartree2wavenumbers; coefs2 = [ dvals[2], dvals[1], dvals[0] ]; coefs4 = [ dvals[4], dvals[3], dvals[2], dvals[1], dvals[0] ]; for n in range(3):; Eharm = we_au*(n+0.5); Evpt2 = Eharm - wexe_au*(n+0.5)**2; coefs2[-1] = -Eharm; coefs4[-1] = -Evpt2; roots2 = np.roots(coefs2); roots4 = np.roots(coefs4); xvals2 = roots2 + re; xvals4 = np.choose(np.where(np.isreal(roots4)), roots4)[0].real + re; Eharm += dvals[0]; Evpt2 += dvals[0]; plt.plot(xvals2, [Eharm, Eharm], 'b', linewidth=1); plt.plot(xvals4, [Evpt2, Evpt2], 'g', linewidth=1); maxE = Eharm; maxR = np.max([xvals2,xvals4]); minR = np.min([xvals2,xvals4]). # Find ranges for the plot; dE = maxE - minE; minE -= 0.2*dE; maxE += 0.4*dE; dR = maxR - minR; minR -= 0.2*dR; maxR += 0.2*dR. # Generate the fitted PES; xpts = np.linspace(minR, maxR, 1000); xrel = xpts - re; xpows = xrel[:, None] ** range(5); fit2 = np.einsum('xd,d', xpows[:,0:3], dvals[0:3]); fit4 = np.e",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/_modules/psi4/driver/diatomic.html:7026,energy,energy,7026,psi4manual/1.3.2/_modules/psi4/driver/diatomic.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/_modules/psi4/driver/diatomic.html,2,['energy'],['energy']
Energy Efficiency," * scf; * df-scf; * mp2; * df-mp2; * cc2; * ccsd; * bccd; * cc3; * ccsd(t); * cisd; * cisdt; * cisdtq; * ci\ *n*; * fci. :type name: string; :param name: ``'scf'`` || ``'ccsd'`` || etc. First argument, usually unlabeled. Indicates the computational method; for the correlation energy, unless only reference step to be performed,; in which case should be ``'scf'``. Overruled if stage_wfn keywords supplied. :type corl_wfn: string; :param corl_wfn: ``'mp2'`` || ``'ccsd(t)'`` || etc. Indicates the energy method for which the correlation energy is to be; obtained. Can also be specified with ``name`` or as the unlabeled; first argument to the function. :type delta_wfn: string; :param delta_wfn: ``'ccsd'`` || ``'ccsd(t)'`` || etc. Indicates the (superior) energy method for which a delta correction; to the correlation energy is to be obtained. :type delta_wfn_lesser: string; :param delta_wfn_lesser: |dl| ``'mp2'`` |dr| || ``'ccsd'`` || etc. Indicates the inferior energy method for which a delta correction; to the correlation energy is to be obtained. :type delta2_wfn: string; :param delta2_wfn: ``'ccsd'`` || ``'ccsd(t)'`` || etc. Indicates the (superior) energy method for which a second delta correction; to the correlation energy is to be obtained. :type delta2_wfn_lesser: string; :param delta2_wfn_lesser: |dl| ``'mp2'`` |dr| || ``'ccsd(t)'`` || etc. Indicates the inferior energy method for which a second delta correction; to the correlation energy is to be obtained. * Basis Sets; Currently, the basis set set through ``set`` commands have no influence; on a cbs calculation. :type scf_basis: :ref:`basis string <apdx:basisElement>`; :param scf_basis: |dl| ``corl_basis`` |dr| || ``'cc-pV[TQ]Z'`` || ``'jun-cc-pv[tq5]z'`` || ``'6-31G*'`` || etc. Indicates the sequence of basis sets employed for the reference energy.; If any correlation method is specified, ``scf_basis`` can default; to ``corl_basis``. :type corl_basis: :ref:`basis string <apdx:basisElement>`; :param corl_basis: ``",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b3/_modules/wrappers.html:54915,energy,energy,54915,psi4manual/4.0b3/_modules/wrappers.html,https://psicode.org,https://psicode.org/psi4manual/4.0b3/_modules/wrappers.html,2,['energy'],['energy']
Energy Efficiency," * stage['d_coef']. if ptype == 'hessian' or hess_available:; if finalhessian is None:; finalhessian = np.zeros((3 * nat, 3 * nat)); hiloargs.update(_contract_scheme_orders(stage['d_need'], 'f_hessian')); stage['d_hessian'] = xtpl_procedures[stage['d_scheme']](**hiloargs); finalhessian += stage['d_hessian'] * stage['d_coef']. if dipole_available:; if finaldipole is None:; finaldipole = np.zeros((3)); hiloargs.update(_contract_scheme_orders(stage['d_need'], 'f_dipole')); stage['d_dipole'] = xtpl_procedures[stage['d_scheme']](**hiloargs); finaldipole += stage['d_dipole'] * stage['d_coef']. if dipder_available:; if finaldipder is None:; finaldipder = np.zeros((3 * nat, 3)); hiloargs.update(_contract_scheme_orders(stage['d_need'], 'f_dipder')); stage['d_dipder'] = xtpl_procedures[stage['d_scheme']](**hiloargs); finaldipder += stage['d_dipder'] * stage['d_coef']. cbs_results = {; 'ret_ptype': {; 'energy': finalenergy,; 'gradient': finalgradient,; 'hessian': finalhessian,; }[ptype],; 'energy': finalenergy,; 'gradient': finalgradient,; 'hessian': finalhessian,; 'dipole': finaldipole,; 'dipole gradient': finaldipder,; }. return cbs_results, GRAND_NEED. def _summary_table(metadata, TROVE, GRAND_NEED) -> str:; """"""Build string of results table"""""". delimit = ' ' + '-' * 105 + '\n'; blckfmt = """"""\n ==> {} <==\n\n""""""; headfmt = """""" {:>6} {:>20} {:1} {:26} {:>3} {:>16} {}\n""""""; linefmt = """""" {:>6} {:>20} {:1} {:27} {:2} {:16.8f} {}\n"""""". tables = ''; tables += blckfmt.format('Components'); tables += delimit. required = []; finalenergy = 0.0; for stage in GRAND_NEED:; finalenergy += stage['d_energy'] * stage['d_coef']; for lvl in stage['d_need'].values():; required.append((lvl['f_wfn'], lvl['f_basis'], lvl['f_options'])). tables += headfmt.format('', 'Method', '/', 'Basis', 'Rqd', 'Energy [Eh]', 'Variable'); tables += delimit; for job in TROVE:; star = ''; for mc in required:; if (job['f_wfn'], job['f_basis'], job['f_options']) == mc:; star = '*'; tables += linefmt.format('', job['",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/_modules/psi4/driver/driver_cbs.html:50088,energy,energy,50088,psi4manual/1.6.x/_modules/psi4/driver/driver_cbs.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/_modules/psi4/driver/driver_cbs.html,10,['energy'],['energy']
Energy Efficiency," **{; ""molecule"": self.molecule,; ""driver"": self.driver,; ""method"": job[""f_wfn""],; ""basis"": job[""f_basis""],; ""keywords"": keywords or {},; }); self.task_list.append(task). # logger.debug(""TASK\n"" + pp.pformat(task.dict())). def build_tasks(self, obj, **kwargs):; # permanently a dummy function; pass. def plan(self):; # uncalled function; return [t.plan() for t in self.task_list]. def compute(self, client: Optional[""FractalClient""] = None):; label = self.metameta['label']; instructions = ""\n"" + p4util.banner(f"" CBS Computations{':' + label if label else ''} "",; strNotOutfile=True) + ""\n""; logger.debug(instructions); core.print_out(instructions). with p4util.hold_options_state():; for t in reversed(self.task_list):; t.compute(client=client). def _prepare_results(self, client: Optional[""FractalClient""] = None):; results_list = [x.get_results(client=client) for x in self.task_list]. modules = [getattr(v.provenance, ""module"", None) for v in results_list]; if self.driver != ""energy"" and len(set(modules)) == 2 and modules.count(""scf"") == len(modules) / 2:; # signature of ""MP2 GRAD"" - ""HF GRAD"" implementation detail; # * avoid having post-scf single-method gradients/Hessians show up as ""(mixed)"" module just because an outright HF call in the jobs list; modules = set(modules) - {""scf""}; modules = list(set(modules)); modules = modules[0] if len(modules) == 1 else ""(mixed)"". # load results_list numbers into compute_list (task_list is AtomicComputer-s); for itask, mc in enumerate(self.compute_list):; task = results_list[itask]; response = task.return_result. if self.metameta['ptype'] == 'energy':; mc['f_energy'] = response. elif self.metameta['ptype'] == 'gradient':; mc['f_gradient'] = response; mc['f_energy'] = task.extras['qcvars']['CURRENT ENERGY']. elif self.metameta['ptype'] == 'hessian':; mc['f_hessian'] = response; mc['f_energy'] = task.extras['qcvars']['CURRENT ENERGY']; if 'CURRENT GRADIENT' in task.extras['qcvars']:; mc['f_gradient'] = task.extras['qcvars']['CURRENT GRA",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/_modules/psi4/driver/driver_cbs.html:55799,energy,energy,55799,psi4manual/1.6.x/_modules/psi4/driver/driver_cbs.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/_modules/psi4/driver/driver_cbs.html,1,['energy'],['energy']
Energy Efficiency," + ']' + post. return basisstring. [docs]def highest_1(**largs):; r""""""Scheme for total or correlation energies with a single basis or the highest; zeta-level among an array of bases. Used by :py:func:`~wrappers.complete_basis_set`. .. math:: E_{total}^X = E_{total}^X. """"""; energypiece = 0.0; functionname = sys._getframe().f_code.co_name; f_fields = ['f_wfn', 'f_portion', 'f_basis', 'f_zeta', 'f_energy']; [mode, NEED, wfnname, BSET, ZSET] = validate_scheme_args(functionname, **largs). if (mode == 'requisition'):. # Impose restrictions on zeta sequence; if (len(ZSET) == 0):; raise ValidationError('Call to \'%s\' not valid with \'%s\' basis sets.' % (functionname, len(ZSET))). # Return array that logs the requisite jobs; if (wfnname == 'scf'):; portion = 'tot'; else:; portion = 'corl'; NEED = {'HI': dict(zip(f_fields, [wfnname, portion, BSET[len(ZSET) - 1], ZSET[len(ZSET) - 1], 0.0]))}. return NEED. elif (mode == 'evaluate'):. # Extract required energies and zeta integers from array; # Compute extrapolated energy; energypiece = NEED['HI']['f_energy']. # Output string with extrapolation parameters; cbsscheme = ''; cbsscheme += """"""\n ==> %s <==\n\n"""""" % (functionname); if (NEED['HI']['f_wfn'] == 'scf'):; cbsscheme += """""" HI-zeta (%s) Total Energy: %16.8f\n"""""" % (str(NEED['HI']['f_zeta']), energypiece); else:; cbsscheme += """""" HI-zeta (%s) Correlation Energy: %16.8f\n"""""" % (str(NEED['HI']['f_zeta']), energypiece); PsiMod.print_out(cbsscheme). return energypiece. # Solution equation in LaTeX: $E_{corl}^{\infty} = \frac{E_{corl}^{X} X^3 - E_{corl}^{X-1} (X-1)^3}{X^3 - (X-1)^3}$; # Solution equation in LaTeX: $\beta = \frac{E_{corl}^{X} - E_{corl}^{X-1}}{X^{-3} - (X-1)^{-3}}$; [docs]def corl_xtpl_helgaker_2(**largs):; r""""""Extrapolation scheme for correlation energies with two adjacent zeta-level bases.; Used by :py:func:`~wrappers.complete_basis_set`. .. math:: E_{corl}^X = E_{corl}^{\infty} + \beta X^{-3}. """"""; energypiece = 0.0; functionname = sys._getframe().f_code.co_name",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b2/_modules/wrappers.html:78173,energy,energy,78173,psi4manual/4.0b2/_modules/wrappers.html,https://psicode.org,https://psicode.org/psi4manual/4.0b2/_modules/wrappers.html,6,['energy'],"['energy', 'energypiece']"
Energy Efficiency," + ']' + post. return basisstring. [docs]def highest_1(**largs):; r""""""Scheme for total or correlation energies with a single basis or the highest; zeta-level among an array of bases. Used by :py:func:`~wrappers.complete_basis_set`. .. math:: E_{total}^X = E_{total}^X. """"""; energypiece = 0.0; functionname = sys._getframe().f_code.co_name; f_fields = ['f_wfn', 'f_portion', 'f_basis', 'f_zeta', 'f_energy']; [mode, NEED, wfnname, BSET, ZSET] = validate_scheme_args(functionname, **largs). if (mode == 'requisition'):. # Impose restrictions on zeta sequence; if (len(ZSET) == 0):; raise ValidationError('Call to \'%s\' not valid with \'%s\' basis sets.' % (functionname, len(ZSET))). # Return array that logs the requisite jobs; if (wfnname == 'scf'):; portion = 'tot'; else:; portion = 'corl'; NEED = {'HI': dict(zip(f_fields, [wfnname, portion, BSET[len(ZSET) - 1], ZSET[len(ZSET) - 1], 0.0]))}. return NEED. elif (mode == 'evaluate'):. # Extract required energies and zeta integers from array; # Compute extrapolated energy; energypiece = NEED['HI']['f_energy']. # Output string with extrapolation parameters; cbsscheme = ''; cbsscheme += """"""\n ==> %s <==\n\n"""""" % (functionname); if (NEED['HI']['f_wfn'] == 'scf'):; cbsscheme += """""" HI-zeta (%s) Total Energy: %16.8f\n"""""" % (str(NEED['HI']['f_zeta']), energypiece); else:; cbsscheme += """""" HI-zeta (%s) Correlation Energy: %16.8f\n"""""" % (str(NEED['HI']['f_zeta']), energypiece); psi4.print_out(cbsscheme). return energypiece. # Solution equation in LaTeX: $E_{corl}^{\infty} = \frac{E_{corl}^{X} X^3 - E_{corl}^{X-1} (X-1)^3}{X^3 - (X-1)^3}$; # Solution equation in LaTeX: $\beta = \frac{E_{corl}^{X} - E_{corl}^{X-1}}{X^{-3} - (X-1)^{-3}}$; [docs]def corl_xtpl_helgaker_2(**largs):; r""""""Extrapolation scheme for correlation energies with two adjacent zeta-level bases.; Used by :py:func:`~wrappers.complete_basis_set`. .. math:: E_{corl}^X = E_{corl}^{\infty} + \beta X^{-3}. """"""; energypiece = 0.0; functionname = sys._getframe().f_code.co_name; ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b5/_modules/wrappers.html:93956,energy,energy,93956,psi4manual/4.0b5/_modules/wrappers.html,https://psicode.org,https://psicode.org/psi4manual/4.0b5/_modules/wrappers.html,2,['energy'],"['energy', 'energypiece']"
Energy Efficiency," + (f_{damp})^n}\]. \[f_{damp} = a_1 \sqrt{\frac{C_8^{ij}}{C_6^{ij}}} + a_2\]; All parameters characterizing the dispersion correction are taken from; Grimme’s website; or else from the literature. Running DFTD3¶; A number of a posteriori dispersion corrections are available in; PSI4. While some are computed within PSI4’s codebase (-D1, -D2,; -CHG, -DAS2009, -DAS2010), the -D3 correction and its variants are; available only through the DFTD3 program. Once installed, the; dftd3/PSI4 interface is transparent, and all corrections are; interfaced exactly alike.; Dispersion corrections are built into DFT functionals, so appending an a; posteriori correction to a computation is as simple as; energy('b2plyp-d') vs. energy('b2plyp'). For example, the; following input file computes (with much redundant work) for water a; B3LYP, a B3LYP-D2, and a B3LYP-D3 (zero-damping) energy.; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11molecule h2o {; O; H 1 1.0; H 1 1.0 2 104.5; }; set {; basis cc-pVDZ; }; energy('b3lyp'); energy('b3lyp-d'); energy('b3lyp-d3'). Consult the table -D Functionals to see for each; functional what corrections are available and what default parameters; define them. The dispersion correction is available after a calculation in; the PSI variable DISPERSION CORRECTION ENERGY.; By default, the output from the dftd3; program is suppressed; to see it in the output file, set print > 2. Variants of dispersion corrections¶. Extension [1]; Variant; Computing Program (engine); DFT_DISPERSION_PARAMETERS [11]. -D; -D1; -D2; -D3; -D3ZERO; -D3BJ; -D3(BJ); -D3M; -D3MZERO; -D3MBJ; -D3M(BJ); -NL; -CHG; -DAS2009; -DAS2010; alias to -D2; -D1 [2]; -D2 [3]; alias to -D3ZERO; -D3 [4] w/ original zero-damping; -D3 [5] w/ newer Becke-Johnson rational damping; alias to -D3BJ; alias to -D3MZERO; -D3 [6] w/ reparameterized and more flexible original zero-damping; -D3 [6] w/ reparameterized newer Becke-Johnson rational damping; alias to -D3MBJ; Grimme’s -NL (DFT plus VV10 correlation) [7]; Chai & Hea",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/dftd3-1.html:5123,energy,energy,5123,psi4manual/1.3.2/dftd3-1.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/dftd3-1.html,6,['energy'],['energy']
Energy Efficiency," + sub_casing; else:; for sub_casing in all_casings(input_string[1:]):; yield first.lower() + sub_casing; yield first.upper() + sub_casing. [docs]def getattr_ignorecase(module, attr):; """"""Function to extract attribute *attr* from *module* if *attr*; is available in any possible lettercase permutation. Returns; attribute if available, None if not. """"""; array = None; for per in list(all_casings(attr)):; try:; getattr(module, per); except AttributeError:; pass; else:; array = getattr(module, per); break. return array. [docs]def import_ignorecase(module):; """"""Function to import *module* in any possible lettercase; permutation. Returns module object if available, None if not. """"""; modobj = None; for per in list(all_casings(module)):; try:; modobj = __import__(per); except ImportError:; pass; else:; break. return modobj. [docs]def extract_sowreap_from_output(sowout, quantity, sownum, linkage, allvital=False):; """"""Function to examine file *sowout* from a sow/reap distributed job; for formatted line with electronic energy information about index; *sownum* to be used for construction of *quantity* computations as; directed by master input file with *linkage* kwarg. When file *sowout*; is missing or incomplete files, function will either return zero; (*allvital* is ``False``) or terminate (*allvital* is ``True``) since; some sow/reap procedures can produce meaningful results (database); from an incomplete set of sown files, while others cannot (gradient,; hessian). """"""; E = 0.0. try:; freagent = open('%s.out' % (sowout), 'r'); except IOError:; if allvital:; raise ValidationError('Aborting upon output file \'%s.out\' not found.\n' % (sowout)); else:; ValidationError('Aborting upon output file \'%s.out\' not found.\n' % (sowout)); return 0.0; else:; while True:; line = freagent.readline(); if not line:; if E == 0.0:; if allvital:; raise ValidationError('Aborting upon output file \'%s.out\' has no %s RESULT line.\n' % (sowout, quantity)); else:; ValidationError('Aborting upon ou",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b5/_modules/p4util/procutil.html:6522,energy,energy,6522,psi4manual/4.0b5/_modules/p4util/procutil.html,https://psicode.org,https://psicode.org/psi4manual/4.0b5/_modules/p4util/procutil.html,1,['energy'],['energy']
Energy Efficiency," +---------------+--------------------------------------------+-----------+------------------------------------------------------+; | x | normal mode, normalized un-mass-weighted | a0 | ndarray(ndof, ndof) float |; +---------------+--------------------------------------------+-----------+------------------------------------------------------+; | degeneracy | degree of degeneracy | | ndarray(ndof) int |; +---------------+--------------------------------------------+-----------+------------------------------------------------------+; | TRV | translation/rotation/vibration | | ndarray(ndof) str 'TR' or 'V' or '-' for partial |; +---------------+--------------------------------------------+-----------+------------------------------------------------------+; | gamma | irreducible representation | | ndarray(ndof) str irrep or None if unclassifiable |; +---------------+--------------------------------------------+-----------+------------------------------------------------------+; | mu | reduced mass | u | ndarray(ndof) float (+/+) |; +---------------+--------------------------------------------+-----------+------------------------------------------------------+; | k | force constant | mDyne/A | ndarray(ndof) float (+/-) |; +---------------+--------------------------------------------+-----------+------------------------------------------------------+; | DQ0 | RMS deviation v=0 | a0 u^1/2 | ndarray(ndof) float (+/0) |; +---------------+--------------------------------------------+-----------+------------------------------------------------------+; | Qtp0 | Turning point v=0 | a0 u^1/2 | ndarray(ndof) float (+/0) |; +---------------+--------------------------------------------+-----------+------------------------------------------------------+; | Xtp0 | Turning point v=0 | a0 | ndarray(ndof) float (+/0) |; +---------------+--------------------------------------------+-----------+------------------------------------------------------+; | theta_vib | char temp | K | ndarray(n",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/_modules/psi4/driver/qcdb/vib.html:14211,reduce,reduced,14211,psi4manual/1.4.0/_modules/psi4/driver/qcdb/vib.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/_modules/psi4/driver/qcdb/vib.html,12,['reduce'],['reduced']
Energy Efficiency," +; r'^\s+' + r'(?:NL-MBPT\(4\))' + r'\s+' + NUMBER + r'\s+' + NUMBER + r'\s*' +; r'^\s+' + r'(?:WT12-MBPT\(4\))' + r'\s+' + NUMBER + r'\s+' + NUMBER + r'\s*' +; r'^\s+' + r'(?:T-MBPT\(4\))' + r'\s+' + NUMBER + r'\s+' + NUMBER + r'\s*$',; outtext, re.MULTILINE | re.DOTALL); if mobj:; print('matched mp4tro'); dmp4sdq = Decimal(mobj.group(1)) + Decimal(mobj.group(3)); dmp4t = Decimal(mobj.group(5)) + Decimal(mobj.group(7)) # TODO: WT12 with T, not SDQ?; psivar['MP4(SDQ) CORRELATION ENERGY'] = psivar['MP3 CORRELATION ENERGY'] + dmp4sdq; psivar['MP4(SDQ) TOTAL ENERGY'] = mobj.group(4); psivar['MP4(T) CORRECTION ENERGY'] = dmp4t; psivar['MP4(SDTQ) CORRELATION ENERGY'] = psivar['MP3 CORRELATION ENERGY'] + dmp4sdq + dmp4t; psivar['MP4(SDTQ) TOTAL ENERGY'] = mobj.group(8); psivar['MP4 CORRELATION ENERGY'] = psivar['MP4(SDTQ) CORRELATION ENERGY']; psivar['MP4 TOTAL ENERGY'] = psivar['MP4(SDTQ) TOTAL ENERGY']. # Process CC Iterations; mobj = re.search(; r'^\s+' + r'(?P<fullCC>(?P<iterCC>CC(?:\w+))(?:\(T\))?)' + r'\s+(?:energy will be calculated.)\s*' +; r'(?:.*?)' +; r'^\s+' + r'(?:\d+)' + r'\s+' + NUMBER + r'\s+' + NUMBER + r'\s+DIIS\s*' +; r'^\s*(?:-+)\s*' +; r'^\s*(?:A miracle (?:has come|come) to pass. The CC iterations have converged.)\s*$',; outtext, re.MULTILINE | re.DOTALL); if mobj:; print('matched cc with full %s iterating %s' % (mobj.group('fullCC'), mobj.group('iterCC'))); psivar['%s CORRELATION ENERGY' % (mobj.group('iterCC'))] = mobj.group(3); psivar['%s TOTAL ENERGY' % (mobj.group('iterCC'))] = mobj.group(4). # Process CC(T); mobj = re.search(; r'^\s+' + r'(?:E\(SCF\))' + r'\s+=\s+' + NUMBER + r'\s+a\.u\.\s*' +; r'(?:.*?)' +; r'^\s+' + r'(?:E\(CCSD\))' + r'\s+=\s+' + NUMBER + r'\s*' +; r'(?:.*?)' +; r'^\s+' + r'(?:E\(CCSD\(T\)\))' + r'\s+=\s+' + NUMBER + r'\s*$',; outtext, re.MULTILINE | re.DOTALL); if mobj:; print('matched ccsd(t) vcc'); psivar['SCF TOTAL ENERGY'] = mobj.group(1); psivar['CCSD TOTAL ENERGY'] = mobj.group(2); psivar['(T) CORRECTION ENERGY'] = D",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/_modules/qcdb/cfour.html:11755,energy,energy,11755,psi4manual/1.0.0/_modules/qcdb/cfour.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/_modules/qcdb/cfour.html,1,['energy'],['energy']
Energy Efficiency," +; r'^\s+\d+\s+' + NUMBER + r'\s+' + NUMBER + r'\s+' + 'Convergence criterion met' + r'\s*$',; outtext, re.MULTILINE | re.DOTALL | re.IGNORECASE); if mobj:; print('matched dft'); psivar['NUCLEAR REPULSION ENERGY'] = mobj.group(1); #psivar['DFT TOTAL ENERGY'] = mobj.group(2); psivar['DFT FUNCTIONAL TOTAL ENERGY'] = mobj.group(2); # with negative lookahead; #psivar['NUCLEAR REPULSION ENERGY'] = mobj.group(2); #psivar['DFT TOTAL ENERGY'] = mobj.group(3); #psivar['DFT FUNCTIONAL TOTAL ENERGY'] = mobj.group(3). # Process DHDFT no-D or internal-D; mobj = re.search(; # negative grimme3 lookahead goes here; #r'^\s+' + r'(?:Nuclear Repulsion Energy =)' + r'\s+' + NUMBER + r'\s+hartrees\s*' +; #r'(?:.*?)' +; r'(?:HF-DFT SCF calculation)' +; r'(?:.*?)' +; #r'^\s+\d+\s+' + NUMBER + r'\s+' + NUMBER + r'\s+' + 'Convergence criterion met' + r'\s*' +; #r'(?:.*?)' +; # need a not ""Hartree-Fock SCF calculation"" here so DFT @@@ MP2 not caught?; r'^\s*' + r'(?:Total (?:RI)?MP2 correlation energy =)' + r'\s+' + NUMBER + r'\s+' + r'au' + r'\s*' +; r'^\s+' + r'(?:(?:RI)?MP2 total energy =)' + r'\s+' + NUMBER + r'\s+' + r'au' + r'\s*$',; outtext, re.MULTILINE | re.DOTALL | re.IGNORECASE); if mobj:; print('matched dhdft'); #psivar['NUCLEAR REPULSION ENERGY'] = mobj.group(1); #psivar['DFT TOTAL ENERGY'] = mobj.group(2); #psivar['DFT FUNCTIONAL TOTAL ENERGY'] = mobj.group(2); psivar['DOUBLE-HYBRID CORRECTION ENERGY'] = mobj.group(1). # Process MP2; mobj = re.search(; r'(?:Hartree-Fock SCF calculation)' +; r'(?:.*?)' +; #r'^\s+\d+\s+' + NUMBER + r'\s+' + NUMBER + r'\s+' + 'Convergence criterion met' + r'\s*' +; #r'(?:.*?)' +; # need a not ""Hartree-Fock SCF calculation"" here so DFT @@@ MP2 not caught?; r'^\s*' + r'(?:Total RIMP2 correlation energy =)' + r'\s+' + NUMBER + r'\s+' + r'au' + r'\s*' +; r'^\s+' + r'(?:RIMP2 total energy =)' + r'\s+' + NUMBER + r'\s+' + r'au' + r'\s*$',; outtext, re.MULTILINE | re.DOTALL | re.IGNORECASE); if mobj:; print('matched mp2'); #psivar['NUCLEAR REPULSION ENER",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/_modules/qcdb/qchem.html:4806,energy,energy,4806,psi4manual/1.0.0/_modules/qcdb/qchem.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/_modules/qcdb/qchem.html,2,['energy'],['energy']
Energy Efficiency," += self.create_psi4_string_from_molecule(); return text. def __setattr__(self, name, value):; """"""Function to overload setting attributes to allow geometry; variable assigment as if member data. """"""; if 'all_variables' in self.__dict__:; if name.upper() in self.__dict__['all_variables']:; self.set_variable(name, value); super(Molecule, self).__setattr__(name, value). def __getattr__(self, name):; """"""Function to overload accessing attribute contents to allow; retrival of geometry variable values as if member data. """"""; if 'all_variables' in self.__dict__ and name.upper() in self.__dict__['all_variables']:; return self.get_variable(name); else:; raise AttributeError. @classmethod; def init_with_xyz(cls, xyzfilename, no_com=False, no_reorient=False, contentsNotFilename=False):; """"""Pull information from an XYZ file. No fragment info detected.; Bohr/Angstrom pulled from first line if available. Charge,; multiplicity, tagline pulled from second line if available. Body; accepts atom symbol or atom charge in first column. Arguments; *no_com* and *no_reorient* can be used to turn off shift and; rotation. If *xyzfilename* is a string of the contents of an XYZ; file, rather than the name of a file, set *contentsNotFilename*; to ``True``. >>> H2O = qcdb.Molecule.init_with_xyz('h2o.xyz'). """"""; instance = cls(); instance.lock_frame = False; instance.PYmove_to_com = not no_com; instance.PYfix_orientation = no_reorient. if contentsNotFilename:; text = xyzfilename.splitlines(); else:; try:; infile = open(xyzfilename, 'r'); except IOError:; raise ValidationError(""""""Molecule::init_with_xyz: given filename '%s' does not exist."""""" %; (xyzfilename)); if os.stat(xyzfilename).st_size == 0:; raise ValidationError(""""""Molecule::init_with_xyz: given filename '%s' is blank."""""" % (xyzfilename)); text = infile.readlines(). xyz1 = re.compile(r""^\s*(\d+)\s*(bohr|au)?\s*$"", re.IGNORECASE); xyz2 = re.compile(r'^\s*(-?\d+)\s+(\d+)\s+(.*)\s*$'); NUMBER = ""((?:[-+]?\\d*\\.\\d+(?:[DdEe][-+]?\\d+)?)|(?:[-",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/_modules/psi4/driver/qcdb/molecule.html:5110,charge,charge,5110,psi4manual/1.2.1/_modules/psi4/driver/qcdb/molecule.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/_modules/psi4/driver/qcdb/molecule.html,1,['charge'],['charge']
Energy Efficiency," += self.create_psi4_string_from_molecule(); return text. def __setattr__(self, name, value):; """"""Function to overload setting attributes to allow geometry; variable assigment as if member data. """"""; if 'all_variables' in self.__dict__:; if name.upper() in self.__dict__['all_variables']:; self.set_variable(name, value); super(Molecule, self).__setattr__(name, value). def __getattr__(self, name):; """"""Function to overload accessing attribute contents to allow; retrival of geometry variable values as if member data. """"""; if 'all_variables' in self.__dict__ and name.upper() in self.__dict__['all_variables']:; return self.get_variable(name); else:; raise AttributeError. @classmethod; def init_with_xyz(cls, xyzfilename, no_com=False, no_reorient=False, contentsNotFilename=False):; """"""Pull information from an XYZ file. No fragment info detected.; Bohr/Angstrom pulled from first line if available. Charge,; multiplicity, tagline pulled from second line if available. Body; accepts atom symbol or atom charge in first column. Arguments; *no_com* and *no_reorient* can be used to turn off shift and; rotation. If *xyzfilename* is a string of the contents of an XYZ; file, rather than the name of a file, set *contentsNotFilename*; to ``True``. >>> H2O = qcdb.Molecule.init_with_xyz('h2o.xyz'). """"""; raise FeatureDeprecated(; """"""qcdb.Molecule.init_with_xyz. Replace with: qcdb.Molecule.from_string(..., dtype='xyz+')""""""). @classmethod; def init_with_mol2(cls, xyzfilename, no_com=False, no_reorient=False, contentsNotFilename=False):; """"""Pull information from a MOl2 file. No fragment info detected.; Bohr/Angstrom pulled from first line if available. Charge,; multiplicity, tagline pulled from second line if available. Body; accepts atom symbol or atom charge in first column. Arguments; *no_com* and *no_reorient* can be used to turn off shift and; rotation. If *xyzfilename* is a string of the contents of an XYZ; file, rather than the name of a file, set *contentsNotFilename*; to ``True``. NO",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/_modules/psi4/driver/qcdb/molecule.html:5076,charge,charge,5076,psi4manual/1.3.2/_modules/psi4/driver/qcdb/molecule.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/_modules/psi4/driver/qcdb/molecule.html,8,['charge'],['charge']
Energy Efficiency," - No way to tell function to boost fitting basis size for all calculations. - Need to add more extrapolation schemes. As represented in the equation below, a CBS energy method is defined in several; sequential stages (scf, corl, delta1, delta2, ... ) covering treatment; of the reference total energy, the correlation energy, a delta correction to the; correlation energy, and a second delta correction, etc.. Each is activated by its; stage_wfn keyword, or as a field in the ```cbs_metadata``` list, and is only; allowed if all preceding stages are active. .. include:: /cbs_eqn.rst. * Energy Methods; The presence of a stage_wfn keyword is the indicator to incorporate; (and check for stage_basis and stage_scheme keywords) and compute; that stage in defining the CBS energy. The cbs() function requires, at a minimum, ``name='scf'`` and ``scf_basis``; keywords to be specified for reference-step only jobs and ``name`` and; ``corl_basis`` keywords for correlated jobs. The following energy methods have been set up for cbs(). .. hlist::; :columns: 5. * scf; * hf; * mp2; * mp2.5; * mp3; * mp4(sdq); * mp4; * mp\ *n*; * omp2; * omp2.5; * omp3; * olccd; * lccd; * lccsd; * cepa(0); * cepa(1); * cepa(3); * acpf; * aqcc; * qcisd; * cc2; * ccsd; * fno-ccsd; * bccd; * cc3; * qcisd(t); * ccsd(t); * fno-ccsd(t); * bccd(t); * cisd; * cisdt; * cisdtq; * ci\ *n*; * fci; * mrccsd; * mrccsd(t); * mrccsdt; * mrccsdt(q). :type name: str; :param name: ``'scf'`` || ``'ccsd'`` || etc. First argument, usually unlabeled. Indicates the computational method; for the correlation energy, unless only reference step to be performed,; in which case should be ``'scf'``. Overruled if stage_wfn keywords supplied. :type scf_wfn: str; :param scf_wfn: |dl| ``'scf'`` |dr| || ``'c4-scf'`` || etc. Indicates the energy method for which the reference energy is to be; obtained. Generally unnecessary, as 'scf' is *the* scf in |PSIfour| but; can be used to direct lone scf components to run in |PSIfour| or Cfour; in a mixe",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/_modules/psi4/driver/driver_cbs.html:35656,energy,energy,35656,psi4manual/1.4.0/_modules/psi4/driver/driver_cbs.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/_modules/psi4/driver/driver_cbs.html,7,['energy'],['energy']
Energy Efficiency," - h TRANSITION¶; The velocity-gauge oscillator strength of the transition from root m to root n,; and the transition is of irrep h.; DFT functional labeled if canonical. AQCC DIPOLE¶; Dipole array [e a0] for the averaged quadratic coupled-cluster level of theory, (3,). AQCC QUADRUPOLE¶; Redundant quadrupole array [e a0^2] for the averaged quadratic coupled-cluster level of theory, (3, 3). AQCC TOTAL ENERGY¶. AQCC CORRELATION ENERGY¶; The total electronic energy [E_h] and correlation energy component [E_h]; for the averaged quadratic coupled-cluster level of theory. BRUECKNER CONVERGED¶; Value 1 (0) when the Brueckner orbitals have (have not) converged. CBS NUMBER¶. NBODY NUMBER¶. FINDIF NUMBER¶; Number of tasks [] the named procedure performs. These are immediate; tasks, so if procedures are nested, the total number of tasks is; the product. CBS TOTAL ENERGY¶. CBS CORRELATION ENERGY¶. CBS REFERENCE ENERGY¶; The total electronic energy [E_h] and its breakdown into reference total; energy [E_h] and correlation correction components [E_h] for the compound; method requested through cbs(). CCname ROOT n TOTAL ENERGY¶. TD-fctl ROOT n TOTAL ENERGY¶; The total electronic energy [E_h] for the requested theory and root n (n starts at 0).; DFT functional labeled if canonical. CCname ROOT n (IN h) TOTAL ENERGY¶. TD-fctl ROOT n (IN h) TOTAL ENERGY¶; The total electronic energy [E_h] for the requested theory and root n within irrep h (n starts at 0).; DFT functional labeled if canonical. CCname ROOT n (h) TOTAL ENERGY¶. TD-fctl ROOT n (h) TOTAL ENERGY¶; The total electronic energy [E_h] for the requested theory and root n, which is of irrep h (n starts at 0).; DFT functional labeled if canonical. CCname ROOT n TOTAL ENERGY - h TRANSITION¶. TD-fctl ROOT n TOTAL ENERGY - h TRANSITION¶; The total electronic energy [E_h] for the requested theory and root n, and the transition is of irrep h, (n starts at 0). CCname ROOT n CORRELATION ENERGY¶; The correlation energy [E_h] for the requ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/glossary_psivariables.html:7934,energy,energy,7934,psi4manual/1.7.x/glossary_psivariables.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/glossary_psivariables.html,8,['energy'],['energy']
Energy Efficiency," -0.4431206; H -0.5238121 1.9646519 -0.0064609; C -2.0071056 0.7638459 -0.1083509; C -1.4630807 -0.1519120 0.7949930; C -2.1475789 -1.3295094 1.0883677; C -3.3743208 -1.6031427 0.4895864; C -3.9143727 -0.6838545 -0.4091028; C -3.2370496 0.4929609 -0.7096126; H -0.5106510 0.0566569 1.2642563; H -1.7151135 -2.0321452 1.7878417; H -3.9024664 -2.5173865 0.7197947; H -4.8670730 -0.8822939 -0.8811319; H -3.6431662 1.2134345 -1.4057590; --; 0 1; O 1.3531168 1.9382724 0.4723133; H 1.7842846 2.3487495 1.2297110; C 2.0369747 0.7865043 0.1495491; C 1.5904026 0.0696860 -0.9574153; C 2.2417367 -1.1069765 -1.3128110; C 3.3315674 -1.5665603 -0.5748636; C 3.7696838 -0.8396901 0.5286439; C 3.1224836 0.3383498 0.8960491; H 0.7445512 0.4367983 -1.5218583; H 1.8921463 -1.6649726 -2.1701843; H 3.8330227 -2.4811537 -0.8566666; H 4.6137632 -1.1850101 1.1092635; H 3.4598854 0.9030376 1.7569489; symmetry c1; no_reorient; no_com; }. set {; basis jun-cc-pvdz; scf_type df; guess sad; freeze_core true; }. energy('fisapt0'). This file runs a DF-HF computation on the full dimer using PSI4‘s existing; SCF code. The monomer SCF computations are performed inside the FISAPT module,; following which a complete DF-SAPT0 computation is performed. Additional bits of; analysis are performed to generate the order-2 partition of the SAPT terms to; the level of nuclei and localized occupied orbitals – this generally does not; incur much additional overhead beyond a standard SAPT0 computations. The; nuclear/orbital partition data is written to the folder fsapt/ in the same; directory as the input file (this can be changed by FISAPT_FSAPT_FILEPATH).; One obtains the desired F-SAPT partition by post-processing the data in; fsapt/. Within this dir, the user is expected to provide the ASCII files; fA.dat and fB.dat, which describe the assignment of atoms to chemical; functional groups using 1-based ordering. E.g., for the problem at hand,; fA.dat contains:; 1; 2OH 1 2; PH 3 4 5 6 7 8 9 10 11 12 13. while fB.dat co",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/fisapt-1.html:4321,energy,energy,4321,psi4manual/1.1.0/fisapt-1.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/fisapt-1.html,2,['energy'],['energy']
Energy Efficiency," -0.4431206; H -0.5238121 1.9646519 -0.0064609; C -2.0071056 0.7638459 -0.1083509; C -1.4630807 -0.1519120 0.7949930; C -2.1475789 -1.3295094 1.0883677; C -3.3743208 -1.6031427 0.4895864; C -3.9143727 -0.6838545 -0.4091028; C -3.2370496 0.4929609 -0.7096126; H -0.5106510 0.0566569 1.2642563; H -1.7151135 -2.0321452 1.7878417; H -3.9024664 -2.5173865 0.7197947; H -4.8670730 -0.8822939 -0.8811319; H -3.6431662 1.2134345 -1.4057590; --; 0 1; O 1.3531168 1.9382724 0.4723133; H 1.7842846 2.3487495 1.2297110; C 2.0369747 0.7865043 0.1495491; C 1.5904026 0.0696860 -0.9574153; C 2.2417367 -1.1069765 -1.3128110; C 3.3315674 -1.5665603 -0.5748636; C 3.7696838 -0.8396901 0.5286439; C 3.1224836 0.3383498 0.8960491; H 0.7445512 0.4367983 -1.5218583; H 1.8921463 -1.6649726 -2.1701843; H 3.8330227 -2.4811537 -0.8566666; H 4.6137632 -1.1850101 1.1092635; H 3.4598854 0.9030376 1.7569489; symmetry c1; no_reorient; no_com; }. set {; basis jun-cc-pvdz; scf_type df; guess sad; freeze_core true; }. energy('fisapt0'). This file runs a DF-HF computation on the full dimer using PSI4‘s existing; SCF code. The monomer SCF computations are performed inside the FISAPT module,; following which a complete DF-SAPT0 computation is performed. Additional bits of; analysis are performed to generate the order-2 partition of the SAPT terms to; the level of nuclei and localized occupied orbitals – this generally does not; incur much additional overhead beyond a standard SAPT0 computations. The; nuclear/orbital partition data is written to the folder fsapt/ in the same; directory as the input file (this can be changed by FISAPT_FSAPT_FILEPATH).; One obtains the desired F-SAPT partition by post-processing the data in; fsapt/. Within this dir, the user is expected to provide the ASCII files; fA.dat and fB.dat, which describe the assignment of atoms to chemical; functional groups using 1-based ordering. E.g., for the problem at hand,; fA.dat contains:; OH 1 2; PH 3 4 5 6 7 8 9 10 11 12 13. while fB.dat contai",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/fisapt-1.html:4207,energy,energy,4207,psi4manual/1.4.0/fisapt-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/fisapt-1.html,9,['energy'],['energy']
Energy Efficiency," -0.4431206; H -0.5238121 1.9646519 -0.0064609; C -2.0071056 0.7638459 -0.1083509; C -1.4630807 -0.1519120 0.7949930; C -2.1475789 -1.3295094 1.0883677; C -3.3743208 -1.6031427 0.4895864; C -3.9143727 -0.6838545 -0.4091028; C -3.2370496 0.4929609 -0.7096126; H -0.5106510 0.0566569 1.2642563; H -1.7151135 -2.0321452 1.7878417; H -3.9024664 -2.5173865 0.7197947; H -4.8670730 -0.8822939 -0.8811319; H -3.6431662 1.2134345 -1.4057590; --; 0 1; O 1.3531168 1.9382724 0.4723133; H 1.7842846 2.3487495 1.2297110; C 2.0369747 0.7865043 0.1495491; C 1.5904026 0.0696860 -0.9574153; C 2.2417367 -1.1069765 -1.3128110; C 3.3315674 -1.5665603 -0.5748636; C 3.7696838 -0.8396901 0.5286439; C 3.1224836 0.3383498 0.8960491; H 0.7445512 0.4367983 -1.5218583; H 1.8921463 -1.6649726 -2.1701843; H 3.8330227 -2.4811537 -0.8566666; H 4.6137632 -1.1850101 1.1092635; H 3.4598854 0.9030376 1.7569489; symmetry c1; no_reorient; no_com; }. set {; basis jun-cc-pvdz; scf_type df; guess sad; freeze_core true; }. energy('fisapt0'). This file runs a DF-HF computation on the full dimer using PSI4’s existing; SCF code. The monomer SCF computations are performed inside the FISAPT module,; following which a complete DF-SAPT0 computation is performed. Additional bits of; analysis are performed to generate the order-2 partition of the SAPT terms to; the level of nuclei and localized occupied orbitals – this generally does not; incur much additional overhead beyond a standard SAPT0 computations. The; nuclear/orbital partition data is written to the folder fsapt/ in the same; directory as the input file (this can be changed by FISAPT_FSAPT_FILEPATH).; One obtains the desired F-SAPT partition by post-processing the data in; fsapt/. Within this dir, the user is expected to provide the ASCII files; fA.dat and fB.dat, which describe the assignment of atoms to chemical; functional groups using 1-based ordering. E.g., for the problem at hand,; fA.dat contains:; 1; 2OH 1 2; PH 3 4 5 6 7 8 9 10 11 12 13. while fB.dat co",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/fisapt-1.html:4323,energy,energy,4323,psi4manual/1.2.1/fisapt-1.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/fisapt-1.html,4,['energy'],['energy']
Energy Efficiency," -1.833601608592 0.108401996052 1.481873213172; H -1.925572581453 1.640882152784 0.986471814808. aCCC = 108.0; rCC = 1.4; dCCCN = 120; rCH1 = 1.08; rCH2 = 1.08; rCH3 = 1.08; aHCC1 = 109.0; aHCC2 = 109.0; aHCC3 = 109.0; dHCCC1 = 0.0; dHCCC2 = 120.0; dHCCC3 = 240.0; }. Here, we remove the hydrogen from the alpha carbon of glycine and replace it; with a methyl group. Applying this patch using Cartesian coordinates is; difficult, because it depends on the orientation of the existing glycine unit.; In this example, we use Z-Matrix coordinates to define the methyl group, and; define the orientation in terms of the existing glycine Cartesian coordinates; which is much easier to visualize than the corresponding Cartesian-only; approach. Molecule Keywords¶; In addition to specifying the geometry, additional information can be; provided in the molecule block molecule optional_molecule_name {...}. Charge & MultiplicityIf two integers charge multiplicity are encountered on any; line of the molecule block, they are interpreted as the molecular charge; and multiplicity (\(2 M_s + 1\)), respectively. For multi-fragment; complexes, each fragment can have a charge multiplicity line. UnitsBy default, Ångström units are used; this is changed by adding; a line that reads units spec, where spec is one; of ang, angstrom, a.u., au, or bohr. OrientationCertain computations require that the molecule is not reoriented. This; can be achieved by adding either no_reorient or noreorient.; To prevent even recentering of the molecule, add no_com or nocom. PubChemA line reading pubchem:mol fetches the geometry for molecule; mol from the PubChem database, where mol is either; the IUPAC molecule name or the CID number. See PubChem Database for; details. SymmetryThe symmetry can be specified by a line reading symmetry; symbol, where symbol is the Schönflies symbol; of the (Abelian) point group to use for the computation, one of one of; c1, c2, ci, cs, d2, c2h, c2v, or d2h.; This need not be specified, ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/psithonmol-1.html:3158,charge,charge,3158,psi4manual/1.4.0/psithonmol-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/psithonmol-1.html,12,['charge'],['charge']
Energy Efficiency," -1.833601608592 0.108401996052 1.481873213172; H -1.925572581453 1.640882152784 0.986471814808. aCCC = 108.0; rCC = 1.4; dCCCN = 120; rCH1 = 1.08; rCH2 = 1.08; rCH3 = 1.08; aHCC1 = 109.0; aHCC2 = 109.0; aHCC3 = 109.0; dHCCC1 = 0.0; dHCCC2 = 120.0; dHCCC3 = 240.0; }. Here, we remove the hydrogen from the alpha carbon of glycine and replace it; with a methyl group. Applying this patch using Cartesian coordinates is; difficult, because it depends on the orientation of the existing glycine unit.; In this example, we use Z-Matrix coordinates to define the methyl group, and; define the orientation in terms of the existing glycine Cartesian coordinates; which is much easier to visualize than the corresponding Cartesian-only; approach. Molecule Keywords¶; In addition to specifying the geometry, additional information can be; provided in the molecule block molecule optional_molecule_name {...}. Charge & MultiplicityIf two integers charge multiplicity are encountered on any; line of the molecule block, they are interpreted as the molecular charge; and multiplicity (\(2 M_s + 1\)), respectively. If not specified, the; charge is taken to be zero, and the multiplicity will be taken to be the; lowest multiplicity consistent with that charge. For multi-fragment; complexes, each fragment can have a charge multiplicity line.; See Non-Covalently Bonded Molecule Fragments for details. UnitsBy default, Ångström units are used; this is changed by adding; a line that reads units spec, where spec is one; of ang, angstrom, a.u., au, or bohr. OrientationCertain computations require that the molecule is not reoriented. This; can be achieved by adding either no_reorient or noreorient.; To prevent even recentering of the molecule, add no_com or nocom. PubChemA line reading pubchem:mol fetches the geometry for molecule; mol from the PubChem database, where mol is either; the IUPAC molecule name or the CID number. See PubChem Database for; details. SymmetryThe symmetry can be specified by a line",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/psithonmol.html:3160,charge,charge,3160,psi4manual/1.8.x/psithonmol.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/psithonmol.html,6,['charge'],['charge']
Energy Efficiency," -100.0192889141131474. Basis sets options¶; The X2C module in PSI4 supports different combinations of basis set.; By default, if the input file specifies only BASIS, then the X2C; module will solve the modified Dirac equation in an uncontracted basis and then; recontract the X2C Hamiltonian in the original basis.; Alternatively, the user can use BASIS_RELATIVISTIC to specify a different; basis set to solve the modified Dirac equation.; 1; 2; 3; 4; 5set {; basis cc-pvdz-dk; basis_relativistic cc-pvtz-dk; relativistic x2c; }. It is recommended that when employing the X2C relativistic Hamiltonian, that you use a fully; decontracted basis set. This can be done simply in the input by adding “-decon” to the; name of the primary basis you want to use for the calculation as detailed in; Decontracted Basis Sets. Publications resulting from the use; of X2C should cite the following publication: [Verma:2015]. Theory¶; X2C is based on exact decoupling of; positive-energy ( \(h^{FW}_{\rm ++}\); ) and negative-energy (\(h^{FW}_{\rm --}\) ); blocks of the Dirac Hamiltonian (\(h^{D}\)). \[\begin{split}U^\dagger h^{\rm D} U =; U^\dagger; \begin{pmatrix}; h_{LL} & h_{LS} \\; h_{SL} & h_{SS}; \end{pmatrix}; U; =; \begin{pmatrix}; h^{\rm FW}_{++} & 0 \\; 0 & h^{\rm FW}_{--}; \end{pmatrix}\end{split}\]; The transformation ( \(U\) ) is obtained from the solutions of the Dirac equation in kinetically balanced basis [Kutzelnigg:1984] treatment.; In the X2C treatment, the positive-energy block of the Hamiltonian ( \(h^{FW}_{\rm ++}\) ); is given by the sum; of a transformed kinetic (\(T_{\rm X2C}\)) and potential energy ( \(V_{\rm X2C}\) ) contribution.; Relativistic kinetic energy ( \(T_{\rm X2C}\) ) and nuclear-electron interaction potential ( \(V_{\rm X2C}\) ) is given in terms of non-relativisitc kinetic (\(T=\hat{p}^2/2\)) energy and nuclear-electron interaction potential (\(V\)), coupling matrix ( \(X\)) and renormalization matrix ( \(R\)). \[T_{\rm X2C} = R^{\dagger} (TX + {X}^{\dag",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/relativistic-1.html:3012,energy,energy,3012,psi4manual/1.1.0/relativistic-1.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/relativistic-1.html,12,['energy'],['energy']
Energy Efficiency," -2.70698e-03 2.17299e-03 DIIS; @UHF iter 4: -149.62690062294968 -4.69496e-04 5.66895e-04 DIIS; @UHF iter 5: -149.62694151409750 -4.08911e-05 1.26359e-04 DIIS; @UHF iter 6: -149.62694337042228 -1.85632e-06 1.84114e-05 DIIS; @UHF iter 7: -149.62694340901407 -3.85918e-08 2.91692e-06 DIIS; @UHF iter 8: -149.62694340999002 -9.75945e-10 3.11857e-07 DIIS. DF guess converged.; ... @UHF iter 9: -149.62730705470665 -3.63645e-04 8.63718e-05 DIIS; @UHF iter 10: -149.62730737347948 -3.18773e-07 1.50227e-05 DIIS; @UHF iter 11: -149.62730738537107 -1.18916e-08 3.80497e-06 DIIS; @UHF iter 12: -149.62730738624032 -8.69250e-10 7.06690e-07 DIIS. The first set of iterations are from the DF portion of the computation, the; second set uses the exact (but much slower) Direct algorithm. Within the DF portion; of the computation, the zeroth-iteration uses a non-idempotent density matrix; obtained from the SAD guess, so the energy is unphysically low. However, the; first true iteration is quite close to the final DF energy, highlighting the; efficiency of the SAD guess. Pulay’s DIIS procedure is then used to accelerate; SCF convergence, with the DF phase reaching convergence in eight true; iterations. When used together, SAD and DIIS are usually sufficient to converge; the SCF for all but the most difficult systems. Additional convergence; techniques are available for more difficult cases, and are detailed below. At; this point, the code switches on the requested Direct integrals technology, which; requires only four full iterations to reach convergence, starting from the DF; guess. This hybrid DF/Direct procedure can significantly accelerate SCF; computations requiring exact integrals.; After the iterations are completed, a number of one-electron properties are; printed, and some bookkeeping is performed to set up possible correlated; computations. Additional one-electron properties are available by increasing the; PRINT option. Also printed are the occupied and virtual orbital energies,; w",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/scf-1.html:2830,energy,energy,2830,psi4manual/1.0.0/scf-1.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/scf-1.html,2,['energy'],['energy']
Energy Efficiency, -> ROOT m QUADRUPOLE YZ¶. CI ROOT n -> ROOT m QUADRUPOLE ZZ¶; The three components of the transition quadrupole [Debye Ang] between; roots n and m for the requested configuration interaction level of; theory. CI ROOT n DIPOLE X¶. CI ROOT n DIPOLE Y¶. CI ROOT n DIPOLE Z¶; The three components of the dipole [Debye] for the requested; configuration interaction level of theory and root n. CI ROOT n QUADRUPOLE XX¶. CI ROOT n QUADRUPOLE XY¶. CI ROOT n QUADRUPOLE XZ¶. CI ROOT n QUADRUPOLE YY¶. CI ROOT n QUADRUPOLE YZ¶. CI ROOT n QUADRUPOLE ZZ¶; The six components of the quadrupole [Debye Ang] for the requested; configuration interaction level of theory and root n. CI ROOT n TOTAL ENERGY¶. CI ROOT n CORRELATION ENERGY¶; The total electronic energy [H] and correlation energy component [H]; for the requested configuration interaction level of theory and root; n (numbering starts at 0). CI STATE-AVERAGED TOTAL ENERGY¶. CI STATE-AVERAGED CORRELATION ENERGY¶; The total electronic energy [H] and correlation energy component [H]; for state-averaged CI/CASSCF levels of theory. CI TOTAL ENERGY¶. CI CORRELATION ENERGY¶; The total electronic energy [H] and correlation energy component [H]; for the requested configuration interaction level of theory and root. CISD DIPOLE X¶. CISD DIPOLE Y¶. CISD DIPOLE Z¶; The three components of the dipole [Debye] for the; configuration interaction singles and doubles level of theory and root. CISD QUADRUPOLE XX¶. CISD QUADRUPOLE XY¶. CISD QUADRUPOLE XZ¶. CISD QUADRUPOLE YY¶. CISD QUADRUPOLE YZ¶. CISD QUADRUPOLE ZZ¶; The six components of the quadrupole [Debye Ang] for the; configuration interaction singles and doubles level of theory and root. CISD TOTAL ENERGY¶. CISD CORRELATION ENERGY¶. CISDT TOTAL ENERGY¶. CISDT CORRELATION ENERGY¶. CISDTQ CORRELATION ENERGY¶. CISDTQ TOTAL ENERGY¶. CIn CORRELATION ENERGY¶. CIn TOTAL ENERGY¶; The total electronic energy [H] and correlation energy component [H]; for the labeled configuration interaction level of th,MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/glossary_psivariables-1.html:8365,energy,energy,8365,psi4manual/1.1.0/glossary_psivariables-1.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/glossary_psivariables-1.html,12,['energy'],['energy']
Energy Efficiency, -> ROOT m QUADRUPOLE YZ¶. CI ROOT n -> ROOT m QUADRUPOLE ZZ¶; The three components of the transition quadrupole [Debye Ang] between; roots n and m for the requested configuration interaction level of; theory. CI ROOT n DIPOLE X¶. CI ROOT n DIPOLE Y¶. CI ROOT n DIPOLE Z¶; The three components of the dipole [Debye] for the requested; configuration interaction level of theory and root n. CI ROOT n QUADRUPOLE XX¶. CI ROOT n QUADRUPOLE XY¶. CI ROOT n QUADRUPOLE XZ¶. CI ROOT n QUADRUPOLE YY¶. CI ROOT n QUADRUPOLE YZ¶. CI ROOT n QUADRUPOLE ZZ¶; The six components of the quadrupole [Debye Ang] for the requested; configuration interaction level of theory and root n. CI ROOT n TOTAL ENERGY¶. CI ROOT n CORRELATION ENERGY¶; The total electronic energy [H] and correlation energy component [H]; for the requested configuration interaction level of theory and root; n (numbering starts at 1). CI STATE-AVERAGED TOTAL ENERGY¶. CI STATE-AVERAGED CORRELATION ENERGY¶; The total electronic energy [H] and correlation energy component [H]; for state-averaged CI/CASSCF levels of theory. CI TOTAL ENERGY¶. CI CORRELATION ENERGY¶; The total electronic energy [H] and correlation energy component [H]; for the requested configuration interaction level of theory and root. CISD DIPOLE X¶. CISD DIPOLE Y¶. CISD DIPOLE Z¶; The three components of the dipole [Debye] for the; configuration interaction singles and doubles level of theory and root. CISD QUADRUPOLE XX¶. CISD QUADRUPOLE XY¶. CISD QUADRUPOLE XZ¶. CISD QUADRUPOLE YY¶. CISD QUADRUPOLE YZ¶. CISD QUADRUPOLE ZZ¶; The six components of the quadrupole [Debye Ang] for the; configuration interaction singles and doubles level of theory and root. CISD TOTAL ENERGY¶. CISD CORRELATION ENERGY¶. CISDT TOTAL ENERGY¶. CISDT CORRELATION ENERGY¶. CISDTQ CORRELATION ENERGY¶. CISDTQ TOTAL ENERGY¶. CIn CORRELATION ENERGY¶. CIn TOTAL ENERGY¶; The total electronic energy [H] and correlation energy component [H]; for the labeled configuration interaction level of th,MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/glossary_psivariables-1.html:7857,energy,energy,7857,psi4manual/1.0.0/glossary_psivariables-1.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/glossary_psivariables-1.html,16,['energy'],['energy']
Energy Efficiency," -> ROOT m QUADRUPOLE YZ¶. CI ROOT n -> ROOT m QUADRUPOLE ZZ¶; The three components of the transition quadrupole [Debye Ang] between; roots n and m for the requested configuration interaction level of; theory. CI ROOT n DIPOLE X¶. CI ROOT n DIPOLE Y¶. CI ROOT n DIPOLE Z¶; The three components of the dipole [Debye] for the requested; configuration interaction level of theory and root n. CI ROOT n QUADRUPOLE XX¶. CI ROOT n QUADRUPOLE XY¶. CI ROOT n QUADRUPOLE XZ¶. CI ROOT n QUADRUPOLE YY¶. CI ROOT n QUADRUPOLE YZ¶. CI ROOT n QUADRUPOLE ZZ¶; The six components of the quadrupole [Debye Ang] for the requested; configuration interaction level of theory and root n. CI ROOT n TOTAL ENERGY¶. CI ROOT n CORRELATION ENERGY¶; The total electronic energy [H] and correlation energy component [H]; for the requested configuration interaction level of theory and root; n (numbering starts at 1). CI STATE-AVERAGED TOTAL ENERGY¶. CI STATE-AVERAGED CORRELATION ENERGY¶; The total electronic energy [H] and correlation energy component [H]; for state-averaged CI/CASSCF levels of theory. CI TOTAL ENERGY¶. CI CORRELATION ENERGY¶; The total electronic energy [H] and correlation energy component [H]; for the requested configuration interaction level of theory and root. CISD TOTAL ENERGY¶. CISD CORRELATION ENERGY¶. CISDT TOTAL ENERGY¶. CISDT CORRELATION ENERGY¶. CISDTQ CORRELATION ENERGY¶. CISDTQ TOTAL ENERGY¶. CIn CORRELATION ENERGY¶. CIn TOTAL ENERGY¶; The total electronic energy [H] and correlation energy component [H]; for the labeled configuration interaction level of theory and root.; n is CI order for n > 4. CP-CORRECTED 2-BODY INTERACTION ENERGY¶; The interaction energy [H] considering only two-body interactions,; computed with counterpoise correction.; Related variable UNCP-CORRECTED 2-BODY INTERACTION ENERGY. CURRENT CORRELATION ENERGY¶; The correlation energy [H] corresponding to the CURRENT ENERGY variable. CURRENT ENERGY¶; The total electronic energy [H] of the most recent stage of ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b2/glossary_psivariables-1.html:3464,energy,energy,3464,psi4manual/4.0b2/glossary_psivariables-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b2/glossary_psivariables-1.html,4,['energy'],['energy']
Energy Efficiency," -D3MZERO;  . -D3MZERO; -D3 [6] w/ reparameterized and more flexible original zero-damping through dftd3; [\(s_6\), \(s_8\), \(s_{r,6}\), \(\beta\)]. -D3MBJ; -D3 [6] w/ reparameterized newer Becke-Johnson rational damping through dftd3; [\(s_6\), \(s_8\), \(a_1\), \(a_2\)]. Footnotes. [1]Note that there are functionals with these extensions (e.g., wB97X-D) that,; not being Grimme corrections, have nothing to do with this table. [2][Grimme:2004:1463]. [3](1, 2) [Grimme:2006:1787]. [4][Grimme:2010:154104]. [5][Grimme:2011:1456]. [6](1, 2) [Smith:2016:2197]. A few practical examples:. DFT-D2 single point with default parameters (dftd3 not called); 1energy('bp86-d'). DFT-D3BJ optimization with default parameters; 1optimize('pbe-d3bj'). DFT-D2 optimization with custom s6 parameter; 1; 2set dft_dispersion_parameters [1.20]; optimize('b3lyp-d2'). DFT-D3ZERO single point (b3lyp) with custom s8 parameter (reset all four values); 1; 2set dft_dispersion_parameters [1.0, 2.0, 1.261, 14.0]; energy('b3lyp-d3'). If only dispersion corrections (rather than total energies) are of; interest, the dftd3 program can be run independently of the scf; through the python function run_dftd3(). (This function; is the same PSI4/dftd3 interface that is called during an scf job.); This route is much faster than running a DFT-D energy. Some set-up:; 1; 2; 3; 4; 5; 6molecule nene {; Ne; Ne 1 2.0; }. nene.update_geometry(). The same four dispersion corrections/gradients as the section above:; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 13; 14>>> print nene.run_dftd3('bp86', 'd', dertype=0); -7.735e-05. >>> E, G = nene.run_dftd3('pbe', 'd3bj'); >>> print G; [[0.0, 0.0, -1.1809087569358e-05], [0.0, 0.0, 1.1809087569358e-05]]. >>> E, G = nene.run_dftd3('b3lyp', 'd2', {'s6': 1.20}); >>> print E; -8.84e-05. >>> E, G = nene.run_dftd3(dashlvl='d3', dashparam={'s8': 2.0, 'alpha6': 14.0, 'sr6': 1.261, 's6': 1.0}); >>> print E; -0.00024762. qcdb.interface_dftd3.run_dftd3(mol, func=None, dashlvl=None, dashparam=Non",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/dftd3-1.html:7076,energy,energy,7076,psi4manual/1.2.1/dftd3-1.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/dftd3-1.html,2,['energy'],['energy']
Energy Efficiency," -D3MZERO;  . -D3MZERO; -D3 [6] w/ reparameterized and more flexible original zero-damping through dftd3; [\(s_6\), \(s_8\), \(s_{r,6}\), \(\beta\)]. -D3MBJ; -D3 [6] w/ reparameterized newer Becke-Johnson rational damping through dftd3; [\(s_6\), \(s_8\), \(a_1\), \(a_2\)]. Footnotes. [1]Note that there are functionals with these extensions (e.g., wB97X-D) that,; not being Grimme corrections, have nothing to do with this table. [2][Grimme:2004:1463]. [3](1, 2) [Grimme:2006:1787]. [4][Grimme:2010:154104]. [5][Grimme:2011:1456]. [6](1, 2) [Smith:2016:2197]. A few practical examples:. DFT-D2 single point with default parameters (dftd3 not called); 1energy('bp86-d'). DFT-D3BJ optimization with default parameters; 1optimize('pbe-d3bj'). DFT-D2 optimization with custom s6 parameter; 1; 2set dft_dispersion_parameters [1.20]; optimize('b3lyp-d2'). DFT-D3ZERO single point (b3lyp) with custom s8 parameter (reset all four values); 1; 2set dft_dispersion_parameters [1.0, 2.0, 1.261, 14.0]; energy('b3lyp-d3'). If only dispersion corrections (rather than total energies) are of; interest, the dftd3 program can be run independently of the scf; through the python function run_dftd3(). (This function; is the same PSI4/dftd3 interface that is called during an scf job.); This route is much faster than running a DFT-D energy. Some set-up:; 1; 2; 3; 4; 5; 6molecule nene {; Ne; Ne 1 2.0; }. nene.update_geometry(). The same four dispersion corrections/gradients as the section above:; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 13; 14>>> print nene.run_dftd3('bp86', 'd', dertype=0); -7.735e-05. >>> E, G = nene.run_dftd3('pbe', 'd3bj'); >>> print G; [[0.0, 0.0, -1.1809087569358e-05], [0.0, 0.0, 1.1809087569358e-05]]. >>> E, G = nene.run_dftd3('b3lyp', 'd2', {'s6': 1.20}); >>> print E; -8.84e-05. >>> E, G = nene.run_dftd3(dashlvl='d3', dashparam={'s8': 2.0, 'alpha6': 14.0, 'sr6': 1.261, 's6': 1.0}); >>> print E; -0.00024762. qcdb.interface_dftd3.run_dftd3(self, func=None, dashlvl=None, dashparam=No",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/dftd3-1.html:6913,energy,energy,6913,psi4manual/1.1.0/dftd3-1.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/dftd3-1.html,2,['energy'],['energy']
Energy Efficiency, .. hlist::; :columns: 1. * :py:func:`~psi4.driver.driver_cbs.xtpl_highest_1`; * :py:func:`~psi4.driver.driver_cbs.scf_xtpl_helgaker_3`; * :py:func:`~psi4.driver.driver_cbs.scf_xtpl_helgaker_2`; * :py:func:`~psi4.driver.driver_cbs.scf_xtpl_truhlar_2`; * :py:func:`~psi4.driver.driver_cbs.scf_xtpl_karton_2`. :type corl_scheme: Callable; :param corl_scheme: |dl| ``xtpl_highest_1`` |dr| || ``corl_xtpl_helgaker_2`` || etc. Indicates the basis set extrapolation scheme to be applied to the correlation energy.; Defaults to :py:func:`~psi4.driver.driver_cbs.corl_xtpl_helgaker_2` if two valid basis sets; present in ``corl_basis`` and :py:func:`~psi4.driver.driver_cbs.xtpl_highest_1` otherwise. .. hlist::; :columns: 1. * :py:func:`~psi4.driver.driver_cbs.xtpl_highest_1`; * :py:func:`~psi4.driver.driver_cbs.corl_xtpl_helgaker_2`. :type delta_scheme: Callable; :param delta_scheme: |dl| ``xtpl_highest_1`` |dr| || ``corl_xtpl_helgaker_2`` || etc. Indicates the basis set extrapolation scheme to be applied to the delta correction; to the correlation energy.; Defaults to :py:func:`~psi4.driver.driver_cbs.corl_xtpl_helgaker_2` if two valid basis sets; present in ``delta_basis`` and :py:func:`~psi4.driver.driver_cbs.xtpl_highest_1` otherwise. .. hlist::; :columns: 1. * :py:func:`~psi4.driver.driver_cbs.xtpl_highest_1`; * :py:func:`~psi4.driver.driver_cbs.corl_xtpl_helgaker_2`. :type delta2_scheme: Callable; :param delta2_scheme: |dl| ``xtpl_highest_1`` |dr| || ``corl_xtpl_helgaker_2`` || etc. Indicates the basis set extrapolation scheme to be applied to the second delta correction; to the correlation energy.; Defaults to :py:func:`~psi4.driver.driver_cbs.corl_xtpl_helgaker_2` if two valid basis sets; present in ``delta2_basis`` and :py:func:`~psi4.driver.driver_cbs.xtpl_highest_1` otherwise. .. hlist::; :columns: 1. * :py:func:`~psi4.driver.driver_cbs.xtpl_highest_1`; * :py:func:`~psi4.driver.driver_cbs.corl_xtpl_helgaker_2`. :type scf_alpha: float; :param scf_alpha: |dl| ``1.63`` |dr|.,MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/_modules/psi4/driver/driver_cbs.html:40854,energy,energy,40854,psi4manual/1.4.0/_modules/psi4/driver/driver_cbs.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/_modules/psi4/driver/driver_cbs.html,2,['energy'],['energy']
Energy Efficiency," 0 1; C 0.000000 0.000000 2.900503; C 0.000000 0.000000 1.693240; H 0.000000 0.000000 0.627352; H 0.000000 0.000000 3.963929; units angstrom; """"""). Here’s the second half of the input, where we specify the computation options:. [8]:. psi4.set_options({'scf_type': 'df',; 'freeze_core': 'true'}). psi4.energy('sapt0/jun-cc-pvdz', molecule=dimer). [8]:. -0.0022355825227244703. All of the options we have currently set using psi4.set_options() API are “global” options (meaning that they are visible to all parts of the program). Most common Psi4 options can be set like this. If an option needs to be visible only to one part of the program (e.g., we only want to increase the energy convergence in the SCF code, but not the rest of the code), it can be set by with the; psi4.set_module_options() API function, psi4.set_module_options('scf', {'e_convergence': '1e-8'}).; Note: The arguments to the functions we’ve used so far, like psi4.set_options() API, psi4.set_module_options() API, psi4.energy() API, psi4.optimize(); API, psi4.frequency() API, etc., are case-insensitive.; Back to our SAPT example, we have found that for basic-level SAPT computations (i.e., SAPT0), a good error cancellation is found (Hohenstein:2012:WIREs) with the jun-cc-pVDZ basis (this is the usual aug-cc-pVDZ basis, but without diffuse functions on hydrogen and without diffuse \(d\) functions on heavy atoms) (Papajak:2011:10). So,; we’ll use that as our standard basis set. The SAPT code is designed to use density fitting techniques, because they introduce minimal errors while providing much faster computations (Hohenstein:2010:184111,Hohenstein:2010:014101). Since we’re using density fitting for the SAPT, we might as well also use it for the Hartree-Fock; computations that are performed as part of the SAPT. We can specify that by adding 'scf_type': 'df' to the dictionary passed to psi4.set_options().; Density fitting procedures require the use of auxiliary basis sets that pair with the primary basis set. For",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/psiapi-1.html:13285,energy,energy,13285,psi4manual/1.3.2/psiapi-1.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/psiapi-1.html,9,['energy'],['energy']
Energy Efficiency," 0):; Na = Na - 1; else:; Nb = Nb - 1; charge = charge + 1; mult = Na - Nb + 1. PsiMod.set_global_option(""DF_INTS_IO"", ""LOAD""); PsiMod.set_global_option(""FRAC_START"", frac_start); PsiMod.set_global_option(""FRAC_RENORMALIZE"", True). # Nuke 'em Rico! ; for Nintegral in range(N,Nmin,-1):. # Nuke the current HOMO; for occ in foccs:. PsiMod.set_global_option(""FRAC_OCC"", [HOMO]); PsiMod.set_global_option(""FRAC_VAL"", [occ]) . E = energy('scf'); C = 1; if (E == 0.0):; E = PsiMod.get_variable('SCF ITERATION ENERGY'); C = 0. if (HOMO > 0):; ref = PsiMod.reference_wavefunction(); eps = ref.epsilon_a(); potentials.append(eps[HOMO-1]); else:; ref = PsiMod.reference_wavefunction(); eps = ref.epsilon_b(); potentials.append(eps[-HOMO-1]). Ns.append(Nintegral + occ - 1.0); energies.append(E); convs.append(C). PsiMod.set_global_option(""FRAC_START"", 2); PsiMod.set_global_option(""FRAC_LOAD"", True); PsiMod.set_global_option(""FRAC_DIIS"", frac_diis); PsiMod.set_global_option(""GUESS"", ""READ""). # Set the next charge/mult; mol.set_molecular_charge(charge) ; mol.set_multiplicity(mult). # Determine HOMO; ref = PsiMod.reference_wavefunction(); eps_a = ref.epsilon_a(); eps_b = ref.epsilon_b(); if (Na == Nb):; HOMO = -Nb; elif (Nb == 0):; HOMO = Na; else:; E_a = eps_a[int(Na - 1)] ; E_b = eps_b[int(Nb - 1)] ; if (E_a >= E_b):; HOMO = Na; else: ; HOMO = -Nb. stats.append('\t%6d %6d %6d %6d %6d %6d\n' %(Nintegral-1, Na, Nb, charge, mult, HOMO)). if (HOMO > 0):; Na = Na - 1; else:; Nb = Nb - 1; charge = charge + 1; mult = Na - Nb + 1; ; PsiMod.set_global_option(""DF_INTS_IO"", ""NONE""). # => Print the results out <= #; E = {}; PsiMod.print_out('\n ==> Fractional Occupation Nuke Results <==\n\n'); PsiMod.print_out('\t%-11s %-24s %-24s %11s\n' %('N', 'Energy', 'HOMO Energy', 'Converged')); for k in range(len(Ns)):; PsiMod.print_out('\t%11.3E %24.16E %24.16E %11d\n' % (Ns[k], energies[k], potentials[k], convs[k])); E[Ns[k]] = energies[k]. PsiMod.print_out('\n'); PsiMod.print_out('\t%6s %6s %6s %6s %6s %6s\",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b2/_modules/frac.html:9254,charge,charge,9254,psi4manual/4.0b2/_modules/frac.html,https://psicode.org,https://psicode.org/psi4manual/4.0b2/_modules/frac.html,2,['charge'],['charge']
Energy Efficiency," 0. FRAC_VAL (SCF); SCF — The occupations of the orbital indices specified above (\(0.0\ge occ \ge 1.0\)). Type: array; Default: No Default. FRAG_MODE (OPTKING); OPTKING — For multi-fragment molecules, treat as single bonded molecule or via interfragment coordinates. A primary difference is that in MULTI mode, the interfragment coordinates are not redundant. Type: string; Possible Values: SINGLE, MULTI; Default: SINGLE. FRAG_REF_ATOMS (OPTKING); OPTKING — Which atoms define the reference points for interfragment coordinates?. Type: array; Default: No Default. FREEZE_CORE (GLOBALS); GLOBALS — Specifies how many core orbitals to freeze in correlated computations. TRUE will default to freezing the standard default number of core orbitals. For PSI, the standard number of core orbitals is the number of orbitals in the nearest previous noble gas atom. More precise control over the number of frozen orbitals can be attained by using the keywords NUM_FROZEN_DOCC (gives the total number of orbitals to freeze, program picks the lowest-energy orbitals) or FROZEN_DOCC (gives the number of orbitals to freeze per irreducible representation). Type: string; Possible Values: FALSE, TRUE; Default: FALSE. FREEZE_CORE (SAPT); SAPT — The scope of core orbitals to freeze in evaluation of SAPT \(E_{disp}^{(20)}\) and \(E_{exch-disp}^{(20)}\) terms. Recommended true for all SAPT computations. Type: string; Possible Values: FALSE, TRUE; Default: FALSE. FREEZE_INTERFRAG (OPTKING); OPTKING — Do freeze all interfragment modes?. Type: boolean; Default: false. FREEZE_INTRAFRAG (OPTKING); OPTKING — Do freeze all fragments rigid?. Type: boolean; Default: false. FROZEN_BEND (OPTKING); OPTKING — Specify angles between atoms to be frozen (unchanged). Type: string; Default: No Default. FROZEN_CARTESIAN (OPTKING); OPTKING — Specify atom and X, XY, XYZ, ... to be frozen (unchanged). Type: string; Default: No Default. FROZEN_DIHEDRAL (OPTKING); OPTKING — Specify dihedral angles between atoms to be frozen (",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/autodoc_glossary_options_c-1.html:129930,energy,energy,129930,psi4manual/1.1.0/autodoc_glossary_options_c-1.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/autodoc_glossary_options_c-1.html,2,['energy'],['energy']
Energy Efficiency," 0. FRAC_VAL (SCF); SCF — The occupations of the orbital indices specified above (\(0.0\ge occ \ge 1.0\)). Type: array; Default: No Default. FRAG_MODE (OPTKING); OPTKING — For multi-fragment molecules, treat as single bonded molecule or via interfragment coordinates. A primary difference is that in MULTI mode, the interfragment coordinates are not redundant. Type: string; Possible Values: SINGLE, MULTI; Default: SINGLE. FRAG_REF_ATOMS (OPTKING); OPTKING — Which atoms define the reference points for interfragment coordinates?. Type: array; Default: No Default. FREEZE_CORE (GLOBALS); GLOBALS — Specifies how many core orbitals to freeze in correlated computations. TRUE will default to freezing the standard default number of core orbitals. For PSI, the standard number of core orbitals is the number of orbitals in the nearest previous noble gas atom. More precise control over the number of frozen orbitals can be attained by using the keywords NUM_FROZEN_DOCC (gives the total number of orbitals to freeze, program picks the lowest-energy orbitals) or FROZEN_DOCC (gives the number of orbitals to freeze per irreducible representation). Type: string; Possible Values: FALSE, TRUE; Default: FALSE. FREEZE_CORE (SAPT); SAPT — The scope of core orbitals to freeze in evaluation of SAPT \(E_{disp}^{(20)}\) and \(E_{exch-disp}^{(20)}\) terms. Recommended true for all SAPT computations. Type: string; Possible Values: FALSE, TRUE; Default: FALSE. FREEZE_INTERFRAG (OPTKING); OPTKING — Do freeze all interfragment modes?. Type: boolean; Default: false. FREEZE_INTRAFRAG (OPTKING); OPTKING — Do freeze all fragments rigid?. Type: boolean; Default: false. FROZEN_BEND (OPTKING); OPTKING — Specify angles between atoms to be frozen (unchanged). Type: string; Default: No Default. FROZEN_CARTESIAN (OPTKING); OPTKING — Specify atom and X, XY, XYZ, … to be frozen (unchanged). Type: string; Default: No Default. FROZEN_DIHEDRAL (OPTKING); OPTKING — Specify dihedral angles between atoms to be frozen (un",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/autodoc_glossary_options_c-1.html:132611,energy,energy,132611,psi4manual/1.2.1/autodoc_glossary_options_c-1.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/autodoc_glossary_options_c-1.html,2,['energy'],['energy']
Energy Efficiency," 0.0 0.0 5 2 8; --; He -3.0 4.0 4.0; He -4.0 5.0 4.0; --; efp ch3oh; 1.275 -2.447 -4.673; 0.709 -3.191 -3.592; 2.213 -1.978 -4.343; }. Running EFP¶; EFP can be invoked in similar fashion as other theories provided in PSI4.; For example, if you want to obtain the EFP interaction energy for benzene and two waters,; simply provide the following:; molecule {; efp c6h6 0.0 0.0 0.0 0.0 0.0 0.0; --; efp h2o 4.0 0.0 0.0 0.0 0.0 0.0; --; efp h2o -4.0 0.0 0.0 0.0 0.0 0.0; }. energy('efp'). This computation involves purely EFP/EFP fragment interactions and is; performed entirely by the LIBEFP library. PSI4 can also handle mixed; systems of quantum mechanical (QM) and EFP fragments through the native; SCF code augmented by calls to the LIBEFP library. For; example, turning one of the waters in the example above into a QM; fragment is shown below.; molecule {; efp c6h6 0.0 0.0 0.0 0.0 0.0 0.0; --; O 4.0 0.0 0.0; H 4.7 0.7 0.0; H 3.3 -0.7 0.0; --; efp h2o -4.0 0.0 0.0 0.0 0.0 0.0; }. set basis 6-31g; energy('scf'). Whenever an EFP fragment is present in the active molecule, the SCF energy; will include EFP contributions. Warning; Although the EFP geometry is specified alongside the QM; geometry in a molecule name {...} block, internally the handling; of EFP is not so clean. In straightforward input files that involve; any number of [molecule block, energy/opt/etc, clean()] portions,; there should be no problem; the energy/opt computation will always; be run on the molecule defined in the preceding block. For advanced; users, unexpected difficulties may arise due to: (1) the EFP fragment; from the last molecule block executed will always be active (and; potentially interfering with SCF) and (2) recalling a molecule; through activate(name) (where name was the python handle; in the molecule block) will not load up any EFP portion of that; molecule. This divergent treatment is a stopgap while we determine; how best to handle molecules with different domains. At this time, PSI4 is onl",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/libefp-1.html:5649,energy,energy,5649,psi4manual/1.4.0/libefp-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/libefp-1.html,9,['energy'],['energy']
Energy Efficiency," 0.0 0.0 5 2 8; --; He -3.0 4.0 4.0; He -4.0 5.0 4.0; --; efp ch3oh; 1.275 -2.447 -4.673; 0.709 -3.191 -3.592; 2.213 -1.978 -4.343; }. Running EFP¶; EFP can be invoked in similar fashion as other theories provided in Psi4.; For example, if you want to obtain the EFP interaction energy for benzene and two waters,; simply provide the following:; molecule {; efp c6h6 0.0 0.0 0.0 0.0 0.0 0.0; --; efp h2o 4.0 0.0 0.0 0.0 0.0 0.0; --; efp h2o -4.0 0.0 0.0 0.0 0.0 0.0; }. energy('efp'). This computation involves purely EFP/EFP fragment interactions and is; performed entirely by the LIBEFP library. Psi4 can also handle mixed; systems of quantum mechanical (QM) and EFP fragments through the native; SCF code augmented by calls to the LIBEFP library. For; example, turning one of the waters in the example above into a QM; fragment is shown below.; molecule {; efp c6h6 0.0 0.0 0.0 0.0 0.0 0.0; --; O 4.0 0.0 0.0; H 4.7 0.7 0.0; H 3.3 -0.7 0.0; --; efp h2o -4.0 0.0 0.0 0.0 0.0 0.0; }. set basis 6-31g; energy('scf'). Whenever an EFP fragment is present in the active molecule, the SCF energy; will include EFP contributions. Warning; Although the EFP geometry is specified alongside the QM; geometry in a molecule name {...} block, internally the handling; of EFP is not so clean. In straightforward input files that involve; any number of [molecule block, energy/opt/etc, clean()] portions,; there should be no problem; the energy/opt computation will always; be run on the molecule defined in the preceding block. For advanced; users, unexpected difficulties may arise due to: (1) the EFP fragment; from the last molecule block executed will always be active (and; potentially interfering with SCF) and (2) recalling a molecule; through activate(name) (where name was the python handle; in the molecule block) will not load up any EFP portion of that; molecule. This divergent treatment is a stopgap while we determine; how best to handle molecules with different domains. At this time, Psi4 is onl",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/libefp-1.html:5003,energy,energy,5003,psi4manual/1.0.0/libefp-1.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/libefp-1.html,2,['energy'],['energy']
Energy Efficiency," 0.0, None, None,; metadata[0][""alpha""]; ]))); if len(metadata) > 1:; for delta in metadata[1:]:; NEED = _expand_scheme_orders(delta[""scheme""], delta[""basis""][0], delta[""basis""][1], delta[""wfn""],; delta[""options""], natom); GRAND_NEED.append(; dict(; zip(d_fields, [; delta[""stage""], delta[""scheme""],; _contract_bracketed_basis(delta[""basis""][0]), delta[""wfn""], NEED, +1, 0.0, None, None,; delta[""alpha""]; ]))); NEED = _expand_scheme_orders(delta[""scheme""], delta[""basis_lo""][0], delta[""basis_lo""][1], delta[""wfn_lo""],; delta[""options_lo""], natom); GRAND_NEED.append(; dict(; zip(d_fields, [; delta[""stage""], delta[""scheme""],; _contract_bracketed_basis(delta[""basis_lo""][0]), delta[""wfn_lo""], NEED, -1, 0.0, None, None,; delta[""alpha""]; ]))). for stage in GRAND_NEED:; for lvl in stage['d_need'].items():; MODELCHEM.append(lvl[1]). # Apply chemical reasoning to choose the minimum computations to run; JOBS = MODELCHEM[:]. addlremark = {'energy': '', 'gradient': ', GRADIENT', 'hessian': ', HESSIAN'}; instructions = ''; instructions += """""" Naive listing of computations required.\n""""""; for mc in JOBS:; instructions += """""" %12s / %-24s for %s%s\n"""""" % \; (mc['f_wfn'], mc['f_basis'] + "" + options""*bool(mc['f_options']),; VARH[mc['f_wfn']][mc['f_wfn']], addlremark[ptype]). # Remove duplicate modelchem portion listings; for mc in MODELCHEM:; dups = -1; for indx_job, job in enumerate(JOBS):; if (job['f_wfn'] == mc['f_wfn']) and (job['f_basis'] == mc['f_basis']) and \; (job['f_options'] == mc['f_options']):; dups += 1; if dups >= 1:; del JOBS[indx_job]. # Remove chemically subsumed modelchem portion listings; if ptype == 'energy':; for mc in MODELCHEM:; for wfn in VARH[mc['f_wfn']]:; for indx_job, job in enumerate(JOBS):; if (VARH[mc['f_wfn']][wfn] == VARH[job['f_wfn']][job['f_wfn']]) and \; (mc['f_basis'] == job['f_basis']) and not \; (mc['f_wfn'] == job['f_wfn']) and \; (mc['f_options'] == False):; del JOBS[indx_job]. instructions += """"""\n Enlightened listing of computations required.\n",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/_modules/psi4/driver/driver_cbs.html:50796,energy,energy,50796,psi4manual/1.4.0/_modules/psi4/driver/driver_cbs.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/_modules/psi4/driver/driver_cbs.html,2,['energy'],['energy']
Energy Efficiency," 0.00142946 0.01008137 0.00594928 ~; 3 -76.027032729374 -0.000010063363 0.00014019 0.00008488 0.00077463 0.00044738 ~; --------------------------------------------------------------------------------------------------------------- ~. To get harmonic vibrational frequencies, it’s important to keep in mind that the values of the vibrational frequencies are a function of the molecular geometry. Therefore, it’s important to obtain the vibrational frequencies AT THE OPTIMIZED GEOMETRY. Luckily, Psi4 updates the molecule with optimized geometry as it is being optimized. So, the optimized geometry for H\(_2\)O is stored inside the h2o molecule object, which we can access! To compute the frequencies, all we need to do; is to again pass the molecule=h2o argument to the psi4.frequency() API function:. [6]:. scf_e, scf_wfn = psi4.frequency('scf/cc-pvdz', molecule=h2o, return_wfn=True). 6 displacements needed.; 1 2 3 4 5 6. Executing this cell will prompt Psi4 to compute the Hessian (second derivative matrix) of the electronic energy with respect to nuclear displacements. From this, it can obtain the harmonic vibrational frequencies, given below (roundoff errors of around \(0.1\) cm\(^{-1}\) may exist):; Irrep Harmonic Frequency; (cm-1); -----------------------------------------------; A1 1775.6478; A1 4113.3795; B2 4212.1814; -----------------------------------------------. Notice the symmetry type of the normal modes is specified (A1, A1, B2). The program also print out the normal modes in terms of Cartesian coordinates of each atom. For example, the normal mode at \(1776\) cm\(^{-1}\) is:; Frequency: 1775.65; Force constant: 0.1193; X Y Z mass; O 0.000 0.000 -0.068 15.994915; H 0.000 0.416 0.536 1.007825; H 0.000 -0.416 0.536 1.007825. where the table shows the displacements in the X, Y, and Z dimensions for each atom along the normal mode coordinate. (This information could be used to animate the vibrational frequency using visualization software.); Because the vibrational f",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/psiapi.html:9389,energy,energy,9389,psi4manual/1.9.x/psiapi.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/psiapi.html,2,['energy'],['energy']
Energy Efficiency," 0.0102383666 0.0000000000. The gradient can also be accessed from the input file as a; psi4.Matrix object through; psi4.get_gradient().; Cfour Files; The contents of all files associated with Cfour are accessible from the; input file through the Python dictionary P4C4_INFO. That is,; P4C4_INFO['zmat'] returns a string of the input file sent to Cfour.; Accessible arguments are zmat, output, and any that have been; produced of grd. For example, to print to the screen if CC convergence; is reached, the following could be placed in the Psi4 input file.; energy('c4-ccsd'); print 'miracle?', 'miracle' in P4C4_INFO['output']. Scratch Files; By default, a separate subdirectory for each Cfour call is created within; the job’s scratch directory. To explicitly specify the location of the the; Cfour scratch, execute with, for example, energy('cfour',; path='/full/path/to/cfour/scratch'). Regardless of whether the location; is specified or default, whether to preserve the scratch directory after; the computation can be specified with energy('cfour', keep=True) or; (the default) energy('cfour', keep=False). path and keep are; keyword arguments that get interpreted by the; run_cfour() function documented below. run_cfour(name[, keep, path])[source]¶; Function that prepares environment and input files; for a calculation calling Stanton and Gauss’s CFOUR code.; Also processes results back into Psi4 format.; This function is not called directly but is instead called by; energy() or optimize() when a Cfour; method is requested (through name argument). In order to function; correctly, the Cfour executable xcfour must be present in; PATH or PSIPATH. Many PSI Variables extracted from the Cfour output; Python dictionary of associated file constants accessible as P4C4_INFO['zmat'], P4C4_INFO['output'], P4C4_INFO['grd'], etc. Parameters:; name (string) – 'c4-scf' || 'c4-ccsd(t)' || 'cfour' || etc.; First argument, usually unlabeled. Indicates the computational; method to be applied to the ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/cfour-1.html:23312,energy,energy,23312,psi4manual/1.0.0/cfour-1.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/cfour-1.html,4,['energy'],['energy']
Energy Efficiency," 0.9; }. or. molecule{; H1; H2 H1 0.9; }. or. molecule{; H 0.0 0.0 0.0; H 0.0 0.0 0.9; }. or. molecule{; H 0.0 0.0 0.0; H 0.0 0.0 r; r = 0.9; }. or. molecule{; H 0.0 0.0 -r; H 0.0 0.0 r; r = 0.45; }. Blank lines are ignored and, unlike regular Python syntax, indentation within; the molecule block does not matter, although the molecule keyword itself must; be aligned within the input according to standard Python syntax. For more; examples of geometry specification, see the mints1 input file in the samples; folder. It is also possible to mix Cartesian and Z-matrix geometry; specifications, as demonstrated in the mints4 sample input file. Multiple Molecules¶; To facilitate more elaborate computations, it is possible to provide a name for; each molecule, and tell PSI4 which one should be used in a given; calculation. For example, consider the following input file:; molecule h2{; H; H 1 0.9; }. set basis cc-pvdz; set reference rhf; energy('scf'). molecule h{; H; }. set basis cc-pvdz; set reference uhf; energy('scf'). Here, two separate jobs are performed on two different molecules; the first is; performed on H2, while the second is for H atom. The last molecule to be; specified is the “active” molecule by default. To explicitly activate a named; molecule, the activate keyword is provided. Using this keyword, the above input; file can be equivalently written as follows:; molecule h2{; H; H 1 0.9; }. molecule h{; H; }. activate(h2); set basis cc-pvdz; set reference rhf; energy('scf'). activate(h); set basis cc-pvdz; set reference uhf; energy('scf'). Note that whenever the molecule is changed, the basis set must be specified; again. The following section provides more details about the job control; keywords used in the above examples. Molecule Keywords¶; In addition to specifying the geometry, additional information can be provided; in the molecule block. If two integers are encountered on any line of the; molecule block, they are interpreted as the molecular charge and mult",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b2/psithoninput-1.html:5036,energy,energy,5036,psi4manual/4.0b2/psithoninput-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b2/psithoninput-1.html,4,['energy'],['energy']
Energy Efficiency, 000 22. unified_atomic_mass_unit; 1.660539040E-27; unified atomic mass unit [kg] uncertainty=0.000 000 020 e-27. von_Klitzing_constant; 25812.8074555; von Klitzing constant [ohm] uncertainty=0.000 0059. weak_mixing_angle; 0.2223; weak mixing angle [] uncertainty=0.0021. Wien_frequency_displacement_law_constant; 5.8789238E+10; Wien frequency displacement law constant [Hz K^{-1}] uncertainty=0.000 0034 e10. Wien_wavelength_displacement_law_constant; 0.0028977729; Wien wavelength displacement law constant [m K] uncertainty=0.000 0017 e-3. calorie_joule_relationship; 4.184; calorie-joule relationship [J] uncertainty=(exact). h; 6.626070040E-34; h [J] The Planck constant (Js). c; 299792458; c [Hz] Speed of light (ms$^{-1}$). kb; 1.38064852E-23; kb [J] The Boltzmann constant (JK$^{-1}$). R; 8.3144598; R [J mol^-1 K^-1] Universal gas constant (JK$^{-1}$mol$^{-1}$). bohr2angstroms; 0.52917721067; bohr2angstroms [AA] Bohr to Angstroms conversion factor. bohr2m; 5.2917721067E-11; bohr2m [m] Bohr to meters conversion factor. bohr2cm; 5.291772106700E-9; bohr2cm [cm] Bohr to centimeters conversion factor. amu2g; 1.660539040000E-24; amu2g [g] Atomic mass units to grams conversion factor. amu2kg; 1.660539040E-27; amu2kg [kg] Atomic mass units to kg conversion factor. au2amu; 0.000548579909070; au2amu [u] Atomic units (m$@@e$) to atomic mass units conversion factor. hartree2J; 4.359744650E-18; hartree2J [J] Hartree to joule conversion factor. hartree2aJ; 4.359744650; hartree2aJ [aJ] Hartree to attojoule (10$^{-18}$J) conversion factor. cal2J; 4.184; cal2J [J] Calorie to joule conversion factor. dipmom_au2si; 8.478353552E-30; dipmom_au2si [C m] Atomic units to SI units (Cm) conversion factor for dipoles. dipmom_au2debye; 2.541746451895025916414946904; dipmom_au2debye [???] Atomic units to Debye conversion factor for dipoles. dipmom_debye2si; 3.335640951E-30; dipmom_debye2si [???] Debye to SI units (Cm) conversion factor for dipoles. c_au; 137.035999139; c_au [] Speed of light in at,MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/autodoc_physconst-1.html:37313,meter,meters,37313,psi4manual/1.3.2/autodoc_physconst-1.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/autodoc_physconst-1.html,11,['meter'],['meters']
Energy Efficiency, 0017 e-3. first_radiation_constant; 3.741771790E-16; first radiation constant [W m^2] uncertainty=0.000 000 046 e-16. first_radiation_constant_for_spectral_radiance; 1.191042953E-16; first radiation constant for spectral radiance [W m^2 sr^{-1}] uncertainty=0.000 000 015 e-16. hartree_atomic_mass_unit_relationship; 2.9212623197E-8; hartree-atomic mass unit relationship [u] uncertainty=0.000 000 0013 e-8. hartree_electron_volt_relationship; 27.21138602; hartree-electron volt relationship [eV] uncertainty=0.000 000 17. Hartree_energy; 4.359744650E-18; Hartree energy [J] uncertainty=0.000 000 054 e-18. Hartree_energy_in_eV; 27.21138602; Hartree energy in eV [eV] uncertainty=0.000 000 17. hartree_hertz_relationship; 6.579683920711E+15; hartree-hertz relationship [Hz] uncertainty=0.000 000 000 039 e15. hartree_inverse_meter_relationship; 21947463.13702; hartree-inverse meter relationship [m^{-1}] uncertainty=0.000 000 000 013 e7. hartree_joule_relationship; 4.359744650E-18; hartree-joule relationship [J] uncertainty=0.000 000 054 e-18. hartree_kelvin_relationship; 315775.13; hartree-kelvin relationship [K] uncertainty=0.000 0018 e5. hartree_kilogram_relationship; 4.850870129E-35; hartree-kilogram relationship [kg] uncertainty=0.000 000 060 e-35. helion_electron_mass_ratio; 5495.88527922; helion-electron mass ratio [] uncertainty=0.000 000 27. helion_g_factor; -4.255250616; helion g factor [] uncertainty=0.000 000 050. helion_mag_mom; -1.074617522E-26; helion mag. mom. [J T^{-1}] uncertainty=0.000 000 014 e-26. helion_mag_mom_to_Bohr_magneton_ratio; -0.001158740958; helion mag. mom. to Bohr magneton ratio [] uncertainty=0.000 000 014 e-3. helion_mag_mom_to_nuclear_magneton_ratio; -2.127625308; helion mag. mom. to nuclear magneton ratio [] uncertainty=0.000 000 025. helion_mass; 5.006412700E-27; helion mass [kg] uncertainty=0.000 000 062 e-27. helion_mass_energy_equivalent; 4.499539341E-10; helion mass energy equivalent [J] uncertainty=0.000 000 055 e-10. helion_mass_ener,MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/autodoc_physconst-1.html:14445,joule,joule,14445,psi4manual/1.3.2/autodoc_physconst-1.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/autodoc_physconst-1.html,11,['joule'],['joule']
Energy Efficiency," 034108 (2006) paper defining the functional. cc5; RHF CCSD(T) cc-pVDZ frozen-core energy of C4NH4 Anion. aediis-2; EDIIS test case from 10.1063/1.1470195. sapt7; SAPT0 open-shell computation of H2O-HO2 interaction energy First with cc-pVDZ and density fitted integrals with UHF Then with 6-31g and direct integrals, except for dispersion that is computed with cc-pVDZ-ri density fitting with UHF. isapt2; This is a shorter version if isapt1 - does not do cube plots. See isapt1 for full details. dfccsd1; DF-CCSD cc-pVDZ energy for the H2O molecule. nbody-freq; Vibrational and thermo analysis of water trimer (geometry from J. Chem. Theory Comput. 11, 2126-2136 (2015)). fci-coverage; 6-31G H2O Test for coverage. dlpnomp2-1; comparison of DF-MP2 and DLPNO-MP2. opt5; 6-31G** UHF CH2 3B1 optimization. Uses a Z-Matrix with dummy atoms, just for demo and testing purposes. dfmp2-ecp; Ne-Xe dimer MP2 energies with ECP, with electrons correlated then frozen. sapt-exch-ind-inf; SAPT(DFT) aug-cc-pVDZ interaction energy between Ne and Ar atoms. mbis-4; MBIS calculation on NaCl. cisd-opt-fd; H2O CISD/6-31G** Optimize Geometry by Energies. dfmp2-grad2; DF-MP2 cc-pVDZ gradient for the NO molecule. dfomp3-grad1; DF-OMP3 cc-pVDZ gradients for the H2O molecule. dfomp2-3; OMP2 cc-pVDZ energy for the H2O molecule. pywrap-cbs1; Various basis set extrapolation tests. dct-grad1; Various DCT analytic gradients for the O2 molecule with 6-31G basis set. opt-full-hess-every; SCF/sto-3g optimization with a hessian every step. dct10; The multiple guesses for DCT amplitudes for ODC-12. mom-h2o-3; MOM excitation from LUMO HOMO+3. isapt1; This test case shows an example of running and analyzing an FI-SAPT0/jun-cc-pvdz computation for 2,4-pentanediol (targeting the intramolecular hydrogen bond between the two hydroxyl groups). dfccsdat1; DF-CCSD(AT) cc-pVDZ energy for the H2O molecule. casscf-sa-sp; Example of state-averaged CASSCF for the C2 molecule see C. D. Sherrill and P. Piecuch, J. Chem. Phys. 122",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/autodoc_testsuite_corepsi4.html:36080,energy,energy,36080,psi4manual/master/autodoc_testsuite_corepsi4.html,https://psicode.org,https://psicode.org/psi4manual/master/autodoc_testsuite_corepsi4.html,2,['energy'],['energy']
Energy Efficiency," 1); C++ signature :. i multiplicity(N3psi8MoleculeE {lvalue}). psi4.Molecule.name()¶; Python Library Documentation: method name; name(...) unbound psi4.Molecule method. name( (Molecule)arg1) -> str :. Gets molecule name; C++ signature :. Ss name(N3psi8MoleculeE {lvalue}). psi4.Molecule.natom()¶; Python Library Documentation: method natom; natom(...) unbound psi4.Molecule method. natom( (Molecule)arg1) -> int :. Number of real atoms; C++ signature :. i natom(N3psi8MoleculeE {lvalue}). psi4.Molecule.nfragments()¶; Python Library Documentation: method nfragments; nfragments(...) unbound psi4.Molecule method. nfragments( (Molecule)arg1) -> int :. Gets the number of fragments in the molecule; C++ signature :. i nfragments(N3psi8MoleculeE {lvalue}). psi4.Molecule.nuclear_repulsion_energy()¶; Python Library Documentation: method nuclear_repulsion_energy; nuclear_repulsion_energy(...) unbound psi4.Molecule method. nuclear_repulsion_energy( (Molecule)arg1) -> float :. Computes nuclear repulsion energy; C++ signature :. d nuclear_repulsion_energy(N3psi8MoleculeE {lvalue}). psi4.Molecule.point_group()¶; Python Library Documentation: method point_group; point_group(...) unbound psi4.Molecule method. point_group( (Molecule)arg1) -> PointGroup :. Returns the current point group object; C++ signature :. N5boost10shared_ptrIN3psi10PointGroupEEE point_group(N3psi8MoleculeE {lvalue}). psi4.Molecule.print_cluster()¶; Python Library Documentation: method print_cluster; print_cluster(...) unbound psi4.Molecule method. print_cluster( (Molecule)arg1) -> None :. Prints the molecule in Cartesians in input units adding fragment separators; C++ signature :. void print_cluster(N3psi8MoleculeE {lvalue}). psi4.Molecule.print_in_input_format()¶; Python Library Documentation: method print_in_input_format; print_in_input_format(...) unbound psi4.Molecule method. print_in_input_format( (Molecule)arg1) -> None :. Prints the molecule as Cartesian or ZMatrix entries, just as inputted.; C++ signature :",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/autodoc_psimod-1.html:246113,energy,energy,246113,psi4manual/1.0.0/autodoc_psimod-1.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/autodoc_psimod-1.html,2,['energy'],['energy']
Energy Efficiency," 1, 0, 1, 2, 5, 6, 5, 4, 3, 0, 1, 0, 1, 2, 3, 2, 1, 0, 1, 0, 1, 0, 3, 4, 5, 6, 7, 8, 5, 4, 3, 2, 1, 0, 1, 2, 3,; 4, 5, 4, 3, 2, 1, 0, 1, 2, 3, 2, 1, 0; ]. # the parent molecule and reference type; mol = wfn.molecule(). # Get unique atoms by input symbol,; # Be to handle different basis sets; unq_atoms = set(); for atom in range(mol.natom()):; symbol = mol.symbol(atom); Z = int(mol.Z(atom)); basis = mol.basis_on_atom(atom); unq_atoms.add((symbol, Z, basis)). psi4.core.print_out(f"" Running {len(unq_atoms)} free-atom UHF computations""). optstash = optproc.OptionsState([""SCF"", 'REFERENCE']); for a_sym, a_z, basis in unq_atoms:. # make sure we do UHF/UKS if we're not a singlet; if reference_S[a_z] != 0:; psi4.core.set_local_option(""SCF"", ""REFERENCE"", ""UHF""); else:; psi4.core.set_local_option(""SCF"", ""REFERENCE"", ""RHF""). # Set the molecule, here just an atom; a_mol = psi4.core.Molecule.from_arrays(geom=[0, 0, 0],; elem=[a_sym],; molecular_charge=0,; molecular_multiplicity=int(1 + reference_S[a_z])); a_mol.update_geometry(); psi4.molutil.activate(a_mol). method = theory + ""/"" + basis. # Get the atomic wfn; at_e, at_wfn = psi4.energy(method, return_wfn=True). # Now, re-run mbis for the atomic density, grabbing only the volume; psi4.oeprop(at_wfn, 'MBIS_CHARGES', title=a_sym + "" "" + method, free_atom=True). vw = at_wfn.array_variable('MBIS RADIAL MOMENTS <R^3>') # P::e OEPROP; vw = vw.get(0, 0). # set the atomic widths as wfn variables; wfn.set_variable(""MBIS FREE ATOM "" + a_sym.upper() + "" VOLUME"", vw); # set_variable(""MBIS FREE ATOM n VOLUME"") # P::e OEPROP; ; psi4.core.clean(); psi4.core.clean_variables(). # reset mol and reference to original; optstash.restore(); mol.update_geometry(); psi4.molutil.activate(mol). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .  · ; 1.8.2;  · . PSI4. Module code; psi4.driver.p4util.prop_util. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:04AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/_modules/psi4/driver/p4util/prop_util.html:3887,energy,energy,3887,psi4manual/1.8.x/_modules/psi4/driver/p4util/prop_util.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/_modules/psi4/driver/p4util/prop_util.html,1,['energy'],['energy']
Energy Efficiency," 1, 0, 1, 2, 5, 6, 5, 4, 3, 0, 1, 0, 1, 2, 3, 2, 1, 0, 1, 0, 1, 0, 3, 4, 5, 6, 7, 8, 5, 4, 3, 2, 1, 0, 1, 2, 3,; 4, 5, 4, 3, 2, 1, 0, 1, 2, 3, 2, 1, 0; ]. # the parent molecule and reference type; mol = wfn.molecule(). # Get unique atoms by input symbol,; # Be to handle different basis sets; unq_atoms = set(); for atom in range(mol.natom()):; symbol = mol.symbol(atom); Z = int(mol.Z(atom)); basis = mol.basis_on_atom(atom); unq_atoms.add((symbol, Z, basis)). psi4.core.print_out(f"" Running {len(unq_atoms)} free-atom UHF computations""). optstash = optproc.OptionsState([""SCF"", 'REFERENCE']); for a_sym, a_z, basis in unq_atoms:. # make sure we do UHF/UKS if we're not a singlet; if reference_S[a_z] != 0:; psi4.core.set_local_option(""SCF"", ""REFERENCE"", ""UHF""); else:; psi4.core.set_local_option(""SCF"", ""REFERENCE"", ""RHF""). # Set the molecule, here just an atom; a_mol = psi4.core.Molecule.from_arrays(geom=[0, 0, 0],; elem=[a_sym],; molecular_charge=0,; molecular_multiplicity=int(1 + reference_S[a_z])); a_mol.update_geometry(); psi4.molutil.activate(a_mol). method = theory + ""/"" + basis. # Get the atomic wfn; at_e, at_wfn = psi4.energy(method, return_wfn=True). # Now, re-run mbis for the atomic density, grabbing only the volume; psi4.oeprop(at_wfn, 'MBIS_CHARGES', title=a_sym + "" "" + method, free_atom=True). vw = at_wfn.array_variable('MBIS RADIAL MOMENTS <R^3>') # P::e OEPROP; vw = vw.get(0, 0). # set the atomic widths as wfn variables; wfn.set_variable(""MBIS FREE ATOM "" + a_sym.upper() + "" VOLUME"", vw); # set_variable(""MBIS FREE ATOM n VOLUME"") # P::e OEPROP; ; psi4.core.clean(); psi4.core.clean_variables(). # reset mol and reference to original; optstash.restore(); mol.update_geometry(); psi4.molutil.activate(mol). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .  · ; 1.9.1;  · . PSI4. Module code; psi4.driver.p4util.prop_util. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/_modules/psi4/driver/p4util/prop_util.html:3887,energy,energy,3887,psi4manual/1.9.x/_modules/psi4/driver/p4util/prop_util.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/_modules/psi4/driver/p4util/prop_util.html,1,['energy'],['energy']
Energy Efficiency," 1.0e-6 else 0.0; ]. # Determine degeneracy of rotational constants.; degen = 0; for i in range(2):; for j in range(i + 1, 3):; if degen >= 2:; continue; rabs = math.fabs(rot_const[i] - rot_const[j]); tmp = rot_const[i] if rot_const[i] > rot_const[j] else rot_const[j]; if rabs > ZERO:; rel = rabs / tmp; else:; rel = 0.0; if rel < tol:; degen += 1; #print ""\tDegeneracy is %d\n"" % (degen). # Determine rotor type; if self.natom() == 1:; rotor_type = 'RT_ATOM'; elif rot_const[0] == 0.0:; rotor_type = 'RT_LINEAR' # 0 < IB == IC inf > B == C; elif degen == 2:; rotor_type = 'RT_SPHERICAL_TOP' # IA == IB == IC A == B == C; elif degen == 1:; if (rot_const[1] - rot_const[2]) < 1.0e-6:; rotor_type = 'RT_PROLATE_SYMMETRIC_TOP' # IA < IB == IC A > B == C; elif (rot_const[0] - rot_const[1]) < 1.0e-6:; rotor_type = 'RT_OBLATE_SYMMETRIC_TOP' # IA == IB < IC A == B > C; else:; rotor_type = 'RT_ASYMMETRIC_TOP' # IA < IB < IC A > B > C; return rotor_type. def center_of_charge(self):; """"""Computes center of charge of molecule (does not translate molecule). >>> H2OH2O.center_of_charge(); [-0.073339893272065401, 0.002959783555632145, 0.0]. """"""; ret = [0.0, 0.0, 0.0]; total_c = 0.0. for at in range(self.natom()):; c = self.charge(at); ret = add(ret, scale(self.xyz(at), c)); total_c += c. ret = scale(ret, 1.0 / total_c); return ret. def move_to_coc(self):; """"""Moves molecule to center of charge. """"""; coc = scale(self.center_of_charge(), -1.0); self.translate(coc). def rotational_symmetry_number(self):; """"""Number of unique orientations of the rigid molecule that only interchange identical atoms. Notes; -----; Source http://cccbdb.nist.gov/thermo.asp (search ""symmetry number""). """"""; pg = self.get_full_point_group(); pg = self.full_point_group_with_n(); if pg in ['ATOM', 'C1', 'Ci', 'Cs', 'C_inf_v']:; sigma = 1; elif pg == 'D_inf_h':; sigma = 2; elif pg in ['T', 'Td']:; sigma = 12; elif pg == 'Oh':; sigma = 24; elif pg == 'Ih':; sigma = 60; elif pg in ['Cn', 'Cnv', 'Cnh']:; sigma = self.full_pg_",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/_modules/psi4/driver/qcdb/molecule.html:32200,charge,charge,32200,psi4manual/1.3.2/_modules/psi4/driver/qcdb/molecule.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/_modules/psi4/driver/qcdb/molecule.html,8,['charge'],['charge']
Energy Efficiency, 1.6021766208E-19; electron volt [J] uncertainty=0.000 000 0098 e-19. electron_volt_atomic_mass_unit_relationship; 1.0735441105E-9; electron volt-atomic mass unit relationship [u] uncertainty=0.000 000 0066 e-9. electron_volt_hartree_relationship; 0.03674932248; electron volt-hartree relationship [E_h] uncertainty=0.000 000 023 e-2. electron_volt_hertz_relationship; 2.417989262E+14; electron volt-hertz relationship [Hz] uncertainty=0.000 000 015 e14. electron_volt_inverse_meter_relationship; 806554.4005; electron volt-inverse meter relationship [m^{-1}] uncertainty=0.000 000 050 e5. electron_volt_joule_relationship; 1.6021766208E-19; electron volt-joule relationship [J] uncertainty=0.000 000 0098 e-19. electron_volt_kelvin_relationship; 11604.5221; electron volt-kelvin relationship [K] uncertainty=0.000 000 67 e4. electron_volt_kilogram_relationship; 1.782661907E-36; electron volt-kilogram relationship [kg] uncertainty=0.000 000 011 e-36. elementary_charge; 1.6021766208E-19; elementary charge [C] uncertainty=0.000 000 0098 e-19. elementary_charge_over_h; 2.417989262E+14; elementary charge over h [A J^{-1}] uncertainty=0.000 000 015 e14. Faraday_constant; 96485.33289; Faraday constant [C mol^{-1}] uncertainty=0.000 59. Faraday_constant_for_conventional_electric_current; 96485.3251; Faraday constant for conventional electric current [C_{90} mol^{-1}] uncertainty=0.0012. Fermi_coupling_constant; 0.000011663787; Fermi coupling constant [GeV^{-2}] uncertainty=0.000 0006 e-5. fine_structure_constant; 0.0072973525664; fine-structure constant [] uncertainty=0.000 000 0017 e-3. first_radiation_constant; 3.741771790E-16; first radiation constant [W m^2] uncertainty=0.000 000 046 e-16. first_radiation_constant_for_spectral_radiance; 1.191042953E-16; first radiation constant for spectral radiance [W m^2 sr^{-1}] uncertainty=0.000 000 015 e-16. hartree_atomic_mass_unit_relationship; 2.9212623197E-8; hartree-atomic mass unit relationship [u] uncertainty=0.000 000 0013 e-8. hartre,MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/autodoc_physconst-1.html:12868,charge,charge,12868,psi4manual/1.3.2/autodoc_physconst-1.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/autodoc_physconst-1.html,11,['charge'],['charge']
Energy Efficiency," 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; CCWavefunction. CCWavefunction¶. class psi4.core.CCWavefunction¶; Bases: Wavefunction; Specialized Wavefunction used by the ccenergy, cceom, ccgradient, etc. modules.; Methods Summary. get_amplitudes(self); Get dict of converged T amplitudes. total_index(self, i, h); Map an index (i) within irrep (h) to its energy-sorted index among all roots. Methods Documentation. get_amplitudes(self: psi4.core.CCWavefunction) → Dict[str, psi4.core.Matrix]¶; Get dict of converged T amplitudes. Returns:. amps (dict (spacestr, SharedMatrix)) – spacestr is a description of the amplitude set using the following conventions. I,J,K -> alpha occupied; i,j,k -> beta occupied; A,B,C -> alpha virtual; a,b,c -> beta virtual. The following entries are stored in the amps, depending on the reference type; RHF (tIA, tIjAb); UHF (tIA, tia, tIjAb, tIJAB, tijab); ROHF (tIA, tia, tIjAb, tIJAB, tijab). Examples; RHF T1 diagnostic = sqrt(sum_ia (T_ia * T_ia)/nelec); >>> mol = “””; … 0 1; … Ne 0.0 0.0 0.0; … symmetry c1”””; >>> e, wfn = psi4.energy(“CCSD/cc-pvdz”, return_wfn=True); >>> t1 = wfn.get_amplitudes()[‘tia’].to_array(); >>> t1_diagnostic = np.sqrt(np.dot(t1.ravel(),t1.ravel())/ (2 * wfn.nalpha()); >>> t1_diagnostic == psi4.variable(“CC T1 DIAGNOSTIC”); True. Warning; Symmetry free calculations only (nirreps > 1 will cause error). Warning; No checks that the amplitudes will fit in core. Do not use for proteins. total_index(self: psi4.core.CCWavefunction, i: int, h: int) → int¶; Map an index (i) within irrep (h) to its energy-sorted index among all roots. table of contents. CCWavefunction; CCWavefunction; CCWavefunction.get_amplitudes(); CCWavefunction.total_index(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; CCWavefunction. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/api/psi4.core.CCWavefunction.html:1144,energy,energy,1144,psi4manual/1.8.x/api/psi4.core.CCWavefunction.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/api/psi4.core.CCWavefunction.html,2,['energy'],"['energy', 'energy-sorted']"
Energy Efficiency," 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; CCWavefunction. CCWavefunction¶. class psi4.core.CCWavefunction¶; Bases: Wavefunction; Specialized Wavefunction used by the ccenergy, cceom, ccgradient, etc. modules.; Methods Summary. get_amplitudes(self); Get dict of converged T amplitudes. total_index(self, i, h); Map an index (i) within irrep (h) to its energy-sorted index among all roots. Methods Documentation. get_amplitudes(self: psi4.core.CCWavefunction) → Dict[str, psi4.core.Matrix]¶; Get dict of converged T amplitudes. Returns:. amps (dict (spacestr, SharedMatrix)) – spacestr is a description of the amplitude set using the following conventions. I,J,K -> alpha occupied; i,j,k -> beta occupied; A,B,C -> alpha virtual; a,b,c -> beta virtual. The following entries are stored in the amps, depending on the reference type; RHF (tIA, tIjAb); UHF (tIA, tia, tIjAb, tIJAB, tijab); ROHF (tIA, tia, tIjAb, tIJAB, tijab). Examples; RHF T1 diagnostic = sqrt(sum_ia (T_ia * T_ia)/nelec); >>> mol = “””; … 0 1; … Ne 0.0 0.0 0.0; … symmetry c1”””; >>> e, wfn = psi4.energy(“CCSD/cc-pvdz”, return_wfn=True); >>> t1 = wfn.get_amplitudes()[‘tia’].to_array(); >>> t1_diagnostic = np.sqrt(np.dot(t1.ravel(),t1.ravel())/ (2 * wfn.nalpha()); >>> t1_diagnostic == psi4.variable(“CC T1 DIAGNOSTIC”); True. Warning; Symmetry free calculations only (nirreps > 1 will cause error). Warning; No checks that the amplitudes will fit in core. Do not use for proteins. total_index(self: psi4.core.CCWavefunction, i: int, h: int) → int¶; Map an index (i) within irrep (h) to its energy-sorted index among all roots. table of contents. CCWavefunction; CCWavefunction; CCWavefunction.get_amplitudes(); CCWavefunction.total_index(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; CCWavefunction. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/api/psi4.core.CCWavefunction.html:1144,energy,energy,1144,psi4manual/1.9.x/api/psi4.core.CCWavefunction.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/api/psi4.core.CCWavefunction.html,2,['energy'],"['energy', 'energy-sorted']"
Energy Efficiency," 10); if not PsiMod.has_option_changed('SCF', 'D_CONVERGENCE'):; if procedures['energy'][lowername] == run_scf or procedures['energy'][lowername] == run_dft:; PsiMod.set_local_option('SCF', 'D_CONVERGENCE', 8); else:; PsiMod.set_local_option('SCF', 'D_CONVERGENCE', 10). # Set post-scf convergence criteria (global will cover all correlated modules); if not PsiMod.has_global_option_changed('E_CONVERGENCE'):; if not procedures['energy'][lowername] == run_scf and not procedures['energy'][lowername] == run_dft:; PsiMod.set_global_option('E_CONVERGENCE', 8). # Does dertype indicate an analytic procedure both exists and is wanted?; if (dertype == 1):; # Nothing to it but to do it. Gradient information is saved; # into the current reference wavefunction; procedures['gradient'][lowername](lowername, **kwargs). if 'mode' in kwargs and kwargs['mode'].lower() == 'sow':; raise ValidationError('Optimize execution mode \'sow\' not valid for analytic gradient calculation.'); PsiMod.wavefunction().energy(). optstash.restore(); return PsiMod.get_variable('CURRENT ENERGY'). else:; # If not, perform finite difference of energies. opt_iter = 1; if ('opt_iter' in kwargs):; opt_iter = kwargs['opt_iter']. if opt_iter == 1:; print('Performing finite difference calculations'). # Obtain list of displacements; displacements = PsiMod.fd_geoms_1_0(); ndisp = len(displacements). # This version is pretty dependent on the reference geometry being last (as it is now); print(' %d displacements needed ...' % (ndisp), end=""""); energies = []. # S/R: Write instructions for sow/reap procedure to output file and reap input file; if (opt_mode.lower() == 'sow'):; instructionsO = """"""\n The optimization sow/reap procedure has been selected through mode='sow'. In addition\n""""""; instructionsO += """""" to this output file (which contains no quantum chemical calculations), this job\n""""""; instructionsO += """""" has produced a number of input files (OPT-%s-*.in) for individual components\n"""""" % (str(opt_iter)); instructi",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b4/_modules/driver.html:34356,energy,energy,34356,psi4manual/4.0b4/_modules/driver.html,https://psicode.org,https://psicode.org/psi4manual/4.0b4/_modules/driver.html,1,['energy'],['energy']
Energy Efficiency," 13; 14; 15; 16; 17; 18; 19; 20; 21; 22; 23; 24; 25molecule hooh {; 0 1; H 0.850718 0.772960 0.563468; O 0.120432 0.684669 -0.035503; O -0.120432 -0.684669 -0.035503; H -0.850718 -0.772960 0.563468; }. set {; basis cc-pvdz; intrafrag_step_limit 0.1; }. dihedrals = [100,110,120,130,140,150]; PES = []. for phi in dihedrals:; my_string = ""1 2 3 4 "" + str(phi); set optking fixed_dihedral = $my_string; E = optimize('scf'); PES.append((phi, E)). print ""\n\tcc-pVDZ SCF energy as a function of phi\n""; for point in PES:; print ""\t%5.1f%20.10f"" % (point[0], point[1]). Dealing with problematic optimizations¶; Although optking is continuously improved with robustness in mind, some; attempted optimizations will inevitably fail to converge to the desired minima.; For difficult cases, the following suggestions are made. As for any optimizer, computing the Hessian and limiting the step size will; successfully converge a higher percentage of cases. The default settings have; been chosen because they perform efficiently for common, representative test sets.; More restrictive, cautious steps are sometimes necessary.; DYNAMIC_LEVEL allows optking to change the method of optimization; toward algorithms that, while often less efficient, may help to converge difficult; cases. If this is initially set to 1, then optking, as poor steps are detected,; will increase the level through several forms of more robust and cautious algorithms.; The changes will reduce the trust radius, allow backward steps (partial line; searching), add cartesian coordinates, switch to cartesian coordinates, and take; steepest-descent steps.; The developers have found the OPT_COORDINATES set to “BOTH” which; includes both the redundant internal coordinate set, as well as cartesian coordinates,; works well for systems with long ‘arms’ or floppy portions of a molecule poorly; described by local internals. Direct manipulation of the optmization coordinates¶. Generate the internal coordinates and then stop:; 1; 2set int",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/optking-1.html:8486,efficient,efficiently,8486,psi4manual/1.1.0/optking-1.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/optking-1.html,6,['efficient'],['efficiently']
Energy Efficiency," 13; 14; 15; 16molecule h2o{; O; H 1 R; H 1 R 2 A; }. Rvals = [0.9, 1.0, 1.1]; Avals = range(102, 106, 2). set basis cc-pvdz; set scf e_convergence=11; for R in Rvals:; h2o.R = R; for A in Avals:; h2o.A = A; energy('scf'). The declarations of Rvals and Avals are both completely standard Python syntax.; Having named our molecule h2o we can then set the values of R and A within; the loops. Note that we do not need the dollar sign to access the Python; variable in this example; that is required only when using Python variables; with the set keyword.; Cartesian geometries, because of details of the geometry update process,; need to be specified within the loop(s) along with their basis set when; geometry scans are performed. See scf4 for analogous Z-matrix; and Cartiesian scans. Tables of Results¶; The results of computations can be compactly tabulated with the Table() Psithon; function. For example, in the following potential energy surface scan for water; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 13; 14; 15; 16; 17; 18; 19; 20; 21; 22; 23; 24; 25; 26; 27molecule h2o {; O; H 1 R; H 1 R 2 A; }. Rvals=[0.9,1.0,1.1]; Avals=range(100,102,2). table=Table(rows=[""R"",""A""], cols=[""E(SCF)"",""E(SCS)"",""E(DFMP2)""]). set basis cc-pvdz. for R in Rvals:; h2o.R = R; for A in Avals:; h2o.A = A; energy('mp2'); escf = get_variable('SCF TOTAL ENERGY'); edfmp2 = get_variable('MP2 TOTAL ENERGY'); escsmp2 = get_variable('SCS-MP2 TOTAL ENERGY'); table[R][A] = [escf, escsmp2, edfmp2]. print table; relative=table.copy(); relative.absolute_to_relative(); print relative. we first define a table (on line 10) with two row indices and three column; indices. As the potential energy scan is performed, the results are stored; (line 22) and the final table is printed to the output file (line 24). The; table is converted from absolute energies to relative energies (in kcal mol-1); on line 26, before being printed again. The relative energies are reported with; respect to the lowest value in each column. More ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/psithoninput-1.html:13483,energy,energy,13483,psi4manual/1.1.0/psithoninput-1.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/psithoninput-1.html,6,['energy'],['energy']
Energy Efficiency," 15; PH 16 17 18 19 20 21 22 23 24 25 26. At this point, the user should run the fsapt.py post-processing script in; the fsapt directory as:; 1>>> fsapt.py. This will generate, among other files, the desired functional-group partition in; fsapt.dat. For our problem, the bottom of this file contains the finished; partition:; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10Frag1 Frag2 Elst Exch IndAB IndBA Disp Total; OH OH -8.425 6.216 -0.583 -1.512 -1.249 -5.553; OH PH 1.392 0.716 0.222 -0.348 -0.792 1.189; PH OH -2.742 0.749 -0.147 -0.227 -0.674 -3.040; PH PH 0.680 2.187 0.007 -0.208 -2.400 0.266; OH All -7.033 6.931 -0.362 -1.860 -2.040 -4.364; PH All -2.062 2.936 -0.140 -0.435 -3.074 -2.774; All OH -11.167 6.965 -0.730 -1.739 -1.923 -8.594; All PH 2.072 2.903 0.229 -0.556 -3.191 1.456; All All -9.095 9.867 -0.501 -2.295 -5.114 -7.138. Note that the assignment of linking sigma bond contributions is a small point of; ambiguity in F-SAPT. The fsapt.dat file presents the “links-by-charge”; assignment at the top and the “links by 50-50” assignment at the bottom. We; generally prefer the latter, but both generally give qualitatively identical; energetic partitions.; Users should check the files fragA.dat and fragB.dat to ensure that; there is not too much charge delocalization from one fragment to another. This; is presented in the “Orbital Check” section in these files – a value larger than; 0.1 docc is an indication that the picture of localizable functional groups may; be breaking down. We also strongly discourage the cutting of double,; triple, or aromatic bonding motifs when partitioning the molecule into fragments; – cuts across only simple sigma bonds are encouraged. Order-1 Visualization with PyMol¶; The fsapt.py script above also generates a number of order-1 .pdb files; that can be used to get a quick qualitative picture of the F-SAPT partition. The; preferred way to do this is to use PyMol to make plots of the molecular geometry; with the atoms colored according to their order-",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/fisapt-1.html:6324,charge,charge,6324,psi4manual/1.1.0/fisapt-1.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/fisapt-1.html,6,['charge'],['charge']
Energy Efficiency," 16; 17; 18; 19; 20; 21; 22; 23; 24; 25; 26; 27; 28; 29; 30QCISD iterations converged!. OS MP2 FNO correction: -0.000819116338; SS MP2 FNO correction: -0.000092278158; MP2 FNO correction: -0.000911394496. OS MP2 correlation energy: -0.166478414245; SS MP2 correlation energy: -0.056669079827; MP2 correlation energy: -0.223147494072; * MP2 total energy: -76.258836941658. OS MP2.5 correlation energy: -0.171225850256; SS MP2.5 correlation energy: -0.054028401038; MP2.5 correlation energy: -0.225254251294; * MP2.5 total energy: -76.260943698880. OS MP3 correlation energy: -0.175973286267; SS MP3 correlation energy: -0.051387722248; MP3 correlation energy: -0.227361008515; * MP3 total energy: -76.263050456101. OS MP4(SDQ) correlation energy: -0.180324322304; SS MP4(SDQ) correlation energy: -0.048798468084; MP4(SDQ) correlation energy: -0.230995119324; * MP4(SDQ) total energy: -76.266684566910. OS QCISD correlation energy: -0.181578117924; SS QCISD correlation energy: -0.049853548145; QCISD correlation energy: -0.231431666069; * QCISD total energy: -76.267121113654. The first set of energies printed corresponds to the second-order FNO; correction mentioned previously. Results for many-body perturbation; theory through partial fourth order are then provided.; The notation MP4(SDQ) indicates that we have included all contributions to; the correlation energy through fourth order, with the exception of that; from connected triple excitations.; One need not run a full QCISD or CCSD computation to obtain these; perturbation theory results. The keywords for invoking perturbation; theory computations are given below in; Table FNOCC Methods. Full MP4 correlation; energies are also available. Coupled electron pair approximation¶; Coupled-pair methods can be viewed as approximations to CCSD or as; size-extensive modifications of CISD. The methods have the same; complexity as CISD, and solving the CISD or coupled-pair equations; requires fewer floating point operations than solving the",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/fnocc-1.html:6274,energy,energy,6274,psi4manual/1.1.0/fnocc-1.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/fnocc-1.html,6,['energy'],['energy']
Energy Efficiency," 1; 2>>> # [8] cbs() coupled with optimize(); >>> TODO optimize('mp2', corl_basis='cc-pV[DT]Z', corl_scheme=corl_xtpl_helgaker_2, func=cbs). Note; Presently (May 2016), only two of the five delta possibilities are active. Also, temporarily extrapolations are performed on differences of target and scf total energies, rather than on correlation energies directly. This doesn’t affect the extrapolated values of the particular formulas defined here (though it does affect the betas, which are commented out), but it is sloppy and temporary and could affect any user-defined corl extrapolations. Output¶; At the beginning of a cbs() job is printed a listing of the individual; energy calculations which will be performed. The output snippet below is; from the example job [2] above. It shows first each model chemistry needed; to compute the aggregate model chemistry requested through cbs(). Then,; since, for example, an energy('ccsd(t)') yields CCSD(T), CCSD, MP2,; and SCF energy values, the wrapper condenses this task list into the second; list of minimum number of calculations which will actually be run.; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 13Naive listing of computations required.; scf / aug-cc-pvqz for SCF TOTAL ENERGY; mp2 / aug-cc-pvtz for MP2 CORRELATION ENERGY; mp2 / aug-cc-pvqz for MP2 CORRELATION ENERGY; ccsd(t) / aug-cc-pvdz for CCSD(T) CORRELATION ENERGY; ccsd(t) / aug-cc-pvtz for CCSD(T) CORRELATION ENERGY; mp2 / aug-cc-pvdz for MP2 CORRELATION ENERGY; mp2 / aug-cc-pvtz for MP2 CORRELATION ENERGY. Enlightened listing of computations required.; mp2 / aug-cc-pvqz for MP2 CORRELATION ENERGY; ccsd(t) / aug-cc-pvdz for CCSD(T) CORRELATION ENERGY; ccsd(t) / aug-cc-pvtz for CCSD(T) CORRELATION ENERGY. At the end of a cbs() job is printed a summary section like the one below. First,; in the components section, are listed the results for each model chemistry available, whether; required for the cbs job (*) or not. Next, in the stages section, are listed the results for; e",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/cbs-1.html:13155,energy,energy,13155,psi4manual/1.2.1/cbs-1.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/cbs-1.html,8,['energy'],['energy']
Energy Efficiency," 2); if len(alt_method_name) > 0:; alternatives = """""" Did you mean? %s"""""" % (' '.join(alt_method_name)). raise ValidationError(""""""Derivative method 'name' %s and derivative level 'dertype' %s are not available.%s""""""; % (method_name, str(dertype), alternatives)). return dertype. def _energy_is_invariant(gradient, stationary_criterion=1.e-2):; """"""Polls options and probes `gradient` to return whether current method; and system expected to be invariant to translations and rotations of; the coordinate system. """"""; stationary_point = gradient.rms() < stationary_criterion # 1.e-2 pulled out of a hat. efp = core.get_active_efp(); efp_present = efp.nfragments() > 0. translations_projection_sound = (not core.get_option('SCF', 'EXTERN') and; not core.get_option('SCF', 'PERTURB_H') and; not efp_present); rotations_projection_sound = (translations_projection_sound and; stationary_point). return translations_projection_sound, rotations_projection_sound. [docs]def energy(name, **kwargs):; r""""""Function to compute the single-point electronic energy. :returns: *float* |w--w| Total electronic energy in Hartrees. SAPT & EFP return interaction energy. :returns: (*float*, :py:class:`~psi4.core.Wavefunction`) |w--w| energy and wavefunction when **return_wfn** specified. :PSI variables:. .. hlist::; :columns: 1. * :psivar:`CURRENT ENERGY <CURRENTENERGY>`; * :psivar:`CURRENT REFERENCE ENERGY <CURRENTREFERENCEENERGY>`; * :psivar:`CURRENT CORRELATION ENERGY <CURRENTCORRELATIONENERGY>`. :type name: string; :param name: ``'scf'`` || ``'mp2'`` || ``'ci5'`` || etc. First argument, usually unlabeled. Indicates the computational method; to be applied to the system. :type molecule: :ref:`molecule <op_py_molecule>`; :param molecule: ``h2o`` || etc. The target molecule, if not the last molecule defined. :type return_wfn: :ref:`boolean <op_py_boolean>`; :param return_wfn: ``'on'`` || |dl| ``'off'`` |dr|. Indicate to additionally return the :py:class:`~psi4.core.Wavefunction`; calculation result as the s",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/_modules/psi4/driver/driver.html:4642,energy,energy,4642,psi4manual/1.2.1/_modules/psi4/driver/driver.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/_modules/psi4/driver/driver.html,2,['energy'],['energy']
Energy Efficiency," 2.05367e-01 2.58009e-02; @DF-UHF iter 2: -149.62349901753706 -2.85358e-02 6.68980e-03 DIIS; @DF-UHF iter 3: -149.62639942687878 -2.90041e-03 2.19285e-03 DIIS; @DF-UHF iter 4: -149.62689561367233 -4.96187e-04 5.99497e-04 DIIS; @DF-UHF iter 5: -149.62694151275420 -4.58991e-05 1.27338e-04 DIIS; @DF-UHF iter 6: -149.62694337910040 -1.86635e-06 1.65616e-05 DIIS; @DF-UHF iter 7: -149.62694340915198 -3.00516e-08 2.68990e-06 DIIS; @DF-UHF iter 8: -149.62694340999315 -8.41169e-10 2.61249e-07 DIIS. DF guess converged.; ... @UHF iter 9: -149.62730705472407 -3.63645e-04 8.63697e-05 DIIS; @UHF iter 10: -149.62730737348096 -3.18757e-07 1.50223e-05 DIIS; @UHF iter 11: -149.62730738537113 -1.18902e-08 3.80466e-06 DIIS; @UHF iter 12: -149.62730738624032 -8.69193e-10 7.06634e-07 DIIS. The first set of iterations are from the DF portion of the computation, the; second set uses the exact (but much slower) Direct algorithm. Within the DF portion; of the computation, the zeroth-iteration uses a non-idempotent density matrix; obtained from the SAD guess, so the energy is unphysically low. However, the; first true iteration is quite close to the final DF energy, highlighting the; efficiency of the SAD guess. Pulay’s DIIS procedure is then used to accelerate; SCF convergence, with the DF phase reaching convergence in eight true; iterations. When used together, SAD and DIIS are usually sufficient to converge; the SCF for all but the most difficult systems. Additional convergence; techniques are available for more difficult cases, and are detailed below. At; this point, the code switches on the requested Direct integrals technology, which; requires only four full iterations to reach convergence, starting from the DF; guess. This hybrid DF/Direct procedure can significantly accelerate SCF; computations requiring exact integrals.; After the iterations are completed, a number of one-electron properties are; printed, and some bookkeeping is performed to set up possible correlated; computations. ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/scf-1.html:2822,energy,energy,2822,psi4manual/1.1.0/scf-1.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/scf-1.html,15,['energy'],['energy']
Energy Efficiency," 2: 'mp2', 'supersystem': 'scf'} || {1: 2, 2: 'ccsd(t)', 3: 'mp2'} || etc; Dictionary of different levels of theory for different levels of expansion; Note that method_string is not used in this case. supersystem computes; all higher order n-body effects up to the number of fragments. embedding_charges (dict) – {1: [-0.834, 0.417, 0.417], ..}; Dictionary of atom-centered point charges. keys: 1-based index of fragment, values: list of charges for each fragment.; Add atom-centered point charges for fragments whose basis sets are not included in the computation. The nbody function computes counterpoise-corrected (CP), non-CP (noCP), and Valiron-Mayer Function Counterpoise (VMFC) interaction energies for complexes composed of arbitrary numbers of monomers.; Examples :; set {; basis def2-svp; }. # Counterpoise corrected CCSD(T) energies for the Helium dimer; molecule mol {; He; --; He 1 3; }; # Calculate interaction energies only (skips monomers in monomer basis):; energy('CCSD(T)', bsse_type='cp'); # Calculate interaction and total energies, return interaction energies:; energy('CCSD(T)', bsse_type=['cp','nocp']); # Calculate and return counterpoise-corrected gradient; # Useful for e.g. CP-corrected geometry optimization; gradient('CCSD(T)', bsse_type='cp', return_total_data=True). # noCP, VMFC, and CP energy for a helium cluster, limited at 3 bodies; molecule mol {; He 0 0 0; --; He 0 0 4; --; He 0 4 0; --; He 4 0 0; }. # Returns the nocp energy as its first in the list; energy('CCSD(T)', bsse_type=['nocp', 'cp', 'vmfc'], max_nbody=3). API¶. class psi4.driver.driver_nbody.BsseEnum(value)[source]¶; Available basis-set superposition error (BSSE) treatments. cp = 'cp'¶. nocp = 'nocp'¶. vmfc = 'vmfc'¶. pydantic model psi4.driver.driver_nbody.ManyBodyComputer[source]¶. Show JSON schema{; ""title"": ""ManyBodyComputer"",; ""description"": ""Base class for \""computers\"" that plan, run, and process QC tasks."",; ""type"": ""object"",; ""properties"": {; ""molecule"": {; ""title"": ""Molecule"",; ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/nbody.html:3173,energy,energy,3173,psi4manual/master/nbody.html,https://psicode.org,https://psicode.org/psi4manual/master/nbody.html,2,['energy'],['energy']
Energy Efficiency," 2]]` has max_nbody=2 and 1-body and 2-body contributions computed at the same level of theory; `[[1], [2]]` has max_nbody=2 and 1-body and 2-body contributions computed at different levels of theory. An entry 'supersystem' means all higher order n-body effects up to the number of fragments. The n-body levels are effectively sorted in the outer list, and any 'supersystem' element is at the end."",; ""default"": [],; ""type"": ""array"",; ""items"": {; ""type"": ""array"",; ""items"": {; ""anyOf"": [; {; ""type"": ""integer""; },; {; ""enum"": [; ""supersystem""; ],; ""type"": ""string""; }; ]; }; }; },; ""embedding_charges"": {; ""title"": ""Embedding Charges"",; ""description"": ""Atom-centered point charges to be used on molecule fragments whose basis sets are not included in the computation. Keys: 1-based index of fragment. Values: list of atom charges for that fragment."",; ""default"": {},; ""type"": ""object"",; ""additionalProperties"": {; ""type"": ""array"",; ""items"": {; ""type"": ""number""; }; }; },; ""return_total_data"": {; ""title"": ""Return Total Data"",; ""description"": ""When True, returns the total data (energy/gradient/Hessian) of the system, otherwise returns interaction data. Default is False for energies, True for gradients and Hessians. Note that the calculation of total counterpoise corrected energies implies the calculation of the energies of monomers in the monomer basis, hence specifying ``return_total_data = True`` may carry out more computations than ``return_total_data = False``."",; ""type"": ""boolean""; },; ""quiet"": {; ""title"": ""Quiet"",; ""description"": ""Whether to print/log formatted n-body energy analysis. Presently used by multi to suppress output. Candidate for removal from class once in-class/out-of-class functions sorted."",; ""default"": false,; ""type"": ""boolean""; },; ""task_list"": {; ""title"": ""Task List"",; ""default"": {},; ""type"": ""object"",; ""additionalProperties"": {; ""anyOf"": [; {; ""$ref"": ""#/definitions/AtomicComputer""; },; {; ""$ref"": ""#/definitions/CompositeComputer""; },; {; ""$ref"": ""#/definitio",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/nbody.html:6758,energy,energy,6758,psi4manual/1.7.x/nbody.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/nbody.html,4,['energy'],['energy']
Energy Efficiency," 3) and ('scf_basis' in kwargs):; cbs_scf_scheme = scf_xtpl_helgaker_3; elif (len(BSTR) == 2) and ('scf_basis' in kwargs):; cbs_scf_scheme = scf_xtpl_helgaker_2; elif (len(BSTR) == 1) and ('scf_basis' in kwargs):; cbs_scf_scheme = xtpl_highest_1; elif 'scf_basis' in kwargs:; raise ValidationError(""""""SCF basis sets of number %d cannot be handled."""""" % (len(BSTR))); elif do_corl:; cbs_scf_scheme = xtpl_highest_1; BSTR = [BSTC[-1]]; ZETR = [ZETC[-1]]; if 'scf_scheme' in kwargs:; cbs_scf_scheme = kwargs['scf_scheme']. # Establish treatment for correlation energy; if do_corl:; if len(BSTC) == 2:; cbs_corl_scheme = corl_xtpl_helgaker_2; elif len(BSTC) > 2:; raise ValidationError(""""""Cannot extrapolate correlation with %d basis sets. Use highest 2."""""" % (len(BSTC))); else:; cbs_corl_scheme = xtpl_highest_1; if 'corl_scheme' in kwargs:; cbs_corl_scheme = kwargs['corl_scheme']. # Establish treatment for delta correction energy; if do_delta:; if len(BSTD) == 2:; cbs_delta_scheme = corl_xtpl_helgaker_2; else:; cbs_delta_scheme = xtpl_highest_1; if 'delta_scheme' in kwargs:; cbs_delta_scheme = kwargs['delta_scheme']. # Establish treatment for delta2 correction energy; if do_delta2:; if len(BSTD2) == 2:; cbs_delta2_scheme = corl_xtpl_helgaker_2; else:; cbs_delta2_scheme = xtpl_highest_1; if 'delta2_scheme' in kwargs:; cbs_delta2_scheme = kwargs['delta2_scheme']. # # Establish treatment for delta3 correction energy; # if do_delta3:; # if len(BSTD3) == 2:; # cbs_delta3_scheme = corl_xtpl_helgaker_2; # else:; # cbs_delta3_scheme = xtpl_highest_1; # if 'delta3_scheme' in kwargs:; # cbs_delta3_scheme = kwargs['delta3_scheme']; #; # # Establish treatment for delta4 correction energy; # if do_delta4:; # if len(BSTD4) == 2:; # cbs_delta4_scheme = corl_xtpl_helgaker_2; # else:; # cbs_delta4_scheme = xtpl_highest_1; # if 'delta4_scheme' in kwargs:; # cbs_delta4_scheme = kwargs['delta4_scheme']; #; # # Establish treatment for delta5 correction energy; # if do_delta5:; # if len(BSTD5) == 2:; ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/_modules/psi4/driver/driver_cbs.html:47603,energy,energy,47603,psi4manual/1.2.1/_modules/psi4/driver/driver_cbs.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/_modules/psi4/driver/driver_cbs.html,1,['energy'],['energy']
Energy Efficiency," 4) indicates that the; fragments 1 and 2 are explicitly included in the energy computation,; with basis functions from each of fragments 1, 2, 3, & 4 included in; the basis set. Therefore, the basis functions from fragments 3 and 4; are included as ghost functions within the energy computation. NUCLEAR REPULSION ENERGY¶; The nuclear repulsion energy contribution [E_h] to the total SCF energy.; Quantity \(E_{NN}\) in Eq. (4). (3)¶\[E_{NN} = \sum_{i, j<i}^{N_{atom}}\frac{Z_i Z_j}{|\mathbf{R}_i - \mathbf{R}_j|}\]. OCEPA(0) TOTAL ENERGY¶. OCEPA(0) CORRELATION ENERGY¶; The total electronic energy [E_h] and correlation energy component [E_h]; for the orbital-optimized CEPA(0) level of theory. OLCCD TOTAL ENERGY¶. OLCCD CORRELATION ENERGY¶; The total electronic energy [E_h] and correlation energy component [E_h]; for the orbital-optimized linearized coupled cluster doubles level of theory. OLCCD REFERENCE CORRECTION ENERGY¶; The difference [E_h] between the single-determinant energy of the final and; initial orbitals for the orbital-optimized linearized coupled cluster; doubles level of theory. OMP2 TOTAL ENERGY¶. OMP2 CORRELATION ENERGY¶; The total electronic energy [E_h] and correlation energy component [E_h]; for the orbital-optimized MP2 level of theory. OMP2 REFERENCE CORRECTION ENERGY¶; The difference [E_h] between the single-determinant energy of the final and; initial orbitals for the orbital-optimized MP2 level of theory. OMP2.5 TOTAL ENERGY¶. OMP2.5 CORRELATION ENERGY¶; The total electronic energy [E_h] and correlation energy component [E_h]; for the orbital-optimized MP2.5 level of theory. OMP2.5 REFERENCE CORRECTION ENERGY¶; The difference [E_h] between the single-determinant energy of the final and; initial orbitals for the orbital-optimized MP2.5 level of theory. OMP3 TOTAL ENERGY¶. OMP3 CORRELATION ENERGY¶; The total electronic energy [E_h] and correlation energy component [E_h]; for the orbital-optimized MP3 level of theory. OMP3 REFERENCE CORRECTION ENERGY",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/glossary_psivariables.html:42341,energy,energy,42341,psi4manual/1.7.x/glossary_psivariables.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/glossary_psivariables.html,4,['energy'],['energy']
Energy Efficiency," 85% of the density: (0.0787495,-0.0787495). The second line reports the isocontour values that capture 85% of the probability density using; the least amount of grid points. This quantity is determined for orbitals and densities. The; fraction of the density captured by the isocontour values is by default 0.85, but can; be changed via the option CUBEPROP_ISOCONTOUR_THRESHOLD. Note; If your cube plots are too coarse, try to decrease the grid spacing via; the option CUBIC_GRID_SPACING. If the edges of your plot are cut then; increase the size of the grid via the option CUBIC_GRID_OVERAGE. Cubeprop Tasks¶; The cubeprop utility can be provided a list of tasks to perform.; Tasks are specified by the CUBEPROP_TASKS option, which is a list of strings; that identify the tasks. Several tasks are available. These include:. ORBITALS [Default if CUBEPROP_TASKS is not specified]; Produces cube representations of the molecular orbitals; \(\psi_q(\mathbf{r})\). Orbitals are sorted according to increasing; orbital energy ignoring symmetry.; FRONTIER_ORBITALS; Produces cube representations of the frontier molecular orbitals. For closed shell; species, the highest occupied (HOMO) and the lowest unoccupied (LUMO) alpha orbitals (ie.; \(\psi_{\alpha}(\mathbf{r})\)) are printed, while for open shell species a total; of \((4 + M_s)\) orbitals are printed (\(\alpha\) and \(\beta\); spin for both lowest virtual (LVMO) and highest doubly occupied; orbitals (DOMO), along with all \(\alpha\) singly occupied (SOMO) orbitals).; DENSITY; This task can be used to obtain the alpha and beta electron densities,; \(\rho_\alpha(\mathbf{r})\) and \(\rho_\beta(\mathbf{r})\), together; with the total density; \(\rho(\mathbf{r}) = \rho_\alpha(\mathbf{r}) + \rho_\beta(\mathbf{r})\),; and the spin density; \(\rho(\mathbf{r}) = \rho_\alpha(\mathbf{r}) - \rho_\beta(\mathbf{r})\).; BASIS_FUNCTIONS; This task is useful to produce cube files of the atomic orbital basis; functions \(\chi_\mu(\mathbf{r})\).; ESP; ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/cubeprop-1.html:3668,energy,energy,3668,psi4manual/1.3.2/cubeprop-1.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/cubeprop-1.html,2,['energy'],['energy']
Energy Efficiency," : float, optional; If `units='Angstrom'`, overrides consumer's value for [A]-->[a0] conversion.; fix_com : bool; Whether translation of `geom` is allowed or disallowed.; fix_orientation : bool; Whether rotation of `geom` is allowed or disallowed.; fix_symmetry : str, optional; Maximal point group symmetry which `geom` should be treated. Lowercase.; geom : ndarray of float; (3 * nat, ) Cartesian coordinates in `units`.; elea : ndarray of int; (nat, ) Mass number for atoms, if known isotope, else -1.; elez : ndarray of int; (nat, ) Number of protons, nuclear charge for atoms.; elem : ndarray of str; (nat, ) Element symbol for atoms.; mass : ndarray of float; (nat, ) Atomic mass [u] for atoms.; real : ndarray of bool; (nat, ) Real/ghostedness for atoms.; elbl : ndarray of str; (nat, ) Label with any tagging information from element spec.; fragment_separators : list of int; (nfr - 1, ) list of atom indices at which to split `geom` into fragments.; fragment_charges : list of float; (nfr, ) list of charge allocated to each fragment.; fragment_multiplicities : list of int; (nfr, ) list of multiplicity allocated to each fragment.; molecular_charge : float; total charge on system.; molecular_multiplicity : int; total multiplicity on system.; comment : str, optional; Additional comment for molecule.; provenance : dict of str; Accumulated history of molecule, with fields ""creator"", ""version"", ""routine"".; connectivity : list of tuples of int, optional; (nbond, 3) list of (0-indexed) (atomA, atomB, bond_order) (int, int, double) tuples. EFP extension (this + units is minimal). fragment_files : list of str; (nfr, ) lowercased names of efp meat fragment files.; hint_types : {'xyzabc', 'points'}; (nfr, ) type of fragment orientation hint.; geom_hints : list of lists of float; (nfr, ) inner lists have length 6 (xyzabc; to orient the center) or; 9 (points; to orient the first three atoms) of the EFP fragment. QMVZ extension (geom_unsettled replaces geom). geom_unsettled : list of li",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/_modules/qcelemental/molparse/from_arrays.html:7589,charge,charge,7589,psi4manual/1.4.0/_modules/qcelemental/molparse/from_arrays.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/_modules/qcelemental/molparse/from_arrays.html,6,"['allocate', 'charge']","['allocated', 'charge']"
Energy Efficiency," : run_cc_gradient,; 'ccsd(t)' : run_cc_gradient,; 'mp2' : run_mp2_select_gradient,; 'conv-mp2' : run_mp2_gradient,; 'df-mp2' : run_dfmp2_gradient,; 'dfmp2' : run_dfmp2_gradient,; 'eom-ccsd' : run_eom_cc_gradient,; 'dcft' : run_dcft_gradient,; 'omp2' : run_omp2_gradient,; 'omp3' : run_omp3_gradient,; 'mp3' : run_mp3_gradient,; 'mp2.5' : run_mp2_5_gradient,; 'omp2.5' : run_omp2_5_gradient,; 'cepa0' : run_cepa0_gradient,; 'ocepa' : run_ocepa_gradient; # Upon adding a method to this list, add it to the docstring in optimize() below; },; 'hessian' : {; # Upon adding a method to this list, add it to the docstring in frequency() below; },; 'property' : {; 'scf' : run_scf_property,; 'cc2' : run_cc_property,; 'ccsd' : run_cc_property,; 'df-mp2' : run_dfmp2_property,; 'dfmp2' : run_dfmp2_property,; 'eom-cc2' : run_cc_property,; 'eom-ccsd' : run_cc_property,; # Upon adding a method to this list, add it to the docstring in property() below; }}. # Integrate DFT with driver routines; for ssuper in superfunctional_list():; procedures['energy'][ssuper.name().lower()] = run_dft. for ssuper in superfunctional_list():; if ((not ssuper.is_c_hybrid()) and (not ssuper.is_c_lrc()) and (not ssuper.is_x_lrc())):; procedures['gradient'][ssuper.name().lower()] = run_dft_gradient. [docs]def energy(name, **kwargs):; r""""""Function to compute the single-point electronic energy. :returns: (*float*) Total electronic energy in Hartrees. SAPT returns interaction energy. :PSI variables:. .. hlist::; :columns: 1. * :psivar:`CURRENT ENERGY <CURRENTENERGY>`; * :psivar:`CURRENT REFERENCE ENERGY <CURRENTREFERENCEENERGY>`; * :psivar:`CURRENT CORRELATION ENERGY <CURRENTCORRELATIONENERGY>`. .. comment In this table immediately below, place methods that should only be called by; .. comment developers at present. This table won't show up in the manual.; .. comment; .. comment .. _`table:energy_devel`:; .. comment; .. comment +-------------------------+------------------------------------------------------------",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b4/_modules/driver.html:4951,energy,energy,4951,psi4manual/4.0b4/_modules/driver.html,https://psicode.org,https://psicode.org/psi4manual/4.0b4/_modules/driver.html,2,['energy'],['energy']
Energy Efficiency," :db(). Returns:(float) Mean absolute deviation of the database in kcal/mol. Psi variables:. db_name DATABASE MEAN SIGNED DEVIATION; db_name DATABASE MEAN ABSOLUTE DEVIATION; db_name DATABASE ROOT-MEAN-SQUARE DEVIATION; Python dictionaries of results accessible as DB_RGT and DB_RXN. Note; It is very easy to make a database from a collection of xyz files; using the script psi4/lib/scripts/ixyz2database.pl.; See Creating a Database for details. Caution; Some features are not yet implemented. Buy a developer some coffee. In sow/reap mode, use only global options (e.g., the local option set by set scf scf_type df will not be respected). Note; To access a database that is not embedded in a PSI4 ; distribution, add the path to the directory containing the database ; to the environment variable PYTHONPATH. Parameters:; name (string) – 'scf' || 'sapt0' || 'ccsd(t)' || etc.; First argument, usually unlabeled. Indicates the computational method; to be applied to the database. May be any valid argument to; energy(). db_name (string) – 'BASIC' || 'S22' || 'HTBH' || etc.; Second argument, usually unlabeled. Indicates the requested database; name, matching (case insensitive) the name of a python file in ; psi4/lib/databases or PYTHONPATH. Consult that ; directory for available databases and literature citations. func (function) – energy || optimize || cbs; Indicates the type of calculation to be performed on each database; member. The default performs a single-point energy('name'), while; optimize perfoms a geometry optimization on each reagent, and; cbs performs a compound single-point energy. If a nested series; of python functions is intended (see Function Intercalls), use; keyword db_func instead of func. mode (string) – 'continuous' || 'sow' || 'reap'; Indicates whether the calculations required to complete the; database are to be run in one file ('continuous') or are to be; farmed out in an embarrassingly parallel fashion; ('sow'/'reap'). For the latter, run an initial job ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b3/db-1.html:1450,energy,energy,1450,psi4manual/4.0b3/db-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b3/db-1.html,4,['energy'],['energy']
Energy Efficiency," :returns: *float* |w--w| Total electronic energy of optimized structure in Hartrees. :returns: (*float*, :py:class:`~psi4.core.Wavefunction`) |w--w| energy and wavefunction when **return_wfn** specified. :raises: :py:class:`psi4.OptimizationConvergenceError` if :term:`GEOM_MAXITER <GEOM_MAXITER (OPTKING)>` exceeded without reaching geometry convergence. :PSI variables:. .. hlist::; :columns: 1. * :psivar:`CURRENT ENERGY`. :type name: str; :param name: ``'scf'`` || ``'mp2'`` || ``'ci5'`` || etc. First argument, usually unlabeled. Indicates the computational method; to be applied to the database. May be any valid argument to; :py:func:`psi4.energy`. :type molecule: :ref:`molecule <op_py_molecule>`; :param molecule: ``h2o`` || etc. The target molecule, if not the last molecule defined. :type return_wfn: :ref:`boolean <op_py_boolean>`; :param return_wfn: ``'on'`` || |dl| ``'off'`` |dr|. Indicate to additionally return the :py:class:`~psi4.core.Wavefunction`; calculation result as the second element (after *float* energy) of a tuple. :type return_history: :ref:`boolean <op_py_boolean>`; :param return_history: ``'on'`` || |dl| ``'off'`` |dr|. Indicate to additionally return dictionary of lists of geometries,; energies, and gradients at each step in the optimization. :type engine: str; :param engine: |dl| ``'optking'`` |dr| || ``'geometric'``. Indicates the optimization engine to use, which can be either Psi4's; native Optking optimizer or the GeomeTRIC program. :type optimizer_keywords: dict; :param optimizer_keywords: Options passed to the GeomeTRIC optimizer. Indicates additional options to be passed to the GeomeTRIC optimizer if; chosen as the optimization engine. :type func: :ref:`function <op_py_function>`; :param func: |dl| ``gradient`` |dr| || ``energy`` || ``cbs``. Indicates the type of calculation to be performed on the molecule.; The default dertype accesses ``'gradient'`` or ``'energy'``, while; ``'cbs'`` performs a multistage finite difference calculation.; I",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/_modules/psi4/driver/driver.html:60248,energy,energy,60248,psi4manual/1.4.0/_modules/psi4/driver/driver.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/_modules/psi4/driver/driver.html,3,['energy'],['energy']
Energy Efficiency," :type delta_wfn_lesser: string; :param delta_wfn_lesser: |dl| ``'mp2'`` |dr| || ``'ccsd'`` || etc. Indicates the inferior energy method for which a delta correction; to the correlation energy is to be obtained. :type delta2_wfn: string; :param delta2_wfn: ``'ccsd'`` || ``'ccsd(t)'`` || etc. Indicates the (superior) energy method for which a second delta correction; to the correlation energy is to be obtained. :type delta2_wfn_lesser: string; :param delta2_wfn_lesser: |dl| ``'mp2'`` |dr| || ``'ccsd(t)'`` || etc. Indicates the inferior energy method for which a second delta correction; to the correlation energy is to be obtained. :type delta3_wfn: string; :param delta3_wfn: ``'ccsd'`` || ``'ccsd(t)'`` || etc. Indicates the (superior) energy method for which a third delta correction; to the correlation energy is to be obtained. :type delta3_wfn_lesser: string; :param delta3_wfn_lesser: |dl| ``'mp2'`` |dr| || ``'ccsd(t)'`` || etc. Indicates the inferior energy method for which a third delta correction; to the correlation energy is to be obtained. :type delta4_wfn: string; :param delta4_wfn: ``'ccsd'`` || ``'ccsd(t)'`` || etc. Indicates the (superior) energy method for which a fourth delta correction; to the correlation energy is to be obtained. :type delta4_wfn_lesser: string; :param delta4_wfn_lesser: |dl| ``'mp2'`` |dr| || ``'ccsd(t)'`` || etc. Indicates the inferior energy method for which a fourth delta correction; to the correlation energy is to be obtained. :type delta5_wfn: string; :param delta5_wfn: ``'ccsd'`` || ``'ccsd(t)'`` || etc. Indicates the (superior) energy method for which a fifth delta correction; to the correlation energy is to be obtained. :type delta5_wfn_lesser: string; :param delta5_wfn_lesser: |dl| ``'mp2'`` |dr| || ``'ccsd(t)'`` || etc. Indicates the inferior energy method for which a fifth delta correction; to the correlation energy is to be obtained. * Basis Sets; Currently, the basis set set through ``set`` commands have no influence; on a ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b5/_modules/wrappers.html:56910,energy,energy,56910,psi4manual/4.0b5/_modules/wrappers.html,https://psicode.org,https://psicode.org/psi4manual/4.0b5/_modules/wrappers.html,2,['energy'],['energy']
Energy Efficiency," ; fd_geoms_1_0(...); fd_geoms_1_0() -> matrix_vector :; Gets the list of displacements needed for a finite difference gradient computation, from energy points.; ; fd_geoms_freq_0(...); fd_geoms_freq_0( (int)arg1) -> matrix_vector :; Gets the list of displacements needed for a finite difference frequency computation, from energy points, for a given irrep.; ; fd_geoms_freq_1(...); fd_geoms_freq_1( (int)arg1) -> matrix_vector :; Gets the list of displacements needed fof a finite difference frequency computation, from gradients, for a given irrep; ; fd_geoms_hessian_0(...); fd_geoms_hessian_0() -> matrix_vector :; Gets the list of displacements needed fof a finite difference frequency computation, from energy points.; ; fd_hessian_0(...); fd_hessian_0( (list)arg1) -> PsiReturnType :; Performs a finite difference frequency computation, from energy points.; ; flush_outfile(...); flush_outfile() -> None :; Flushes the output file.; ; fnocc(...); fnocc() -> float :; Runs the fno-ccsd(t)/qcisd(t)/mp4/cepa energy code; ; get_active_molecule(...); get_active_molecule() -> Molecule :; Returns the currently active molecule object.; ; get_frequencies(...); get_frequencies() -> Vector :; Returns the most recently computed frequencies, as a 3N-6 Vector object.; ; get_global_option(...); get_global_option( (str)arg1) -> object :; Given a string of a keyword name, returns the value associated with the keyword from the global options. Returns error if keyword is not recognized.; ; get_global_option_list(...); get_global_option_list() -> list :; Returns a list of all global options.; ; get_gradient(...); get_gradient() -> Matrix :; Returns the most recently computed gradient, as a N by 3 Matrix object.; ; get_input_directory(...); get_input_directory() -> str :; Returns the location of the input file.; ; get_local_option(...); get_local_option( (str)arg1, (str)arg2) -> object :; Given a string of a keyword name and a particular module, returns the value associated with the keyword in ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b5/psimod-1.html:157336,energy,energy,157336,psi4manual/4.0b5/psimod-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b5/psimod-1.html,2,['energy'],['energy']
Energy Efficiency," ; fd_geoms_1_0(...); fd_geoms_1_0() -> matrix_vector :; Gets the list of displacements needed for a finite difference gradient computation, from energy points.; ; fd_geoms_freq_0(...); fd_geoms_freq_0( (int)arg1) -> matrix_vector :; Gets the list of displacements needed for a finite difference frequency computation, from energy points, for a given irrep.; ; fd_geoms_freq_1(...); fd_geoms_freq_1( (int)arg1) -> matrix_vector :; Gets the list of displacements needed fof a finite difference frequency computation, from gradients, for a given irrep; ; fd_geoms_hessian_0(...); fd_geoms_hessian_0() -> matrix_vector :; Gets the list of displacements needed fof a finite difference frequency computation, from energy points.; ; fd_hessian_0(...); fd_hessian_0( (list)arg1) -> PsiReturnType :; Performs a finite difference frequency computation, from energy points.; ; flush_outfile(...); flush_outfile() -> None :; Flushes the output file.; ; fnocc(...); fnocc() -> float :; Runs the fno-ccsd(t)/qcisd(t)/mp4/cepa energy code; ; get_active_molecule(...); get_active_molecule() -> Molecule :; Returns the currently active molecule object.; ; get_global_option(...); get_global_option( (str)arg1) -> object :; Given a string of a keyword name, returns the value associated with the keyword from the global options. Returns error if keyword is not recognized.; ; get_global_option_list(...); get_global_option_list() -> list :; Returns a list of all global options.; ; get_gradient(...); get_gradient() -> Matrix :; Returns the most recently computed gradient, as a N by 3 Matrix object.; ; get_input_directory(...); get_input_directory() -> str :; Returns the location of the input file.; ; get_local_option(...); get_local_option( (str)arg1, (str)arg2) -> object :; Given a string of a keyword name and a particular module, returns the value associated with the keyword in the module options scope. Returns error if keyword is not recognized for the module.; ; get_memory(...); get_memory() -> int :; R",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b4/psimod-1.html:107583,energy,energy,107583,psi4manual/4.0b4/psimod-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b4/psimod-1.html,2,['energy'],['energy']
Energy Efficiency," = 'Truhlar SCF (%s, %s) beta' % (zLO, zHI); beta.subtract(valueLO); beta.scale(beta_division); beta.scale(beta_mult). value = valueHI.clone(); value.subtract(beta); value.name = 'Truhlar SCF (%s, %s) data' % (zLO, zHI). if verbose > 2:; core.print_out(""""""\n ==> Truhlar 2-point power from SCF extrapolation for method: %s <==\n\n"""""" %; (functionname.upper())); core.print_out("""""" LO-zeta (%s)"""""" % str(zLO)); core.print_out("""""" LO-zeta Data""""""); valueLO.print_out(); core.print_out("""""" HI-zeta (%s)"""""" % str(zHI)); core.print_out("""""" HI-zeta Data""""""); valueHI.print_out(); core.print_out("""""" Extrapolated Data:\n""""""); value.print_out(); core.print_out("""""" Alpha (exponent) Value: %16.8f\n"""""" % (alpha)); core.print_out("""""" Beta Data:\n""""""); beta.print_out(). return value. else:; raise ValidationError(""scf_xtpl_truhlar_2: datatype is not recognized '%s'."" % type(valueLO)). [docs]def scf_xtpl_karton_2(functionname: str, zLO: int, valueLO: float, zHI: int, valueHI: float, verbose: bool = True, alpha: float = None):; r""""""Extrapolation scheme using root-power form for reference energies with two adjacent; zeta-level bases. Used by :py:func:`~psi4.cbs`. Parameters; ----------; functionname; Name of the CBS component.; zLO; Lower zeta level.; valueLO; Lower value used for extrapolation.; zHI; Higher zeta level. Should be equal to zLO + 1.; valueHI; Higher value used for extrapolation.; alpha; Overrides the default :math:`\alpha = 6.3`. Returns; -------; float; Returns :math:`E_{total}^{\infty}`, see below. Notes; -----; The extrapolation is calculated according to [3]_:; :math:`E_{total}^X = E_{total}^{\infty} + \beta e^{-\alpha\sqrt{X}}, \alpha = 6.3`. References; ----------. .. [3] Karton, Martin, Theor. Chem. Acc. 115 (2006) 330-333,; DOI: 10.1007/s00214-005-0028-6. """""". if type(valueLO) != type(valueHI):; raise ValidationError(; ""scf_xtpl_karton_2: Inputs must be of the same datatype! (%s, %s)"" % (type(valueLO), type(valueHI))). if alpha is None:; alpha = 6.30. beta_division = 1",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/_modules/psi4/driver/driver_cbs.html:13641,power,power,13641,psi4manual/1.4.0/_modules/psi4/driver/driver_cbs.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/_modules/psi4/driver/driver_cbs.html,2,['power'],['power']
Energy Efficiency," = (eHI - eMD) / (math.exp(-1 * alpha * zMD) * (ratio - 1)); energypiece = eHI - beta * math.exp(-1 * alpha * zHI). # Output string with extrapolation parameters; cbsscheme = ''; cbsscheme += """"""\n ==> %s <==\n\n"""""" % (functionname); cbsscheme += """""" LO-zeta (%s) Correlation Energy: %16.8f\n"""""" % (str(zLO), eLO); cbsscheme += """""" MD-zeta (%s) Correlation Energy: %16.8f\n"""""" % (str(zMD), eMD); cbsscheme += """""" HI-zeta (%s) Correlation Energy: %16.8f\n"""""" % (str(zHI), eHI); cbsscheme += """""" Extrapolated Correlation Energy: %16.8f\n"""""" % (energypiece); cbsscheme += """""" Alpha (exponent) Value: %16.8f\n"""""" % (alpha); cbsscheme += """""" Beta (coefficient) Value: %16.8f\n"""""" % (beta); PsiMod.print_out(cbsscheme). return energypiece. [docs]def scf_xtpl_helgaker_2(**largs):; r""""""Extrapolation scheme for reference energies with two adjacent zeta-level bases.; Used by :py:func:`~wrappers.complete_basis_set`. .. math:: E_{total}^X = E_{total}^{\infty} + \beta e^{-\alpha X}, \alpha = 1.63. """"""; energypiece = 0.0; functionname = sys._getframe().f_code.co_name; f_fields = ['f_wfn', 'f_portion', 'f_basis', 'f_zeta', 'f_energy']; [mode, NEED, wfnname, BSET, ZSET] = validate_scheme_args(functionname, **largs). if (mode == 'requisition'):. # Impose restrictions on zeta sequence; if (len(ZSET) != 2):; raise ValidationError('Call to \'%s\' not valid with \'%s\' basis sets.' % (functionname, len(ZSET))). # Return array that logs the requisite jobs; NEED = {'HI': dict(zip(f_fields, [wfnname, 'tot', BSET[1], ZSET[1], 0.0])),; 'LO': dict(zip(f_fields, [wfnname, 'tot', BSET[0], ZSET[0], 0.0]))}. return NEED. elif (mode == 'evaluate'):. # Extract required energies and zeta integers from array; eHI = NEED['HI']['f_energy']; eLO = NEED['LO']['f_energy']; zHI = NEED['HI']['f_zeta']; zLO = NEED['LO']['f_zeta']. # LAB TODO add ability to pass alternate parameter values in. # Return extrapolated energy; alpha = 1.63; beta = (eHI - eLO) / (math.exp(-1 * alpha * zLO) * (math.exp(-1 * alpha) - 1)); ener",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b2/_modules/wrappers.html:82820,energy,energypiece,82820,psi4manual/4.0b2/_modules/wrappers.html,https://psicode.org,https://psicode.org/psi4manual/4.0b2/_modules/wrappers.html,3,['energy'],['energypiece']
Energy Efficiency," = 0.; If `True`, procedure is truncated when RMSD condition met, saving time.; do_plot; Pops up a mpl plot showing before, after, and ref geometries.; run_to_completion; Run reorderings to completion (past RMSD = 0) even if unnecessary because; `mols_align=True`. Used to test worst-case timings.; run_resorting; Run the resorting machinery even if unnecessary because `atoms_map=True`.; uno_cutoff; TODO; run_mirror; Run alternate geometries potentially allowing best match to `ref_mol`; from mirror image of `concern_mol`. Only run if system confirmed to; be nonsuperimposable upon mirror reflection. Returns; -------; float, tuple, qcdb.Molecule or psi4.core.Molecule; First item is RMSD [A] between `ref_mol` and the optimally aligned; geometry computed.; Second item is a AlignmentMill namedtuple with fields; (shift, rotation, atommap, mirror) that prescribe the transformation; from `concern_mol` and the optimally aligned geometry.; Third item is a crude charge-, multiplicity-, fragment-less Molecule; at optimally aligned (and atom-ordered) geometry. Return type; determined by `concern_mol` type. """"""; rgeom, rmass, relem, relez, runiq = ref_mol.to_arrays(); cgeom, cmass, celem, celez, cuniq = concern_mol.to_arrays(). rmsd, solution = qcel.molutil.B787(; cgeom=cgeom,; rgeom=rgeom,; cuniq=cuniq,; runiq=runiq,; do_plot=do_plot,; verbose=verbose,; atoms_map=atoms_map,; run_resorting=run_resorting,; mols_align=mols_align,; run_to_completion=run_to_completion,; run_mirror=run_mirror,; uno_cutoff=uno_cutoff). ageom, amass, aelem, aelez, auniq = solution.align_system(cgeom, cmass, celem, celez, cuniq, reverse=False); adict = qcel.molparse.from_arrays(; geom=ageom,; mass=amass,; elem=aelem,; elez=aelez,; units='Bohr',; molecular_charge=concern_mol.molecular_charge(),; molecular_multiplicity=concern_mol.multiplicity(),; fix_com=True,; fix_orientation=True); if isinstance(concern_mol, Molecule):; amol = Molecule.from_dict(adict); else:; from psi4 import core; amol = core.Molecule.fr",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/_modules/psi4/driver/qcdb/molecule.html:59547,charge,charge,59547,psi4manual/1.4.0/_modules/psi4/driver/qcdb/molecule.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/_modules/psi4/driver/qcdb/molecule.html,7,['charge'],['charge']
Energy Efficiency," = 0; for h, block in enumerate(MO_FZC_B.nph):; il = np.tril_indices(block.shape[0]); for index, x in np.ndenumerate(block[il]):; row = beta_mo_idx(il[0][index] + offset); col = beta_mo_idx(il[1][index] + offset); if (abs(x) > ints_tolerance):; intdump.write('{:29.20E} {:4d} {:4d} {:4d} {:4d}\n'.format(x, row, col, 0, 0)); offset += block.shape[0]; # Additional one-electron integrals as requested in oe_ints; # Orbital energies; core.print_out('Writing orbital energies in FCIDUMP format to ' + fname + '\n'); if 'EIGENVALUES' in oe_ints:; alpha_eigs_dump = write_eigenvalues(wfn.epsilon_a().get_block(mo_slice).to_array(), alpha_mo_idx); beta_eigs_dump = write_eigenvalues(wfn.epsilon_b().get_block(mo_slice).to_array(), beta_mo_idx); intdump.write(alpha_eigs_dump + beta_eigs_dump); # Dipole integrals; #core.print_out('Writing dipole moment OEI in FCIDUMP format to ' + fname + '\n'); # Traceless quadrupole integrals; #core.print_out('Writing traceless quadrupole moment OEI in FCIDUMP format to ' + fname + '\n'); # Frozen core + nuclear repulsion energy; core.print_out('Writing frozen core + nuclear repulsion energy in FCIDUMP format to ' + fname + '\n'); e_fzc = ints.get_frozen_core_energy(); e_nuc = molecule.nuclear_repulsion_energy(wfn.get_dipole_field_strength()); intdump.write('{: 29.20E} {:4d} {:4d} {:4d} {:4d}\n'.format(e_fzc + e_nuc, 0, 0, 0, 0)); core.print_out('Done generating {} with integrals in FCIDUMP format.\n'.format(fname)). [docs]def write_eigenvalues(eigs, mo_idx):; """"""Prepare multi-line string with one-particle eigenvalues to be written to the FCIDUMP file.; """"""; eigs_dump = ''; iorb = 0; for h, block in enumerate(eigs):; for idx, x in np.ndenumerate(block):; eigs_dump += '{: 29.20E} {:4d} {:4d} {:4d} {:4d}\n'.format(x, mo_idx(iorb), 0, 0, 0); iorb += 1; return eigs_dump. [docs]def fcidump_from_file(fname):; """"""Function to read in a FCIDUMP file. :returns: a dictionary with FCIDUMP header and integrals; The key-value pairs are:; - 'norb' : number of bas",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/_modules/psi4/driver/p4util/fcidump.html:7819,energy,energy,7819,psi4manual/1.2.1/_modules/psi4/driver/p4util/fcidump.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/_modules/psi4/driver/p4util/fcidump.html,1,['energy'],['energy']
Energy Efficiency," = 0; for h, block in enumerate(MO_FZC_B.nph):; il = np.tril_indices(block.shape[0]); for index, x in np.ndenumerate(block[il]):; row = beta_mo_idx(il[0][index] + offset); col = beta_mo_idx(il[1][index] + offset); if (abs(x) > ints_tolerance):; intdump.write('{:29.20E} {:4d} {:4d} {:4d} {:4d}\n'.format(x, row, col, 0, 0)); offset += block.shape[0]; # Additional one-electron integrals as requested in oe_ints; # Orbital energies; core.print_out('Writing orbital energies in FCIDUMP format to ' + fname + '\n'); if 'EIGENVALUES' in oe_ints:; alpha_eigs_dump = write_eigenvalues(wfn.epsilon_a().get_block(mo_slice).to_array(), alpha_mo_idx); beta_eigs_dump = write_eigenvalues(wfn.epsilon_b().get_block(mo_slice).to_array(), beta_mo_idx); intdump.write(alpha_eigs_dump + beta_eigs_dump); # Dipole integrals; #core.print_out('Writing dipole moment OEI in FCIDUMP format to ' + fname + '\n'); # Traceless quadrupole integrals; #core.print_out('Writing traceless quadrupole moment OEI in FCIDUMP format to ' + fname + '\n'); # Frozen core + nuclear repulsion energy; core.print_out('Writing frozen core + nuclear repulsion energy in FCIDUMP format to ' + fname + '\n'); e_fzc = ints.get_frozen_core_energy(); e_nuc = molecule.nuclear_repulsion_energy(wfn.get_dipole_field_strength()); intdump.write('{: 29.20E} {:4d} {:4d} {:4d} {:4d}\n'.format(e_fzc + e_nuc, 0, 0, 0, 0)); core.print_out('Done generating {} with integrals in FCIDUMP format.\n'.format(fname)). [docs]def write_eigenvalues(eigs, mo_idx):; """"""Prepare multi-line string with one-particle eigenvalues to be written to the FCIDUMP file.; """"""; eigs_dump = ''; iorb = 0; for h, block in enumerate(eigs):; for idx, x in np.ndenumerate(block):; eigs_dump += '{: 29.20E} {:4d} {:4d} {:4d} {:4d}\n'.format(x, mo_idx(iorb), 0, 0, 0); iorb += 1; return eigs_dump. def _irrep_map(wfn):; """"""Returns an array of irrep indices that maps from Psi4's ordering convention to the standard FCIDUMP convention.; """"""; symm = wfn.molecule().point_group().symbo",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/_modules/psi4/driver/p4util/fcidump.html:8028,energy,energy,8028,psi4manual/1.3.2/_modules/psi4/driver/p4util/fcidump.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/_modules/psi4/driver/p4util/fcidump.html,2,['energy'],['energy']
Energy Efficiency," = 1.0 / p4const.psi_bohr2angstroms; angstrom_to_meter = 10e-10;. if len(rvals) != len(energies):; raise Exception(""The number of energies must match the number of distances""). npoints = len(rvals). if npoints != 5 and npoints != 9:; raise Exception(""Only 5- or 9-point fits are implemented right now""). psi4.print_out(""\n\nPerforming a %d-point fit\n"" % npoints). psi4.print_out(""\nOptimizing geometry based on current surface:\n\n"");; if (npoints == 5):; optx = rvals[2]; elif (npoints == 9):; optx = rvals[4]. # Molecule can be passed in be user. Look at the function definition above.; if mol == None:; mol = psi4.get_active_molecule(); natoms = mol.natom(); if natoms != 2:; raise Exception(""The current molecule must be a diatomic for this code to work!""); m1 = mol.mass(0); m2 = mol.mass(1). maxit = 30; thres = 1.0e-9; for i in range(maxit):; if (npoints == 5):; grad= first_deriv_5pt(rvals, energies, optx); secd = second_deriv_5pt(rvals, energies, optx); energy = function_5pt(rvals, energies, optx); elif (npoints == 9):; grad = first_deriv_9pt(rvals, energies, optx); secd = second_deriv_9pt(rvals, energies, optx); energy = function_9pt(rvals, energies, optx); psi4.print_out("" E = %20.14f, x = %14.7f, grad = %20.14f\n"" % (energy, optx, grad)); if abs(grad) < thres:; break; optx -= grad / secd;; psi4.print_out("" Final E = %20.14f, x = %14.7f, grad = %20.14f\n"" % (function_5pt(rvals, energies, optx), optx, grad));. if optx < min(rvals):; raise Exception(""Minimum energy point is outside range of points provided. Use a lower range of r values.""); if optx > max(rvals):; raise Exception(""Minimum energy point is outside range of points provided. Use a higher range of r values.""). if (npoints == 5):; energy = function_5pt(rvals, energies, optx); first = first_deriv_5pt(rvals, energies, optx); secd = second_deriv_5pt(rvals, energies, optx) * p4const.psi_hartree2aJ; third = third_deriv_5pt(rvals, energies, optx) * p4const.psi_hartree2aJ; fourth = fourth_deriv_5pt(rvals, energies, ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b5/_modules/diatomic.html:2999,energy,energy,2999,psi4manual/4.0b5/_modules/diatomic.html,https://psicode.org,https://psicode.org/psi4manual/4.0b5/_modules/diatomic.html,2,['energy'],['energy']
Energy Efficiency," = PsiMod.get_global_option(""GUESS""); PsiMod.set_global_option(""DF_INTS_IO"", ""SAVE""); PsiMod.print_out('\n\t==> IP Fitting SCF: Burn-in <==\n'); energy('scf'); PsiMod.set_global_option(""DF_INTS_IO"", ""LOAD""). # Determine HOMO, to determine mult1; ref = PsiMod.reference_wavefunction(); eps_a = ref.epsilon_a(); eps_b = ref.epsilon_b(); if (Na == Nb):; HOMO = -Nb; elif (Nb == 0):; HOMO = Na; else:; E_a = eps_a[int(Na - 1)] ; E_b = eps_b[int(Nb - 1)] ; if (E_a >= E_b):; HOMO = Na; else: ; HOMO = -Nb. Na1 = Na;; Nb1 = Nb;; if (HOMO > 0):; Na1 = Na1-1;; else:; Nb1 = Nb1-1;; ; charge1 = charge0 + 1; ; mult1 = Na1 - Nb1 + 1. omegas = [];; E0s = [];; E1s = [];; kIPs = [];; IPs = [];; types = [];; ; # Right endpoint; PsiMod.set_global_option('DFT_OMEGA',omega_r). # Neutral; if (read):; PsiMod.set_global_option(""GUESS"", ""READ""); copy_file_to_scratch(read180, 'psi', 'ot', 180). mol.set_molecular_charge(charge0); mol.set_multiplicity(mult0); PsiMod.print_out('\n\t==> IP Fitting SCF: Neutral, Right Endpoint <==\n'); E0r = energy('scf'); ref = PsiMod.reference_wavefunction(); eps_a = ref.epsilon_a(); eps_b = ref.epsilon_b(); E_HOMO = 0.0;; if (Nb == 0):; E_HOMO = eps_a[int(Na-1)]; else:; E_a = eps_a[int(Na - 1)] ; E_b = eps_b[int(Nb - 1)] ; if (E_a >= E_b):; E_HOMO = E_a;; else: ; E_HOMO = E_b;; E_HOMOr = E_HOMO;; PsiMod.IO.change_file_namespace(180,""ot"",""neutral""); ; # Cation; if (read):; PsiMod.set_global_option(""GUESS"", ""READ""); copy_file_to_scratch(read180, 'psi', 'ot', 180). mol.set_molecular_charge(charge1); mol.set_multiplicity(mult1); PsiMod.print_out('\n\t==> IP Fitting SCF: Cation, Right Endpoint <==\n'); E1r = energy('scf'); PsiMod.IO.change_file_namespace(180,""ot"",""cation""). IPr = E1r - E0r;; kIPr = -E_HOMOr;; delta_r = IPr - kIPr;. if (IPr > kIPr):; PsiMod.print_out('\n***IP Fitting Error: Right Omega limit should have kIP > IP'); sys,exit(1). omegas.append(omega_r); types.append('Right Limit'); E0s.append(E0r); E1s.append(E1r); IPs.append(IPr); kIPs.append(kIPr). # Us",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b2/_modules/frac.html:13032,energy,energy,13032,psi4manual/4.0b2/_modules/frac.html,https://psicode.org,https://psicode.org/psi4manual/4.0b2/_modules/frac.html,1,['energy'],['energy']
Energy Efficiency," = PsiMod.get_global_option(""GUESS""); PsiMod.set_global_option(""DF_INTS_IO"", ""SAVE""); PsiMod.print_out('\n\t==> IP Fitting SCF: Burn-in <==\n'); energy('scf'); PsiMod.set_global_option(""DF_INTS_IO"", ""LOAD""). # Determine HOMO, to determine mult1; ref = PsiMod.reference_wavefunction(); eps_a = ref.epsilon_a(); eps_b = ref.epsilon_b(); if (Na == Nb):; HOMO = -Nb; elif (Nb == 0):; HOMO = Na; else:; E_a = eps_a[int(Na - 1)] ; E_b = eps_b[int(Nb - 1)] ; if (E_a >= E_b):; HOMO = Na; else: ; HOMO = -Nb. Na1 = Na;; Nb1 = Nb;; if (HOMO > 0):; Na1 = Na1-1;; else:; Nb1 = Nb1-1;; ; charge1 = charge0 + 1; ; mult1 = Na1 - Nb1 + 1. omegas = [];; E0s = [];; E1s = [];; kIPs = [];; IPs = [];; types = [];; ; # Right endpoint; PsiMod.set_global_option('DFT_OMEGA',omega_r). # Neutral; if (read):; PsiMod.set_global_option(""GUESS"", ""READ""); copy_file_to_scratch(read180, 'psi', 'ot', 180). mol.set_molecular_charge(charge0); mol.set_multiplicity(mult0); PsiMod.print_out('\n\t==> IP Fitting SCF: Neutral, Right Endpoint <==\n'); E0r = energy('scf'); ref = PsiMod.reference_wavefunction(); eps_a = ref.epsilon_a(); eps_b = ref.epsilon_b(); E_HOMO = 0.0;; if (Nb == 0):; E_HOMO = eps_a[int(Na-1)]; else:; E_a = eps_a[int(Na - 1)] ; E_b = eps_b[int(Nb - 1)] ; if (E_a >= E_b):; E_HOMO = E_a;; else: ; E_HOMO = E_b;; E_HOMOr = E_HOMO;; PsiMod.IO.change_file_namespace(180,""ot"",""neutral""); ; # Cation; if (read):; PsiMod.set_global_option(""GUESS"", ""READ""); copy_file_to_scratch(read180, 'psi', 'ot', 180). mol.set_molecular_charge(charge1); mol.set_multiplicity(mult1); PsiMod.print_out('\n\t==> IP Fitting SCF: Cation, Right Endpoint <==\n'); E1r = energy('scf'); PsiMod.IO.change_file_namespace(180,""ot"",""cation""). IPr = E1r - E0r;; kIPr = -E_HOMOr;; delta_r = IPr - kIPr;. if (IPr > kIPr):; PsiMod.print_out('\n***IP Fitting Error: Right Omega limit should have kIP > IP'); sys.exit(1). omegas.append(omega_r); types.append('Right Limit'); E0s.append(E0r); E1s.append(E1r); IPs.append(IPr); kIPs.append(kIPr). # Us",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b3/_modules/frac.html:13029,energy,energy,13029,psi4manual/4.0b3/_modules/frac.html,https://psicode.org,https://psicode.org/psi4manual/4.0b3/_modules/frac.html,1,['energy'],['energy']
Energy Efficiency," = True``; may carry out more computations than ``return_total_data = False``.; For gradients and Hessians, ``return_total_data = False`` is rarely useful. :type levels: dict; :param levels: ``{1: 'ccsd(t)', 2: 'mp2', 'supersystem': 'scf'}`` || ``{1: 2, 2: 'ccsd(t)', 3: 'mp2'}`` || etc. Dictionary of different levels of theory for different levels of expansion; Note that method_string is not used in this case. ``supersystem`` computes; all higher order n-body effects up to the number of fragments. :type embedding_charges: dict; :param embedding_charges: ``{1: [-0.834, 0.417, 0.417], ..}``. Dictionary of atom-centered point charges. keys: 1-based index of fragment, values: list of charges for each fragment.; Add atom-centered point charges for fragments whose basis sets are not included in the computation. """"""; pass. [docs]class BsseEnum(str, Enum):; """"""Available basis-set superposition error (BSSE) treatments."""""". nocp = ""nocp"" # plain supramolecular interaction energy; cp = ""cp"" # counterpoise correction; vmfc = ""vmfc"" # Valiron-Mayer function counterpoise. def _sum_cluster_ptype_data(; ptype: DriverEnum,; ptype_dict: Dict,; compute_list: Set[FragBasIndex],; fragment_slice_dict: Dict[int, Sequence],; fragment_size_dict: Dict[int, int],; mc_level_lbl: int,; vmfc: bool = False,; nb: int = 0,; ) -> Union[float, np.ndarray]:; """"""; Sum arrays from n-body computations to obtain the BSSE corrected or uncorrected scalar or array. Parameters; ----------; ptype; Hint to shape of array data to sum.; ptype_dict; Dictionary containing computed energy, gradient, or Hessian obtained from each subsystem computation; compute_list; A list of (frag, bas) tuples notating all the required computations.; fragment_slice_dict; Dictionary containing slices that index the gradient or Hessian matrix for each of the 1-indexed fragments.; For He--HOOH--Me cluster, `{1: slice(0, 1, None), 2: slice(1, 5, None), 3: slice(5, 10, None)}`.; fragment_size_dict; Dictionary containing the number of atom",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/_modules/psi4/driver/driver_nbody.html:10989,energy,energy,10989,psi4manual/1.7.x/_modules/psi4/driver/driver_nbody.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/_modules/psi4/driver/driver_nbody.html,1,['energy'],['energy']
Energy Efficiency," = np.asarray([mol.mass(at) for at in range(mol.natom())]); irrep_labels = mol.irrep_labels(). vibinfo, vibtext = qcdb.vib.harmonic_analysis(; nmwhess, geom, m, wfn.basisset(), irrep_labels, dipder=dipder, project_trans=project_trans, project_rot=project_rot); vibrec.update({k: qca.json() for k, qca in vibinfo.items()}). core.print_out(vibtext); core.print_out(qcdb.vib.print_vibs(vibinfo, shortlong=True, normco='x', atom_lbl=symbols)). if core.has_option_changed('THERMO', 'ROTATIONAL_SYMMETRY_NUMBER'):; rsn = core.get_option('THERMO', 'ROTATIONAL_SYMMETRY_NUMBER'); else:; rsn = mol.rotational_symmetry_number(). if irrep is None:; therminfo, thermtext = qcdb.vib.thermo(; vibinfo,; T=core.get_option(""THERMO"", ""T""), # 298.15 [K]; P=core.get_option(""THERMO"", ""P""), # 101325. [Pa]; multiplicity=mol.multiplicity(),; molecular_mass=np.sum(m),; sigma=rsn,; rotor_type=mol.rotor_type(),; rot_const=np.asarray(mol.rotational_constants()),; E0=core.variable('CURRENT ENERGY')) # someday, wfn.energy(); vibrec.update({k: qca.json() for k, qca in therminfo.items()}). core.set_variable(""ZPVE"", therminfo['ZPE_corr'].data) # P::e THERMO; core.set_variable(""THERMAL ENERGY CORRECTION"", therminfo['E_corr'].data) # P::e THERMO; core.set_variable(""ENTHALPY CORRECTION"", therminfo['H_corr'].data) # P::e THERMO; core.set_variable(""GIBBS FREE ENERGY CORRECTION"", therminfo['G_corr'].data) # P::e THERMO. core.set_variable(""ZERO K ENTHALPY"", therminfo['ZPE_tot'].data) # P::e THERMO; core.set_variable(""THERMAL ENERGY"", therminfo['E_tot'].data) # P::e THERMO; core.set_variable(""ENTHALPY"", therminfo['H_tot'].data) # P::e THERMO; core.set_variable(""GIBBS FREE ENERGY"", therminfo['G_tot'].data) # P::e THERMO. core.print_out(thermtext); else:; core.print_out(' Thermochemical analysis skipped for partial frequency calculation.\n'). if core.get_option('FINDIF', 'HESSIAN_WRITE'):; filename = core.get_writer_file_prefix(mol.name()) + "".vibrec""; with open(filename, 'w') as handle:; json.dump(vibrec, handle, sor",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/_modules/psi4/driver/driver.html:89884,energy,energy,89884,psi4manual/1.4.0/_modules/psi4/driver/driver.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/_modules/psi4/driver/driver.html,2,['energy'],['energy']
Energy Efficiency," = psi4.geometry(""""""; O; H 1 R; H 1 R 2 A; """"""). Rvals = [0.9, 1.0, 1.1]; Avals = range(102, 106, 2). psi4.set_options({""basis"": ""cc-pvdz"",; ""e_convergence"": 11}); for R in Rvals:; h2o.R = R; for A in Avals:; h2o.A = A; psi4.energy('scf'). The declarations of Rvals and Avals are both completely standard Python syntax.; Having named our molecule h2o we can then set the values of R and A within; the loops. Note that we do not need the dollar sign to access the Python; variable in this example; that is required only when using Python variables; with the set keyword.; Cartesian geometries, because of details of the geometry update process,; need to be specified within the loop(s) along with their basis set when; geometry scans are performed. See scf4 for analogous Z-matrix; and Cartiesian scans. Tables of Results¶; The Psithon function psi4.driver.p4util.Table has been removed,; as the Python ecosystem provides many more flexible alternatives. An; example tabulating a potential energy surface scan for water with Pandas; is shown below. PSIthonPsiAPImolecule h2o {; O; H 1 R; H 1 R 2 A; }. Rvals = [0.9, 1.0, 1.1]; Avals = range(100, 103, 2). rows = []; table = []. set basis cc-pvdz. for R in Rvals:; h2o.R = R; for A in Avals:; h2o.A = A; energy('mp2'); escf = variable('SCF TOTAL ENERGY'); edfmp2 = variable('MP2 TOTAL ENERGY'); escsmp2 = variable('SCS-MP2 TOTAL ENERGY'); rows.append((R, A)); table.append([escf, escsmp2, edfmp2]). import pandas as pd; df = pd.DataFrame(table, columns = [""E(SCF)"", ""E(SCS)"", ""E(DFMP2)""], index=rows); print(df). # E(SCF) E(SCS) E(DFMP2); # (0.9, 100) -76.020680 -76.217006 -76.221189; # (0.9, 102) -76.021305 -76.217439 -76.221605; # (1.0, 100) -76.021264 -76.224987 -76.228727; # (1.0, 102) -76.021460 -76.224946 -76.228668; # (1.1, 100) -75.990195 -76.201891 -76.205087; # (1.1, 102) -75.990085 -76.201498 -76.204676. h2o = psi4.geometry(""""""; O; H 1 R; H 1 R 2 A; """"""). Rvals = [0.9, 1.0, 1.1]; Avals = range(100, 103, 2). rows = []; table = []. psi",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/psithoninput.html:14197,energy,energy,14197,psi4manual/master/psithoninput.html,https://psicode.org,https://psicode.org/psi4manual/master/psithoninput.html,1,['energy'],['energy']
Energy Efficiency," = psi4.get_active_molecule(); natoms = mol.natom(); if natoms != 2:; raise Exception(""The current molecule must be a diatomic for this code to work!""); m1 = mol.mass(0); m2 = mol.mass(1). maxit = 30; thres = 1.0e-9; for i in range(maxit):; if (npoints == 5):; grad= first_deriv_5pt(rvals, energies, optx); secd = second_deriv_5pt(rvals, energies, optx); energy = function_5pt(rvals, energies, optx); elif (npoints == 9):; grad = first_deriv_9pt(rvals, energies, optx); secd = second_deriv_9pt(rvals, energies, optx); energy = function_9pt(rvals, energies, optx); psi4.print_out("" E = %20.14f, x = %14.7f, grad = %20.14f\n"" % (energy, optx, grad)); if abs(grad) < thres:; break; optx -= grad / secd;; psi4.print_out("" Final E = %20.14f, x = %14.7f, grad = %20.14f\n"" % (function_5pt(rvals, energies, optx), optx, grad));. if optx < min(rvals):; raise Exception(""Minimum energy point is outside range of points provided. Use a lower range of r values.""); if optx > max(rvals):; raise Exception(""Minimum energy point is outside range of points provided. Use a higher range of r values.""). if (npoints == 5):; energy = function_5pt(rvals, energies, optx); first = first_deriv_5pt(rvals, energies, optx); secd = second_deriv_5pt(rvals, energies, optx) * p4const.psi_hartree2aJ; third = third_deriv_5pt(rvals, energies, optx) * p4const.psi_hartree2aJ; fourth = fourth_deriv_5pt(rvals, energies, optx) * p4const.psi_hartree2aJ; elif (npoints == 9):; energy = function_9pt(rvals, energies, optx); first = first_deriv_9pt(rvals, energies, optx); secd = second_deriv_9pt(rvals, energies, optx) * p4const.psi_hartree2aJ; third = third_deriv_9pt(rvals, energies, optx) * p4const.psi_hartree2aJ; fourth = fourth_deriv_9pt(rvals, energies, optx) * p4const.psi_hartree2aJ. psi4.print_out(""\nEquilibrium Energy %20.14f Hartrees\n"" % energy); psi4.print_out(""Gradient %20.14f\n"" % first); psi4.print_out(""Quadratic Force Constant %14.7f MDYNE/A\n"" % secd); psi4.print_out(""Cubic Force Constant %14.7f MDYNE/A**2\n"" % ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b5/_modules/diatomic.html:3646,energy,energy,3646,psi4manual/4.0b5/_modules/diatomic.html,https://psicode.org,https://psicode.org/psi4manual/4.0b5/_modules/diatomic.html,1,['energy'],['energy']
Energy Efficiency," == 'NONE')):; commands += """"""PsiMod.set_global_option('DF_BASIS_SAPT', '%s')\n"""""" % (user_df_basis_sapt); if not((user_df_basis_elst == """") or (user_df_basis_elst == 'NONE')):; commands += """"""PsiMod.set_global_option('DF_BASIS_ELST', '%s')\n"""""" % (user_df_basis_elst); commands += """"""molecule = PsiMod.get_active_molecule()\n""""""; commands += """"""molecule.update_geometry()\n"""""". if symmetry_override:; commands += """"""molecule.reset_point_group('c1')\n""""""; commands += """"""molecule.fix_orientation(1)\n""""""; commands += """"""molecule.update_geometry()\n"""""". if (openshell_override) and (molecule.multiplicity() != 1):; if user_reference == 'RHF':; commands += """"""PsiMod.set_global_option('REFERENCE', 'UHF')\n""""""; elif user_reference == 'RKS':; commands += """"""PsiMod.set_global_option('REFERENCE', 'UKS')\n"""""". # all modes need to step through the reagents but all for different purposes; # continuous: defines necessary commands, executes energy(method) call, and collects results into dictionary; # sow: opens individual reagent input file, writes the necessary commands, and writes energy(method) call; # reap: opens individual reagent output file, collects results into a dictionary; if (db_mode.lower() == 'continuous'):; exec banners; exec GEOS[rgt]; exec commands; #print 'MOLECULE LIVES %23s %8s %4d %4d %4s' % (rgt, PsiMod.get_option('REFERENCE'),; # molecule.molecular_charge(), molecule.multiplicity(), molecule.schoenflies_symbol()); PsiMod.set_variable('NATOM', molecule.natom()); ERGT[rgt] = call_function_in_1st_argument(func, **kwargs); #print ERGT[rgt]; PsiMod.print_variables(); exec actives; for envv in db_tabulate:; VRGT[rgt][envv] = PsiMod.get_variable(envv); PsiMod.set_global_option(""REFERENCE"", user_reference); PsiMod.clean(). elif (db_mode.lower() == 'sow'):; freagent = open('%s.in' % (rgt), 'w'); freagent.write('# This is a psi4 input file auto-generated from the database() wrapper.\n\n'); freagent.write(banners); freagent.write(GEOS[rgt]); freagent.write(commands); freage",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b2/_modules/wrappers.html:42302,energy,energy,42302,psi4manual/4.0b2/_modules/wrappers.html,https://psicode.org,https://psicode.org/psi4manual/4.0b2/_modules/wrappers.html,2,['energy'],['energy']
Energy Efficiency," == 'NONE')):; commands += """"""PsiMod.set_global_option('DF_BASIS_SAPT', '%s')\n"""""" % (user_df_basis_sapt); if not((user_df_basis_elst == """") or (user_df_basis_elst == 'NONE')):; commands += """"""PsiMod.set_global_option('DF_BASIS_ELST', '%s')\n"""""" % (user_df_basis_elst); commands += """"""molecule = PsiMod.get_active_molecule()\n""""""; commands += """"""molecule.update_geometry()\n"""""". if symmetry_override:; commands += """"""molecule.reset_point_group('c1')\n""""""; commands += """"""molecule.fix_orientation(1)\n""""""; commands += """"""molecule.update_geometry()\n"""""". if (openshell_override) and (molecule.multiplicity() != 1):; if user_reference == 'RHF':; commands += """"""PsiMod.set_global_option('REFERENCE', 'UHF')\n""""""; elif user_reference == 'RKS':; commands += """"""PsiMod.set_global_option('REFERENCE', 'UKS')\n"""""". # all modes need to step through the reagents but all for different purposes; # continuous: defines necessary commands, executes energy(method) call, and collects results into dictionary; # sow: opens individual reagent input file, writes the necessary commands, and writes energy(method) call; # reap: opens individual reagent output file, collects results into a dictionary; if (db_mode.lower() == 'continuous'):; exec(banners); exec(format_molecule_for_input(GEOS[rgt])); exec(commands); #print 'MOLECULE LIVES %23s %8s %4d %4d %4s' % (rgt, PsiMod.get_global_option('REFERENCE'),; # molecule.molecular_charge(), molecule.multiplicity(), molecule.schoenflies_symbol()); PsiMod.set_variable('NATOM', molecule.natom()); PsiMod.set_variable('NUCLEAR REPULSION ENERGY', molecule.nuclear_repulsion_energy()); if re.match(r'^verify', lowername):; compare_values(DATA['NUCLEAR REPULSION ENERGY'][rgt], PsiMod.get_variable('NUCLEAR REPULSION ENERGY'), ; 4, '%s %.4f' % (rgt, PsiMod.get_variable('NUCLEAR REPULSION ENERGY'))); ERGT[rgt] = 7.0; else:; ERGT[rgt] = call_function_in_1st_argument(func, **kwargs); #print ERGT[rgt]; PsiMod.print_variables(); exec(actives); for envv in db_tabulate:; VRGT[r",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b3/_modules/wrappers.html:42645,energy,energy,42645,psi4manual/4.0b3/_modules/wrappers.html,https://psicode.org,https://psicode.org/psi4manual/4.0b3/_modules/wrappers.html,2,['energy'],['energy']
Energy Efficiency," == 0 else z2el[int(float(mline[0]))]; molxyz += '%s %16s %16s %16s\n' % (el, mline[-3], mline[-2], mline[-1]); lline = grd[at + 1 + Nat].split(); grad.append([float(lline[-3]), float(lline[-2]), float(lline[-1])]); mol = Molecule.init_with_xyz(molxyz, no_com=True, no_reorient=True, contentsNotFilename=True). return mol, grad. [docs]def harvest_zmat(zmat):; """"""Parses the contents of the Cfour ZMAT file into array and; coordinate information. The coordinate info is converted into a; rather dinky Molecule (no fragment, but does read charge, mult,; unit). Return qcdb.Molecule. Written for findif zmat* where; geometry always Cartesian and Bohr. """"""; zmat = zmat.splitlines()[1:] # skip comment line; Nat = 0; readCoord = True; isBohr = ''; charge = 0; mult = 1; molxyz = ''; cgeom = []; for line in zmat:; if line.strip() == '':; readCoord = False; elif readCoord:; lline = line.split(); molxyz += line + '\n'; Nat += 1; else:; if line.find('CHARGE') > -1:; idx = line.find('CHARGE'); charge = line[idx + 7:]; idxc = charge.find(','); if idxc > -1:; charge = charge[:idxc]; charge = int(charge); if line.find('MULTIPLICITY') > -1:; idx = line.find('MULTIPLICITY'); mult = line[idx + 13:]; idxc = mult.find(','); if idxc > -1:; mult = mult[:idxc]; mult = int(mult); if line.find('UNITS=BOHR') > -1:; isBohr = ' bohr'. molxyz = '%d%s\n%d %d\n' % (Nat, isBohr, charge, mult) + molxyz; mol = Molecule.init_with_xyz(molxyz, no_com=True, no_reorient=True, contentsNotFilename=True). return mol. [docs]def harvest_FCM(fcm):; """"""Parses the contents *fcm* of the Cfour FCMFINAL file into a hessian array. """"""; fcm = fcm.splitlines(); Nat = int(fcm[0].split()[0]); Ndof = int(fcm[0].split()[1]). empty = True; hess = []; for df in range(Ndof):; for at in range(Nat):; lline = fcm[Ndof * at + at + 1].split(); if empty:; if (abs(float(lline[0])) > 1.0e-8) or \; (abs(float(lline[1])) > 1.0e-8) or \; (abs(float(lline[2])) > 1.0e-8):; empty = False; fcm.append([float(lline[0]), float(lline[1]), float(lline[2",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/_modules/qcdb/cfour.html:25379,charge,charge,25379,psi4manual/1.0.0/_modules/qcdb/cfour.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/_modules/qcdb/cfour.html,2,['charge'],['charge']
Energy Efficiency," > 1.0e-6 else 0.0]. # Determine degeneracy of rotational constants.; degen = 0; for i in range(2):; for j in range(i + 1, 3):; if degen >= 2:; continue; rabs = math.fabs(rot_const[i] - rot_const[j]); tmp = rot_const[i] if rot_const[i] > rot_const[j] else rot_const[j]; if rabs > ZERO:; rel = rabs / tmp; else:; rel = 0.0; if rel < tol:; degen += 1; #print ""\tDegeneracy is %d\n"" % (degen). # Determine rotor type; if self.natom() == 1:; rotor_type = 'RT_ATOM'; elif rot_const[0] == 0.0:; rotor_type = 'RT_LINEAR' # 0 < IB == IC inf > B == C; elif degen == 2:; rotor_type = 'RT_SPHERICAL_TOP' # IA == IB == IC A == B == C; elif degen == 1:; if (rot_const[1] - rot_const[2]) < 1.0e-6:; rotor_type = 'RT_PROLATE_SYMMETRIC_TOP' # IA < IB == IC A > B == C; elif (rot_const[0] - rot_const[1]) < 1.0e-6:; rotor_type = 'RT_OBLATE_SYMMETRIC_TOP' # IA == IB < IC A == B > C; else:; rotor_type = 'RT_ASYMMETRIC_TOP' # IA < IB < IC A > B > C; return rotor_type. def center_of_charge(self):; """"""Computes center of charge of molecule (does not translate molecule). >>> H2OH2O.center_of_charge(); [-0.073339893272065401, 0.002959783555632145, 0.0]. """"""; ret = [0.0, 0.0, 0.0]; total_c = 0.0. for at in range(self.natom()):; c = self.charge(at); ret = add(ret, scale(self.xyz(at), c)); total_c += c. ret = scale(ret, 1.0 / total_c); return ret. def move_to_coc(self):; """"""Moves molecule to center of charge. """"""; coc = scale(self.center_of_charge(), -1.0); self.translate(coc). def rotational_symmetry_number(self):; """"""Number of unique orientations of the rigid molecule that only interchange identical atoms. Notes; -----; Source http://cccbdb.nist.gov/thermo.asp (search ""symmetry number""). """"""; pg = self.get_full_point_group(); pg = self.full_point_group_with_n(); if pg in ['ATOM', 'C1', 'Ci', 'Cs', 'C_inf_v']:; sigma = 1; elif pg == 'D_inf_h':; sigma = 2; elif pg in ['T', 'Td']:; sigma = 12; elif pg == 'Oh':; sigma = 24; elif pg == 'Ih':; sigma = 60; elif pg in ['Cn', 'Cnv', 'Cnh']:; sigma = self.full_pg_",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/_modules/psi4/driver/qcdb/molecule.html:36581,charge,charge,36581,psi4manual/1.2.1/_modules/psi4/driver/qcdb/molecule.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/_modules/psi4/driver/qcdb/molecule.html,1,['charge'],['charge']
Energy Efficiency," > 2:; dc = 3; for delta in metadata[2:]:; tables += """""" %6s %20s %1s %-27s %2s %16.8f %-s\n"""""" % (; GRAND_NEED[dc]['d_stage'], GRAND_NEED[dc]['d_wfn'] + ' - ' + GRAND_NEED[dc + 1]['d_wfn'], '/',; GRAND_NEED[dc]['d_basis'], '', GRAND_NEED[dc]['d_energy'] - GRAND_NEED[dc + 1]['d_energy'],; GRAND_NEED[dc]['d_scheme'].__name__); dc += 2. tables += """""" %6s %20s %1s %-27s %2s %16.8f %-s\n"""""" % ('total', 'CBS', '', '', '', finalenergy, ''); tables += table_delimit. core.print_out(tables). core.set_variable('CBS REFERENCE ENERGY', GRAND_NEED[0]['d_energy']); core.set_variable('CBS CORRELATION ENERGY', finalenergy - GRAND_NEED[0]['d_energy']); core.set_variable('CBS TOTAL ENERGY', finalenergy); core.set_variable('CURRENT REFERENCE ENERGY', GRAND_NEED[0]['d_energy']); core.set_variable('CURRENT CORRELATION ENERGY', finalenergy - GRAND_NEED[0]['d_energy']); core.set_variable('CURRENT ENERGY', finalenergy); core.set_variable('CBS NUMBER', Njobs). # new skeleton wavefunction w/mol, highest-SCF basis (just to choose one), & not energy; basis = core.BasisSet.build(molecule, ""ORBITAL"", 'def2-svp'); wfn = core.Wavefunction(molecule, basis). optstash.restore(). if ptype == 'energy':; finalquantity = finalenergy; elif ptype == 'gradient':; finalquantity = finalgradient; wfn.set_gradient(finalquantity); if finalquantity.rows(0) < 20:; core.print_out('CURRENT GRADIENT'); finalquantity.print_out(); elif ptype == 'hessian':; finalquantity = finalhessian; wfn.set_gradient(finalgradient); wfn.set_hessian(finalquantity); if finalquantity.rows(0) < 20:; core.print_out('CURRENT HESSIAN'); finalquantity.print_out(). if return_wfn:; return (finalquantity, wfn); else:; return finalquantity. _lmh_labels = {; 1: ['HI'],; 2: ['LO', 'HI'],; 3: ['LO', 'MD', 'HI'],; 4: ['LO', 'MD', 'M2', 'HI'],; 5: ['LO', 'MD', 'M2', 'M3', 'HI']; }. def _expand_scheme_orders(scheme, basisname, basiszeta, wfnname, options, natom):; """"""Check that the length of *basiszeta* array matches the implied degree of; extrapolatio",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/_modules/psi4/driver/driver_cbs.html:58401,energy,energy,58401,psi4manual/1.3.2/_modules/psi4/driver/driver_cbs.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/_modules/psi4/driver/driver_cbs.html,1,['energy'],['energy']
Energy Efficiency," >= 0:; return temp[posn]; else:; return temp. [docs] def mass(self, atom):; """"""Returns mass of atom (0-indexed). >>> print H2OH2O.mass(4); 1.00782503207. """"""; if self.atoms[atom].mass() != 0.0:; return self.atoms[atom].mass(). if math.fabs(self.atoms[atom].Z() - int(self.atoms[atom].Z())) > 0.0:; print ""WARNING: Obtaining masses from atom with fractional charge...may be incorrect!!!\n""; # TODO outfile; return an2masses[int(self.atoms[atom].Z())]. [docs] def symbol(self, atom):; """"""Returns the cleaned up label of the atom (C2 => C, H4 = H) (0-indexed). >>> print H2OH2O.symbol(4); H. """"""; return self.atoms[atom].symbol(). [docs] def label(self, atom):; """"""Returns the original label of the atom (0-indexed) as given in the input file (C2, H4). >>> print H2OH2O.label(4); H3. """"""; return self.atoms[atom].label(). [docs] def charge(self, atom):; """"""Returns charge of atom (0-indexed).; Related to SAD guess in libmints version. >>> print H2OH2O.charge(4); 1.0. """"""; return self.atoms[atom].charge(). [docs] def fZ(self, atom):; """"""Nuclear charge of atom (includes dummies). >>> print H2OH2O.fZ(4); 8. """"""; return self.full_atoms[atom].Z(). [docs] def fx(self, atom):; """"""x position of atom (0-indexed, includes dummies) in Bohr. >>> print H2OH2O.fx(4); 2.55231135823. """"""; return self.input_units_to_au * self.full_atoms[atom].compute()[0]. [docs] def fy(self, atom):; """"""y position of atom (0-indexed, includes dummies) in Bohr. >>> print H2OH2O.fy(4); 0.210645882307. """"""; return self.input_units_to_au * self.full_atoms[atom].compute()[1]. [docs] def fz(self, atom):; """"""z position of atom (0-indexed, includes dummies) in Bohr. >>> print H2OH2O.fz(4); 0.0. """"""; return self.input_units_to_au * self.full_atoms[atom].compute()[2]. [docs] def fxyz(self, atom):; """"""Returns a Vector3 with x, y, z position of atom; (0-indexed) in Bohr (includes dummies). >>> print H2OH2O.fxyz(4); [2.5523113582286716, 0.21064588230662976, 0.0]. """"""; return scale(self.full_atoms[atom].compute(), self.input_uni",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b3/_modules/qcdb/libmintsmolecule.html:7735,charge,charge,7735,psi4manual/4.0b3/_modules/qcdb/libmintsmolecule.html,https://psicode.org,https://psicode.org/psi4manual/4.0b3/_modules/qcdb/libmintsmolecule.html,3,['charge'],['charge']
Energy Efficiency," >>> set df_basis_guess jun-cc-pVDZ-JKFIT; >>> energy('sapt0-ct'). >>> # [3] Arbitrary-order MPn calculation; >>> energy('mp4'). >>> # [4] Converge scf as singlet, then run detci as triplet upon singlet reference; >>> molecule H2 {\\n0 1\\nH\\nH 1 0.74\\n}; >>> energy('scf'); >>> H2.set_multiplicity(3); >>> energy('detci', bypass_scf=True). """"""; lowername = name.lower(); kwargs = kwargs_lower(kwargs). optstash = OptionsState(; ['SCF', 'E_CONVERGENCE'],; ['SCF', 'D_CONVERGENCE'],; ['E_CONVERGENCE']). # Make sure the molecule the user provided is the active one; if 'molecule' in kwargs:; activate(kwargs['molecule']); del kwargs['molecule']; molecule = PsiMod.get_active_molecule(); molecule.update_geometry(). # Allow specification of methods to arbitrary order; lowername, level = parse_arbitrary_order(lowername); if level:; kwargs['level'] = level. try:; # Set method-dependent scf convergence criteria; if not PsiMod.has_option_changed('SCF', 'E_CONVERGENCE'):; if procedures['energy'][lowername] == run_scf or procedures['energy'][lowername] == run_dft:; PsiMod.set_local_option('SCF', 'E_CONVERGENCE', 6); else:; PsiMod.set_local_option('SCF', 'E_CONVERGENCE', 8); if not PsiMod.has_option_changed('SCF', 'D_CONVERGENCE'):; if procedures['energy'][lowername] == run_scf or procedures['energy'][lowername] == run_dft:; PsiMod.set_local_option('SCF', 'D_CONVERGENCE', 6); else:; PsiMod.set_local_option('SCF', 'D_CONVERGENCE', 8). # Set post-scf convergence criteria (global will cover all correlated modules); if not PsiMod.has_global_option_changed('E_CONVERGENCE'):; if not procedures['energy'][lowername] == run_scf and not procedures['energy'][lowername] == run_dft:; PsiMod.set_global_option('E_CONVERGENCE', 6). procedures['energy'][lowername](lowername, **kwargs). except KeyError:; raise ValidationError('Energy method %s not available.' % (lowername)). optstash.restore(); return PsiMod.get_variable('CURRENT ENERGY'). [docs]def gradient(name, **kwargs):; r""""""Function complementa",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b4/_modules/driver.html:29441,energy,energy,29441,psi4manual/4.0b4/_modules/driver.html,https://psicode.org,https://psicode.org/psi4manual/4.0b4/_modules/driver.html,2,['energy'],['energy']
Energy Efficiency," >LATTICE command; def recv_lattice(self, lattice=None):; """""" Receive the charges of a set of lattice point charges through MDI. Arguments:; lattice: New charges of the lattice of point charges. If None, receive through MDI.; """"""; if lattice is None:; self.lattice = MDI_Recv(self.nlattice, MDI_DOUBLE, self.comm); else:; self.lattice = lattice; self.set_lattice_field(). # Respond to the SCF command; def run_scf(self):; """""" Run an energy calculation; """"""; self.energy = psi4.energy(self.scf_method, **self.kwargs). # Respond to the <DIMENSIONS command; def send_dimensions(self):; """""" Send the dimensionality of the system through MDI. :returns: *dimensions* Dimensionality of the system; """"""; dimensions = [1, 1, 1]; MDI_Send(dimensions, 3, MDI_INT, self.comm); return dimensions. # Respond to the <TOTCHARGE command; def send_total_charge(self):; """""" Send the total system charge through MDI. :returns: *charge* Total charge of the system; """"""; charge = self.molecule.molecular_charge(); MDI_Send(charge, 1, MDI_DOUBLE, self.comm); return charge. # Respond to the >TOTCHARGE command; def recv_total_charge(self, charge=None):; """""" Receive the total system charge through MDI. Arguments:; charge: New charge of the system. If None, receive through MDI.; """"""; if charge is None:; charge = MDI_Recv(1, MDI_DOUBLE, self.comm); self.molecule.set_molecular_charge(int(round(charge))). # Respond to the <ELEC_MULT command; def send_multiplicity(self):; """""" Send the electronic multiplicity through MDI. :returns: *multiplicity* Multiplicity of the system; """"""; multiplicity = self.molecule.multiplicity(); MDI_Send(multiplicity, 1, MDI_INT, self.comm); return multiplicity. # Respond to the >ELEC_MULT command; def recv_multiplicity(self, multiplicity=None):; """""" Receive the electronic multiplicity through MDI. Arguments:; multiplicity: New multiplicity of the system. If None, receive through MDI.; """"""; if multiplicity is None:; multiplicity = MDI_Recv(1, MDI_INT, self.comm); self.molecule.set_multi",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/_modules/psi4/driver/mdi_engine.html:10915,charge,charge,10915,psi4manual/1.4.0/_modules/psi4/driver/mdi_engine.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/_modules/psi4/driver/mdi_engine.html,7,['charge'],['charge']
Energy Efficiency," A. Jha, M. Nottoli and M. F. Herbst; Interface to DFTD3 by S. Grimme; Interface to DKH by A. Wolf, M. Reiher, and B. A. Hess; Interface to LibECPInt by R. Shaw; Interface to LIBEFP by I. Kaliman; Interface to programs through FCHK files — fchk(); Psi4FockCI: A General Fock-Space CI For Spin-Flip And IP/EA; Interface to gau2grid by D. G. A. Smith; Interface to gCP by S. Grimme; Interface to GDMA Distributed Multipole Analysis by A. J. Stone — gdma(); Interface to Libint by E. Valeev; Interface to Molden — molden(); Interface to MRCC by M. Kállay; Interface to PCMSolver by R. Di Remigio; Interface to SIMINT by B. Pritchard; Spin-Network-Scaled MP2 (SNS-MP2) by D. E. Shaw; Plugin v2rdm_casscf by A. E. DePrince; Interface to Libxc by M. A. L. Marques. Psithon Functions: Invoking a Calculation; Notes on Options; Single-Point Energy — energy(); Property; Basis Set Superposition Corrections; Geometry Optimization — optimize() and gradient(); Harmonic Vibrational Analysis and Visualization of Normal Modes — frequency() and hessian(); Database — database(); Complete Basis Set; Spectroscopic Constants for Diatomics; Function Intercalls; Embarrassing Parallelism; Generation of Cube Files — cubeprop(); Orbital Visualization with VMD. Customization: Adding Simple Extensions; Defining a Method Alias; Creating a Database. Appendices; Keywords; Keywords by Alpha; Keywords by Module. Basis Sets; Basis Sets by Family; Basis Sets by Element; Auxiliary Basis Sets. QCVariables (aka PSI Variables); PSI Variables by Alpha; PSI Variables by Module. Miscellaneous; Test Suite and Sample Inputs; DFT Functionals; PSIOH Intermediate Files; Physical Constants; Bibliography. Programmers’ Manual¶. Introduction to Programming in PSI4; Welcome to New Programmers; Community Code of Conduct; Setting Up Your Development Environment; General layout of the core: where new C++ code should live; Where to Get Help. Adding New Code to PSI4; Ways to Add Code: Psi4NumPy, Plugins, Full Integration; Creating Ne",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/index.html:3052,energy,energy,3052,psi4manual/master/index.html,https://psicode.org,https://psicode.org/psi4manual/master/index.html,1,['energy'],['energy']
Energy Efficiency," Aliases:opt(). Returns:float – Total electronic energy of optimized structure in Hartrees. Returns:(float, Wavefunction) – energy and wavefunction when return_wfn specified. Raises:psi4.ConvergenceError if |optking__geom_maxiter| exceeded without reaching geometry convergence. PSI variables:. CURRENT ENERGY. Parameters:; name (string) – 'scf' || 'mp2' || 'ci5' || etc.; First argument, usually unlabeled. Indicates the computational method; to be applied to the database. May be any valid argument to; energy(). molecule (molecule) – h2o || etc.; The target molecule, if not the last molecule defined. return_wfn (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return the Wavefunction; calculation result as the second element (after float energy) of a tuple. func (function) – \(\Rightarrow\) gradient \(\Leftarrow\) || energy || cbs; Indicates the type of calculation to be performed on the molecule.; The default dertype accesses 'gradient' or 'energy', while; 'cbs' performs a multistage finite difference calculation.; If a nested series of python functions is intended (see Function Intercalls),; use keyword opt_func instead of func. mode (string) – \(\Rightarrow\) 'continuous' \(\Leftarrow\) || 'sow' || 'reap'; For a finite difference of energies optimization, indicates whether; the calculations required to complete the; optimization are to be run in one file ('continuous') or are to be; farmed out in an embarrassingly parallel fashion; ('sow'/'reap'). For the latter, run an initial job with; 'sow' and follow instructions in its output file. For maximum; flexibility, return_wfn is always on in 'reap' mode. dertype (dertype) – 'gradient' || 'energy'; Indicates whether analytic (if available) or finite difference; optimization is to be performed. hessian_with (string) – 'scf' || 'mp2' || etc.; Indicates the computational method with which to perform a hessian; analysis to guide the geometry optimization. Warning; Optimizations where the mol",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.driver.opt.html:1160,energy,energy,1160,psi4manual/1.1.0/api/psi4.driver.opt.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.driver.opt.html,2,['energy'],['energy']
Energy Efficiency," B(0)¶; The Hartree–Fock energy [E_h] of subsystem B implemented for F/I-SAPT. SAPT HF(2) ENERGY AC(HF)¶; The Hartree–Fock localized energy [E_h] of subsystems A and C implemented for F/I-SAPT. SAPT HF(2) ENERGY BC(HF)¶; The Hartree–Fock localized energy [E_h] of subsystems B and C implemented for F/I-SAPT. SAPT HF(2) ENERGY AB(HF)¶; The Hartree–Fock localized energy [E_h] of subsystems A and B implemented for F/I-SAPT. SAPT HF(2) ENERGY A(HF)¶; The Hartree–Fock localized energy [E_h] of subsystem A implemented for F/I-SAPT. SAPT HF(2) ENERGY B(HF)¶; The Hartree–Fock localized energy [E_h] of subsystem B implemented for F/I-SAPT. SAPT HF(2) ENERGY C¶; The Hartree–Fock energy [E_h] of subsystem C implemented for F/I-SAPT. SAPT HF(2) ENERGY HF¶; The FI-SAPT Hartree–Fock interaction energy [E_h] implemented for F/I-SAPT. SAPT ELST12,R ENERGY¶; An electrostatics-classified SAPT term energy [E_h] implemented for SAPT2. SAPT EXCH11(S^2) ENERGY¶. SAPT EXCH12(S^2) ENERGY¶; An exchange-classified SAPT term energy [E_h] implemented for SAPT2. SAPT IND22 ENERGY¶. SAPT EXCH-IND22 ENERGY¶; An induction-classified SAPT term energy [E_h] implemented for SAPT2. SAPT DISP21 ENERGY¶; A dispersion-classified SAPT term energy [E_h] implemented for SAPT2+. SAPT DISP22(SDQ) ENERGY¶. SAPT DISP22(T) ENERGY¶. SAPT EST.DISP22(T) ENERGY¶; Dispersion-classified MBPT-based SAPT term energy [E_h] implemented for SAPT2+. SAPT DISP2(CCD) ENERGY¶. SAPT DISP22(S)(CCD) ENERGY¶. SAPT DISP22(T)(CCD) ENERGY¶. SAPT EST.DISP22(T)(CCD) ENERGY¶; Dispersion-classified coupled-cluster-based SAPT term energy [E_h] implemented for SAPT2+. SAPT ELST13,R ENERGY¶; An electrostatics-classified SAPT term energy [E_h] implemented for SAPT2+(3). SAPT IND30,R ENERGY¶. SAPT IND-DISP30 ENERGY¶. SAPT EXCH-IND30,R ENERGY¶; A induction-classified SAPT term energy [E_h] implemented for SAPT2+3. SAPT EXCH-IND30(S^INF) ENERGY¶. SAPT EXCH-IND30,R(S^INF) ENERGY¶; A induction-classified SAPT term energy [E_h] implemented for SAPT2",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/glossary_psivariables.html:48147,energy,energy,48147,psi4manual/1.7.x/glossary_psivariables.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/glossary_psivariables.html,4,['energy'],['energy']
Energy Efficiency," C, H4 = H) (0-indexed including dummies). ftrue_atomic_number(self: psi4.core.Molecule, atom: int) → int¶; Gets atomic number of atom from element (0-indexed including dummies). full_geometry(self: psi4.core.Molecule) → psi4.core.Matrix¶; Gets the geometry [Bohr] as a (Natom X 3) matrix of coordinates (including dummies). full_pg_n(self: psi4.core.Molecule) → int¶; Gets n in Cnv, etc.; If there is no n (e.g. Td) it’s the highest-order rotation axis. fx(self: psi4.core.Molecule, arg0: int) → float¶; x position of atom arg0 (0-indexed including dummies in Bohr). fy(self: psi4.core.Molecule, arg0: int) → float¶; y position of atom arg0 (0-indexed including dummies in Bohr). fz(self: psi4.core.Molecule, arg0: int) → float¶; z position of atom arg0 (0-indexed including dummies in Bohr). geometry(self: psi4.core.Molecule) → psi4.core.Matrix¶; Gets the geometry [Bohr] as a (Natom X 3) matrix of coordinates (excluding dummies). get_fragment_charges(self: psi4.core.Molecule) → List[int]¶; Gets the charge of each fragment. get_fragment_multiplicities(self: psi4.core.Molecule) → List[int]¶; Gets the multiplicity of each fragment. get_fragment_types(self: psi4.core.Molecule) → List[str]¶; Returns a list describing how to handle each fragment {Real, Ghost, Absent}. get_fragments(self: psi4.core.Molecule) → List[Tuple[int, int]]¶; Returns list of pairs of atom ranges defining each fragment from parent molecule(fragments[frag_ind] = <Afirst,Alast+1>). get_full_point_group(self: psi4.core.Molecule) → str¶; Gets point group name such as C3v or S8. get_full_point_group_with_n(self: psi4.core.Molecule) → str¶; Gets point group name such as Cnv or Sn. get_variable(self: psi4.core.Molecule, arg0: str) → float¶; Returns the value of variable arg0 in the structural variables list. has_zmatrix(self: psi4.core.Molecule) → bool¶; Get whether or not this molecule has at least one zmatrix entry. inertia_tensor(self: psi4.core.Molecule) → psi4.core.Matrix¶; Returns intertial tensor. input_units",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/api/psi4.core.Molecule.html:22785,charge,charge,22785,psi4manual/1.7.x/api/psi4.core.Molecule.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/api/psi4.core.Molecule.html,3,['charge'],['charge']
Energy Efficiency," C, H4 = H) (0-indexed including dummies). ftrue_atomic_number(self: psi4.core.Molecule, atom: int) → int¶; Gets atomic number of atom from element (0-indexed including dummies). full_geometry(self: psi4.core.Molecule) → psi4.core.Matrix¶; Gets the geometry [Bohr] as a (Natom X 3) matrix of coordinates (including dummies). full_pg_n(self: psi4.core.Molecule) → int¶; Gets n in Cnv, etc.; If there is no n (e.g. Td) it’s the highest-order rotation axis. fx(self: psi4.core.Molecule, arg0: int) → float¶; x position of atom arg0 (0-indexed including dummies in Bohr). fy(self: psi4.core.Molecule, arg0: int) → float¶; y position of atom arg0 (0-indexed including dummies in Bohr). fz(self: psi4.core.Molecule, arg0: int) → float¶; z position of atom arg0 (0-indexed including dummies in Bohr). geometry(self: psi4.core.Molecule) → psi4.core.Matrix¶; Gets the geometry [Bohr] as a (Natom X 3) matrix of coordinates (excluding dummies). get_fragment_charges(self: psi4.core.Molecule) → List[int]¶; Gets the charge of each fragment. get_fragment_multiplicities(self: psi4.core.Molecule) → List[int]¶; Gets the multiplicity of each fragment. get_fragment_types(self: psi4.core.Molecule) → List[str]¶; Returns a list describing how to handle each fragment {Real, Ghost, Absent}. get_fragments(self: psi4.core.Molecule) → List[Tuple[int, int]]¶; Returns list of pairs of atom ranges defining each fragment from parent molecule(fragments[frag_ind] = <Afirst,Alast+1>). get_full_point_group(self: psi4.core.Molecule) → str¶; Gets point group name such as C3v or S8. get_full_point_group_with_n(self: psi4.core.Molecule) → str¶; Gets point group name such as Cnv or Sn. get_variable(self: psi4.core.Molecule, arg0: str) → float¶; Returns the value of variable arg0 in the structural variables list. inertia_tensor(self: psi4.core.Molecule) → psi4.core.Matrix¶; Returns intertial tensor. input_units_to_au(self: psi4.core.Molecule) → float¶; Returns unit conversion to [a0] for geometry. irrep_labels(self: psi4",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/api/psi4.core.molecule.html:22510,charge,charge,22510,psi4manual/1.3.2/api/psi4.core.molecule.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/api/psi4.core.molecule.html,6,['charge'],['charge']
Energy Efficiency," C, H4 = H) (0-indexed including dummies). ftrue_atomic_number(self: psi4.core.Molecule, atom: int) → int¶; Gets atomic number of atom from element (0-indexed including dummies). full_geometry(self: psi4.core.Molecule) → psi4.core.Matrix¶; Gets the geometry [Bohr] as a (Natom X 3) matrix of coordinates (including dummies). full_pg_n(self: psi4.core.Molecule) → int¶; Gets n in Cnv, etc.; If there is no n (e.g. Td) it’s the highest-order rotation axis. fx(self: psi4.core.Molecule, arg0: int) → float¶; x position of atom arg0 (0-indexed including dummies in Bohr). fy(self: psi4.core.Molecule, arg0: int) → float¶; y position of atom arg0 (0-indexed including dummies in Bohr). fz(self: psi4.core.Molecule, arg0: int) → float¶; z position of atom arg0 (0-indexed including dummies in Bohr). geometry(self: psi4.core.Molecule) → psi4.core.Matrix¶; Gets the geometry [Bohr] as a (Natom X 3) matrix of coordinates (excluding dummies). get_fragment_charges(self: psi4.core.Molecule) → list[int]¶; Gets the charge of each fragment. get_fragment_multiplicities(self: psi4.core.Molecule) → list[int]¶; Gets the multiplicity of each fragment. get_fragment_types(self: psi4.core.Molecule) → list[str]¶; Returns a list describing how to handle each fragment {Real, Ghost, Absent}. get_fragments(self: psi4.core.Molecule) → list[tuple[int, int]]¶; Returns list of pairs of atom ranges defining each fragment from parent molecule(fragments[frag_ind] = <Afirst,Alast+1>). get_full_point_group(self: psi4.core.Molecule) → str¶; Gets point group name such as C3v or S8. get_full_point_group_with_n(self: psi4.core.Molecule) → str¶; Gets point group name such as Cnv or Sn. get_variable(self: psi4.core.Molecule, arg0: str) → float¶; Returns the value of variable arg0 in the structural variables list. has_zmatrix(self: psi4.core.Molecule) → bool¶; Get whether or not this molecule has at least one zmatrix entry. inertia_tensor(self: psi4.core.Molecule) → psi4.core.Matrix¶; Returns intertial tensor. input_units",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/api/psi4.core.Molecule.html:23019,charge,charge,23019,psi4manual/master/api/psi4.core.Molecule.html,https://psicode.org,https://psicode.org/psi4manual/master/api/psi4.core.Molecule.html,1,['charge'],['charge']
Energy Efficiency," CBS (directly) in pure-gradient mode if name is CBS and all parts have analytic grad. avail.; return name(gradient, kwargs.pop('label', 'custom function'), ptype='gradient', **kwargs); else:; optstash = driver_util._set_convergence_criterion('energy', cbs_methods[0], 8, 10, 8, 10, 8); lowername = name; # Pass through to G by E. elif gradient_type == 'cbs_gufunc':; cbs_methods = driver_cbs._parse_cbs_gufunc_string(name.lower())[0]; for method in cbs_methods:; _filter_renamed_methods(""gradient"", method); dertype = min([_find_derivative_type('gradient', method, user_dertype) for method in cbs_methods]); lowername = name.lower(); if dertype == 1:; # Bounce to CBS in pure-gradient mode if ""method/basis"" name and all parts have analytic grad. avail.; return driver_cbs._cbs_gufunc(gradient, name, ptype='gradient', **kwargs); else:; # Set method-dependent scf convergence criteria (test on procedures['energy'] since that's guaranteed); optstash = driver_util._set_convergence_criterion('energy', cbs_methods[0], 8, 10, 8, 10, 8). else:; # Allow specification of methods to arbitrary order; lowername = name.lower(); _filter_renamed_methods(""gradient"", lowername); lowername, level = driver_util.parse_arbitrary_order(lowername); if level:; kwargs['level'] = level. # Prevent methods that do not have associated gradients; if lowername in energy_only_methods:; raise ValidationError(""gradient('%s') does not have an associated gradient"" % name). dertype = _find_derivative_type('gradient', lowername, user_dertype). # Set method-dependent scf convergence criteria (test on procedures['energy'] since that's guaranteed); optstash = driver_util._set_convergence_criterion('energy', lowername, 8, 10, 8, 10, 8). # Commit to procedures[] call hereafter; return_wfn = kwargs.pop('return_wfn', False); core.clean_variables(). # no analytic derivatives for scf_type cd; if core.get_global_option('SCF_TYPE') == 'CD':; if (dertype == 1):; raise ValidationError(""""""No analytic derivatives for SCF_TYPE CD",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/_modules/psi4/driver/driver.html:41407,energy,energy,41407,psi4manual/1.4.0/_modules/psi4/driver/driver.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/_modules/psi4/driver/driver.html,2,['energy'],['energy']
Energy Efficiency," CCSD level in the; velocity gauge for a given (x) wavelength, (x) rounded to nearest integer. CCSD SPECIFIC ROTATION (MVG) @ xNM¶; The specific rotation [deg/(dm (g/cm^3))] calculated at the CCSD level in the; modified velocity gauge for a given (x) wavelength, (x) rounded to nearest integer. CEPA(0) DIPOLE X¶. CEPA(0) DIPOLE Y¶. CEPA(0) DIPOLE Z¶; The three components of the dipole [Debye] for the; coupled electron pair approximation variant 0 level of theory. CEPA(0) QUADRUPOLE XX¶. CEPA(0) QUADRUPOLE XY¶. CEPA(0) QUADRUPOLE XZ¶. CEPA(0) QUADRUPOLE YY¶. CEPA(0) QUADRUPOLE YZ¶. CEPA(0) QUADRUPOLE ZZ¶; The six components of the quadrupole [Debye Ang] for the; coupled electron pair approximation variant 0 level of theory. CEPA(0) TOTAL ENERGY¶. CEPA(0) CORRELATION ENERGY¶. CEPA(1) TOTAL ENERGY¶. CEPA(1) CORRELATION ENERGY¶. CEPA(2) TOTAL ENERGY¶. CEPA(2) CORRELATION ENERGY¶. CEPA(3) TOTAL ENERGY¶. CEPA(3) CORRELATION ENERGY¶; The total electronic energy [H] and correlation energy component [H]; for the requested variant of coupled electron pair approximation level of theory. CFOUR ERROR CODE¶; The non-zero return value from a Cfour execution. CI DIPOLE X¶. CI DIPOLE Y¶. CI DIPOLE Z¶; The three components of the dipole [Debye] for the requested; configuration interaction level of theory and root. CI QUADRUPOLE XX¶. CI QUADRUPOLE XY¶. CI QUADRUPOLE XZ¶. CI QUADRUPOLE YY¶. CI QUADRUPOLE YZ¶. CI QUADRUPOLE ZZ¶; The six components of the quadrupole [Debye Ang] for the requested; configuration interaction level of theory and root. CI ROOT n -> ROOT m DIPOLE X¶. CI ROOT n -> ROOT m DIPOLE Y¶. CI ROOT n -> ROOT m DIPOLE Z¶; The three components of the transition dipole [Debye] between roots n; and m for the requested configuration interaction level of theory. CI ROOT n -> ROOT m QUADRUPOLE XX¶. CI ROOT n -> ROOT m QUADRUPOLE XY¶. CI ROOT n -> ROOT m QUADRUPOLE XZ¶. CI ROOT n -> ROOT m QUADRUPOLE YY¶. CI ROOT n -> ROOT m QUADRUPOLE YZ¶. CI ROOT n -> ROOT m QUADRUPOLE ZZ¶; The",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/glossary_psivariables-1.html:7994,energy,energy,7994,psi4manual/1.2.1/glossary_psivariables-1.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/glossary_psivariables-1.html,8,['energy'],['energy']
Energy Efficiency," CCSD or QCISD computation. The following is an; example of the results for a computation run with the call; energy('fno-qcisd') to energy():; QCISD iterations converged!. OS MP2 FNO correction: -0.000819116338; SS MP2 FNO correction: -0.000092278158; MP2 FNO correction: -0.000911394496. OS MP2 correlation energy: -0.166478414245; SS MP2 correlation energy: -0.056669079827; MP2 correlation energy: -0.223147494072; * MP2 total energy: -76.258836941658. OS MP2.5 correlation energy: -0.171225850256; SS MP2.5 correlation energy: -0.054028401038; MP2.5 correlation energy: -0.225254251294; * MP2.5 total energy: -76.260943698880. OS MP3 correlation energy: -0.175973286267; SS MP3 correlation energy: -0.051387722248; MP3 correlation energy: -0.227361008515; * MP3 total energy: -76.263050456101. OS MP4(SDQ) correlation energy: -0.180324322304; SS MP4(SDQ) correlation energy: -0.048798468084; MP4(SDQ) correlation energy: -0.230995119324; * MP4(SDQ) total energy: -76.266684566910. OS QCISD correlation energy: -0.181578117924; SS QCISD correlation energy: -0.049853548145; QCISD correlation energy: -0.231431666069; * QCISD total energy: -76.267121113654. The first set of energies printed corresponds to the second-order FNO; correction mentioned previously. Results for many-body perturbation; theory through partial fourth order are then provided.; The notation MP4(SDQ) indicates that we have included all contributions to; the correlation energy through fourth order, with the exception of that; from connected triple excitations.; One need not run a full QCISD or CCSD computation to obtain these; perturbation theory results. The keywords for invoking perturbation; theory computations are given below in; Table FNOCC Methods. Full MP4 correlation; energies are also available. Coupled electron pair approximation¶; Coupled-pair methods can be viewed as approximations to CCSD or as; size-extensive modifications of CISD. The methods have the same; complexity as CISD, and solving the CISD ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/fnocc-1.html:6144,energy,energy,6144,psi4manual/1.4.0/fnocc-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/fnocc-1.html,15,['energy'],['energy']
Energy Efficiency," CCSD/cc-pVDZ optical rotation calculation (both gauges) on Cartesian H2O2. dfscf-bz2; Benzene Dimer DF-HF/cc-pVDZ. psithon1; Spectroscopic constants of H2, and the full ci cc-pVTZ level of theory. matrix1; An example of using BLAS and LAPACK calls directly from the Psi input file, demonstrating matrix multiplication, eigendecomposition, Cholesky decomposition and LU decomposition. These operations are performed on vectors and matrices provided from the Psi library. cc36; CC2(RHF)/cc-pVDZ energy of H2O. castup2; SCF with various combinations of pk/density-fitting, castup/no-castup, and spherical/cartesian settings. Demonstrates that puream setting is getting set by orbital basis for all df/castup parts of calc. Demonstrates that answer doesn’t depend on presence/absence of castup. Demonstrates (by comparison to castup3) that output file doesn’t depend on options (scf_type) being set global or local. This input uses global. cc37; CC2(UHF)/cc-pVDZ energy of H2O+. omp2-1; OMP2 cc-pVDZ energy for the H2O molecule. psimrcc-ccsd_t-4; Mk-MRCCSD(T) single point. O$_3` state described using the Ms = 0 component of the singlet. Uses TCSCF orbitals. gibbs; Test Gibbs free energies at 298 K of N2, H2O, and CH4. dft-pbe0-2; Internal match to psi4, test to match to literature values in litref.in/litref.out. zaptn-nh2; ZAPT(n)/6-31G NH2 Energy Point, with n=2-25. cc5; RHF CCSD(T) aug-cc-pvtz frozen-core energy of C4NH4 Anion. mints1; Symmetry tests for a range of molecules. This doesn’t actually compute any energies, but serves as an example of the many ways to specify geometries in Psi4. props2; DF-SCF cc-pVDZ of benzene-hydronium ion, scanning the dissociation coordinate with Python’s built-in loop mechanism. The geometry is specified by a Z-matrix with dummy atoms, fixed parameters, updated parameters, and separate charge/multiplicity specifiers for each monomer. One-electron properties computed for dimer and one monomer. mints5; Tests to determine full point group symmetry. Cu",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b3/autodoc_testsuite-1.html:19051,energy,energy,19051,psi4manual/4.0b3/autodoc_testsuite-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b3/autodoc_testsuite-1.html,4,['energy'],['energy']
Energy Efficiency," CD.""""""). # Make sure the molecule the user provided is the active one; molecule = kwargs.pop('molecule', core.get_active_molecule()); molecule.update_geometry(). # Does dertype indicate an analytic procedure both exists and is wanted?; if dertype == 1:; core.print_out(""""""gradient() will perform analytic gradient computation.\n""""""). # Perform the gradient calculation; wfn = procedures['gradient'][lowername](lowername, molecule=molecule, **kwargs). else:; core.print_out(""""""gradient() will perform gradient computation by finite difference of analytic energies.\n""""""). opt_iter = kwargs.get('opt_iter', 1); if opt_iter is True:; opt_iter = 1. if opt_iter == 1:; print('Performing finite difference calculations'). # Obtain list of displacements; findif_meta_dict = driver_findif.gradient_from_energy_geometries(molecule); ndisp = len(findif_meta_dict[""displacements""]) + 1. print("""""" %d displacements needed ..."""""" % (ndisp), end=''). wfn = _process_displacement(energy, lowername, molecule, findif_meta_dict[""reference""], 1, ndisp,; **kwargs); var_dict = core.variables(). for n, displacement in enumerate(findif_meta_dict[""displacements""].values(), start=2):; _process_displacement(; energy, lowername, molecule, displacement, n, ndisp, write_orbitals=False, **kwargs). # Reset variables; for key, val in var_dict.items():; core.set_variable(key, val). # Compute the gradient; core.set_local_option('FINDIF', 'GRADIENT_WRITE', True); G = driver_findif.compute_gradient_from_energies(findif_meta_dict); grad_psi_matrix = core.Matrix.from_array(G); grad_psi_matrix.print_out(); wfn.set_gradient(grad_psi_matrix). # Explicitly set the current energy..; core.set_variable('CURRENT ENERGY', findif_meta_dict[""reference""][""energy""]). optstash.restore(). if core.get_option('FINDIF', 'GRADIENT_WRITE'):; filename = core.get_writer_file_prefix(wfn.molecule().name()) + "".grad""; qcdb.gradparse.to_string(np.asarray(wfn.gradient()), filename, dtype='GRD', mol=molecule, energy=wfn.energy()). if return_wfn:",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/_modules/psi4/driver/driver.html:41364,energy,energy,41364,psi4manual/1.3.2/_modules/psi4/driver/driver.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/_modules/psi4/driver/driver.html,1,['energy'],['energy']
Energy Efficiency," CH2 state described using the Ms = 0 component of the singlet. Uses RHF singlet orbitals. fsapt-allterms; This test case shows an example of running and analyzing a standard F-SAPT0/jun-cc-pvdz procedure for HSG-18-dimer from the HSG database. fci-h2o-fzcv; 6-31G H2O Test FCI Energy Point. olccd-grad1; OLCCD cc-pVDZ gradient for the H2O molecule. dct11; Restricted DF-DCT ODC-12 energies with linearly dependent basis functions. dft2; DFT Functional Test. mbis-1; MBIS calculation on H2O. olccd2; OLCCD cc-pVDZ energy with B3LYP initial guess for the NO radical. sapt9; usapt example with empty beta. nbody-multi-level; Multilevel computation of water trimer energy (geometry from J. Chem. Theory Comput. 11, 2126-2136 (2015)). cc49; EOM-CC3(UHF) on CH radical with user-specified basis and properties for particular root. scf-hess5; DF SCF 6-31G analytical vs finite-difference tests Tests DF UHF hessian code for Ca != Cb. sapt-compare; SAPT0 cc-pVDZ computation of the ethene-ethyne interaction energy, using the cc-pVDZ-JKFIT RI basis for SCF and cc-pVDZ-RI for SAPT. Monomer geometries are specified using Cartesian coordinates. mp2p5-grad2; MP2.5 cc-pVDZ gradient for the NO radical. omp2p5-1; OMP2.5 cc-pVDZ energy for the H2O molecule. dct4; DCT calculation for the HF+ using DC-06 functional. This performs both two-step and simultaneous update of the orbitals and cumulant using DIIS extrapolation. Four-virtual integrals are first handled in the MO Basis for the first two energy computations. In the next two the ao_basis=disk algorithm is used, where the transformation of integrals for four-virtual case is avoided. The computation is then repeated using the DC-12 functional with the same algorithms. mcscf2; TCSCF cc-pVDZ energy of asymmetrically displaced ozone, with Z-matrix input. dct6; DCT calculation for the triplet O2 using DC-06 and DC-12. Only two-step algorithm is tested. density-screen-2; RKS Density Matrix based-Integral Screening Test for benzene. psithon2; Accesses",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/autodoc_testsuite_corepsi4-1.html:35155,energy,energy,35155,psi4manual/1.5.0/autodoc_testsuite_corepsi4-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/autodoc_testsuite_corepsi4-1.html,4,['energy'],['energy']
Energy Efficiency," CI ROOT n DIPOLE Y¶. CI ROOT n DIPOLE Z¶; The three components of the dipole [Debye] for the requested; configuration interaction level of theory and root n.; Deprecated in favor of CI ROOT n DIPOLE. CI ROOT n QUADRUPOLE¶; Redundant quadrupole array [e a0^2] for the requested configuration interaction level of theory and root n, (3, 3). CI ROOT n QUADRUPOLE XX¶. CI ROOT n QUADRUPOLE XY¶. CI ROOT n QUADRUPOLE XZ¶. CI ROOT n QUADRUPOLE YY¶. CI ROOT n QUADRUPOLE YZ¶. CI ROOT n QUADRUPOLE ZZ¶; The six components of the quadrupole [Debye Ang] for the requested; configuration interaction level of theory and root n.; Deprecated in favor of CI ROOT n QUADRUPOLE. CI ROOT n TOTAL ENERGY¶. CI ROOT n CORRELATION ENERGY¶; The total electronic energy [Eh] and correlation energy component [Eh]; for the requested configuration interaction level of theory and root; n (numbering starts at 0). CI STATE-AVERAGED TOTAL ENERGY¶. CI STATE-AVERAGED CORRELATION ENERGY¶; The total electronic energy [Eh] and correlation energy component [Eh]; for state-averaged CI/CASSCF levels of theory. CI TOTAL ENERGY¶. CI CORRELATION ENERGY¶; The total electronic energy [Eh] and correlation energy component [Eh]; for the requested configuration interaction level of theory and root. CISD DIPOLE¶; Dipole array [e a0] for the configuration interaction singles and doubles level of theory, (3,). CISD DIPOLE X¶. CISD DIPOLE Y¶. CISD DIPOLE Z¶; The three components of the dipole [Debye] for the; configuration interaction singles and doubles level of theory and root.; Deprecated in favor of CISD DIPOLE. CISD QUADRUPOLE¶; Redundant quadrupole array [e a0^2] for the configuration interaction singles and doubles level of theory, (3, 3). CISD QUADRUPOLE XX¶. CISD QUADRUPOLE XY¶. CISD QUADRUPOLE XZ¶. CISD QUADRUPOLE YY¶. CISD QUADRUPOLE YZ¶. CISD QUADRUPOLE ZZ¶; The six components of the quadrupole [Debye Ang] for the; configuration interaction singles and doubles level of theory and root.; Deprecated in favor of CIS",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/glossary_psivariables-1.html:13084,energy,energy,13084,psi4manual/1.4.0/glossary_psivariables-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/glossary_psivariables-1.html,8,['energy'],['energy']
Energy Efficiency," CORRECTION ENERGY¶; The dispersion correction [Eh] appended to an underlying functional; when a DFT-D method is requested. Quantity \(E_{\text{-D}}\); in Eqs. (4) and (1).; When dispersion parameters are untweaked for a functional and dispersion; level, labeled QCVariable also defined. DOUBLE-HYBRID CORRECTION ENERGY¶; The scaled MP2 correlation energy correction [Eh] appended to an; underlying functional when a DH-DFT method is requested.; Quantity \(E_{\text{DH}}\) in Eq. (1). DMA DISTRIBUTED MULTIPOLES¶; Distributed multipoles in units given by GDMA_MULTIPOLE_UNITS; with the row index corresponding to the site and the column index; referencing the multipole component. Both indices are zero based,; and the Qlm components of the multipoles are ordered as Q00, Q10,; Q11c, Q11s, Q20, Q21c, Q21s, Q22c, Q22s, etc. DMA TOTAL MULTIPOLES¶; Distributed multipoles as a single row, whose columns are the total; multipoles, translated to GDMA_ORIGIN, and summed. DMRG-SCF TOTAL ENERGY¶; The total DMRG total electonic energy [Eh]. Not unique because oribital spaces vary. DMRG-CASPT2 TOTAL ENERGY¶; The total DMRG plus CASPT2 total electonic energy [Eh] . Not unique because orbital spaces vary. EFP DISP ENERGY¶. EFP ELST ENERGY¶. EFP EXCH ENERGY¶. EFP IND ENERGY¶; Respectively, the dispersion, electrostatics, exchange, and induction; components of the total electronic interaction energy [Eh] for EFP/EFP; computations. The sum of these four components yields; EFP TOTAL ENERGY. EFP TOTAL ENERGY¶; The total electronic interaction energy [Eh] for EFP/EFP computations. EFP TORQUE¶; The torque, not gradient for EFP/EFP computations. ENTHALPY¶; Total enthalpy H [Eh] at given temperature. ENTHALPY CORRECTION¶; Sum of electronic, translational, rotational, and vibrational corrections [Eh] to the enthalpy at given temperature. ESP AT CENTER n¶; Property of electrostatic potential [Eh / e] at location, usually atom center, n. FCI TOTAL ENERGY¶. FCI CORRELATION ENERGY¶; The total electronic ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/glossary_psivariables-1.html:21739,energy,energy,21739,psi4manual/1.4.0/glossary_psivariables-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/glossary_psivariables-1.html,5,['energy'],['energy']
Energy Efficiency," CPHF equations for a given set of x vectors. damping_update(self: psi4.core.HF, arg0: float) → None; docstring. deep_copy(self: psi4.core.Wavefunction, arg0: psi4.core.Wavefunction) → None¶; Deep copies the internal data. del_array_variable(self: psi4.core.Wavefunction, arg0: str) → int¶; Removes the requested (case-insensitive) Matrix QC variable. del_scalar_variable(self: psi4.core.Wavefunction, arg0: str) → int¶; Removes the requested (case-insensitive) double QC variable. del_variable(key)¶. density_fitted(self: psi4.core.Wavefunction) → bool¶; Returns whether this wavefunction was obtained using density fitting or not. diis(self: psi4.core.HF) → bool; docstring. diis_enabled_; docstring. diis_manager(self: psi4.core.HF) → psi4.core.DIISManager; docstring. diis_start_; docstring. doccpi(self: psi4.core.Wavefunction) → psi4.core.Dimension¶; Returns the number of doubly occupied orbitals per irrep. efzc(self: psi4.core.Wavefunction) → float¶; Returns the frozen-core energy. energy(self: psi4.core.Wavefunction) → float¶; Returns the Wavefunction’s energy. epsilon_a(self: psi4.core.Wavefunction) → psi4.core.Vector¶; Returns the Alpha Eigenvalues. epsilon_a_subset(self: psi4.core.Wavefunction, arg0: str, arg1: str) → psi4.core.Vector¶; Returns the requested Alpha Eigenvalues subset. epsilon_b(self: psi4.core.Wavefunction) → psi4.core.Vector¶; Returns the Beta Eigenvalues. epsilon_b_subset(self: psi4.core.Wavefunction, arg0: str, arg1: str) → psi4.core.Vector¶; Returns the requested Beta Eigenvalues subset. esp_at_nuclei(self: psi4.core.Wavefunction) → psi4.core.Vector¶; returns electrostatic potentials at nuclei. finalize(self: psi4.core.HF) → None; Cleans up the the Wavefunction’s temporary data. finalize_energy(); Performs stability analysis and calls back SCF with new guess; if needed, Returns the SCF energy. This function should be called; once orbitals are ready for energy/property computations, usually; after iterations() is called. find_occupation(self: psi4.c",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/api/psi4.core.hf.html:15275,energy,energy,15275,psi4manual/1.3.2/api/psi4.core.hf.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/api/psi4.core.hf.html,1,['energy'],['energy']
Energy Efficiency," CURRENT CORRELATION ENERGY. Caution; Some features are not yet implemented. Buy a developer a coffee. No way to tell function to boost fitting basis size for all calculations.; No way to extrapolate def2 family basis sets; Need to add more extrapolation schemes. As represented in the equation below, a CBS energy method is defined in several; sequential stages (scf, corl, delta, delta2, delta3, delta4, delta5) covering treatment; of the reference total energy, the correlation energy, a delta correction to the; correlation energy, and a second delta correction, etc.. Each is activated by its; stage_wfn keyword and is only allowed if all preceding stages are active. \[E_{\text{total}}^{\text{CBS}} = \mathcal{F}_{\textbf{scf_scheme}} \left(E_{\text{total},\; \text{SCF}}^{\textbf{scf_basis}}\right) \; + \mathcal{F}_{\textbf{corl_scheme}} \left(E_{\text{corl},\; \textbf{corl_wfn}}^{\textbf{corl_basis}}\right) \; + \delta_{\textbf{delta_wfn_lesser}}^{\textbf{delta_wfn}} \; + \delta_{\textbf{delta2_wfn_lesser}}^{\textbf{delta2_wfn}} \; + \delta_{\textbf{delta3_wfn_lesser}}^{\textbf{delta3_wfn}} \; + \delta_{\textbf{delta4_wfn_lesser}}^{\textbf{delta4_wfn}} \; + \delta_{\textbf{delta5_wfn_lesser}}^{\textbf{delta5_wfn}}\]; Here, \(\mathcal{F}\) is an energy or energy extrapolation scheme, and the following also hold. \[\delta_{\textbf{delta_wfn_lesser}}^{\textbf{delta_wfn}} \; = \mathcal{F}_{\textbf{delta_scheme}} \left(E_{\text{corl},\; \textbf{delta_wfn}}^{\textbf{delta_basis}}\right) - \mathcal{F}_{\textbf{delta_scheme}} \left(E_{\text{corl},\; \textbf{delta_wfn_lesser}}^{\textbf{delta_basis}}\right)\]. \[\delta_{\textbf{delta2_wfn_lesser}}^{\textbf{delta2_wfn}} \; = \mathcal{F}_{\textbf{delta2_scheme}} \left(E_{\text{corl},\; \textbf{delta2_wfn}}^{\textbf{delta2_basis}}\right) - \mathcal{F}_{\textbf{delta2_scheme}} \left(E_{\text{corl},\; \textbf{delta2_wfn_lesser}}^{\textbf{delta2_basis}}\right)\]. \[\delta_{\textbf{delta3_wfn_lesser}}^{\textbf{delta3_wfn}} \; = \mathcal",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.driver.cbs.html:1796,energy,energy,1796,psi4manual/1.1.0/api/psi4.driver.cbs.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.driver.cbs.html,6,['energy'],['energy']
Energy Efficiency," Cartesian coordinates. cisd-h2o-clpse; 6-31G** H2O Test CISD Energy Point with subspace collapse. dfomp3-2; DF-OMP3 cc-pVDZ energy for the H2O+ cation. dft-custom-gga; DFT (LDA/GGA) test of custom implementations in: gga_superfuncs.py. omp2p5-2; OMP2.5 cc-pVDZ energy for the H2O molecule. mbis-6; MBIS calculation on H2O. sapt-exch-ind-inf; SAPT(DFT) aug-cc-pVDZ interaction energy between Ne and Ar atoms. sapt11; sapt example with orbital freezing with alkali metal and dMP2. dfomp3-grad1; DF-OMP3 cc-pVDZ gradients for the H2O molecule. cbs-xtpl-energy-conv; Extrapolated water energies - conventional integrals version. dfomp2-grad2; OMP2 cc-pVDZ energy for the NO molecule. dlpnomp2-2; comparison of DF-MP2 and DLPNO-MP2 with a CBS extrapolation. ci-multi; BH single points, checking that program can run multiple instances of DETCI in a single input, without an intervening clean() call. dfmp2-fc; Kr–Kr nocp energies with all-electron basis set to check frozen core. olccd1; OLCCD cc-pVDZ energy for the H2O molecule. nbody-he-4b; MP2/aug-cc-pvDZ many body energies of an arbitrary Helium complex, addressing 4-body formulas. x2c2; Test of SFX2C-1e on Water cc-pVDZ-DK. In this test the Dirac equation is solved in the uncontracted cc-pVDZ-DK basis. The reference numbers are from Lan Cheng’s implementation in Cfour. opt-freeze-coords; SCF/cc-pVDZ optimization example with frozen cartesian. dfmp2-grad2; DF-MP2 cc-pVDZ gradient for the NO molecule. scf-guess-read3; Test if the the guess read in the same basis converges. dfmp2-1; Density fitted MP2 cc-PVDZ/cc-pVDZ-RI computation of formic acid dimer binding energy using automatic counterpoise correction. Monomers are specified using Cartesian coordinates. stability2; ROHF stability analysis check for CN with cc-pVDZ. This test corresponds to the rohf-stab test from Psi3. opt12; SCF cc-pVDZ geometry optimzation of ketene, starting from bent structure. omp2-4; SCS-OMP2 cc-pVDZ geometry optimization for the H2O molecule. tdscf-3; td-",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/autodoc_testsuite_corepsi4.html:15808,energy,energy,15808,psi4manual/1.6.x/autodoc_testsuite_corepsi4.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/autodoc_testsuite_corepsi4.html,2,['energy'],['energy']
Energy Efficiency," Cluster Theory: Application of Mk-MRCCSDT and Mk-MRCCSDT-n Methods to; Model Systems,” F. A. Evangelista, A. C. Simmonett, W. D. Allen,; H. F. Schaefer, and J. Gauss, J. Chem. Phys. 128, 124104; (2008). Mk-MRPT2. “A Companion Perturbation Theory for State-specific; Multireference Coupled Cluster Methods,”; F. A. Evangelista, A. C. Simmonett, H. F. Schaefer, D. Mukherjee, and; W. D. Allen,; Phys. Chem. Chem. Phys. 11, 4728-4741 (2009). SAPT (General); All capabilities of the SAPT module are based on Symmetry Adapted; Perturbation Theory. A good review article for this method is as; follows:. “Perturbation Theory Approach to Intermolecular Potential Energy; Surfaces of van der Waals Complexes,” B. Jeziorski, R. Moszynski,; and K. Szalewicz, Chem. Rev. 94, 1887-1930 (1994). The particular implementation and algorithms for various orders of SAPT; available in PSI4 are provided below.; SAPT0. “Large-scale Symmetry-adapted Perturbation Theory Computations via; Density Fitting and Laplace Transformation Techniques: Investigating the; Fundamental Forces of DNA-Intercalator Interactions,” E. G. Hohenstein,; R. M. Parrish, C. D. Sherrill, J. M. Turney, and H. F. Schaefer, J.; Chem. Phys. 135, 174017 (2011).; “Density Fitting and Cholesky Decomposition Approximations; in Symmetry-Adapted Perturbation Theory: Implementation and Application; to Probe the Nature of Interactions in Linear Acenes,”; E. G. Hohenstein and C. D. Sherrill, J. Chem. Phys. 132,; 184111 (2010). SAPT2, SAPT2+, SAPT2+(3), SAPT2+3. “Density Fitting of Intramonomer Correlation Effects in; Symmetry-Adapted Perturbation Theory,”; E. G. Hohenstein and C. D. Sherrill, J. Chem. Phys. 133,; 014101 (2010).; “Wavefunction Methods for Noncovalent Interactions,” E. G.; Hohenstein and C. D. Sherrill, WIREs: Comput. Mol. Sci. 2,; 304-326 (2012). Using Natural Orbitals in SAPT. “Efficient Evaluation of Triple Excitations in Symmetry-Adapted; Perturbation Theory via MP2 Natural Orbitals,” E. G. Hohenstein; and C. D. Sherri",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b2/introduction-1.html:5007,adapt,adapted,5007,psi4manual/4.0b2/introduction-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b2/introduction-1.html,4,['adapt'],['adapted']
Energy Efficiency," Complete Basis Set. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Psithon Functions: Invoking a Calculation; Complete Basis Set. Complete Basis Set¶. Code author: Lori A. Burns, Daniel G. A. Smith and Peter Kraus; Section author: Lori A. Burns and Peter Kraus; The psi4.driver.cbs() function described below is; powerful but complicated, requiring many options. For most common; calculations, a shorthand can be accessed directly though; psi4.driver.energy(), psi4.driver.gradient(), etc. For example,; a MP2 single-point DT extrapolation can be accessed through the first item; below more conveniently than the equivalent second or third items. energy('mp2/cc-pv[dt]z'); energy(""cbs"", corl_wfn='mp2', corl_basis='cc-pv[dt]z'); energy(""cbs"", cbs_metadata=[{""wfn"": ""hf"", ""basis"": ""cc-pvtz""}, {""wfn"": ""mp2"", ""basis"": ""cc-pv[dt]z"", ""scheme"": ""corl_xtpl_helgaker_2""}]). Caution; In PSI4 previous to Spring 2022 and v1.6, calling certain; cbs-related functions like the above looked like; energy(cbs, corl_wfn='mp2', corl_basis='cc-pv[dt]z'). energy(cbs, cbs_metadata=[{""wfn"": ""hf"", ""basis"": ""cc-pvtz""}, {""wfn"": ""mp2"", ""basis"": ""cc-pv[dt]z"", ""scheme"": corl_xtpl_helgaker_2}]). The difference is that the main function; psi4.driver.cbs() and extrapolation schemes like; psi4.driver.driver_cbs_helper.xtpl_highest_1() and; psi4.driver.driver_cbs_helper.scf_xtpl_helgaker_2() and composite; aliases like psi4.driver.aliases.sherrill_gold_standard(); and psi4.driver.aliases.allen_focal_point() in the old way; passed the Python function directly, whereas the new way uses the; string of the function name. A CCSD(T) DT coupled-cluster correction atop a TQ MP2 extrapolation; geometry optimization can also be accessed through the first item below more; conveniently than the equivalent second and third items. optimize('mp2/cc-pv[tq]z + D:ccsd(t)/cc-pvdz'); optimize(""cbs"", corl_wfn='mp2', corl_basis='cc-pv[tq]z', delta_wfn='ccsd(t)', delta_basis='cc-pvdz'); optimize(""cbs"", cbs_meta",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/cbs.html:1011,energy,energy,1011,psi4manual/1.8.x/cbs.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/cbs.html,1,['energy'],['energy']
Energy Efficiency," Complete Basis Set. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Psithon Functions: Invoking a Calculation; Complete Basis Set. Complete Basis Set¶. Code author: Lori A. Burns, Daniel G. A. Smith and Peter Kraus; Section author: Lori A. Burns and Peter Kraus; The psi4.driver.cbs() function described below is; powerful but complicated, requiring many options. For most common; calculations, a shorthand can be accessed directly though; psi4.driver.energy(), psi4.driver.gradient(), etc. For example,; a MP2 single-point DT extrapolation can be accessed through the first item; below more conveniently than the equivalent second or third items. energy('mp2/cc-pv[dt]z'); energy(""cbs"", corl_wfn='mp2', corl_basis='cc-pv[dt]z'); energy(""cbs"", cbs_metadata=[{""wfn"": ""hf"", ""basis"": ""cc-pvtz""}, {""wfn"": ""mp2"", ""basis"": ""cc-pv[dt]z"", ""scheme"": ""corl_xtpl_helgaker_2""}]). Caution; In PSI4 previous to Spring 2022 and v1.6, calling certain; cbs-related functions like the above looked like; energy(cbs, corl_wfn='mp2', corl_basis='cc-pv[dt]z'). energy(cbs, cbs_metadata=[{""wfn"": ""hf"", ""basis"": ""cc-pvtz""}, {""wfn"": ""mp2"", ""basis"": ""cc-pv[dt]z"", ""scheme"": corl_xtpl_helgaker_2}]). The difference is that the main function; psi4.driver.cbs() and extrapolation schemes like; psi4.driver.driver_cbs_helper.xtpl_highest_1() and; psi4.driver.driver_cbs_helper.scf_xtpl_helgaker_2() and composite; aliases like psi4.driver.aliases.sherrill_gold_standard(); and psi4.driver.aliases.allen_focal_point() in the old way; passed the Python function directly, whereas the new way uses the; string of the function name. A CCSD(T) DT coupled-cluster correction atop a TQ MP2 extrapolation; geometry optimization can also be accessed through the first item below more; conveniently than the equivalent second and third items. optimize('mp2/cc-pv[tq]z + D:ccsd(t)/cc-pvdz'); optimize(""cbs"", corl_wfn='mp2', corl_basis='cc-pv[tq]z', delta_wfn='ccsd(t)', delta_basis='cc-pvdz'); optimize(""cbs"", cbs_meta",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/cbs.html:1011,energy,energy,1011,psi4manual/1.9.x/cbs.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/cbs.html,1,['energy'],['energy']
Energy Efficiency," Computation of CP-corrected water trimer gradient (geometry from J. Chem. Theory Comput. 11, 2126-2136 (2015)). mpn-bh; MP(n)/aug-cc-pVDZ BH Energy Point, with n=2-19. Compare against M. L. Leininger et al., J. Chem. Phys. 112, 9213 (2000). sapt-sf1; Tests the Psi4 SF-SAPT code. cbs-delta-energy; Extrapolated energies with delta correction. omp2-5; SOS-OMP2 cc-pVDZ geometry optimization for the H2O molecule. scf-freq1; Analytic vs. finite difference DF-SCF frequency test for water. cc22; ROHF-EOM-CCSD/DZ on the lowest two states of each irrep in \(^{3}B_1\) CH2. cc14; ROHF-CCSD/cc-pVDZ \(^{3}B_1\) CH2 geometry optimization via analytic gradients. mp2-1; All-electron MP2 6-31G** geometry optimization of water. cepa1; cc-pvdz H2O Test CEPA(1) Energy. casscf-fzc-sp; CASSCF/6-31G** energy point. extern2; External potential calculation involving a TIP3P water and a QM water for DFMP2. Finite different test of the gradient is performed to validate forces. opt9; Various constrained energy minimizations of HOOH with cc-pvdz RHF. Cartesian-coordinate constrained optimizations of HOOH in internals. cc9a; ROHF-CCSD(T) cc-pVDZ energy for the \(^2\Sigma^+\) state of the CN radical, with Z-matrix input. mints1; Symmetry tests for a range of molecules. This doesn’t actually compute any energies, but serves as an example of the many ways to specify geometries in Psi4. dfmp2-grad5; Tests DF-MP2 gradient in the presence of a dipole field. pywrap-db3; Test that Python Molecule class processes geometry like psi4 Molecule class. fcidump; test FCIDUMP functionality for rhf/uhf. cc16; ROHF and UHF-B-CCD(T)/cc-pVDZ \(^{3}B_1\) CH2 single-point energy (fzc, MO-basis \(\langle ab|cd \rangle\) ). fci-h2o; 6-31G H2O Test FCI Energy Point. ocepa1; OCEPA cc-pVDZ energy for the H2O molecule. dft-custom-gga; DFT (LDA/GGA) test of custom implementations in: gga_superfuncs.py. opt-multi-dimer-c2h; Multi-fragment opt of C2h methane dimer with user-combined reference points. fd-freq-energy; SCF STO-3G",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/autodoc_testsuite_corepsi4-1.html:19123,energy,energy,19123,psi4manual/1.3.2/autodoc_testsuite_corepsi4-1.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/autodoc_testsuite_corepsi4-1.html,4,['energy'],['energy']
Energy Efficiency," Convergence criterion for excitation energy (change) in the Davidson algorithm for the CIS guess to CC-EOM. Type: conv double; Default: 1e-6. SS_R_CONVERGENCE (CCEOM); CCEOM — Convergence criterion for norm of the residual vector in the Davidson algorithm for the CIS guess to CC-EOM. Type: conv double; Default: 1e-6. SS_SKIP_DIAG (CCEOM); CCEOM — Do ?. Type: boolean; Default: false. SS_VECS_PER_ROOT (CCEOM); CCEOM —. Type: integer; Default: 5. STEP_TYPE (OPTKING); OPTKING — Geometry optimization step type, either Newton-Raphson or Rational Function Optimization. Type: string; Possible Values: RFO, NR, SD; Default: RFO. T2_COUPLED (CCENERGY); CCENERGY — Do ?. Type: boolean; Default: false. T3_WS_INCORE (CCENERGY); CCENERGY — Do ?. Type: boolean; Default: false. T3_WS_INCORE (CCEOM); CCEOM — Do ?. Type: boolean; Default: false. T_AMPS (CCHBAR); CCHBAR — Do compute the Tamplitude equation matrix elements?. Type: boolean; Default: false. TAU_SQUARED (DCFT); DCFT — Controls whether to compute the DCFT energy with the Tau^2 correction to Tau. Type: boolean; Default: false. TDHF_MEM_SAFETY_FACTOR (CPHF); CPHF — Memory safety factor for allocating JK. Type: double; Default: 0.75. TDM (DETCI); DETCI — Do compute the transition density? Note: only transition densities between roots of the same symmetry will be evaluated. DETCI does not compute states of different irreps within the same computation; to do this, lower the symmetry of the computation. Type: boolean; Default: false. TDM_PRINT (DETCI); DETCI — Do print the transition density?. Type: boolean; Default: false. TDM_WRITE (DETCI); DETCI — Do write the transition density?. Type: boolean; Default: false. TEST_B (OPTKING); OPTKING — Do test B matrix?. Type: boolean; Default: false. TEST_DERIVATIVE_B (OPTKING); OPTKING — Do test derivative B matrix?. Type: boolean; Default: false. TIKHONOW_MAX (PSIMRCC); PSIMRCC — The cycle after which Tikhonow regularization is stopped. Set to zero to allow regularization in all iteration",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b2/autodoc_glossary_options_c-1.html:95654,energy,energy,95654,psi4manual/4.0b2/autodoc_glossary_options_c-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b2/autodoc_glossary_options_c-1.html,2,['energy'],['energy']
Energy Efficiency," Copies the pointers to the internal data. sobasisset(self: psi4.core.Wavefunction) → psi4.core.SOBasisSet¶; Returns the symmetry orbitals basis. soccpi(self: psi4.core.Wavefunction, assume_socc_alpha: bool = True) → psi4.core.Dimension¶; Returns the number of singly occupied orbitals per irrep. to_file(filename=None)¶; Serialize a Wavefunction object. Opposite of; from_file(). Parameters:. wfn (Wavefunction) – Wavefunction or inherited class instance.; filename (Optional[str]) – An optional filename to which to write the data. Returns:; A dictionary and NumPy representation of the Wavefunction. Return type:; Dict[str, Dict[str, Any]]. variable(key)¶; Return copy of scalar or array QCVariable; key from self. Parameters:. self (Wavefunction) – Wavefunction instance.; key (str) – Case-insensitive key to instance’s double or Matrix; storage maps. Returns:; Requested QCVariable from self. Scalar variables are returned as floats.; Array variables not naturally 2D (like multipoles or per-atom charges); are returned as ndarray of natural dimensionality.; Other array variables are returned as Matrix and; may have an extra dimension with symmetry information. Return type:; float or ndarray or Matrix. Raises:; KeyError – If key not set on self. Example; >>> g, wfn = psi4.gradient(""hf/cc-pvdz"", return_wfn=True); >>> wfn.variable(""CURRENT ENERGY""); -100.00985995185668; >>> wfn.variable(""CURRENT DIPOLE""); array([ 0. , 0. , -0.83217802]); >>> wfn.variable(""CURRENT GRADIENT""); <psi4.core.Matrix object at 0x12d884fc0>; >>> wfn.variable(""CURRENT GRADIENT"").np; array([[ 6.16297582e-33, 6.16297582e-33, -9.41037138e-02],; [-6.16297582e-33, -6.16297582e-33, 9.41037138e-02]]). variables(include_deprecated_keys=False)¶; Return all scalar or array QCVariables; from self. Parameters:. self – Wavefunction instance.; include_deprecated_keys (bool) – Also return duplicate entries with keys that have been deprecated. Returns:; Map of all QCVariables that have been set on self. Scalar variables ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/api/psi4.core.Wavefunction.html:25705,charge,charges,25705,psi4manual/1.7.x/api/psi4.core.Wavefunction.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/api/psi4.core.Wavefunction.html,3,['charge'],['charges']
Energy Efficiency," Creates OrbitalSpace with information about the requested alpha orbital space. Parameters. id – Unique name for the orbital space.; basis – {‘SO’, ‘AO’}; Should the subspace be of symmetry orbitals or atomic orbitals?; subset – {ALL, ACTIVE, FROZEN, OCC, VIR, FROZEN_OCC, ACTIVE_OCC, ACTIVE_VIR, FROZEN_VIR}; Which subspace of orbitals should be returned?. Returns; Information on subset alpha orbitals. Return type; OrbitalSpace. aotoso(self: psi4.core.Wavefunction) → psi4.core.Matrix¶; Returns the Atomic Orbital to Symmetry Orbital transformer. array_variable(self: psi4.core.Wavefunction, arg0: str) → psi4.core.Matrix¶; Returns copy of the requested (case-insensitive) Matrix QC variable. array_variables(self: psi4.core.Wavefunction) → Dict[str, psi4.core.Matrix]¶; Returns the dictionary of all Matrix QC variables. arrays()¶. Deprecated since version 1.4: Use psi4.core.Wavefunction.variables() instead. atomic_point_charges(self: psi4.core.Wavefunction) → psi4.core.Vector¶; Returns the set atomic point charges. basis_projection(self: psi4.core.Wavefunction, arg0: psi4.core.Matrix, arg1: psi4.core.Dimension, arg2: psi4.core.BasisSet, arg3: psi4.core.BasisSet) → psi4.core.Matrix¶; Projects a orbital matrix from one basis to another. basisset(self: psi4.core.Wavefunction) → psi4.core.BasisSet¶; Returns the current orbital basis. beta_orbital_space(self: psi4.core.Wavefunction, arg0: str, arg1: str, arg2: str) → psi4.core.OrbitalSpace¶; docstring. static build(mol, basis=None)¶. c1_deep_copy(self: psi4.core.CUHF, basis: psi4.core.BasisSet) → psi4.core.CUHF¶; Returns a new wavefunction with internal data converted to C_1 symmetry, using pre-c1-constructed BasisSet basis. check_phases(self: psi4.core.HF) → None¶; docstring. clear_external_cpscf_perturbations(self: psi4.core.HF) → None¶; Clear private external_cpscf_perturbations map. clear_external_potentials(self: psi4.core.HF) → None¶; Clear private external_potentials list. compute_E(self: psi4.core.HF) → float¶; docstrin",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/api/psi4.core.cuhf.html:16385,charge,charges,16385,psi4manual/1.4.0/api/psi4.core.cuhf.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/api/psi4.core.cuhf.html,2,['charge'],['charges']
Energy Efficiency," Creates OrbitalSpace with information about the requested alpha orbital space. Parameters. id – Unique name for the orbital space.; basis – {‘SO’, ‘AO’}; Should the subspace be of symmetry orbitals or atomic orbitals?; subset – {ALL, ACTIVE, FROZEN, OCC, VIR, FROZEN_OCC, ACTIVE_OCC, ACTIVE_VIR, FROZEN_VIR}; Which subspace of orbitals should be returned?. Returns; Information on subset alpha orbitals. Return type; OrbitalSpace. aotoso(self: psi4.core.Wavefunction) → psi4.core.Matrix¶; Returns the Atomic Orbital to Symmetry Orbital transformer. array_variable(self: psi4.core.Wavefunction, arg0: str) → psi4.core.Matrix¶; Returns copy of the requested (case-insensitive) Matrix QC variable. array_variables(self: psi4.core.Wavefunction) → Dict[str, psi4.core.Matrix]¶; Returns the dictionary of all Matrix QC variables. arrays()¶. Deprecated since version 1.4: Use psi4.core.Wavefunction.variables() instead. atomic_point_charges(self: psi4.core.Wavefunction) → psi4.core.Vector¶; Returns the set atomic point charges. basis_projection(self: psi4.core.Wavefunction, arg0: psi4.core.Matrix, arg1: psi4.core.Dimension, arg2: psi4.core.BasisSet, arg3: psi4.core.BasisSet) → psi4.core.Matrix¶; Projects a orbital matrix from one basis to another. basisset(self: psi4.core.Wavefunction) → psi4.core.BasisSet¶; Returns the current orbital basis. beta_orbital_space(self: psi4.core.Wavefunction, arg0: str, arg1: str, arg2: str) → psi4.core.OrbitalSpace¶; docstring. static build(mol, basis=None)¶. c1_deep_copy(self: psi4.core.RHF, basis: psi4.core.BasisSet) → psi4.core.RHF¶; Returns a new wavefunction with internal data converted to C_1 symmetry, using pre-c1-constructed BasisSet basis. check_phases(self: psi4.core.HF) → None¶; docstring. clear_external_cpscf_perturbations(self: psi4.core.HF) → None¶; Clear private external_cpscf_perturbations map. clear_external_potentials(self: psi4.core.HF) → None¶; Clear private external_potentials list. compute_E(self: psi4.core.HF) → float¶; docstring.",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/api/psi4.core.rhf.html:16381,charge,charges,16381,psi4manual/1.4.0/api/psi4.core.rhf.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/api/psi4.core.rhf.html,2,['charge'],['charges']
Energy Efficiency," Creates OrbitalSpace with information about the requested alpha orbital space. Parameters. id – Unique name for the orbital space.; basis – {‘SO’, ‘AO’}; Should the subspace be of symmetry orbitals or atomic orbitals?; subset – {ALL, ACTIVE, FROZEN, OCC, VIR, FROZEN_OCC, ACTIVE_OCC, ACTIVE_VIR, FROZEN_VIR}; Which subspace of orbitals should be returned?. Returns; Information on subset alpha orbitals. Return type; OrbitalSpace. aotoso(self: psi4.core.Wavefunction) → psi4.core.Matrix¶; Returns the Atomic Orbital to Symmetry Orbital transformer. array_variable(self: psi4.core.Wavefunction, arg0: str) → psi4.core.Matrix¶; Returns copy of the requested (case-insensitive) Matrix QC variable. array_variables(self: psi4.core.Wavefunction) → Dict[str, psi4.core.Matrix]¶; Returns the dictionary of all Matrix QC variables. arrays()¶. Deprecated since version 1.4: Use psi4.core.Wavefunction.variables() instead. atomic_point_charges(self: psi4.core.Wavefunction) → psi4.core.Vector¶; Returns the set atomic point charges. basis_projection(self: psi4.core.Wavefunction, arg0: psi4.core.Matrix, arg1: psi4.core.Dimension, arg2: psi4.core.BasisSet, arg3: psi4.core.BasisSet) → psi4.core.Matrix¶; Projects a orbital matrix from one basis to another. basisset(self: psi4.core.Wavefunction) → psi4.core.BasisSet¶; Returns the current orbital basis. beta_orbital_space(self: psi4.core.Wavefunction, arg0: str, arg1: str, arg2: str) → psi4.core.OrbitalSpace¶; docstring. static build(mol, basis=None)¶. c1_deep_copy(self: psi4.core.ROHF, basis: psi4.core.BasisSet) → psi4.core.ROHF¶; Returns a new wavefunction with internal data converted to C_1 symmetry, using pre-c1-constructed BasisSet basis. check_phases(self: psi4.core.HF) → None¶; docstring. clear_external_cpscf_perturbations(self: psi4.core.HF) → None¶; Clear private external_cpscf_perturbations map. clear_external_potentials(self: psi4.core.HF) → None¶; Clear private external_potentials list. compute_E(self: psi4.core.HF) → float¶; docstrin",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/api/psi4.core.rohf.html:16456,charge,charges,16456,psi4manual/1.4.0/api/psi4.core.rohf.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/api/psi4.core.rohf.html,2,['charge'],['charges']
Energy Efficiency," Creates OrbitalSpace with information about the requested alpha orbital space. Parameters. id – Unique name for the orbital space.; basis – {‘SO’, ‘AO’}; Should the subspace be of symmetry orbitals or atomic orbitals?; subset – {ALL, ACTIVE, FROZEN, OCC, VIR, FROZEN_OCC, ACTIVE_OCC, ACTIVE_VIR, FROZEN_VIR}; Which subspace of orbitals should be returned?. Returns; Information on subset alpha orbitals. Return type; OrbitalSpace. aotoso(self: psi4.core.Wavefunction) → psi4.core.Matrix¶; Returns the Atomic Orbital to Symmetry Orbital transformer. array_variable(self: psi4.core.Wavefunction, arg0: str) → psi4.core.Matrix¶; Returns copy of the requested (case-insensitive) Matrix QC variable. array_variables(self: psi4.core.Wavefunction) → Dict[str, psi4.core.Matrix]¶; Returns the dictionary of all Matrix QC variables. arrays()¶. Deprecated since version 1.4: Use psi4.core.Wavefunction.variables() instead. atomic_point_charges(self: psi4.core.Wavefunction) → psi4.core.Vector¶; Returns the set atomic point charges. basis_projection(self: psi4.core.Wavefunction, arg0: psi4.core.Matrix, arg1: psi4.core.Dimension, arg2: psi4.core.BasisSet, arg3: psi4.core.BasisSet) → psi4.core.Matrix¶; Projects a orbital matrix from one basis to another. basisset(self: psi4.core.Wavefunction) → psi4.core.BasisSet¶; Returns the current orbital basis. beta_orbital_space(self: psi4.core.Wavefunction, arg0: str, arg1: str, arg2: str) → psi4.core.OrbitalSpace¶; docstring. static build(mol, basis=None)¶. c1_deep_copy(self: psi4.core.UHF, basis: psi4.core.BasisSet) → psi4.core.UHF¶; Returns a new wavefunction with internal data converted to C_1 symmetry, using pre-c1-constructed BasisSet basis. check_phases(self: psi4.core.HF) → None¶; docstring. clear_external_cpscf_perturbations(self: psi4.core.HF) → None¶; Clear private external_cpscf_perturbations map. clear_external_potentials(self: psi4.core.HF) → None¶; Clear private external_potentials list. compute_E(self: psi4.core.HF) → float¶; docstring.",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/api/psi4.core.uhf.html:16381,charge,charges,16381,psi4manual/1.4.0/api/psi4.core.uhf.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/api/psi4.core.uhf.html,2,['charge'],['charges']
Energy Efficiency," Creates OrbitalSpace with information about the requested alpha orbital space. Parameters. id – Unique name for the orbital space.; basis – {‘SO’, ‘AO’}; Should the subspace be of symmetry orbitals or atomic orbitals?; subset – {ALL, ACTIVE, FROZEN, OCC, VIR, FROZEN_OCC, ACTIVE_OCC, ACTIVE_VIR, FROZEN_VIR}; Which subspace of orbitals should be returned?. Returns; Information on subset alpha orbitals. Return type; OrbitalSpace. aotoso(self: psi4.core.Wavefunction) → psi4.core.Matrix¶; Returns the Atomic Orbital to Symmetry Orbital transformer. array_variable(self: psi4.core.Wavefunction, arg0: str) → psi4.core.Matrix¶; Returns copy of the requested (case-insensitive) Matrix QC variable. array_variables(self: psi4.core.Wavefunction) → Dict[str, psi4.core.Matrix]¶; Returns the dictionary of all Matrix QC variables. arrays()¶. Deprecated since version 1.4: Use psi4.core.Wavefunction.variables() instead. atomic_point_charges(self: psi4.core.Wavefunction) → psi4.core.Vector¶; Returns the set atomic point charges. basis_projection(self: psi4.core.Wavefunction, arg0: psi4.core.Matrix, arg1: psi4.core.Dimension, arg2: psi4.core.BasisSet, arg3: psi4.core.BasisSet) → psi4.core.Matrix¶; Projects a orbital matrix from one basis to another. basisset(self: psi4.core.Wavefunction) → psi4.core.BasisSet¶; Returns the current orbital basis. beta_orbital_space(self: psi4.core.Wavefunction, arg0: str, arg1: str, arg2: str) → psi4.core.OrbitalSpace¶; docstring. static build(mol, basis=None)¶. c1_deep_copy(self: psi4.core.Wavefunction, basis: psi4.core.BasisSet) → psi4.core.Wavefunction¶; Returns a new wavefunction with internal data converted to \(C_1\) symmetry, using pre-c1-constructed basis. check_phases(self: psi4.core.HF) → None¶; docstring. clear_external_cpscf_perturbations(self: psi4.core.HF) → None¶; Clear private external_cpscf_perturbations map. clear_external_potentials(self: psi4.core.HF) → None¶; Clear private external_potentials list. compute_E(self: psi4.core.HF) → float",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/api/psi4.core.hf.html:16398,charge,charges,16398,psi4manual/1.4.0/api/psi4.core.hf.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/api/psi4.core.hf.html,2,['charge'],['charges']
Energy Efficiency," Creates OrbitalSpace with information about the requested alpha orbital space. Parameters. id – Unique name for the orbital space.; basis – {‘SO’, ‘AO’}; Should the subspace be of symmetry orbitals or atomic orbitals?; subset – {ALL, ACTIVE, FROZEN, OCC, VIR, FROZEN_OCC, ACTIVE_OCC, ACTIVE_VIR, FROZEN_VIR}; Which subspace of orbitals should be returned?. Returns; Information on subset alpha orbitals. Return type; OrbitalSpace. aotoso(self: psi4.core.Wavefunction) → psi4.core.Matrix¶; Returns the Atomic Orbital to Symmetry Orbital transformer. array_variable(self: psi4.core.Wavefunction, arg0: str) → psi4.core.Matrix¶; Returns copy of the requested (case-insensitive) Matrix QC variable. array_variables(self: psi4.core.Wavefunction) → Dict[str, psi4.core.Matrix]¶; Returns the dictionary of all Matrix QC variables. arrays()¶. Deprecated since version 1.4: Use psi4.core.Wavefunction.variables() instead. atomic_point_charges(self: psi4.core.Wavefunction) → psi4.core.Vector¶; Returns the set atomic point charges. basis_projection(self: psi4.core.Wavefunction, arg0: psi4.core.Matrix, arg1: psi4.core.Dimension, arg2: psi4.core.BasisSet, arg3: psi4.core.BasisSet) → psi4.core.Matrix¶; Projects a orbital matrix from one basis to another. basisset(self: psi4.core.Wavefunction) → psi4.core.BasisSet¶; Returns the current orbital basis. beta_orbital_space(self: psi4.core.Wavefunction, arg0: str, arg1: str, arg2: str) → psi4.core.OrbitalSpace¶; docstring. static build(mol, basis=None)¶. c1_deep_copy(self: psi4.core.Wavefunction, basis: psi4.core.BasisSet) → psi4.core.Wavefunction¶; Returns a new wavefunction with internal data converted to \(C_1\) symmetry, using pre-c1-constructed basis. ci_nat_orbs(self: psi4.core.CIWavefunction) → None¶; docstring. cleanup_ci(self: psi4.core.CIWavefunction) → None¶; docstring. cleanup_dpd(self: psi4.core.CIWavefunction) → None¶; docstring. compute_energy(self: psi4.core.Wavefunction) → float¶; Computes the energy of the Wavefunction. compute_gr",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/api/psi4.core.ciwavefunction.html:13187,charge,charges,13187,psi4manual/1.4.0/api/psi4.core.ciwavefunction.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/api/psi4.core.ciwavefunction.html,2,['charge'],['charges']
Energy Efficiency," Creates OrbitalSpace with information about the requested alpha orbital space. Parameters. id – Unique name for the orbital space.; basis – {‘SO’, ‘AO’}; Should the subspace be of symmetry orbitals or atomic orbitals?; subset – {ALL, ACTIVE, FROZEN, OCC, VIR, FROZEN_OCC, ACTIVE_OCC, ACTIVE_VIR, FROZEN_VIR}; Which subspace of orbitals should be returned?. Returns; Information on subset alpha orbitals. Return type; OrbitalSpace. aotoso(self: psi4.core.Wavefunction) → psi4.core.Matrix¶; Returns the Atomic Orbital to Symmetry Orbital transformer. array_variable(self: psi4.core.Wavefunction, arg0: str) → psi4.core.Matrix¶; Returns copy of the requested (case-insensitive) Matrix QC variable. array_variables(self: psi4.core.Wavefunction) → Dict[str, psi4.core.Matrix]¶; Returns the dictionary of all Matrix QC variables. arrays()¶. Deprecated since version 1.4: Use psi4.core.Wavefunction.variables() instead. atomic_point_charges(self: psi4.core.Wavefunction) → psi4.core.Vector¶; Returns the set atomic point charges. basis_projection(self: psi4.core.Wavefunction, arg0: psi4.core.Matrix, arg1: psi4.core.Dimension, arg2: psi4.core.BasisSet, arg3: psi4.core.BasisSet) → psi4.core.Matrix¶; Projects a orbital matrix from one basis to another. basisset(self: psi4.core.Wavefunction) → psi4.core.BasisSet¶; Returns the current orbital basis. beta_orbital_space(self: psi4.core.Wavefunction, arg0: str, arg1: str, arg2: str) → psi4.core.OrbitalSpace¶; docstring. static build(mol, basis=None)¶. c1_deep_copy(self: psi4.core.Wavefunction, basis: psi4.core.BasisSet) → psi4.core.Wavefunction¶; Returns a new wavefunction with internal data converted to \(C_1\) symmetry, using pre-c1-constructed basis. compute(self: psi4.core.DFEP2Wavefunction, arg0: List[List[int]]) → List[List[Tuple[float, float]]]¶; Computes the density-fitted EP2 energy for the input orbitals. compute_energy(self: psi4.core.Wavefunction) → float¶; Computes the energy of the Wavefunction. compute_gradient(self: psi4.core.Wav",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/api/psi4.core.dfep2wavefunction.html:11820,charge,charges,11820,psi4manual/1.4.0/api/psi4.core.dfep2wavefunction.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/api/psi4.core.dfep2wavefunction.html,2,['charge'],['charges']
Energy Efficiency," Creates OrbitalSpace with information about the requested alpha orbital space. Parameters. id – Unique name for the orbital space.; basis – {‘SO’, ‘AO’}; Should the subspace be of symmetry orbitals or atomic orbitals?; subset – {ALL, ACTIVE, FROZEN, OCC, VIR, FROZEN_OCC, ACTIVE_OCC, ACTIVE_VIR, FROZEN_VIR}; Which subspace of orbitals should be returned?. Returns; Information on subset alpha orbitals. Return type; OrbitalSpace. aotoso(self: psi4.core.Wavefunction) → psi4.core.Matrix¶; Returns the Atomic Orbital to Symmetry Orbital transformer. array_variable(self: psi4.core.Wavefunction, arg0: str) → psi4.core.Matrix¶; Returns copy of the requested (case-insensitive) Matrix QC variable. array_variables(self: psi4.core.Wavefunction) → Dict[str, psi4.core.Matrix]¶; Returns the dictionary of all Matrix QC variables. arrays()¶. Deprecated since version 1.4: Use psi4.core.Wavefunction.variables() instead. atomic_point_charges(self: psi4.core.Wavefunction) → psi4.core.Vector¶; Returns the set atomic point charges. basis_projection(self: psi4.core.Wavefunction, arg0: psi4.core.Matrix, arg1: psi4.core.Dimension, arg2: psi4.core.BasisSet, arg3: psi4.core.BasisSet) → psi4.core.Matrix¶; Projects a orbital matrix from one basis to another. basisset(self: psi4.core.Wavefunction) → psi4.core.BasisSet¶; Returns the current orbital basis. beta_orbital_space(self: psi4.core.Wavefunction, arg0: str, arg1: str, arg2: str) → psi4.core.OrbitalSpace¶; docstring. static build(mol, basis=None)¶. c1_deep_copy(self: psi4.core.Wavefunction, basis: psi4.core.BasisSet) → psi4.core.Wavefunction¶; Returns a new wavefunction with internal data converted to \(C_1\) symmetry, using pre-c1-constructed basis. compute_energy(self: psi4.core.Wavefunction) → float¶; Computes the energy of the Wavefunction. compute_gradient(self: psi4.core.Wavefunction) → psi4.core.Matrix¶; Computes the gradient of the Wavefunction. compute_hessian(self: psi4.core.Wavefunction) → psi4.core.Matrix¶; Computes the Hessian of",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/api/psi4.core.ccwavefunction.html:11798,charge,charges,11798,psi4manual/1.4.0/api/psi4.core.ccwavefunction.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/api/psi4.core.ccwavefunction.html,4,['charge'],['charges']
Energy Efficiency," Creates OrbitalSpace with information about the requested alpha orbital space. Parameters. id – Unique name for the orbital space.; basis – {‘SO’, ‘AO’}; Should the subspace be of symmetry orbitals or atomic orbitals?; subset – {ALL, ACTIVE, FROZEN, OCC, VIR, FROZEN_OCC, ACTIVE_OCC, ACTIVE_VIR, FROZEN_VIR}; Which subspace of orbitals should be returned?. Returns; Information on subset alpha orbitals. Return type; OrbitalSpace. aotoso(self: psi4.core.Wavefunction) → psi4.core.Matrix¶; Returns the Atomic Orbital to Symmetry Orbital transformer. array_variable(self: psi4.core.Wavefunction, arg0: str) → psi4.core.Matrix¶; Returns copy of the requested (case-insensitive) Matrix QC variable. array_variables(self: psi4.core.Wavefunction) → Dict[str, psi4.core.Matrix]¶; Returns the dictionary of all Matrix QC variables. arrays()¶. Deprecated since version 1.4: Use psi4.core.Wavefunction.variables() instead. atomic_point_charges(self: psi4.core.Wavefunction) → psi4.core.Vector¶; Returns the set atomic point charges. basis_projection(self: psi4.core.Wavefunction, arg0: psi4.core.Matrix, arg1: psi4.core.Dimension, arg2: psi4.core.BasisSet, arg3: psi4.core.BasisSet) → psi4.core.Matrix¶; Projects a orbital matrix from one basis to another. basisset(self: psi4.core.Wavefunction) → psi4.core.BasisSet¶; Returns the current orbital basis. beta_orbital_space(self: psi4.core.Wavefunction, arg0: str, arg1: str, arg2: str) → psi4.core.OrbitalSpace¶; docstring. static build(mol, basis=None, *, quiet=False)¶. Parameters; quiet (bool) – . c1_deep_copy(self: psi4.core.CUHF, basis: psi4.core.BasisSet) → psi4.core.CUHF¶; Returns a new wavefunction with internal data converted to C_1 symmetry, using pre-c1-constructed BasisSet basis. check_phases(self: psi4.core.HF) → None¶; docstring. clear_external_cpscf_perturbations(self: psi4.core.HF) → None¶; Clear private external_cpscf_perturbations map. clear_external_potentials(self: psi4.core.HF) → None¶; Clear private external_potentials list. com",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/api/psi4.core.CUHF.html:16932,charge,charges,16932,psi4manual/1.6.x/api/psi4.core.CUHF.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/api/psi4.core.CUHF.html,1,['charge'],['charges']
Energy Efficiency," Creates OrbitalSpace with information about the requested alpha orbital space. Parameters. id – Unique name for the orbital space.; basis – {‘SO’, ‘AO’}; Should the subspace be of symmetry orbitals or atomic orbitals?; subset – {ALL, ACTIVE, FROZEN, OCC, VIR, FROZEN_OCC, ACTIVE_OCC, ACTIVE_VIR, FROZEN_VIR}; Which subspace of orbitals should be returned?. Returns; Information on subset alpha orbitals. Return type; OrbitalSpace. aotoso(self: psi4.core.Wavefunction) → psi4.core.Matrix¶; Returns the Atomic Orbital to Symmetry Orbital transformer. array_variable(self: psi4.core.Wavefunction, arg0: str) → psi4.core.Matrix¶; Returns copy of the requested (case-insensitive) Matrix QC variable. array_variables(self: psi4.core.Wavefunction) → Dict[str, psi4.core.Matrix]¶; Returns the dictionary of all Matrix QC variables. arrays()¶. Deprecated since version 1.4: Use psi4.core.Wavefunction.variables() instead. atomic_point_charges(self: psi4.core.Wavefunction) → psi4.core.Vector¶; Returns the set atomic point charges. basis_projection(self: psi4.core.Wavefunction, arg0: psi4.core.Matrix, arg1: psi4.core.Dimension, arg2: psi4.core.BasisSet, arg3: psi4.core.BasisSet) → psi4.core.Matrix¶; Projects a orbital matrix from one basis to another. basisset(self: psi4.core.Wavefunction) → psi4.core.BasisSet¶; Returns the current orbital basis. beta_orbital_space(self: psi4.core.Wavefunction, arg0: str, arg1: str, arg2: str) → psi4.core.OrbitalSpace¶; docstring. static build(mol, basis=None, *, quiet=False)¶. Parameters; quiet (bool) – . c1_deep_copy(self: psi4.core.RHF, basis: psi4.core.BasisSet) → psi4.core.RHF¶; Returns a new wavefunction with internal data converted to C_1 symmetry, using pre-c1-constructed BasisSet basis. check_phases(self: psi4.core.HF) → None¶; docstring. clear_external_cpscf_perturbations(self: psi4.core.HF) → None¶; Clear private external_cpscf_perturbations map. clear_external_potentials(self: psi4.core.HF) → None¶; Clear private external_potentials list. compu",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/api/psi4.core.RHF.html:16928,charge,charges,16928,psi4manual/1.6.x/api/psi4.core.RHF.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/api/psi4.core.RHF.html,1,['charge'],['charges']
Energy Efficiency," Creates OrbitalSpace with information about the requested alpha orbital space. Parameters. id – Unique name for the orbital space.; basis – {‘SO’, ‘AO’}; Should the subspace be of symmetry orbitals or atomic orbitals?; subset – {ALL, ACTIVE, FROZEN, OCC, VIR, FROZEN_OCC, ACTIVE_OCC, ACTIVE_VIR, FROZEN_VIR}; Which subspace of orbitals should be returned?. Returns; Information on subset alpha orbitals. Return type; OrbitalSpace. aotoso(self: psi4.core.Wavefunction) → psi4.core.Matrix¶; Returns the Atomic Orbital to Symmetry Orbital transformer. array_variable(self: psi4.core.Wavefunction, arg0: str) → psi4.core.Matrix¶; Returns copy of the requested (case-insensitive) Matrix QC variable. array_variables(self: psi4.core.Wavefunction) → Dict[str, psi4.core.Matrix]¶; Returns the dictionary of all Matrix QC variables. arrays()¶. Deprecated since version 1.4: Use psi4.core.Wavefunction.variables() instead. atomic_point_charges(self: psi4.core.Wavefunction) → psi4.core.Vector¶; Returns the set atomic point charges. basis_projection(self: psi4.core.Wavefunction, arg0: psi4.core.Matrix, arg1: psi4.core.Dimension, arg2: psi4.core.BasisSet, arg3: psi4.core.BasisSet) → psi4.core.Matrix¶; Projects a orbital matrix from one basis to another. basisset(self: psi4.core.Wavefunction) → psi4.core.BasisSet¶; Returns the current orbital basis. beta_orbital_space(self: psi4.core.Wavefunction, arg0: str, arg1: str, arg2: str) → psi4.core.OrbitalSpace¶; docstring. static build(mol, basis=None, *, quiet=False)¶. Parameters; quiet (bool) – . c1_deep_copy(self: psi4.core.ROHF, basis: psi4.core.BasisSet) → psi4.core.ROHF¶; Returns a new wavefunction with internal data converted to C_1 symmetry, using pre-c1-constructed BasisSet basis. check_phases(self: psi4.core.HF) → None¶; docstring. clear_external_cpscf_perturbations(self: psi4.core.HF) → None¶; Clear private external_cpscf_perturbations map. clear_external_potentials(self: psi4.core.HF) → None¶; Clear private external_potentials list. com",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/api/psi4.core.ROHF.html:17299,charge,charges,17299,psi4manual/1.6.x/api/psi4.core.ROHF.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/api/psi4.core.ROHF.html,1,['charge'],['charges']
Energy Efficiency," Creates OrbitalSpace with information about the requested alpha orbital space. Parameters. id – Unique name for the orbital space.; basis – {‘SO’, ‘AO’}; Should the subspace be of symmetry orbitals or atomic orbitals?; subset – {ALL, ACTIVE, FROZEN, OCC, VIR, FROZEN_OCC, ACTIVE_OCC, ACTIVE_VIR, FROZEN_VIR}; Which subspace of orbitals should be returned?. Returns; Information on subset alpha orbitals. Return type; OrbitalSpace. aotoso(self: psi4.core.Wavefunction) → psi4.core.Matrix¶; Returns the Atomic Orbital to Symmetry Orbital transformer. array_variable(self: psi4.core.Wavefunction, arg0: str) → psi4.core.Matrix¶; Returns copy of the requested (case-insensitive) Matrix QC variable. array_variables(self: psi4.core.Wavefunction) → Dict[str, psi4.core.Matrix]¶; Returns the dictionary of all Matrix QC variables. arrays()¶. Deprecated since version 1.4: Use psi4.core.Wavefunction.variables() instead. atomic_point_charges(self: psi4.core.Wavefunction) → psi4.core.Vector¶; Returns the set atomic point charges. basis_projection(self: psi4.core.Wavefunction, arg0: psi4.core.Matrix, arg1: psi4.core.Dimension, arg2: psi4.core.BasisSet, arg3: psi4.core.BasisSet) → psi4.core.Matrix¶; Projects a orbital matrix from one basis to another. basisset(self: psi4.core.Wavefunction) → psi4.core.BasisSet¶; Returns the current orbital basis. beta_orbital_space(self: psi4.core.Wavefunction, arg0: str, arg1: str, arg2: str) → psi4.core.OrbitalSpace¶; docstring. static build(mol, basis=None, *, quiet=False)¶. Parameters; quiet (bool) – . c1_deep_copy(self: psi4.core.UHF, basis: psi4.core.BasisSet) → psi4.core.UHF¶; Returns a new wavefunction with internal data converted to C_1 symmetry, using pre-c1-constructed BasisSet basis. check_phases(self: psi4.core.HF) → None¶; docstring. clear_external_cpscf_perturbations(self: psi4.core.HF) → None¶; Clear private external_cpscf_perturbations map. clear_external_potentials(self: psi4.core.HF) → None¶; Clear private external_potentials list. compu",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/api/psi4.core.UHF.html:16928,charge,charges,16928,psi4manual/1.6.x/api/psi4.core.UHF.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/api/psi4.core.UHF.html,1,['charge'],['charges']
Energy Efficiency," Creates OrbitalSpace with information about the requested alpha orbital space. Parameters. id – Unique name for the orbital space.; basis – {‘SO’, ‘AO’}; Should the subspace be of symmetry orbitals or atomic orbitals?; subset – {ALL, ACTIVE, FROZEN, OCC, VIR, FROZEN_OCC, ACTIVE_OCC, ACTIVE_VIR, FROZEN_VIR}; Which subspace of orbitals should be returned?. Returns; Information on subset alpha orbitals. Return type; OrbitalSpace. aotoso(self: psi4.core.Wavefunction) → psi4.core.Matrix¶; Returns the Atomic Orbital to Symmetry Orbital transformer. array_variable(self: psi4.core.Wavefunction, arg0: str) → psi4.core.Matrix¶; Returns copy of the requested (case-insensitive) Matrix QC variable. array_variables(self: psi4.core.Wavefunction) → Dict[str, psi4.core.Matrix]¶; Returns the dictionary of all Matrix QC variables. arrays()¶. Deprecated since version 1.4: Use psi4.core.Wavefunction.variables() instead. atomic_point_charges(self: psi4.core.Wavefunction) → psi4.core.Vector¶; Returns the set atomic point charges. basis_projection(self: psi4.core.Wavefunction, arg0: psi4.core.Matrix, arg1: psi4.core.Dimension, arg2: psi4.core.BasisSet, arg3: psi4.core.BasisSet) → psi4.core.Matrix¶; Projects a orbital matrix from one basis to another. basisset(self: psi4.core.Wavefunction) → psi4.core.BasisSet¶; Returns the current orbital basis. beta_orbital_space(self: psi4.core.Wavefunction, arg0: str, arg1: str, arg2: str) → psi4.core.OrbitalSpace¶; docstring. static build(mol, basis=None, *, quiet=False)¶. Parameters; quiet (bool) – . c1_deep_copy(self: psi4.core.Wavefunction, basis: psi4.core.BasisSet) → psi4.core.Wavefunction¶; Returns a new wavefunction with internal data converted to \(C_1\) symmetry, using pre-c1-constructed basis. check_phases(self: psi4.core.HF) → None¶; docstring. clear_external_cpscf_perturbations(self: psi4.core.HF) → None¶; Clear private external_cpscf_perturbations map. clear_external_potentials(self: psi4.core.HF) → None¶; Clear private external_potential",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/api/psi4.core.HF.html:16947,charge,charges,16947,psi4manual/1.6.x/api/psi4.core.HF.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/api/psi4.core.HF.html,1,['charge'],['charges']
Energy Efficiency," Creates OrbitalSpace with information about the requested alpha orbital space. Parameters. id – Unique name for the orbital space.; basis – {‘SO’, ‘AO’}; Should the subspace be of symmetry orbitals or atomic orbitals?; subset – {ALL, ACTIVE, FROZEN, OCC, VIR, FROZEN_OCC, ACTIVE_OCC, ACTIVE_VIR, FROZEN_VIR}; Which subspace of orbitals should be returned?. Returns; Information on subset alpha orbitals. Return type; OrbitalSpace. aotoso(self: psi4.core.Wavefunction) → psi4.core.Matrix¶; Returns the Atomic Orbital to Symmetry Orbital transformer. array_variable(self: psi4.core.Wavefunction, arg0: str) → psi4.core.Matrix¶; Returns copy of the requested (case-insensitive) Matrix QC variable. array_variables(self: psi4.core.Wavefunction) → Dict[str, psi4.core.Matrix]¶; Returns the dictionary of all Matrix QC variables. arrays()¶. Deprecated since version 1.4: Use psi4.core.Wavefunction.variables() instead. atomic_point_charges(self: psi4.core.Wavefunction) → psi4.core.Vector¶; Returns the set atomic point charges. basis_projection(self: psi4.core.Wavefunction, arg0: psi4.core.Matrix, arg1: psi4.core.Dimension, arg2: psi4.core.BasisSet, arg3: psi4.core.BasisSet) → psi4.core.Matrix¶; Projects a orbital matrix from one basis to another. basisset(self: psi4.core.Wavefunction) → psi4.core.BasisSet¶; Returns the current orbital basis. beta_orbital_space(self: psi4.core.Wavefunction, arg0: str, arg1: str, arg2: str) → psi4.core.OrbitalSpace¶; docstring. static build(mol, basis=None, *, quiet=False)¶. Parameters; quiet (bool) – . c1_deep_copy(self: psi4.core.Wavefunction, basis: psi4.core.BasisSet) → psi4.core.Wavefunction¶; Returns a new wavefunction with internal data converted to \(C_1\) symmetry, using pre-c1-constructed basis. ci_nat_orbs(self: psi4.core.CIWavefunction) → None¶; docstring. cleanup_ci(self: psi4.core.CIWavefunction) → None¶; docstring. cleanup_dpd(self: psi4.core.CIWavefunction) → None¶; docstring. compute_energy(self: psi4.core.Wavefunction) → float¶; Comput",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/api/psi4.core.CIWavefunction.html:13345,charge,charges,13345,psi4manual/1.6.x/api/psi4.core.CIWavefunction.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/api/psi4.core.CIWavefunction.html,1,['charge'],['charges']
Energy Efficiency," Creates OrbitalSpace with information about the requested alpha orbital space. Parameters. id – Unique name for the orbital space.; basis – {‘SO’, ‘AO’}; Should the subspace be of symmetry orbitals or atomic orbitals?; subset – {ALL, ACTIVE, FROZEN, OCC, VIR, FROZEN_OCC, ACTIVE_OCC, ACTIVE_VIR, FROZEN_VIR}; Which subspace of orbitals should be returned?. Returns; Information on subset alpha orbitals. Return type; OrbitalSpace. aotoso(self: psi4.core.Wavefunction) → psi4.core.Matrix¶; Returns the Atomic Orbital to Symmetry Orbital transformer. array_variable(self: psi4.core.Wavefunction, arg0: str) → psi4.core.Matrix¶; Returns copy of the requested (case-insensitive) Matrix QC variable. array_variables(self: psi4.core.Wavefunction) → Dict[str, psi4.core.Matrix]¶; Returns the dictionary of all Matrix QC variables. arrays()¶. Deprecated since version 1.4: Use psi4.core.Wavefunction.variables() instead. atomic_point_charges(self: psi4.core.Wavefunction) → psi4.core.Vector¶; Returns the set atomic point charges. basis_projection(self: psi4.core.Wavefunction, arg0: psi4.core.Matrix, arg1: psi4.core.Dimension, arg2: psi4.core.BasisSet, arg3: psi4.core.BasisSet) → psi4.core.Matrix¶; Projects a orbital matrix from one basis to another. basisset(self: psi4.core.Wavefunction) → psi4.core.BasisSet¶; Returns the current orbital basis. beta_orbital_space(self: psi4.core.Wavefunction, arg0: str, arg1: str, arg2: str) → psi4.core.OrbitalSpace¶; docstring. static build(mol, basis=None, *, quiet=False)¶. Parameters; quiet (bool) – . c1_deep_copy(self: psi4.core.Wavefunction, basis: psi4.core.BasisSet) → psi4.core.Wavefunction¶; Returns a new wavefunction with internal data converted to \(C_1\) symmetry, using pre-c1-constructed basis. compute(self: psi4.core.DFEP2Wavefunction, arg0: List[List[int]]) → List[List[Tuple[float, float]]]¶; Computes the density-fitted EP2 energy for the input orbitals. compute_energy(self: psi4.core.Wavefunction) → float¶; Computes the energy of the Wavef",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/api/psi4.core.DFEP2Wavefunction.html:11941,charge,charges,11941,psi4manual/1.6.x/api/psi4.core.DFEP2Wavefunction.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/api/psi4.core.DFEP2Wavefunction.html,1,['charge'],['charges']
Energy Efficiency," Creates OrbitalSpace with information about the requested alpha orbital space. Parameters. id – Unique name for the orbital space.; basis – {‘SO’, ‘AO’}; Should the subspace be of symmetry orbitals or atomic orbitals?; subset – {ALL, ACTIVE, FROZEN, OCC, VIR, FROZEN_OCC, ACTIVE_OCC, ACTIVE_VIR, FROZEN_VIR}; Which subspace of orbitals should be returned?. Returns; Information on subset alpha orbitals. Return type; OrbitalSpace. aotoso(self: psi4.core.Wavefunction) → psi4.core.Matrix¶; Returns the Atomic Orbital to Symmetry Orbital transformer. array_variable(self: psi4.core.Wavefunction, arg0: str) → psi4.core.Matrix¶; Returns copy of the requested (case-insensitive) Matrix QC variable. array_variables(self: psi4.core.Wavefunction) → Dict[str, psi4.core.Matrix]¶; Returns the dictionary of all Matrix QC variables. arrays()¶. Deprecated since version 1.4: Use psi4.core.Wavefunction.variables() instead. atomic_point_charges(self: psi4.core.Wavefunction) → psi4.core.Vector¶; Returns the set atomic point charges. basis_projection(self: psi4.core.Wavefunction, arg0: psi4.core.Matrix, arg1: psi4.core.Dimension, arg2: psi4.core.BasisSet, arg3: psi4.core.BasisSet) → psi4.core.Matrix¶; Projects a orbital matrix from one basis to another. basisset(self: psi4.core.Wavefunction) → psi4.core.BasisSet¶; Returns the current orbital basis. beta_orbital_space(self: psi4.core.Wavefunction, arg0: str, arg1: str, arg2: str) → psi4.core.OrbitalSpace¶; docstring. static build(mol, basis=None, *, quiet=False)¶. Parameters; quiet (bool) – . c1_deep_copy(self: psi4.core.Wavefunction, basis: psi4.core.BasisSet) → psi4.core.Wavefunction¶; Returns a new wavefunction with internal data converted to \(C_1\) symmetry, using pre-c1-constructed basis. compute_energy(self: psi4.core.Wavefunction) → float¶; Computes the energy of the Wavefunction. compute_gradient(self: psi4.core.Wavefunction) → psi4.core.Matrix¶; Computes the gradient of the Wavefunction. compute_hessian(self: psi4.core.Wavefunction)",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/api/psi4.core.CCWavefunction.html:12022,charge,charges,12022,psi4manual/1.6.x/api/psi4.core.CCWavefunction.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/api/psi4.core.CCWavefunction.html,2,['charge'],['charges']
Energy Efficiency," DETCI — Number of iterations between least-squares extrapolations. Type: integer; Default: 3. LSE_TOLERANCE (DETCI); DETCI — Minimum converged energy for least-squares extrapolation to be performed. Type: conv double; Default: 3. M_FILE (TRANSQT); TRANSQT — Output integrals file. Type: integer; Default: 0. MADMP2_SLEEP (DFMP2); DFMP2 (Expert) — A helpful option, used only in debugging the MADNESS version. Type: integer; Default: 0. MAT_NUM_COLUMN_PRINT (GLOBALS); GLOBALS (Expert) — Number of columns to print in calls to Matrix::print_mat. Type: integer; Default: 5. MAX_BUCKETS (TRANSQT); TRANSQT — Maximum buckets. Type: integer; Default: 499. MAX_CCD_DIISVECS (SAPT); SAPT — Maximum number of vectors used in CCD-DIIS. Type: integer; Default: 10. MAX_DISP_G_CONVERGENCE (OPTKING); OPTKING — Convergence criterion for geometry optmization: maximum displacement (internal coordinates, atomic units). Type: conv double; Default: 1.2e-3. MAX_ENERGY_G_CONVERGENCE (OPTKING); OPTKING — Convergence criterion for geometry optmization: maximum energy change. Type: conv double; Default: 1.0e-6. MAX_FORCE_G_CONVERGENCE (OPTKING); OPTKING — Convergence criterion for geometry optmization: maximum force (internal coordinates, atomic units). Type: conv double; Default: 3.0e-4. MAX_MOGRAD_CONVERGENCE (OCC); OCC — Convergence criterion for maximum orbital gradient. Type: conv double; Default: 1e-3. MAX_NUM_VECS (DETCI); DETCI — Maximum number of Davidson subspace vectors which can be held on disk for the CI coefficient and sigma vectors. (There is one H(diag) vector and the number of D vectors is equal to the number of roots). When the number of vectors on disk reaches the value of MAX_NUM_VECS, the Davidson subspace will be collapsed to COLLAPSE_SIZE vectors for each root. This is very helpful for saving disk space. Defaults to MAXITER * NUM_ROOTS + NUM_INIT_VECS. Type: integer; Default: 0. MAXITER (CCENERGY); CCENERGY — Maximum number of iterations to solve the CC equations. Type: intege",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b4/autodoc_glossary_options_c-1.html:74392,energy,energy,74392,psi4manual/4.0b4/autodoc_glossary_options_c-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b4/autodoc_glossary_options_c-1.html,2,['energy'],['energy']
Energy Efficiency," DETCI — Number of iterations between least-squares extrapolations. Type: integer; Default: 3. LSE_TOLERANCE (DETCI); DETCI — Minimum converged energy for least-squares extrapolation to be performed. Type: conv double; Default: 3. M_FILE (TRANSQT); TRANSQT — Output integrals file. Type: integer; Default: 0. MADMP2_SLEEP (DFMP2); DFMP2 (Expert) — A helpful option, used only in debugging the MADNESS version. Type: integer; Default: 0. MAT_NUM_COLUMN_PRINT (GLOBALS); GLOBALS (Expert) — Number of columns to print in calls to Matrix::print_mat. Type: integer; Default: 5. MAX_BUCKETS (TRANSQT); TRANSQT — Maximum buckets. Type: integer; Default: 499. MAX_CCD_DIISVECS (SAPT); SAPT — Maximum number of vectors used in CCD-DIIS. Type: integer; Default: 10. MAX_DISP_G_CONVERGENCE (OPTKING); OPTKING — Convergence criterion for geometry optmization: maximum displacement (internal coordinates, atomic units). Type: conv double; Default: 1.2e-3. MAX_ENERGY_G_CONVERGENCE (OPTKING); OPTKING — Convergence criterion for geometry optmization: maximum energy change. Type: conv double; Default: 1.0e-6. MAX_FORCE_G_CONVERGENCE (OPTKING); OPTKING — Convergence criterion for geometry optmization: maximum force (internal coordinates, atomic units). Type: conv double; Default: 3.0e-4. MAX_MOGRAD_CONVERGENCE (OCC); OCC — Convergence criterion for maximum orbital gradient. Type: conv double; Default: 1e-3. MAX_NUM_VECS (DETCI); DETCI — Maximum number of Davidson subspace vectors which can be held on disk for the CI coefficient and sigma vectors. (There is one H(diag) vector and the number of D vectors is equal to the number of roots). When the number of vectors on disk reaches the value of MAX_NUM_VECS, the Davidson subspace will be collapsed to COLLAPSE_SIZE vectors for each root. This is very helpful for saving disk space. Defaults to MAXITER * NUM_ROOTS + NUM_INIT_VECS. Type: integer; Default: 0. MAXITER (CCENERGY); CCENERGY — Maximum number of iterations. Type: integer; Default: 50. MAXITER (C",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b5/autodoc_glossary_options_c-1.html:73074,energy,energy,73074,psi4manual/4.0b5/autodoc_glossary_options_c-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b5/autodoc_glossary_options_c-1.html,2,['energy'],['energy']
Energy Efficiency," DFT custom functional test. lccd-grad1; LCCD cc-pVDZ gradient for the H2O molecule. cc34; RHF-CCSD/cc-pVDZ energy of H2O partitioned into pair energy contributions. dfmp2-freq1; DF-MP2 frequency by difference of energies for H2O. soscf-large; Second-order SCF convergnece: Benzene. opt16; SCF 6-31G(d) optimization of TS for HCN to HNC Performs finite difference hessian calculation. Then optimizes using previous orbitals for scf guess, in subsequent calculations. The last two displacements of the hessian break the plane of symemtry, This test confirms that only the reference geometry, with the correct symmetry, writes orbitals to disk. SCF will fail (ValidationError) otherwise. mcscf3; RHF 6-31G** energy of water, using the MCSCF module and Z-matrix input. cc53; Matches Table II a-CCSD(T)/cc-pVDZ H2O @ 2.5 * Re value from Crawford and Stanton, IJQC 98, 601-611 (1998). casscf-fzc-sp; CASSCF/6-31G** energy point. scf-coverage; Lithium test for coverage. olccd3; OLCCD cc-pVDZ energy with ROHF initial guess for the NO radical. mp2-grad1; MP2 cc-pVDZ gradient for the H2O molecule. dfmp2-2; Density fitted MP2 energy of H2, using density fitted reference and automatic looping over cc-pVDZ and cc-pVTZ basis sets. Results are tabulated using the built in table functions by using the default options and by specifiying the format. opt12; SCF cc-pVDZ geometry optimzation of ketene, starting from bent structure. dfmp2-4; conventional and density-fitting mp2 test of mp2 itself and setting scs-mp2. cisd-sp; 6-31G** H2O Test CISD Energy Point. sapt5; SAPT0 aug-cc-pVTZ computation of the charge transfer energy of the water dimer. dct4; DCT calculation for the HF+ using DC-06 functional. This performs both two-step and simultaneous update of the orbitals and cumulant using DIIS extrapolation. Four-virtual integrals are first handled in the MO Basis for the first two energy computations. In the next two the ao_basis=disk algorithm is used, where the transformation of integrals for four-",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/autodoc_testsuite_corepsi4.html:24373,energy,energy,24373,psi4manual/master/autodoc_testsuite_corepsi4.html,https://psicode.org,https://psicode.org/psi4manual/master/autodoc_testsuite_corepsi4.html,2,['energy'],['energy']
Energy Efficiency," DFT double-hybrid, this quantity is equal; to DFT TOTAL ENERGY. SCF TOTAL GRADIENT¶; The total electronic gradient [E_h/a0] of the SCF stage of the calculation, ({nat}, 3). SCF DIPOLE GRADIENT¶; The derivative of the SCF stage dipole [E_h a0/u] = [(e a0/a0)^2/u] with respect to nuclear perturbations; as a degree-of-freedom by dipole component array, (3 * {nat}, 3). SCF TOTAL HESSIAN¶; The total electronic second derivative [Eh/a0/a0] for the SCF stage, (3 * {nat}, 3 * {nat}). SCF STABILITY EIGENVALUES¶; Array of eigenvalues from UHF or ROHF stability analysis. SCS-CCSD TOTAL ENERGY¶. SCS-CCSD CORRELATION ENERGY¶; The total electronic energy [Eh] and correlation energy component [Eh]; for the CCSD-like method formed by reweighting CCSD DOUBLES ENERGY; by 1.27 opposite-spin and 1.13 same-spin contributions, with; any singles carried along. SCS-MP2 TOTAL ENERGY¶. SCS-MP2 CORRELATION ENERGY¶; The total electronic energy [Eh] and correlation energy component [Eh]; for the MP2-like method formed by reweighting MP2 DOUBLES ENERGY; by 6/5 opposite-spin and 1/3 same-spin contributions, with; any singles carried along. SCS-MP2-VDW TOTAL ENERGY¶. SCS-MP2-VDW CORRELATION ENERGY¶; The total electronic energy [Eh] and correlation energy component [Eh]; for the MP2-like method formed by reweighting MP2 DOUBLES ENERGY; by 1.28 opposite-spin and 0.50 same-spin contributions, with; any singles carried along. DOI: 10.1080/00268970802641242. SCS(N)-MP2 TOTAL ENERGY¶. SCS(N)-MP2 CORRELATION ENERGY¶; The total electronic energy [Eh] and correlation energy component [Eh]; for the MP2-like method formed by reweighting MP2 DOUBLES ENERGY; by 0 opposite-spin and 1.76 same-spin contributions, with; any singles carried along. doi: 10.1021/ct6002737. SCS(N)-OMP2 CORRELATION ENERGY¶. SCS(N)-OMP2 TOTAL ENERGY¶. SCSN-OMP2 CORRELATION ENERGY¶. SCSN-OMP2 TOTAL ENERGY¶; Two spellings of a discontinued QCVariable that may still appear; because the code is frozen pending an update. SCS-OMP2 TOTAL ENER",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/glossary_psivariables-1.html:44362,energy,energy,44362,psi4manual/1.4.0/glossary_psivariables-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/glossary_psivariables-1.html,10,['energy'],['energy']
Energy Efficiency," DIIS extrapolation. Four-virtual integrals are handled in the AO Basis, using integrals stored on disk. omp2-2; OMP2 cc-pVDZ energy with ROHF initial guess orbitals for the NO radical. omp2-5; SOS-OMP2 cc-pVDZ geometry optimization for the H2O molecule. cc22; ROHF-EOM-CCSD/DZ on the lowest two states of each irrep in \(^{3}B_1\) CH2. scf-hess3; CONV SCF 6-31G analytical vs finite-difference tests Tests UHF hessian code for Ca != Cb. mom-h2o-4; MOM excitation from LUMO HOMO+4. fci-h2o; 6-31G H2O Test FCI Energy Point. dct1; DC-06, DC-12, ODC-06 and ODC-12 calculation for the He dimer. This performs a simultaneous update of the orbitals and cumulant, using DIIS extrapolation. Four-virtual integrals are handled in the MO Basis. opt9; Various constrained energy minimizations of HOOH with cc-pvdz RHF. Cartesian-coordinate constrained optimizations of HOOH in internals. cbs-xtpl-energy-conv; Extrapolated water energies - conventional integrals version. cc10; ROHF-CCSD cc-pVDZ energy for the \(^2\Sigma^+\) state of the CN radical. frac-ip-fitting; Omega optimization for LRC functional wB97 on water. cc3; cc3: RHF-CCSD/6-31G** H2O geometry optimization and vibrational frequency analysis by finite-differences of gradients. fsapt-ext-abc-au; analog of fsapt-ext-abc with molecule and external potentials in Bohr. sapt-exch-ind30-inf; SAPT2+3 with S^inf exch-ind30 Geometries taken from the S66x10 database, the shortest-range point (R = 0.7 R_e). dlpnomp2-2; comparison of DF-MP2 and DLPNO-MP2 with a CBS extrapolation. stability3; Test LDA stability analysis against QChem. dfmp2-grad3; DF-MP2 cc-pVDZ gradients for the H2O molecule. options1; check all variety of options parsing. scf4; RHF cc-pVDZ energy for water, automatically scanning the symmetric stretch and bending coordinates using Python’s built-in loop mechanisms. The geometry is specified using a Z-matrix with variables that are updated during the potential energy surface scan, and then the same procedure is performed usi",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/autodoc_testsuite_corepsi4.html:40928,energy,energy,40928,psi4manual/1.8.x/autodoc_testsuite_corepsi4.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/autodoc_testsuite_corepsi4.html,2,['energy'],['energy']
Energy Efficiency," Decimal(mobj.group(2)) - Decimal(mobj.group(1)); psivar['CCSD(T) CORRELATION ENERGY'] = Decimal(mobj.group(2)) - psivar['SCF TOTAL ENERGY']; psivar['CCSD(T) TOTAL ENERGY'] = mobj.group(2). # Process SCS-CC; mobj = re.search(; r'^\s+' + r'(?P<fullCC>(?P<iterCC>CC(?:\w+))(?:\(T\))?)' + r'\s+(?:energy will be calculated.)\s*' +; r'(?:.*?)' +; r'^\s*' + r'(?:@CCENRG-I, Correlation energies.)' + r'\s+(?:ECCAA)\s+' + NUMBER + r'\s*' +; r'^\s+(?:ECCBB)\s+' + NUMBER + '\s*' +; r'^\s+(?:ECCAB)\s+' + NUMBER + '\s*' +; r'^\s+(?:Total)\s+' + NUMBER + '\s*',; outtext, re.MULTILINE | re.DOTALL); if mobj: # PRINT=2 to get SCS-CC components; print('matched scscc'); psivar['%s SAME-SPIN CORRELATION ENERGY' % (mobj.group('iterCC'))] = Decimal(mobj.group(3)) + Decimal(mobj.group(4)); psivar['%s OPPOSITE-SPIN CORRELATION ENERGY' % (mobj.group('iterCC'))] = mobj.group(5); psivar['%s CORRELATION ENERGY' % (mobj.group('iterCC'))] = mobj.group(6). mobj = re.search(; r'^\s+' + r'(?P<fullCC>(?P<iterCC>CC(?:\w+))(?:\(T\))?)' + r'\s+(?:energy will be calculated.)\s*' +; r'(?:.*?)' +; r'^\s+' + r'Amplitude equations converged in' + r'\s*\d+\s*' + r'iterations.\s*' +; r'^\s+' + r'The AA contribution to the correlation energy is:\s+' + NUMBER + r'\s+a.u.\s*' +; r'^\s+' + r'The BB contribution to the correlation energy is:\s+' + NUMBER + r'\s+a.u.\s*' +; r'^\s+' + r'The AB contribution to the correlation energy is:\s+' + NUMBER + r'\s+a.u.\s*' +; r'^\s+' + r'The total correlation energy is\s+' + NUMBER + r'\s+a.u.\s*' +; r'(?:.*?)' +; #r'^\s+' + r'The CC iterations have converged.' + r'\s*$',; r'^\s+' + r'(?:A miracle come to pass. )?' + r'The CC iterations have converged.' + r'\s*$',; outtext, re.MULTILINE | re.DOTALL); if mobj: # PRINT=2 to get SCS components; print('matched scscc2'); psivar['%s SAME-SPIN CORRELATION ENERGY' % (mobj.group('iterCC'))] = Decimal(mobj.group(3)) + Decimal(mobj.group(4)); psivar['%s OPPOSITE-SPIN CORRELATION ENERGY' % (mobj.group('iterCC'))] = mobj.group(5); psivar[",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/_modules/qcdb/cfour.html:14947,energy,energy,14947,psi4manual/1.0.0/_modules/qcdb/cfour.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/_modules/qcdb/cfour.html,1,['energy'],['energy']
Energy Efficiency," Default takes into account symmetry reduction through asymmetric isotopic substitution and is unaffected by user-set symmetry on molecule, so this option is the sole way to influence the symmetry-dependent aspects of the thermodynamic analysis. Note that this factor is handled differently among quantum chemistry software. Type: integer; Default: 1. RSRFO_ALPHA_MAX (OPTKING)¶OPTKING — Absolute maximum value of RS-RFO. Type: double; Default: 1e8. RUN_CCSD (FNOCC)¶FNOCC (Expert) — do ccsd rather than qcisd?. Type: boolean; Default: false. RUN_CCTRANSORT (CCTRANSORT)¶CCTRANSORT — Use cctransort module NOTE: Turning this option off requires separate installation of ccsort and transqt2 modules, see http://github.com/psi4/psi4pasture. Type: boolean; Default: true. RUN_CEPA (FNOCC)¶FNOCC (Expert) — Is this a CEPA job? This parameter is used internally by the pythond driver. Changing its value won’t have any effect on the procedure. Type: boolean; Default: false. RUN_MP2 (FNOCC)¶FNOCC (Expert) — do only evaluate mp2 energy?. Type: boolean; Default: false. RUN_MP3 (FNOCC)¶FNOCC (Expert) — do only evaluate mp3 energy?. Type: boolean; Default: false. RUN_MP4 (FNOCC)¶FNOCC (Expert) — do only evaluate mp4 energy?. Type: boolean; Default: false. S (DETCI)¶DETCI — The value of the spin quantum number \(S\) is given by this option. The default is determined by the value of the multiplicity. This is used for two things: (1) determining the phase of the redundant half of the CI vector when the \(M_s = 0\) component is used (i.e., MS0 = TRUE), and (2) making sure the guess vector has the desired value of \(\langle S^2\rangle\) (if CALC_S_SQUARED is TRUE and ICORE = 1). Type: double; Default: 0.0. S_CHOLESKY_TOLERANCE (SCF)¶SCF — Tolerance for partial Cholesky decomposition of overlap matrix. Type: conv double; Default: 1e-8. S_CUT (DLPNO)¶DLPNO (Expert) — Overlap matrix threshold for removing linear dependencies. Type: double; Default: 1e-8. S_ORTHOGONALIZATION (SCF)¶SCF — SO orthogona",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/autodoc_glossary_options_c-1.html:208189,energy,energy,208189,psi4manual/1.5.0/autodoc_glossary_options_c-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/autodoc_glossary_options_c-1.html,7,['energy'],['energy']
Energy Efficiency," Default takes into account symmetry reduction through asymmetric isotopic substitution and is unaffected by user-set symmetry on molecule, so this option is the sole way to influence the symmetry-dependent aspects of the thermodynamic analysis. Note that this factor is handled differently among quantum chemistry software. Type: integer; Default: 1. RSRFO_ALPHA_MAX (OPTKING)¶OPTKING — Absolute maximum value of RS-RFO. Type: double; Default: 1e8. RUN_CCSD (FNOCC)¶FNOCC (Expert) — do ccsd rather than qcisd?. Type: boolean; Default: false. RUN_CCTRANSORT (CCTRANSORT)¶CCTRANSORT — Use cctransort module NOTE: Turning this option off requires separate installation of ccsort and transqt2 modules, see http://github.com/psi4/psi4pasture. Type: boolean; Default: true. RUN_CEPA (FNOCC)¶FNOCC (Expert) — Is this a CEPA job? This parameter is used internally by the pythond driver. Changing its value won’t have any effect on the procedure. Type: boolean; Default: false. RUN_MP2 (FNOCC)¶FNOCC (Expert) — do only evaluate mp2 energy?. Type: boolean; Default: false. RUN_MP3 (FNOCC)¶FNOCC (Expert) — do only evaluate mp3 energy?. Type: boolean; Default: false. RUN_MP4 (FNOCC)¶FNOCC (Expert) — do only evaluate mp4 energy?. Type: boolean; Default: false. S (DETCI)¶DETCI — The value of the spin quantum number \(S\) is given by this option. The default is determined by the value of the multiplicity. This is used for two things: (1) determining the phase of the redundant half of the CI vector when the \(M_s = 0\) component is used (i.e., MS0 = TRUE), and (2) making sure the guess vector has the desired value of \(\langle S^2\rangle\) (if CALC_S_SQUARED is TRUE and ICORE = 1). Type: double; Default: 0.0. S_CHOLESKY_TOLERANCE (SCF)¶SCF — Tolerance for partial Cholesky decomposition of overlap matrix. Type: conv double; Default: 1e-8. S_ORTHOGONALIZATION (SCF)¶SCF — SO orthogonalization: automatic, symmetric, or canonical?. Type: string; Possible Values: AUTO, SYMMETRIC, CANONICAL, PARTIALCHOLES",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/autodoc_glossary_options_c-1.html:206949,energy,energy,206949,psi4manual/1.4.0/autodoc_glossary_options_c-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/autodoc_glossary_options_c-1.html,2,['energy'],['energy']
Energy Efficiency," Default. CHOLESKY_TOLERANCE¶. tolerance for Cholesky decomposition of the ERI tensor. Type: conv double; Default: 1.0e-4. CEPA_NO_SINGLES¶. Flag to exclude singly excited configurations from a coupled-pair computation. Type: boolean; Default: false. DIPMOM¶. Compute the dipole moment? Note that dipole moments are only available in the FNOCC module for the ACPF, AQCC, CISD, and CEPA(0) methods. Type: boolean; Default: false. Advanced FNOCC Keywords¶. SCS_MP2¶. Do SCS-MP2?. Type: boolean; Default: false. MP2_SCALE_OS¶. Opposite-spin scaling factor for SCS-MP2. Type: double; Default: 1.20. MP2_SCALE_SS¶. Same-spin scaling factor for SCS-MP2. Type: double; Default: 1.0/3.0. SCS_CCSD¶. Do SCS-CCSD?. Type: boolean; Default: false. CC_SCALE_OS¶. Oppposite-spin scaling factor for SCS-CCSD. Type: double; Default: 1.27. CC_SCALE_SS¶. Same-spin scaling factor for SCS-CCSD. Type: double; Default: 1.13. RUN_MP2¶. do only evaluate mp2 energy?. Type: boolean; Default: false. RUN_MP3¶. do only evaluate mp3 energy?. Type: boolean; Default: false. RUN_MP4¶. do only evaluate mp4 energy?. Type: boolean; Default: false. RUN_CCSD¶. do ccsd rather than qcisd?. Type: boolean; Default: false. RUN_CEPA¶. Is this a CEPA job? This parameter is used internally by the pythond driver. Changing its value won’t have any effect on the procedure. Type: boolean; Default: false. COMPUTE_TRIPLES¶. Do compute triples contribution?. Type: boolean; Default: true. COMPUTE_MP4_TRIPLES¶. Do compute MP4 triples contribution?. Type: boolean; Default: false. DFCC¶. Do use density fitting in CC? This keyword is used internally by the driver. Changing its value will have no effect on the computation. Type: boolean; Default: false. CEPA_LEVEL¶. Which coupled-pair method is called? This parameter is used internally by the python driver. Changing its value won’t have any effect on the procedure. Type: string; Default: CEPA(0). Table Of Contents. FNOCC: Frozen natural orbitals for CCSD(T), QCISD(T), CEPA, and MP4; Fr",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b4/fnocc-1.html:14496,energy,energy,14496,psi4manual/4.0b4/fnocc-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b4/fnocc-1.html,2,['energy'],['energy']
Energy Efficiency," Default. CHOLESKY_TOLERANCE¶. tolerance for Cholesky decomposition of the ERI tensor. Type: conv double; Default: 1.0e-4. CEPA_NO_SINGLES¶. Flag to exclude singly excited configurations from a coupled-pair computation. Type: boolean; Default: false. DIPMOM¶. Compute the dipole moment? Note that dipole moments are only available in the FNOCC module for the ACPF, AQCC, CISD, and CEPA(0) methods. Type: boolean; Default: false. Advanced FNOCC Keywords¶. SCS_MP2¶. Do SCS-MP2?. Type: boolean; Default: false. MP2_SCALE_OS¶. Opposite-spin scaling factor for SCS-MP2. Type: double; Default: 1.20. MP2_SCALE_SS¶. Same-spin scaling factor for SCS-MP2. Type: double; Default: 1.0/3.0. SCS_CCSD¶. Do SCS-CCSD?. Type: boolean; Default: false. CC_SCALE_OS¶. Oppposite-spin scaling factor for SCS-CCSD. Type: double; Default: 1.27. CC_SCALE_SS¶. Same-spin scaling factor for SCS-CCSD. Type: double; Default: 1.13. RUN_MP2¶. do only evaluate mp2 energy?. Type: boolean; Default: false. RUN_MP3¶. do only evaluate mp3 energy?. Type: boolean; Default: false. RUN_MP4¶. do only evaluate mp4 energy?. Type: boolean; Default: false. RUN_CCSD¶. do ccsd rather than qcisd?. Type: boolean; Default: false. RUN_CEPA¶. Is this a CEPA job? This parameter is used internally by the pythond driver. Changing its value won’t have any effect on the procedure. Type: boolean; Default: false. COMPUTE_TRIPLES¶. Do compute triples contribution?. Type: boolean; Default: true. COMPUTE_MP4_TRIPLES¶. Do compute MP4 triples contribution?. Type: boolean; Default: false. DFCC¶. Do use density fitting or cholesky decomposition in CC? This keyword is used internally by the driver. Changing its value will have no effect on the computation. Type: boolean; Default: false. CEPA_LEVEL¶. Which coupled-pair method is called? This parameter is used internally by the python driver. Changing its value won’t have any effect on the procedure. Type: string; Default: CEPA(0). Table Of Contents. FNOCC: Frozen natural orbitals for CCSD(T), Q",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/fnocc-1.html:15904,energy,energy,15904,psi4manual/1.0.0/fnocc-1.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/fnocc-1.html,4,['energy'],['energy']
Energy Efficiency," Default. CHOLESKY_TOLERANCE¶. tolerance for Cholesky decomposition of the ERI tensor. Type: conv double; Default: 1.0e-4. CEPA_NO_SINGLES¶. Flag to exclude singly excited configurations from a coupled-pair computation. Type: boolean; Default: false. DIPMOM¶. Compute the dipole moment? Note that dipole moments are only available in the FNOCC module for the ACPF, AQCC, CISD, and CEPA(0) methods. Type: boolean; Default: false. Advanced FNOCC Keywords¶. SCS_MP2¶. Do SCS-MP2?. Type: boolean; Default: false. MP2_SCALE_OS¶. Opposite-spin scaling factor for SCS-MP2. Type: double; Default: 1.20. MP2_SCALE_SS¶. Same-spin scaling factor for SCS-MP2. Type: double; Default: 1.0/3.0. SCS_CCSD¶. Do SCS-CCSD?. Type: boolean; Default: false. CC_SCALE_OS¶. Oppposite-spin scaling factor for SCS-CCSD. Type: double; Default: 1.27. CC_SCALE_SS¶. Same-spin scaling factor for SCS-CCSD. Type: double; Default: 1.13. RUN_MP2¶. do only evaluate mp2 energy?. Type: boolean; Default: false. RUN_MP3¶. do only evaluate mp3 energy?. Type: boolean; Default: false. RUN_MP4¶. do only evaluate mp4 energy?. Type: boolean; Default: false. RUN_CCSD¶. do ccsd rather than qcisd?. Type: boolean; Default: false. RUN_CEPA¶. Is this a CEPA job? This parameter is used internally by the pythond driver. Changing its value won’t have any effect on the procedure. Type: boolean; Default: false. COMPUTE_TRIPLES¶. Do compute triples contribution?. Type: boolean; Default: true. COMPUTE_MP4_TRIPLES¶. Do compute MP4 triples contribution?. Type: boolean; Default: false. DFCC¶. Do use density fitting or cholesky decomposition in CC? This keyword is used internally by the driver. Changing its value will have no effect on the computation. Type: boolean; Default: false. CEPA_LEVEL¶. Which coupled-pair method is called? This parameter is used internally by the python driver. Changing its value won’t have any effect on the procedure. Type: string; Default: CEPA(0). table of contents. FNOCC: Frozen natural orbitals for CCSD(T), Q",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/fnocc-1.html:17954,energy,energy,17954,psi4manual/1.1.0/fnocc-1.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/fnocc-1.html,4,['energy'],['energy']
Energy Efficiency," Default: 1. COSX_OVERLAP_FITTING (SCF)¶SCF (Expert) — Do reduce numerical COSX errors with overlap fitting?. Type: boolean; Default: true. COSX_PRUNING_SCHEME (SCF)¶SCF (Expert) — Pruning scheme for COSX grids. Type: string; Default: ROBUST. COSX_RADIAL_POINTS_FINAL (SCF)¶SCF — Number of radial points in final COSX grid. Type: integer; Default: 35. COSX_RADIAL_POINTS_INITIAL (SCF)¶SCF — Number of radial points in initial COSX grid. Type: integer; Default: 25. COSX_SPHERICAL_POINTS_FINAL (SCF)¶SCF — Number of spherical points in final COSX grid. Type: integer; Default: 110. COSX_SPHERICAL_POINTS_INITIAL (SCF)¶SCF — Number of spherical points in initial COSX grid. Type: integer; Default: 50. COUPLED_INDUCTION (SAPT)¶SAPT (Expert) — Solve the CPHF equations to compute coupled induction and exchange-induction. These are not available for ROHF, and the option is automatically false in this case. In all other cases, coupled induction is strongly recommended. Only turn it off if the induction energy is not going to be used. Type: boolean; Default: true. COUPLING (PSIMRCC)¶PSIMRCC — The order of coupling terms to include in MRCCSDT computations. Type: string; Possible Values: NONE, LINEAR, QUADRATIC, CUBIC; Default: CUBIC. COUPLING_TERMS (PSIMRCC)¶PSIMRCC — Do include the terms that couple the reference determinants?. Type: boolean; Default: true. COVALENT_CONNECT (OPTKING)¶OPTKING — When determining connectivity, a bond is assigned if interatomic distance is less than (this number) * sum of covalent radii. Type: double; Default: 1.3. CPHF_MEM_SAFETY_FACTOR (CPHF)¶CPHF — Memory safety factor for allocating JK. Type: double; Default: 0.75. CPHF_R_CONVERGENCE (FISAPT)¶FISAPT — Convergence criterion for residual of the CPHF coefficients in the SAPT \(E_{ind,resp}^{(20)}\) term. Type: conv double; Default: 1e-8. CPHF_R_CONVERGENCE (SAPT)¶SAPT — Convergence criterion for residual of the CPHF/CPKS coefficients in the SAPT \(E_{ind,resp}^{(20)}\) term. This applies to wavefunctio",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/autodoc_glossary_options_c.html:90447,energy,energy,90447,psi4manual/master/autodoc_glossary_options_c.html,https://psicode.org,https://psicode.org/psi4manual/master/autodoc_glossary_options_c.html,1,['energy'],['energy']
Energy Efficiency," Default: 1. COSX_OVERLAP_FITTING (SCF)¶SCF (Expert) — Do reduce numerical COSX errors with overlap fitting?. Type: boolean; Default: true. COSX_PRUNING_SCHEME (SCF)¶SCF (Expert) — Pruning scheme for COSX grids. Type: string; Default: ROBUST. COSX_RADIAL_POINTS_FINAL (SCF)¶SCF — Number of radial points in final COSX grid. Type: integer; Default: 35. COSX_RADIAL_POINTS_INITIAL (SCF)¶SCF — Number of radial points in initial COSX grid. Type: integer; Default: 25. COSX_SPHERICAL_POINTS_FINAL (SCF)¶SCF — Number of spherical points in final COSX grid. Type: integer; Default: 110. COSX_SPHERICAL_POINTS_INITIAL (SCF)¶SCF — Number of spherical points in initial COSX grid. Type: integer; Default: 50. COUPLED_INDUCTION (SAPT)¶SAPT (Expert) — Solve the CPHF equations to compute coupled induction and exchange-induction. These are not available for ROHF, and the option is automatically false in this case. In all other cases, coupled induction is strongly recommended. Only turn it off if the induction energy is not going to be used. Type: boolean; Default: true. COUPLING (PSIMRCC)¶PSIMRCC — The order of coupling terms to include in MRCCSDT computations. Type: string; Possible Values: NONE, LINEAR, QUADRATIC, CUBIC; Default: CUBIC. COUPLING_TERMS (PSIMRCC)¶PSIMRCC — Do include the terms that couple the reference determinants?. Type: boolean; Default: true. COVALENT_CONNECT (OPTKING)¶OPTKING — When determining connectivity, a bond is assigned if interatomic distance is less than (this number) * sum of covalent radii. Type: double; Default: 1.3. CPHF_MEM_SAFETY_FACTOR (CPHF)¶CPHF — Memory safety factor for allocating JK. Type: double; Default: 0.75. CPHF_TASKS (CPHF)¶CPHF — Which tasks to run CPHF For * Valid choices: * -Polarizability *. Type: array; Default: No Default. CUBEPROP_BASIS_FUNCTIONS (GLOBALS)¶GLOBALS — List of basis function indices for which cube files are generated (1-based). All basis functions computed if empty. Type: array; Default: No Default. CUBEPROP_FILEPATH (G",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/autodoc_glossary_options_c.html:90440,energy,energy,90440,psi4manual/1.9.x/autodoc_glossary_options_c.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/autodoc_glossary_options_c.html,1,['energy'],['energy']
Energy Efficiency, Default: 1e-6. E_CONVERGENCE (CCEOM)¶CCEOM — Convergence criterion for excitation energy (change) in the Davidson algorithm for CC-EOM. See Table Post-SCF Convergence for default convergence criteria for different calculation types. Type: conv double; Default: 1e-6. E_CONVERGENCE (DCT)¶DCT — Convergence criterion for energy. See Table Post-SCF Convergence for default convergence criteria for different calculation types. Type: conv double; Default: 1e-10. E_CONVERGENCE (DETCI)¶DETCI — Convergence criterion for energy. See Table Post-SCF Convergence for default convergence criteria for different calculation types. Type: conv double; Default: 1e-6. E_CONVERGENCE (DFOCC)¶DFOCC — Convergence criterion for energy. See Table Post-SCF Convergence for default convergence criteria for different calculation types. Type: conv double; Default: 1e-6. E_CONVERGENCE (DLPNO)¶DLPNO — Energy convergence criteria for local MP2 iterations. Type: conv double; Default: 1e-6. E_CONVERGENCE (FNOCC)¶FNOCC — Convergence criterion for CC energy. See Table Post-SCF Convergence for default convergence criteria for different calculation types. Note that convergence is met only when E_CONVERGENCE and R_CONVERGENCE are satisfied. Type: conv double; Default: 1.0e-6. E_CONVERGENCE (MCSCF)¶MCSCF — Convergence criterion for energy. Type: conv double; Default: 1e-6. E_CONVERGENCE (MRCC)¶MRCC — Convergence criterion for energy. See Table Post-SCF Convergence for default convergence criteria for different calculation types. This becomes tol (option #16) in fort.56. Type: conv double; Default: 1e-6. E_CONVERGENCE (OCC)¶OCC — Convergence criterion for energy. See Table Post-SCF Convergence for default convergence criteria for different calculation types. Type: conv double; Default: 1e-6. E_CONVERGENCE (PSIMRCC)¶PSIMRCC — Convergence criterion for energy. See Table Post-SCF Convergence for default convergence criteria for different calculation types. Type: conv double; Default: 1e-6. E_CONVERGENCE (SAPT)¶SAP,MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/autodoc_glossary_options_c-1.html:117868,energy,energy,117868,psi4manual/1.5.0/autodoc_glossary_options_c-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/autodoc_glossary_options_c-1.html,6,['energy'],['energy']
Energy Efficiency, Default: 1e-6. E_CONVERGENCE (CCEOM)¶CCEOM — Convergence criterion for excitation energy (change) in the Davidson algorithm for CC-EOM. See Table Post-SCF Convergence for default convergence criteria for different calculation types. Type: conv double; Default: 1e-6. E_CONVERGENCE (DCT)¶DCT — Convergence criterion for energy. See Table Post-SCF Convergence for default convergence criteria for different calculation types. Type: conv double; Default: 1e-10. E_CONVERGENCE (DETCI)¶DETCI — Convergence criterion for energy. See Table Post-SCF Convergence for default convergence criteria for different calculation types. Type: conv double; Default: 1e-6. E_CONVERGENCE (DFOCC)¶DFOCC — Convergence criterion for energy. See Table Post-SCF Convergence for default convergence criteria for different calculation types. Type: conv double; Default: 1e-6. E_CONVERGENCE (DLPNO)¶DLPNO — Energy convergence criteria for local MP2 iterations. Type: conv double; Default: 1e-6. E_CONVERGENCE (FNOCC)¶FNOCC — Convergence criterion for CC energy. See Table Post-SCF Convergence for default convergence criteria for different calculation types. Note that convergence is met only when E_CONVERGENCE and R_CONVERGENCE are satisfied. Type: conv double; Default: 1.0e-6. E_CONVERGENCE (MCSCF)¶MCSCF — Convergence criterion for energy. Type: conv double; Default: 1e-6. E_CONVERGENCE (MRCC)¶MRCC — Convergence criterion for energy. See Table Post-SCF Convergence for default convergence criteria for different calculation types. This becomes tol (option #16) in fort.56. Type: conv double; Default: 1e-6. E_CONVERGENCE (OCC)¶OCC — Convergence criterion for energy. See Table Post-SCF Convergence for default convergence criteria for different calculation types. Type: conv double; Default: 1e-6. E_CONVERGENCE (PSIMRCC)¶PSIMRCC — Convergence criterion for energy. See Table Post-SCF Convergence for default convergence criteria for different calculation types. Type: conv double; Default: 1e-6. E_CONVERGENCE (SCF)¶SCF ,MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/autodoc_glossary_options_c.html:124129,energy,energy,124129,psi4manual/master/autodoc_glossary_options_c.html,https://psicode.org,https://psicode.org/psi4manual/master/autodoc_glossary_options_c.html,1,['energy'],['energy']
Energy Efficiency," Default: false. AIO_DF_INTS¶. Do use asynchronous disk I/O in the formation of the DF integrals? Use may speed up the computation slightly at the cost of spawning an additional thread. Type: boolean; Default: false. NO_RESPONSE¶. Don’t solve the CPHF equations? Evaluate and instead of their response-including coupterparts. Only turn on this option if the induction energy is not going to be used. Type: boolean; Default: false. INTS_TOLERANCE¶. Minimum absolute value below which all three-index DF integrals and those contributing to four-index integrals are neglected. The default is conservative, but there isn’t much to be gained from loosening it, especially for higher-order SAPT. Type: conv double; Default: 1.0e-12. DENOMINATOR_DELTA¶. Maximum error allowed (Max error norm in Delta tensor) in the approximate energy denominators employed for most of the and evaluation. Type: double; Default: 1.0e-6. DENOMINATOR_ALGORITHM¶. Denominator algorithm for PT methods. Laplace transformations are slightly more efficient. Type: string; Possible Values: LAPLACE, CHOLESKY; Default: LAPLACE. SAPT_OS_SCALE¶. The scale factor used for opposite-spin pairs in SCS computations. SS/OS decomposition performed for and terms. Type: double; Default: 6.0/5.0. SAPT_SS_SCALE¶. The scale factor used for same-spin pairs in SCS computations. SS/OS decomposition performed for and terms. Type: double; Default: 1.0/3.0. DEBUG¶. The amount of information to print to the output file. Type: integer; Default: 0. Higher-Order SAPT¶; For smaller systems (up to the size of a nucleic acid base pair), more; accurate interaction energies can be obtained through higher-order SAPT; computations. The SAPT module can perform density-fitted evaluations; of SAPT2, SAPT2+, SAPT2+(3), and SAPT2+3 energies. Publications resulting; from the use of the higher-order SAPT code should cite the following:; [Hohenstein:2010:014101].; A brief note on memory usage: the higher-order SAPT code assumes that; certain quantities c",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b2/sapt-1.html:7332,efficient,efficient,7332,psi4manual/4.0b2/sapt-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b2/sapt-1.html,8,['efficient'],['efficient']
Energy Efficiency," Dipole array [e a0] for the averaged quadratic coupled-cluster level of theory, (3,). AQCC QUADRUPOLE¶; Redundant quadrupole array [e a0^2] for the averaged quadratic coupled-cluster level of theory, (3, 3). AQCC TOTAL ENERGY¶. AQCC CORRELATION ENERGY¶; The total electronic energy [Eh] and correlation energy component [Eh]; for the averaged quadratic coupled-cluster level of theory. BRUECKNER CONVERGED¶; Value 1 (0) when the Brueckner orbitals have (have not) converged. CBS NUMBER¶. NBODY NUMBER¶. FINDIF NUMBER¶; Number of tasks [] the named procedure performs. These are immediate; tasks, so if procedures are nested, the total number of tasks is; the product. CBS TOTAL ENERGY¶. CBS CORRELATION ENERGY¶. CBS REFERENCE ENERGY¶; The total electronic energy [Eh] and its breakdown into reference total; energy [Eh] and correlation correction components [Eh] for the compound; method requested through cbs(). CCname ROOT n TOTAL ENERGY¶. TD-fctl ROOT n TOTAL ENERGY¶; The total electronic energy [Eh] for the requested theory and root n (n starts at 0).; DFT functional labeled if canonical. CCname ROOT n (IN h) TOTAL ENERGY¶. TD-fctl ROOT n (IN h) TOTAL ENERGY¶; The total electronic energy [Eh] for the requested theory and root n within irrep h (n starts at 0).; DFT functional labeled if canonical. CCname ROOT n (h) TOTAL ENERGY¶. TD-fctl ROOT n (h) TOTAL ENERGY¶; The total electronic energy [Eh] for the requested theory and root n, which is of irrep h (n starts at 0).; DFT functional labeled if canonical. CCname ROOT n TOTAL ENERGY - h TRANSITION¶. TD-fctl ROOT n TOTAL ENERGY - h TRANSITION¶; The total electronic energy [Eh] for the requested theory and root n, and the transition is of irrep h, (n starts at 0). CCname ROOT n CORRELATION ENERGY¶; The correlation energy [Eh] for the requested coupled cluster level of theory and root n (n starts at 0).; DFT functional labeled if canonical. CCname ROOT n (IN h) CORRELATION ENERGY¶; The correlation energy [Eh] for the requested co",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/glossary_psivariables.html:8579,energy,energy,8579,psi4manual/1.6.x/glossary_psivariables.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/glossary_psivariables.html,1,['energy'],['energy']
Energy Efficiency," Do ?. Type: boolean; Default: false. DO_THIRD_ORDER (SAPT); SAPT (Expert) — Do compute third-order corrections?. Type: boolean; Default: false. DO_TRIPLETS (CPHF); CPHF — Do triplet states? Default true. Type: boolean; Default: true. DOCC (GLOBALS); GLOBALS — An array containing the number of doubly-occupied orbitals per irrep (in Cotton order). Type: array; Default: No Default. DOCC (MCSCF); MCSCF — The number of doubly occupied orbitals, per irrep. Type: array; Default: No Default. DOMAIN_PRINT (CIS); CIS — Do ?. Type: boolean; Default: false. DOMAIN_PRINT_EXIT (LMP2); LMP2 — Do exit after printing the domains?. Type: boolean; Default: false. DOMAINS (CIS); CIS —. Type: array; Default: No Default. E_CONVERGENCE (CCEOM); CCEOM — Convergence criterion for excitation energy (change) in the Davidson algorithm for CC-EOM. Type: conv double; Default: 1e-8. E_CONVERGENCE (DETCI); DETCI — Convergence criterion for energy. Type: conv double; Default: 1e-6. E_CONVERGENCE (LMP2); LMP2 — Convergence criterion for energy (change). Type: conv double; Default: 1e-7. E_CONVERGENCE (MCSCF); MCSCF — Convergence criterion for energy. Type: conv double; Default: 1e-8. E_CONVERGENCE (MRCC); MRCC — This becomes tol (option #16) in fort.56. Type: conv double; Default: 1e-8. E_CONVERGENCE (OMP2); OMP2 —. Type: conv double; Default: 1e-8. E_CONVERGENCE (PSIMRCC); PSIMRCC — Convergence criterion for energy. Type: conv double; Default: 1e-9. E_CONVERGENCE (SAPT); SAPT — Convergence criterion for energy (change) in the SAPT term during solution of the CPHF equations. Type: conv double; Default: 1e-10. E_CONVERGENCE (SCF); SCF — Convergence criterion for SCF energy. Type: conv double; Default: 1e-8. EOM_GUESS (CCEOM); CCEOM — Specifies a set of single-excitation guess vectors for the EOM-CC procedure. If EOM_GUESS = SINGLES, the guess will be taken from the singles-singles block of the similarity-transformed Hamiltonian, Hbar. If EOM_GUESS = DISK, guess vectors from a previous computation wi",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b2/autodoc_glossary_options_c-1.html:27674,energy,energy,27674,psi4manual/4.0b2/autodoc_glossary_options_c-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b2/autodoc_glossary_options_c-1.html,2,['energy'],['energy']
Energy Efficiency," Documentation: method is_variable; is_variable(...) unbound psi4.Molecule method. is_variable( (Molecule)arg1, (str)arg2) -> bool :. Checks if variable arg2 is in the list, returns true if it is, and returns false if not; C++ signature :. b is_variable(N3psi8MoleculeE {lvalue},Ss). psi4.Molecule.label()¶; Python Library Documentation: method label; label(...) unbound psi4.Molecule method. label( (Molecule)arg1, (int)arg2) -> str :. Gets the original label of the atom as given in the input file (C2, H4); C++ signature :. Ss label(N3psi8MoleculeE {lvalue},i). psi4.Molecule.mass()¶; Python Library Documentation: method mass; mass(...) unbound psi4.Molecule method. mass( (Molecule)arg1, (int)arg2) -> float :. Gets mass of atom arg2; C++ signature :. d mass(N3psi8MoleculeE {lvalue},i). psi4.Molecule.molecular_charge()¶; Python Library Documentation: method molecular_charge; molecular_charge(...) unbound psi4.Molecule method. molecular_charge( (Molecule)arg1) -> int :. Gets the molecular charge; C++ signature :. i molecular_charge(N3psi8MoleculeE {lvalue}). psi4.Molecule.move_to_com()¶; Python Library Documentation: method move_to_com; move_to_com(...) unbound psi4.Molecule method. move_to_com( (Molecule)arg1) -> None :. Moves molecule to center of mass; C++ signature :. void move_to_com(N3psi8MoleculeE {lvalue}). psi4.Molecule.multiplicity()¶; Python Library Documentation: method multiplicity; multiplicity(...) unbound psi4.Molecule method. multiplicity( (Molecule)arg1) -> int :. Gets the multiplicity (defined as 2Ms + 1); C++ signature :. i multiplicity(N3psi8MoleculeE {lvalue}). psi4.Molecule.name()¶; Python Library Documentation: method name; name(...) unbound psi4.Molecule method. name( (Molecule)arg1) -> str :. Gets molecule name; C++ signature :. Ss name(N3psi8MoleculeE {lvalue}). psi4.Molecule.natom()¶; Python Library Documentation: method natom; natom(...) unbound psi4.Molecule method. natom( (Molecule)arg1) -> int :. Number of real atoms; C++ signature :. i nat",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/autodoc_psimod-1.html:244569,charge,charge,244569,psi4manual/1.0.0/autodoc_psimod-1.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/autodoc_psimod-1.html,2,['charge'],['charge']
Energy Efficiency," E(G1 HLC): %20.12lf\n' % hlc1); psi4.print_out(' E(G2 HLC): %20.12lf\n' % hlc); psi4.print_out(' E(ZPE): %20.12lf\n' % zpe); psi4.print_out('\n'); psi4.print_out(' ==> 0 Kelvin Results <==\n'); psi4.print_out('\n'); eg2_0k = eg2 + zpe + hlc; psi4.print_out(' G1: %20.12lf\n' % (eqci + e_plus + e_2df + hlc1 + zpe)); psi4.print_out(' G2(MP2): %20.12lf\n' % eg2_mp2_0k); psi4.print_out(' G2: %20.12lf\n' % eg2_0k). psi4.set_variable(""G1 TOTAL ENERGY"",eqci + e_plus + e_2df + hlc1 + zpe); psi4.set_variable(""G2 TOTAL ENERGY"",eg2_0k); psi4.set_variable(""G2(MP2) TOTAL ENERGY"",eg2_mp2_0k). psi4.print_out('\n'); T = psi4.get_global_option('T'); psi4.print_out(' ==> %3.0lf Kelvin Results <==\n'% T); psi4.print_out('\n'). internal_energy = eg2_mp2_0k + du - zpe / 0.8929; enthalpy = eg2_mp2_0k + dh - zpe / 0.8929; gibbs = eg2_mp2_0k + dg - zpe / 0.8929. psi4.print_out(' G2(MP2) energy: %20.12lf\n' % internal_energy ); psi4.print_out(' G2(MP2) enthalpy: %20.12lf\n' % enthalpy); psi4.print_out(' G2(MP2) free energy: %20.12lf\n' % gibbs); psi4.print_out('\n'). psi4.set_variable(""G2(MP2) INTERNAL ENERGY"",internal_energy); psi4.set_variable(""G2(MP2) ENTHALPY"",enthalpy); psi4.set_variable(""G2(MP2) FREE ENERGY"",gibbs). internal_energy = eg2_0k + du - zpe / 0.8929; enthalpy = eg2_0k + dh - zpe / 0.8929; gibbs = eg2_0k + dg - zpe / 0.8929. psi4.print_out(' G2 energy: %20.12lf\n' % internal_energy ); psi4.print_out(' G2 enthalpy: %20.12lf\n' % enthalpy); psi4.print_out(' G2 free energy: %20.12lf\n' % gibbs). psi4.set_variable(""CURRENT ENERGY"",eg2_0k). psi4.set_variable(""G2 INTERNAL ENERGY"",internal_energy); psi4.set_variable(""G2 ENTHALPY"",enthalpy); psi4.set_variable(""G2 FREE ENERGY"",gibbs). psi4.clean(). optstash.restore(). # return 0K g2 results; return eg2_0k. # aliases for g2; driver.procedures['energy']['gaussian-2'] = run_gaussian_2; driver.procedures['energy']['g2'] = run_gaussian_2. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules   ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/_modules/gaussian_n.html:5617,energy,energy,5617,psi4manual/1.0.0/_modules/gaussian_n.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/_modules/gaussian_n.html,1,['energy'],['energy']
Energy Efficiency," E(G1 HLC): %20.12lf\n' % hlc1); psi4.print_out(' E(G2 HLC): %20.12lf\n' % hlc); psi4.print_out(' E(ZPE): %20.12lf\n' % zpe); psi4.print_out('\n'); psi4.print_out(' ==> 0 Kelvin Results <==\n'); psi4.print_out('\n'); eg2_0k = eg2 + zpe + hlc; psi4.print_out(' G1: %20.12lf\n' % (eqci + e_plus + e_2df + hlc1 + zpe)); psi4.print_out(' G2(MP2): %20.12lf\n' % eg2_mp2_0k); psi4.print_out(' G2: %20.12lf\n' % eg2_0k). psi4.set_variable(""G1 TOTAL ENERGY"",eqci + e_plus + e_2df + hlc1 + zpe); psi4.set_variable(""G2 TOTAL ENERGY"",eg2_0k); psi4.set_variable(""G2(MP2) TOTAL ENERGY"",eg2_mp2_0k). psi4.print_out('\n'); T = psi4.get_global_option('T'); psi4.print_out(' ==> %3.0lf Kelvin Results <==\n'% T); psi4.print_out('\n'). internal_energy = eg2_mp2_0k + du - zpe / 0.8929; enthalpy = eg2_mp2_0k + dh - zpe / 0.8929; gibbs = eg2_mp2_0k + dg - zpe / 0.8929. psi4.print_out(' G2(MP2) energy: %20.12lf\n' % internal_energy ); psi4.print_out(' G2(MP2) enthalpy: %20.12lf\n' % enthalpy); psi4.print_out(' G2(MP2) free energy: %20.12lf\n' % gibbs); psi4.print_out('\n'). psi4.set_variable(""G2(MP2) INTERNAL ENERGY"",internal_energy); psi4.set_variable(""G2(MP2) ENTHALPY"",enthalpy); psi4.set_variable(""G2(MP2) FREE ENERGY"",gibbs). internal_energy = eg2_0k + du - zpe / 0.8929; enthalpy = eg2_0k + dh - zpe / 0.8929; gibbs = eg2_0k + dg - zpe / 0.8929. psi4.print_out(' G2 energy: %20.12lf\n' % internal_energy ); psi4.print_out(' G2 enthalpy: %20.12lf\n' % enthalpy); psi4.print_out(' G2 free energy: %20.12lf\n' % gibbs). psi4.set_variable(""CURRENT ENERGY"",eg2_0k). psi4.set_variable(""G2 INTERNAL ENERGY"",internal_energy); psi4.set_variable(""G2 ENTHALPY"",enthalpy); psi4.set_variable(""G2 FREE ENERGY"",gibbs). psi4.clean(). optstash.restore(). # return 0K g2 results; return eg2_0k. # aliases for g2; procedures['energy']['gaussian-2'] = run_gaussian_2; procedures['energy']['g2'] = run_gaussian_2. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    ; PS",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b5/_modules/gaussian_n.html:5355,energy,energy,5355,psi4manual/4.0b5/_modules/gaussian_n.html,https://psicode.org,https://psicode.org/psi4manual/4.0b5/_modules/gaussian_n.html,1,['energy'],['energy']
Energy Efficiency," E. DMRG-SCF; RHF; CONV; E. DMRG-CASPT2; RHF; CONV; E. [1]; Many methods have a more detailed breakdown of capabilities here. [2]; (1,2); Not all combinations of reference and algorithm type may be available for any variant and derivative. See detailed capabilities tables. [3]; Shown are analytic implementations for energy (E), gradient, (G), and Hessian (H); finite difference derivatives are invoked automatically if analytic not available. [4]; Frozen natural orbital variant available. In particular, RHF available as CONV. [5]; (1,2); Frozen natural orbital variant available. In particular, RHF available as CONV/DF. Summary capabilities of PSI4. “✓” runs analytically. “∷” runs derivative with internal finite difference. Double underline “✓̳” or “∷̳” is default algorithm type when type selector (e.g., CC_TYPE) unspecified.¶. ◻; name ↓ →; ◻; ◻. REFERENCE →; ◻; type[6] ↓ →; FREEZE_CORE[7]→. Restricted (RHF); Unrestricted (UHF); Restricted Open (ROHF). energy(); gradient()[8]; energy(); gradient()[8]; energy(); gradient()[8]. CV; DF; CD; CV; DF; CD; CV; DF; CD; CV; DF; CD; CV; DF; CD; CV; DF; CD. A; F; A; F; A; F; A; F; A; F; A; F; A; F; A; F; A; F; A; F; A; F; A; F; A; F; A; F; A; F; A; F; A; F; A; F. hf. SCF_TYPE; ✓. ✓̳. ✓. ✓. ✓̳. ∷. ✓. ✓̳. ✓. ✓. ✓̳. ∷. ✓. ✓̳. ✓. ✓. ✓̳. ∷. mp2. MP2_TYPE; ✓; ✓; ✓̳; ✓̳; ✓; ✓; ✓; ∷; ✓̳; ✓̳; ∷; ∷; ✓; ✓; ✓̳; ✓̳; ✓; ✓; ✓; ∷; ✓̳; ✓̳; ∷; ∷; ✓; ✓; ✓̳; ✓̳; ✓; ✓; ∷; ∷; ∷̳; ∷̳; ∷; ∷. mp2.5. MP_TYPE; ✓; ✓; ✓̳; ✓̳; ✓; ✓; ✓; ∷; ✓̳; ✓̳; ∷; ∷; ✓; ✓; ✓̳; ✓̳; ✓; ✓; ✓; ∷; ✓̳; ✓̳; ∷; ∷. mp3. MP_TYPE; ✓; ✓; ✓̳; ✓̳; ✓; ✓; ✓; ∷; ✓̳; ✓̳; ∷; ∷; ✓; ✓; ✓̳; ✓̳; ✓; ✓; ✓; ∷; ✓̳; ✓̳; ∷; ∷. mp4(sdq). MP_TYPE; ✓̳; ✓̳. mp4, mpn[9]. MP_TYPE; ✓̳; ✓̳. zapt2, zaptn[9]. MP_TYPE. ✓̳; ✓̳. cisd, cin[9]. CI_TYPE; ✓̳; ✓̳. ✓̳; ✓̳. qcisd. CI_TYPE; ✓̳; ✓̳. qcisd(t). CI_TYPE; ✓̳; ✓̳. fci. CI_TYPE; ✓̳; ✓̳. ✓̳; ✓̳. remp2. CC_TYPE; ✓̳; ✓̳; ✓; ✓; ✓; ✓. ✓̳; ✓̳; ✓; ✓; ✓; ✓. lccd. CC_TYPE; ✓̳; ✓̳; ✓; ✓; ✓; ✓; ✓̳; ∷̳; ✓; ✓; ∷; ∷; ✓̳; ✓̳; ✓; ✓; ✓; ✓; ✓̳; ∷̳; ✓; ✓; ∷; ∷. lccsd, cepa(0). CC_TY",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/introduction.html:27059,energy,energy,27059,psi4manual/1.7.x/introduction.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/introduction.html,12,['energy'],['energy']
